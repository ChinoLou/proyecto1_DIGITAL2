

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri May 01 14:41:17 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0015                     _CCPR1L	set	21
   207  0017                     _CCP1CONbits	set	23
   208  0012                     _T2CONbits	set	18
   209  000C                     _PIR1bits	set	12
   210  001B                     _CCPR2L	set	27
   211  001D                     _CCP2CONbits	set	29
   212  0009                     _PORTE	set	9
   213  0008                     _PORTD	set	8
   214  0007                     _PORTC	set	7
   215  0006                     _PORTB	set	6
   216  0005                     _PORTA	set	5
   217  0009                     _PORTEbits	set	9
   218  008F                     _OSCCONbits	set	143
   219  0092                     _PR2	set	146
   220  0087                     _TRISCbits	set	135
   221  0089                     _TRISE	set	137
   222  0188                     _ANSEL	set	392
   223                           
   224                           ; #config settings
   225  0000                     
   226                           	psect	cinit
   227  07F9                     start_initialization:	
   228  07F9                     __initialization:	
   229                           
   230                           ; Clear objects allocated to COMMON
   231  07F9  01F7               	clrf	__pbssCOMMON& (0+127)
   232  07FA  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   233  07FB  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   234  07FC                     end_of_initialization:	
   235                           ;End of C runtime variable initialization code
   236                           
   237  07FC                     __end_of__initialization:	
   238  07FC  0183               	clrf	3
   239  07FD  120A  118A  2E8E   	ljmp	_main	;jump to C main() function
   240                           
   241                           	psect	bssCOMMON
   242  0077                     __pbssCOMMON:	
   243  0077                     _ESTADO3:	
   244  0077                     	ds	1
   245  0078                     _ESTADO2:	
   246  0078                     	ds	1
   247  0079                     _ESTADO:	
   248  0079                     	ds	1
   249                           
   250                           	psect	cstackCOMMON
   251  0070                     __pcstackCOMMON:	
   252  0070                     ?_config_PORTS:	
   253  0070                     ?_init_PWM_1:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ??_init_PWM_1:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_init_PWM_2:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ??_init_PWM_2:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ?_Servo1_grados:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ??_Servo1_grados:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ?_Servo2_grados:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ??_Servo2_grados:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?_OSC_config:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ?_main:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     OSC_config@frecuencia:	
   284                           ; 1 bytes @ 0x0
   285                           
   286                           
   287                           ; 4 bytes @ 0x0
   288  0070                     	ds	2
   289  0072                     Servo1_grados@Servo1_grados:	
   290  0072                     Servo2_grados@Servo2_grados:	
   291                           ; 1 bytes @ 0x2
   292                           
   293                           
   294                           ; 1 bytes @ 0x2
   295  0072                     	ds	2
   296  0074                     ??_config_PORTS:	
   297  0074                     ??_OSC_config:	
   298                           ; 1 bytes @ 0x4
   299                           
   300  0074                     ??_main:	
   301                           ; 1 bytes @ 0x4
   302                           
   303                           
   304                           ; 1 bytes @ 0x4
   305  0074                     	ds	3
   306                           
   307                           	psect	maintext
   308  068E                     __pmaintext:	
   309 ;;
   310 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   311 ;;
   312 ;; *************** function _main *****************
   313 ;; Defined at:
   314 ;;		line 54 in file "Servo_PWM.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;		None
   319 ;; Return value:  Size  Location     Type
   320 ;;                  1    wreg      void 
   321 ;; Registers used:
   322 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   323 ;; Tracked objects:
   324 ;;		On entry : B00/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   328 ;;      Params:         0       0       0       0       0
   329 ;;      Locals:         0       0       0       0       0
   330 ;;      Temps:          3       0       0       0       0
   331 ;;      Totals:         3       0       0       0       0
   332 ;;Total ram usage:        3 bytes
   333 ;; Hardware stack levels required when called:    2
   334 ;; This function calls:
   335 ;;		_Servo1_grados
   336 ;;		_Servo2_grados
   337 ;;		_config_PORTS
   338 ;;		_init_PWM_1
   339 ;;		_init_PWM_2
   340 ;; This function is called by:
   341 ;;		Startup code after reset
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           
   346                           ;psect for function _main
   347  068E                     _main:	
   348  068E                     l1522:	
   349                           ;incstack = 0
   350                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   351                           
   352                           
   353                           ;Servo_PWM.c: 55:     config_PORTS();
   354  068E  120A  118A  24E0  120A  118A  	fcall	_config_PORTS
   355  0693                     l1524:	
   356                           
   357                           ;Servo_PWM.c: 56:     init_PWM_1();
   358  0693  120A  118A  24FC  120A  118A  	fcall	_init_PWM_1
   359  0698                     l1526:	
   360                           
   361                           ;Servo_PWM.c: 57:     init_PWM_2();
   362  0698  120A  118A  2519  120A  118A  	fcall	_init_PWM_2
   363  069D                     l1528:	
   364                           
   365                           ;Servo_PWM.c: 63:         if (PORTEbits.RE0 == 1){
   366  069D  1283               	bcf	3,5	;RP0=0, select bank0
   367  069E  1303               	bcf	3,6	;RP1=0, select bank0
   368  069F  1C09               	btfss	9,0	;volatile
   369  06A0  2EA2               	goto	u91
   370  06A1  2EA3               	goto	u90
   371  06A2                     u91:	
   372  06A2  2F3C               	goto	l1562
   373  06A3                     u90:	
   374  06A3                     l1530:	
   375                           
   376                           ;Servo_PWM.c: 64:             ESTADO = 1;
   377  06A3  01F9               	clrf	_ESTADO
   378  06A4  0AF9               	incf	_ESTADO,f
   379  06A5                     l1532:	
   380                           
   381                           ;Servo_PWM.c: 65:             _delay((unsigned long)((250)*(1000000/4000000.0)));
   382  06A5  3014               	movlw	20
   383  06A6  00F4               	movwf	??_main
   384  06A7                     u157:	
   385  06A7  0BF4               	decfsz	??_main,f
   386  06A8  2EA7               	goto	u157
   387  06A9  0000               	nop
   388  06AA                     l1534:	
   389  06AA                     l1536:	
   390                           ;Servo_PWM.c: 68:             if (ESTADO == 1 && PORTEbits.RE0 == 0) {
   391                           
   392  06AA  1283               	bcf	3,5	;RP0=0, select bank0
   393  06AB  1303               	bcf	3,6	;RP1=0, select bank0
   394  06AC  1809               	btfsc	9,0	;volatile
   395  06AD  2EAF               	goto	u101
   396  06AE  2EB0               	goto	u100
   397  06AF                     u101:	
   398  06AF  2F3B               	goto	l1560
   399  06B0                     u100:	
   400  06B0                     l1538:	
   401                           
   402                           ;Servo_PWM.c: 69:                 Servo1_grados(0);
   403  06B0  3000               	movlw	0
   404  06B1  120A  118A  2538  120A  118A  	fcall	_Servo1_grados
   405  06B6                     l1540:	
   406                           
   407                           ;Servo_PWM.c: 70:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
   408  06B6  3002               	movlw	2
   409  06B7  00F6               	movwf	??_main+2
   410  06B8  3045               	movlw	69
   411  06B9  00F5               	movwf	??_main+1
   412  06BA  30A9               	movlw	169
   413  06BB  00F4               	movwf	??_main
   414  06BC                     u167:	
   415  06BC  0BF4               	decfsz	??_main,f
   416  06BD  2EBC               	goto	u167
   417  06BE  0BF5               	decfsz	??_main+1,f
   418  06BF  2EBC               	goto	u167
   419  06C0  0BF6               	decfsz	??_main+2,f
   420  06C1  2EBC               	goto	u167
   421  06C2  2EC3               	nop2
   422  06C3                     l1542:	
   423                           
   424                           ;Servo_PWM.c: 71:                 Servo1_grados(10);
   425  06C3  300A               	movlw	10
   426  06C4  120A  118A  2538  120A  118A  	fcall	_Servo1_grados
   427                           
   428                           ;Servo_PWM.c: 72:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
   429  06C9  3002               	movlw	2
   430  06CA  00F6               	movwf	??_main+2
   431  06CB  3045               	movlw	69
   432  06CC  00F5               	movwf	??_main+1
   433  06CD  30A9               	movlw	169
   434  06CE  00F4               	movwf	??_main
   435  06CF                     u177:	
   436  06CF  0BF4               	decfsz	??_main,f
   437  06D0  2ECF               	goto	u177
   438  06D1  0BF5               	decfsz	??_main+1,f
   439  06D2  2ECF               	goto	u177
   440  06D3  0BF6               	decfsz	??_main+2,f
   441  06D4  2ECF               	goto	u177
   442  06D5  2ED6               	nop2
   443  06D6                     l1544:	
   444                           
   445                           ;Servo_PWM.c: 73:                 Servo1_grados(30);
   446  06D6  301E               	movlw	30
   447  06D7  120A  118A  2538  120A  118A  	fcall	_Servo1_grados
   448  06DC                     l1546:	
   449                           
   450                           ;Servo_PWM.c: 74:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
   451  06DC  3002               	movlw	2
   452  06DD  00F6               	movwf	??_main+2
   453  06DE  3045               	movlw	69
   454  06DF  00F5               	movwf	??_main+1
   455  06E0  30A9               	movlw	169
   456  06E1  00F4               	movwf	??_main
   457  06E2                     u187:	
   458  06E2  0BF4               	decfsz	??_main,f
   459  06E3  2EE2               	goto	u187
   460  06E4  0BF5               	decfsz	??_main+1,f
   461  06E5  2EE2               	goto	u187
   462  06E6  0BF6               	decfsz	??_main+2,f
   463  06E7  2EE2               	goto	u187
   464  06E8  2EE9               	nop2
   465                           
   466                           ;Servo_PWM.c: 75:                 Servo1_grados(45);
   467  06E9  302D               	movlw	45
   468  06EA  120A  118A  2538  120A  118A  	fcall	_Servo1_grados
   469  06EF                     l1548:	
   470                           
   471                           ;Servo_PWM.c: 77:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
   472  06EF  3002               	movlw	2
   473  06F0  00F6               	movwf	??_main+2
   474  06F1  3045               	movlw	69
   475  06F2  00F5               	movwf	??_main+1
   476  06F3  30A9               	movlw	169
   477  06F4  00F4               	movwf	??_main
   478  06F5                     u197:	
   479  06F5  0BF4               	decfsz	??_main,f
   480  06F6  2EF5               	goto	u197
   481  06F7  0BF5               	decfsz	??_main+1,f
   482  06F8  2EF5               	goto	u197
   483  06F9  0BF6               	decfsz	??_main+2,f
   484  06FA  2EF5               	goto	u197
   485  06FB  2EFC               	nop2
   486  06FC                     l1550:	
   487                           
   488                           ;Servo_PWM.c: 78:                 Servo1_grados(90);
   489  06FC  305A               	movlw	90
   490  06FD  120A  118A  2538  120A  118A  	fcall	_Servo1_grados
   491                           
   492                           ;Servo_PWM.c: 79:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
   493  0702  3002               	movlw	2
   494  0703  00F6               	movwf	??_main+2
   495  0704  3045               	movlw	69
   496  0705  00F5               	movwf	??_main+1
   497  0706  30A9               	movlw	169
   498  0707  00F4               	movwf	??_main
   499  0708                     u207:	
   500  0708  0BF4               	decfsz	??_main,f
   501  0709  2F08               	goto	u207
   502  070A  0BF5               	decfsz	??_main+1,f
   503  070B  2F08               	goto	u207
   504  070C  0BF6               	decfsz	??_main+2,f
   505  070D  2F08               	goto	u207
   506  070E  2F0F               	nop2
   507  070F                     l1552:	
   508                           
   509                           ;Servo_PWM.c: 80:                 Servo1_grados(120);
   510  070F  3078               	movlw	120
   511  0710  120A  118A  2538  120A  118A  	fcall	_Servo1_grados
   512  0715                     l1554:	
   513                           
   514                           ;Servo_PWM.c: 81:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
   515  0715  3002               	movlw	2
   516  0716  00F6               	movwf	??_main+2
   517  0717  3045               	movlw	69
   518  0718  00F5               	movwf	??_main+1
   519  0719  30A9               	movlw	169
   520  071A  00F4               	movwf	??_main
   521  071B                     u217:	
   522  071B  0BF4               	decfsz	??_main,f
   523  071C  2F1B               	goto	u217
   524  071D  0BF5               	decfsz	??_main+1,f
   525  071E  2F1B               	goto	u217
   526  071F  0BF6               	decfsz	??_main+2,f
   527  0720  2F1B               	goto	u217
   528  0721  2F22               	nop2
   529                           
   530                           ;Servo_PWM.c: 82:                 Servo1_grados(150);
   531  0722  3096               	movlw	150
   532  0723  120A  118A  2538  120A  118A  	fcall	_Servo1_grados
   533  0728                     l1556:	
   534                           
   535                           ;Servo_PWM.c: 83:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
   536  0728  3002               	movlw	2
   537  0729  00F6               	movwf	??_main+2
   538  072A  3045               	movlw	69
   539  072B  00F5               	movwf	??_main+1
   540  072C  30A9               	movlw	169
   541  072D  00F4               	movwf	??_main
   542  072E                     u227:	
   543  072E  0BF4               	decfsz	??_main,f
   544  072F  2F2E               	goto	u227
   545  0730  0BF5               	decfsz	??_main+1,f
   546  0731  2F2E               	goto	u227
   547  0732  0BF6               	decfsz	??_main+2,f
   548  0733  2F2E               	goto	u227
   549  0734  2F35               	nop2
   550  0735                     l1558:	
   551                           
   552                           ;Servo_PWM.c: 84:                 Servo1_grados(180);
   553  0735  30B4               	movlw	180
   554  0736  120A  118A  2538  120A  118A  	fcall	_Servo1_grados
   555  073B                     l1560:	
   556                           
   557                           ;Servo_PWM.c: 88:             ESTADO = 0;
   558  073B  01F9               	clrf	_ESTADO
   559  073C                     l1562:	
   560                           
   561                           ;Servo_PWM.c: 92:         if (PORTEbits.RE1 == 1){
   562  073C  1283               	bcf	3,5	;RP0=0, select bank0
   563  073D  1303               	bcf	3,6	;RP1=0, select bank0
   564  073E  1C89               	btfss	9,1	;volatile
   565  073F  2F41               	goto	u111
   566  0740  2F42               	goto	u110
   567  0741                     u111:	
   568  0741  2F56               	goto	l1576
   569  0742                     u110:	
   570  0742                     l1564:	
   571                           
   572                           ;Servo_PWM.c: 93:             ESTADO2 = 1;
   573  0742  01F8               	clrf	_ESTADO2
   574  0743  0AF8               	incf	_ESTADO2,f
   575  0744                     l1566:	
   576                           
   577                           ;Servo_PWM.c: 94:             _delay((unsigned long)((250)*(1000000/4000000.0)));
   578  0744  3014               	movlw	20
   579  0745  00F4               	movwf	??_main
   580  0746                     u237:	
   581  0746  0BF4               	decfsz	??_main,f
   582  0747  2F46               	goto	u237
   583  0748  0000               	nop
   584  0749                     l1568:	
   585  0749                     l1570:	
   586                           ;Servo_PWM.c: 97:             if (ESTADO2 == 1 && PORTEbits.RE1 == 0) {
   587                           
   588  0749  1283               	bcf	3,5	;RP0=0, select bank0
   589  074A  1303               	bcf	3,6	;RP1=0, select bank0
   590  074B  1889               	btfsc	9,1	;volatile
   591  074C  2F4E               	goto	u121
   592  074D  2F4F               	goto	u120
   593  074E                     u121:	
   594  074E  2F55               	goto	l1574
   595  074F                     u120:	
   596  074F                     l1572:	
   597                           
   598                           ;Servo_PWM.c: 99:                 Servo1_grados(90);
   599  074F  305A               	movlw	90
   600  0750  120A  118A  2538  120A  118A  	fcall	_Servo1_grados
   601  0755                     l1574:	
   602                           
   603                           ;Servo_PWM.c: 104:             ESTADO2 = 0;
   604  0755  01F8               	clrf	_ESTADO2
   605  0756                     l1576:	
   606                           
   607                           ;Servo_PWM.c: 109:         if (PORTEbits.RE2 == 1){
   608  0756  1283               	bcf	3,5	;RP0=0, select bank0
   609  0757  1303               	bcf	3,6	;RP1=0, select bank0
   610  0758  1D09               	btfss	9,2	;volatile
   611  0759  2F5B               	goto	u131
   612  075A  2F5C               	goto	u130
   613  075B                     u131:	
   614  075B  2E9D               	goto	l1528
   615  075C                     u130:	
   616  075C                     l1578:	
   617                           
   618                           ;Servo_PWM.c: 110:             ESTADO3 = 1;
   619  075C  01F7               	clrf	_ESTADO3
   620  075D  0AF7               	incf	_ESTADO3,f
   621  075E                     l1580:	
   622                           
   623                           ;Servo_PWM.c: 111:             _delay((unsigned long)((250)*(1000000/4000000.0)));
   624  075E  3014               	movlw	20
   625  075F  00F4               	movwf	??_main
   626  0760                     u247:	
   627  0760  0BF4               	decfsz	??_main,f
   628  0761  2F60               	goto	u247
   629  0762  0000               	nop
   630  0763                     l1582:	
   631  0763                     l1584:	
   632                           ;Servo_PWM.c: 113:             if (ESTADO3 == 1 && PORTEbits.RE2 == 0) {
   633                           
   634  0763  1283               	bcf	3,5	;RP0=0, select bank0
   635  0764  1303               	bcf	3,6	;RP1=0, select bank0
   636  0765  1909               	btfsc	9,2	;volatile
   637  0766  2F68               	goto	u141
   638  0767  2F69               	goto	u140
   639  0768                     u141:	
   640  0768  2FF4               	goto	l1608
   641  0769                     u140:	
   642  0769                     l1586:	
   643                           
   644                           ;Servo_PWM.c: 114:                  Servo2_grados(0);
   645  0769  3000               	movlw	0
   646  076A  120A  118A  258D  120A  118A  	fcall	_Servo2_grados
   647  076F                     l1588:	
   648                           
   649                           ;Servo_PWM.c: 115:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
   650  076F  3002               	movlw	2
   651  0770  00F6               	movwf	??_main+2
   652  0771  3045               	movlw	69
   653  0772  00F5               	movwf	??_main+1
   654  0773  30A9               	movlw	169
   655  0774  00F4               	movwf	??_main
   656  0775                     u257:	
   657  0775  0BF4               	decfsz	??_main,f
   658  0776  2F75               	goto	u257
   659  0777  0BF5               	decfsz	??_main+1,f
   660  0778  2F75               	goto	u257
   661  0779  0BF6               	decfsz	??_main+2,f
   662  077A  2F75               	goto	u257
   663  077B  2F7C               	nop2
   664  077C                     l1590:	
   665                           
   666                           ;Servo_PWM.c: 116:                 Servo2_grados(10);
   667  077C  300A               	movlw	10
   668  077D  120A  118A  258D  120A  118A  	fcall	_Servo2_grados
   669                           
   670                           ;Servo_PWM.c: 117:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
   671  0782  3002               	movlw	2
   672  0783  00F6               	movwf	??_main+2
   673  0784  3045               	movlw	69
   674  0785  00F5               	movwf	??_main+1
   675  0786  30A9               	movlw	169
   676  0787  00F4               	movwf	??_main
   677  0788                     u267:	
   678  0788  0BF4               	decfsz	??_main,f
   679  0789  2F88               	goto	u267
   680  078A  0BF5               	decfsz	??_main+1,f
   681  078B  2F88               	goto	u267
   682  078C  0BF6               	decfsz	??_main+2,f
   683  078D  2F88               	goto	u267
   684  078E  2F8F               	nop2
   685  078F                     l1592:	
   686                           
   687                           ;Servo_PWM.c: 118:                 Servo2_grados(30);
   688  078F  301E               	movlw	30
   689  0790  120A  118A  258D  120A  118A  	fcall	_Servo2_grados
   690  0795                     l1594:	
   691                           
   692                           ;Servo_PWM.c: 119:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
   693  0795  3002               	movlw	2
   694  0796  00F6               	movwf	??_main+2
   695  0797  3045               	movlw	69
   696  0798  00F5               	movwf	??_main+1
   697  0799  30A9               	movlw	169
   698  079A  00F4               	movwf	??_main
   699  079B                     u277:	
   700  079B  0BF4               	decfsz	??_main,f
   701  079C  2F9B               	goto	u277
   702  079D  0BF5               	decfsz	??_main+1,f
   703  079E  2F9B               	goto	u277
   704  079F  0BF6               	decfsz	??_main+2,f
   705  07A0  2F9B               	goto	u277
   706  07A1  2FA2               	nop2
   707                           
   708                           ;Servo_PWM.c: 120:                 Servo2_grados(45);
   709  07A2  302D               	movlw	45
   710  07A3  120A  118A  258D  120A  118A  	fcall	_Servo2_grados
   711  07A8                     l1596:	
   712                           
   713                           ;Servo_PWM.c: 122:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
   714  07A8  3002               	movlw	2
   715  07A9  00F6               	movwf	??_main+2
   716  07AA  3045               	movlw	69
   717  07AB  00F5               	movwf	??_main+1
   718  07AC  30A9               	movlw	169
   719  07AD  00F4               	movwf	??_main
   720  07AE                     u287:	
   721  07AE  0BF4               	decfsz	??_main,f
   722  07AF  2FAE               	goto	u287
   723  07B0  0BF5               	decfsz	??_main+1,f
   724  07B1  2FAE               	goto	u287
   725  07B2  0BF6               	decfsz	??_main+2,f
   726  07B3  2FAE               	goto	u287
   727  07B4  2FB5               	nop2
   728  07B5                     l1598:	
   729                           
   730                           ;Servo_PWM.c: 123:                 Servo2_grados(90);
   731  07B5  305A               	movlw	90
   732  07B6  120A  118A  258D  120A  118A  	fcall	_Servo2_grados
   733                           
   734                           ;Servo_PWM.c: 124:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
   735  07BB  3002               	movlw	2
   736  07BC  00F6               	movwf	??_main+2
   737  07BD  3045               	movlw	69
   738  07BE  00F5               	movwf	??_main+1
   739  07BF  30A9               	movlw	169
   740  07C0  00F4               	movwf	??_main
   741  07C1                     u297:	
   742  07C1  0BF4               	decfsz	??_main,f
   743  07C2  2FC1               	goto	u297
   744  07C3  0BF5               	decfsz	??_main+1,f
   745  07C4  2FC1               	goto	u297
   746  07C5  0BF6               	decfsz	??_main+2,f
   747  07C6  2FC1               	goto	u297
   748  07C7  2FC8               	nop2
   749  07C8                     l1600:	
   750                           
   751                           ;Servo_PWM.c: 125:                 Servo2_grados(120);
   752  07C8  3078               	movlw	120
   753  07C9  120A  118A  258D  120A  118A  	fcall	_Servo2_grados
   754  07CE                     l1602:	
   755                           
   756                           ;Servo_PWM.c: 126:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
   757  07CE  3002               	movlw	2
   758  07CF  00F6               	movwf	??_main+2
   759  07D0  3045               	movlw	69
   760  07D1  00F5               	movwf	??_main+1
   761  07D2  30A9               	movlw	169
   762  07D3  00F4               	movwf	??_main
   763  07D4                     u307:	
   764  07D4  0BF4               	decfsz	??_main,f
   765  07D5  2FD4               	goto	u307
   766  07D6  0BF5               	decfsz	??_main+1,f
   767  07D7  2FD4               	goto	u307
   768  07D8  0BF6               	decfsz	??_main+2,f
   769  07D9  2FD4               	goto	u307
   770  07DA  2FDB               	nop2
   771                           
   772                           ;Servo_PWM.c: 127:                 Servo2_grados(150);
   773  07DB  3096               	movlw	150
   774  07DC  120A  118A  258D  120A  118A  	fcall	_Servo2_grados
   775  07E1                     l1604:	
   776                           
   777                           ;Servo_PWM.c: 128:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
   778  07E1  3002               	movlw	2
   779  07E2  00F6               	movwf	??_main+2
   780  07E3  3045               	movlw	69
   781  07E4  00F5               	movwf	??_main+1
   782  07E5  30A9               	movlw	169
   783  07E6  00F4               	movwf	??_main
   784  07E7                     u317:	
   785  07E7  0BF4               	decfsz	??_main,f
   786  07E8  2FE7               	goto	u317
   787  07E9  0BF5               	decfsz	??_main+1,f
   788  07EA  2FE7               	goto	u317
   789  07EB  0BF6               	decfsz	??_main+2,f
   790  07EC  2FE7               	goto	u317
   791  07ED  2FEE               	nop2
   792  07EE                     l1606:	
   793                           
   794                           ;Servo_PWM.c: 129:                 Servo2_grados(180);
   795  07EE  30B4               	movlw	180
   796  07EF  120A  118A  258D  120A  118A  	fcall	_Servo2_grados
   797  07F4                     l1608:	
   798                           
   799                           ;Servo_PWM.c: 134:             ESTADO3 = 0;
   800  07F4  01F7               	clrf	_ESTADO3
   801  07F5  2E9D               	goto	l1528
   802  07F6  120A  118A  2800   	ljmp	start
   803  07F9                     __end_of_main:	
   804                           
   805                           	psect	text1
   806  0519                     __ptext1:	
   807 ;; *************** function _init_PWM_2 *****************
   808 ;; Defined at:
   809 ;;		line 189 in file "Servo_PWM.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   823 ;;      Params:         0       0       0       0       0
   824 ;;      Locals:         0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0
   826 ;;      Totals:         0       0       0       0       0
   827 ;;Total ram usage:        0 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		_main
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           
   837                           ;psect for function _init_PWM_2
   838  0519                     _init_PWM_2:	
   839  0519                     l858:	
   840                           ;incstack = 0
   841                           ; Regs used in _init_PWM_2: [wreg]
   842                           
   843                           
   844                           ;Servo_PWM.c: 190:     TRISCbits.TRISC2 = 1;
   845  0519  1683               	bsf	3,5	;RP0=1, select bank1
   846  051A  1303               	bcf	3,6	;RP1=0, select bank1
   847  051B  1507               	bsf	7,2	;volatile
   848  051C                     l860:	
   849                           
   850                           ;Servo_PWM.c: 193:     PR2 = 200;
   851  051C  30C8               	movlw	200
   852  051D  0092               	movwf	18	;volatile
   853  051E                     l862:	
   854                           
   855                           ;Servo_PWM.c: 195:     CCP1CONbits.CCP1M3 = 1;
   856  051E  1283               	bcf	3,5	;RP0=0, select bank0
   857  051F  1303               	bcf	3,6	;RP1=0, select bank0
   858  0520  1597               	bsf	23,3	;volatile
   859  0521                     l864:	
   860                           
   861                           ;Servo_PWM.c: 196:     CCP1CONbits.CCP1M2 = 1;
   862  0521  1517               	bsf	23,2	;volatile
   863  0522                     l866:	
   864                           
   865                           ;Servo_PWM.c: 197:     CCP1CONbits.CCP1M1 = 0;
   866  0522  1097               	bcf	23,1	;volatile
   867  0523                     l868:	
   868                           
   869                           ;Servo_PWM.c: 198:     CCP1CONbits.CCP1M0 = 0;
   870  0523  1017               	bcf	23,0	;volatile
   871  0524                     l870:	
   872                           
   873                           ;Servo_PWM.c: 200:     CCP1CONbits.P1M1 = 0;
   874  0524  1397               	bcf	23,7	;volatile
   875  0525                     l872:	
   876                           
   877                           ;Servo_PWM.c: 201:     CCP1CONbits.P1M0 = 0;
   878  0525  1317               	bcf	23,6	;volatile
   879                           
   880                           ;Servo_PWM.c: 204:     CCPR2L = 0b00011011;
   881  0526  301B               	movlw	27
   882  0527  009B               	movwf	27	;volatile
   883  0528                     l874:	
   884                           
   885                           ;Servo_PWM.c: 205:     CCP1CONbits.DC1B0 = 1;
   886  0528  1617               	bsf	23,4	;volatile
   887  0529                     l876:	
   888                           
   889                           ;Servo_PWM.c: 206:     CCP1CONbits.DC1B1 = 1;
   890  0529  1697               	bsf	23,5	;volatile
   891  052A                     l878:	
   892                           
   893                           ;Servo_PWM.c: 208:     PIR1bits.TMR2IF = 0;
   894  052A  108C               	bcf	12,1	;volatile
   895  052B                     l880:	
   896                           
   897                           ;Servo_PWM.c: 209:     T2CONbits.T2CKPS1 = 1;
   898  052B  1492               	bsf	18,1	;volatile
   899  052C                     l882:	
   900                           
   901                           ;Servo_PWM.c: 210:     T2CONbits.T2CKPS0 = 1;
   902  052C  1412               	bsf	18,0	;volatile
   903  052D                     l884:	
   904                           
   905                           ;Servo_PWM.c: 212:     T2CONbits.TMR2ON = 1;
   906  052D  1512               	bsf	18,2	;volatile
   907                           
   908                           ;Servo_PWM.c: 214:     while(PIR1bits.TMR2IF == 1){
   909  052E  2D30               	goto	l80
   910  052F                     l81:	
   911                           
   912                           ;Servo_PWM.c: 215:         PIR1bits.TMR2IF = 0;
   913  052F  108C               	bcf	12,1	;volatile
   914  0530                     l80:	
   915                           ;Servo_PWM.c: 216:     }
   916                           
   917                           
   918                           ;Servo_PWM.c: 214:     while(PIR1bits.TMR2IF == 1){
   919  0530  188C               	btfsc	12,1	;volatile
   920  0531  2D33               	goto	u21
   921  0532  2D34               	goto	u20
   922  0533                     u21:	
   923  0533  2D2F               	goto	l81
   924  0534                     u20:	
   925  0534                     l82:	
   926                           
   927                           ;Servo_PWM.c: 218:     TRISCbits.TRISC2 = 0;
   928  0534  1683               	bsf	3,5	;RP0=1, select bank1
   929  0535  1303               	bcf	3,6	;RP1=0, select bank1
   930  0536  1107               	bcf	7,2	;volatile
   931  0537                     l83:	
   932  0537  0008               	return
   933  0538                     __end_of_init_PWM_2:	
   934                           
   935                           	psect	text2
   936  04FC                     __ptext2:	
   937 ;; *************** function _init_PWM_1 *****************
   938 ;; Defined at:
   939 ;;		line 160 in file "Servo_PWM.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   953 ;;      Params:         0       0       0       0       0
   954 ;;      Locals:         0       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0
   956 ;;      Totals:         0       0       0       0       0
   957 ;;Total ram usage:        0 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; This function calls:
   960 ;;		Nothing
   961 ;; This function is called by:
   962 ;;		_main
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           
   967                           ;psect for function _init_PWM_1
   968  04FC                     _init_PWM_1:	
   969  04FC                     l834:	
   970                           ;incstack = 0
   971                           ; Regs used in _init_PWM_1: [wreg]
   972                           
   973                           
   974                           ;Servo_PWM.c: 161:     TRISCbits.TRISC1 = 1;
   975  04FC  1683               	bsf	3,5	;RP0=1, select bank1
   976  04FD  1303               	bcf	3,6	;RP1=0, select bank1
   977  04FE  1487               	bsf	7,1	;volatile
   978  04FF                     l836:	
   979                           
   980                           ;Servo_PWM.c: 164:     PR2 = 200;
   981  04FF  30C8               	movlw	200
   982  0500  0092               	movwf	18	;volatile
   983  0501                     l838:	
   984                           
   985                           ;Servo_PWM.c: 166:     CCP2CONbits.CCP2M3 = 1;
   986  0501  1283               	bcf	3,5	;RP0=0, select bank0
   987  0502  1303               	bcf	3,6	;RP1=0, select bank0
   988  0503  159D               	bsf	29,3	;volatile
   989  0504                     l840:	
   990                           
   991                           ;Servo_PWM.c: 167:     CCP2CONbits.CCP2M2 = 1;
   992  0504  151D               	bsf	29,2	;volatile
   993  0505                     l842:	
   994                           
   995                           ;Servo_PWM.c: 168:     CCP2CONbits.CCP2M1 = 1;
   996  0505  149D               	bsf	29,1	;volatile
   997  0506                     l844:	
   998                           
   999                           ;Servo_PWM.c: 169:     CCP2CONbits.CCP2M0 = 1;
  1000  0506  141D               	bsf	29,0	;volatile
  1001                           
  1002                           ;Servo_PWM.c: 172:     CCPR2L = 0b00011011;
  1003  0507  301B               	movlw	27
  1004  0508  009B               	movwf	27	;volatile
  1005  0509                     l846:	
  1006                           
  1007                           ;Servo_PWM.c: 173:     CCP2CONbits.DC2B0 = 1;
  1008  0509  161D               	bsf	29,4	;volatile
  1009  050A                     l848:	
  1010                           
  1011                           ;Servo_PWM.c: 174:     CCP2CONbits.DC2B1 = 1;
  1012  050A  169D               	bsf	29,5	;volatile
  1013  050B                     l850:	
  1014                           
  1015                           ;Servo_PWM.c: 176:     PIR1bits.TMR2IF = 0;
  1016  050B  108C               	bcf	12,1	;volatile
  1017  050C                     l852:	
  1018                           
  1019                           ;Servo_PWM.c: 177:     T2CONbits.T2CKPS1 = 1;
  1020  050C  1492               	bsf	18,1	;volatile
  1021  050D                     l854:	
  1022                           
  1023                           ;Servo_PWM.c: 178:     T2CONbits.T2CKPS0 = 1;
  1024  050D  1412               	bsf	18,0	;volatile
  1025  050E                     l856:	
  1026                           
  1027                           ;Servo_PWM.c: 180:     T2CONbits.TMR2ON = 1;
  1028  050E  1512               	bsf	18,2	;volatile
  1029                           
  1030                           ;Servo_PWM.c: 182:     while(PIR1bits.TMR2IF == 1){
  1031  050F  2D11               	goto	l74
  1032  0510                     l75:	
  1033                           
  1034                           ;Servo_PWM.c: 183:         PIR1bits.TMR2IF = 0;
  1035  0510  108C               	bcf	12,1	;volatile
  1036  0511                     l74:	
  1037                           ;Servo_PWM.c: 184:     }
  1038                           
  1039                           
  1040                           ;Servo_PWM.c: 182:     while(PIR1bits.TMR2IF == 1){
  1041  0511  188C               	btfsc	12,1	;volatile
  1042  0512  2D14               	goto	u11
  1043  0513  2D15               	goto	u10
  1044  0514                     u11:	
  1045  0514  2D10               	goto	l75
  1046  0515                     u10:	
  1047  0515                     l76:	
  1048                           
  1049                           ;Servo_PWM.c: 186:     TRISCbits.TRISC1 = 0;
  1050  0515  1683               	bsf	3,5	;RP0=1, select bank1
  1051  0516  1303               	bcf	3,6	;RP1=0, select bank1
  1052  0517  1087               	bcf	7,1	;volatile
  1053  0518                     l77:	
  1054  0518  0008               	return
  1055  0519                     __end_of_init_PWM_1:	
  1056                           
  1057                           	psect	text3
  1058  04E0                     __ptext3:	
  1059 ;; *************** function _config_PORTS *****************
  1060 ;; Defined at:
  1061 ;;		line 145 in file "Servo_PWM.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;		None
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;		None
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1075 ;;      Params:         0       0       0       0       0
  1076 ;;      Locals:         0       0       0       0       0
  1077 ;;      Temps:          0       0       0       0       0
  1078 ;;      Totals:         0       0       0       0       0
  1079 ;;Total ram usage:        0 bytes
  1080 ;; Hardware stack levels used:    1
  1081 ;; Hardware stack levels required when called:    1
  1082 ;; This function calls:
  1083 ;;		_OSC_config
  1084 ;; This function is called by:
  1085 ;;		_main
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           
  1090                           ;psect for function _config_PORTS
  1091  04E0                     _config_PORTS:	
  1092  04E0                     l1506:	
  1093                           ;incstack = 0
  1094                           ; Regs used in _config_PORTS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1095                           
  1096                           
  1097                           ;Servo_PWM.c: 146:     OSC_config(1000000);
  1098  04E0  3000               	movlw	0
  1099  04E1  00F3               	movwf	OSC_config@frecuencia+3
  1100  04E2  300F               	movlw	15
  1101  04E3  00F2               	movwf	OSC_config@frecuencia+2
  1102  04E4  3042               	movlw	66
  1103  04E5  00F1               	movwf	OSC_config@frecuencia+1
  1104  04E6  3040               	movlw	64
  1105  04E7  00F0               	movwf	OSC_config@frecuencia
  1106  04E8  120A  118A  25E2  120A  118A  	fcall	_OSC_config
  1107  04ED                     l1508:	
  1108                           
  1109                           ;Servo_PWM.c: 147:     ANSEL = 0;
  1110  04ED  1683               	bsf	3,5	;RP0=1, select bank3
  1111  04EE  1703               	bsf	3,6	;RP1=1, select bank3
  1112  04EF  0188               	clrf	8	;volatile
  1113  04F0                     l1510:	
  1114                           
  1115                           ;Servo_PWM.c: 149:     TRISE = 0b11111111;
  1116  04F0  30FF               	movlw	255
  1117  04F1  1683               	bsf	3,5	;RP0=1, select bank1
  1118  04F2  1303               	bcf	3,6	;RP1=0, select bank1
  1119  04F3  0089               	movwf	9	;volatile
  1120  04F4                     l1512:	
  1121                           
  1122                           ;Servo_PWM.c: 151:     PORTA = 0x00;
  1123  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  1124  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  1125  04F6  0185               	clrf	5	;volatile
  1126  04F7                     l1514:	
  1127                           
  1128                           ;Servo_PWM.c: 152:     PORTB = 0x00;
  1129  04F7  0186               	clrf	6	;volatile
  1130  04F8                     l1516:	
  1131                           
  1132                           ;Servo_PWM.c: 153:     PORTC = 0x00;
  1133  04F8  0187               	clrf	7	;volatile
  1134  04F9                     l1518:	
  1135                           
  1136                           ;Servo_PWM.c: 154:     PORTD = 0x00;
  1137  04F9  0188               	clrf	8	;volatile
  1138  04FA                     l1520:	
  1139                           
  1140                           ;Servo_PWM.c: 155:     PORTE = 0x00;
  1141  04FA  0189               	clrf	9	;volatile
  1142  04FB                     l71:	
  1143  04FB  0008               	return
  1144  04FC                     __end_of_config_PORTS:	
  1145                           
  1146                           	psect	text4
  1147  05E2                     __ptext4:	
  1148 ;; *************** function _OSC_config *****************
  1149 ;; Defined at:
  1150 ;;		line 222 in file "Servo_PWM.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;  frecuencia      4    0[COMMON] unsigned long 
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1164 ;;      Params:         4       0       0       0       0
  1165 ;;      Locals:         0       0       0       0       0
  1166 ;;      Temps:          0       0       0       0       0
  1167 ;;      Totals:         4       0       0       0       0
  1168 ;;Total ram usage:        4 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; This function calls:
  1171 ;;		Nothing
  1172 ;; This function is called by:
  1173 ;;		_config_PORTS
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           
  1178                           ;psect for function _OSC_config
  1179  05E2                     _OSC_config:	
  1180  05E2                     l1416:	
  1181                           ;incstack = 0
  1182                           ; Regs used in _OSC_config: [wreg-fsr0h+status,2+status,0]
  1183                           
  1184                           
  1185                           ;Servo_PWM.c: 223:     switch(frecuencia){
  1186  05E2  2E1E               	goto	l1436
  1187  05E3                     l1418:	
  1188                           
  1189                           ;Servo_PWM.c: 225:             OSCCONbits.IRCF = 0b111;
  1190  05E3  3070               	movlw	112
  1191  05E4  1683               	bsf	3,5	;RP0=1, select bank1
  1192  05E5  1303               	bcf	3,6	;RP1=0, select bank1
  1193  05E6  048F               	iorwf	15,f	;volatile
  1194                           
  1195                           ;Servo_PWM.c: 226:             break;
  1196  05E7  2E8D               	goto	l97
  1197  05E8                     l1420:	
  1198                           
  1199                           ;Servo_PWM.c: 228:             OSCCONbits.IRCF = 0b110;
  1200  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  1201  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  1202  05EA  080F               	movf	15,w	;volatile
  1203  05EB  398F               	andlw	-113
  1204  05EC  3860               	iorlw	96
  1205  05ED  008F               	movwf	15	;volatile
  1206                           
  1207                           ;Servo_PWM.c: 229:             break;
  1208  05EE  2E8D               	goto	l97
  1209  05EF                     l1422:	
  1210                           
  1211                           ;Servo_PWM.c: 231:             OSCCONbits.IRCF = 0b101;
  1212  05EF  1683               	bsf	3,5	;RP0=1, select bank1
  1213  05F0  1303               	bcf	3,6	;RP1=0, select bank1
  1214  05F1  080F               	movf	15,w	;volatile
  1215  05F2  398F               	andlw	-113
  1216  05F3  3850               	iorlw	80
  1217  05F4  008F               	movwf	15	;volatile
  1218                           
  1219                           ;Servo_PWM.c: 232:             break;
  1220  05F5  2E8D               	goto	l97
  1221  05F6                     l1424:	
  1222                           
  1223                           ;Servo_PWM.c: 234:             OSCCONbits.IRCF = 0b100;
  1224  05F6  1683               	bsf	3,5	;RP0=1, select bank1
  1225  05F7  1303               	bcf	3,6	;RP1=0, select bank1
  1226  05F8  080F               	movf	15,w	;volatile
  1227  05F9  398F               	andlw	-113
  1228  05FA  3840               	iorlw	64
  1229  05FB  008F               	movwf	15	;volatile
  1230                           
  1231                           ;Servo_PWM.c: 235:             break;
  1232  05FC  2E8D               	goto	l97
  1233  05FD                     l1426:	
  1234                           
  1235                           ;Servo_PWM.c: 237:             OSCCONbits.IRCF = 0b011;
  1236  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  1237  05FE  1303               	bcf	3,6	;RP1=0, select bank1
  1238  05FF  080F               	movf	15,w	;volatile
  1239  0600  398F               	andlw	-113
  1240  0601  3830               	iorlw	48
  1241  0602  008F               	movwf	15	;volatile
  1242                           
  1243                           ;Servo_PWM.c: 238:             break;
  1244  0603  2E8D               	goto	l97
  1245  0604                     l1428:	
  1246                           
  1247                           ;Servo_PWM.c: 240:             OSCCONbits.IRCF = 0b010;
  1248  0604  1683               	bsf	3,5	;RP0=1, select bank1
  1249  0605  1303               	bcf	3,6	;RP1=0, select bank1
  1250  0606  080F               	movf	15,w	;volatile
  1251  0607  398F               	andlw	-113
  1252  0608  3820               	iorlw	32
  1253  0609  008F               	movwf	15	;volatile
  1254                           
  1255                           ;Servo_PWM.c: 241:             break;
  1256  060A  2E8D               	goto	l97
  1257  060B                     l1430:	
  1258                           
  1259                           ;Servo_PWM.c: 243:             OSCCONbits.IRCF = 0b001;
  1260  060B  1683               	bsf	3,5	;RP0=1, select bank1
  1261  060C  1303               	bcf	3,6	;RP1=0, select bank1
  1262  060D  080F               	movf	15,w	;volatile
  1263  060E  398F               	andlw	-113
  1264  060F  3810               	iorlw	16
  1265  0610  008F               	movwf	15	;volatile
  1266                           
  1267                           ;Servo_PWM.c: 244:             break;
  1268  0611  2E8D               	goto	l97
  1269  0612                     l1432:	
  1270                           
  1271                           ;Servo_PWM.c: 246:             OSCCONbits.IRCF = 0b000;
  1272  0612  308F               	movlw	-113
  1273  0613  1683               	bsf	3,5	;RP0=1, select bank1
  1274  0614  1303               	bcf	3,6	;RP1=0, select bank1
  1275  0615  058F               	andwf	15,f	;volatile
  1276                           
  1277                           ;Servo_PWM.c: 247:             break;
  1278  0616  2E8D               	goto	l97
  1279  0617                     l1434:	
  1280                           
  1281                           ;Servo_PWM.c: 249:             OSCCONbits.IRCF = 0b110;
  1282  0617  1683               	bsf	3,5	;RP0=1, select bank1
  1283  0618  1303               	bcf	3,6	;RP1=0, select bank1
  1284  0619  080F               	movf	15,w	;volatile
  1285  061A  398F               	andlw	-113
  1286  061B  3860               	iorlw	96
  1287  061C  008F               	movwf	15	;volatile
  1288                           
  1289                           ;Servo_PWM.c: 250:     }
  1290  061D  2E8D               	goto	l97
  1291  061E                     l1436:	
  1292                           
  1293                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 9 sub-sw
      +                          itches
  1294                           ; Switch size 1, requested type "simple"
  1295                           ; Number of cases is 1, Range of values is 0 to 0
  1296                           ; switch strategies available:
  1297                           ; Name         Instructions Cycles
  1298                           ; simple_byte            4     3 (average)
  1299                           ; direct_byte           11     8 (fixed)
  1300                           ; jumptable            260     6 (fixed)
  1301                           ;	Chosen strategy is simple_byte
  1302  061E  0873               	movf	OSC_config@frecuencia+3,w
  1303  061F  3A00               	xorlw	0	; case 0
  1304  0620  1903               	skipnz
  1305  0621  2E73               	goto	l2006
  1306  0622  2E17               	goto	l1434
  1307  0623                     l1990:	
  1308                           
  1309                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1310                           ; Switch size 1, requested type "simple"
  1311                           ; Number of cases is 1, Range of values is 125 to 125
  1312                           ; switch strategies available:
  1313                           ; Name         Instructions Cycles
  1314                           ; simple_byte            4     3 (average)
  1315                           ; direct_byte           14    11 (fixed)
  1316                           ; jumptable            263     9 (fixed)
  1317                           ;	Chosen strategy is simple_byte
  1318  0623  0871               	movf	OSC_config@frecuencia+1,w
  1319  0624  3A7D               	xorlw	125	; case 125
  1320  0625  1903               	skipnz
  1321  0626  2E28               	goto	l2008
  1322  0627  2E17               	goto	l1434
  1323  0628                     l2008:	
  1324                           
  1325                           ; Switch size 1, requested type "simple"
  1326                           ; Number of cases is 1, Range of values is 0 to 0
  1327                           ; switch strategies available:
  1328                           ; Name         Instructions Cycles
  1329                           ; simple_byte            4     3 (average)
  1330                           ; direct_byte           11     8 (fixed)
  1331                           ; jumptable            260     6 (fixed)
  1332                           ;	Chosen strategy is simple_byte
  1333  0628  0870               	movf	OSC_config@frecuencia,w
  1334  0629  3A00               	xorlw	0	; case 0
  1335  062A  1903               	skipnz
  1336  062B  2E12               	goto	l1432
  1337  062C  2E17               	goto	l1434
  1338  062D                     l1992:	
  1339                           
  1340                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1341                           ; Switch size 1, requested type "simple"
  1342                           ; Number of cases is 1, Range of values is 232 to 232
  1343                           ; switch strategies available:
  1344                           ; Name         Instructions Cycles
  1345                           ; simple_byte            4     3 (average)
  1346                           ; direct_byte           14    11 (fixed)
  1347                           ; jumptable            263     9 (fixed)
  1348                           ;	Chosen strategy is simple_byte
  1349  062D  0871               	movf	OSC_config@frecuencia+1,w
  1350  062E  3AE8               	xorlw	232	; case 232
  1351  062F  1903               	skipnz
  1352  0630  2E32               	goto	l2010
  1353  0631  2E17               	goto	l1434
  1354  0632                     l2010:	
  1355                           
  1356                           ; Switch size 1, requested type "simple"
  1357                           ; Number of cases is 1, Range of values is 72 to 72
  1358                           ; switch strategies available:
  1359                           ; Name         Instructions Cycles
  1360                           ; simple_byte            4     3 (average)
  1361                           ; direct_byte           14    11 (fixed)
  1362                           ; jumptable            263     9 (fixed)
  1363                           ;	Chosen strategy is simple_byte
  1364  0632  0870               	movf	OSC_config@frecuencia,w
  1365  0633  3A48               	xorlw	72	; case 72
  1366  0634  1903               	skipnz
  1367  0635  2E0B               	goto	l1430
  1368  0636  2E17               	goto	l1434
  1369  0637                     l1994:	
  1370                           
  1371                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1372                           ; Switch size 1, requested type "simple"
  1373                           ; Number of cases is 1, Range of values is 208 to 208
  1374                           ; switch strategies available:
  1375                           ; Name         Instructions Cycles
  1376                           ; simple_byte            4     3 (average)
  1377                           ; direct_byte           14    11 (fixed)
  1378                           ; jumptable            263     9 (fixed)
  1379                           ;	Chosen strategy is simple_byte
  1380  0637  0871               	movf	OSC_config@frecuencia+1,w
  1381  0638  3AD0               	xorlw	208	; case 208
  1382  0639  1903               	skipnz
  1383  063A  2E3C               	goto	l2012
  1384  063B  2E17               	goto	l1434
  1385  063C                     l2012:	
  1386                           
  1387                           ; Switch size 1, requested type "simple"
  1388                           ; Number of cases is 1, Range of values is 144 to 144
  1389                           ; switch strategies available:
  1390                           ; Name         Instructions Cycles
  1391                           ; simple_byte            4     3 (average)
  1392                           ; direct_byte           14    11 (fixed)
  1393                           ; jumptable            263     9 (fixed)
  1394                           ;	Chosen strategy is simple_byte
  1395  063C  0870               	movf	OSC_config@frecuencia,w
  1396  063D  3A90               	xorlw	144	; case 144
  1397  063E  1903               	skipnz
  1398  063F  2E04               	goto	l1428
  1399  0640  2E17               	goto	l1434
  1400  0641                     l1996:	
  1401                           
  1402                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1403                           ; Switch size 1, requested type "simple"
  1404                           ; Number of cases is 1, Range of values is 161 to 161
  1405                           ; switch strategies available:
  1406                           ; Name         Instructions Cycles
  1407                           ; simple_byte            4     3 (average)
  1408                           ; direct_byte           14    11 (fixed)
  1409                           ; jumptable            263     9 (fixed)
  1410                           ;	Chosen strategy is simple_byte
  1411  0641  0871               	movf	OSC_config@frecuencia+1,w
  1412  0642  3AA1               	xorlw	161	; case 161
  1413  0643  1903               	skipnz
  1414  0644  2E46               	goto	l2014
  1415  0645  2E17               	goto	l1434
  1416  0646                     l2014:	
  1417                           
  1418                           ; Switch size 1, requested type "simple"
  1419                           ; Number of cases is 1, Range of values is 32 to 32
  1420                           ; switch strategies available:
  1421                           ; Name         Instructions Cycles
  1422                           ; simple_byte            4     3 (average)
  1423                           ; direct_byte           14    11 (fixed)
  1424                           ; jumptable            263     9 (fixed)
  1425                           ;	Chosen strategy is simple_byte
  1426  0646  0870               	movf	OSC_config@frecuencia,w
  1427  0647  3A20               	xorlw	32	; case 32
  1428  0648  1903               	skipnz
  1429  0649  2DFD               	goto	l1426
  1430  064A  2E17               	goto	l1434
  1431  064B                     l1998:	
  1432                           
  1433                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1434                           ; Switch size 1, requested type "simple"
  1435                           ; Number of cases is 1, Range of values is 66 to 66
  1436                           ; switch strategies available:
  1437                           ; Name         Instructions Cycles
  1438                           ; simple_byte            4     3 (average)
  1439                           ; direct_byte           14    11 (fixed)
  1440                           ; jumptable            263     9 (fixed)
  1441                           ;	Chosen strategy is simple_byte
  1442  064B  0871               	movf	OSC_config@frecuencia+1,w
  1443  064C  3A42               	xorlw	66	; case 66
  1444  064D  1903               	skipnz
  1445  064E  2E50               	goto	l2016
  1446  064F  2E17               	goto	l1434
  1447  0650                     l2016:	
  1448                           
  1449                           ; Switch size 1, requested type "simple"
  1450                           ; Number of cases is 1, Range of values is 64 to 64
  1451                           ; switch strategies available:
  1452                           ; Name         Instructions Cycles
  1453                           ; simple_byte            4     3 (average)
  1454                           ; direct_byte           14    11 (fixed)
  1455                           ; jumptable            263     9 (fixed)
  1456                           ;	Chosen strategy is simple_byte
  1457  0650  0870               	movf	OSC_config@frecuencia,w
  1458  0651  3A40               	xorlw	64	; case 64
  1459  0652  1903               	skipnz
  1460  0653  2DF6               	goto	l1424
  1461  0654  2E17               	goto	l1434
  1462  0655                     l2000:	
  1463                           
  1464                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1465                           ; Switch size 1, requested type "simple"
  1466                           ; Number of cases is 1, Range of values is 132 to 132
  1467                           ; switch strategies available:
  1468                           ; Name         Instructions Cycles
  1469                           ; simple_byte            4     3 (average)
  1470                           ; direct_byte           14    11 (fixed)
  1471                           ; jumptable            263     9 (fixed)
  1472                           ;	Chosen strategy is simple_byte
  1473  0655  0871               	movf	OSC_config@frecuencia+1,w
  1474  0656  3A84               	xorlw	132	; case 132
  1475  0657  1903               	skipnz
  1476  0658  2E5A               	goto	l2018
  1477  0659  2E17               	goto	l1434
  1478  065A                     l2018:	
  1479                           
  1480                           ; Switch size 1, requested type "simple"
  1481                           ; Number of cases is 1, Range of values is 128 to 128
  1482                           ; switch strategies available:
  1483                           ; Name         Instructions Cycles
  1484                           ; simple_byte            4     3 (average)
  1485                           ; direct_byte           14    11 (fixed)
  1486                           ; jumptable            263     9 (fixed)
  1487                           ;	Chosen strategy is simple_byte
  1488  065A  0870               	movf	OSC_config@frecuencia,w
  1489  065B  3A80               	xorlw	128	; case 128
  1490  065C  1903               	skipnz
  1491  065D  2DEF               	goto	l1422
  1492  065E  2E17               	goto	l1434
  1493  065F                     l2002:	
  1494                           
  1495                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1496                           ; Switch size 1, requested type "simple"
  1497                           ; Number of cases is 1, Range of values is 9 to 9
  1498                           ; switch strategies available:
  1499                           ; Name         Instructions Cycles
  1500                           ; simple_byte            4     3 (average)
  1501                           ; direct_byte           14    11 (fixed)
  1502                           ; jumptable            263     9 (fixed)
  1503                           ;	Chosen strategy is simple_byte
  1504  065F  0871               	movf	OSC_config@frecuencia+1,w
  1505  0660  3A09               	xorlw	9	; case 9
  1506  0661  1903               	skipnz
  1507  0662  2E64               	goto	l2020
  1508  0663  2E17               	goto	l1434
  1509  0664                     l2020:	
  1510                           
  1511                           ; Switch size 1, requested type "simple"
  1512                           ; Number of cases is 1, Range of values is 0 to 0
  1513                           ; switch strategies available:
  1514                           ; Name         Instructions Cycles
  1515                           ; simple_byte            4     3 (average)
  1516                           ; direct_byte           11     8 (fixed)
  1517                           ; jumptable            260     6 (fixed)
  1518                           ;	Chosen strategy is simple_byte
  1519  0664  0870               	movf	OSC_config@frecuencia,w
  1520  0665  3A00               	xorlw	0	; case 0
  1521  0666  1903               	skipnz
  1522  0667  2DE8               	goto	l1420
  1523  0668  2E17               	goto	l1434
  1524  0669                     l2004:	
  1525                           
  1526                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1527                           ; Switch size 1, requested type "simple"
  1528                           ; Number of cases is 1, Range of values is 18 to 18
  1529                           ; switch strategies available:
  1530                           ; Name         Instructions Cycles
  1531                           ; simple_byte            4     3 (average)
  1532                           ; direct_byte           14    11 (fixed)
  1533                           ; jumptable            263     9 (fixed)
  1534                           ;	Chosen strategy is simple_byte
  1535  0669  0871               	movf	OSC_config@frecuencia+1,w
  1536  066A  3A12               	xorlw	18	; case 18
  1537  066B  1903               	skipnz
  1538  066C  2E6E               	goto	l2022
  1539  066D  2E17               	goto	l1434
  1540  066E                     l2022:	
  1541                           
  1542                           ; Switch size 1, requested type "simple"
  1543                           ; Number of cases is 1, Range of values is 0 to 0
  1544                           ; switch strategies available:
  1545                           ; Name         Instructions Cycles
  1546                           ; simple_byte            4     3 (average)
  1547                           ; direct_byte           11     8 (fixed)
  1548                           ; jumptable            260     6 (fixed)
  1549                           ;	Chosen strategy is simple_byte
  1550  066E  0870               	movf	OSC_config@frecuencia,w
  1551  066F  3A00               	xorlw	0	; case 0
  1552  0670  1903               	skipnz
  1553  0671  2DE3               	goto	l1418
  1554  0672  2E17               	goto	l1434
  1555  0673                     l2006:	
  1556                           
  1557                           ; Switch size 1, requested type "simple"
  1558                           ; Number of cases is 8, Range of values is 0 to 122
  1559                           ; switch strategies available:
  1560                           ; Name         Instructions Cycles
  1561                           ; simple_byte           25    13 (average)
  1562                           ; jumptable            260     6 (fixed)
  1563                           ;	Chosen strategy is simple_byte
  1564  0673  0872               	movf	OSC_config@frecuencia+2,w
  1565  0674  3A00               	xorlw	0	; case 0
  1566  0675  1903               	skipnz
  1567  0676  2E23               	goto	l1990
  1568  0677  3A01               	xorlw	1	; case 1
  1569  0678  1903               	skipnz
  1570  0679  2E2D               	goto	l1992
  1571  067A  3A02               	xorlw	2	; case 3
  1572  067B  1903               	skipnz
  1573  067C  2E37               	goto	l1994
  1574  067D  3A04               	xorlw	4	; case 7
  1575  067E  1903               	skipnz
  1576  067F  2E41               	goto	l1996
  1577  0680  3A08               	xorlw	8	; case 15
  1578  0681  1903               	skipnz
  1579  0682  2E4B               	goto	l1998
  1580  0683  3A11               	xorlw	17	; case 30
  1581  0684  1903               	skipnz
  1582  0685  2E55               	goto	l2000
  1583  0686  3A23               	xorlw	35	; case 61
  1584  0687  1903               	skipnz
  1585  0688  2E5F               	goto	l2002
  1586  0689  3A47               	xorlw	71	; case 122
  1587  068A  1903               	skipnz
  1588  068B  2E69               	goto	l2004
  1589  068C  2E17               	goto	l1434
  1590  068D                     l97:	
  1591  068D  0008               	return
  1592  068E                     __end_of_OSC_config:	
  1593                           
  1594                           	psect	text5
  1595  058D                     __ptext5:	
  1596 ;; *************** function _Servo2_grados *****************
  1597 ;; Defined at:
  1598 ;;		line 309 in file "Servo_PWM.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;  Servo2_grado    1    wreg     unsigned char 
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;  Servo2_grado    1    2[COMMON] unsigned char 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      void 
  1605 ;; Registers used:
  1606 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1612 ;;      Params:         0       0       0       0       0
  1613 ;;      Locals:         1       0       0       0       0
  1614 ;;      Temps:          2       0       0       0       0
  1615 ;;      Totals:         3       0       0       0       0
  1616 ;;Total ram usage:        3 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_main
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           
  1626                           ;psect for function _Servo2_grados
  1627  058D                     _Servo2_grados:	
  1628                           
  1629                           ;incstack = 0
  1630                           ; Regs used in _Servo2_grados: [wreg-fsr0h+status,2+status,0]
  1631                           ;Servo2_grados@Servo2_grados stored from wreg
  1632  058D  00F2               	movwf	Servo2_grados@Servo2_grados
  1633  058E                     l914:	
  1634                           
  1635                           ;Servo_PWM.c: 310:     switch(Servo2_grados){
  1636  058E  2DBC               	goto	l936
  1637  058F                     l916:	
  1638                           
  1639                           ;Servo_PWM.c: 312:             CCPR1L = 10;
  1640  058F  300A               	movlw	10
  1641  0590  1283               	bcf	3,5	;RP0=0, select bank0
  1642  0591  1303               	bcf	3,6	;RP1=0, select bank0
  1643  0592  0095               	movwf	21	;volatile
  1644                           
  1645                           ;Servo_PWM.c: 313:             break;
  1646  0593  2DE1               	goto	l136
  1647  0594                     l918:	
  1648                           
  1649                           ;Servo_PWM.c: 316:             CCPR1L = 12;
  1650  0594  300C               	movlw	12
  1651  0595  1283               	bcf	3,5	;RP0=0, select bank0
  1652  0596  1303               	bcf	3,6	;RP1=0, select bank0
  1653  0597  0095               	movwf	21	;volatile
  1654                           
  1655                           ;Servo_PWM.c: 317:             break;
  1656  0598  2DE1               	goto	l136
  1657  0599                     l920:	
  1658                           
  1659                           ;Servo_PWM.c: 320:             CCPR1L = 14;
  1660  0599  300E               	movlw	14
  1661  059A  1283               	bcf	3,5	;RP0=0, select bank0
  1662  059B  1303               	bcf	3,6	;RP1=0, select bank0
  1663  059C  0095               	movwf	21	;volatile
  1664                           
  1665                           ;Servo_PWM.c: 321:             break;
  1666  059D  2DE1               	goto	l136
  1667  059E                     l922:	
  1668                           
  1669                           ;Servo_PWM.c: 324:             CCPR1L = 18;
  1670  059E  3012               	movlw	18
  1671  059F  1283               	bcf	3,5	;RP0=0, select bank0
  1672  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  1673  05A1  0095               	movwf	21	;volatile
  1674                           
  1675                           ;Servo_PWM.c: 325:             break;
  1676  05A2  2DE1               	goto	l136
  1677  05A3                     l924:	
  1678                           
  1679                           ;Servo_PWM.c: 328:             CCPR1L = 25;
  1680  05A3  3019               	movlw	25
  1681  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  1682  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  1683  05A6  0095               	movwf	21	;volatile
  1684                           
  1685                           ;Servo_PWM.c: 329:             break;
  1686  05A7  2DE1               	goto	l136
  1687  05A8                     l926:	
  1688                           
  1689                           ;Servo_PWM.c: 332:             CCPR1L = 30;
  1690  05A8  301E               	movlw	30
  1691  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  1692  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  1693  05AB  0095               	movwf	21	;volatile
  1694                           
  1695                           ;Servo_PWM.c: 333:             break;
  1696  05AC  2DE1               	goto	l136
  1697  05AD                     l928:	
  1698                           
  1699                           ;Servo_PWM.c: 336:             CCPR1L = 33;
  1700  05AD  3021               	movlw	33
  1701  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  1702  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  1703  05B0  0095               	movwf	21	;volatile
  1704                           
  1705                           ;Servo_PWM.c: 337:             break;
  1706  05B1  2DE1               	goto	l136
  1707  05B2                     l930:	
  1708                           
  1709                           ;Servo_PWM.c: 340:             CCPR1L = 37;
  1710  05B2  3025               	movlw	37
  1711  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  1712  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  1713  05B5  0095               	movwf	21	;volatile
  1714                           
  1715                           ;Servo_PWM.c: 341:             break;
  1716  05B6  2DE1               	goto	l136
  1717  05B7                     l932:	
  1718                           
  1719                           ;Servo_PWM.c: 344:             CCPR1L = 40;
  1720  05B7  3028               	movlw	40
  1721  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  1722  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  1723  05BA  0095               	movwf	21	;volatile
  1724                           
  1725                           ;Servo_PWM.c: 345:             break;
  1726  05BB  2DE1               	goto	l136
  1727  05BC                     l936:	
  1728  05BC  0872               	movf	Servo2_grados@Servo2_grados,w
  1729  05BD  00F0               	movwf	??_Servo2_grados
  1730  05BE  01F1               	clrf	??_Servo2_grados+1
  1731                           
  1732                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1733                           ; Switch size 1, requested type "simple"
  1734                           ; Number of cases is 1, Range of values is 0 to 0
  1735                           ; switch strategies available:
  1736                           ; Name         Instructions Cycles
  1737                           ; simple_byte            4     3 (average)
  1738                           ; direct_byte           11     8 (fixed)
  1739                           ; jumptable            260     6 (fixed)
  1740                           ;	Chosen strategy is simple_byte
  1741  05BF  0871               	movf	??_Servo2_grados+1,w
  1742  05C0  3A00               	xorlw	0	; case 0
  1743  05C1  1903               	skipnz
  1744  05C2  2DC4               	goto	l2024
  1745  05C3  2D8F               	goto	l916
  1746  05C4                     l2024:	
  1747                           
  1748                           ; Switch size 1, requested type "simple"
  1749                           ; Number of cases is 9, Range of values is 0 to 180
  1750                           ; switch strategies available:
  1751                           ; Name         Instructions Cycles
  1752                           ; simple_byte           28    15 (average)
  1753                           ; jumptable            260     6 (fixed)
  1754                           ;	Chosen strategy is simple_byte
  1755  05C4  0870               	movf	??_Servo2_grados,w
  1756  05C5  3A00               	xorlw	0	; case 0
  1757  05C6  1903               	skipnz
  1758  05C7  2D8F               	goto	l916
  1759  05C8  3A0A               	xorlw	10	; case 10
  1760  05C9  1903               	skipnz
  1761  05CA  2D94               	goto	l918
  1762  05CB  3A14               	xorlw	20	; case 30
  1763  05CC  1903               	skipnz
  1764  05CD  2D99               	goto	l920
  1765  05CE  3A33               	xorlw	51	; case 45
  1766  05CF  1903               	skipnz
  1767  05D0  2D9E               	goto	l922
  1768  05D1  3A77               	xorlw	119	; case 90
  1769  05D2  1903               	skipnz
  1770  05D3  2DA3               	goto	l924
  1771  05D4  3A22               	xorlw	34	; case 120
  1772  05D5  1903               	skipnz
  1773  05D6  2DA8               	goto	l926
  1774  05D7  3AFF               	xorlw	255	; case 135
  1775  05D8  1903               	skipnz
  1776  05D9  2DAD               	goto	l928
  1777  05DA  3A11               	xorlw	17	; case 150
  1778  05DB  1903               	skipnz
  1779  05DC  2DB2               	goto	l930
  1780  05DD  3A22               	xorlw	34	; case 180
  1781  05DE  1903               	skipnz
  1782  05DF  2DB7               	goto	l932
  1783  05E0  2D8F               	goto	l916
  1784  05E1                     l136:	
  1785  05E1  0008               	return
  1786  05E2                     __end_of_Servo2_grados:	
  1787                           
  1788                           	psect	text6
  1789  0538                     __ptext6:	
  1790 ;; *************** function _Servo1_grados *****************
  1791 ;; Defined at:
  1792 ;;		line 265 in file "Servo_PWM.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  Servo1_grado    1    wreg     unsigned char 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;  Servo1_grado    1    2[COMMON] unsigned char 
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  1    wreg      void 
  1799 ;; Registers used:
  1800 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1806 ;;      Params:         0       0       0       0       0
  1807 ;;      Locals:         1       0       0       0       0
  1808 ;;      Temps:          2       0       0       0       0
  1809 ;;      Totals:         3       0       0       0       0
  1810 ;;Total ram usage:        3 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_main
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           
  1820                           ;psect for function _Servo1_grados
  1821  0538                     _Servo1_grados:	
  1822                           
  1823                           ;incstack = 0
  1824                           ; Regs used in _Servo1_grados: [wreg-fsr0h+status,2+status,0]
  1825                           ;Servo1_grados@Servo1_grados stored from wreg
  1826  0538  00F2               	movwf	Servo1_grados@Servo1_grados
  1827  0539                     l886:	
  1828                           
  1829                           ;Servo_PWM.c: 266:     switch(Servo1_grados){
  1830  0539  2D67               	goto	l908
  1831  053A                     l888:	
  1832                           
  1833                           ;Servo_PWM.c: 268:             CCPR2L = 10;
  1834  053A  300A               	movlw	10
  1835  053B  1283               	bcf	3,5	;RP0=0, select bank0
  1836  053C  1303               	bcf	3,6	;RP1=0, select bank0
  1837  053D  009B               	movwf	27	;volatile
  1838                           
  1839                           ;Servo_PWM.c: 269:             break;
  1840  053E  2D8C               	goto	l121
  1841  053F                     l890:	
  1842                           
  1843                           ;Servo_PWM.c: 272:             CCPR2L = 12;
  1844  053F  300C               	movlw	12
  1845  0540  1283               	bcf	3,5	;RP0=0, select bank0
  1846  0541  1303               	bcf	3,6	;RP1=0, select bank0
  1847  0542  009B               	movwf	27	;volatile
  1848                           
  1849                           ;Servo_PWM.c: 273:             break;
  1850  0543  2D8C               	goto	l121
  1851  0544                     l892:	
  1852                           
  1853                           ;Servo_PWM.c: 276:             CCPR2L = 14;
  1854  0544  300E               	movlw	14
  1855  0545  1283               	bcf	3,5	;RP0=0, select bank0
  1856  0546  1303               	bcf	3,6	;RP1=0, select bank0
  1857  0547  009B               	movwf	27	;volatile
  1858                           
  1859                           ;Servo_PWM.c: 277:             break;
  1860  0548  2D8C               	goto	l121
  1861  0549                     l894:	
  1862                           
  1863                           ;Servo_PWM.c: 280:             CCPR2L = 18;
  1864  0549  3012               	movlw	18
  1865  054A  1283               	bcf	3,5	;RP0=0, select bank0
  1866  054B  1303               	bcf	3,6	;RP1=0, select bank0
  1867  054C  009B               	movwf	27	;volatile
  1868                           
  1869                           ;Servo_PWM.c: 281:             break;
  1870  054D  2D8C               	goto	l121
  1871  054E                     l896:	
  1872                           
  1873                           ;Servo_PWM.c: 284:             CCPR2L = 25;
  1874  054E  3019               	movlw	25
  1875  054F  1283               	bcf	3,5	;RP0=0, select bank0
  1876  0550  1303               	bcf	3,6	;RP1=0, select bank0
  1877  0551  009B               	movwf	27	;volatile
  1878                           
  1879                           ;Servo_PWM.c: 285:             break;
  1880  0552  2D8C               	goto	l121
  1881  0553                     l898:	
  1882                           
  1883                           ;Servo_PWM.c: 288:             CCPR2L = 30;
  1884  0553  301E               	movlw	30
  1885  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1886  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1887  0556  009B               	movwf	27	;volatile
  1888                           
  1889                           ;Servo_PWM.c: 289:             break;
  1890  0557  2D8C               	goto	l121
  1891  0558                     l900:	
  1892                           
  1893                           ;Servo_PWM.c: 292:             CCPR2L = 33;
  1894  0558  3021               	movlw	33
  1895  0559  1283               	bcf	3,5	;RP0=0, select bank0
  1896  055A  1303               	bcf	3,6	;RP1=0, select bank0
  1897  055B  009B               	movwf	27	;volatile
  1898                           
  1899                           ;Servo_PWM.c: 293:             break;
  1900  055C  2D8C               	goto	l121
  1901  055D                     l902:	
  1902                           
  1903                           ;Servo_PWM.c: 296:             CCPR2L = 37;
  1904  055D  3025               	movlw	37
  1905  055E  1283               	bcf	3,5	;RP0=0, select bank0
  1906  055F  1303               	bcf	3,6	;RP1=0, select bank0
  1907  0560  009B               	movwf	27	;volatile
  1908                           
  1909                           ;Servo_PWM.c: 297:             break;
  1910  0561  2D8C               	goto	l121
  1911  0562                     l904:	
  1912                           
  1913                           ;Servo_PWM.c: 300:             CCPR2L = 40;
  1914  0562  3028               	movlw	40
  1915  0563  1283               	bcf	3,5	;RP0=0, select bank0
  1916  0564  1303               	bcf	3,6	;RP1=0, select bank0
  1917  0565  009B               	movwf	27	;volatile
  1918                           
  1919                           ;Servo_PWM.c: 301:             break;
  1920  0566  2D8C               	goto	l121
  1921  0567                     l908:	
  1922  0567  0872               	movf	Servo1_grados@Servo1_grados,w
  1923  0568  00F0               	movwf	??_Servo1_grados
  1924  0569  01F1               	clrf	??_Servo1_grados+1
  1925                           
  1926                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1927                           ; Switch size 1, requested type "simple"
  1928                           ; Number of cases is 1, Range of values is 0 to 0
  1929                           ; switch strategies available:
  1930                           ; Name         Instructions Cycles
  1931                           ; simple_byte            4     3 (average)
  1932                           ; direct_byte           11     8 (fixed)
  1933                           ; jumptable            260     6 (fixed)
  1934                           ;	Chosen strategy is simple_byte
  1935  056A  0871               	movf	??_Servo1_grados+1,w
  1936  056B  3A00               	xorlw	0	; case 0
  1937  056C  1903               	skipnz
  1938  056D  2D6F               	goto	l2026
  1939  056E  2D3A               	goto	l888
  1940  056F                     l2026:	
  1941                           
  1942                           ; Switch size 1, requested type "simple"
  1943                           ; Number of cases is 9, Range of values is 0 to 180
  1944                           ; switch strategies available:
  1945                           ; Name         Instructions Cycles
  1946                           ; simple_byte           28    15 (average)
  1947                           ; jumptable            260     6 (fixed)
  1948                           ;	Chosen strategy is simple_byte
  1949  056F  0870               	movf	??_Servo1_grados,w
  1950  0570  3A00               	xorlw	0	; case 0
  1951  0571  1903               	skipnz
  1952  0572  2D3A               	goto	l888
  1953  0573  3A0A               	xorlw	10	; case 10
  1954  0574  1903               	skipnz
  1955  0575  2D3F               	goto	l890
  1956  0576  3A14               	xorlw	20	; case 30
  1957  0577  1903               	skipnz
  1958  0578  2D44               	goto	l892
  1959  0579  3A33               	xorlw	51	; case 45
  1960  057A  1903               	skipnz
  1961  057B  2D49               	goto	l894
  1962  057C  3A77               	xorlw	119	; case 90
  1963  057D  1903               	skipnz
  1964  057E  2D4E               	goto	l896
  1965  057F  3A22               	xorlw	34	; case 120
  1966  0580  1903               	skipnz
  1967  0581  2D53               	goto	l898
  1968  0582  3AFF               	xorlw	255	; case 135
  1969  0583  1903               	skipnz
  1970  0584  2D58               	goto	l900
  1971  0585  3A11               	xorlw	17	; case 150
  1972  0586  1903               	skipnz
  1973  0587  2D5D               	goto	l902
  1974  0588  3A22               	xorlw	34	; case 180
  1975  0589  1903               	skipnz
  1976  058A  2D62               	goto	l904
  1977  058B  2D3A               	goto	l888
  1978  058C                     l121:	
  1979  058C  0008               	return
  1980  058D                     __end_of_Servo1_grados:	
  1981  007E                     btemp	set	126	;btemp
  1982  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _config_PORTS->_OSC_config

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     128
                                              4 COMMON     3     3      0
                      _Servo1_grados
                      _Servo2_grados
                       _config_PORTS
                         _init_PWM_1
                         _init_PWM_2
 ---------------------------------------------------------------------------------
 (1) _init_PWM_2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_PWM_1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_PORTS                                         0     0      0      98
                         _OSC_config
 ---------------------------------------------------------------------------------
 (2) _OSC_config                                           4     0      4      98
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _Servo2_grados                                        3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Servo1_grados                                        3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Servo1_grados
   _Servo2_grados
   _config_PORTS
     _OSC_config
   _init_PWM_1
   _init_PWM_2

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri May 01 14:41:17 2020

               __CFG_CP$OFF 0000                          l71 04FB                          l80 0530  
                        l81 052F                          l74 0511                          l82 0534  
                        l75 0510                          l83 0537                          l76 0515  
                        l77 0518                          l97 068D                          u10 0515  
                        u11 0514                          u20 0534                          u21 0533  
                        u90 06A3                          u91 06A2                         l121 058C  
                       l136 05E1                         l900 0558                         l902 055D  
                       l904 0562                         l920 0599                         l840 0504  
                       l930 05B2                         l922 059E                         l914 058E  
                       l850 050B                         l842 0505                         l834 04FC  
                       l908 0567                         l932 05B7                         l924 05A3  
                       l916 058F                         l852 050C                         l844 0506  
                       l836 04FF                         l860 051C                         l926 05A8  
                       l918 0594                         l854 050D                         l846 0509  
                       l838 0501                         l870 0524                         l862 051E  
                       l928 05AD                         l936 05BC                         l856 050E  
                       l848 050A                         l880 052B                         l872 0525  
                       l864 0521                         l890 053F                         l882 052C  
                       l874 0528                         l866 0522                         l858 0519  
                       l892 0544                         l884 052D                         l876 0529  
                       l868 0523                         l894 0549                         l886 0539  
                       l878 052A                         l896 054E                         l888 053A  
                       l898 0553                         u100 06B0                         u101 06AF  
                       u110 0742                         u111 0741                         u120 074F  
                       u121 074E                         u130 075C                         u131 075B  
                       u140 0769                         u141 0768                         u207 0708  
                       u217 071B                         u307 07D4                         u227 072E  
                       u317 07E7                         u237 0746                         u157 06A7  
                       _PR2 0092                         u247 0760                         u167 06BC  
                       u257 0775                         u177 06CF                __CFG_CPD$OFF 0000  
                       u267 0788                         u187 06E2                         u277 079B  
                       u197 06F5                         u287 07AE                         u297 07C1  
              __CFG_LVP$OFF 0000                        l2000 0655                        l2002 065F  
                      l2010 0632                        l2004 0669                        l2020 0664  
                      l2012 063C                        l2022 066E                        l2014 0646  
                      l2006 0673                        l2024 05C4                        l2016 0650  
                      l2008 0628                        l2026 056F                        l2018 065A  
                      l1420 05E8                        l1430 060B                        l1422 05EF  
                      l1510 04F0                        l1432 0612                        l1424 05F6  
                      l1416 05E2                        l1520 04FA                        l1512 04F4  
                      l1600 07C8                        l1434 0617                        l1426 05FD  
                      l1418 05E3                        l1514 04F7                        l1506 04E0  
                      l1602 07CE                        l1530 06A3                        l1522 068E  
                      l1428 0604                        l1436 061E                        l1516 04F8  
                      l1508 04ED                        l1604 07E1                        l1540 06B6  
                      l1532 06A5                        l1524 0693                        l1518 04F9  
                      l1606 07EE                        l1550 06FC                        l1542 06C3  
                      l1534 06AA                        l1526 0698                        l1608 07F4  
                      l1552 070F                        l1544 06D6                        l1560 073B  
                      l1536 06AA                        l1528 069D                        l1570 0749  
                      l1554 0715                        l1546 06DC                        l1538 06B0  
                      l1562 073C                        l1580 075E                        l1572 074F  
                      l1564 0742                        l1556 0728                        l1548 06EF  
                      l1590 077C                        l1582 0763                        l1574 0755  
                      l1566 0744                        l1558 0735                        l1592 078F  
                      l1584 0763                        l1568 0749                        l1576 0756  
                      l1594 0795                        l1586 0769                        l1578 075C  
                      l1596 07A8                        l1588 076F                        l1598 07B5  
                      l1990 0623                        l1992 062D                        l1994 0637  
                      l1996 0641                        l1998 064B              ??_config_PORTS 0074  
              __CFG_WRT$OFF 0000                        _main 068E                        btemp 007E  
                      start 0000               __CFG_IESO$OFF 0000               __CFG_MCLRE$ON 0000  
                     ?_main 0070               __CFG_WDTE$OFF 0000                       _ANSEL 0188  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       _PORTE 0009                       _TRISE 0089  
            __CFG_FCMEN$OFF 0000              __CFG_BOREN$OFF 0000                 ?_OSC_config 0070  
                     status 0003                       wtemp0 007E             __initialization 07F9  
              __end_of_main 07F9       __end_of_Servo1_grados 058D  Servo1_grados@Servo1_grados 0072  
     __end_of_Servo2_grados 05E2                      ??_main 0074                      _CCPR1L 0015  
                    _CCPR2L 001B                      _ESTADO 0079              __CFG_PWRTE$OFF 0000  
      __end_of_config_PORTS 04FC         __size_of_OSC_config 00AC     __end_of__initialization 07FC  
            __pcstackCOMMON 0070                  __pmaintext 068E        OSC_config@frecuencia 0070  
                   _ESTADO2 0078                     _ESTADO3 0077                ??_OSC_config 0074  
     __size_of_config_PORTS 001C                  _init_PWM_1 04FC                  _init_PWM_2 0519  
                   __ptext1 0519                     __ptext2 04FC                     __ptext3 04E0  
                   __ptext4 05E2                     __ptext5 058D                     __ptext6 0538  
        __end_of_OSC_config 068E                   _T2CONbits 0012        end_of_initialization 07FC  
              _config_PORTS 04E0                   _PORTEbits 0009                   _TRISCbits 0087  
    __size_of_Servo1_grados 0055                 _CCP1CONbits 0017      __size_of_Servo2_grados 0055  
               _CCP2CONbits 001D                 ?_init_PWM_1 0070                 ?_init_PWM_2 0070  
       start_initialization 07F9               _Servo1_grados 0538               _Servo2_grados 058D  
               __pbssCOMMON 0077                   ___latbits 0002         __size_of_init_PWM_1 001D  
       __size_of_init_PWM_2 001F      __CFG_FOSC$INTRC_CLKOUT 0000              ?_Servo1_grados 0070  
            ?_Servo2_grados 0070                    _PIR1bits 000C                ??_init_PWM_1 0070  
              ??_init_PWM_2 0070             ??_Servo1_grados 0070             ??_Servo2_grados 0070  
Servo2_grados@Servo2_grados 0072           __CFG_BOR4V$BOR40V 0000          __end_of_init_PWM_1 0519  
        __end_of_init_PWM_2 0538               __size_of_main 016B                  _OSCCONbits 008F  
                _OSC_config 05E2               ?_config_PORTS 0070  



Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar 19 20:34:52 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.05
    20                           ; Generated 20/12/2018 GMT
    21                           ; 
    22                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0000                     	;# 
   366  0001                     	;# 
   367  0002                     	;# 
   368  0003                     	;# 
   369  0004                     	;# 
   370  0005                     	;# 
   371  0006                     	;# 
   372  0007                     	;# 
   373  0008                     	;# 
   374  0009                     	;# 
   375  000A                     	;# 
   376  000B                     	;# 
   377  000C                     	;# 
   378  000D                     	;# 
   379  000E                     	;# 
   380  000E                     	;# 
   381  000F                     	;# 
   382  0010                     	;# 
   383  0011                     	;# 
   384  0012                     	;# 
   385  0013                     	;# 
   386  0014                     	;# 
   387  0015                     	;# 
   388  0015                     	;# 
   389  0016                     	;# 
   390  0017                     	;# 
   391  0018                     	;# 
   392  0019                     	;# 
   393  001A                     	;# 
   394  001B                     	;# 
   395  001B                     	;# 
   396  001C                     	;# 
   397  001D                     	;# 
   398  001E                     	;# 
   399  001F                     	;# 
   400  0081                     	;# 
   401  0085                     	;# 
   402  0086                     	;# 
   403  0087                     	;# 
   404  0088                     	;# 
   405  0089                     	;# 
   406  008C                     	;# 
   407  008D                     	;# 
   408  008E                     	;# 
   409  008F                     	;# 
   410  0090                     	;# 
   411  0091                     	;# 
   412  0092                     	;# 
   413  0093                     	;# 
   414  0093                     	;# 
   415  0093                     	;# 
   416  0094                     	;# 
   417  0095                     	;# 
   418  0096                     	;# 
   419  0097                     	;# 
   420  0098                     	;# 
   421  0099                     	;# 
   422  009A                     	;# 
   423  009B                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  009F                     	;# 
   428  0105                     	;# 
   429  0107                     	;# 
   430  0108                     	;# 
   431  0109                     	;# 
   432  010C                     	;# 
   433  010C                     	;# 
   434  010D                     	;# 
   435  010E                     	;# 
   436  010F                     	;# 
   437  0185                     	;# 
   438  0187                     	;# 
   439  0188                     	;# 
   440  0189                     	;# 
   441  018C                     	;# 
   442  018D                     	;# 
   443  0015                     _CCPR1L	set	21
   444  0017                     _CCP1CONbits	set	23
   445  0012                     _T2CONbits	set	18
   446  001B                     _CCPR2L	set	27
   447  001D                     _CCP2CONbits	set	29
   448  0014                     _SSPCON	set	20
   449  0010                     _T1CONbits	set	16
   450  0005                     _PORTAbits	set	5
   451  000F                     _TMR1H	set	15
   452  000E                     _TMR1L	set	14
   453  0010                     _T1CON	set	16
   454  0008                     _PORTD	set	8
   455  0006                     _PORTB	set	6
   456  0013                     _SSPBUF	set	19
   457  0014                     _SSPCONbits	set	20
   458  000C                     _PIR1bits	set	12
   459  0045                     _RD5	set	69
   460  0044                     _RD4	set	68
   461  002F                     _RA7	set	47
   462  002E                     _RA6	set	46
   463  0043                     _RD3	set	67
   464  0042                     _RD2	set	66
   465  0041                     _RD1	set	65
   466  0040                     _RD0	set	64
   467  0063                     _SSPIF	set	99
   468  005E                     _PEIE	set	94
   469  005F                     _GIE	set	95
   470  0092                     _PR2	set	146
   471  0091                     _SSPCON2bits	set	145
   472  0087                     _TRISCbits	set	135
   473  0094                     _SSPSTAT	set	148
   474  0093                     _SSPADD	set	147
   475  0091                     _SSPCON2	set	145
   476  008F                     _OSCCONbits	set	143
   477  0088                     _TRISD	set	136
   478  0086                     _TRISB	set	134
   479  0085                     _TRISA	set	133
   480  0094                     _SSPSTATbits	set	148
   481  0463                     _SSPIE	set	1123
   482  043C                     _TRISC4	set	1084
   483  043B                     _TRISC3	set	1083
   484  04A0                     _BF	set	1184
   485  0189                     _ANSELH	set	393
   486  0188                     _ANSEL	set	392
   487                           
   488                           ; #config settings
   489  0000                     
   490                           	psect	cinit
   491  000F                     start_initialization:	
   492  000F                     __initialization:	
   493                           
   494                           ; Clear objects allocated to COMMON
   495  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   496  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   497  0011  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   498  0012  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   499  0013  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   500  0014                     end_of_initialization:	
   501                           ;End of C runtime variable initialization code
   502                           
   503  0014                     __end_of__initialization:	
   504  0014  0183               	clrf	3
   505  0015  120A  118A  2818   	ljmp	_main	;jump to C main() function
   506                           
   507                           	psect	bssCOMMON
   508  0079                     __pbssCOMMON:	
   509  0079                     _distancia_2:	
   510  0079                     	ds	2
   511  007B                     _distancia_1:	
   512  007B                     	ds	2
   513  007D                     _z:	
   514  007D                     	ds	1
   515                           
   516                           	psect	cstackCOMMON
   517  0070                     __pcstackCOMMON:	
   518  0070                     ?_oscillator:	
   519  0070                     ?_init_PWM_1:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_init_PWM_2:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_I2C_Slave_Init:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_robot_CCW90:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_robot_CW90:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_robot_STOP:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_ISR:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ??_ISR:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_main:	
   544                           ; 1 bytes @ 0x0
   545                           
   546                           
   547                           ; 1 bytes @ 0x0
   548  0070                     	ds	3
   549  0073                     ??_oscillator:	
   550  0073                     ??_init_PWM_1:	
   551                           ; 1 bytes @ 0x3
   552                           
   553  0073                     ??_init_PWM_2:	
   554                           ; 1 bytes @ 0x3
   555                           
   556  0073                     ??_I2C_Slave_Init:	
   557                           ; 1 bytes @ 0x3
   558                           
   559  0073                     ??_robot_CCW90:	
   560                           ; 1 bytes @ 0x3
   561                           
   562  0073                     ??_robot_CW90:	
   563                           ; 1 bytes @ 0x3
   564                           
   565  0073                     ??_robot_STOP:	
   566                           ; 1 bytes @ 0x3
   567                           
   568  0073                     I2C_Slave_Init@address:	
   569                           ; 1 bytes @ 0x3
   570                           
   571                           
   572                           ; 1 bytes @ 0x3
   573  0073                     	ds	2
   574  0075                     oscillator@a:	
   575                           
   576                           ; 1 bytes @ 0x5
   577  0075                     	ds	1
   578  0076                     ??_main:	
   579                           
   580                           ; 1 bytes @ 0x6
   581  0076                     	ds	3
   582                           
   583                           	psect	maintext
   584  0018                     __pmaintext:	
   585 ;;
   586 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   587 ;;
   588 ;; *************** function _main *****************
   589 ;; Defined at:
   590 ;;		line 72 in file "newmain.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;		None
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : B00/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   604 ;;      Params:         0       0       0       0       0
   605 ;;      Locals:         0       0       0       0       0
   606 ;;      Temps:          3       0       0       0       0
   607 ;;      Totals:         3       0       0       0       0
   608 ;;Total ram usage:        3 bytes
   609 ;; Hardware stack levels required when called:    3
   610 ;; This function calls:
   611 ;;		_I2C_Slave_Init
   612 ;;		_init_PWM_1
   613 ;;		_init_PWM_2
   614 ;;		_oscillator
   615 ;;		_robot_CCW90
   616 ;;		_robot_CW90
   617 ;; This function is called by:
   618 ;;		Startup code after reset
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           
   623                           ;psect for function _main
   624  0018                     _main:	
   625                           
   626                           ;newmain.c: 73:     oscillator(7);
   627                           
   628                           ;incstack = 0
   629                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   630  0018  3007               	movlw	7
   631  0019  120A  118A  209D  120A  118A  	fcall	_oscillator
   632                           
   633                           ;newmain.c: 74:     TRISA = 0b00010010;
   634  001E  3012               	movlw	18
   635  001F  1683               	bsf	3,5	;RP0=1, select bank1
   636  0020  1303               	bcf	3,6	;RP1=0, select bank1
   637  0021  0085               	movwf	5	;volatile
   638                           
   639                           ;newmain.c: 75:     ANSEL = 0;
   640  0022  1683               	bsf	3,5	;RP0=1, select bank3
   641  0023  1703               	bsf	3,6	;RP1=1, select bank3
   642  0024  0188               	clrf	8	;volatile
   643                           
   644                           ;newmain.c: 76:     PORTB = 0x00;
   645  0025  1283               	bcf	3,5	;RP0=0, select bank0
   646  0026  1303               	bcf	3,6	;RP1=0, select bank0
   647  0027  0186               	clrf	6	;volatile
   648                           
   649                           ;newmain.c: 77:     TRISB = 0x00;
   650  0028  1683               	bsf	3,5	;RP0=1, select bank1
   651  0029  1303               	bcf	3,6	;RP1=0, select bank1
   652  002A  0186               	clrf	6	;volatile
   653                           
   654                           ;newmain.c: 78:     ANSELH = 0x00;
   655  002B  1683               	bsf	3,5	;RP0=1, select bank3
   656  002C  1703               	bsf	3,6	;RP1=1, select bank3
   657  002D  0189               	clrf	9	;volatile
   658                           
   659                           ;newmain.c: 79:     PORTD = 0x00;
   660  002E  1283               	bcf	3,5	;RP0=0, select bank0
   661  002F  1303               	bcf	3,6	;RP1=0, select bank0
   662  0030  0188               	clrf	8	;volatile
   663                           
   664                           ;newmain.c: 80:     TRISD = 0x00;
   665  0031  1683               	bsf	3,5	;RP0=1, select bank1
   666  0032  1303               	bcf	3,6	;RP1=0, select bank1
   667  0033  0188               	clrf	8	;volatile
   668                           
   669                           ;newmain.c: 82:     init_PWM_1();
   670  0034  120A  118A  219B  120A  118A  	fcall	_init_PWM_1
   671                           
   672                           ;newmain.c: 83:     init_PWM_2();
   673  0039  120A  118A  2180  120A  118A  	fcall	_init_PWM_2
   674                           
   675                           ;newmain.c: 86:     T1CON = 0x10;
   676  003E  3010               	movlw	16
   677  003F  1283               	bcf	3,5	;RP0=0, select bank0
   678  0040  1303               	bcf	3,6	;RP1=0, select bank0
   679  0041  0090               	movwf	16	;volatile
   680                           
   681                           ;newmain.c: 87:     I2C_Slave_Init(0x30);
   682  0042  3030               	movlw	48
   683  0043  120A  118A  21B6  120A  118A  	fcall	_I2C_Slave_Init
   684                           
   685                           ;newmain.c: 88:     _delay((unsigned long)((500)*(8000000/4000.0)));
   686  0048  3006               	movlw	6
   687  0049  00F8               	movwf	??_main+2
   688  004A  3013               	movlw	19
   689  004B  00F7               	movwf	??_main+1
   690  004C  30AD               	movlw	173
   691  004D  00F6               	movwf	??_main
   692  004E                     u177:	
   693  004E  0BF6               	decfsz	??_main,f
   694  004F  284E               	goto	u177
   695  0050  0BF7               	decfsz	??_main+1,f
   696  0051  284E               	goto	u177
   697  0052  0BF8               	decfsz	??_main+2,f
   698  0053  284E               	goto	u177
   699  0054  2855               	nop2
   700                           
   701                           ;newmain.c: 89:     _delay((unsigned long)((500)*(8000000/4000.0)));
   702  0055  3006               	movlw	6
   703  0056  00F8               	movwf	??_main+2
   704  0057  3013               	movlw	19
   705  0058  00F7               	movwf	??_main+1
   706  0059  30AD               	movlw	173
   707  005A  00F6               	movwf	??_main
   708  005B                     u187:	
   709  005B  0BF6               	decfsz	??_main,f
   710  005C  285B               	goto	u187
   711  005D  0BF7               	decfsz	??_main+1,f
   712  005E  285B               	goto	u187
   713  005F  0BF8               	decfsz	??_main+2,f
   714  0060  285B               	goto	u187
   715  0061  2862               	nop2
   716                           
   717                           ;newmain.c: 90:     _delay((unsigned long)((500)*(8000000/4000.0)));
   718  0062  3006               	movlw	6
   719  0063  00F8               	movwf	??_main+2
   720  0064  3013               	movlw	19
   721  0065  00F7               	movwf	??_main+1
   722  0066  30AD               	movlw	173
   723  0067  00F6               	movwf	??_main
   724  0068                     u197:	
   725  0068  0BF6               	decfsz	??_main,f
   726  0069  2868               	goto	u197
   727  006A  0BF7               	decfsz	??_main+1,f
   728  006B  2868               	goto	u197
   729  006C  0BF8               	decfsz	??_main+2,f
   730  006D  2868               	goto	u197
   731  006E  286F               	nop2
   732                           
   733                           ;newmain.c: 91:     _delay((unsigned long)((500)*(8000000/4000.0)));
   734  006F  3006               	movlw	6
   735  0070  00F8               	movwf	??_main+2
   736  0071  3013               	movlw	19
   737  0072  00F7               	movwf	??_main+1
   738  0073  30AD               	movlw	173
   739  0074  00F6               	movwf	??_main
   740  0075                     u207:	
   741  0075  0BF6               	decfsz	??_main,f
   742  0076  2875               	goto	u207
   743  0077  0BF7               	decfsz	??_main+1,f
   744  0078  2875               	goto	u207
   745  0079  0BF8               	decfsz	??_main+2,f
   746  007A  2875               	goto	u207
   747  007B  287C               	nop2
   748                           
   749                           ;newmain.c: 98:         _delay((unsigned long)((200)*(8000000/4000.0)));
   750  007C  3003               	movlw	3
   751  007D  00F8               	movwf	??_main+2
   752  007E  3008               	movlw	8
   753  007F  00F7               	movwf	??_main+1
   754  0080  3077               	movlw	119
   755  0081  00F6               	movwf	??_main
   756  0082                     u217:	
   757  0082  0BF6               	decfsz	??_main,f
   758  0083  2882               	goto	u217
   759  0084  0BF7               	decfsz	??_main+1,f
   760  0085  2882               	goto	u217
   761  0086  0BF8               	decfsz	??_main+2,f
   762  0087  2882               	goto	u217
   763                           
   764                           ;newmain.c: 99:         robot_CCW90();
   765  0088  120A  118A  2153  120A  118A  	fcall	_robot_CCW90
   766                           
   767                           ;newmain.c: 100:         robot_CCW90();
   768  008D  120A  118A  2153  120A  118A  	fcall	_robot_CCW90
   769                           
   770                           ;newmain.c: 101:         robot_CW90();
   771  0092  120A  118A  2126  120A  118A  	fcall	_robot_CW90
   772                           
   773                           ;newmain.c: 102:         robot_CW90();
   774  0097  120A  118A  2126  120A  118A  	fcall	_robot_CW90
   775  009C                     l66:	
   776                           ;newmain.c: 104:         while(1);
   777                           
   778  009C  289C               	goto	l66
   779  009D                     __end_of_main:	
   780                           
   781                           	psect	text1
   782  0126                     __ptext1:	
   783 ;; *************** function _robot_CW90 *****************
   784 ;; Defined at:
   785 ;;		line 199 in file "PWM.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      void 
   792 ;; Registers used:
   793 ;;		wreg, status,2, status,0, pclath, cstack
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   799 ;;      Params:         0       0       0       0       0
   800 ;;      Locals:         0       0       0       0       0
   801 ;;      Temps:          3       0       0       0       0
   802 ;;      Totals:         3       0       0       0       0
   803 ;;Total ram usage:        3 bytes
   804 ;; Hardware stack levels used:    1
   805 ;; Hardware stack levels required when called:    2
   806 ;; This function calls:
   807 ;;		_robot_STOP
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           
   814                           ;psect for function _robot_CW90
   815  0126                     _robot_CW90:	
   816                           
   817                           ;PWM.c: 200:     robot_STOP();
   818                           
   819                           ;incstack = 0
   820                           ; Regs used in _robot_CW90: [wreg+status,2+status,0+pclath+cstack]
   821  0126  120A  118A  21D0  120A  118A  	fcall	_robot_STOP
   822                           
   823                           ;PWM.c: 201:     _delay((unsigned long)((500)*(8000000/4000.0)));
   824  012B  3006               	movlw	6
   825  012C  00F5               	movwf	??_robot_CW90+2
   826  012D  3013               	movlw	19
   827  012E  00F4               	movwf	??_robot_CW90+1
   828  012F  30AD               	movlw	173
   829  0130  00F3               	movwf	??_robot_CW90
   830  0131                     u227:	
   831  0131  0BF3               	decfsz	??_robot_CW90,f
   832  0132  2931               	goto	u227
   833  0133  0BF4               	decfsz	??_robot_CW90+1,f
   834  0134  2931               	goto	u227
   835  0135  0BF5               	decfsz	??_robot_CW90+2,f
   836  0136  2931               	goto	u227
   837  0137  2938               	nop2
   838                           
   839                           ;PWM.c: 202:     RD0 =0;
   840  0138  1283               	bcf	3,5	;RP0=0, select bank0
   841  0139  1303               	bcf	3,6	;RP1=0, select bank0
   842  013A  1008               	bcf	8,0	;volatile
   843                           
   844                           ;PWM.c: 203:     RD1 =1;
   845  013B  1488               	bsf	8,1	;volatile
   846                           
   847                           ;PWM.c: 205:     RD2 =0;
   848  013C  1108               	bcf	8,2	;volatile
   849                           
   850                           ;PWM.c: 206:     RD3 =1;
   851  013D  1588               	bsf	8,3	;volatile
   852                           
   853                           ;PWM.c: 208:     RA6 =1;
   854  013E  1705               	bsf	5,6	;volatile
   855                           
   856                           ;PWM.c: 209:     RA7 =0;
   857  013F  1385               	bcf	5,7	;volatile
   858                           
   859                           ;PWM.c: 211:     RD4 =1;
   860  0140  1608               	bsf	8,4	;volatile
   861                           
   862                           ;PWM.c: 212:     RD5 =0;
   863  0141  1288               	bcf	8,5	;volatile
   864                           
   865                           ;PWM.c: 213:     _delay((unsigned long)((440)*(8000000/4000.0)));
   866  0142  3005               	movlw	5
   867  0143  00F5               	movwf	??_robot_CW90+2
   868  0144  3077               	movlw	119
   869  0145  00F4               	movwf	??_robot_CW90+1
   870  0146  30D6               	movlw	214
   871  0147  00F3               	movwf	??_robot_CW90
   872  0148                     u237:	
   873  0148  0BF3               	decfsz	??_robot_CW90,f
   874  0149  2948               	goto	u237
   875  014A  0BF4               	decfsz	??_robot_CW90+1,f
   876  014B  2948               	goto	u237
   877  014C  0BF5               	decfsz	??_robot_CW90+2,f
   878  014D  2948               	goto	u237
   879  014E  0000               	nop
   880                           
   881                           ;PWM.c: 214:     robot_STOP();
   882  014F  120A  118A  21D0   	fcall	_robot_STOP
   883  0152  0008               	return
   884  0153                     __end_of_robot_CW90:	
   885                           
   886                           	psect	text2
   887  0153                     __ptext2:	
   888 ;; *************** function _robot_CCW90 *****************
   889 ;; Defined at:
   890 ;;		line 216 in file "PWM.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;		None
   893 ;; Auto vars:     Size  Location     Type
   894 ;;		None
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg, status,2, status,0, pclath, cstack
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   904 ;;      Params:         0       0       0       0       0
   905 ;;      Locals:         0       0       0       0       0
   906 ;;      Temps:          3       0       0       0       0
   907 ;;      Totals:         3       0       0       0       0
   908 ;;Total ram usage:        3 bytes
   909 ;; Hardware stack levels used:    1
   910 ;; Hardware stack levels required when called:    2
   911 ;; This function calls:
   912 ;;		_robot_STOP
   913 ;; This function is called by:
   914 ;;		_main
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           
   919                           ;psect for function _robot_CCW90
   920  0153                     _robot_CCW90:	
   921                           
   922                           ;PWM.c: 217:     robot_STOP();
   923                           
   924                           ;incstack = 0
   925                           ; Regs used in _robot_CCW90: [wreg+status,2+status,0+pclath+cstack]
   926  0153  120A  118A  21D0  120A  118A  	fcall	_robot_STOP
   927                           
   928                           ;PWM.c: 218:     _delay((unsigned long)((500)*(8000000/4000.0)));
   929  0158  3006               	movlw	6
   930  0159  00F5               	movwf	??_robot_CCW90+2
   931  015A  3013               	movlw	19
   932  015B  00F4               	movwf	??_robot_CCW90+1
   933  015C  30AD               	movlw	173
   934  015D  00F3               	movwf	??_robot_CCW90
   935  015E                     u247:	
   936  015E  0BF3               	decfsz	??_robot_CCW90,f
   937  015F  295E               	goto	u247
   938  0160  0BF4               	decfsz	??_robot_CCW90+1,f
   939  0161  295E               	goto	u247
   940  0162  0BF5               	decfsz	??_robot_CCW90+2,f
   941  0163  295E               	goto	u247
   942  0164  2965               	nop2
   943                           
   944                           ;PWM.c: 219:     RD0 =1;
   945  0165  1283               	bcf	3,5	;RP0=0, select bank0
   946  0166  1303               	bcf	3,6	;RP1=0, select bank0
   947  0167  1408               	bsf	8,0	;volatile
   948                           
   949                           ;PWM.c: 220:     RD1 =0;
   950  0168  1088               	bcf	8,1	;volatile
   951                           
   952                           ;PWM.c: 222:     RD2 =1;
   953  0169  1508               	bsf	8,2	;volatile
   954                           
   955                           ;PWM.c: 223:     RD3 =0;
   956  016A  1188               	bcf	8,3	;volatile
   957                           
   958                           ;PWM.c: 225:     RA6 =0;
   959  016B  1305               	bcf	5,6	;volatile
   960                           
   961                           ;PWM.c: 226:     RA7 =1;
   962  016C  1785               	bsf	5,7	;volatile
   963                           
   964                           ;PWM.c: 228:     RD4 =0;
   965  016D  1208               	bcf	8,4	;volatile
   966                           
   967                           ;PWM.c: 229:     RD5 =1;
   968  016E  1688               	bsf	8,5	;volatile
   969                           
   970                           ;PWM.c: 230:     _delay((unsigned long)((440)*(8000000/4000.0)));
   971  016F  3005               	movlw	5
   972  0170  00F5               	movwf	??_robot_CCW90+2
   973  0171  3077               	movlw	119
   974  0172  00F4               	movwf	??_robot_CCW90+1
   975  0173  30D6               	movlw	214
   976  0174  00F3               	movwf	??_robot_CCW90
   977  0175                     u257:	
   978  0175  0BF3               	decfsz	??_robot_CCW90,f
   979  0176  2975               	goto	u257
   980  0177  0BF4               	decfsz	??_robot_CCW90+1,f
   981  0178  2975               	goto	u257
   982  0179  0BF5               	decfsz	??_robot_CCW90+2,f
   983  017A  2975               	goto	u257
   984  017B  0000               	nop
   985                           
   986                           ;PWM.c: 231:     robot_STOP();
   987  017C  120A  118A  21D0   	fcall	_robot_STOP
   988  017F  0008               	return
   989  0180                     __end_of_robot_CCW90:	
   990                           
   991                           	psect	text3
   992  01D0                     __ptext3:	
   993 ;; *************** function _robot_STOP *****************
   994 ;; Defined at:
   995 ;;		line 233 in file "PWM.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		None
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         0       0       0       0       0
  1010 ;;      Locals:         0       0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0
  1012 ;;      Totals:         0       0       0       0       0
  1013 ;;Total ram usage:        0 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; Hardware stack levels required when called:    1
  1016 ;; This function calls:
  1017 ;;		Nothing
  1018 ;; This function is called by:
  1019 ;;		_robot_CW90
  1020 ;;		_robot_CCW90
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           
  1025                           ;psect for function _robot_STOP
  1026  01D0                     _robot_STOP:	
  1027                           
  1028                           ;PWM.c: 234:     RD0 =0;
  1029                           
  1030                           ;incstack = 0
  1031                           ; Regs used in _robot_STOP: []
  1032  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1033  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1034  01D2  1008               	bcf	8,0	;volatile
  1035                           
  1036                           ;PWM.c: 235:     RD1 =0;
  1037  01D3  1088               	bcf	8,1	;volatile
  1038                           
  1039                           ;PWM.c: 237:     RD2 =0;
  1040  01D4  1108               	bcf	8,2	;volatile
  1041                           
  1042                           ;PWM.c: 238:     RD3 =0;
  1043  01D5  1188               	bcf	8,3	;volatile
  1044                           
  1045                           ;PWM.c: 240:     RA6 =0;
  1046  01D6  1305               	bcf	5,6	;volatile
  1047                           
  1048                           ;PWM.c: 241:     RA7 =0;
  1049  01D7  1385               	bcf	5,7	;volatile
  1050                           
  1051                           ;PWM.c: 243:     RD4 =0;
  1052  01D8  1208               	bcf	8,4	;volatile
  1053                           
  1054                           ;PWM.c: 244:     RD5 =0;
  1055  01D9  1288               	bcf	8,5	;volatile
  1056  01DA  0008               	return
  1057  01DB                     __end_of_robot_STOP:	
  1058                           
  1059                           	psect	text4
  1060  009D                     __ptext4:	
  1061 ;; *************** function _oscillator *****************
  1062 ;; Defined at:
  1063 ;;		line 138 in file "funciones.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;  a               1    wreg     unsigned char 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  a               1    5[COMMON] unsigned char 
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1077 ;;      Params:         0       0       0       0       0
  1078 ;;      Locals:         1       0       0       0       0
  1079 ;;      Temps:          2       0       0       0       0
  1080 ;;      Totals:         3       0       0       0       0
  1081 ;;Total ram usage:        3 bytes
  1082 ;; Hardware stack levels used:    1
  1083 ;; Hardware stack levels required when called:    1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_main
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           
  1092                           ;psect for function _oscillator
  1093  009D                     _oscillator:	
  1094                           
  1095                           ;incstack = 0
  1096                           ; Regs used in _oscillator: [wreg-fsr0h+status,2+status,0]
  1097                           ;oscillator@a stored from wreg
  1098  009D  00F5               	movwf	oscillator@a
  1099                           
  1100                           ;funciones.c: 139:     switch(a){
  1101  009E  28CD               	goto	l859
  1102  009F                     l105:	
  1103                           ;funciones.c: 140:         case 0:
  1104                           
  1105                           
  1106                           ;funciones.c: 141:             OSCCONbits.IRCF2 = 0;
  1107  009F  1683               	bsf	3,5	;RP0=1, select bank1
  1108  00A0  1303               	bcf	3,6	;RP1=0, select bank1
  1109  00A1  130F               	bcf	15,6	;volatile
  1110                           
  1111                           ;funciones.c: 142:             OSCCONbits.IRCF1 = 0;
  1112  00A2  128F               	bcf	15,5	;volatile
  1113                           
  1114                           ;funciones.c: 143:             OSCCONbits.IRCF0 = 0;
  1115  00A3  120F               	bcf	15,4	;volatile
  1116  00A4                     l106:	
  1117                           ;funciones.c: 144:         case 1:
  1118                           
  1119                           
  1120                           ;funciones.c: 145:             OSCCONbits.IRCF2 = 0;
  1121  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  1122  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  1123  00A6  130F               	bcf	15,6	;volatile
  1124                           
  1125                           ;funciones.c: 146:             OSCCONbits.IRCF1 = 0;
  1126  00A7  128F               	bcf	15,5	;volatile
  1127                           
  1128                           ;funciones.c: 147:             OSCCONbits.IRCF0 = 1;
  1129  00A8  160F               	bsf	15,4	;volatile
  1130  00A9                     l107:	
  1131                           ;funciones.c: 148:         case 2:
  1132                           
  1133                           
  1134                           ;funciones.c: 149:             OSCCONbits.IRCF2 = 0;
  1135  00A9  1683               	bsf	3,5	;RP0=1, select bank1
  1136  00AA  1303               	bcf	3,6	;RP1=0, select bank1
  1137  00AB  130F               	bcf	15,6	;volatile
  1138                           
  1139                           ;funciones.c: 150:             OSCCONbits.IRCF1 = 1;
  1140  00AC  168F               	bsf	15,5	;volatile
  1141                           
  1142                           ;funciones.c: 151:             OSCCONbits.IRCF0 = 0;
  1143  00AD  120F               	bcf	15,4	;volatile
  1144  00AE                     l108:	
  1145                           ;funciones.c: 152:         case 3:
  1146                           
  1147                           
  1148                           ;funciones.c: 153:             OSCCONbits.IRCF2 = 0;
  1149  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  1150  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  1151  00B0  130F               	bcf	15,6	;volatile
  1152                           
  1153                           ;funciones.c: 154:             OSCCONbits.IRCF1 = 1;
  1154  00B1  168F               	bsf	15,5	;volatile
  1155                           
  1156                           ;funciones.c: 155:             OSCCONbits.IRCF0 = 1;
  1157  00B2  160F               	bsf	15,4	;volatile
  1158  00B3                     l109:	
  1159                           ;funciones.c: 156:         case 4:
  1160                           
  1161                           
  1162                           ;funciones.c: 157:             OSCCONbits.IRCF2 = 1;
  1163  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  1164  00B4  1303               	bcf	3,6	;RP1=0, select bank1
  1165  00B5  170F               	bsf	15,6	;volatile
  1166                           
  1167                           ;funciones.c: 158:             OSCCONbits.IRCF1 = 0;
  1168  00B6  128F               	bcf	15,5	;volatile
  1169                           
  1170                           ;funciones.c: 159:             OSCCONbits.IRCF0 = 0;
  1171  00B7  120F               	bcf	15,4	;volatile
  1172  00B8                     l110:	
  1173                           ;funciones.c: 160:         case 5:
  1174                           
  1175                           
  1176                           ;funciones.c: 161:             OSCCONbits.IRCF2 = 1;
  1177  00B8  1683               	bsf	3,5	;RP0=1, select bank1
  1178  00B9  1303               	bcf	3,6	;RP1=0, select bank1
  1179  00BA  170F               	bsf	15,6	;volatile
  1180                           
  1181                           ;funciones.c: 162:             OSCCONbits.IRCF1 = 0;
  1182  00BB  128F               	bcf	15,5	;volatile
  1183                           
  1184                           ;funciones.c: 163:             OSCCONbits.IRCF0 = 1;
  1185  00BC  160F               	bsf	15,4	;volatile
  1186  00BD                     l111:	
  1187                           ;funciones.c: 164:         case 6:
  1188                           
  1189                           
  1190                           ;funciones.c: 165:             OSCCONbits.IRCF2 = 1;
  1191  00BD  1683               	bsf	3,5	;RP0=1, select bank1
  1192  00BE  1303               	bcf	3,6	;RP1=0, select bank1
  1193  00BF  170F               	bsf	15,6	;volatile
  1194                           
  1195                           ;funciones.c: 166:             OSCCONbits.IRCF1 = 1;
  1196  00C0  168F               	bsf	15,5	;volatile
  1197                           
  1198                           ;funciones.c: 167:             OSCCONbits.IRCF0 = 0;
  1199  00C1  120F               	bcf	15,4	;volatile
  1200  00C2                     l112:	
  1201                           ;funciones.c: 168:         case 7:
  1202                           
  1203                           
  1204                           ;funciones.c: 169:             OSCCONbits.IRCF2 = 1;
  1205  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  1206  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  1207  00C4  170F               	bsf	15,6	;volatile
  1208                           
  1209                           ;funciones.c: 170:             OSCCONbits.IRCF1 = 1;
  1210  00C5  168F               	bsf	15,5	;volatile
  1211                           
  1212                           ;funciones.c: 171:             OSCCONbits.IRCF0 = 1;
  1213  00C6  160F               	bsf	15,4	;volatile
  1214  00C7                     l113:	
  1215                           ;funciones.c: 172:         default:
  1216                           
  1217                           
  1218                           ;funciones.c: 173:             OSCCONbits.IRCF2 = 1;
  1219  00C7  1683               	bsf	3,5	;RP0=1, select bank1
  1220  00C8  1303               	bcf	3,6	;RP1=0, select bank1
  1221  00C9  170F               	bsf	15,6	;volatile
  1222                           
  1223                           ;funciones.c: 174:             OSCCONbits.IRCF1 = 1;
  1224  00CA  168F               	bsf	15,5	;volatile
  1225                           
  1226                           ;funciones.c: 175:             OSCCONbits.IRCF0 = 0;
  1227  00CB  120F               	bcf	15,4	;volatile
  1228                           
  1229                           ;funciones.c: 176:     }
  1230  00CC  0008               	return
  1231  00CD                     l859:	
  1232  00CD  0875               	movf	oscillator@a,w
  1233  00CE  00F3               	movwf	??_oscillator
  1234  00CF  01F4               	clrf	??_oscillator+1
  1235                           
  1236                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1237                           ; Switch size 1, requested type "simple"
  1238                           ; Number of cases is 1, Range of values is 0 to 0
  1239                           ; switch strategies available:
  1240                           ; Name         Instructions Cycles
  1241                           ; simple_byte            4     3 (average)
  1242                           ; direct_byte           11     8 (fixed)
  1243                           ; jumptable            260     6 (fixed)
  1244                           ;	Chosen strategy is simple_byte
  1245  00D0  0874               	movf	??_oscillator+1,w
  1246  00D1  3A00               	xorlw	0	; case 0
  1247  00D2  1903               	skipnz
  1248  00D3  28D5               	goto	l1183
  1249  00D4  28C7               	goto	l113
  1250  00D5                     l1183:	
  1251                           
  1252                           ; Switch size 1, requested type "simple"
  1253                           ; Number of cases is 8, Range of values is 0 to 7
  1254                           ; switch strategies available:
  1255                           ; Name         Instructions Cycles
  1256                           ; simple_byte           25    13 (average)
  1257                           ; direct_byte           32     8 (fixed)
  1258                           ; jumptable            260     6 (fixed)
  1259                           ;	Chosen strategy is simple_byte
  1260  00D5  0873               	movf	??_oscillator,w
  1261  00D6  3A00               	xorlw	0	; case 0
  1262  00D7  1903               	skipnz
  1263  00D8  289F               	goto	l105
  1264  00D9  3A01               	xorlw	1	; case 1
  1265  00DA  1903               	skipnz
  1266  00DB  28A4               	goto	l106
  1267  00DC  3A03               	xorlw	3	; case 2
  1268  00DD  1903               	skipnz
  1269  00DE  28A9               	goto	l107
  1270  00DF  3A01               	xorlw	1	; case 3
  1271  00E0  1903               	skipnz
  1272  00E1  28AE               	goto	l108
  1273  00E2  3A07               	xorlw	7	; case 4
  1274  00E3  1903               	skipnz
  1275  00E4  28B3               	goto	l109
  1276  00E5  3A01               	xorlw	1	; case 5
  1277  00E6  1903               	skipnz
  1278  00E7  28B8               	goto	l110
  1279  00E8  3A03               	xorlw	3	; case 6
  1280  00E9  1903               	skipnz
  1281  00EA  28BD               	goto	l111
  1282  00EB  3A01               	xorlw	1	; case 7
  1283  00EC  1903               	skipnz
  1284  00ED  28C2               	goto	l112
  1285  00EE  28C7               	goto	l113
  1286  00EF  0008               	return
  1287  00F0                     __end_of_oscillator:	
  1288                           
  1289                           	psect	text5
  1290  0180                     __ptext5:	
  1291 ;; *************** function _init_PWM_2 *****************
  1292 ;; Defined at:
  1293 ;;		line 26 in file "PWM.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;		None
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;		None
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      void 
  1300 ;; Registers used:
  1301 ;;		wreg
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1307 ;;      Params:         0       0       0       0       0
  1308 ;;      Locals:         0       0       0       0       0
  1309 ;;      Temps:          0       0       0       0       0
  1310 ;;      Totals:         0       0       0       0       0
  1311 ;;Total ram usage:        0 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; Hardware stack levels required when called:    1
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_main
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           
  1322                           ;psect for function _init_PWM_2
  1323  0180                     _init_PWM_2:	
  1324                           
  1325                           ;PWM.c: 27:     TRISCbits.TRISC1 = 1;
  1326                           
  1327                           ;incstack = 0
  1328                           ; Regs used in _init_PWM_2: [wreg]
  1329  0180  1683               	bsf	3,5	;RP0=1, select bank1
  1330  0181  1303               	bcf	3,6	;RP1=0, select bank1
  1331  0182  1487               	bsf	7,1	;volatile
  1332                           
  1333                           ;PWM.c: 29:     PR2 = 255;
  1334  0183  30FF               	movlw	255
  1335  0184  0092               	movwf	18	;volatile
  1336                           
  1337                           ;PWM.c: 31:     CCP2CONbits.CCP2M3 = 1;
  1338  0185  1283               	bcf	3,5	;RP0=0, select bank0
  1339  0186  1303               	bcf	3,6	;RP1=0, select bank0
  1340  0187  159D               	bsf	29,3	;volatile
  1341                           
  1342                           ;PWM.c: 32:     CCP2CONbits.CCP2M2 = 1;
  1343  0188  151D               	bsf	29,2	;volatile
  1344                           
  1345                           ;PWM.c: 33:     CCP2CONbits.CCP2M1 = 1;
  1346  0189  149D               	bsf	29,1	;volatile
  1347                           
  1348                           ;PWM.c: 34:     CCP2CONbits.CCP2M0 = 1;
  1349  018A  141D               	bsf	29,0	;volatile
  1350                           
  1351                           ;PWM.c: 37:     CCPR2L = 0b10011001;
  1352  018B  3099               	movlw	153
  1353  018C  009B               	movwf	27	;volatile
  1354                           
  1355                           ;PWM.c: 38:     CCP2CONbits.DC2B0 = 0;
  1356  018D  121D               	bcf	29,4	;volatile
  1357                           
  1358                           ;PWM.c: 39:     CCP2CONbits.DC2B1 = 0;
  1359  018E  129D               	bcf	29,5	;volatile
  1360                           
  1361                           ;PWM.c: 41:     PIR1bits.TMR2IF = 0;
  1362  018F  108C               	bcf	12,1	;volatile
  1363                           
  1364                           ;PWM.c: 42:     T2CONbits.T2CKPS1 = 1;
  1365  0190  1492               	bsf	18,1	;volatile
  1366                           
  1367                           ;PWM.c: 43:     T2CONbits.T2CKPS0 = 1;
  1368  0191  1412               	bsf	18,0	;volatile
  1369                           
  1370                           ;PWM.c: 45:     T2CONbits.TMR2ON = 1;
  1371  0192  1512               	bsf	18,2	;volatile
  1372  0193                     l209:	
  1373                           ;PWM.c: 49:     }
  1374                           
  1375                           ;PWM.c: 47:     while(PIR1bits.TMR2IF == 1){
  1376                           
  1377                           
  1378                           ;PWM.c: 47:     while(PIR1bits.TMR2IF == 1){
  1379  0193  1C8C               	btfss	12,1	;volatile
  1380  0194  2997               	goto	l211
  1381                           
  1382                           ;PWM.c: 48:         PIR1bits.TMR2IF = 0;
  1383  0195  108C               	bcf	12,1	;volatile
  1384  0196  2993               	goto	l209
  1385  0197                     l211:	
  1386                           
  1387                           ;PWM.c: 51:     TRISCbits.TRISC1 = 0;
  1388  0197  1683               	bsf	3,5	;RP0=1, select bank1
  1389  0198  1303               	bcf	3,6	;RP1=0, select bank1
  1390  0199  1087               	bcf	7,1	;volatile
  1391  019A  0008               	return
  1392  019B                     __end_of_init_PWM_2:	
  1393                           
  1394                           	psect	text6
  1395  019B                     __ptext6:	
  1396 ;; *************** function _init_PWM_1 *****************
  1397 ;; Defined at:
  1398 ;;		line 54 in file "PWM.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;		None
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;		None
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1412 ;;      Params:         0       0       0       0       0
  1413 ;;      Locals:         0       0       0       0       0
  1414 ;;      Temps:          0       0       0       0       0
  1415 ;;      Totals:         0       0       0       0       0
  1416 ;;Total ram usage:        0 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; Hardware stack levels required when called:    1
  1419 ;; This function calls:
  1420 ;;		Nothing
  1421 ;; This function is called by:
  1422 ;;		_main
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           
  1427                           ;psect for function _init_PWM_1
  1428  019B                     _init_PWM_1:	
  1429                           
  1430                           ;PWM.c: 55:     TRISCbits.TRISC2 = 1;
  1431                           
  1432                           ;incstack = 0
  1433                           ; Regs used in _init_PWM_1: [wreg]
  1434  019B  1683               	bsf	3,5	;RP0=1, select bank1
  1435  019C  1303               	bcf	3,6	;RP1=0, select bank1
  1436  019D  1507               	bsf	7,2	;volatile
  1437                           
  1438                           ;PWM.c: 59:     CCP1CONbits.CCP1M3 = 1;
  1439  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1440  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1441  01A0  1597               	bsf	23,3	;volatile
  1442                           
  1443                           ;PWM.c: 60:     CCP1CONbits.CCP1M2 = 1;
  1444  01A1  1517               	bsf	23,2	;volatile
  1445                           
  1446                           ;PWM.c: 61:     CCP1CONbits.CCP1M1 = 0;
  1447  01A2  1097               	bcf	23,1	;volatile
  1448                           
  1449                           ;PWM.c: 62:     CCP1CONbits.CCP1M0 = 0;
  1450  01A3  1017               	bcf	23,0	;volatile
  1451                           
  1452                           ;PWM.c: 64:     CCP1CONbits.P1M1 = 0;
  1453  01A4  1397               	bcf	23,7	;volatile
  1454                           
  1455                           ;PWM.c: 65:     CCP1CONbits.P1M0 = 0;
  1456  01A5  1317               	bcf	23,6	;volatile
  1457                           
  1458                           ;PWM.c: 68:     CCPR1L = 0b10011001;
  1459  01A6  3099               	movlw	153
  1460  01A7  0095               	movwf	21	;volatile
  1461                           
  1462                           ;PWM.c: 69:     CCP1CONbits.DC1B0 = 0;
  1463  01A8  1217               	bcf	23,4	;volatile
  1464                           
  1465                           ;PWM.c: 70:     CCP1CONbits.DC1B1 = 0;
  1466  01A9  1297               	bcf	23,5	;volatile
  1467                           
  1468                           ;PWM.c: 72:     PIR1bits.TMR2IF = 0;
  1469  01AA  108C               	bcf	12,1	;volatile
  1470                           
  1471                           ;PWM.c: 73:     T2CONbits.T2CKPS1 = 1;
  1472  01AB  1492               	bsf	18,1	;volatile
  1473                           
  1474                           ;PWM.c: 74:     T2CONbits.T2CKPS0 = 1;
  1475  01AC  1412               	bsf	18,0	;volatile
  1476                           
  1477                           ;PWM.c: 76:     T2CONbits.TMR2ON = 1;
  1478  01AD  1512               	bsf	18,2	;volatile
  1479  01AE                     l215:	
  1480                           ;PWM.c: 80:     }
  1481                           
  1482                           ;PWM.c: 78:     while(PIR1bits.TMR2IF == 1){
  1483                           
  1484                           
  1485                           ;PWM.c: 78:     while(PIR1bits.TMR2IF == 1){
  1486  01AE  1C8C               	btfss	12,1	;volatile
  1487  01AF  29B2               	goto	l217
  1488                           
  1489                           ;PWM.c: 79:         PIR1bits.TMR2IF = 0;
  1490  01B0  108C               	bcf	12,1	;volatile
  1491  01B1  29AE               	goto	l215
  1492  01B2                     l217:	
  1493                           
  1494                           ;PWM.c: 82:     TRISCbits.TRISC2 = 0;
  1495  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  1496  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  1497  01B4  1107               	bcf	7,2	;volatile
  1498  01B5  0008               	return
  1499  01B6                     __end_of_init_PWM_1:	
  1500                           
  1501                           	psect	text7
  1502  01B6                     __ptext7:	
  1503 ;; *************** function _I2C_Slave_Init *****************
  1504 ;; Defined at:
  1505 ;;		line 93 in file "I2C.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;  address         1    wreg     unsigned char 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  address         1    3[COMMON] unsigned char 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1519 ;;      Params:         0       0       0       0       0
  1520 ;;      Locals:         1       0       0       0       0
  1521 ;;      Temps:          0       0       0       0       0
  1522 ;;      Totals:         1       0       0       0       0
  1523 ;;Total ram usage:        1 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:    1
  1526 ;; This function calls:
  1527 ;;		Nothing
  1528 ;; This function is called by:
  1529 ;;		_main
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           
  1534                           ;psect for function _I2C_Slave_Init
  1535  01B6                     _I2C_Slave_Init:	
  1536                           
  1537                           ;incstack = 0
  1538                           ; Regs used in _I2C_Slave_Init: [wreg]
  1539                           ;I2C_Slave_Init@address stored from wreg
  1540  01B6  00F3               	movwf	I2C_Slave_Init@address
  1541                           
  1542                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
  1543  01B7  0873               	movf	I2C_Slave_Init@address,w
  1544  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  1545  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  1546  01BA  0093               	movwf	19	;volatile
  1547                           
  1548                           ;I2C.c: 96:     SSPCON = 0x36;
  1549  01BB  3036               	movlw	54
  1550  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1551  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1552  01BE  0094               	movwf	20	;volatile
  1553                           
  1554                           ;I2C.c: 97:     SSPSTAT = 0x80;
  1555  01BF  3080               	movlw	128
  1556  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  1557  01C1  1303               	bcf	3,6	;RP1=0, select bank1
  1558  01C2  0094               	movwf	20	;volatile
  1559                           
  1560                           ;I2C.c: 98:     SSPCON2 = 0x01;
  1561  01C3  3001               	movlw	1
  1562  01C4  0091               	movwf	17	;volatile
  1563                           
  1564                           ;I2C.c: 99:     TRISC3 = 1;
  1565  01C5  1587               	bsf	7,3	;volatile
  1566                           
  1567                           ;I2C.c: 100:     TRISC4 = 1;
  1568  01C6  1607               	bsf	7,4	;volatile
  1569                           
  1570                           ;I2C.c: 101:     GIE = 1;
  1571  01C7  178B               	bsf	11,7	;volatile
  1572                           
  1573                           ;I2C.c: 102:     PEIE = 1;
  1574  01C8  170B               	bsf	11,6	;volatile
  1575                           
  1576                           ;I2C.c: 103:     SSPIF = 0;
  1577  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1578  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1579  01CB  118C               	bcf	12,3	;volatile
  1580                           
  1581                           ;I2C.c: 104:     SSPIE = 1;
  1582  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  1583  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  1584  01CE  158C               	bsf	12,3	;volatile
  1585  01CF  0008               	return
  1586  01D0                     __end_of_I2C_Slave_Init:	
  1587                           
  1588                           	psect	text8
  1589  00F0                     __ptext8:	
  1590 ;; *************** function _ISR *****************
  1591 ;; Defined at:
  1592 ;;		line 35 in file "newmain.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1606 ;;      Params:         0       0       0       0       0
  1607 ;;      Locals:         0       0       0       0       0
  1608 ;;      Temps:          3       0       0       0       0
  1609 ;;      Totals:         3       0       0       0       0
  1610 ;;Total ram usage:        3 bytes
  1611 ;; Hardware stack levels used:    1
  1612 ;; This function calls:
  1613 ;;		Nothing
  1614 ;; This function is called by:
  1615 ;;		Interrupt level 1
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           
  1620                           ;psect for function _ISR
  1621  00F0                     _ISR:	
  1622                           
  1623                           ;newmain.c: 36:     if(PIR1bits.SSPIF == 1){
  1624  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1625  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1626  00F2  1D8C               	btfss	12,3	;volatile
  1627  00F3  291F               	goto	i1l60
  1628                           
  1629                           ;newmain.c: 38:         SSPCONbits.CKP = 0;
  1630  00F4  1214               	bcf	20,4	;volatile
  1631                           
  1632                           ;newmain.c: 40:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1633  00F5  1B14               	btfsc	20,6	;volatile
  1634  00F6  28F9               	goto	i1l973
  1635  00F7  1F94               	btfss	20,7	;volatile
  1636  00F8  2901               	goto	i1l52
  1637  00F9                     i1l973:	
  1638                           
  1639                           ;newmain.c: 41:             z = SSPBUF;
  1640  00F9  0813               	movf	19,w	;volatile
  1641  00FA  00F0               	movwf	??_ISR
  1642  00FB  0870               	movf	??_ISR,w
  1643  00FC  00FD               	movwf	_z
  1644                           
  1645                           ;newmain.c: 42:             SSPCONbits.SSPOV = 0;
  1646  00FD  1314               	bcf	20,6	;volatile
  1647                           
  1648                           ;newmain.c: 43:             SSPCONbits.WCOL = 0;
  1649  00FE  1394               	bcf	20,7	;volatile
  1650                           
  1651                           ;newmain.c: 44:             SSPCONbits.CKP = 1;
  1652  00FF  1614               	bsf	20,4	;volatile
  1653                           
  1654                           ;newmain.c: 45:         }
  1655  0100  291D               	goto	i1l55
  1656  0101                     i1l52:	
  1657                           ;newmain.c: 57:         else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1658                           
  1659  0101  1683               	bsf	3,5	;RP0=1, select bank1
  1660  0102  1303               	bcf	3,6	;RP1=0, select bank1
  1661  0103  1E94               	btfss	20,5	;volatile
  1662  0104  1D14               	btfss	20,2	;volatile
  1663  0105  291D               	goto	i1l55
  1664                           
  1665                           ;newmain.c: 58:             z = SSPBUF;
  1666  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1667  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1668  0108  0813               	movf	19,w	;volatile
  1669  0109  00F0               	movwf	??_ISR
  1670  010A  0870               	movf	??_ISR,w
  1671  010B  00FD               	movwf	_z
  1672                           
  1673                           ;newmain.c: 59:             BF = 0;
  1674  010C  1683               	bsf	3,5	;RP0=1, select bank1
  1675  010D  1303               	bcf	3,6	;RP1=0, select bank1
  1676  010E  1014               	bcf	20,0	;volatile
  1677                           
  1678                           ;newmain.c: 60:             SSPBUF = distancia_1;
  1679  010F  087B               	movf	_distancia_1,w
  1680  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1681  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1682  0112  0093               	movwf	19	;volatile
  1683                           
  1684                           ;newmain.c: 61:             SSPCONbits.CKP = 1;
  1685  0113  1614               	bsf	20,4	;volatile
  1686                           
  1687                           ;newmain.c: 62:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1688  0114  30A6               	movlw	166
  1689  0115  00F0               	movwf	??_ISR
  1690  0116                     u26_27:	
  1691  0116  0BF0               	decfsz	??_ISR,f
  1692  0117  2916               	goto	u26_27
  1693  0118  0000               	nop
  1694  0119                     i1l57:	
  1695                           ;newmain.c: 63:             while(SSPSTATbits.BF);
  1696                           
  1697  0119  1683               	bsf	3,5	;RP0=1, select bank1
  1698  011A  1303               	bcf	3,6	;RP1=0, select bank1
  1699  011B  1814               	btfsc	20,0	;volatile
  1700  011C  2919               	goto	i1l57
  1701  011D                     i1l55:	
  1702                           
  1703                           ;newmain.c: 66:         PIR1bits.SSPIF = 0;
  1704  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1705  011E  118C               	bcf	12,3	;volatile
  1706  011F                     i1l60:	
  1707  011F  0872               	movf	??_ISR+2,w
  1708  0120  008A               	movwf	10
  1709  0121  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
  1710  0122  0083               	movwf	3
  1711  0123  0EFE               	swapf	126,f
  1712  0124  0E7E               	swapf	126,w
  1713  0125  0009               	retfie
  1714  0126                     __end_of_ISR:	
  1715  007E                     btemp	set	126	;btemp
  1716  007E                     wtemp0	set	126
  1717                           
  1718                           	psect	intentry
  1719  0004                     __pintentry:	
  1720                           ;incstack = 0
  1721                           ; Regs used in _ISR: [wreg]
  1722                           
  1723  0004                     interrupt_function:	
  1724  007E                     saved_w	set	btemp
  1725  0004  00FE               	movwf	btemp
  1726  0005  0E03               	swapf	3,w
  1727  0006  00F1               	movwf	??_ISR+1
  1728  0007  080A               	movf	10,w
  1729  0008  00F2               	movwf	??_ISR+2
  1730  0009  120A  118A  28F0   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_oscillator
    _main->_robot_CCW90
    _main->_robot_CW90

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      30
                                              6 COMMON     3     3      0
                     _I2C_Slave_Init
                         _init_PWM_1
                         _init_PWM_2
                         _oscillator
                        _robot_CCW90
                         _robot_CW90
 ---------------------------------------------------------------------------------
 (1) _robot_CW90                                           3     3      0       0
                                              3 COMMON     3     3      0
                         _robot_STOP
 ---------------------------------------------------------------------------------
 (1) _robot_CCW90                                          3     3      0       0
                                              3 COMMON     3     3      0
                         _robot_STOP
 ---------------------------------------------------------------------------------
 (2) _robot_STOP                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _oscillator                                           3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init_PWM_2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_PWM_1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init
   _init_PWM_1
   _init_PWM_2
   _oscillator
   _robot_CCW90
     _robot_STOP
   _robot_CW90
     _robot_STOP

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar 19 20:34:52 2020

                       _z 007D               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _BF 04A0                        l66 009C                       l110 00B8  
                     l111 00BD                       l112 00C2                       l113 00C7  
                     l105 009F                       l106 00A4                       l211 0197  
                     l107 00A9                       l108 00AE                       l109 00B3  
                     l215 01AE                       l217 01B2                       l209 0193  
                     l859 00CD                       _GIE 005F                       _RD0 0040  
                     _RA6 002E                       _RD1 0041                       _RA7 002F  
                     _RD2 0042                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       u207 0075                       u217 0082  
                     u227 0131                       u237 0148                       _PR2 0092  
                     u247 015E                       u257 0175                       u177 004E  
            __CFG_CPD$OFF 0000                       u187 005B                       _ISR 00F0  
                     u197 0068              __CFG_LVP$OFF 0000                      ?_ISR 0070  
                    l1183 00D5                      _PEIE 005E                      i1l52 0101  
                    i1l60 011F                      i1l55 011D                      i1l57 0119  
            __CFG_WRT$OFF 0000                      _main 0018                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_ISR 0070  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   _T1CON 0010                     i1l973 00F9                     _TMR1H 000F  
                   _TMR1L 000E                     u26_27 0116                     _PORTB 0006  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088                     _SSPIE 0463                     _SSPIF 0063  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 009D                    ??_main 0076  
                  _CCPR1L 0015                    _CCPR2L 001B                    _ANSELH 0189  
                  _SSPADD 0093                    _TRISC3 043B                    _TRISC4 043C  
                  _SSPBUF 0013                    _SSPCON 0014            __CFG_PWRTE$OFF 0000  
            ?_robot_CCW90 0070                    saved_w 007E   __end_of__initialization 0014  
          __pcstackCOMMON 0070   __size_of_I2C_Slave_Init 001A     I2C_Slave_Init@address 0073  
              __pmaintext 0018                __pintentry 0004                   _SSPCON2 0091  
                 _SSPSTAT 0094                _init_PWM_1 019B                _init_PWM_2 0180  
                 __ptext1 0126                   __ptext2 0153                   __ptext3 01D0  
                 __ptext4 009D                   __ptext5 0180                   __ptext6 019B  
                 __ptext7 01B6                   __ptext8 00F0      __size_of_robot_CCW90 002D  
            __size_of_ISR 0036                 _T1CONbits 0010                 _T2CONbits 0012  
             oscillator@a 0075      end_of_initialization 0014                _oscillator 009D  
          _I2C_Slave_Init 01B6                _robot_CW90 0126                _robot_STOP 01D0  
               _PORTAbits 0005                 _TRISCbits 0087               _CCP1CONbits 0017  
             _CCP2CONbits 001D    __end_of_I2C_Slave_Init 01D0               ?_init_PWM_1 0070  
             ?_init_PWM_2 0070       start_initialization 000F               __end_of_ISR 0126  
__CFG_FOSC$INTRC_NOCLKOUT 0000           ?_I2C_Slave_Init 0070               ?_oscillator 0070  
             ?_robot_CW90 0070               ?_robot_STOP 0070               __pbssCOMMON 0079  
               ___latbits 0002       __size_of_init_PWM_1 001B       __size_of_init_PWM_2 001B  
     __size_of_oscillator 0053       __size_of_robot_CW90 002D       __size_of_robot_STOP 000B  
       interrupt_function 0004                  _PIR1bits 000C             ??_robot_CCW90 0073  
             _distancia_1 007B               _distancia_2 0079              ??_init_PWM_1 0073  
            ??_init_PWM_2 0073       __end_of_robot_CCW90 0180         __CFG_BOR4V$BOR40V 0000  
      __end_of_init_PWM_1 01B6        __end_of_init_PWM_2 019B          ??_I2C_Slave_Init 0073  
           __size_of_main 0085              ??_oscillator 0073              ??_robot_CW90 0073  
            ??_robot_STOP 0073        __end_of_oscillator 00F0                  intlevel1 0000  
      __end_of_robot_CW90 0153        __end_of_robot_STOP 01DB                _OSCCONbits 008F  
             _robot_CCW90 0153               _SSPCON2bits 0091                _SSPCONbits 0014  

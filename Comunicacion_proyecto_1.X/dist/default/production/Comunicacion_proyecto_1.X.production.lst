

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Mar 13 13:50:35 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0013                     _SSPBUF	set	19
   367  0014                     _SSPCON	set	20
   368  0018                     _RCSTAbits	set	24
   369  001A                     _RCREG	set	26
   370  000C                     _PIR1bits	set	12
   371  0007                     _PORTC	set	7
   372  0094                     _SSPSTATbits	set	148
   373  0094                     _SSPSTAT	set	148
   374  008F                     _OSCCONbits	set	143
   375  009A                     _SPBRGH	set	154
   376  0099                     _SPBRG	set	153
   377  0098                     _TXSTAbits	set	152
   378  0087                     _TRISC	set	135
   379  043B                     _TRISC3	set	1083
   380  043D                     _TRISC5	set	1085
   381  0187                     _BAUDCTLbits	set	391
   382                           
   383                           ; #config settings
   384  0000                     
   385                           	psect	cinit
   386  000F                     start_initialization:	
   387  000F                     __initialization:	
   388                           
   389                           ; Clear objects allocated to COMMON
   390  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   391  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   392  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   393  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   394                           
   395                           ; Clear objects allocated to BANK0
   396  0013  1283               	bcf	3,5	;RP0=0, select bank0
   397  0014  1303               	bcf	3,6	;RP1=0, select bank0
   398  0015  01A0               	clrf	__pbssBANK0& (0+127)
   399  0016  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   400  0017  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   401  0018  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   402  0019  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   403  001A  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   404  001B                     end_of_initialization:	
   405                           ;End of C runtime variable initialization code
   406                           
   407  001B                     __end_of__initialization:	
   408  001B  0183               	clrf	3
   409  001C  120A  118A  2895   	ljmp	_main	;jump to C main() function
   410                           
   411                           	psect	bssCOMMON
   412  0076                     __pbssCOMMON:	
   413  0076                     _distancia_ade:	
   414  0076                     	ds	1
   415  0077                     _distancia_atr:	
   416  0077                     	ds	1
   417  0078                     _bandera_1:	
   418  0078                     	ds	1
   419  0079                     _recibir_rasp:	
   420  0079                     	ds	1
   421                           
   422                           	psect	bssBANK0
   423  0020                     __pbssBANK0:	
   424  0020                     _humedad:	
   425  0020                     	ds	1
   426  0021                     _tiempo:	
   427  0021                     	ds	1
   428  0022                     _posicion:	
   429  0022                     	ds	1
   430  0023                     _temp_obj:	
   431  0023                     	ds	1
   432  0024                     _temp_amb:	
   433  0024                     	ds	1
   434  0025                     _mandar_rasp:	
   435  0025                     	ds	1
   436                           
   437                           	psect	cstackCOMMON
   438  0070                     __pcstackCOMMON:	
   439  0070                     ?_oscillator:	
   440  0070                     ?_init_serial:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_spiRead:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ??_spiRead:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_spiWrite:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ??_spiWrite:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_main:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_isr:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_spiReceiveWait:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ??_spiReceiveWait:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     spiWrite@dat:	
   468                           ; 1 bytes @ 0x0
   469                           
   470                           
   471                           ; 1 bytes @ 0x0
   472  0070                     	ds	1
   473  0071                     ??_isr:	
   474                           
   475                           ; 1 bytes @ 0x1
   476  0071                     	ds	3
   477  0074                     ??_oscillator:	
   478  0074                     ??_init_serial:	
   479                           ; 1 bytes @ 0x4
   480                           
   481  0074                     ??_spiInit:	
   482                           ; 1 bytes @ 0x4
   483                           
   484  0074                     spiInit@sType:	
   485                           ; 1 bytes @ 0x4
   486                           
   487                           
   488                           ; 1 bytes @ 0x4
   489  0074                     	ds	2
   490                           
   491                           	psect	cstackBANK0
   492  0026                     __pcstackBANK0:	
   493  0026                     ?_spiInit:	
   494  0026                     oscillator@a:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0026                     spiInit@sDataSample:	
   498                           ; 1 bytes @ 0x0
   499                           
   500                           
   501                           ; 1 bytes @ 0x0
   502  0026                     	ds	1
   503  0027                     spiInit@sClockIdle:	
   504                           
   505                           ; 1 bytes @ 0x1
   506  0027                     	ds	1
   507  0028                     spiInit@sTransmitEdge:	
   508                           
   509                           ; 1 bytes @ 0x2
   510  0028                     	ds	1
   511  0029                     ??_main:	
   512                           
   513                           ; 1 bytes @ 0x3
   514  0029                     	ds	2
   515                           
   516                           	psect	maintext
   517  0095                     __pmaintext:	
   518 ;;
   519 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   520 ;;
   521 ;; *************** function _main *****************
   522 ;; Defined at:
   523 ;;		line 42 in file "comunicacion_main.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;		None
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : B00/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   537 ;;      Params:         0       0       0       0       0
   538 ;;      Locals:         0       0       0       0       0
   539 ;;      Temps:          0       2       0       0       0
   540 ;;      Totals:         0       2       0       0       0
   541 ;;Total ram usage:        2 bytes
   542 ;; Hardware stack levels required when called:    4
   543 ;; This function calls:
   544 ;;		_init_serial
   545 ;;		_oscillator
   546 ;;		_spiInit
   547 ;; This function is called by:
   548 ;;		Startup code after reset
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           
   553                           ;psect for function _main
   554  0095                     _main:	
   555  0095                     l1033:	
   556                           ;incstack = 0
   557                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   558                           
   559                           
   560                           ;comunicacion_main.c: 43:     PORTC = 0x00;
   561  0095  1283               	bcf	3,5	;RP0=0, select bank0
   562  0096  1303               	bcf	3,6	;RP1=0, select bank0
   563  0097  0187               	clrf	7	;volatile
   564                           
   565                           ;comunicacion_main.c: 44:     TRISC = 0x00;
   566  0098  1683               	bsf	3,5	;RP0=1, select bank1
   567  0099  1303               	bcf	3,6	;RP1=0, select bank1
   568  009A  0187               	clrf	7	;volatile
   569  009B                     l1035:	
   570                           
   571                           ;comunicacion_main.c: 45:     oscillator(6);
   572  009B  3006               	movlw	6
   573  009C  120A  118A  210A  120A  118A  	fcall	_oscillator
   574  00A1                     l1037:	
   575                           
   576                           ;comunicacion_main.c: 46:     init_serial();
   577  00A1  120A  118A  217D  120A  118A  	fcall	_init_serial
   578  00A6                     l1039:	
   579                           
   580                           ;comunicacion_main.c: 47:     spiInit(SPI_SLAVE_SS_DIS, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOC
      +                          K_IDLE_LOW, SPI_IDLE_2_ACTIVE);
   581  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   582  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   583  00A8  01A6               	clrf	spiInit@sDataSample
   584  00A9  01A7               	clrf	spiInit@sClockIdle
   585  00AA  01A8               	clrf	spiInit@sTransmitEdge
   586  00AB  3025               	movlw	37
   587  00AC  120A  118A  215F  120A  118A  	fcall	_spiInit
   588  00B1                     l1041:	
   589                           
   590                           ;comunicacion_main.c: 52:         if (PIR1bits.RCIF == 1){
   591  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   592  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   593  00B3  1E8C               	btfss	12,5	;volatile
   594  00B4  28B6               	goto	u401
   595  00B5  28B7               	goto	u400
   596  00B6                     u401:	
   597  00B6  28BB               	goto	l1045
   598  00B7                     u400:	
   599  00B7                     l1043:	
   600                           
   601                           ;comunicacion_main.c: 53:             bandera_1 = RCREG;
   602  00B7  081A               	movf	26,w	;volatile
   603  00B8  00A9               	movwf	??_main
   604  00B9  0829               	movf	??_main,w
   605  00BA  00F8               	movwf	_bandera_1
   606  00BB                     l1045:	
   607                           
   608                           ;comunicacion_main.c: 55:         if (bandera_1 == 110){
   609  00BB  306E               	movlw	110
   610  00BC  0678               	xorwf	_bandera_1,w
   611  00BD  1D03               	btfss	3,2
   612  00BE  28C0               	goto	u411
   613  00BF  28C1               	goto	u410
   614  00C0                     u411:	
   615  00C0  28FC               	goto	l1067
   616  00C1                     u410:	
   617  00C1                     l48:	
   618  00C1  1E8C               	btfss	12,5	;volatile
   619  00C2  28C4               	goto	u421
   620  00C3  28C5               	goto	u420
   621  00C4                     u421:	
   622  00C4  28C1               	goto	l48
   623  00C5                     u420:	
   624  00C5                     l1049:	
   625                           
   626                           ;comunicacion_main.c: 57:             distancia_atr = RCREG;
   627  00C5  081A               	movf	26,w	;volatile
   628  00C6  00A9               	movwf	??_main
   629  00C7  0829               	movf	??_main,w
   630  00C8  00F7               	movwf	_distancia_atr
   631  00C9                     l51:	
   632                           ;comunicacion_main.c: 58:             while (PIR1bits.RCIF == 0);
   633                           
   634  00C9  1E8C               	btfss	12,5	;volatile
   635  00CA  28CC               	goto	u431
   636  00CB  28CD               	goto	u430
   637  00CC                     u431:	
   638  00CC  28C9               	goto	l51
   639  00CD                     u430:	
   640  00CD                     l1051:	
   641                           
   642                           ;comunicacion_main.c: 59:             distancia_ade = RCREG;
   643  00CD  081A               	movf	26,w	;volatile
   644  00CE  00A9               	movwf	??_main
   645  00CF  0829               	movf	??_main,w
   646  00D0  00F6               	movwf	_distancia_ade
   647  00D1                     l54:	
   648                           ;comunicacion_main.c: 60:             while (PIR1bits.RCIF == 0);
   649                           
   650  00D1  1E8C               	btfss	12,5	;volatile
   651  00D2  28D4               	goto	u441
   652  00D3  28D5               	goto	u440
   653  00D4                     u441:	
   654  00D4  28D1               	goto	l54
   655  00D5                     u440:	
   656  00D5                     l1053:	
   657                           
   658                           ;comunicacion_main.c: 61:             temp_amb = RCREG;
   659  00D5  081A               	movf	26,w	;volatile
   660  00D6  00A9               	movwf	??_main
   661  00D7  0829               	movf	??_main,w
   662  00D8  00A4               	movwf	_temp_amb
   663  00D9                     l57:	
   664                           ;comunicacion_main.c: 62:             while (PIR1bits.RCIF == 0);
   665                           
   666  00D9  1E8C               	btfss	12,5	;volatile
   667  00DA  28DC               	goto	u451
   668  00DB  28DD               	goto	u450
   669  00DC                     u451:	
   670  00DC  28D9               	goto	l57
   671  00DD                     u450:	
   672  00DD                     l1055:	
   673                           
   674                           ;comunicacion_main.c: 63:             temp_obj = RCREG;
   675  00DD  081A               	movf	26,w	;volatile
   676  00DE  00A9               	movwf	??_main
   677  00DF  0829               	movf	??_main,w
   678  00E0  00A3               	movwf	_temp_obj
   679  00E1                     l60:	
   680                           ;comunicacion_main.c: 64:             while (PIR1bits.RCIF == 0);
   681                           
   682  00E1  1E8C               	btfss	12,5	;volatile
   683  00E2  28E4               	goto	u461
   684  00E3  28E5               	goto	u460
   685  00E4                     u461:	
   686  00E4  28E1               	goto	l60
   687  00E5                     u460:	
   688  00E5                     l1057:	
   689                           
   690                           ;comunicacion_main.c: 65:             posicion = RCREG;
   691  00E5  081A               	movf	26,w	;volatile
   692  00E6  00A9               	movwf	??_main
   693  00E7  0829               	movf	??_main,w
   694  00E8  00A2               	movwf	_posicion
   695  00E9                     l63:	
   696                           ;comunicacion_main.c: 66:             while (PIR1bits.RCIF == 0);
   697                           
   698  00E9  1E8C               	btfss	12,5	;volatile
   699  00EA  28EC               	goto	u471
   700  00EB  28ED               	goto	u470
   701  00EC                     u471:	
   702  00EC  28E9               	goto	l63
   703  00ED                     u470:	
   704  00ED                     l1059:	
   705                           
   706                           ;comunicacion_main.c: 67:             tiempo = RCREG;
   707  00ED  081A               	movf	26,w	;volatile
   708  00EE  00A9               	movwf	??_main
   709  00EF  0829               	movf	??_main,w
   710  00F0  00A1               	movwf	_tiempo
   711  00F1                     l66:	
   712                           ;comunicacion_main.c: 68:             while (PIR1bits.RCIF == 0);
   713                           
   714  00F1  1E8C               	btfss	12,5	;volatile
   715  00F2  28F4               	goto	u481
   716  00F3  28F5               	goto	u480
   717  00F4                     u481:	
   718  00F4  28F1               	goto	l66
   719  00F5                     u480:	
   720  00F5                     l1061:	
   721                           
   722                           ;comunicacion_main.c: 69:             humedad = RCREG;
   723  00F5  081A               	movf	26,w	;volatile
   724  00F6  00A9               	movwf	??_main
   725  00F7  0829               	movf	??_main,w
   726  00F8  00A0               	movwf	_humedad
   727  00F9                     l1063:	
   728                           
   729                           ;comunicacion_main.c: 70:             bandera_1 = 0;
   730  00F9  01F8               	clrf	_bandera_1
   731  00FA                     l1065:	
   732                           
   733                           ;comunicacion_main.c: 71:             mandar_rasp = 1;
   734  00FA  01A5               	clrf	_mandar_rasp
   735  00FB  0AA5               	incf	_mandar_rasp,f
   736  00FC                     l1067:	
   737                           
   738                           ;comunicacion_main.c: 74:         _delay((unsigned long)((10)*(4000000/4000.0)));
   739  00FC  300D               	movlw	13
   740  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   741  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   742  00FF  00AA               	movwf	??_main+1
   743  0100  30FB               	movlw	251
   744  0101  00A9               	movwf	??_main
   745  0102                     u497:	
   746  0102  0BA9               	decfsz	??_main,f
   747  0103  2902               	goto	u497
   748  0104  0BAA               	decfsz	??_main+1,f
   749  0105  2902               	goto	u497
   750  0106  28B1               	goto	l1041
   751  0107  120A  118A  280C   	ljmp	start
   752  010A                     __end_of_main:	
   753                           
   754                           	psect	text1
   755  015F                     __ptext1:	
   756 ;; *************** function _spiInit *****************
   757 ;; Defined at:
   758 ;;		line 14 in file "SPI.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;  sType           1    wreg     enum E1292
   761 ;;  sDataSample     1    0[BANK0 ] enum E1300
   762 ;;  sClockIdle      1    1[BANK0 ] enum E1304
   763 ;;  sTransmitEdg    1    2[BANK0 ] enum E1308
   764 ;; Auto vars:     Size  Location     Type
   765 ;;  sType           1    4[COMMON] enum E1292
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, status,2, status,0
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   775 ;;      Params:         0       3       0       0       0
   776 ;;      Locals:         1       0       0       0       0
   777 ;;      Temps:          0       0       0       0       0
   778 ;;      Totals:         1       3       0       0       0
   779 ;;Total ram usage:        4 bytes
   780 ;; Hardware stack levels used:    1
   781 ;; Hardware stack levels required when called:    3
   782 ;; This function calls:
   783 ;;		Nothing
   784 ;; This function is called by:
   785 ;;		_main
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           
   790                           ;psect for function _spiInit
   791  015F                     _spiInit:	
   792                           
   793                           ;incstack = 0
   794                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   795                           ;spiInit@sType stored from wreg
   796  015F  00F4               	movwf	spiInit@sType
   797  0160                     l1023:	
   798                           
   799                           ;SPI.c: 14: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 15: {;SPI.c: 16:     TRISC5 = 0;
   800  0160  1683               	bsf	3,5	;RP0=1, select bank1
   801  0161  1303               	bcf	3,6	;RP1=0, select bank1
   802  0162  1287               	bcf	7,5	;volatile
   803                           
   804                           ;SPI.c: 17:     if(sType & 0b00000100)
   805  0163  1D74               	btfss	spiInit@sType,2
   806  0164  2966               	goto	u391
   807  0165  2967               	goto	u390
   808  0166                     u391:	
   809  0166  296F               	goto	l1029
   810  0167                     u390:	
   811  0167                     l1025:	
   812                           
   813                           ;SPI.c: 18:     {;SPI.c: 19:         SSPSTAT = sTransmitEdge;
   814  0167  1283               	bcf	3,5	;RP0=0, select bank0
   815  0168  1303               	bcf	3,6	;RP1=0, select bank0
   816  0169  0828               	movf	spiInit@sTransmitEdge,w
   817  016A  1683               	bsf	3,5	;RP0=1, select bank1
   818  016B  1303               	bcf	3,6	;RP1=0, select bank1
   819  016C  0094               	movwf	20	;volatile
   820  016D                     l1027:	
   821                           
   822                           ;SPI.c: 20:         TRISC3 = 1;
   823  016D  1587               	bsf	7,3	;volatile
   824                           
   825                           ;SPI.c: 21:     }
   826  016E  2977               	goto	l129
   827  016F                     l1029:	
   828                           
   829                           ;SPI.c: 23:     {;SPI.c: 24:         SSPSTAT = sDataSample | sTransmitEdge;
   830  016F  1283               	bcf	3,5	;RP0=0, select bank0
   831  0170  1303               	bcf	3,6	;RP1=0, select bank0
   832  0171  0826               	movf	spiInit@sDataSample,w
   833  0172  0428               	iorwf	spiInit@sTransmitEdge,w
   834  0173  1683               	bsf	3,5	;RP0=1, select bank1
   835  0174  1303               	bcf	3,6	;RP1=0, select bank1
   836  0175  0094               	movwf	20	;volatile
   837  0176                     l1031:	
   838                           
   839                           ;SPI.c: 25:         TRISC3 = 0;
   840  0176  1187               	bcf	7,3	;volatile
   841  0177                     l129:	
   842                           ;SPI.c: 26:     }
   843                           
   844                           
   845                           ;SPI.c: 28:     SSPCON = sType | sClockIdle;
   846  0177  0874               	movf	spiInit@sType,w
   847  0178  1283               	bcf	3,5	;RP0=0, select bank0
   848  0179  1303               	bcf	3,6	;RP1=0, select bank0
   849  017A  0427               	iorwf	spiInit@sClockIdle,w
   850  017B  0094               	movwf	20	;volatile
   851  017C                     l130:	
   852  017C  0008               	return
   853  017D                     __end_of_spiInit:	
   854                           
   855                           	psect	text2
   856  010A                     __ptext2:	
   857 ;; *************** function _oscillator *****************
   858 ;; Defined at:
   859 ;;		line 21 in file "serial.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;  a               1    wreg     unsigned char 
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  a               1    0[BANK0 ] unsigned char 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   873 ;;      Params:         0       0       0       0       0
   874 ;;      Locals:         0       1       0       0       0
   875 ;;      Temps:          2       0       0       0       0
   876 ;;      Totals:         2       1       0       0       0
   877 ;;Total ram usage:        3 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; Hardware stack levels required when called:    3
   880 ;; This function calls:
   881 ;;		Nothing
   882 ;; This function is called by:
   883 ;;		_main
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           
   888                           ;psect for function _oscillator
   889  010A                     _oscillator:	
   890                           
   891                           ;incstack = 0
   892                           ; Regs used in _oscillator: [wreg-fsr0h+status,2+status,0]
   893                           ;oscillator@a stored from wreg
   894  010A  1283               	bcf	3,5	;RP0=0, select bank0
   895  010B  1303               	bcf	3,6	;RP1=0, select bank0
   896  010C  00A6               	movwf	oscillator@a
   897  010D                     l1013:	
   898                           
   899                           ;serial.c: 22:     switch(a){
   900  010D  293C               	goto	l1015
   901  010E                     l103:	
   902                           ;serial.c: 23:         case 0:
   903                           
   904                           
   905                           ;serial.c: 24:             OSCCONbits.IRCF2 = 0;
   906  010E  1683               	bsf	3,5	;RP0=1, select bank1
   907  010F  1303               	bcf	3,6	;RP1=0, select bank1
   908  0110  130F               	bcf	15,6	;volatile
   909                           
   910                           ;serial.c: 25:             OSCCONbits.IRCF1 = 0;
   911  0111  128F               	bcf	15,5	;volatile
   912                           
   913                           ;serial.c: 26:             OSCCONbits.IRCF0 = 0;
   914  0112  120F               	bcf	15,4	;volatile
   915  0113                     l104:	
   916                           ;serial.c: 27:         case 1:
   917                           
   918                           
   919                           ;serial.c: 28:             OSCCONbits.IRCF2 = 0;
   920  0113  1683               	bsf	3,5	;RP0=1, select bank1
   921  0114  1303               	bcf	3,6	;RP1=0, select bank1
   922  0115  130F               	bcf	15,6	;volatile
   923                           
   924                           ;serial.c: 29:             OSCCONbits.IRCF1 = 0;
   925  0116  128F               	bcf	15,5	;volatile
   926                           
   927                           ;serial.c: 30:             OSCCONbits.IRCF0 = 1;
   928  0117  160F               	bsf	15,4	;volatile
   929  0118                     l105:	
   930                           ;serial.c: 31:         case 2:
   931                           
   932                           
   933                           ;serial.c: 32:             OSCCONbits.IRCF2 = 0;
   934  0118  1683               	bsf	3,5	;RP0=1, select bank1
   935  0119  1303               	bcf	3,6	;RP1=0, select bank1
   936  011A  130F               	bcf	15,6	;volatile
   937                           
   938                           ;serial.c: 33:             OSCCONbits.IRCF1 = 1;
   939  011B  168F               	bsf	15,5	;volatile
   940                           
   941                           ;serial.c: 34:             OSCCONbits.IRCF0 = 0;
   942  011C  120F               	bcf	15,4	;volatile
   943  011D                     l106:	
   944                           ;serial.c: 35:         case 3:
   945                           
   946                           
   947                           ;serial.c: 36:             OSCCONbits.IRCF2 = 0;
   948  011D  1683               	bsf	3,5	;RP0=1, select bank1
   949  011E  1303               	bcf	3,6	;RP1=0, select bank1
   950  011F  130F               	bcf	15,6	;volatile
   951                           
   952                           ;serial.c: 37:             OSCCONbits.IRCF1 = 1;
   953  0120  168F               	bsf	15,5	;volatile
   954                           
   955                           ;serial.c: 38:             OSCCONbits.IRCF0 = 1;
   956  0121  160F               	bsf	15,4	;volatile
   957  0122                     l107:	
   958                           ;serial.c: 39:         case 4:
   959                           
   960                           
   961                           ;serial.c: 40:             OSCCONbits.IRCF2 = 1;
   962  0122  1683               	bsf	3,5	;RP0=1, select bank1
   963  0123  1303               	bcf	3,6	;RP1=0, select bank1
   964  0124  170F               	bsf	15,6	;volatile
   965                           
   966                           ;serial.c: 41:             OSCCONbits.IRCF1 = 0;
   967  0125  128F               	bcf	15,5	;volatile
   968                           
   969                           ;serial.c: 42:             OSCCONbits.IRCF0 = 0;
   970  0126  120F               	bcf	15,4	;volatile
   971  0127                     l108:	
   972                           ;serial.c: 43:         case 5:
   973                           
   974                           
   975                           ;serial.c: 44:             OSCCONbits.IRCF2 = 1;
   976  0127  1683               	bsf	3,5	;RP0=1, select bank1
   977  0128  1303               	bcf	3,6	;RP1=0, select bank1
   978  0129  170F               	bsf	15,6	;volatile
   979                           
   980                           ;serial.c: 45:             OSCCONbits.IRCF1 = 0;
   981  012A  128F               	bcf	15,5	;volatile
   982                           
   983                           ;serial.c: 46:             OSCCONbits.IRCF0 = 1;
   984  012B  160F               	bsf	15,4	;volatile
   985  012C                     l109:	
   986                           ;serial.c: 47:         case 6:
   987                           
   988                           
   989                           ;serial.c: 48:             OSCCONbits.IRCF2 = 1;
   990  012C  1683               	bsf	3,5	;RP0=1, select bank1
   991  012D  1303               	bcf	3,6	;RP1=0, select bank1
   992  012E  170F               	bsf	15,6	;volatile
   993                           
   994                           ;serial.c: 49:             OSCCONbits.IRCF1 = 1;
   995  012F  168F               	bsf	15,5	;volatile
   996                           
   997                           ;serial.c: 50:             OSCCONbits.IRCF0 = 0;
   998  0130  120F               	bcf	15,4	;volatile
   999  0131                     l110:	
  1000                           ;serial.c: 51:         case 7:
  1001                           
  1002                           
  1003                           ;serial.c: 52:             OSCCONbits.IRCF2 = 1;
  1004  0131  1683               	bsf	3,5	;RP0=1, select bank1
  1005  0132  1303               	bcf	3,6	;RP1=0, select bank1
  1006  0133  170F               	bsf	15,6	;volatile
  1007                           
  1008                           ;serial.c: 53:             OSCCONbits.IRCF1 = 1;
  1009  0134  168F               	bsf	15,5	;volatile
  1010                           
  1011                           ;serial.c: 54:             OSCCONbits.IRCF0 = 1;
  1012  0135  160F               	bsf	15,4	;volatile
  1013  0136                     l111:	
  1014                           ;serial.c: 55:         default:
  1015                           
  1016                           
  1017                           ;serial.c: 56:             OSCCONbits.IRCF2 = 1;
  1018  0136  1683               	bsf	3,5	;RP0=1, select bank1
  1019  0137  1303               	bcf	3,6	;RP1=0, select bank1
  1020  0138  170F               	bsf	15,6	;volatile
  1021                           
  1022                           ;serial.c: 57:             OSCCONbits.IRCF1 = 1;
  1023  0139  168F               	bsf	15,5	;volatile
  1024                           
  1025                           ;serial.c: 58:             OSCCONbits.IRCF0 = 0;
  1026  013A  120F               	bcf	15,4	;volatile
  1027                           
  1028                           ;serial.c: 59:     }
  1029  013B  295E               	goto	l113
  1030  013C                     l1015:	
  1031  013C  0826               	movf	oscillator@a,w
  1032  013D  00F4               	movwf	??_oscillator
  1033  013E  01F5               	clrf	??_oscillator+1
  1034                           
  1035                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1036                           ; Switch size 1, requested type "simple"
  1037                           ; Number of cases is 1, Range of values is 0 to 0
  1038                           ; switch strategies available:
  1039                           ; Name         Instructions Cycles
  1040                           ; simple_byte            4     3 (average)
  1041                           ; direct_byte           11     8 (fixed)
  1042                           ; jumptable            260     6 (fixed)
  1043                           ;	Chosen strategy is simple_byte
  1044  013F  0875               	movf	??_oscillator+1,w
  1045  0140  3A00               	xorlw	0	; case 0
  1046  0141  1903               	skipnz
  1047  0142  2944               	goto	l1099
  1048  0143  2936               	goto	l111
  1049  0144                     l1099:	
  1050                           
  1051                           ; Switch size 1, requested type "simple"
  1052                           ; Number of cases is 8, Range of values is 0 to 7
  1053                           ; switch strategies available:
  1054                           ; Name         Instructions Cycles
  1055                           ; simple_byte           25    13 (average)
  1056                           ; direct_byte           32     8 (fixed)
  1057                           ; jumptable            260     6 (fixed)
  1058                           ;	Chosen strategy is simple_byte
  1059  0144  0874               	movf	??_oscillator,w
  1060  0145  3A00               	xorlw	0	; case 0
  1061  0146  1903               	skipnz
  1062  0147  290E               	goto	l103
  1063  0148  3A01               	xorlw	1	; case 1
  1064  0149  1903               	skipnz
  1065  014A  2913               	goto	l104
  1066  014B  3A03               	xorlw	3	; case 2
  1067  014C  1903               	skipnz
  1068  014D  2918               	goto	l105
  1069  014E  3A01               	xorlw	1	; case 3
  1070  014F  1903               	skipnz
  1071  0150  291D               	goto	l106
  1072  0151  3A07               	xorlw	7	; case 4
  1073  0152  1903               	skipnz
  1074  0153  2922               	goto	l107
  1075  0154  3A01               	xorlw	1	; case 5
  1076  0155  1903               	skipnz
  1077  0156  2927               	goto	l108
  1078  0157  3A03               	xorlw	3	; case 6
  1079  0158  1903               	skipnz
  1080  0159  292C               	goto	l109
  1081  015A  3A01               	xorlw	1	; case 7
  1082  015B  1903               	skipnz
  1083  015C  2931               	goto	l110
  1084  015D  2936               	goto	l111
  1085  015E                     l113:	
  1086  015E  0008               	return
  1087  015F                     __end_of_oscillator:	
  1088                           
  1089                           	psect	text3
  1090  017D                     __ptext3:	
  1091 ;; *************** function _init_serial *****************
  1092 ;; Defined at:
  1093 ;;		line 5 in file "serial.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1107 ;;      Params:         0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0
  1110 ;;      Totals:         0       0       0       0       0
  1111 ;;Total ram usage:        0 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:    3
  1114 ;; This function calls:
  1115 ;;		Nothing
  1116 ;; This function is called by:
  1117 ;;		_main
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           
  1122                           ;psect for function _init_serial
  1123  017D                     _init_serial:	
  1124  017D                     l889:	
  1125                           ;incstack = 0
  1126                           ; Regs used in _init_serial: [wreg+status,2]
  1127                           
  1128                           
  1129                           ;serial.c: 8:     TXSTAbits.SYNC = 0;
  1130  017D  1683               	bsf	3,5	;RP0=1, select bank1
  1131  017E  1303               	bcf	3,6	;RP1=0, select bank1
  1132  017F  1218               	bcf	24,4	;volatile
  1133                           
  1134                           ;serial.c: 9:     TXSTAbits.BRGH = 1;
  1135  0180  1518               	bsf	24,2	;volatile
  1136                           
  1137                           ;serial.c: 10:     BAUDCTLbits.BRG16 = 1;
  1138  0181  1683               	bsf	3,5	;RP0=1, select bank3
  1139  0182  1703               	bsf	3,6	;RP1=1, select bank3
  1140  0183  1587               	bsf	7,3	;volatile
  1141  0184                     l891:	
  1142                           
  1143                           ;serial.c: 11:     SPBRG = 103;
  1144  0184  3067               	movlw	103
  1145  0185  1683               	bsf	3,5	;RP0=1, select bank1
  1146  0186  1303               	bcf	3,6	;RP1=0, select bank1
  1147  0187  0099               	movwf	25	;volatile
  1148  0188                     l893:	
  1149                           
  1150                           ;serial.c: 12:     SPBRGH = 0;
  1151  0188  019A               	clrf	26	;volatile
  1152  0189                     l895:	
  1153                           
  1154                           ;serial.c: 14:     RCSTAbits.SPEN = 1;
  1155  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1156  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1157  018B  1798               	bsf	24,7	;volatile
  1158  018C                     l897:	
  1159                           
  1160                           ;serial.c: 15:     RCSTAbits.RX9 = 0;
  1161  018C  1318               	bcf	24,6	;volatile
  1162  018D                     l899:	
  1163                           
  1164                           ;serial.c: 16:     RCSTAbits.CREN = 1;
  1165  018D  1618               	bsf	24,4	;volatile
  1166  018E                     l901:	
  1167                           
  1168                           ;serial.c: 18:     TXSTAbits.TXEN = 1;
  1169  018E  1683               	bsf	3,5	;RP0=1, select bank1
  1170  018F  1303               	bcf	3,6	;RP1=0, select bank1
  1171  0190  1698               	bsf	24,5	;volatile
  1172  0191                     l99:	
  1173  0191  0008               	return
  1174  0192                     __end_of_init_serial:	
  1175                           
  1176                           	psect	text4
  1177  001F                     __ptext4:	
  1178 ;; *************** function _isr *****************
  1179 ;; Defined at:
  1180 ;;		line 81 in file "comunicacion_main.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, status,2, status,0, pclath, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1194 ;;      Params:         0       0       0       0       0
  1195 ;;      Locals:         0       0       0       0       0
  1196 ;;      Temps:          3       0       0       0       0
  1197 ;;      Totals:         3       0       0       0       0
  1198 ;;Total ram usage:        3 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    2
  1201 ;; This function calls:
  1202 ;;		_spiRead
  1203 ;;		_spiWrite
  1204 ;; This function is called by:
  1205 ;;		Interrupt level 1
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           
  1210                           ;psect for function _isr
  1211  001F                     _isr:	
  1212  001F                     i1l957:	
  1213                           
  1214                           ;comunicacion_main.c: 82:     if (PIR1bits.SSPIF == 1){
  1215  001F  1283               	bcf	3,5	;RP0=0, select bank0
  1216  0020  1303               	bcf	3,6	;RP1=0, select bank0
  1217  0021  1D8C               	btfss	12,3	;volatile
  1218  0022  2824               	goto	u31_21
  1219  0023  2825               	goto	u31_20
  1220  0024                     u31_21:	
  1221  0024  288E               	goto	i1l84
  1222  0025                     u31_20:	
  1223  0025                     i1l959:	
  1224                           
  1225                           ;comunicacion_main.c: 83:         recibir_rasp = spiRead();
  1226  0025  120A  118A  2192  120A  118A  	fcall	_spiRead
  1227  002A  00F1               	movwf	??_isr
  1228  002B  0871               	movf	??_isr,w
  1229  002C  00F9               	movwf	_recibir_rasp
  1230  002D                     i1l961:	
  1231                           
  1232                           ;comunicacion_main.c: 85:         if (recibir_rasp == 0x11){
  1233  002D  3011               	movlw	17
  1234  002E  0679               	xorwf	_recibir_rasp,w
  1235  002F  1D03               	btfss	3,2
  1236  0030  2832               	goto	u32_21
  1237  0031  2833               	goto	u32_20
  1238  0032                     u32_21:	
  1239  0032  2839               	goto	i1l965
  1240  0033                     u32_20:	
  1241  0033                     i1l963:	
  1242                           
  1243                           ;comunicacion_main.c: 86:             spiWrite(distancia_ade);
  1244  0033  0876               	movf	_distancia_ade,w
  1245  0034  120A  118A  21A2  120A  118A  	fcall	_spiWrite
  1246  0039                     i1l965:	
  1247                           
  1248                           ;comunicacion_main.c: 89:         if (recibir_rasp == 0x22){
  1249  0039  3022               	movlw	34
  1250  003A  0679               	xorwf	_recibir_rasp,w
  1251  003B  1D03               	btfss	3,2
  1252  003C  283E               	goto	u33_21
  1253  003D  283F               	goto	u33_20
  1254  003E                     u33_21:	
  1255  003E  2845               	goto	i1l969
  1256  003F                     u33_20:	
  1257  003F                     i1l967:	
  1258                           
  1259                           ;comunicacion_main.c: 90:             spiWrite(distancia_atr);
  1260  003F  0877               	movf	_distancia_atr,w
  1261  0040  120A  118A  21A2  120A  118A  	fcall	_spiWrite
  1262  0045                     i1l969:	
  1263                           
  1264                           ;comunicacion_main.c: 93:         if (recibir_rasp == 0x33){
  1265  0045  3033               	movlw	51
  1266  0046  0679               	xorwf	_recibir_rasp,w
  1267  0047  1D03               	btfss	3,2
  1268  0048  284A               	goto	u34_21
  1269  0049  284B               	goto	u34_20
  1270  004A                     u34_21:	
  1271  004A  2853               	goto	i1l973
  1272  004B                     u34_20:	
  1273  004B                     i1l971:	
  1274                           
  1275                           ;comunicacion_main.c: 94:             spiWrite(humedad);
  1276  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1277  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1278  004D  0820               	movf	_humedad,w
  1279  004E  120A  118A  21A2  120A  118A  	fcall	_spiWrite
  1280  0053                     i1l973:	
  1281                           
  1282                           ;comunicacion_main.c: 97:         if (recibir_rasp == 0x44){
  1283  0053  3044               	movlw	68
  1284  0054  0679               	xorwf	_recibir_rasp,w
  1285  0055  1D03               	btfss	3,2
  1286  0056  2858               	goto	u35_21
  1287  0057  2859               	goto	u35_20
  1288  0058                     u35_21:	
  1289  0058  2861               	goto	i1l977
  1290  0059                     u35_20:	
  1291  0059                     i1l975:	
  1292                           
  1293                           ;comunicacion_main.c: 98:             spiWrite(posicion);
  1294  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1295  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1296  005B  0822               	movf	_posicion,w
  1297  005C  120A  118A  21A2  120A  118A  	fcall	_spiWrite
  1298  0061                     i1l977:	
  1299                           
  1300                           ;comunicacion_main.c: 101:         if (recibir_rasp == 0x55){
  1301  0061  3055               	movlw	85
  1302  0062  0679               	xorwf	_recibir_rasp,w
  1303  0063  1D03               	btfss	3,2
  1304  0064  2866               	goto	u36_21
  1305  0065  2867               	goto	u36_20
  1306  0066                     u36_21:	
  1307  0066  286F               	goto	i1l981
  1308  0067                     u36_20:	
  1309  0067                     i1l979:	
  1310                           
  1311                           ;comunicacion_main.c: 102:             spiWrite(temp_amb);
  1312  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1313  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1314  0069  0824               	movf	_temp_amb,w
  1315  006A  120A  118A  21A2  120A  118A  	fcall	_spiWrite
  1316  006F                     i1l981:	
  1317                           
  1318                           ;comunicacion_main.c: 105:         if (recibir_rasp == 0x66){
  1319  006F  3066               	movlw	102
  1320  0070  0679               	xorwf	_recibir_rasp,w
  1321  0071  1D03               	btfss	3,2
  1322  0072  2874               	goto	u37_21
  1323  0073  2875               	goto	u37_20
  1324  0074                     u37_21:	
  1325  0074  287D               	goto	i1l985
  1326  0075                     u37_20:	
  1327  0075                     i1l983:	
  1328                           
  1329                           ;comunicacion_main.c: 106:             spiWrite(temp_obj);
  1330  0075  1283               	bcf	3,5	;RP0=0, select bank0
  1331  0076  1303               	bcf	3,6	;RP1=0, select bank0
  1332  0077  0823               	movf	_temp_obj,w
  1333  0078  120A  118A  21A2  120A  118A  	fcall	_spiWrite
  1334  007D                     i1l985:	
  1335                           
  1336                           ;comunicacion_main.c: 109:         if (recibir_rasp == 0x77){
  1337  007D  3077               	movlw	119
  1338  007E  0679               	xorwf	_recibir_rasp,w
  1339  007F  1D03               	btfss	3,2
  1340  0080  2882               	goto	u38_21
  1341  0081  2883               	goto	u38_20
  1342  0082                     u38_21:	
  1343  0082  288B               	goto	i1l989
  1344  0083                     u38_20:	
  1345  0083                     i1l987:	
  1346                           
  1347                           ;comunicacion_main.c: 110:             spiWrite(tiempo);
  1348  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1349  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1350  0085  0821               	movf	_tiempo,w
  1351  0086  120A  118A  21A2  120A  118A  	fcall	_spiWrite
  1352  008B                     i1l989:	
  1353                           
  1354                           ;comunicacion_main.c: 115:         PIR1bits.SSPIF = 0;
  1355  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1356  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1357  008D  118C               	bcf	12,3	;volatile
  1358  008E                     i1l84:	
  1359  008E  0873               	movf	??_isr+2,w
  1360  008F  008A               	movwf	10
  1361  0090  0E72               	swapf	(??_isr+1)^(0+4294967168),w
  1362  0091  0083               	movwf	3
  1363  0092  0EFE               	swapf	btemp,f
  1364  0093  0E7E               	swapf	btemp,w
  1365  0094  0009               	retfie
  1366  0095                     __end_of_isr:	
  1367                           
  1368                           	psect	intentry
  1369  0004                     __pintentry:	
  1370                           ;incstack = 0
  1371                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1372                           
  1373  0004                     interrupt_function:	
  1374  007E                     saved_w	set	btemp
  1375  0004  00FE               	movwf	btemp
  1376  0005  0E03               	swapf	3,w
  1377  0006  00F2               	movwf	??_isr+1
  1378  0007  080A               	movf	10,w
  1379  0008  00F3               	movwf	??_isr+2
  1380  0009  120A  118A  281F   	ljmp	_isr
  1381                           
  1382                           	psect	text5
  1383  01A2                     __ptext5:	
  1384 ;; *************** function _spiWrite *****************
  1385 ;; Defined at:
  1386 ;;		line 36 in file "SPI.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  dat             1    wreg     unsigned char 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;  dat             1    0[COMMON] unsigned char 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1400 ;;      Params:         0       0       0       0       0
  1401 ;;      Locals:         1       0       0       0       0
  1402 ;;      Temps:          0       0       0       0       0
  1403 ;;      Totals:         1       0       0       0       0
  1404 ;;Total ram usage:        1 bytes
  1405 ;; Hardware stack levels used:    1
  1406 ;; This function calls:
  1407 ;;		Nothing
  1408 ;; This function is called by:
  1409 ;;		_isr
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           
  1414                           ;psect for function _spiWrite
  1415  01A2                     _spiWrite:	
  1416                           
  1417                           ;incstack = 0
  1418                           ; Regs used in _spiWrite: [wreg]
  1419                           ;spiWrite@dat stored from wreg
  1420  01A2  00F0               	movwf	spiWrite@dat
  1421  01A3                     i1l919:	
  1422                           
  1423                           ;SPI.c: 36: void spiWrite(char dat);SPI.c: 37: {;SPI.c: 38:     SSPBUF = dat;
  1424  01A3  0870               	movf	spiWrite@dat,w
  1425  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  1426  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  1427  01A6  0093               	movwf	19	;volatile
  1428  01A7                     i1l139:	
  1429  01A7  0008               	return
  1430  01A8                     __end_of_spiWrite:	
  1431                           
  1432                           	psect	text6
  1433  0192                     __ptext6:	
  1434 ;; *************** function _spiRead *****************
  1435 ;; Defined at:
  1436 ;;		line 49 in file "SPI.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      unsigned char 
  1443 ;; Registers used:
  1444 ;;		wreg, status,2, status,0, pclath, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1450 ;;      Params:         0       0       0       0       0
  1451 ;;      Locals:         0       0       0       0       0
  1452 ;;      Temps:          0       0       0       0       0
  1453 ;;      Totals:         0       0       0       0       0
  1454 ;;Total ram usage:        0 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:    1
  1457 ;; This function calls:
  1458 ;;		_spiReceiveWait
  1459 ;; This function is called by:
  1460 ;;		_isr
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           
  1465                           ;psect for function _spiRead
  1466  0192                     _spiRead:	
  1467  0192                     i1l913:	
  1468                           ;incstack = 0
  1469                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1470                           
  1471                           
  1472                           ;SPI.c: 51:     spiReceiveWait();
  1473  0192  120A  118A  219B  120A  118A  	fcall	_spiReceiveWait
  1474  0197                     i1l915:	
  1475                           
  1476                           ;SPI.c: 52:     return(SSPBUF);
  1477  0197  1283               	bcf	3,5	;RP0=0, select bank0
  1478  0198  1303               	bcf	3,6	;RP1=0, select bank0
  1479  0199  0813               	movf	19,w	;volatile
  1480  019A                     i1l147:	
  1481  019A  0008               	return
  1482  019B                     __end_of_spiRead:	
  1483                           
  1484                           	psect	text7
  1485  019B                     __ptext7:	
  1486 ;; *************** function _spiReceiveWait *****************
  1487 ;; Defined at:
  1488 ;;		line 31 in file "SPI.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		None
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1502 ;;      Params:         0       0       0       0       0
  1503 ;;      Locals:         0       0       0       0       0
  1504 ;;      Temps:          0       0       0       0       0
  1505 ;;      Totals:         0       0       0       0       0
  1506 ;;Total ram usage:        0 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_spiRead
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function _spiReceiveWait
  1517  019B                     _spiReceiveWait:	
  1518  019B                     i1l879:	
  1519                           ;incstack = 0
  1520                           ; Regs used in _spiReceiveWait: []
  1521                           
  1522  019B                     i1l133:	
  1523                           ;SPI.c: 33:     while ( !SSPSTATbits.BF );
  1524                           
  1525  019B  1683               	bsf	3,5	;RP0=1, select bank1
  1526  019C  1303               	bcf	3,6	;RP1=0, select bank1
  1527  019D  1C14               	btfss	20,0	;volatile
  1528  019E  29A0               	goto	u20_21
  1529  019F  29A1               	goto	u20_20
  1530  01A0                     u20_21:	
  1531  01A0  299B               	goto	i1l133
  1532  01A1                     u20_20:	
  1533  01A1                     i1l136:	
  1534  01A1  0008               	return
  1535  01A2                     __end_of_spiReceiveWait:	
  1536  007E                     btemp	set	126	;btemp
  1537  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      5      11
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_oscillator

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     487
                                              3 BANK0      2     2      0
                        _init_serial
                         _oscillator
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _oscillator                                           3     3      0      31
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_serial                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0      22
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_serial
   _oscillator
   _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      15       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       B       5       13.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      15      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Mar 13 13:50:35 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l51 00C9  
                      l60 00E1                        l54 00D1                        l63 00E9  
                      l48 00C1                        l57 00D9                        l66 00F1  
                      l99 0191                       l110 0131                       l111 0136  
                     l103 010E                       l104 0113                       l113 015E  
                     l105 0118                       l106 011D                       l130 017C  
                     l107 0122                       l108 0127                       l109 012C  
                     l129 0177                       l901 018E                       l891 0184  
                     l893 0188                       l895 0189                       l897 018C  
                     l889 017D                       l899 018D                       u400 00B7  
                     u401 00B6                       u410 00C1                       u411 00C0  
                     u420 00C5                       u421 00C4                       u430 00CD  
                     u431 00CC                       u440 00D5                       u441 00D4  
                     u450 00DD              __CFG_CPD$OFF 0000                       u451 00DC  
                     u460 00E5                       u461 00E4                       u390 0167  
                     u470 00ED                       u391 0166                       u471 00EC  
                     u480 00F5                       u481 00F4                       u497 0102  
                     _isr 001F              __CFG_LVP$OFF 0000                      l1013 010D  
                    l1015 013C                      l1031 0176                      l1023 0160  
                    l1025 0167                      l1041 00B1                      l1033 0095  
                    l1027 016D                      l1051 00CD                      l1043 00B7  
                    l1035 009B                      l1029 016F                      l1061 00F5  
                    l1053 00D5                      l1045 00BB                      l1037 00A1  
                    l1063 00F9                      l1055 00DD                      l1039 00A6  
                    l1065 00FA                      l1057 00E5                      l1049 00C5  
                    l1059 00ED                      l1067 00FC                      l1099 0144  
                    ?_isr 0070                      i1l84 008E              __CFG_WRT$OFF 0000  
                    _main 0095                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000                     ??_isr 0071                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     i1l133 019B                     i1l136 01A1  
                   i1l147 019A                     i1l139 01A7                     i1l913 0192  
                   i1l915 0197                     i1l919 01A3                     i1l961 002D  
                   i1l971 004B                     i1l963 0033                     i1l981 006F  
                   i1l973 0053                     i1l965 0039                     i1l957 001F  
                   i1l879 019B                     i1l983 0075                     i1l975 0059  
                   i1l967 003F                     i1l959 0025                     i1l985 007D  
                   i1l977 0061                     i1l969 0045                     i1l987 0083  
                   i1l979 0067                     i1l989 008B                     _RCREG 001A  
                   u20_20 01A1                     u20_21 01A0                     u31_20 0025  
                   u31_21 0024                     u32_20 0033                     u32_21 0032  
                   u33_20 003F                     u33_21 003E                     u34_20 004B  
                   u34_21 004A                     _SPBRG 0099                     u35_20 0059  
                   u35_21 0058                     _PORTC 0007                     u36_20 0067  
                   u36_21 0066                     u37_20 0075                     u37_21 0074  
                   u38_20 0083                     u38_21 0082                     _TRISC 0087  
            ?_init_serial 0070            __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000  
                   pclath 000A           __end_of_spiInit 017D           __end_of_spiRead 019B  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 010A                    ??_main 0029  
                  _SPBRGH 009A                    _TRISC3 043B                    _TRISC5 043D  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
                  _tiempo 0021                    saved_w 007E          __end_of_spiWrite 01A8  
               ??_spiInit 0074                 ??_spiRead 0070   __end_of__initialization 001B  
          __pcstackCOMMON 0070      __size_of_init_serial 0015                __pbssBANK0 0020  
              __pmaintext 0095                __pintentry 0004   __size_of_spiReceiveWait 0007  
                 _SSPSTAT 0094                 ?_spiWrite 0070                   __ptext1 015F  
                 __ptext2 010A                   __ptext3 017D                   __ptext4 001F  
                 __ptext5 01A2                   __ptext6 0192                   __ptext7 019B  
            __size_of_isr 0076                   _humedad 0020                   _spiInit 015F  
                 _spiRead 0192               oscillator@a 0026      end_of_initialization 001B  
              _oscillator 010A                 _RCSTAbits 0018                ??_spiWrite 0070  
             spiWrite@dat 0070                 _TXSTAbits 0098            _spiReceiveWait 019B  
             _BAUDCTLbits 0187       start_initialization 000F               __end_of_isr 0095  
__CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 01A2               ?_oscillator 0070  
           ??_init_serial 0074               __pbssCOMMON 0076                 ___latbits 0002  
           __pcstackBANK0 0026                 _bandera_1 0078           ?_spiReceiveWait 0070  
       __size_of_spiWrite 0006                  ?_spiInit 0026                  ?_spiRead 0070  
     __size_of_oscillator 0055       __end_of_init_serial 0192              _recibir_rasp 0079  
    spiInit@sTransmitEdge 0028         interrupt_function 0004        spiInit@sDataSample 0026  
                _PIR1bits 000C               _mandar_rasp 0025               _init_serial 017D  
        __size_of_spiInit 001E          __size_of_spiRead 0009         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0075              ??_oscillator 0074                  _temp_amb 0024  
                _temp_obj 0023                  _spiWrite 01A2                  _posicion 0022  
            spiInit@sType 0074         spiInit@sClockIdle 0027        __end_of_oscillator 015F  
                intlevel1 0000          ??_spiReceiveWait 0070                _OSCCONbits 008F  
           _distancia_ade 0076             _distancia_atr 0077  

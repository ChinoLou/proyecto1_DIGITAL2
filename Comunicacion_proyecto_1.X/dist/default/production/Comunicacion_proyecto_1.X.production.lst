

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat May 02 23:14:34 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.10
    22                           ; Generated 31/07/2019 GMT
    23                           ; 
    24                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367                           
   368                           	psect	idataCOMMON
   369  05E5                     __pidataCOMMON:	
   370                           
   371                           ;initializer for _hora
   372  05E5  340A               	retlw	10
   373                           
   374                           ;initializer for _temp_amb
   375  05E6  3432               	retlw	50
   376                           
   377                           ;initializer for _posicion
   378  05E7  3428               	retlw	40
   379                           
   380                           ;initializer for _humedad
   381  05E8  341E               	retlw	30
   382                           
   383                           ;initializer for _distancia_atr
   384  05E9  3414               	retlw	20
   385                           
   386                           ;initializer for _distancia_ade
   387  05EA  340A               	retlw	10
   388                           
   389                           	psect	idataBANK0
   390  05DC                     __pidataBANK0:	
   391                           
   392                           ;initializer for _segundos
   393  05DC  345A               	retlw	90
   394                           
   395                           ;initializer for _minutos
   396  05DD  3450               	retlw	80
   397                           
   398                           ;initializer for _temp_obj
   399  05DE  343C               	retlw	60
   400  0013                     _SSPBUF	set	19
   401  0014                     _SSPCON	set	20
   402  0018                     _RCSTAbits	set	24
   403  0006                     _PORTB	set	6
   404  0094                     _SSPSTATbits	set	148
   405  0094                     _SSPSTAT	set	148
   406  008F                     _OSCCONbits	set	143
   407  009A                     _SPBRGH	set	154
   408  0099                     _SPBRG	set	153
   409  0098                     _TXSTAbits	set	152
   410  0086                     _TRISB	set	134
   411  043B                     _TRISC3	set	1083
   412  043D                     _TRISC5	set	1085
   413  0187                     _BAUDCTLbits	set	391
   414  0189                     _ANSELH	set	393
   415                           
   416                           ; #config settings
   417  0000                     
   418                           	psect	cinit
   419  07C8                     start_initialization:	
   420  07C8                     __initialization:	
   421                           
   422                           ; Initialize objects allocated to BANK0
   423  07C8  1383               	bcf	3,7	;select IRP bank0
   424  07C9  3023               	movlw	low (__pdataBANK0+3)
   425  07CA  00FD               	movwf	btemp+-1
   426  07CB  3005               	movlw	high __pidataBANK0
   427  07CC  00FE               	movwf	btemp
   428  07CD  30DC               	movlw	low __pidataBANK0
   429  07CE  00FF               	movwf	btemp+1
   430  07CF  3020               	movlw	low __pdataBANK0
   431  07D0  0084               	movwf	4
   432  07D1  120A  118A  25FF  120A  118A  	fcall	init_ram0
   433                           
   434                           ; Initialize objects allocated to COMMON
   435  07D6  120A  118A  25E5  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   436  07DB  00F0               	movwf	__pdataCOMMON& (0+127)
   437  07DC  120A  118A  25E6  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   438  07E1  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   439  07E2  120A  118A  25E7  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   440  07E7  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   441  07E8  120A  118A  25E8  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   442  07ED  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   443  07EE  120A  118A  25E9  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   444  07F3  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   445  07F4  120A  118A  25EA  120A  118A  	fcall	__pidataCOMMON+5	;fetch initializer
   446  07F9  00F5               	movwf	(__pdataCOMMON+5)& (0+127)
   447                           
   448                           ; Clear objects allocated to COMMON
   449  07FA  01FC               	clrf	__pbssCOMMON& (0+127)
   450  07FB  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   451  07FC                     end_of_initialization:	
   452                           ;End of C runtime variable initialization code
   453                           
   454  07FC                     __end_of__initialization:	
   455  07FC  0183               	clrf	3
   456  07FD  120A  118A  2E8C   	ljmp	_main	;jump to C main() function
   457                           
   458                           	psect	bssCOMMON
   459  007C                     __pbssCOMMON:	
   460  007C                     _bandera_1:	
   461  007C                     	ds	1
   462  007D                     _recibir_rasp:	
   463  007D                     	ds	1
   464                           
   465                           	psect	dataCOMMON
   466  0070                     __pdataCOMMON:	
   467  0070                     _hora:	
   468  0070                     	ds	1
   469  0071                     _temp_amb:	
   470  0071                     	ds	1
   471  0072                     _posicion:	
   472  0072                     	ds	1
   473  0073                     _humedad:	
   474  0073                     	ds	1
   475  0074                     _distancia_atr:	
   476  0074                     	ds	1
   477  0075                     _distancia_ade:	
   478  0075                     	ds	1
   479                           
   480                           	psect	dataBANK0
   481  0020                     __pdataBANK0:	
   482  0020                     _segundos:	
   483  0020                     	ds	1
   484  0021                     _minutos:	
   485  0021                     	ds	1
   486  0022                     _temp_obj:	
   487  0022                     	ds	1
   488                           
   489                           	psect	inittext
   490  05FB                     init_fetch0:	
   491                           ;	Called with low address in FSR and high address in W
   492                           
   493  05FB  087E               	movf	btemp,w
   494  05FC  008A               	movwf	10
   495  05FD  087F               	movf	btemp+1,w
   496  05FE  0082               	movwf	2
   497  05FF                     init_ram0:	
   498                           ;Called with:
   499                           ;	high address of idata address in btemp 
   500                           ;	low address of idata address in btemp+1 
   501                           ;	low address of data in FSR
   502                           ;	high address + 1 of data in btemp-1
   503                           
   504  05FF  120A  118A  25FB  120A  118A  	fcall	init_fetch0
   505  0604  0080               	movwf	0
   506  0605  0A84               	incf	4,f
   507  0606  0804               	movf	4,w
   508  0607  067D               	xorwf	btemp+-1,w
   509  0608  1903               	btfsc	3,2
   510  0609  3400               	retlw	0
   511  060A  0AFF               	incf	btemp+1,f
   512  060B  1903               	btfsc	3,2
   513  060C  0AFE               	incf	btemp,f
   514  060D  2DFF               	goto	init_ram0
   515                           
   516                           	psect	cstackCOMMON
   517  0076                     __pcstackCOMMON:	
   518  0076                     ?_oscillator:	
   519  0076                     ??_oscillator:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0076                     ?_init_serial:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0076                     ??_init_serial:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0076                     ?_spiInit:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0076                     ?_spiWrite:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0076                     ??_spiWrite:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0076                     ?_spiRead:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0076                     ??_spiRead:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0076                     ?_main:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0076                     ?_spiReceiveWait:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0076                     ??_spiReceiveWait:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0076                     spiInit@sDataSample:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0076                     spiWrite@dat:	
   556                           ; 1 bytes @ 0x0
   557                           
   558                           
   559                           ; 1 bytes @ 0x0
   560  0076                     	ds	1
   561  0077                     spiInit@sClockIdle:	
   562                           
   563                           ; 1 bytes @ 0x1
   564  0077                     	ds	1
   565  0078                     oscillator@a:	
   566  0078                     spiInit@sTransmitEdge:	
   567                           ; 1 bytes @ 0x2
   568                           
   569                           
   570                           ; 1 bytes @ 0x2
   571  0078                     	ds	1
   572  0079                     ??_spiInit:	
   573  0079                     spiInit@sType:	
   574                           ; 1 bytes @ 0x3
   575                           
   576                           
   577                           ; 1 bytes @ 0x3
   578  0079                     	ds	1
   579  007A                     ??_main:	
   580                           
   581                           ; 1 bytes @ 0x4
   582  007A                     	ds	2
   583                           
   584                           	psect	maintext
   585  068C                     __pmaintext:	
   586 ;;
   587 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   588 ;;
   589 ;; *************** function _main *****************
   590 ;; Defined at:
   591 ;;		line 43 in file "comunicacion_main.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;		None
   594 ;; Auto vars:     Size  Location     Type
   595 ;;		None
   596 ;; Return value:  Size  Location     Type
   597 ;;                  1    wreg      void 
   598 ;; Registers used:
   599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   600 ;; Tracked objects:
   601 ;;		On entry : B00/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   605 ;;      Params:         0       0       0       0       0
   606 ;;      Locals:         0       0       0       0       0
   607 ;;      Temps:          2       0       0       0       0
   608 ;;      Totals:         2       0       0       0       0
   609 ;;Total ram usage:        2 bytes
   610 ;; Hardware stack levels required when called:    2
   611 ;; This function calls:
   612 ;;		_init_serial
   613 ;;		_oscillator
   614 ;;		_spiInit
   615 ;;		_spiRead
   616 ;;		_spiWrite
   617 ;; This function is called by:
   618 ;;		Startup code after reset
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           
   623                           ;psect for function _main
   624  068C                     _main:	
   625  068C                     l895:	
   626                           ;incstack = 0
   627                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   628                           
   629                           
   630                           ;comunicacion_main.c: 44:     PORTB = 0x00;
   631  068C  1283               	bcf	3,5	;RP0=0, select bank0
   632  068D  1303               	bcf	3,6	;RP1=0, select bank0
   633  068E  0186               	clrf	6	;volatile
   634                           
   635                           ;comunicacion_main.c: 45:     TRISB = 0x00;
   636  068F  1683               	bsf	3,5	;RP0=1, select bank1
   637  0690  1303               	bcf	3,6	;RP1=0, select bank1
   638  0691  0186               	clrf	6	;volatile
   639                           
   640                           ;comunicacion_main.c: 46:     ANSELH = 0x00;
   641  0692  1683               	bsf	3,5	;RP0=1, select bank3
   642  0693  1703               	bsf	3,6	;RP1=1, select bank3
   643  0694  0189               	clrf	9	;volatile
   644  0695                     l897:	
   645                           
   646                           ;comunicacion_main.c: 47:     oscillator(6);
   647  0695  3006               	movlw	6
   648  0696  120A  118A  2639  120A  118A  	fcall	_oscillator
   649  069B                     l899:	
   650                           
   651                           ;comunicacion_main.c: 48:     init_serial();
   652  069B  120A  118A  260E  120A  118A  	fcall	_init_serial
   653  06A0                     l901:	
   654                           
   655                           ;comunicacion_main.c: 49:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_C
      +                          LOCK_IDLE_LOW, SPI_IDLE_2_ACTIVE);
   656  06A0  01F6               	clrf	spiInit@sDataSample
   657  06A1  01F7               	clrf	spiInit@sClockIdle
   658  06A2  01F8               	clrf	spiInit@sTransmitEdge
   659  06A3  3020               	movlw	32
   660  06A4  120A  118A  2623  120A  118A  	fcall	_spiInit
   661  06A9                     l903:	
   662                           
   663                           ;comunicacion_main.c: 50:     PORTB = 0x0F;
   664  06A9  300F               	movlw	15
   665  06AA  1283               	bcf	3,5	;RP0=0, select bank0
   666  06AB  1303               	bcf	3,6	;RP1=0, select bank0
   667  06AC  0086               	movwf	6	;volatile
   668  06AD                     l905:	
   669                           
   670                           ;comunicacion_main.c: 99:             _delay((unsigned long)((10)*(4000000/4000.0)));
   671  06AD  300D               	movlw	13
   672  06AE  00FB               	movwf	??_main+1
   673  06AF  30FB               	movlw	251
   674  06B0  00FA               	movwf	??_main
   675  06B1                     u57:	
   676  06B1  0BFA               	decfsz	??_main,f
   677  06B2  2EB1               	goto	u57
   678  06B3  0BFB               	decfsz	??_main+1,f
   679  06B4  2EB1               	goto	u57
   680  06B5  2EB6               	nop2
   681  06B6                     l907:	
   682                           
   683                           ;comunicacion_main.c: 100:             spiWrite(125);
   684  06B6  307D               	movlw	125
   685  06B7  120A  118A  25DF  120A  118A  	fcall	_spiWrite
   686  06BC                     l909:	
   687                           
   688                           ;comunicacion_main.c: 101:             recibir_rasp = spiRead();
   689  06BC  120A  118A  25F2  120A  118A  	fcall	_spiRead
   690  06C1  00FA               	movwf	??_main
   691  06C2  087A               	movf	??_main,w
   692  06C3  00FD               	movwf	_recibir_rasp
   693  06C4                     l911:	
   694                           
   695                           ;comunicacion_main.c: 102:             _delay((unsigned long)((10)*(4000000/4000.0)));
   696  06C4  300D               	movlw	13
   697  06C5  00FB               	movwf	??_main+1
   698  06C6  30FB               	movlw	251
   699  06C7  00FA               	movwf	??_main
   700  06C8                     u67:	
   701  06C8  0BFA               	decfsz	??_main,f
   702  06C9  2EC8               	goto	u67
   703  06CA  0BFB               	decfsz	??_main+1,f
   704  06CB  2EC8               	goto	u67
   705  06CC  2ECD               	nop2
   706  06CD                     l913:	
   707                           
   708                           ;comunicacion_main.c: 104:             spiWrite(hora);
   709  06CD  0870               	movf	_hora,w
   710  06CE  120A  118A  25DF  120A  118A  	fcall	_spiWrite
   711  06D3                     l915:	
   712                           
   713                           ;comunicacion_main.c: 105:             recibir_rasp = spiRead();
   714  06D3  120A  118A  25F2  120A  118A  	fcall	_spiRead
   715  06D8  00FA               	movwf	??_main
   716  06D9  087A               	movf	??_main,w
   717  06DA  00FD               	movwf	_recibir_rasp
   718  06DB                     l917:	
   719                           
   720                           ;comunicacion_main.c: 106:             _delay((unsigned long)((10)*(4000000/4000.0)));
   721  06DB  300D               	movlw	13
   722  06DC  00FB               	movwf	??_main+1
   723  06DD  30FB               	movlw	251
   724  06DE  00FA               	movwf	??_main
   725  06DF                     u77:	
   726  06DF  0BFA               	decfsz	??_main,f
   727  06E0  2EDF               	goto	u77
   728  06E1  0BFB               	decfsz	??_main+1,f
   729  06E2  2EDF               	goto	u77
   730  06E3  2EE4               	nop2
   731  06E4                     l919:	
   732                           
   733                           ;comunicacion_main.c: 108:             _delay((unsigned long)((10)*(4000000/4000.0)));
   734  06E4  300D               	movlw	13
   735  06E5  00FB               	movwf	??_main+1
   736  06E6  30FB               	movlw	251
   737  06E7  00FA               	movwf	??_main
   738  06E8                     u87:	
   739  06E8  0BFA               	decfsz	??_main,f
   740  06E9  2EE8               	goto	u87
   741  06EA  0BFB               	decfsz	??_main+1,f
   742  06EB  2EE8               	goto	u87
   743  06EC  2EED               	nop2
   744  06ED                     l921:	
   745                           
   746                           ;comunicacion_main.c: 109:             spiWrite(minutos);
   747  06ED  3050               	movlw	80
   748  06EE  120A  118A  25DF  120A  118A  	fcall	_spiWrite
   749  06F3                     l923:	
   750                           
   751                           ;comunicacion_main.c: 110:             recibir_rasp = spiRead();
   752  06F3  120A  118A  25F2  120A  118A  	fcall	_spiRead
   753  06F8  00FA               	movwf	??_main
   754  06F9  087A               	movf	??_main,w
   755  06FA  00FD               	movwf	_recibir_rasp
   756  06FB                     l925:	
   757                           
   758                           ;comunicacion_main.c: 111:             _delay((unsigned long)((10)*(4000000/4000.0)));
   759  06FB  300D               	movlw	13
   760  06FC  00FB               	movwf	??_main+1
   761  06FD  30FB               	movlw	251
   762  06FE  00FA               	movwf	??_main
   763  06FF                     u97:	
   764  06FF  0BFA               	decfsz	??_main,f
   765  0700  2EFF               	goto	u97
   766  0701  0BFB               	decfsz	??_main+1,f
   767  0702  2EFF               	goto	u97
   768  0703  2F04               	nop2
   769  0704                     l927:	
   770                           
   771                           ;comunicacion_main.c: 113:             spiWrite(segundos);
   772  0704  305A               	movlw	90
   773  0705  120A  118A  25DF  120A  118A  	fcall	_spiWrite
   774  070A                     l929:	
   775                           
   776                           ;comunicacion_main.c: 114:             recibir_rasp = spiRead();
   777  070A  120A  118A  25F2  120A  118A  	fcall	_spiRead
   778  070F  00FA               	movwf	??_main
   779  0710  087A               	movf	??_main,w
   780  0711  00FD               	movwf	_recibir_rasp
   781  0712                     l931:	
   782                           
   783                           ;comunicacion_main.c: 115:             _delay((unsigned long)((10)*(4000000/4000.0)));
   784  0712  300D               	movlw	13
   785  0713  00FB               	movwf	??_main+1
   786  0714  30FB               	movlw	251
   787  0715  00FA               	movwf	??_main
   788  0716                     u107:	
   789  0716  0BFA               	decfsz	??_main,f
   790  0717  2F16               	goto	u107
   791  0718  0BFB               	decfsz	??_main+1,f
   792  0719  2F16               	goto	u107
   793  071A  2F1B               	nop2
   794  071B                     l933:	
   795                           
   796                           ;comunicacion_main.c: 117:             _delay((unsigned long)((10)*(4000000/4000.0)));
   797  071B  300D               	movlw	13
   798  071C  00FB               	movwf	??_main+1
   799  071D  30FB               	movlw	251
   800  071E  00FA               	movwf	??_main
   801  071F                     u117:	
   802  071F  0BFA               	decfsz	??_main,f
   803  0720  2F1F               	goto	u117
   804  0721  0BFB               	decfsz	??_main+1,f
   805  0722  2F1F               	goto	u117
   806  0723  2F24               	nop2
   807  0724                     l935:	
   808                           
   809                           ;comunicacion_main.c: 118:             spiWrite(temp_amb);
   810  0724  3032               	movlw	50
   811  0725  120A  118A  25DF  120A  118A  	fcall	_spiWrite
   812  072A                     l937:	
   813                           
   814                           ;comunicacion_main.c: 119:             recibir_rasp = spiRead();
   815  072A  120A  118A  25F2  120A  118A  	fcall	_spiRead
   816  072F  00FA               	movwf	??_main
   817  0730  087A               	movf	??_main,w
   818  0731  00FD               	movwf	_recibir_rasp
   819  0732                     l939:	
   820                           
   821                           ;comunicacion_main.c: 120:             _delay((unsigned long)((10)*(4000000/4000.0)));
   822  0732  300D               	movlw	13
   823  0733  00FB               	movwf	??_main+1
   824  0734  30FB               	movlw	251
   825  0735  00FA               	movwf	??_main
   826  0736                     u127:	
   827  0736  0BFA               	decfsz	??_main,f
   828  0737  2F36               	goto	u127
   829  0738  0BFB               	decfsz	??_main+1,f
   830  0739  2F36               	goto	u127
   831  073A  2F3B               	nop2
   832  073B                     l941:	
   833                           
   834                           ;comunicacion_main.c: 122:             spiWrite(temp_obj);
   835  073B  303C               	movlw	60
   836  073C  120A  118A  25DF  120A  118A  	fcall	_spiWrite
   837  0741                     l943:	
   838                           
   839                           ;comunicacion_main.c: 123:             recibir_rasp = spiRead();
   840  0741  120A  118A  25F2  120A  118A  	fcall	_spiRead
   841  0746  00FA               	movwf	??_main
   842  0747  087A               	movf	??_main,w
   843  0748  00FD               	movwf	_recibir_rasp
   844  0749                     l945:	
   845                           
   846                           ;comunicacion_main.c: 124:             _delay((unsigned long)((10)*(4000000/4000.0)));
   847  0749  300D               	movlw	13
   848  074A  00FB               	movwf	??_main+1
   849  074B  30FB               	movlw	251
   850  074C  00FA               	movwf	??_main
   851  074D                     u137:	
   852  074D  0BFA               	decfsz	??_main,f
   853  074E  2F4D               	goto	u137
   854  074F  0BFB               	decfsz	??_main+1,f
   855  0750  2F4D               	goto	u137
   856  0751  2F52               	nop2
   857  0752                     l947:	
   858                           
   859                           ;comunicacion_main.c: 126:             _delay((unsigned long)((10)*(4000000/4000.0)));
   860  0752  300D               	movlw	13
   861  0753  00FB               	movwf	??_main+1
   862  0754  30FB               	movlw	251
   863  0755  00FA               	movwf	??_main
   864  0756                     u147:	
   865  0756  0BFA               	decfsz	??_main,f
   866  0757  2F56               	goto	u147
   867  0758  0BFB               	decfsz	??_main+1,f
   868  0759  2F56               	goto	u147
   869  075A  2F5B               	nop2
   870  075B                     l949:	
   871                           
   872                           ;comunicacion_main.c: 127:             spiWrite(posicion);
   873  075B  3028               	movlw	40
   874  075C  120A  118A  25DF  120A  118A  	fcall	_spiWrite
   875  0761                     l951:	
   876                           
   877                           ;comunicacion_main.c: 128:             recibir_rasp = spiRead();
   878  0761  120A  118A  25F2  120A  118A  	fcall	_spiRead
   879  0766  00FA               	movwf	??_main
   880  0767  087A               	movf	??_main,w
   881  0768  00FD               	movwf	_recibir_rasp
   882  0769                     l953:	
   883                           
   884                           ;comunicacion_main.c: 129:             _delay((unsigned long)((10)*(4000000/4000.0)));
   885  0769  300D               	movlw	13
   886  076A  00FB               	movwf	??_main+1
   887  076B  30FB               	movlw	251
   888  076C  00FA               	movwf	??_main
   889  076D                     u157:	
   890  076D  0BFA               	decfsz	??_main,f
   891  076E  2F6D               	goto	u157
   892  076F  0BFB               	decfsz	??_main+1,f
   893  0770  2F6D               	goto	u157
   894  0771  2F72               	nop2
   895  0772                     l955:	
   896                           
   897                           ;comunicacion_main.c: 131:             spiWrite(humedad);
   898  0772  301E               	movlw	30
   899  0773  120A  118A  25DF  120A  118A  	fcall	_spiWrite
   900  0778                     l957:	
   901                           
   902                           ;comunicacion_main.c: 132:             recibir_rasp = spiRead();
   903  0778  120A  118A  25F2  120A  118A  	fcall	_spiRead
   904  077D  00FA               	movwf	??_main
   905  077E  087A               	movf	??_main,w
   906  077F  00FD               	movwf	_recibir_rasp
   907  0780                     l959:	
   908                           
   909                           ;comunicacion_main.c: 133:             _delay((unsigned long)((10)*(4000000/4000.0)));
   910  0780  300D               	movlw	13
   911  0781  00FB               	movwf	??_main+1
   912  0782  30FB               	movlw	251
   913  0783  00FA               	movwf	??_main
   914  0784                     u167:	
   915  0784  0BFA               	decfsz	??_main,f
   916  0785  2F84               	goto	u167
   917  0786  0BFB               	decfsz	??_main+1,f
   918  0787  2F84               	goto	u167
   919  0788  2F89               	nop2
   920  0789                     l961:	
   921                           
   922                           ;comunicacion_main.c: 135:             _delay((unsigned long)((10)*(4000000/4000.0)));
   923  0789  300D               	movlw	13
   924  078A  00FB               	movwf	??_main+1
   925  078B  30FB               	movlw	251
   926  078C  00FA               	movwf	??_main
   927  078D                     u177:	
   928  078D  0BFA               	decfsz	??_main,f
   929  078E  2F8D               	goto	u177
   930  078F  0BFB               	decfsz	??_main+1,f
   931  0790  2F8D               	goto	u177
   932  0791  2F92               	nop2
   933  0792                     l963:	
   934                           
   935                           ;comunicacion_main.c: 136:             spiWrite(distancia_ade);
   936  0792  300A               	movlw	10
   937  0793  120A  118A  25DF  120A  118A  	fcall	_spiWrite
   938  0798                     l965:	
   939                           
   940                           ;comunicacion_main.c: 137:             recibir_rasp = spiRead();
   941  0798  120A  118A  25F2  120A  118A  	fcall	_spiRead
   942  079D  00FA               	movwf	??_main
   943  079E  087A               	movf	??_main,w
   944  079F  00FD               	movwf	_recibir_rasp
   945  07A0                     l967:	
   946                           
   947                           ;comunicacion_main.c: 138:             _delay((unsigned long)((10)*(4000000/4000.0)));
   948  07A0  300D               	movlw	13
   949  07A1  00FB               	movwf	??_main+1
   950  07A2  30FB               	movlw	251
   951  07A3  00FA               	movwf	??_main
   952  07A4                     u187:	
   953  07A4  0BFA               	decfsz	??_main,f
   954  07A5  2FA4               	goto	u187
   955  07A6  0BFB               	decfsz	??_main+1,f
   956  07A7  2FA4               	goto	u187
   957  07A8  2FA9               	nop2
   958  07A9                     l969:	
   959                           
   960                           ;comunicacion_main.c: 140:             spiWrite(distancia_atr);
   961  07A9  3014               	movlw	20
   962  07AA  120A  118A  25DF  120A  118A  	fcall	_spiWrite
   963  07AF                     l971:	
   964                           
   965                           ;comunicacion_main.c: 141:             recibir_rasp = spiRead();
   966  07AF  120A  118A  25F2  120A  118A  	fcall	_spiRead
   967  07B4  00FA               	movwf	??_main
   968  07B5  087A               	movf	??_main,w
   969  07B6  00FD               	movwf	_recibir_rasp
   970  07B7                     l973:	
   971                           
   972                           ;comunicacion_main.c: 142:             _delay((unsigned long)((10)*(4000000/4000.0)));
   973  07B7  300D               	movlw	13
   974  07B8  00FB               	movwf	??_main+1
   975  07B9  30FB               	movlw	251
   976  07BA  00FA               	movwf	??_main
   977  07BB                     u197:	
   978  07BB  0BFA               	decfsz	??_main,f
   979  07BC  2FBB               	goto	u197
   980  07BD  0BFB               	decfsz	??_main+1,f
   981  07BE  2FBB               	goto	u197
   982  07BF  2FC0               	nop2
   983  07C0                     l975:	
   984                           
   985                           ;comunicacion_main.c: 144:             hora++;
   986  07C0  3001               	movlw	1
   987  07C1  00FA               	movwf	??_main
   988  07C2  087A               	movf	??_main,w
   989  07C3  07F0               	addwf	_hora,f
   990  07C4  2EAD               	goto	l905
   991  07C5  120A  118A  2800   	ljmp	start
   992  07C8                     __end_of_main:	
   993                           
   994                           	psect	text1
   995  05DF                     __ptext1:	
   996 ;; *************** function _spiWrite *****************
   997 ;; Defined at:
   998 ;;		line 36 in file "SPI.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;  dat             1    wreg     unsigned char 
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;  dat             1    0[COMMON] unsigned char 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1012 ;;      Params:         0       0       0       0       0
  1013 ;;      Locals:         1       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0
  1015 ;;      Totals:         1       0       0       0       0
  1016 ;;Total ram usage:        1 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           
  1026                           ;psect for function _spiWrite
  1027  05DF                     _spiWrite:	
  1028                           
  1029                           ;incstack = 0
  1030                           ; Regs used in _spiWrite: [wreg]
  1031                           ;spiWrite@dat stored from wreg
  1032  05DF  00F6               	movwf	spiWrite@dat
  1033  05E0                     l887:	
  1034                           
  1035                           ;SPI.c: 36: void spiWrite(char dat);SPI.c: 37: {;SPI.c: 38:     SSPBUF = dat;
  1036  05E0  0876               	movf	spiWrite@dat,w
  1037  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  1038  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  1039  05E3  0093               	movwf	19	;volatile
  1040  05E4                     l103:	
  1041  05E4  0008               	return
  1042  05E5                     __end_of_spiWrite:	
  1043                           
  1044                           	psect	text2
  1045  05F2                     __ptext2:	
  1046 ;; *************** function _spiRead *****************
  1047 ;; Defined at:
  1048 ;;		line 49 in file "SPI.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      unsigned char 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, status,0, pclath, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1062 ;;      Params:         0       0       0       0       0
  1063 ;;      Locals:         0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0
  1065 ;;      Totals:         0       0       0       0       0
  1066 ;;Total ram usage:        0 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:    1
  1069 ;; This function calls:
  1070 ;;		_spiReceiveWait
  1071 ;; This function is called by:
  1072 ;;		_main
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           
  1077                           ;psect for function _spiRead
  1078  05F2                     _spiRead:	
  1079  05F2                     l889:	
  1080                           ;incstack = 0
  1081                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1082                           
  1083                           
  1084                           ;SPI.c: 51:     spiReceiveWait();
  1085  05F2  120A  118A  25EB  120A  118A  	fcall	_spiReceiveWait
  1086  05F7                     l891:	
  1087                           
  1088                           ;SPI.c: 52:     return(SSPBUF);
  1089  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1090  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1091  05F9  0813               	movf	19,w	;volatile
  1092  05FA                     l111:	
  1093  05FA  0008               	return
  1094  05FB                     __end_of_spiRead:	
  1095                           
  1096                           	psect	text3
  1097  05EB                     __ptext3:	
  1098 ;; *************** function _spiReceiveWait *****************
  1099 ;; Defined at:
  1100 ;;		line 31 in file "SPI.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;		None
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;		None
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		None
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1114 ;;      Params:         0       0       0       0       0
  1115 ;;      Locals:         0       0       0       0       0
  1116 ;;      Temps:          0       0       0       0       0
  1117 ;;      Totals:         0       0       0       0       0
  1118 ;;Total ram usage:        0 bytes
  1119 ;; Hardware stack levels used:    1
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		_spiRead
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           
  1128                           ;psect for function _spiReceiveWait
  1129  05EB                     _spiReceiveWait:	
  1130  05EB                     l853:	
  1131                           ;incstack = 0
  1132                           ; Regs used in _spiReceiveWait: []
  1133                           
  1134  05EB                     l97:	
  1135                           ;SPI.c: 33:     while ( !SSPSTATbits.BF );
  1136                           
  1137  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  1138  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  1139  05ED  1C14               	btfss	20,0	;volatile
  1140  05EE  2DF0               	goto	u31
  1141  05EF  2DF1               	goto	u30
  1142  05F0                     u31:	
  1143  05F0  2DEB               	goto	l97
  1144  05F1                     u30:	
  1145  05F1                     l100:	
  1146  05F1  0008               	return
  1147  05F2                     __end_of_spiReceiveWait:	
  1148                           
  1149                           	psect	text4
  1150  0623                     __ptext4:	
  1151 ;; *************** function _spiInit *****************
  1152 ;; Defined at:
  1153 ;;		line 14 in file "SPI.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;  sType           1    wreg     enum E1292
  1156 ;;  sDataSample     1    0[COMMON] enum E1300
  1157 ;;  sClockIdle      1    1[COMMON] enum E1304
  1158 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;  sType           1    3[COMMON] enum E1292
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2, status,0
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1170 ;;      Params:         3       0       0       0       0
  1171 ;;      Locals:         1       0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0
  1173 ;;      Totals:         4       0       0       0       0
  1174 ;;Total ram usage:        4 bytes
  1175 ;; Hardware stack levels used:    1
  1176 ;; This function calls:
  1177 ;;		Nothing
  1178 ;; This function is called by:
  1179 ;;		_main
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           
  1184                           ;psect for function _spiInit
  1185  0623                     _spiInit:	
  1186                           
  1187                           ;incstack = 0
  1188                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1189                           ;spiInit@sType stored from wreg
  1190  0623  00F9               	movwf	spiInit@sType
  1191  0624                     l877:	
  1192                           
  1193                           ;SPI.c: 14: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 15: {;SPI.c: 16:     TRISC5 = 0;
  1194  0624  1683               	bsf	3,5	;RP0=1, select bank1
  1195  0625  1303               	bcf	3,6	;RP1=0, select bank1
  1196  0626  1287               	bcf	7,5	;volatile
  1197                           
  1198                           ;SPI.c: 17:     if(sType & 0b00000100)
  1199  0627  1D79               	btfss	spiInit@sType,2
  1200  0628  2E2A               	goto	u41
  1201  0629  2E2B               	goto	u40
  1202  062A                     u41:	
  1203  062A  2E2F               	goto	l883
  1204  062B                     u40:	
  1205  062B                     l879:	
  1206                           
  1207                           ;SPI.c: 18:     {;SPI.c: 19:         SSPSTAT = sTransmitEdge;
  1208  062B  0878               	movf	spiInit@sTransmitEdge,w
  1209  062C  0094               	movwf	20	;volatile
  1210  062D                     l881:	
  1211                           
  1212                           ;SPI.c: 20:         TRISC3 = 1;
  1213  062D  1587               	bsf	7,3	;volatile
  1214                           
  1215                           ;SPI.c: 21:     }
  1216  062E  2E33               	goto	l93
  1217  062F                     l883:	
  1218                           
  1219                           ;SPI.c: 23:     {;SPI.c: 24:         SSPSTAT = sDataSample | sTransmitEdge;
  1220  062F  0876               	movf	spiInit@sDataSample,w
  1221  0630  0478               	iorwf	spiInit@sTransmitEdge,w
  1222  0631  0094               	movwf	20	;volatile
  1223  0632                     l885:	
  1224                           
  1225                           ;SPI.c: 25:         TRISC3 = 0;
  1226  0632  1187               	bcf	7,3	;volatile
  1227  0633                     l93:	
  1228                           ;SPI.c: 26:     }
  1229                           
  1230                           
  1231                           ;SPI.c: 28:     SSPCON = sType | sClockIdle;
  1232  0633  0879               	movf	spiInit@sType,w
  1233  0634  0477               	iorwf	spiInit@sClockIdle,w
  1234  0635  1283               	bcf	3,5	;RP0=0, select bank0
  1235  0636  1303               	bcf	3,6	;RP1=0, select bank0
  1236  0637  0094               	movwf	20	;volatile
  1237  0638                     l94:	
  1238  0638  0008               	return
  1239  0639                     __end_of_spiInit:	
  1240                           
  1241                           	psect	text5
  1242  0639                     __ptext5:	
  1243 ;; *************** function _oscillator *****************
  1244 ;; Defined at:
  1245 ;;		line 21 in file "serial.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;  a               1    wreg     unsigned char 
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  a               1    2[COMMON] unsigned char 
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      void 
  1252 ;; Registers used:
  1253 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1259 ;;      Params:         0       0       0       0       0
  1260 ;;      Locals:         1       0       0       0       0
  1261 ;;      Temps:          2       0       0       0       0
  1262 ;;      Totals:         3       0       0       0       0
  1263 ;;Total ram usage:        3 bytes
  1264 ;; Hardware stack levels used:    1
  1265 ;; This function calls:
  1266 ;;		Nothing
  1267 ;; This function is called by:
  1268 ;;		_main
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           
  1273                           ;psect for function _oscillator
  1274  0639                     _oscillator:	
  1275                           
  1276                           ;incstack = 0
  1277                           ; Regs used in _oscillator: [wreg-fsr0h+status,2+status,0]
  1278                           ;oscillator@a stored from wreg
  1279  0639  00F8               	movwf	oscillator@a
  1280  063A                     l855:	
  1281                           
  1282                           ;serial.c: 22:     switch(a){
  1283  063A  2E69               	goto	l857
  1284  063B                     l67:	
  1285                           ;serial.c: 23:         case 0:
  1286                           
  1287                           
  1288                           ;serial.c: 24:             OSCCONbits.IRCF2 = 0;
  1289  063B  1683               	bsf	3,5	;RP0=1, select bank1
  1290  063C  1303               	bcf	3,6	;RP1=0, select bank1
  1291  063D  130F               	bcf	15,6	;volatile
  1292                           
  1293                           ;serial.c: 25:             OSCCONbits.IRCF1 = 0;
  1294  063E  128F               	bcf	15,5	;volatile
  1295                           
  1296                           ;serial.c: 26:             OSCCONbits.IRCF0 = 0;
  1297  063F  120F               	bcf	15,4	;volatile
  1298  0640                     l68:	
  1299                           ;serial.c: 27:         case 1:
  1300                           
  1301                           
  1302                           ;serial.c: 28:             OSCCONbits.IRCF2 = 0;
  1303  0640  1683               	bsf	3,5	;RP0=1, select bank1
  1304  0641  1303               	bcf	3,6	;RP1=0, select bank1
  1305  0642  130F               	bcf	15,6	;volatile
  1306                           
  1307                           ;serial.c: 29:             OSCCONbits.IRCF1 = 0;
  1308  0643  128F               	bcf	15,5	;volatile
  1309                           
  1310                           ;serial.c: 30:             OSCCONbits.IRCF0 = 1;
  1311  0644  160F               	bsf	15,4	;volatile
  1312  0645                     l69:	
  1313                           ;serial.c: 31:         case 2:
  1314                           
  1315                           
  1316                           ;serial.c: 32:             OSCCONbits.IRCF2 = 0;
  1317  0645  1683               	bsf	3,5	;RP0=1, select bank1
  1318  0646  1303               	bcf	3,6	;RP1=0, select bank1
  1319  0647  130F               	bcf	15,6	;volatile
  1320                           
  1321                           ;serial.c: 33:             OSCCONbits.IRCF1 = 1;
  1322  0648  168F               	bsf	15,5	;volatile
  1323                           
  1324                           ;serial.c: 34:             OSCCONbits.IRCF0 = 0;
  1325  0649  120F               	bcf	15,4	;volatile
  1326  064A                     l70:	
  1327                           ;serial.c: 35:         case 3:
  1328                           
  1329                           
  1330                           ;serial.c: 36:             OSCCONbits.IRCF2 = 0;
  1331  064A  1683               	bsf	3,5	;RP0=1, select bank1
  1332  064B  1303               	bcf	3,6	;RP1=0, select bank1
  1333  064C  130F               	bcf	15,6	;volatile
  1334                           
  1335                           ;serial.c: 37:             OSCCONbits.IRCF1 = 1;
  1336  064D  168F               	bsf	15,5	;volatile
  1337                           
  1338                           ;serial.c: 38:             OSCCONbits.IRCF0 = 1;
  1339  064E  160F               	bsf	15,4	;volatile
  1340  064F                     l71:	
  1341                           ;serial.c: 39:         case 4:
  1342                           
  1343                           
  1344                           ;serial.c: 40:             OSCCONbits.IRCF2 = 1;
  1345  064F  1683               	bsf	3,5	;RP0=1, select bank1
  1346  0650  1303               	bcf	3,6	;RP1=0, select bank1
  1347  0651  170F               	bsf	15,6	;volatile
  1348                           
  1349                           ;serial.c: 41:             OSCCONbits.IRCF1 = 0;
  1350  0652  128F               	bcf	15,5	;volatile
  1351                           
  1352                           ;serial.c: 42:             OSCCONbits.IRCF0 = 0;
  1353  0653  120F               	bcf	15,4	;volatile
  1354  0654                     l72:	
  1355                           ;serial.c: 43:         case 5:
  1356                           
  1357                           
  1358                           ;serial.c: 44:             OSCCONbits.IRCF2 = 1;
  1359  0654  1683               	bsf	3,5	;RP0=1, select bank1
  1360  0655  1303               	bcf	3,6	;RP1=0, select bank1
  1361  0656  170F               	bsf	15,6	;volatile
  1362                           
  1363                           ;serial.c: 45:             OSCCONbits.IRCF1 = 0;
  1364  0657  128F               	bcf	15,5	;volatile
  1365                           
  1366                           ;serial.c: 46:             OSCCONbits.IRCF0 = 1;
  1367  0658  160F               	bsf	15,4	;volatile
  1368  0659                     l73:	
  1369                           ;serial.c: 47:         case 6:
  1370                           
  1371                           
  1372                           ;serial.c: 48:             OSCCONbits.IRCF2 = 1;
  1373  0659  1683               	bsf	3,5	;RP0=1, select bank1
  1374  065A  1303               	bcf	3,6	;RP1=0, select bank1
  1375  065B  170F               	bsf	15,6	;volatile
  1376                           
  1377                           ;serial.c: 49:             OSCCONbits.IRCF1 = 1;
  1378  065C  168F               	bsf	15,5	;volatile
  1379                           
  1380                           ;serial.c: 50:             OSCCONbits.IRCF0 = 0;
  1381  065D  120F               	bcf	15,4	;volatile
  1382  065E                     l74:	
  1383                           ;serial.c: 51:         case 7:
  1384                           
  1385                           
  1386                           ;serial.c: 52:             OSCCONbits.IRCF2 = 1;
  1387  065E  1683               	bsf	3,5	;RP0=1, select bank1
  1388  065F  1303               	bcf	3,6	;RP1=0, select bank1
  1389  0660  170F               	bsf	15,6	;volatile
  1390                           
  1391                           ;serial.c: 53:             OSCCONbits.IRCF1 = 1;
  1392  0661  168F               	bsf	15,5	;volatile
  1393                           
  1394                           ;serial.c: 54:             OSCCONbits.IRCF0 = 1;
  1395  0662  160F               	bsf	15,4	;volatile
  1396  0663                     l75:	
  1397                           ;serial.c: 55:         default:
  1398                           
  1399                           
  1400                           ;serial.c: 56:             OSCCONbits.IRCF2 = 1;
  1401  0663  1683               	bsf	3,5	;RP0=1, select bank1
  1402  0664  1303               	bcf	3,6	;RP1=0, select bank1
  1403  0665  170F               	bsf	15,6	;volatile
  1404                           
  1405                           ;serial.c: 57:             OSCCONbits.IRCF1 = 1;
  1406  0666  168F               	bsf	15,5	;volatile
  1407                           
  1408                           ;serial.c: 58:             OSCCONbits.IRCF0 = 0;
  1409  0667  120F               	bcf	15,4	;volatile
  1410                           
  1411                           ;serial.c: 59:     }
  1412  0668  2E8B               	goto	l77
  1413  0669                     l857:	
  1414  0669  0878               	movf	oscillator@a,w
  1415  066A  00F6               	movwf	??_oscillator
  1416  066B  01F7               	clrf	??_oscillator+1
  1417                           
  1418                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1419                           ; Switch size 1, requested type "simple"
  1420                           ; Number of cases is 1, Range of values is 0 to 0
  1421                           ; switch strategies available:
  1422                           ; Name         Instructions Cycles
  1423                           ; simple_byte            4     3 (average)
  1424                           ; direct_byte           11     8 (fixed)
  1425                           ; jumptable            260     6 (fixed)
  1426                           ;	Chosen strategy is simple_byte
  1427  066C  0877               	movf	??_oscillator+1,w
  1428  066D  3A00               	xorlw	0	; case 0
  1429  066E  1903               	skipnz
  1430  066F  2E71               	goto	l997
  1431  0670  2E63               	goto	l75
  1432  0671                     l997:	
  1433                           
  1434                           ; Switch size 1, requested type "simple"
  1435                           ; Number of cases is 8, Range of values is 0 to 7
  1436                           ; switch strategies available:
  1437                           ; Name         Instructions Cycles
  1438                           ; simple_byte           25    13 (average)
  1439                           ; direct_byte           32     8 (fixed)
  1440                           ; jumptable            260     6 (fixed)
  1441                           ;	Chosen strategy is simple_byte
  1442  0671  0876               	movf	??_oscillator,w
  1443  0672  3A00               	xorlw	0	; case 0
  1444  0673  1903               	skipnz
  1445  0674  2E3B               	goto	l67
  1446  0675  3A01               	xorlw	1	; case 1
  1447  0676  1903               	skipnz
  1448  0677  2E40               	goto	l68
  1449  0678  3A03               	xorlw	3	; case 2
  1450  0679  1903               	skipnz
  1451  067A  2E45               	goto	l69
  1452  067B  3A01               	xorlw	1	; case 3
  1453  067C  1903               	skipnz
  1454  067D  2E4A               	goto	l70
  1455  067E  3A07               	xorlw	7	; case 4
  1456  067F  1903               	skipnz
  1457  0680  2E4F               	goto	l71
  1458  0681  3A01               	xorlw	1	; case 5
  1459  0682  1903               	skipnz
  1460  0683  2E54               	goto	l72
  1461  0684  3A03               	xorlw	3	; case 6
  1462  0685  1903               	skipnz
  1463  0686  2E59               	goto	l73
  1464  0687  3A01               	xorlw	1	; case 7
  1465  0688  1903               	skipnz
  1466  0689  2E5E               	goto	l74
  1467  068A  2E63               	goto	l75
  1468  068B                     l77:	
  1469  068B  0008               	return
  1470  068C                     __end_of_oscillator:	
  1471                           
  1472                           	psect	text6
  1473  060E                     __ptext6:	
  1474 ;; *************** function _init_serial *****************
  1475 ;; Defined at:
  1476 ;;		line 5 in file "serial.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;		None
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1490 ;;      Params:         0       0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0
  1493 ;;      Totals:         0       0       0       0       0
  1494 ;;Total ram usage:        0 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; This function calls:
  1497 ;;		Nothing
  1498 ;; This function is called by:
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           
  1504                           ;psect for function _init_serial
  1505  060E                     _init_serial:	
  1506  060E                     l863:	
  1507                           ;incstack = 0
  1508                           ; Regs used in _init_serial: [wreg+status,2]
  1509                           
  1510                           
  1511                           ;serial.c: 8:     TXSTAbits.SYNC = 0;
  1512  060E  1683               	bsf	3,5	;RP0=1, select bank1
  1513  060F  1303               	bcf	3,6	;RP1=0, select bank1
  1514  0610  1218               	bcf	24,4	;volatile
  1515                           
  1516                           ;serial.c: 9:     TXSTAbits.BRGH = 1;
  1517  0611  1518               	bsf	24,2	;volatile
  1518                           
  1519                           ;serial.c: 10:     BAUDCTLbits.BRG16 = 1;
  1520  0612  1683               	bsf	3,5	;RP0=1, select bank3
  1521  0613  1703               	bsf	3,6	;RP1=1, select bank3
  1522  0614  1587               	bsf	7,3	;volatile
  1523  0615                     l865:	
  1524                           
  1525                           ;serial.c: 11:     SPBRG = 103;
  1526  0615  3067               	movlw	103
  1527  0616  1683               	bsf	3,5	;RP0=1, select bank1
  1528  0617  1303               	bcf	3,6	;RP1=0, select bank1
  1529  0618  0099               	movwf	25	;volatile
  1530  0619                     l867:	
  1531                           
  1532                           ;serial.c: 12:     SPBRGH = 0;
  1533  0619  019A               	clrf	26	;volatile
  1534  061A                     l869:	
  1535                           
  1536                           ;serial.c: 14:     RCSTAbits.SPEN = 1;
  1537  061A  1283               	bcf	3,5	;RP0=0, select bank0
  1538  061B  1303               	bcf	3,6	;RP1=0, select bank0
  1539  061C  1798               	bsf	24,7	;volatile
  1540  061D                     l871:	
  1541                           
  1542                           ;serial.c: 15:     RCSTAbits.RX9 = 0;
  1543  061D  1318               	bcf	24,6	;volatile
  1544  061E                     l873:	
  1545                           
  1546                           ;serial.c: 16:     RCSTAbits.CREN = 1;
  1547  061E  1618               	bsf	24,4	;volatile
  1548  061F                     l875:	
  1549                           
  1550                           ;serial.c: 18:     TXSTAbits.TXEN = 1;
  1551  061F  1683               	bsf	3,5	;RP0=1, select bank1
  1552  0620  1303               	bcf	3,6	;RP1=0, select bank1
  1553  0621  1698               	bsf	24,5	;volatile
  1554  0622                     l63:	
  1555  0622  0008               	return
  1556  0623                     __end_of_init_serial:	
  1557  007E                     btemp	set	126	;btemp
  1558  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      14
    BANK0            80      0       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     404
                                              4 COMMON     2     2      0
                        _init_serial
                         _oscillator
                            _spiInit
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _oscillator                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init_serial                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_serial
   _oscillator
   _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       3       5        3.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      11      12        0.0%
ABS                  0      0      11       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat May 02 23:14:34 2020

                       pc 0002               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      l70 064A                        l63 0622                        l71 064F  
                      l72 0654                        l73 0659                        l74 065E  
                      l75 0663                        l67 063B                        l68 0640  
                      l77 068B                        l69 0645                        l93 0633  
                      l94 0638                        l97 05EB                        u30 05F1  
                      u31 05F0                        u40 062B                        u41 062A  
                      u57 06B1                        u67 06C8                        u77 06DF  
                      u87 06E8                        u97 06FF                        fsr 0004  
                     l100 05F1                       l111 05FA                       l103 05E4  
                     l901 06A0                       l911 06C4                       l903 06A9  
                     l921 06ED                       l913 06CD                       l905 06AD  
                     l931 0712                       l923 06F3                       l915 06D3  
                     l907 06B6                       l853 05EB                       l941 073B  
                     l933 071B                       l925 06FB                       l917 06DB  
                     l909 06BC                       l871 061D                       l863 060E  
                     l855 063A                       l951 0761                       l943 0741  
                     l935 0724                       l927 0704                       l919 06E4  
                     l873 061E                       l865 0615                       l857 0669  
                     l881 062D                       l961 0789                       l953 0769  
                     l945 0749                       l937 072A                       l929 070A  
                     l875 061F                       l867 0619                       l883 062F  
                     l891 05F7                       l971 07AF                       l963 0792  
                     l955 0772                       l947 0752                       l939 0732  
                     l869 061A                       l885 0632                       l877 0624  
                     l973 07B7                       l965 0798                       l957 0778  
                     l949 075B                       l879 062B                       l887 05E0  
                     l975 07C0                       l967 07A0                       l959 0780  
                     l895 068C                       l889 05F2                       l969 07A9  
                     l897 0695                       l899 069B                       l997 0671  
                     u107 0716                       u117 071F                       u127 0736  
                     u137 074D                       u147 0756                       u157 076D  
                     u167 0784                       u177 078D              __CFG_CPD$OFF 0000  
                     u187 07A4                       u197 07BB                       indf 0000  
            __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000                      _main 068C  
                    _hora 0070                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000                     ?_main 0076             __CFG_WDTE$OFF 0000  
                   _SPBRG 0099                     _PORTB 0006                     _TRISB 0086  
            ?_init_serial 0076            __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000  
                   pclath 000A           __end_of_spiInit 0639           __end_of_spiRead 05FB  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 07C8              __end_of_main 07C8                    ??_main 007A  
                  _ANSELH 0189                    _SPBRGH 009A                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000              __pdataCOMMON 0070          __end_of_spiWrite 05E5  
               ??_spiInit 0079                 ??_spiRead 0076   __end_of__initialization 07FC  
          __pcstackCOMMON 0076              __pidataBANK0 05DC      __size_of_init_serial 0015  
              __pmaintext 068C   __size_of_spiReceiveWait 0007                   _SSPSTAT 0094  
               ?_spiWrite 0076                   __ptext1 05DF                   __ptext2 05F2  
                 __ptext3 05EB                   __ptext4 0623                   __ptext5 0639  
                 __ptext6 060E                   _humedad 0073                   _minutos 0021  
                 _spiInit 0623                   _spiRead 05F2               oscillator@a 0078  
    end_of_initialization 07FC                _oscillator 0639                 _RCSTAbits 0018  
              ??_spiWrite 0076               spiWrite@dat 0076                 _TXSTAbits 0098  
          _spiReceiveWait 05EB             __pidataCOMMON 05E5               _BAUDCTLbits 0187  
     start_initialization 07C8  __CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 05F2  
             ?_oscillator 0076                init_fetch0 05FB               __pdataBANK0 0020  
           ??_init_serial 0076               __pbssCOMMON 007C                 ___latbits 0002  
               _bandera_1 007C           ?_spiReceiveWait 0076         __size_of_spiWrite 0006  
                ?_spiInit 0076                  ?_spiRead 0076       __size_of_oscillator 0053  
     __end_of_init_serial 0623              _recibir_rasp 007D      spiInit@sTransmitEdge 0078  
      spiInit@sDataSample 0076               _init_serial 060E          __size_of_spiInit 0016  
        __size_of_spiRead 0009         __CFG_BOR4V$BOR40V 0000             __size_of_main 013C  
                _segundos 0020              ??_oscillator 0076                  _temp_amb 0071  
                _temp_obj 0022                  _spiWrite 05DF                  _posicion 0072  
            spiInit@sType 0079         spiInit@sClockIdle 0077                  init_ram0 05FF  
      __end_of_oscillator 068C          ??_spiReceiveWait 0076                _OSCCONbits 008F  
           _distancia_ade 0075             _distancia_atr 0074  

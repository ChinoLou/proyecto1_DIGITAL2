Microchip MPLAB XC8 Compiler V2.10 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.10\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\RASP.X.production.sym \
  --cmf=dist/default/production\RASP.X.production.cmf -z -Q16F887 \
  -oC:\Users\ICHELECE\AppData\Local\Temp\sfoc.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/RASP.X.production.map -E1 -ver=XC8 --acfsm=1493 \
  -ASTACK=0110h-016Fh -pstack=STACK -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh \
  -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\ICHELECE\AppData\Local\Temp\sfoc.o \
  dist/default/production\RASP.X.production.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\ICHELECE\AppData\Local\Temp\sfoc.o
                end_init                              C        C        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2     400E       0
dist/default/production\RASP.X.production.o
                cinit                                 F        F       10        8       0
                intentry                              4        4        8        8       0
                text17                              FE8      FE8        7     1FD0       0
                text16                              FF7      FF7        9     1FEE       0
                text15                              FE2      FE2        6     1FC4       0
                text14                              399      399       DA        8       0
                text13                              715      715       2F      DA6       0
                text12                              791      791       26      DA6       0
                text11                              7ED      7ED        F      DA6       0
                text10                              76B      76B       26      DA6       0
                text9                               5DF      5DF       5B        8       0
                text8                               7D5      7D5       18      DA6       0
                text7                               4FA      4FA       7C        8       0
                text6                               63A      63A       53        8       0
                text5                               7B7      7B7       1E      DA6       0
                text4                               6D3      6D3       42      DA6       0
                text3                               576      576       69        8       0
                text2                               744      744       27      DA6       0
                text1                               473      473       87        8       0
                maintext                             1F       1F      37A        8       0
                cstackBANK0                          20       20       2D       20       1
                cstackCOMMON                         70       70        7       70       1
                clrtext                             FEF      FEF        8     1FDE       0
                bssBANK0                             4D       4D       10       20       1
                bssCOMMON                            77       77        3       70       1
                strings                             68D      68D       46      D1A       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              C        C        3         0
                cinit                                 F        F       10         0
                intentry                              4        4        8         0
                reset_vec                             0        0        3         0
                text17                              FE8      FE8        7         0
                text16                              FF7      FF7        9         0
                text15                              FE2      FE2        6         0
                text14                              399      399       DA         0
                text13                              715      715       2F         0
                text12                              791      791       26         0
                text11                              7ED      7ED        F         0
                text10                              76B      76B       26         0
                text9                               5DF      5DF       5B         0
                text8                               7D5      7D5       18         0
                text7                               4FA      4FA       7C         0
                text6                               63A      63A       53         0
                text5                               7B7      7B7       1E         0
                text4                               6D3      6D3       42         0
                text3                               576      576       69         0
                text2                               744      744       27         0
                text1                               473      473       87         0
                maintext                             1F       1F      37A         0
                clrtext                             FEF      FEF        8         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             68D      68D       46         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        7         1
                bssCOMMON                            77       77        3         1

        CLASS   BANK0          
                cstackBANK0                          20       20       2D         1
                bssBANK0                             4D       4D       10         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  000689  00068D         8       0  CODE        2
                cstackBANK0                    000020  00003D  00005D        20       1  BANK0       1
                cstackCOMMON                   000070  00000A  00007A        70       1  COMMON      1
                strings                        00068D  000046  0006D3       D1A       0  STRING      2
                text4                          0006D3  000129  0007FC       DA6       0  CODE        2
                text15                         000FE2  000006  000FE8      1FC4       0  CODE        2
                text17                         000FE8  000007  000FEF      1FD0       0  CODE        2
                clrtext                        000FEF  000008  000FF7      1FDE       0  CODE        2
                text16                         000FF7  000009  001000      1FEE       0  CODE        2
                config                         002007  000002  002009      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            005D-006F             13           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         07FC-0FE1              4
                         1000-1FFF            800
        COMMON           007A-007D              4           1
        CONST            0003-0003              1           2
                         07FC-0FE1            100
                         1000-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         07FC-0FE1            100
                         1000-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              005D-006F             13           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         07FC-0FE1            7E6
                         1000-1FFF           1000
        STRING           0003-0003              1           2
                         07FC-0FE1            100
                         1000-1FFF            100

                                  Symbol Table

?___awdiv                  cstackBANK0  0024
?___awmod                  cstackBANK0  0020
?___wmul                   cstackBANK0  0020
Lcd_Cmd@a                  cstackCOMMON 0076
Lcd_Set_Cursor@a           cstackBANK0  0022
Lcd_Set_Cursor@b           cstackBANK0  0020
Lcd_Set_Cursor@d           cstackBANK0  0023
Lcd_Write_Char@a           cstackCOMMON 0075
Lcd_Write_String@a         cstackBANK0  0021
Lcd_Write_String@n         cstackBANK0  0020
_ANSEL                     (abs)        0188
_ANSELH                    (abs)        0189
_INTCONbits                (abs)        000B
_IOCB                      (abs)        0096
_Lcd_Clear                 text8        07D5
_Lcd_Cmd                   text13       0715
_Lcd_Init                  text7        04FA
_Lcd_Set_Cursor            text12       0791
_Lcd_Write_Char            text11       07ED
_Lcd_Write_String          text10       076B
_OPTION_REGbits            (abs)        0081
_OSCCONbits                (abs)        008F
_PIE1bits                  (abs)        008C
_PIR1bits                  (abs)        000C
_PORTA                     (abs)        0005
_PORTAbits                 (abs)        0005
_PORTB                     (abs)        0006
_PORTBbits                 (abs)        0006
_PORTD                     (abs)        0008
_SSPBUF                    (abs)        0013
_SSPCON                    (abs)        0014
_SSPSTAT                   (abs)        0094
_SSPSTATbits               (abs)        0094
_TRISA                     (abs)        0085
_TRISB                     (abs)        0086
_TRISC3                    (abs)        043B
_TRISC5                    (abs)        043D
_TRISD                     (abs)        0088
_WPUB                      (abs)        0095
__CFG_BOR4V$BOR40V         (abs)        0000
__CFG_BOREN$OFF            (abs)        0000
__CFG_CP$OFF               (abs)        0000
__CFG_CPD$OFF              (abs)        0000
__CFG_FCMEN$OFF            (abs)        0000
__CFG_FOSC$INTRC_NOCLKOUT  (abs)        0000
__CFG_IESO$OFF             (abs)        0000
__CFG_LVP$OFF              (abs)        0000
__CFG_MCLRE$OFF            (abs)        0000
__CFG_PWRTE$OFF            (abs)        0000
__CFG_WDTE$OFF             (abs)        0000
__CFG_WRT$OFF              (abs)        0000
__Habs1                    abs1         0000
__Hbank0                   bank0        0000
__Hbank1                   bank1        0000
__Hbank2                   bank2        0000
__Hbank3                   bank3        0000
__HbssBANK0                bssBANK0     0000
__HbssCOMMON               bssCOMMON    0000
__Hcinit                   cinit        001F
__Hclrtext                 clrtext      0000
__Hcode                    code         0000
__Hcommon                  common       0000
__Hconfig                  config       2009
__HcstackBANK0             cstackBANK0  0000
__HcstackCOMMON            cstackCOMMON 0000
__Heeprom_data             eeprom_data  0000
__Hend_init                end_init     000F
__Hfunctab                 functab      0000
__Hidloc                   idloc        0000
__Hinit                    init         000C
__Hintentry                intentry     000C
__Hmaintext                maintext     0000
__Hpowerup                 powerup      0000
__Hram                     ram          0000
__Hreset_vec               reset_vec    0003
__Hsfr0                    sfr0         0000
__Hsfr1                    sfr1         0000
__Hsfr2                    sfr2         0000
__Hsfr3                    sfr3         0000
__Hspace_0                 (abs)        2009
__Hspace_1                 (abs)        007A
__Hspace_2                 (abs)        0000
__Hspace_3                 (abs)        0000
__Hstack                   stack        0000
__Hstrings                 strings      0000
__Htext                    text         0000
__Labs1                    abs1         0000
__Lbank0                   bank0        0000
__Lbank1                   bank1        0000
__Lbank2                   bank2        0000
__Lbank3                   bank3        0000
__LbssBANK0                bssBANK0     0000
__LbssCOMMON               bssCOMMON    0000
__Lcinit                   cinit        000F
__Lclrtext                 clrtext      0000
__Lcode                    code         0000
__Lcommon                  common       0000
__Lconfig                  config       2007
__LcstackBANK0             cstackBANK0  0000
__LcstackCOMMON            cstackCOMMON 0000
__Leeprom_data             eeprom_data  0000
__Lend_init                end_init     000C
__Lfunctab                 functab      0000
__Lidloc                   idloc        0000
__Linit                    init         000C
__Lintentry                intentry     0004
__Lmaintext                maintext     0000
__Lpowerup                 powerup      0000
__Lram                     ram          0000
__Lreset_vec               reset_vec    0000
__Lsfr0                    sfr0         0000
__Lsfr1                    sfr1         0000
__Lsfr2                    sfr2         0000
__Lsfr3                    sfr3         0000
__Lspace_0                 (abs)        0000
__Lspace_1                 (abs)        0000
__Lspace_2                 (abs)        0000
__Lspace_3                 (abs)        0000
__Lstack                   stack        0000
__Lstrings                 strings      0000
__Ltext                    text         0000
__S0                       (abs)        2009
__S1                       (abs)        007A
__S2                       (abs)        0000
__S3                       (abs)        0000
___awdiv                   text3        0576
___awdiv@counter           cstackBANK0  0028
___awdiv@dividend          cstackBANK0  0026
___awdiv@divisor           cstackBANK0  0024
___awdiv@quotient          cstackBANK0  002A
___awdiv@sign              cstackBANK0  0029
___awmod                   text9        05DF
___awmod@counter           cstackCOMMON 0075
___awmod@dividend          cstackBANK0  0022
___awmod@divisor           cstackBANK0  0020
___awmod@sign              cstackCOMMON 0076
___int_sp                  stack        0000
___latbits                 (abs)        0002
___sp                      stack        0000
___stackhi                 (abs)        0000
___stacklo                 (abs)        0000
___wmul                    text2        0744
___wmul@multiplicand       cstackBANK0  0022
___wmul@multiplier         cstackBANK0  0020
___wmul@product            cstackCOMMON 0074
__end_of_Lcd_Clear         text8        07ED
__end_of_Lcd_Cmd           text13       0744
__end_of_Lcd_Init          text7        0576
__end_of_Lcd_Set_Cursor    text12       07B7
__end_of_Lcd_Write_Char    text11       07FC
__end_of_Lcd_Write_String  text10       0791
__end_of___awdiv           text3        05DF
__end_of___awmod           text9        063A
__end_of___wmul            text2        076B
__end_of__initialization   cinit        001B
__end_of__stringtab        strings      0693
__end_of_config            text4        0715
__end_of_isr               text14       0473
__end_of_main              maintext     0399
__end_of_oscillator        text6        068D
__end_of_spiInit           text5        07D5
__end_of_spiRead           text16       1000
__end_of_spiReceiveWait    text17       0FEF
__end_of_spiWrite          text15       0FE8
__end_of_uint_to_array     text1        04FA
__initialization           cinit        000F
__pbssBANK0                bssBANK0     004D
__pbssCOMMON               bssCOMMON    0077
__pcstackBANK0             cstackBANK0  0020
__pcstackCOMMON            cstackCOMMON 0070
__pintentry                intentry     0004
__pmaintext                maintext     001F
__pstrings                 strings      068D
__ptext1                   text1        0473
__ptext10                  text10       076B
__ptext11                  text11       07ED
__ptext12                  text12       0791
__ptext13                  text13       0715
__ptext14                  text14       0399
__ptext15                  text15       0FE2
__ptext16                  text16       0FF7
__ptext17                  text17       0FE8
__ptext2                   text2        0744
__ptext3                   text3        0576
__ptext4                   text4        06D3
__ptext5                   text5        07B7
__ptext6                   text6        063A
__ptext7                   text7        04FA
__ptext8                   text8        07D5
__ptext9                   text9        05DF
__size_of_Lcd_Clear        (abs)        0000
__size_of_Lcd_Cmd          (abs)        0000
__size_of_Lcd_Init         (abs)        0000
__size_of_Lcd_Set_Cursor   (abs)        0000
__size_of_Lcd_Write_Char   (abs)        0000
__size_of_Lcd_Write_String (abs)        0000
__size_of___awdiv          (abs)        0000
__size_of___awmod          (abs)        0000
__size_of___wmul           (abs)        0000
__size_of_config           (abs)        0000
__size_of_isr              (abs)        0000
__size_of_main             (abs)        0000
__size_of_oscillator       (abs)        0000
__size_of_spiInit          (abs)        0000
__size_of_spiRead          (abs)        0000
__size_of_spiReceiveWait   (abs)        0000
__size_of_spiWrite         (abs)        0000
__size_of_uint_to_array    (abs)        0000
__stringbase               strings      0692
__stringtab                strings      068D
_config                    text4        06D3
_contador                  bssCOMMON    0079
_contador1                 bssCOMMON    0078
_distancia_ade             bssBANK0     005C
_distancia_atr             bssBANK0     005B
_hora                      bssBANK0     0056
_humedad                   bssBANK0     005A
_isr                       text14       0399
_main                      maintext     001F
_minutos                   bssBANK0     0055
_obj_array                 bssBANK0     0053
_oscillator                text6        063A
_posicion                  bssBANK0     0059
_recibir1                  bssCOMMON    0077
_segundos                  bssBANK0     0054
_spiInit                   text5        07B7
_spiRead                   text16       0FF7
_spiReceiveWait            text17       0FE8
_spiWrite                  text15       0FE2
_temp_amb                  bssBANK0     0058
_temp_obj                  bssBANK0     0057
_uint_to_array             text1        0473
btemp                      (abs)        007E
clear_ram0                 clrtext      0FEF
end_of_initialization      cinit        001B
interrupt_function         intentry     0004
intlevel0                  functab      0000
intlevel1                  functab      0000
intlevel2                  functab      0000
intlevel3                  functab      0000
intlevel4                  functab      0000
intlevel5                  functab      0000
main@Uhr_d                 cstackBANK0  0043
main@Uhr_u                 cstackBANK0  0042
main@ade_d                 cstackBANK0  0047
main@ade_u                 cstackBANK0  0046
main@atr_d                 cstackBANK0  0049
main@atr_u                 cstackBANK0  0048
main@hume_d                cstackBANK0  0045
main@hume_u                cstackBANK0  0044
main@min_d                 cstackBANK0  0041
main@min_u                 cstackBANK0  0040
main@pos_c                 cstackBANK0  004C
main@pos_d                 cstackBANK0  004B
main@pos_u                 cstackBANK0  004A
main@seg_d                 cstackBANK0  003F
main@seg_u                 cstackBANK0  003E
oscillator@a               cstackCOMMON 0076
reset_vec                  reset_vec    0000
saved_w                    (abs)        007E
spiInit@sClockIdle         cstackCOMMON 0075
spiInit@sDataSample        cstackCOMMON 0074
spiInit@sTransmitEdge      cstackCOMMON 0076
spiInit@sType              cstackBANK0  0020
spiWrite@dat               cstackCOMMON 0070
start                      init         000C
start_initialization       cinit        000F
uint_to_array@centenas     cstackBANK0  0033
uint_to_array@decenas      cstackBANK0  0032
uint_to_array@numero       cstackBANK0  003A
uint_to_array@resultado    cstackBANK0  0034
wtemp0                     (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 121 in file "RASP.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  pos_c           1   44[BANK0 ] unsigned char 
  pos_d           1   43[BANK0 ] unsigned char 
  pos_u           1   42[BANK0 ] unsigned char 
  atr_d           1   41[BANK0 ] unsigned char 
  atr_u           1   40[BANK0 ] unsigned char 
  ade_d           1   39[BANK0 ] unsigned char 
  ade_u           1   38[BANK0 ] unsigned char 
  hume_d          1   37[BANK0 ] unsigned char 
  hume_u          1   36[BANK0 ] unsigned char 
  Uhr_d           1   35[BANK0 ] unsigned char 
  Uhr_u           1   34[BANK0 ] unsigned char 
  min_d           1   33[BANK0 ] unsigned char 
  min_u           1   32[BANK0 ] unsigned char 
  seg_d           1   31[BANK0 ] unsigned char 
  seg_u           1   30[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0      15       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0      18       0       0       0
Total ram usage:       18 bytes
 Hardware stack levels required when called:    6
 This function calls:
		_Lcd_Clear
		_Lcd_Set_Cursor
		_Lcd_Write_Char
		_Lcd_Write_String
		___awdiv
		___awmod
		_config
		_uint_to_array
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _uint_to_array *****************
 Defined at:
		line 366 in file "RASP.c"
 Parameters:    Size  Location     Type
  numero          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  numero          1   26[BANK0 ] unsigned char 
  resultado       6   20[BANK0 ] unsigned int [3]
  centenas        1   19[BANK0 ] unsigned char 
  decenas         1   18[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      PTR unsigned int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       9       0       0       0
      Temps:          0       6       0       0       0
      Totals:         0      15       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___awdiv
		___wmul
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    0[BANK0 ] unsigned int 
  multiplicand    2    2[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    4[COMMON] unsigned int 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         2       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       4       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_uint_to_array
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    4[BANK0 ] int 
  dividend        2    6[BANK0 ] int 
 Auto vars:     Size  Location     Type
  quotient        2   10[BANK0 ] int 
  sign            1    9[BANK0 ] unsigned char 
  counter         1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    4[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       4       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1       8       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
		_uint_to_array
 This function uses a non-reentrant model


 *************** function _config *****************
 Defined at:
		line 229 in file "RASP.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_Lcd_Clear
		_Lcd_Init
		_oscillator
		_spiInit
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _spiInit *****************
 Defined at:
		line 14 in file "SPI.c"
 Parameters:    Size  Location     Type
  sType           1    wreg     enum E1292
  sDataSample     1    4[COMMON] enum E1300
  sClockIdle      1    5[COMMON] enum E1304
  sTransmitEdg    1    6[COMMON] enum E1308
 Auto vars:     Size  Location     Type
  sType           1    0[BANK0 ] enum E1292
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         3       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         3       1       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_config
 This function uses a non-reentrant model


 *************** function _oscillator *****************
 Defined at:
		line 252 in file "RASP.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_config
 This function uses a non-reentrant model


 *************** function _Lcd_Init *****************
 Defined at:
		line 293 in file "RASP.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_config
 This function uses a non-reentrant model


 *************** function _Lcd_Clear *****************
 Defined at:
		line 325 in file "RASP.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
		_config
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
 Parameters:    Size  Location     Type
  divisor         2    0[BANK0 ] int 
  dividend        2    2[BANK0 ] int 
 Auto vars:     Size  Location     Type
  sign            1    6[COMMON] unsigned char 
  counter         1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         2       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         3       4       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_String *****************
 Defined at:
		line 358 in file "RASP.c"
 Parameters:    Size  Location     Type
  a               1    wreg     PTR unsigned char 
		 -> STR_7(14), STR_6(4), STR_5(8), STR_4(4), 
		 -> STR_3(11), STR_2(17), STR_1(10), 
 Auto vars:     Size  Location     Type
  a               1    1[BANK0 ] PTR unsigned char 
		 -> STR_7(14), STR_6(4), STR_5(8), STR_4(4), 
		 -> STR_3(11), STR_2(17), STR_1(10), 
  n               1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1       2       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Write_Char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_Char *****************
 Defined at:
		line 348 in file "RASP.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
		_Lcd_Write_String
 This function uses a non-reentrant model


 *************** function _Lcd_Set_Cursor *****************
 Defined at:
		line 332 in file "RASP.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  b               1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  a               1    2[BANK0 ] unsigned char 
  d               1    3[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Cmd *****************
 Defined at:
		line 314 in file "RASP.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Init
		_Lcd_Clear
		_Lcd_Set_Cursor
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 59 in file "RASP.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_spiRead
		_spiWrite
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _spiWrite *****************
 Defined at:
		line 36 in file "SPI.c"
 Parameters:    Size  Location     Type
  dat             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  dat             1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_isr
 This function uses a non-reentrant model


 *************** function _spiRead *****************
 Defined at:
		line 49 in file "SPI.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_spiReceiveWait
 This function is called by:
		_isr
 This function uses a non-reentrant model


 *************** function _spiReceiveWait *****************
 Defined at:
		line 31 in file "SPI.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_spiRead
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c
		___awdiv       		CODE           	0576	0000	106

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c estimated size: 106

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c
		___wmul        		CODE           	0744	0000	40

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c estimated size: 40

shared
		__stringtab    		STRING         	068D	0000	7
		__initialization		CODE           	000F	0000	13

shared estimated size: 20

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c
		___awmod       		CODE           	05DF	0000	92

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c estimated size: 92

SPI.c
		_spiWrite      		CODE           	0FE2	0000	7
		_spiInit       		CODE           	07B7	0000	31
		_spiReceiveWait		CODE           	0FE8	0000	8
		_spiRead       		CODE           	0FF7	0000	10

SPI.c estimated size: 56

RASP.c
		_Lcd_Write_String		CODE           	076B	0000	39
		_uint_to_array 		CODE           	0473	0000	136
		_Lcd_Init      		CODE           	04FA	0000	125
		_Lcd_Write_Char		CODE           	07ED	0000	16
		_main          		CODE           	001F	0000	891
		_Lcd_Cmd       		CODE           	0715	0000	48
		_oscillator    		CODE           	063A	0000	84
		_config        		CODE           	06D3	0000	67
		_isr           		CODE           	0399	0000	219
		_Lcd_Set_Cursor		CODE           	0791	0000	39
		_Lcd_Clear     		CODE           	07D5	0000	25

RASP.c estimated size: 1689


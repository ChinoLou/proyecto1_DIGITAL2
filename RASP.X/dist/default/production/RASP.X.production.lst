

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat May 02 23:13:24 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.10
    33                           ; Generated 31/07/2019 GMT
    34                           ; 
    35                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0013                     _SSPBUF	set	19
   301  0014                     _SSPCON	set	20
   302  0005                     _PORTAbits	set	5
   303  0006                     _PORTB	set	6
   304  0005                     _PORTA	set	5
   305  0008                     _PORTD	set	8
   306  000C                     _PIR1bits	set	12
   307  0006                     _PORTBbits	set	6
   308  000B                     _INTCONbits	set	11
   309  0094                     _SSPSTATbits	set	148
   310  0094                     _SSPSTAT	set	148
   311  008F                     _OSCCONbits	set	143
   312  008C                     _PIE1bits	set	140
   313  0096                     _IOCB	set	150
   314  0081                     _OPTION_REGbits	set	129
   315  0095                     _WPUB	set	149
   316  0086                     _TRISB	set	134
   317  0085                     _TRISA	set	133
   318  0088                     _TRISD	set	136
   319  043B                     _TRISC3	set	1083
   320  043D                     _TRISC5	set	1085
   321  0189                     _ANSELH	set	393
   322  0188                     _ANSEL	set	392
   323                           
   324                           	psect	strings
   325  068D                     __pstrings:	
   326  068D                     stringtab:	
   327  068D                     __stringtab:	
   328  068D                     stringcode:	
   329                           ;	String table - string pointers are 1 byte each
   330                           
   331  068D                     stringdir:	
   332  068D  3006               	movlw	high stringdir
   333  068E  008A               	movwf	10
   334  068F  0804               	movf	4,w
   335  0690  0A84               	incf	4,f
   336  0691  0782               	addwf	2,f
   337  0692                     __stringbase:	
   338  0692  3400               	retlw	0
   339  0693                     __end_of__stringtab:	
   340  0693                     STR_2:	
   341  0693  3441               	retlw	65	;'A'
   342  0694  346D               	retlw	109	;'m'
   343  0695  3462               	retlw	98	;'b'
   344  0696  3469               	retlw	105	;'i'
   345  0697  3465               	retlw	101	;'e'
   346  0698  346E               	retlw	110	;'n'
   347  0699  3474               	retlw	116	;'t'
   348  069A  3465               	retlw	101	;'e'
   349  069B  343A               	retlw	58	;':'
   350  069C  3420               	retlw	32	;' '
   351  069D  3453               	retlw	83	;'S'
   352  069E  3475               	retlw	117	;'u'
   353  069F  3465               	retlw	101	;'e'
   354  06A0  346C               	retlw	108	;'l'
   355  06A1  346F               	retlw	111	;'o'
   356  06A2  343A               	retlw	58	;':'
   357  06A3  3400               	retlw	0
   358  06A4                     STR_7:	
   359  06A4  3449               	retlw	73	;'I'
   360  06A5  346E               	retlw	110	;'n'
   361  06A6  3463               	retlw	99	;'c'
   362  06A7  346C               	retlw	108	;'l'
   363  06A8  3469               	retlw	105	;'i'
   364  06A9  346E               	retlw	110	;'n'
   365  06AA  3461               	retlw	97	;'a'
   366  06AB  3463               	retlw	99	;'c'
   367  06AC  3469               	retlw	105	;'i'
   368  06AD  346F               	retlw	111	;'o'
   369  06AE  346E               	retlw	110	;'n'
   370  06AF  343A               	retlw	58	;':'
   371  06B0  3420               	retlw	32	;' '
   372  06B1  3400               	retlw	0
   373  06B2                     STR_3:	
   374  06B2  3441               	retlw	65	;'A'
   375  06B3  3464               	retlw	100	;'d'
   376  06B4  3465               	retlw	101	;'e'
   377  06B5  346C               	retlw	108	;'l'
   378  06B6  3461               	retlw	97	;'a'
   379  06B7  346E               	retlw	110	;'n'
   380  06B8  3474               	retlw	116	;'t'
   381  06B9  3465               	retlw	101	;'e'
   382  06BA  343A               	retlw	58	;':'
   383  06BB  3420               	retlw	32	;' '
   384  06BC  3400               	retlw	0
   385  06BD                     STR_1:	
   386  06BD  3448               	retlw	72	;'H'
   387  06BE  3475               	retlw	117	;'u'
   388  06BF  346D               	retlw	109	;'m'
   389  06C0  3465               	retlw	101	;'e'
   390  06C1  3464               	retlw	100	;'d'
   391  06C2  3461               	retlw	97	;'a'
   392  06C3  3464               	retlw	100	;'d'
   393  06C4  343A               	retlw	58	;':'
   394  06C5  3420               	retlw	32	;' '
   395  06C6  3400               	retlw	0
   396  06C7                     STR_5:	
   397  06C7  3441               	retlw	65	;'A'
   398  06C8  3474               	retlw	116	;'t'
   399  06C9  3472               	retlw	114	;'r'
   400  06CA  3461               	retlw	97	;'a'
   401  06CB  3473               	retlw	115	;'s'
   402  06CC  343A               	retlw	58	;':'
   403  06CD  3420               	retlw	32	;' '
   404  06CE  3400               	retlw	0
   405  06CF                     STR_4:	
   406  06CF  3420               	retlw	32	;' '
   407  06D0  3463               	retlw	99	;'c'
   408  06D1  346D               	retlw	109	;'m'
   409  06D2  3400               	retlw	0
   410  06CF                     
   411                           ; #config settings
   412  0000                     
   413                           	psect	cinit
   414  000F                     start_initialization:	
   415  000F                     __initialization:	
   416                           
   417                           ; Clear objects allocated to COMMON
   418  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   419  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   420  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   421                           
   422                           ; Clear objects allocated to BANK0
   423  0012  1383               	bcf	3,7	;select IRP bank0
   424  0013  304D               	movlw	low __pbssBANK0
   425  0014  0084               	movwf	4
   426  0015  305D               	movlw	low (__pbssBANK0+16)
   427  0016  120A  158A  27EF  120A  118A  	fcall	clear_ram0
   428  001B                     end_of_initialization:	
   429                           ;End of C runtime variable initialization code
   430                           
   431  001B                     __end_of__initialization:	
   432  001B  0183               	clrf	3
   433  001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   434                           
   435                           	psect	bssCOMMON
   436  0077                     __pbssCOMMON:	
   437  0077                     _recibir1:	
   438  0077                     	ds	1
   439  0078                     _contador1:	
   440  0078                     	ds	1
   441  0079                     _contador:	
   442  0079                     	ds	1
   443                           
   444                           	psect	bssBANK0
   445  004D                     __pbssBANK0:	
   446  004D                     uint_to_array@F1385:	
   447  004D                     	ds	6
   448  0053                     _obj_array:	
   449  0053                     	ds	1
   450  0054                     _segundos:	
   451  0054                     	ds	1
   452  0055                     _minutos:	
   453  0055                     	ds	1
   454  0056                     _hora:	
   455  0056                     	ds	1
   456  0057                     _temp_obj:	
   457  0057                     	ds	1
   458  0058                     _temp_amb:	
   459  0058                     	ds	1
   460  0059                     _posicion:	
   461  0059                     	ds	1
   462  005A                     _humedad:	
   463  005A                     	ds	1
   464  005B                     _distancia_atr:	
   465  005B                     	ds	1
   466  005C                     _distancia_ade:	
   467  005C                     	ds	1
   468                           
   469                           	psect	clrtext
   470  0FEF                     clear_ram0:	
   471                           ;	Called with FSR containing the base address, and
   472                           ;	W with the last address+1
   473                           
   474  0FEF  0064               	clrwdt	;clear the watchdog before getting into this loop
   475  0FF0                     clrloop0:	
   476  0FF0  0180               	clrf	0	;clear RAM location pointed to by FSR
   477  0FF1  0A84               	incf	4,f	;increment pointer
   478  0FF2  0604               	xorwf	4,w	;XOR with final address
   479  0FF3  1903               	btfsc	3,2	;have we reached the end yet?
   480  0FF4  3400               	retlw	0	;all done for this memory range, return
   481  0FF5  0604               	xorwf	4,w	;XOR again to restore value
   482  0FF6  2FF0               	goto	clrloop0	;do the next byte
   483                           
   484                           	psect	cstackCOMMON
   485  0070                     __pcstackCOMMON:	
   486  0070                     ?_spiRead:	
   487  0070                     ??_spiRead:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_spiWrite:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ??_spiWrite:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_config:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ?_Lcd_Write_Char:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_Lcd_Write_String:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_Lcd_Clear:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_uint_to_array:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_oscillator:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_Lcd_Init:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?_Lcd_Cmd:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?_isr:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_main:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_spiReceiveWait:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ??_spiReceiveWait:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     spiWrite@dat:	
   533                           ; 1 bytes @ 0x0
   534                           
   535                           
   536                           ; 1 bytes @ 0x0
   537  0070                     	ds	1
   538  0071                     ??_isr:	
   539                           
   540                           ; 1 bytes @ 0x1
   541  0071                     	ds	3
   542  0074                     ??_Lcd_Write_Char:	
   543  0074                     ??_oscillator:	
   544                           ; 1 bytes @ 0x4
   545                           
   546  0074                     ?_spiInit:	
   547                           ; 1 bytes @ 0x4
   548                           
   549  0074                     ??_Lcd_Cmd:	
   550                           ; 1 bytes @ 0x4
   551                           
   552  0074                     ??___wmul:	
   553                           ; 1 bytes @ 0x4
   554                           
   555  0074                     ??___awmod:	
   556                           ; 1 bytes @ 0x4
   557                           
   558  0074                     spiInit@sDataSample:	
   559                           ; 1 bytes @ 0x4
   560                           
   561  0074                     ___wmul@product:	
   562                           ; 1 bytes @ 0x4
   563                           
   564                           
   565                           ; 2 bytes @ 0x4
   566  0074                     	ds	1
   567  0075                     Lcd_Write_Char@a:	
   568  0075                     spiInit@sClockIdle:	
   569                           ; 1 bytes @ 0x5
   570                           
   571  0075                     ___awmod@counter:	
   572                           ; 1 bytes @ 0x5
   573                           
   574                           
   575                           ; 1 bytes @ 0x5
   576  0075                     	ds	1
   577  0076                     ??_Lcd_Write_String:	
   578  0076                     ??___awdiv:	
   579                           ; 1 bytes @ 0x6
   580                           
   581  0076                     oscillator@a:	
   582                           ; 1 bytes @ 0x6
   583                           
   584  0076                     Lcd_Cmd@a:	
   585                           ; 1 bytes @ 0x6
   586                           
   587  0076                     spiInit@sTransmitEdge:	
   588                           ; 1 bytes @ 0x6
   589                           
   590  0076                     ___awmod@sign:	
   591                           ; 1 bytes @ 0x6
   592                           
   593                           
   594                           ; 1 bytes @ 0x6
   595  0076                     	ds	1
   596  0077                     ??_config:	
   597  0077                     ??_spiInit:	
   598                           ; 1 bytes @ 0x7
   599                           
   600                           
   601                           	psect	cstackBANK0
   602  0020                     __pcstackBANK0:	
   603                           ; 1 bytes @ 0x7
   604                           
   605  0020                     ?_Lcd_Set_Cursor:	
   606  0020                     ??_Lcd_Clear:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0020                     ??_Lcd_Init:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0020                     ?___wmul:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0020                     ?___awmod:	
   616                           ; 2 bytes @ 0x0
   617                           
   618  0020                     Lcd_Set_Cursor@b:	
   619                           ; 2 bytes @ 0x0
   620                           
   621  0020                     Lcd_Write_String@n:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0020                     spiInit@sType:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0020                     ___wmul@multiplier:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0020                     ___awmod@divisor:	
   631                           ; 2 bytes @ 0x0
   632                           
   633                           
   634                           ; 2 bytes @ 0x0
   635  0020                     	ds	1
   636  0021                     ??_Lcd_Set_Cursor:	
   637  0021                     Lcd_Write_String@a:	
   638                           ; 1 bytes @ 0x1
   639                           
   640                           
   641                           ; 1 bytes @ 0x1
   642  0021                     	ds	1
   643  0022                     Lcd_Set_Cursor@a:	
   644  0022                     ___wmul@multiplicand:	
   645                           ; 1 bytes @ 0x2
   646                           
   647  0022                     ___awmod@dividend:	
   648                           ; 2 bytes @ 0x2
   649                           
   650                           
   651                           ; 2 bytes @ 0x2
   652  0022                     	ds	1
   653  0023                     Lcd_Set_Cursor@d:	
   654                           
   655                           ; 1 bytes @ 0x3
   656  0023                     	ds	1
   657  0024                     ?___awdiv:	
   658  0024                     ___awdiv@divisor:	
   659                           ; 2 bytes @ 0x4
   660                           
   661                           
   662                           ; 2 bytes @ 0x4
   663  0024                     	ds	2
   664  0026                     ___awdiv@dividend:	
   665                           
   666                           ; 2 bytes @ 0x6
   667  0026                     	ds	2
   668  0028                     ___awdiv@counter:	
   669                           
   670                           ; 1 bytes @ 0x8
   671  0028                     	ds	1
   672  0029                     ___awdiv@sign:	
   673                           
   674                           ; 1 bytes @ 0x9
   675  0029                     	ds	1
   676  002A                     ___awdiv@quotient:	
   677                           
   678                           ; 2 bytes @ 0xA
   679  002A                     	ds	2
   680  002C                     ??_uint_to_array:	
   681                           
   682                           ; 1 bytes @ 0xC
   683  002C                     	ds	6
   684  0032                     uint_to_array@decenas:	
   685                           
   686                           ; 1 bytes @ 0x12
   687  0032                     	ds	1
   688  0033                     uint_to_array@centenas:	
   689                           
   690                           ; 1 bytes @ 0x13
   691  0033                     	ds	1
   692  0034                     uint_to_array@resultado:	
   693                           
   694                           ; 6 bytes @ 0x14
   695  0034                     	ds	6
   696  003A                     uint_to_array@numero:	
   697                           
   698                           ; 1 bytes @ 0x1A
   699  003A                     	ds	1
   700  003B                     ??_main:	
   701                           
   702                           ; 1 bytes @ 0x1B
   703  003B                     	ds	3
   704  003E                     main@seg_u:	
   705                           
   706                           ; 1 bytes @ 0x1E
   707  003E                     	ds	1
   708  003F                     main@seg_d:	
   709                           
   710                           ; 1 bytes @ 0x1F
   711  003F                     	ds	1
   712  0040                     main@min_u:	
   713                           
   714                           ; 1 bytes @ 0x20
   715  0040                     	ds	1
   716  0041                     main@min_d:	
   717                           
   718                           ; 1 bytes @ 0x21
   719  0041                     	ds	1
   720  0042                     main@Uhr_u:	
   721                           
   722                           ; 1 bytes @ 0x22
   723  0042                     	ds	1
   724  0043                     main@Uhr_d:	
   725                           
   726                           ; 1 bytes @ 0x23
   727  0043                     	ds	1
   728  0044                     main@hume_u:	
   729                           
   730                           ; 1 bytes @ 0x24
   731  0044                     	ds	1
   732  0045                     main@hume_d:	
   733                           
   734                           ; 1 bytes @ 0x25
   735  0045                     	ds	1
   736  0046                     main@ade_u:	
   737                           
   738                           ; 1 bytes @ 0x26
   739  0046                     	ds	1
   740  0047                     main@ade_d:	
   741                           
   742                           ; 1 bytes @ 0x27
   743  0047                     	ds	1
   744  0048                     main@atr_u:	
   745                           
   746                           ; 1 bytes @ 0x28
   747  0048                     	ds	1
   748  0049                     main@atr_d:	
   749                           
   750                           ; 1 bytes @ 0x29
   751  0049                     	ds	1
   752  004A                     main@pos_u:	
   753                           
   754                           ; 1 bytes @ 0x2A
   755  004A                     	ds	1
   756  004B                     main@pos_d:	
   757                           
   758                           ; 1 bytes @ 0x2B
   759  004B                     	ds	1
   760  004C                     main@pos_c:	
   761                           
   762                           ; 1 bytes @ 0x2C
   763  004C                     	ds	1
   764                           
   765                           	psect	maintext
   766  001F                     __pmaintext:	
   767 ;;
   768 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   769 ;;
   770 ;; *************** function _main *****************
   771 ;; Defined at:
   772 ;;		line 121 in file "RASP.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;  pos_c           1   44[BANK0 ] unsigned char 
   777 ;;  pos_d           1   43[BANK0 ] unsigned char 
   778 ;;  pos_u           1   42[BANK0 ] unsigned char 
   779 ;;  atr_d           1   41[BANK0 ] unsigned char 
   780 ;;  atr_u           1   40[BANK0 ] unsigned char 
   781 ;;  ade_d           1   39[BANK0 ] unsigned char 
   782 ;;  ade_u           1   38[BANK0 ] unsigned char 
   783 ;;  hume_d          1   37[BANK0 ] unsigned char 
   784 ;;  hume_u          1   36[BANK0 ] unsigned char 
   785 ;;  Uhr_d           1   35[BANK0 ] unsigned char 
   786 ;;  Uhr_u           1   34[BANK0 ] unsigned char 
   787 ;;  min_d           1   33[BANK0 ] unsigned char 
   788 ;;  min_u           1   32[BANK0 ] unsigned char 
   789 ;;  seg_d           1   31[BANK0 ] unsigned char 
   790 ;;  seg_u           1   30[BANK0 ] unsigned char 
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : B00/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   800 ;;      Params:         0       0       0       0       0
   801 ;;      Locals:         0      15       0       0       0
   802 ;;      Temps:          0       3       0       0       0
   803 ;;      Totals:         0      18       0       0       0
   804 ;;Total ram usage:       18 bytes
   805 ;; Hardware stack levels required when called:    6
   806 ;; This function calls:
   807 ;;		_Lcd_Clear
   808 ;;		_Lcd_Set_Cursor
   809 ;;		_Lcd_Write_Char
   810 ;;		_Lcd_Write_String
   811 ;;		___awdiv
   812 ;;		___awmod
   813 ;;		_config
   814 ;;		_uint_to_array
   815 ;; This function is called by:
   816 ;;		Startup code after reset
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           
   821                           ;psect for function _main
   822  001F                     _main:	
   823  001F                     l1964:	
   824                           ;incstack = 0
   825                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   826                           
   827                           
   828                           ;RASP.c: 122:     config();
   829  001F  120A  118A  26D3  120A  118A  	fcall	_config
   830  0024                     l1966:	
   831                           
   832                           ;RASP.c: 125:             char seg_u = segundos%10;
   833  0024  300A               	movlw	10
   834  0025  1283               	bcf	3,5	;RP0=0, select bank0
   835  0026  1303               	bcf	3,6	;RP1=0, select bank0
   836  0027  00A0               	movwf	___awmod@divisor
   837  0028  3000               	movlw	0
   838  0029  00A1               	movwf	___awmod@divisor+1
   839  002A  0854               	movf	_segundos,w
   840  002B  00BB               	movwf	??_main
   841  002C  01BC               	clrf	??_main+1
   842  002D  083B               	movf	??_main,w
   843  002E  00A2               	movwf	___awmod@dividend
   844  002F  083C               	movf	??_main+1,w
   845  0030  00A3               	movwf	___awmod@dividend+1
   846  0031  120A  118A  25DF  120A  118A  	fcall	___awmod
   847  0036  1283               	bcf	3,5	;RP0=0, select bank0
   848  0037  1303               	bcf	3,6	;RP1=0, select bank0
   849  0038  0820               	movf	?___awmod,w
   850  0039  00BD               	movwf	??_main+2
   851  003A  083D               	movf	??_main+2,w
   852  003B  00BE               	movwf	main@seg_u
   853  003C                     l1968:	
   854                           
   855                           ;RASP.c: 126:             char seg_d = segundos/10;
   856  003C  300A               	movlw	10
   857  003D  00A4               	movwf	___awdiv@divisor
   858  003E  3000               	movlw	0
   859  003F  00A5               	movwf	___awdiv@divisor+1
   860  0040  0854               	movf	_segundos,w
   861  0041  00BB               	movwf	??_main
   862  0042  01BC               	clrf	??_main+1
   863  0043  083B               	movf	??_main,w
   864  0044  00A6               	movwf	___awdiv@dividend
   865  0045  083C               	movf	??_main+1,w
   866  0046  00A7               	movwf	___awdiv@dividend+1
   867  0047  120A  118A  2576  120A  118A  	fcall	___awdiv
   868  004C  1283               	bcf	3,5	;RP0=0, select bank0
   869  004D  1303               	bcf	3,6	;RP1=0, select bank0
   870  004E  0824               	movf	?___awdiv,w
   871  004F  00BD               	movwf	??_main+2
   872  0050  083D               	movf	??_main+2,w
   873  0051  00BF               	movwf	main@seg_d
   874  0052                     l1970:	
   875                           
   876                           ;RASP.c: 127:             char min_u = minutos%10;
   877  0052  300A               	movlw	10
   878  0053  00A0               	movwf	___awmod@divisor
   879  0054  3000               	movlw	0
   880  0055  00A1               	movwf	___awmod@divisor+1
   881  0056  0855               	movf	_minutos,w
   882  0057  00BB               	movwf	??_main
   883  0058  01BC               	clrf	??_main+1
   884  0059  083B               	movf	??_main,w
   885  005A  00A2               	movwf	___awmod@dividend
   886  005B  083C               	movf	??_main+1,w
   887  005C  00A3               	movwf	___awmod@dividend+1
   888  005D  120A  118A  25DF  120A  118A  	fcall	___awmod
   889  0062  1283               	bcf	3,5	;RP0=0, select bank0
   890  0063  1303               	bcf	3,6	;RP1=0, select bank0
   891  0064  0820               	movf	?___awmod,w
   892  0065  00BD               	movwf	??_main+2
   893  0066  083D               	movf	??_main+2,w
   894  0067  00C0               	movwf	main@min_u
   895  0068                     l1972:	
   896                           
   897                           ;RASP.c: 128:             char min_d = minutos/10;
   898  0068  300A               	movlw	10
   899  0069  00A4               	movwf	___awdiv@divisor
   900  006A  3000               	movlw	0
   901  006B  00A5               	movwf	___awdiv@divisor+1
   902  006C  0855               	movf	_minutos,w
   903  006D  00BB               	movwf	??_main
   904  006E  01BC               	clrf	??_main+1
   905  006F  083B               	movf	??_main,w
   906  0070  00A6               	movwf	___awdiv@dividend
   907  0071  083C               	movf	??_main+1,w
   908  0072  00A7               	movwf	___awdiv@dividend+1
   909  0073  120A  118A  2576  120A  118A  	fcall	___awdiv
   910  0078  1283               	bcf	3,5	;RP0=0, select bank0
   911  0079  1303               	bcf	3,6	;RP1=0, select bank0
   912  007A  0824               	movf	?___awdiv,w
   913  007B  00BD               	movwf	??_main+2
   914  007C  083D               	movf	??_main+2,w
   915  007D  00C1               	movwf	main@min_d
   916  007E                     l1974:	
   917                           
   918                           ;RASP.c: 129:             char Uhr_u = hora%10;
   919  007E  300A               	movlw	10
   920  007F  00A0               	movwf	___awmod@divisor
   921  0080  3000               	movlw	0
   922  0081  00A1               	movwf	___awmod@divisor+1
   923  0082  0856               	movf	_hora,w
   924  0083  00BB               	movwf	??_main
   925  0084  01BC               	clrf	??_main+1
   926  0085  083B               	movf	??_main,w
   927  0086  00A2               	movwf	___awmod@dividend
   928  0087  083C               	movf	??_main+1,w
   929  0088  00A3               	movwf	___awmod@dividend+1
   930  0089  120A  118A  25DF  120A  118A  	fcall	___awmod
   931  008E  1283               	bcf	3,5	;RP0=0, select bank0
   932  008F  1303               	bcf	3,6	;RP1=0, select bank0
   933  0090  0820               	movf	?___awmod,w
   934  0091  00BD               	movwf	??_main+2
   935  0092  083D               	movf	??_main+2,w
   936  0093  00C2               	movwf	main@Uhr_u
   937  0094                     l1976:	
   938                           
   939                           ;RASP.c: 130:             char Uhr_d = hora/10;
   940  0094  300A               	movlw	10
   941  0095  00A4               	movwf	___awdiv@divisor
   942  0096  3000               	movlw	0
   943  0097  00A5               	movwf	___awdiv@divisor+1
   944  0098  0856               	movf	_hora,w
   945  0099  00BB               	movwf	??_main
   946  009A  01BC               	clrf	??_main+1
   947  009B  083B               	movf	??_main,w
   948  009C  00A6               	movwf	___awdiv@dividend
   949  009D  083C               	movf	??_main+1,w
   950  009E  00A7               	movwf	___awdiv@dividend+1
   951  009F  120A  118A  2576  120A  118A  	fcall	___awdiv
   952  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   953  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   954  00A6  0824               	movf	?___awdiv,w
   955  00A7  00BD               	movwf	??_main+2
   956  00A8  083D               	movf	??_main+2,w
   957  00A9  00C3               	movwf	main@Uhr_d
   958  00AA                     l1978:	
   959                           
   960                           ;RASP.c: 132:             Lcd_Set_Cursor(1,4);
   961  00AA  3004               	movlw	4
   962  00AB  00BB               	movwf	??_main
   963  00AC  083B               	movf	??_main,w
   964  00AD  00A0               	movwf	Lcd_Set_Cursor@b
   965  00AE  3001               	movlw	1
   966  00AF  120A  118A  2791  120A  118A  	fcall	_Lcd_Set_Cursor
   967  00B4                     l1980:	
   968                           
   969                           ;RASP.c: 133:             Lcd_Write_Char(Uhr_d + '0');
   970  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   971  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   972  00B6  0843               	movf	main@Uhr_d,w
   973  00B7  3E30               	addlw	48
   974  00B8  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
   975  00BD                     l1982:	
   976                           
   977                           ;RASP.c: 134:             Lcd_Write_Char(Uhr_u + '0');
   978  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   979  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   980  00BF  0842               	movf	main@Uhr_u,w
   981  00C0  3E30               	addlw	48
   982  00C1  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
   983  00C6                     l1984:	
   984                           
   985                           ;RASP.c: 135:             Lcd_Write_Char(':');
   986  00C6  303A               	movlw	58
   987  00C7  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
   988  00CC                     l1986:	
   989                           
   990                           ;RASP.c: 136:             Lcd_Write_Char(min_d + '0');
   991  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   992  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   993  00CE  0841               	movf	main@min_d,w
   994  00CF  3E30               	addlw	48
   995  00D0  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
   996  00D5                     l1988:	
   997                           
   998                           ;RASP.c: 137:             Lcd_Write_Char(min_u + '0');
   999  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1000  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1001  00D7  0840               	movf	main@min_u,w
  1002  00D8  3E30               	addlw	48
  1003  00D9  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1004  00DE                     l1990:	
  1005                           
  1006                           ;RASP.c: 138:             Lcd_Write_Char(':');
  1007  00DE  303A               	movlw	58
  1008  00DF  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1009  00E4                     l1992:	
  1010                           
  1011                           ;RASP.c: 139:             Lcd_Write_Char(seg_d + '0');
  1012  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1013  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1014  00E6  083F               	movf	main@seg_d,w
  1015  00E7  3E30               	addlw	48
  1016  00E8  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1017  00ED                     l1994:	
  1018                           
  1019                           ;RASP.c: 140:             Lcd_Write_Char(seg_u + '0');
  1020  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1021  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1022  00EF  083E               	movf	main@seg_u,w
  1023  00F0  3E30               	addlw	48
  1024  00F1  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1025  00F6                     l1996:	
  1026                           
  1027                           ;RASP.c: 142:             char hume_u = humedad%10;
  1028  00F6  300A               	movlw	10
  1029  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1030  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1031  00F9  00A0               	movwf	___awmod@divisor
  1032  00FA  3000               	movlw	0
  1033  00FB  00A1               	movwf	___awmod@divisor+1
  1034  00FC  085A               	movf	_humedad,w
  1035  00FD  00BB               	movwf	??_main
  1036  00FE  01BC               	clrf	??_main+1
  1037  00FF  083B               	movf	??_main,w
  1038  0100  00A2               	movwf	___awmod@dividend
  1039  0101  083C               	movf	??_main+1,w
  1040  0102  00A3               	movwf	___awmod@dividend+1
  1041  0103  120A  118A  25DF  120A  118A  	fcall	___awmod
  1042  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1043  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1044  010A  0820               	movf	?___awmod,w
  1045  010B  00BD               	movwf	??_main+2
  1046  010C  083D               	movf	??_main+2,w
  1047  010D  00C4               	movwf	main@hume_u
  1048  010E                     l1998:	
  1049                           
  1050                           ;RASP.c: 143:             char hume_d = humedad/10;
  1051  010E  300A               	movlw	10
  1052  010F  00A4               	movwf	___awdiv@divisor
  1053  0110  3000               	movlw	0
  1054  0111  00A5               	movwf	___awdiv@divisor+1
  1055  0112  085A               	movf	_humedad,w
  1056  0113  00BB               	movwf	??_main
  1057  0114  01BC               	clrf	??_main+1
  1058  0115  083B               	movf	??_main,w
  1059  0116  00A6               	movwf	___awdiv@dividend
  1060  0117  083C               	movf	??_main+1,w
  1061  0118  00A7               	movwf	___awdiv@dividend+1
  1062  0119  120A  118A  2576  120A  118A  	fcall	___awdiv
  1063  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1064  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1065  0120  0824               	movf	?___awdiv,w
  1066  0121  00BD               	movwf	??_main+2
  1067  0122  083D               	movf	??_main+2,w
  1068  0123  00C5               	movwf	main@hume_d
  1069  0124                     l2000:	
  1070                           
  1071                           ;RASP.c: 144:             Lcd_Set_Cursor(2,4);
  1072  0124  3004               	movlw	4
  1073  0125  00BB               	movwf	??_main
  1074  0126  083B               	movf	??_main,w
  1075  0127  00A0               	movwf	Lcd_Set_Cursor@b
  1076  0128  3002               	movlw	2
  1077  0129  120A  118A  2791  120A  118A  	fcall	_Lcd_Set_Cursor
  1078                           
  1079                           ;RASP.c: 145:             Lcd_Write_String("Humedad: ");
  1080  012E  302B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1081  012F  120A  118A  276B  120A  118A  	fcall	_Lcd_Write_String
  1082  0134                     l2002:	
  1083                           
  1084                           ;RASP.c: 146:             Lcd_Write_Char(hume_d + '0');
  1085  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0136  0845               	movf	main@hume_d,w
  1088  0137  3E30               	addlw	48
  1089  0138  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1090  013D                     l2004:	
  1091                           
  1092                           ;RASP.c: 147:             Lcd_Write_Char(hume_u + '0');
  1093  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1094  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1095  013F  0844               	movf	main@hume_u,w
  1096  0140  3E30               	addlw	48
  1097  0141  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1098  0146                     l2006:	
  1099                           
  1100                           ;RASP.c: 149:         _delay((unsigned long)((2000)*(4000000/4000.0)));
  1101  0146  300B               	movlw	11
  1102  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1103  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1104  0149  00BD               	movwf	??_main+2
  1105  014A  3026               	movlw	38
  1106  014B  00BC               	movwf	??_main+1
  1107  014C  305D               	movlw	93
  1108  014D  00BB               	movwf	??_main
  1109  014E                     u1247:	
  1110  014E  0BBB               	decfsz	??_main,f
  1111  014F  294E               	goto	u1247
  1112  0150  0BBC               	decfsz	??_main+1,f
  1113  0151  294E               	goto	u1247
  1114  0152  0BBD               	decfsz	??_main+2,f
  1115  0153  294E               	goto	u1247
  1116  0154                     l2008:	
  1117                           
  1118                           ;RASP.c: 150:         Lcd_Clear();
  1119  0154  120A  118A  27D5  120A  118A  	fcall	_Lcd_Clear
  1120  0159                     l2010:	
  1121                           
  1122                           ;RASP.c: 152:             Lcd_Set_Cursor(1,1);
  1123  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1124  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1125  015B  01A0               	clrf	Lcd_Set_Cursor@b
  1126  015C  0AA0               	incf	Lcd_Set_Cursor@b,f
  1127  015D  3001               	movlw	1
  1128  015E  120A  118A  2791  120A  118A  	fcall	_Lcd_Set_Cursor
  1129  0163                     l2012:	
  1130                           
  1131                           ;RASP.c: 153:             Lcd_Write_String("Ambiente: Suelo:");
  1132  0163  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1133  0164  120A  118A  276B  120A  118A  	fcall	_Lcd_Write_String
  1134  0169                     l2014:	
  1135                           
  1136                           ;RASP.c: 154:             Lcd_Set_Cursor(2,2);
  1137  0169  3002               	movlw	2
  1138  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1139  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1140  016C  00BB               	movwf	??_main
  1141  016D  083B               	movf	??_main,w
  1142  016E  00A0               	movwf	Lcd_Set_Cursor@b
  1143  016F  3002               	movlw	2
  1144  0170  120A  118A  2791  120A  118A  	fcall	_Lcd_Set_Cursor
  1145  0175                     l2016:	
  1146                           
  1147                           ;RASP.c: 155:             Lcd_Write_Char(2);
  1148  0175  3002               	movlw	2
  1149  0176  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1150  017B                     l2018:	
  1151                           
  1152                           ;RASP.c: 156:             obj_array = uint_to_array(temp_amb);
  1153  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1154  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1155  017D  0858               	movf	_temp_amb,w
  1156  017E  120A  118A  2473  120A  118A  	fcall	_uint_to_array
  1157  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1158  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1159  0185  00BB               	movwf	??_main
  1160  0186  083B               	movf	??_main,w
  1161  0187  00D3               	movwf	_obj_array
  1162  0188                     l2020:	
  1163                           
  1164                           ;RASP.c: 157:             if (obj_array[0] == 0){
  1165  0188  0853               	movf	_obj_array,w
  1166  0189  0084               	movwf	4
  1167  018A  1383               	bcf	3,7	;select IRP bank0
  1168  018B  0800               	movf	0,w
  1169  018C  00BB               	movwf	??_main
  1170  018D  0A84               	incf	4,f
  1171  018E  0800               	movf	0,w
  1172  018F  00BC               	movwf	??_main+1
  1173  0190  083B               	movf	??_main,w
  1174  0191  043C               	iorwf	??_main+1,w
  1175  0192  1D03               	btfss	3,2
  1176  0193  2995               	goto	u1211
  1177  0194  2996               	goto	u1210
  1178  0195                     u1211:	
  1179  0195  299D               	goto	l2024
  1180  0196                     u1210:	
  1181  0196                     l2022:	
  1182                           
  1183                           ;RASP.c: 158:                 Lcd_Write_Char(' ');
  1184  0196  3020               	movlw	32
  1185  0197  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1186                           
  1187                           ;RASP.c: 159:             }
  1188  019C  29A6               	goto	l112
  1189  019D                     l2024:	
  1190                           
  1191                           ;RASP.c: 161:                 Lcd_Write_Char('0' + obj_array[0]);
  1192  019D  0853               	movf	_obj_array,w
  1193  019E  0084               	movwf	4
  1194  019F  0800               	movf	0,w
  1195  01A0  3E30               	addlw	48
  1196  01A1  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1197  01A6                     l112:	
  1198                           ;RASP.c: 162:             }
  1199                           
  1200                           
  1201                           ;RASP.c: 163:             Lcd_Write_Char('0' + obj_array[1]);
  1202  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1203  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1204  01A8  0853               	movf	_obj_array,w
  1205  01A9  3E02               	addlw	2
  1206  01AA  0084               	movwf	4
  1207  01AB  1383               	bcf	3,7	;select IRP bank0
  1208  01AC  0800               	movf	0,w
  1209  01AD  3E30               	addlw	48
  1210  01AE  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1211                           
  1212                           ;RASP.c: 164:             Lcd_Write_Char('0' + obj_array[2]);
  1213  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1214  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1215  01B5  0853               	movf	_obj_array,w
  1216  01B6  3E04               	addlw	4
  1217  01B7  0084               	movwf	4
  1218  01B8  1383               	bcf	3,7	;select IRP bank0
  1219  01B9  0800               	movf	0,w
  1220  01BA  3E30               	addlw	48
  1221  01BB  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1222  01C0                     l2026:	
  1223                           
  1224                           ;RASP.c: 165:             Lcd_Write_Char(223);
  1225  01C0  30DF               	movlw	223
  1226  01C1  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1227  01C6                     l2028:	
  1228                           
  1229                           ;RASP.c: 166:             Lcd_Write_Char('C');
  1230  01C6  3043               	movlw	67
  1231  01C7  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1232  01CC                     l2030:	
  1233                           
  1234                           ;RASP.c: 168:             Lcd_Set_Cursor(2,10);
  1235  01CC  300A               	movlw	10
  1236  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1237  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1238  01CF  00BB               	movwf	??_main
  1239  01D0  083B               	movf	??_main,w
  1240  01D1  00A0               	movwf	Lcd_Set_Cursor@b
  1241  01D2  3002               	movlw	2
  1242  01D3  120A  118A  2791  120A  118A  	fcall	_Lcd_Set_Cursor
  1243  01D8                     l2032:	
  1244                           
  1245                           ;RASP.c: 169:             Lcd_Write_Char(2);
  1246  01D8  3002               	movlw	2
  1247  01D9  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1248  01DE                     l2034:	
  1249                           
  1250                           ;RASP.c: 170:             obj_array = uint_to_array(temp_obj);
  1251  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1252  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  1253  01E0  0857               	movf	_temp_obj,w
  1254  01E1  120A  118A  2473  120A  118A  	fcall	_uint_to_array
  1255  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1256  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  1257  01E8  00BB               	movwf	??_main
  1258  01E9  083B               	movf	??_main,w
  1259  01EA  00D3               	movwf	_obj_array
  1260  01EB                     l2036:	
  1261                           
  1262                           ;RASP.c: 171:             if (obj_array[0] == 0){
  1263  01EB  0853               	movf	_obj_array,w
  1264  01EC  0084               	movwf	4
  1265  01ED  1383               	bcf	3,7	;select IRP bank0
  1266  01EE  0800               	movf	0,w
  1267  01EF  00BB               	movwf	??_main
  1268  01F0  0A84               	incf	4,f
  1269  01F1  0800               	movf	0,w
  1270  01F2  00BC               	movwf	??_main+1
  1271  01F3  083B               	movf	??_main,w
  1272  01F4  043C               	iorwf	??_main+1,w
  1273  01F5  1D03               	btfss	3,2
  1274  01F6  29F8               	goto	u1221
  1275  01F7  29F9               	goto	u1220
  1276  01F8                     u1221:	
  1277  01F8  2A00               	goto	l2040
  1278  01F9                     u1220:	
  1279  01F9                     l2038:	
  1280                           
  1281                           ;RASP.c: 172:                 Lcd_Write_Char(' ');
  1282  01F9  3020               	movlw	32
  1283  01FA  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1284                           
  1285                           ;RASP.c: 173:             }
  1286  01FF  2A09               	goto	l114
  1287  0200                     l2040:	
  1288                           
  1289                           ;RASP.c: 175:                 Lcd_Write_Char('0' + obj_array[0]);
  1290  0200  0853               	movf	_obj_array,w
  1291  0201  0084               	movwf	4
  1292  0202  0800               	movf	0,w
  1293  0203  3E30               	addlw	48
  1294  0204  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1295  0209                     l114:	
  1296                           ;RASP.c: 176:             }
  1297                           
  1298                           
  1299                           ;RASP.c: 177:             Lcd_Write_Char('0' + obj_array[1]);
  1300  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1301  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1302  020B  0853               	movf	_obj_array,w
  1303  020C  3E02               	addlw	2
  1304  020D  0084               	movwf	4
  1305  020E  1383               	bcf	3,7	;select IRP bank0
  1306  020F  0800               	movf	0,w
  1307  0210  3E30               	addlw	48
  1308  0211  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1309                           
  1310                           ;RASP.c: 178:             Lcd_Write_Char('0' + obj_array[2]);
  1311  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1312  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1313  0218  0853               	movf	_obj_array,w
  1314  0219  3E04               	addlw	4
  1315  021A  0084               	movwf	4
  1316  021B  1383               	bcf	3,7	;select IRP bank0
  1317  021C  0800               	movf	0,w
  1318  021D  3E30               	addlw	48
  1319  021E  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1320  0223                     l2042:	
  1321                           
  1322                           ;RASP.c: 179:             Lcd_Write_Char(223);
  1323  0223  30DF               	movlw	223
  1324  0224  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1325  0229                     l2044:	
  1326                           
  1327                           ;RASP.c: 180:             Lcd_Write_Char('C');
  1328  0229  3043               	movlw	67
  1329  022A  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1330  022F                     l2046:	
  1331                           
  1332                           ;RASP.c: 183:         _delay((unsigned long)((2000)*(4000000/4000.0)));
  1333  022F  300B               	movlw	11
  1334  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1336  0232  00BD               	movwf	??_main+2
  1337  0233  3026               	movlw	38
  1338  0234  00BC               	movwf	??_main+1
  1339  0235  305D               	movlw	93
  1340  0236  00BB               	movwf	??_main
  1341  0237                     u1257:	
  1342  0237  0BBB               	decfsz	??_main,f
  1343  0238  2A37               	goto	u1257
  1344  0239  0BBC               	decfsz	??_main+1,f
  1345  023A  2A37               	goto	u1257
  1346  023B  0BBD               	decfsz	??_main+2,f
  1347  023C  2A37               	goto	u1257
  1348  023D                     l2048:	
  1349                           
  1350                           ;RASP.c: 184:         Lcd_Clear();
  1351  023D  120A  118A  27D5  120A  118A  	fcall	_Lcd_Clear
  1352  0242                     l2050:	
  1353                           
  1354                           ;RASP.c: 186:             char ade_u = distancia_ade%10;
  1355  0242  300A               	movlw	10
  1356  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1358  0245  00A0               	movwf	___awmod@divisor
  1359  0246  3000               	movlw	0
  1360  0247  00A1               	movwf	___awmod@divisor+1
  1361  0248  085C               	movf	_distancia_ade,w
  1362  0249  00BB               	movwf	??_main
  1363  024A  01BC               	clrf	??_main+1
  1364  024B  083B               	movf	??_main,w
  1365  024C  00A2               	movwf	___awmod@dividend
  1366  024D  083C               	movf	??_main+1,w
  1367  024E  00A3               	movwf	___awmod@dividend+1
  1368  024F  120A  118A  25DF  120A  118A  	fcall	___awmod
  1369  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1370  0255  1303               	bcf	3,6	;RP1=0, select bank0
  1371  0256  0820               	movf	?___awmod,w
  1372  0257  00BD               	movwf	??_main+2
  1373  0258  083D               	movf	??_main+2,w
  1374  0259  00C6               	movwf	main@ade_u
  1375  025A                     l2052:	
  1376                           
  1377                           ;RASP.c: 187:             char ade_d = distancia_ade/10;
  1378  025A  300A               	movlw	10
  1379  025B  00A4               	movwf	___awdiv@divisor
  1380  025C  3000               	movlw	0
  1381  025D  00A5               	movwf	___awdiv@divisor+1
  1382  025E  085C               	movf	_distancia_ade,w
  1383  025F  00BB               	movwf	??_main
  1384  0260  01BC               	clrf	??_main+1
  1385  0261  083B               	movf	??_main,w
  1386  0262  00A6               	movwf	___awdiv@dividend
  1387  0263  083C               	movf	??_main+1,w
  1388  0264  00A7               	movwf	___awdiv@dividend+1
  1389  0265  120A  118A  2576  120A  118A  	fcall	___awdiv
  1390  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1391  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1392  026C  0824               	movf	?___awdiv,w
  1393  026D  00BD               	movwf	??_main+2
  1394  026E  083D               	movf	??_main+2,w
  1395  026F  00C7               	movwf	main@ade_d
  1396  0270                     l2054:	
  1397                           
  1398                           ;RASP.c: 189:             Lcd_Set_Cursor(1,1);
  1399  0270  01A0               	clrf	Lcd_Set_Cursor@b
  1400  0271  0AA0               	incf	Lcd_Set_Cursor@b,f
  1401  0272  3001               	movlw	1
  1402  0273  120A  118A  2791  120A  118A  	fcall	_Lcd_Set_Cursor
  1403  0278                     l2056:	
  1404                           
  1405                           ;RASP.c: 190:             Lcd_Write_String("Adelante: ");
  1406  0278  3020               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1407  0279  120A  118A  276B  120A  118A  	fcall	_Lcd_Write_String
  1408  027E                     l2058:	
  1409                           
  1410                           ;RASP.c: 191:             Lcd_Write_Char(ade_d + '0');
  1411  027E  1283               	bcf	3,5	;RP0=0, select bank0
  1412  027F  1303               	bcf	3,6	;RP1=0, select bank0
  1413  0280  0847               	movf	main@ade_d,w
  1414  0281  3E30               	addlw	48
  1415  0282  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1416  0287                     l2060:	
  1417                           
  1418                           ;RASP.c: 192:             Lcd_Write_Char(ade_u + '0');
  1419  0287  1283               	bcf	3,5	;RP0=0, select bank0
  1420  0288  1303               	bcf	3,6	;RP1=0, select bank0
  1421  0289  0846               	movf	main@ade_u,w
  1422  028A  3E30               	addlw	48
  1423  028B  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1424  0290                     l2062:	
  1425                           
  1426                           ;RASP.c: 193:             Lcd_Write_String(" cm");
  1427  0290  303D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1428  0291  120A  118A  276B  120A  118A  	fcall	_Lcd_Write_String
  1429  0296                     l2064:	
  1430                           
  1431                           ;RASP.c: 195:             char atr_u = distancia_atr%10;
  1432  0296  300A               	movlw	10
  1433  0297  1283               	bcf	3,5	;RP0=0, select bank0
  1434  0298  1303               	bcf	3,6	;RP1=0, select bank0
  1435  0299  00A0               	movwf	___awmod@divisor
  1436  029A  3000               	movlw	0
  1437  029B  00A1               	movwf	___awmod@divisor+1
  1438  029C  085B               	movf	_distancia_atr,w
  1439  029D  00BB               	movwf	??_main
  1440  029E  01BC               	clrf	??_main+1
  1441  029F  083B               	movf	??_main,w
  1442  02A0  00A2               	movwf	___awmod@dividend
  1443  02A1  083C               	movf	??_main+1,w
  1444  02A2  00A3               	movwf	___awmod@dividend+1
  1445  02A3  120A  118A  25DF  120A  118A  	fcall	___awmod
  1446  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  1447  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  1448  02AA  0820               	movf	?___awmod,w
  1449  02AB  00BD               	movwf	??_main+2
  1450  02AC  083D               	movf	??_main+2,w
  1451  02AD  00C8               	movwf	main@atr_u
  1452  02AE                     l2066:	
  1453                           
  1454                           ;RASP.c: 196:             char atr_d = distancia_atr/10;
  1455  02AE  300A               	movlw	10
  1456  02AF  00A4               	movwf	___awdiv@divisor
  1457  02B0  3000               	movlw	0
  1458  02B1  00A5               	movwf	___awdiv@divisor+1
  1459  02B2  085B               	movf	_distancia_atr,w
  1460  02B3  00BB               	movwf	??_main
  1461  02B4  01BC               	clrf	??_main+1
  1462  02B5  083B               	movf	??_main,w
  1463  02B6  00A6               	movwf	___awdiv@dividend
  1464  02B7  083C               	movf	??_main+1,w
  1465  02B8  00A7               	movwf	___awdiv@dividend+1
  1466  02B9  120A  118A  2576  120A  118A  	fcall	___awdiv
  1467  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  1468  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  1469  02C0  0824               	movf	?___awdiv,w
  1470  02C1  00BD               	movwf	??_main+2
  1471  02C2  083D               	movf	??_main+2,w
  1472  02C3  00C9               	movwf	main@atr_d
  1473  02C4                     l2068:	
  1474                           
  1475                           ;RASP.c: 198:             Lcd_Set_Cursor(2,1);
  1476  02C4  01A0               	clrf	Lcd_Set_Cursor@b
  1477  02C5  0AA0               	incf	Lcd_Set_Cursor@b,f
  1478  02C6  3002               	movlw	2
  1479  02C7  120A  118A  2791  120A  118A  	fcall	_Lcd_Set_Cursor
  1480  02CC                     l2070:	
  1481                           
  1482                           ;RASP.c: 199:             Lcd_Write_String("Atras: ");
  1483  02CC  3035               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1484  02CD  120A  118A  276B  120A  118A  	fcall	_Lcd_Write_String
  1485  02D2                     l2072:	
  1486                           
  1487                           ;RASP.c: 200:             Lcd_Write_Char(atr_d + '0');
  1488  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1489  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1490  02D4  0849               	movf	main@atr_d,w
  1491  02D5  3E30               	addlw	48
  1492  02D6  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1493  02DB                     l2074:	
  1494                           
  1495                           ;RASP.c: 201:             Lcd_Write_Char(atr_u + '0');
  1496  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1497  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1498  02DD  0848               	movf	main@atr_u,w
  1499  02DE  3E30               	addlw	48
  1500  02DF  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1501  02E4                     l2076:	
  1502                           
  1503                           ;RASP.c: 202:             Lcd_Write_String(" cm");
  1504  02E4  303D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1505  02E5  120A  118A  276B  120A  118A  	fcall	_Lcd_Write_String
  1506  02EA                     l2078:	
  1507                           
  1508                           ;RASP.c: 204:         _delay((unsigned long)((2000)*(4000000/4000.0)));
  1509  02EA  300B               	movlw	11
  1510  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  1511  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  1512  02ED  00BD               	movwf	??_main+2
  1513  02EE  3026               	movlw	38
  1514  02EF  00BC               	movwf	??_main+1
  1515  02F0  305D               	movlw	93
  1516  02F1  00BB               	movwf	??_main
  1517  02F2                     u1267:	
  1518  02F2  0BBB               	decfsz	??_main,f
  1519  02F3  2AF2               	goto	u1267
  1520  02F4  0BBC               	decfsz	??_main+1,f
  1521  02F5  2AF2               	goto	u1267
  1522  02F6  0BBD               	decfsz	??_main+2,f
  1523  02F7  2AF2               	goto	u1267
  1524  02F8                     l2080:	
  1525                           
  1526                           ;RASP.c: 205:         Lcd_Clear();
  1527  02F8  120A  118A  27D5  120A  118A  	fcall	_Lcd_Clear
  1528  02FD                     l2082:	
  1529                           
  1530                           ;RASP.c: 207:             char pos_u = posicion%10;
  1531  02FD  300A               	movlw	10
  1532  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  1533  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  1534  0300  00A0               	movwf	___awmod@divisor
  1535  0301  3000               	movlw	0
  1536  0302  00A1               	movwf	___awmod@divisor+1
  1537  0303  0859               	movf	_posicion,w
  1538  0304  00BB               	movwf	??_main
  1539  0305  01BC               	clrf	??_main+1
  1540  0306  083B               	movf	??_main,w
  1541  0307  00A2               	movwf	___awmod@dividend
  1542  0308  083C               	movf	??_main+1,w
  1543  0309  00A3               	movwf	___awmod@dividend+1
  1544  030A  120A  118A  25DF  120A  118A  	fcall	___awmod
  1545  030F  1283               	bcf	3,5	;RP0=0, select bank0
  1546  0310  1303               	bcf	3,6	;RP1=0, select bank0
  1547  0311  0820               	movf	?___awmod,w
  1548  0312  00BD               	movwf	??_main+2
  1549  0313  083D               	movf	??_main+2,w
  1550  0314  00CA               	movwf	main@pos_u
  1551  0315                     l2084:	
  1552                           
  1553                           ;RASP.c: 208:             char pos_d = posicion/10;
  1554  0315  300A               	movlw	10
  1555  0316  00A4               	movwf	___awdiv@divisor
  1556  0317  3000               	movlw	0
  1557  0318  00A5               	movwf	___awdiv@divisor+1
  1558  0319  0859               	movf	_posicion,w
  1559  031A  00BB               	movwf	??_main
  1560  031B  01BC               	clrf	??_main+1
  1561  031C  083B               	movf	??_main,w
  1562  031D  00A6               	movwf	___awdiv@dividend
  1563  031E  083C               	movf	??_main+1,w
  1564  031F  00A7               	movwf	___awdiv@dividend+1
  1565  0320  120A  118A  2576  120A  118A  	fcall	___awdiv
  1566  0325  1283               	bcf	3,5	;RP0=0, select bank0
  1567  0326  1303               	bcf	3,6	;RP1=0, select bank0
  1568  0327  0824               	movf	?___awdiv,w
  1569  0328  00BD               	movwf	??_main+2
  1570  0329  083D               	movf	??_main+2,w
  1571  032A  00CB               	movwf	main@pos_d
  1572  032B                     l2086:	
  1573                           
  1574                           ;RASP.c: 209:             char pos_c = posicion/100;
  1575  032B  3064               	movlw	100
  1576  032C  00A4               	movwf	___awdiv@divisor
  1577  032D  3000               	movlw	0
  1578  032E  00A5               	movwf	___awdiv@divisor+1
  1579  032F  0859               	movf	_posicion,w
  1580  0330  00BB               	movwf	??_main
  1581  0331  01BC               	clrf	??_main+1
  1582  0332  083B               	movf	??_main,w
  1583  0333  00A6               	movwf	___awdiv@dividend
  1584  0334  083C               	movf	??_main+1,w
  1585  0335  00A7               	movwf	___awdiv@dividend+1
  1586  0336  120A  118A  2576  120A  118A  	fcall	___awdiv
  1587  033B  1283               	bcf	3,5	;RP0=0, select bank0
  1588  033C  1303               	bcf	3,6	;RP1=0, select bank0
  1589  033D  0824               	movf	?___awdiv,w
  1590  033E  00BD               	movwf	??_main+2
  1591  033F  083D               	movf	??_main+2,w
  1592  0340  00CC               	movwf	main@pos_c
  1593  0341                     l2088:	
  1594                           
  1595                           ;RASP.c: 212:             Lcd_Set_Cursor(1,1);
  1596  0341  01A0               	clrf	Lcd_Set_Cursor@b
  1597  0342  0AA0               	incf	Lcd_Set_Cursor@b,f
  1598  0343  3001               	movlw	1
  1599  0344  120A  118A  2791  120A  118A  	fcall	_Lcd_Set_Cursor
  1600                           
  1601                           ;RASP.c: 213:             Lcd_Write_String("Inclinacion: ");
  1602  0349  3012               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1603  034A  120A  118A  276B  120A  118A  	fcall	_Lcd_Write_String
  1604  034F                     l2090:	
  1605                           
  1606                           ;RASP.c: 214:             Lcd_Set_Cursor(2,6);
  1607  034F  3006               	movlw	6
  1608  0350  1283               	bcf	3,5	;RP0=0, select bank0
  1609  0351  1303               	bcf	3,6	;RP1=0, select bank0
  1610  0352  00BB               	movwf	??_main
  1611  0353  083B               	movf	??_main,w
  1612  0354  00A0               	movwf	Lcd_Set_Cursor@b
  1613  0355  3002               	movlw	2
  1614  0356  120A  118A  2791  120A  118A  	fcall	_Lcd_Set_Cursor
  1615  035B                     l2092:	
  1616                           
  1617                           ;RASP.c: 215:             if(posicion >100){
  1618  035B  3065               	movlw	101
  1619  035C  1283               	bcf	3,5	;RP0=0, select bank0
  1620  035D  1303               	bcf	3,6	;RP1=0, select bank0
  1621  035E  0259               	subwf	_posicion,w
  1622  035F  1C03               	skipc
  1623  0360  2B62               	goto	u1231
  1624  0361  2B63               	goto	u1230
  1625  0362                     u1231:	
  1626  0362  2B6A               	goto	l115
  1627  0363                     u1230:	
  1628  0363                     l2094:	
  1629                           
  1630                           ;RASP.c: 216:                 Lcd_Write_Char(pos_c + '0');
  1631  0363  084C               	movf	main@pos_c,w
  1632  0364  3E30               	addlw	48
  1633  0365  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1634  036A                     l115:	
  1635                           ;RASP.c: 217:             }
  1636                           
  1637                           
  1638                           ;RASP.c: 218:             Lcd_Write_Char(pos_d + '0');
  1639  036A  1283               	bcf	3,5	;RP0=0, select bank0
  1640  036B  1303               	bcf	3,6	;RP1=0, select bank0
  1641  036C  084B               	movf	main@pos_d,w
  1642  036D  3E30               	addlw	48
  1643  036E  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1644                           
  1645                           ;RASP.c: 219:             Lcd_Write_Char(pos_u + '0');
  1646  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1647  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1648  0375  084A               	movf	main@pos_u,w
  1649  0376  3E30               	addlw	48
  1650  0377  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1651                           
  1652                           ;RASP.c: 220:             Lcd_Write_Char(223);
  1653  037C  30DF               	movlw	223
  1654  037D  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  1655  0382                     l2096:	
  1656                           
  1657                           ;RASP.c: 222:         _delay((unsigned long)((2000)*(4000000/4000.0)));
  1658  0382  300B               	movlw	11
  1659  0383  1283               	bcf	3,5	;RP0=0, select bank0
  1660  0384  1303               	bcf	3,6	;RP1=0, select bank0
  1661  0385  00BD               	movwf	??_main+2
  1662  0386  3026               	movlw	38
  1663  0387  00BC               	movwf	??_main+1
  1664  0388  305D               	movlw	93
  1665  0389  00BB               	movwf	??_main
  1666  038A                     u1277:	
  1667  038A  0BBB               	decfsz	??_main,f
  1668  038B  2B8A               	goto	u1277
  1669  038C  0BBC               	decfsz	??_main+1,f
  1670  038D  2B8A               	goto	u1277
  1671  038E  0BBD               	decfsz	??_main+2,f
  1672  038F  2B8A               	goto	u1277
  1673  0390                     l2098:	
  1674                           
  1675                           ;RASP.c: 223:         Lcd_Clear();
  1676  0390  120A  118A  27D5  120A  118A  	fcall	_Lcd_Clear
  1677  0395  2824               	goto	l1966
  1678  0396  120A  118A  280C   	ljmp	start
  1679  0399                     __end_of_main:	
  1680                           
  1681                           	psect	text1
  1682  0473                     __ptext1:	
  1683 ;; *************** function _uint_to_array *****************
  1684 ;; Defined at:
  1685 ;;		line 366 in file "RASP.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  numero          1    wreg     unsigned char 
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  numero          1   26[BANK0 ] unsigned char 
  1690 ;;  resultado       6   20[BANK0 ] unsigned int [3]
  1691 ;;  centenas        1   19[BANK0 ] unsigned char 
  1692 ;;  decenas         1   18[BANK0 ] unsigned char 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      PTR unsigned int 
  1695 ;; Registers used:
  1696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1702 ;;      Params:         0       0       0       0       0
  1703 ;;      Locals:         0       9       0       0       0
  1704 ;;      Temps:          0       6       0       0       0
  1705 ;;      Totals:         0      15       0       0       0
  1706 ;;Total ram usage:       15 bytes
  1707 ;; Hardware stack levels used:    1
  1708 ;; Hardware stack levels required when called:    4
  1709 ;; This function calls:
  1710 ;;		___awdiv
  1711 ;;		___wmul
  1712 ;; This function is called by:
  1713 ;;		_main
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           
  1718                           ;psect for function _uint_to_array
  1719  0473                     _uint_to_array:	
  1720                           
  1721                           ;incstack = 0
  1722                           ; Regs used in _uint_to_array: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1723                           ;uint_to_array@numero stored from wreg
  1724  0473  1283               	bcf	3,5	;RP0=0, select bank0
  1725  0474  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0475  00BA               	movwf	uint_to_array@numero
  1727  0476                     l1910:	
  1728                           
  1729                           ;RASP.c: 367:     uint16_t resultado[3] = {0,0,0};
  1730  0476  3034               	movlw	uint_to_array@resultado& (0+255)
  1731  0477  0084               	movwf	4
  1732  0478  3006               	movlw	6
  1733  0479  00FF               	movwf	btemp+1
  1734  047A                     u1110:	
  1735  047A  1383               	bcf	3,7	;select IRP bank0
  1736  047B  0180               	clrf	0
  1737  047C  0A84               	incf	4,f
  1738  047D  0BFF               	decfsz	btemp+1,f
  1739  047E  2C7A               	goto	u1110
  1740  047F                     l1912:	
  1741                           
  1742                           ;RASP.c: 368:     resultado[0] = numero/100;
  1743  047F  3064               	movlw	100
  1744  0480  00A4               	movwf	___awdiv@divisor
  1745  0481  3000               	movlw	0
  1746  0482  00A5               	movwf	___awdiv@divisor+1
  1747  0483  083A               	movf	uint_to_array@numero,w
  1748  0484  00AC               	movwf	??_uint_to_array
  1749  0485  01AD               	clrf	??_uint_to_array+1
  1750  0486  082C               	movf	??_uint_to_array,w
  1751  0487  00A6               	movwf	___awdiv@dividend
  1752  0488  082D               	movf	??_uint_to_array+1,w
  1753  0489  00A7               	movwf	___awdiv@dividend+1
  1754  048A  120A  118A  2576  120A  118A  	fcall	___awdiv
  1755  048F  1283               	bcf	3,5	;RP0=0, select bank0
  1756  0490  1303               	bcf	3,6	;RP1=0, select bank0
  1757  0491  0825               	movf	?___awdiv+1,w
  1758  0492  00B5               	movwf	uint_to_array@resultado+1
  1759  0493  0824               	movf	?___awdiv,w
  1760  0494  00B4               	movwf	uint_to_array@resultado
  1761  0495                     l1914:	
  1762                           
  1763                           ;RASP.c: 369:     uint8_t centenas = resultado[0];
  1764  0495  0834               	movf	uint_to_array@resultado,w
  1765  0496  00AC               	movwf	??_uint_to_array
  1766  0497  082C               	movf	??_uint_to_array,w
  1767  0498  00B3               	movwf	uint_to_array@centenas
  1768  0499                     l1916:	
  1769                           
  1770                           ;RASP.c: 370:     resultado[1] = (numero - (centenas *100))/10;
  1771  0499  300A               	movlw	10
  1772  049A  00A4               	movwf	___awdiv@divisor
  1773  049B  3000               	movlw	0
  1774  049C  00A5               	movwf	___awdiv@divisor+1
  1775  049D  0833               	movf	uint_to_array@centenas,w
  1776  049E  00AC               	movwf	??_uint_to_array
  1777  049F  01AD               	clrf	??_uint_to_array+1
  1778  04A0  082C               	movf	??_uint_to_array,w
  1779  04A1  00A0               	movwf	___wmul@multiplier
  1780  04A2  082D               	movf	??_uint_to_array+1,w
  1781  04A3  00A1               	movwf	___wmul@multiplier+1
  1782  04A4  309C               	movlw	156
  1783  04A5  00A2               	movwf	___wmul@multiplicand
  1784  04A6  30FF               	movlw	255
  1785  04A7  00A3               	movwf	___wmul@multiplicand+1
  1786  04A8  120A  118A  2744  120A  118A  	fcall	___wmul
  1787  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  1788  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  1789  04AF  083A               	movf	uint_to_array@numero,w
  1790  04B0  0720               	addwf	?___wmul,w
  1791  04B1  00A6               	movwf	___awdiv@dividend
  1792  04B2  0821               	movf	?___wmul+1,w
  1793  04B3  1803               	skipnc
  1794  04B4  0A21               	incf	?___wmul+1,w
  1795  04B5  00A7               	movwf	___awdiv@dividend+1
  1796  04B6  120A  118A  2576  120A  118A  	fcall	___awdiv
  1797  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  1798  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  1799  04BD  0825               	movf	?___awdiv+1,w
  1800  04BE  00B7               	movwf	uint_to_array@resultado+3
  1801  04BF  0824               	movf	?___awdiv,w
  1802  04C0  00B6               	movwf	uint_to_array@resultado+2
  1803  04C1                     l1918:	
  1804                           
  1805                           ;RASP.c: 371:     uint8_t decenas = resultado[1];
  1806  04C1  0836               	movf	uint_to_array@resultado+2,w
  1807  04C2  00AC               	movwf	??_uint_to_array
  1808  04C3  082C               	movf	??_uint_to_array,w
  1809  04C4  00B2               	movwf	uint_to_array@decenas
  1810  04C5                     l1920:	
  1811                           
  1812                           ;RASP.c: 372:     resultado[2] = numero -(centenas*100+decenas*10);
  1813  04C5  0833               	movf	uint_to_array@centenas,w
  1814  04C6  00AC               	movwf	??_uint_to_array
  1815  04C7  01AD               	clrf	??_uint_to_array+1
  1816  04C8  082C               	movf	??_uint_to_array,w
  1817  04C9  00A0               	movwf	___wmul@multiplier
  1818  04CA  082D               	movf	??_uint_to_array+1,w
  1819  04CB  00A1               	movwf	___wmul@multiplier+1
  1820  04CC  309C               	movlw	156
  1821  04CD  00A2               	movwf	___wmul@multiplicand
  1822  04CE  30FF               	movlw	255
  1823  04CF  00A3               	movwf	___wmul@multiplicand+1
  1824  04D0  120A  118A  2744  120A  118A  	fcall	___wmul
  1825  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  1826  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  1827  04D7  083A               	movf	uint_to_array@numero,w
  1828  04D8  0720               	addwf	?___wmul,w
  1829  04D9  00AE               	movwf	??_uint_to_array+2
  1830  04DA  0821               	movf	?___wmul+1,w
  1831  04DB  1803               	skipnc
  1832  04DC  0A21               	incf	?___wmul+1,w
  1833  04DD  00AF               	movwf	??_uint_to_array+3
  1834  04DE  0832               	movf	uint_to_array@decenas,w
  1835  04DF  00B0               	movwf	??_uint_to_array+4
  1836  04E0  01B1               	clrf	??_uint_to_array+5
  1837  04E1  0830               	movf	??_uint_to_array+4,w
  1838  04E2  00A0               	movwf	___wmul@multiplier
  1839  04E3  0831               	movf	??_uint_to_array+5,w
  1840  04E4  00A1               	movwf	___wmul@multiplier+1
  1841  04E5  30F6               	movlw	246
  1842  04E6  00A2               	movwf	___wmul@multiplicand
  1843  04E7  30FF               	movlw	255
  1844  04E8  00A3               	movwf	___wmul@multiplicand+1
  1845  04E9  120A  118A  2744  120A  118A  	fcall	___wmul
  1846  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  1847  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  1848  04F0  0820               	movf	?___wmul,w
  1849  04F1  072E               	addwf	??_uint_to_array+2,w
  1850  04F2  00B8               	movwf	uint_to_array@resultado+4
  1851  04F3  0821               	movf	?___wmul+1,w
  1852  04F4  1803               	skipnc
  1853  04F5  0A21               	incf	?___wmul+1,w
  1854  04F6  072F               	addwf	??_uint_to_array+3,w
  1855  04F7  00B9               	movwf	uint_to_array@resultado+5
  1856  04F8                     l1922:	
  1857                           
  1858                           ;RASP.c: 373:     return(resultado);
  1859  04F8  3034               	movlw	(low (uint_to_array@resultado| 0))& (0+255)
  1860  04F9                     l164:	
  1861  04F9  0008               	return
  1862  04FA                     __end_of_uint_to_array:	
  1863                           
  1864                           	psect	text2
  1865  0744                     __ptext2:	
  1866 ;; *************** function ___wmul *****************
  1867 ;; Defined at:
  1868 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1871 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;  product         2    4[COMMON] unsigned int 
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  2    0[BANK0 ] unsigned int 
  1876 ;; Registers used:
  1877 ;;		wreg, status,2, status,0
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1883 ;;      Params:         0       4       0       0       0
  1884 ;;      Locals:         2       0       0       0       0
  1885 ;;      Temps:          0       0       0       0       0
  1886 ;;      Totals:         2       4       0       0       0
  1887 ;;Total ram usage:        6 bytes
  1888 ;; Hardware stack levels used:    1
  1889 ;; Hardware stack levels required when called:    3
  1890 ;; This function calls:
  1891 ;;		Nothing
  1892 ;; This function is called by:
  1893 ;;		_uint_to_array
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           
  1898                           ;psect for function ___wmul
  1899  0744                     ___wmul:	
  1900  0744                     l1794:	
  1901                           ;incstack = 0
  1902                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1903                           
  1904  0744  01F4               	clrf	___wmul@product
  1905  0745  01F5               	clrf	___wmul@product+1
  1906  0746                     l1796:	
  1907  0746  1283               	bcf	3,5	;RP0=0, select bank0
  1908  0747  1303               	bcf	3,6	;RP1=0, select bank0
  1909  0748  1C20               	btfss	___wmul@multiplier,0
  1910  0749  2F4B               	goto	u941
  1911  074A  2F4C               	goto	u940
  1912  074B                     u941:	
  1913  074B  2F52               	goto	l284
  1914  074C                     u940:	
  1915  074C                     l1798:	
  1916  074C  0822               	movf	___wmul@multiplicand,w
  1917  074D  07F4               	addwf	___wmul@product,f
  1918  074E  1803               	skipnc
  1919  074F  0AF5               	incf	___wmul@product+1,f
  1920  0750  0823               	movf	___wmul@multiplicand+1,w
  1921  0751  07F5               	addwf	___wmul@product+1,f
  1922  0752                     l284:	
  1923  0752  3001               	movlw	1
  1924  0753                     u955:	
  1925  0753  1003               	clrc
  1926  0754  0DA2               	rlf	___wmul@multiplicand,f
  1927  0755  0DA3               	rlf	___wmul@multiplicand+1,f
  1928  0756  3EFF               	addlw	-1
  1929  0757  1D03               	skipz
  1930  0758  2F53               	goto	u955
  1931  0759                     l1800:	
  1932  0759  3001               	movlw	1
  1933  075A                     u965:	
  1934  075A  1003               	clrc
  1935  075B  0CA1               	rrf	___wmul@multiplier+1,f
  1936  075C  0CA0               	rrf	___wmul@multiplier,f
  1937  075D  3EFF               	addlw	-1
  1938  075E  1D03               	skipz
  1939  075F  2F5A               	goto	u965
  1940  0760                     l1802:	
  1941  0760  0820               	movf	___wmul@multiplier,w
  1942  0761  0421               	iorwf	___wmul@multiplier+1,w
  1943  0762  1D03               	btfss	3,2
  1944  0763  2F65               	goto	u971
  1945  0764  2F66               	goto	u970
  1946  0765                     u971:	
  1947  0765  2F46               	goto	l1796
  1948  0766                     u970:	
  1949  0766                     l1804:	
  1950  0766  0875               	movf	___wmul@product+1,w
  1951  0767  00A1               	movwf	?___wmul+1
  1952  0768  0874               	movf	___wmul@product,w
  1953  0769  00A0               	movwf	?___wmul
  1954  076A                     l286:	
  1955  076A  0008               	return
  1956  076B                     __end_of___wmul:	
  1957                           
  1958                           	psect	text3
  1959  0576                     __ptext3:	
  1960 ;; *************** function ___awdiv *****************
  1961 ;; Defined at:
  1962 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;  divisor         2    4[BANK0 ] int 
  1965 ;;  dividend        2    6[BANK0 ] int 
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;  quotient        2   10[BANK0 ] int 
  1968 ;;  sign            1    9[BANK0 ] unsigned char 
  1969 ;;  counter         1    8[BANK0 ] unsigned char 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  2    4[BANK0 ] int 
  1972 ;; Registers used:
  1973 ;;		wreg, status,2, status,0
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1979 ;;      Params:         0       4       0       0       0
  1980 ;;      Locals:         0       4       0       0       0
  1981 ;;      Temps:          1       0       0       0       0
  1982 ;;      Totals:         1       8       0       0       0
  1983 ;;Total ram usage:        9 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:    3
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_main
  1990 ;;		_uint_to_array
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           
  1995                           ;psect for function ___awdiv
  1996  0576                     ___awdiv:	
  1997  0576                     l1808:	
  1998                           ;incstack = 0
  1999                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2000                           
  2001  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2002  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2003  0578  01A9               	clrf	___awdiv@sign
  2004  0579                     l1810:	
  2005  0579  1FA5               	btfss	___awdiv@divisor+1,7
  2006  057A  2D7C               	goto	u981
  2007  057B  2D7D               	goto	u980
  2008  057C                     u981:	
  2009  057C  2D84               	goto	l1816
  2010  057D                     u980:	
  2011  057D                     l1812:	
  2012  057D  09A4               	comf	___awdiv@divisor,f
  2013  057E  09A5               	comf	___awdiv@divisor+1,f
  2014  057F  0AA4               	incf	___awdiv@divisor,f
  2015  0580  1903               	skipnz
  2016  0581  0AA5               	incf	___awdiv@divisor+1,f
  2017  0582                     l1814:	
  2018  0582  01A9               	clrf	___awdiv@sign
  2019  0583  0AA9               	incf	___awdiv@sign,f
  2020  0584                     l1816:	
  2021  0584  1FA7               	btfss	___awdiv@dividend+1,7
  2022  0585  2D87               	goto	u991
  2023  0586  2D88               	goto	u990
  2024  0587                     u991:	
  2025  0587  2D91               	goto	l1822
  2026  0588                     u990:	
  2027  0588                     l1818:	
  2028  0588  09A6               	comf	___awdiv@dividend,f
  2029  0589  09A7               	comf	___awdiv@dividend+1,f
  2030  058A  0AA6               	incf	___awdiv@dividend,f
  2031  058B  1903               	skipnz
  2032  058C  0AA7               	incf	___awdiv@dividend+1,f
  2033  058D                     l1820:	
  2034  058D  3001               	movlw	1
  2035  058E  00F6               	movwf	??___awdiv
  2036  058F  0876               	movf	??___awdiv,w
  2037  0590  06A9               	xorwf	___awdiv@sign,f
  2038  0591                     l1822:	
  2039  0591  01AA               	clrf	___awdiv@quotient
  2040  0592  01AB               	clrf	___awdiv@quotient+1
  2041  0593                     l1824:	
  2042  0593  0824               	movf	___awdiv@divisor,w
  2043  0594  0425               	iorwf	___awdiv@divisor+1,w
  2044  0595  1903               	btfsc	3,2
  2045  0596  2D98               	goto	u1001
  2046  0597  2D99               	goto	u1000
  2047  0598                     u1001:	
  2048  0598  2DD0               	goto	l1844
  2049  0599                     u1000:	
  2050  0599                     l1826:	
  2051  0599  01A8               	clrf	___awdiv@counter
  2052  059A  0AA8               	incf	___awdiv@counter,f
  2053  059B  2DA7               	goto	l1832
  2054  059C                     l1828:	
  2055  059C  3001               	movlw	1
  2056  059D                     u1015:	
  2057  059D  1003               	clrc
  2058  059E  0DA4               	rlf	___awdiv@divisor,f
  2059  059F  0DA5               	rlf	___awdiv@divisor+1,f
  2060  05A0  3EFF               	addlw	-1
  2061  05A1  1D03               	skipz
  2062  05A2  2D9D               	goto	u1015
  2063  05A3                     l1830:	
  2064  05A3  3001               	movlw	1
  2065  05A4  00F6               	movwf	??___awdiv
  2066  05A5  0876               	movf	??___awdiv,w
  2067  05A6  07A8               	addwf	___awdiv@counter,f
  2068  05A7                     l1832:	
  2069  05A7  1FA5               	btfss	___awdiv@divisor+1,7
  2070  05A8  2DAA               	goto	u1021
  2071  05A9  2DAB               	goto	u1020
  2072  05AA                     u1021:	
  2073  05AA  2D9C               	goto	l1828
  2074  05AB                     u1020:	
  2075  05AB                     l1834:	
  2076  05AB  3001               	movlw	1
  2077  05AC                     u1035:	
  2078  05AC  1003               	clrc
  2079  05AD  0DAA               	rlf	___awdiv@quotient,f
  2080  05AE  0DAB               	rlf	___awdiv@quotient+1,f
  2081  05AF  3EFF               	addlw	-1
  2082  05B0  1D03               	skipz
  2083  05B1  2DAC               	goto	u1035
  2084  05B2  0825               	movf	___awdiv@divisor+1,w
  2085  05B3  0227               	subwf	___awdiv@dividend+1,w
  2086  05B4  1D03               	skipz
  2087  05B5  2DB8               	goto	u1045
  2088  05B6  0824               	movf	___awdiv@divisor,w
  2089  05B7  0226               	subwf	___awdiv@dividend,w
  2090  05B8                     u1045:	
  2091  05B8  1C03               	skipc
  2092  05B9  2DBB               	goto	u1041
  2093  05BA  2DBC               	goto	u1040
  2094  05BB                     u1041:	
  2095  05BB  2DC3               	goto	l1840
  2096  05BC                     u1040:	
  2097  05BC                     l1836:	
  2098  05BC  0824               	movf	___awdiv@divisor,w
  2099  05BD  02A6               	subwf	___awdiv@dividend,f
  2100  05BE  0825               	movf	___awdiv@divisor+1,w
  2101  05BF  1C03               	skipc
  2102  05C0  03A7               	decf	___awdiv@dividend+1,f
  2103  05C1  02A7               	subwf	___awdiv@dividend+1,f
  2104  05C2                     l1838:	
  2105  05C2  142A               	bsf	___awdiv@quotient,0
  2106  05C3                     l1840:	
  2107  05C3  3001               	movlw	1
  2108  05C4                     u1055:	
  2109  05C4  1003               	clrc
  2110  05C5  0CA5               	rrf	___awdiv@divisor+1,f
  2111  05C6  0CA4               	rrf	___awdiv@divisor,f
  2112  05C7  3EFF               	addlw	-1
  2113  05C8  1D03               	skipz
  2114  05C9  2DC4               	goto	u1055
  2115  05CA                     l1842:	
  2116  05CA  3001               	movlw	1
  2117  05CB  02A8               	subwf	___awdiv@counter,f
  2118  05CC  1D03               	btfss	3,2
  2119  05CD  2DCF               	goto	u1061
  2120  05CE  2DD0               	goto	u1060
  2121  05CF                     u1061:	
  2122  05CF  2DAB               	goto	l1834
  2123  05D0                     u1060:	
  2124  05D0                     l1844:	
  2125  05D0  0829               	movf	___awdiv@sign,w
  2126  05D1  1903               	btfsc	3,2
  2127  05D2  2DD4               	goto	u1071
  2128  05D3  2DD5               	goto	u1070
  2129  05D4                     u1071:	
  2130  05D4  2DDA               	goto	l1848
  2131  05D5                     u1070:	
  2132  05D5                     l1846:	
  2133  05D5  09AA               	comf	___awdiv@quotient,f
  2134  05D6  09AB               	comf	___awdiv@quotient+1,f
  2135  05D7  0AAA               	incf	___awdiv@quotient,f
  2136  05D8  1903               	skipnz
  2137  05D9  0AAB               	incf	___awdiv@quotient+1,f
  2138  05DA                     l1848:	
  2139  05DA  082B               	movf	___awdiv@quotient+1,w
  2140  05DB  00A5               	movwf	?___awdiv+1
  2141  05DC  082A               	movf	___awdiv@quotient,w
  2142  05DD  00A4               	movwf	?___awdiv
  2143  05DE                     l437:	
  2144  05DE  0008               	return
  2145  05DF                     __end_of___awdiv:	
  2146                           
  2147                           	psect	text4
  2148  06D3                     __ptext4:	
  2149 ;; *************** function _config *****************
  2150 ;; Defined at:
  2151 ;;		line 229 in file "RASP.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;		None
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;		None
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2165 ;;      Params:         0       0       0       0       0
  2166 ;;      Locals:         0       0       0       0       0
  2167 ;;      Temps:          0       0       0       0       0
  2168 ;;      Totals:         0       0       0       0       0
  2169 ;;Total ram usage:        0 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:    5
  2172 ;; This function calls:
  2173 ;;		_Lcd_Clear
  2174 ;;		_Lcd_Init
  2175 ;;		_oscillator
  2176 ;;		_spiInit
  2177 ;; This function is called by:
  2178 ;;		_main
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           
  2183                           ;psect for function _config
  2184  06D3                     _config:	
  2185  06D3                     l1852:	
  2186                           ;incstack = 0
  2187                           ; Regs used in _config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2188                           
  2189                           
  2190                           ;RASP.c: 230:     oscillator(6);
  2191  06D3  3006               	movlw	6
  2192  06D4  120A  118A  263A  120A  118A  	fcall	_oscillator
  2193  06D9                     l1854:	
  2194                           
  2195                           ;RASP.c: 231:     PORTD = 0;
  2196  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  2197  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  2198  06DB  0188               	clrf	8	;volatile
  2199  06DC                     l1856:	
  2200                           
  2201                           ;RASP.c: 232:     TRISD = 0;
  2202  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  2203  06DD  1303               	bcf	3,6	;RP1=0, select bank1
  2204  06DE  0188               	clrf	8	;volatile
  2205  06DF                     l1858:	
  2206                           
  2207                           ;RASP.c: 233:     PORTA = 0;
  2208  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  2209  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  2210  06E1  0185               	clrf	5	;volatile
  2211  06E2                     l1860:	
  2212                           
  2213                           ;RASP.c: 234:     TRISA = 0;
  2214  06E2  1683               	bsf	3,5	;RP0=1, select bank1
  2215  06E3  1303               	bcf	3,6	;RP1=0, select bank1
  2216  06E4  0185               	clrf	5	;volatile
  2217  06E5                     l1862:	
  2218                           
  2219                           ;RASP.c: 235:     ANSEL = 0;
  2220  06E5  1683               	bsf	3,5	;RP0=1, select bank3
  2221  06E6  1703               	bsf	3,6	;RP1=1, select bank3
  2222  06E7  0188               	clrf	8	;volatile
  2223  06E8                     l1864:	
  2224                           
  2225                           ;RASP.c: 236:     PORTB = 0x00;
  2226  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  2227  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  2228  06EA  0186               	clrf	6	;volatile
  2229  06EB                     l1866:	
  2230                           
  2231                           ;RASP.c: 237:     TRISB = 0b11111111;
  2232  06EB  30FF               	movlw	255
  2233  06EC  1683               	bsf	3,5	;RP0=1, select bank1
  2234  06ED  1303               	bcf	3,6	;RP1=0, select bank1
  2235  06EE  0086               	movwf	6	;volatile
  2236  06EF                     l1868:	
  2237                           
  2238                           ;RASP.c: 238:     ANSELH = 0x00;
  2239  06EF  1683               	bsf	3,5	;RP0=1, select bank3
  2240  06F0  1703               	bsf	3,6	;RP1=1, select bank3
  2241  06F1  0189               	clrf	9	;volatile
  2242  06F2                     l1870:	
  2243                           
  2244                           ;RASP.c: 239:     WPUB = 0b11111111;
  2245  06F2  30FF               	movlw	255
  2246  06F3  1683               	bsf	3,5	;RP0=1, select bank1
  2247  06F4  1303               	bcf	3,6	;RP1=0, select bank1
  2248  06F5  0095               	movwf	21	;volatile
  2249  06F6                     l1872:	
  2250                           
  2251                           ;RASP.c: 240:     OPTION_REGbits.nRBPU = 0;
  2252  06F6  1381               	bcf	1,7	;volatile
  2253  06F7                     l1874:	
  2254                           
  2255                           ;RASP.c: 241:     IOCB = 0x03;
  2256  06F7  3003               	movlw	3
  2257  06F8  0096               	movwf	22	;volatile
  2258  06F9                     l1876:	
  2259                           
  2260                           ;RASP.c: 242:     spiInit(SPI_SLAVE_SS_DIS, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, 
      +                          SPI_IDLE_2_ACTIVE);
  2261  06F9  01F4               	clrf	spiInit@sDataSample
  2262  06FA  01F5               	clrf	spiInit@sClockIdle
  2263  06FB  01F6               	clrf	spiInit@sTransmitEdge
  2264  06FC  3025               	movlw	37
  2265  06FD  120A  118A  27B7  120A  118A  	fcall	_spiInit
  2266  0702                     l1878:	
  2267                           
  2268                           ;RASP.c: 243:     INTCONbits.GIE = 1;
  2269  0702  178B               	bsf	11,7	;volatile
  2270  0703                     l1880:	
  2271                           
  2272                           ;RASP.c: 244:     INTCONbits.PEIE = 1;
  2273  0703  170B               	bsf	11,6	;volatile
  2274  0704                     l1882:	
  2275                           
  2276                           ;RASP.c: 245:     PIE1bits.SSPIE = 1;
  2277  0704  1683               	bsf	3,5	;RP0=1, select bank1
  2278  0705  1303               	bcf	3,6	;RP1=0, select bank1
  2279  0706  158C               	bsf	12,3	;volatile
  2280  0707                     l1884:	
  2281                           
  2282                           ;RASP.c: 246:     PIR1bits.SSPIF = 0;
  2283  0707  1283               	bcf	3,5	;RP0=0, select bank0
  2284  0708  1303               	bcf	3,6	;RP1=0, select bank0
  2285  0709  118C               	bcf	12,3	;volatile
  2286  070A                     l1886:	
  2287                           
  2288                           ;RASP.c: 247:     Lcd_Init();
  2289  070A  120A  118A  24FA  120A  118A  	fcall	_Lcd_Init
  2290  070F                     l1888:	
  2291                           
  2292                           ;RASP.c: 248:     Lcd_Clear();
  2293  070F  120A  118A  27D5  120A  118A  	fcall	_Lcd_Clear
  2294  0714                     l121:	
  2295  0714  0008               	return
  2296  0715                     __end_of_config:	
  2297                           
  2298                           	psect	text5
  2299  07B7                     __ptext5:	
  2300 ;; *************** function _spiInit *****************
  2301 ;; Defined at:
  2302 ;;		line 14 in file "SPI.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;  sType           1    wreg     enum E1292
  2305 ;;  sDataSample     1    4[COMMON] enum E1300
  2306 ;;  sClockIdle      1    5[COMMON] enum E1304
  2307 ;;  sTransmitEdg    1    6[COMMON] enum E1308
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;  sType           1    0[BANK0 ] enum E1292
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      void 
  2312 ;; Registers used:
  2313 ;;		wreg, status,2, status,0
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2319 ;;      Params:         3       0       0       0       0
  2320 ;;      Locals:         0       1       0       0       0
  2321 ;;      Temps:          0       0       0       0       0
  2322 ;;      Totals:         3       1       0       0       0
  2323 ;;Total ram usage:        4 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:    3
  2326 ;; This function calls:
  2327 ;;		Nothing
  2328 ;; This function is called by:
  2329 ;;		_config
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           
  2334                           ;psect for function _spiInit
  2335  07B7                     _spiInit:	
  2336                           
  2337                           ;incstack = 0
  2338                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2339                           ;spiInit@sType stored from wreg
  2340  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  2341  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  2342  07B9  00A0               	movwf	spiInit@sType
  2343  07BA                     l1760:	
  2344                           
  2345                           ;SPI.c: 14: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 15: {;SPI.c: 16:     TRISC5 = 0;
  2346  07BA  1683               	bsf	3,5	;RP0=1, select bank1
  2347  07BB  1303               	bcf	3,6	;RP1=0, select bank1
  2348  07BC  1287               	bcf	7,5	;volatile
  2349                           
  2350                           ;SPI.c: 17:     if(sType & 0b00000100)
  2351  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  2352  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  2353  07BF  1D20               	btfss	spiInit@sType,2
  2354  07C0  2FC2               	goto	u931
  2355  07C1  2FC3               	goto	u930
  2356  07C2                     u931:	
  2357  07C2  2FC9               	goto	l1766
  2358  07C3                     u930:	
  2359  07C3                     l1762:	
  2360                           
  2361                           ;SPI.c: 18:     {;SPI.c: 19:         SSPSTAT = sTransmitEdge;
  2362  07C3  0876               	movf	spiInit@sTransmitEdge,w
  2363  07C4  1683               	bsf	3,5	;RP0=1, select bank1
  2364  07C5  1303               	bcf	3,6	;RP1=0, select bank1
  2365  07C6  0094               	movwf	20	;volatile
  2366  07C7                     l1764:	
  2367                           
  2368                           ;SPI.c: 20:         TRISC3 = 1;
  2369  07C7  1587               	bsf	7,3	;volatile
  2370                           
  2371                           ;SPI.c: 21:     }
  2372  07C8  2FCF               	goto	l180
  2373  07C9                     l1766:	
  2374                           
  2375                           ;SPI.c: 23:     {;SPI.c: 24:         SSPSTAT = sDataSample | sTransmitEdge;
  2376  07C9  0874               	movf	spiInit@sDataSample,w
  2377  07CA  0476               	iorwf	spiInit@sTransmitEdge,w
  2378  07CB  1683               	bsf	3,5	;RP0=1, select bank1
  2379  07CC  1303               	bcf	3,6	;RP1=0, select bank1
  2380  07CD  0094               	movwf	20	;volatile
  2381  07CE                     l1768:	
  2382                           
  2383                           ;SPI.c: 25:         TRISC3 = 0;
  2384  07CE  1187               	bcf	7,3	;volatile
  2385  07CF                     l180:	
  2386                           ;SPI.c: 26:     }
  2387                           
  2388                           
  2389                           ;SPI.c: 28:     SSPCON = sType | sClockIdle;
  2390  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  2391  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  2392  07D1  0820               	movf	spiInit@sType,w
  2393  07D2  0475               	iorwf	spiInit@sClockIdle,w
  2394  07D3  0094               	movwf	20	;volatile
  2395  07D4                     l181:	
  2396  07D4  0008               	return
  2397  07D5                     __end_of_spiInit:	
  2398                           
  2399                           	psect	text6
  2400  063A                     __ptext6:	
  2401 ;; *************** function _oscillator *****************
  2402 ;; Defined at:
  2403 ;;		line 252 in file "RASP.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  a               1    wreg     unsigned char 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  a               1    6[COMMON] unsigned char 
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  1    wreg      void 
  2410 ;; Registers used:
  2411 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2417 ;;      Params:         0       0       0       0       0
  2418 ;;      Locals:         1       0       0       0       0
  2419 ;;      Temps:          2       0       0       0       0
  2420 ;;      Totals:         3       0       0       0       0
  2421 ;;Total ram usage:        3 bytes
  2422 ;; Hardware stack levels used:    1
  2423 ;; Hardware stack levels required when called:    3
  2424 ;; This function calls:
  2425 ;;		Nothing
  2426 ;; This function is called by:
  2427 ;;		_config
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           
  2432                           ;psect for function _oscillator
  2433  063A                     _oscillator:	
  2434                           
  2435                           ;incstack = 0
  2436                           ; Regs used in _oscillator: [wreg-fsr0h+status,2+status,0]
  2437                           ;oscillator@a stored from wreg
  2438  063A  00F6               	movwf	oscillator@a
  2439  063B                     l1292:	
  2440                           
  2441                           ;RASP.c: 253:     switch(a){
  2442  063B  2E6A               	goto	l1294
  2443  063C                     l125:	
  2444                           ;RASP.c: 254:         case 0:
  2445                           
  2446                           
  2447                           ;RASP.c: 255:             OSCCONbits.IRCF2 = 0;
  2448  063C  1683               	bsf	3,5	;RP0=1, select bank1
  2449  063D  1303               	bcf	3,6	;RP1=0, select bank1
  2450  063E  130F               	bcf	15,6	;volatile
  2451                           
  2452                           ;RASP.c: 256:             OSCCONbits.IRCF1 = 0;
  2453  063F  128F               	bcf	15,5	;volatile
  2454                           
  2455                           ;RASP.c: 257:             OSCCONbits.IRCF0 = 0;
  2456  0640  120F               	bcf	15,4	;volatile
  2457  0641                     l126:	
  2458                           ;RASP.c: 258:         case 1:
  2459                           
  2460                           
  2461                           ;RASP.c: 259:             OSCCONbits.IRCF2 = 0;
  2462  0641  1683               	bsf	3,5	;RP0=1, select bank1
  2463  0642  1303               	bcf	3,6	;RP1=0, select bank1
  2464  0643  130F               	bcf	15,6	;volatile
  2465                           
  2466                           ;RASP.c: 260:             OSCCONbits.IRCF1 = 0;
  2467  0644  128F               	bcf	15,5	;volatile
  2468                           
  2469                           ;RASP.c: 261:             OSCCONbits.IRCF0 = 1;
  2470  0645  160F               	bsf	15,4	;volatile
  2471  0646                     l127:	
  2472                           ;RASP.c: 262:         case 2:
  2473                           
  2474                           
  2475                           ;RASP.c: 263:             OSCCONbits.IRCF2 = 0;
  2476  0646  1683               	bsf	3,5	;RP0=1, select bank1
  2477  0647  1303               	bcf	3,6	;RP1=0, select bank1
  2478  0648  130F               	bcf	15,6	;volatile
  2479                           
  2480                           ;RASP.c: 264:             OSCCONbits.IRCF1 = 1;
  2481  0649  168F               	bsf	15,5	;volatile
  2482                           
  2483                           ;RASP.c: 265:             OSCCONbits.IRCF0 = 0;
  2484  064A  120F               	bcf	15,4	;volatile
  2485  064B                     l128:	
  2486                           ;RASP.c: 266:         case 3:
  2487                           
  2488                           
  2489                           ;RASP.c: 267:             OSCCONbits.IRCF2 = 0;
  2490  064B  1683               	bsf	3,5	;RP0=1, select bank1
  2491  064C  1303               	bcf	3,6	;RP1=0, select bank1
  2492  064D  130F               	bcf	15,6	;volatile
  2493                           
  2494                           ;RASP.c: 268:             OSCCONbits.IRCF1 = 1;
  2495  064E  168F               	bsf	15,5	;volatile
  2496                           
  2497                           ;RASP.c: 269:             OSCCONbits.IRCF0 = 1;
  2498  064F  160F               	bsf	15,4	;volatile
  2499  0650                     l129:	
  2500                           ;RASP.c: 270:         case 4:
  2501                           
  2502                           
  2503                           ;RASP.c: 271:             OSCCONbits.IRCF2 = 1;
  2504  0650  1683               	bsf	3,5	;RP0=1, select bank1
  2505  0651  1303               	bcf	3,6	;RP1=0, select bank1
  2506  0652  170F               	bsf	15,6	;volatile
  2507                           
  2508                           ;RASP.c: 272:             OSCCONbits.IRCF1 = 0;
  2509  0653  128F               	bcf	15,5	;volatile
  2510                           
  2511                           ;RASP.c: 273:             OSCCONbits.IRCF0 = 0;
  2512  0654  120F               	bcf	15,4	;volatile
  2513  0655                     l130:	
  2514                           ;RASP.c: 274:         case 5:
  2515                           
  2516                           
  2517                           ;RASP.c: 275:             OSCCONbits.IRCF2 = 1;
  2518  0655  1683               	bsf	3,5	;RP0=1, select bank1
  2519  0656  1303               	bcf	3,6	;RP1=0, select bank1
  2520  0657  170F               	bsf	15,6	;volatile
  2521                           
  2522                           ;RASP.c: 276:             OSCCONbits.IRCF1 = 0;
  2523  0658  128F               	bcf	15,5	;volatile
  2524                           
  2525                           ;RASP.c: 277:             OSCCONbits.IRCF0 = 1;
  2526  0659  160F               	bsf	15,4	;volatile
  2527  065A                     l131:	
  2528                           ;RASP.c: 278:         case 6:
  2529                           
  2530                           
  2531                           ;RASP.c: 279:             OSCCONbits.IRCF2 = 1;
  2532  065A  1683               	bsf	3,5	;RP0=1, select bank1
  2533  065B  1303               	bcf	3,6	;RP1=0, select bank1
  2534  065C  170F               	bsf	15,6	;volatile
  2535                           
  2536                           ;RASP.c: 280:             OSCCONbits.IRCF1 = 1;
  2537  065D  168F               	bsf	15,5	;volatile
  2538                           
  2539                           ;RASP.c: 281:             OSCCONbits.IRCF0 = 0;
  2540  065E  120F               	bcf	15,4	;volatile
  2541  065F                     l132:	
  2542                           ;RASP.c: 282:         case 7:
  2543                           
  2544                           
  2545                           ;RASP.c: 283:             OSCCONbits.IRCF2 = 1;
  2546  065F  1683               	bsf	3,5	;RP0=1, select bank1
  2547  0660  1303               	bcf	3,6	;RP1=0, select bank1
  2548  0661  170F               	bsf	15,6	;volatile
  2549                           
  2550                           ;RASP.c: 284:             OSCCONbits.IRCF1 = 1;
  2551  0662  168F               	bsf	15,5	;volatile
  2552                           
  2553                           ;RASP.c: 285:             OSCCONbits.IRCF0 = 1;
  2554  0663  160F               	bsf	15,4	;volatile
  2555  0664                     l133:	
  2556                           ;RASP.c: 286:         default:
  2557                           
  2558                           
  2559                           ;RASP.c: 287:             OSCCONbits.IRCF2 = 1;
  2560  0664  1683               	bsf	3,5	;RP0=1, select bank1
  2561  0665  1303               	bcf	3,6	;RP1=0, select bank1
  2562  0666  170F               	bsf	15,6	;volatile
  2563                           
  2564                           ;RASP.c: 288:             OSCCONbits.IRCF1 = 1;
  2565  0667  168F               	bsf	15,5	;volatile
  2566                           
  2567                           ;RASP.c: 289:             OSCCONbits.IRCF0 = 0;
  2568  0668  120F               	bcf	15,4	;volatile
  2569                           
  2570                           ;RASP.c: 290:     }
  2571  0669  2E8C               	goto	l135
  2572  066A                     l1294:	
  2573  066A  0876               	movf	oscillator@a,w
  2574  066B  00F4               	movwf	??_oscillator
  2575  066C  01F5               	clrf	??_oscillator+1
  2576                           
  2577                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2578                           ; Switch size 1, requested type "simple"
  2579                           ; Number of cases is 1, Range of values is 0 to 0
  2580                           ; switch strategies available:
  2581                           ; Name         Instructions Cycles
  2582                           ; simple_byte            4     3 (average)
  2583                           ; direct_byte           11     8 (fixed)
  2584                           ; jumptable            260     6 (fixed)
  2585                           ;	Chosen strategy is simple_byte
  2586  066D  0875               	movf	??_oscillator+1,w
  2587  066E  3A00               	xorlw	0	; case 0
  2588  066F  1903               	skipnz
  2589  0670  2E72               	goto	l2120
  2590  0671  2E64               	goto	l133
  2591  0672                     l2120:	
  2592                           
  2593                           ; Switch size 1, requested type "simple"
  2594                           ; Number of cases is 8, Range of values is 0 to 7
  2595                           ; switch strategies available:
  2596                           ; Name         Instructions Cycles
  2597                           ; simple_byte           25    13 (average)
  2598                           ; direct_byte           32     8 (fixed)
  2599                           ; jumptable            260     6 (fixed)
  2600                           ;	Chosen strategy is simple_byte
  2601  0672  0874               	movf	??_oscillator,w
  2602  0673  3A00               	xorlw	0	; case 0
  2603  0674  1903               	skipnz
  2604  0675  2E3C               	goto	l125
  2605  0676  3A01               	xorlw	1	; case 1
  2606  0677  1903               	skipnz
  2607  0678  2E41               	goto	l126
  2608  0679  3A03               	xorlw	3	; case 2
  2609  067A  1903               	skipnz
  2610  067B  2E46               	goto	l127
  2611  067C  3A01               	xorlw	1	; case 3
  2612  067D  1903               	skipnz
  2613  067E  2E4B               	goto	l128
  2614  067F  3A07               	xorlw	7	; case 4
  2615  0680  1903               	skipnz
  2616  0681  2E50               	goto	l129
  2617  0682  3A01               	xorlw	1	; case 5
  2618  0683  1903               	skipnz
  2619  0684  2E55               	goto	l130
  2620  0685  3A03               	xorlw	3	; case 6
  2621  0686  1903               	skipnz
  2622  0687  2E5A               	goto	l131
  2623  0688  3A01               	xorlw	1	; case 7
  2624  0689  1903               	skipnz
  2625  068A  2E5F               	goto	l132
  2626  068B  2E64               	goto	l133
  2627  068C                     l135:	
  2628  068C  0008               	return
  2629  068D                     __end_of_oscillator:	
  2630                           
  2631                           	psect	text7
  2632  04FA                     __ptext7:	
  2633 ;; *************** function _Lcd_Init *****************
  2634 ;; Defined at:
  2635 ;;		line 293 in file "RASP.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;		None
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2, status,0, pclath, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2649 ;;      Params:         0       0       0       0       0
  2650 ;;      Locals:         0       0       0       0       0
  2651 ;;      Temps:          0       2       0       0       0
  2652 ;;      Totals:         0       2       0       0       0
  2653 ;;Total ram usage:        2 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    4
  2656 ;; This function calls:
  2657 ;;		_Lcd_Cmd
  2658 ;; This function is called by:
  2659 ;;		_config
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           
  2664                           ;psect for function _Lcd_Init
  2665  04FA                     _Lcd_Init:	
  2666  04FA                     l1770:	
  2667                           ;incstack = 0
  2668                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2669                           
  2670                           
  2671                           ;RASP.c: 294:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2672  04FA  301A               	movlw	26
  2673  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  2674  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  2675  04FD  00A1               	movwf	??_Lcd_Init+1
  2676  04FE  30F7               	movlw	247
  2677  04FF  00A0               	movwf	??_Lcd_Init
  2678  0500                     u1287:	
  2679  0500  0BA0               	decfsz	??_Lcd_Init,f
  2680  0501  2D00               	goto	u1287
  2681  0502  0BA1               	decfsz	??_Lcd_Init+1,f
  2682  0503  2D00               	goto	u1287
  2683  0504  2D05               	nop2
  2684  0505                     l1772:	
  2685                           
  2686                           ;RASP.c: 295:     Lcd_Cmd(0x30);
  2687  0505  3030               	movlw	48
  2688  0506  120A  118A  2715  120A  118A  	fcall	_Lcd_Cmd
  2689  050B                     l1774:	
  2690                           
  2691                           ;RASP.c: 296:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2692  050B  3007               	movlw	7
  2693  050C  1283               	bcf	3,5	;RP0=0, select bank0
  2694  050D  1303               	bcf	3,6	;RP1=0, select bank0
  2695  050E  00A1               	movwf	??_Lcd_Init+1
  2696  050F  307C               	movlw	124
  2697  0510  00A0               	movwf	??_Lcd_Init
  2698  0511                     u1297:	
  2699  0511  0BA0               	decfsz	??_Lcd_Init,f
  2700  0512  2D11               	goto	u1297
  2701  0513  0BA1               	decfsz	??_Lcd_Init+1,f
  2702  0514  2D11               	goto	u1297
  2703  0515  0000               	nop
  2704                           
  2705                           ;RASP.c: 297:     Lcd_Cmd(0x30);
  2706  0516  3030               	movlw	48
  2707  0517  120A  118A  2715  120A  118A  	fcall	_Lcd_Cmd
  2708  051C                     l1776:	
  2709                           
  2710                           ;RASP.c: 298:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  2711  051C  3020               	movlw	32
  2712  051D  1283               	bcf	3,5	;RP0=0, select bank0
  2713  051E  1303               	bcf	3,6	;RP1=0, select bank0
  2714  051F  00A0               	movwf	??_Lcd_Init
  2715  0520                     u1307:	
  2716  0520  0BA0               	decfsz	??_Lcd_Init,f
  2717  0521  2D20               	goto	u1307
  2718  0522  0000               	nop
  2719  0523                     l1778:	
  2720                           
  2721                           ;RASP.c: 299:     Lcd_Cmd(0x30);
  2722  0523  3030               	movlw	48
  2723  0524  120A  118A  2715  120A  118A  	fcall	_Lcd_Cmd
  2724                           
  2725                           ;RASP.c: 300:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  2726  0529  3020               	movlw	32
  2727  052A  1283               	bcf	3,5	;RP0=0, select bank0
  2728  052B  1303               	bcf	3,6	;RP1=0, select bank0
  2729  052C  00A0               	movwf	??_Lcd_Init
  2730  052D                     u1317:	
  2731  052D  0BA0               	decfsz	??_Lcd_Init,f
  2732  052E  2D2D               	goto	u1317
  2733  052F  0000               	nop
  2734  0530                     l1780:	
  2735                           
  2736                           ;RASP.c: 301:     Lcd_Cmd(0x38);
  2737  0530  3038               	movlw	56
  2738  0531  120A  118A  2715  120A  118A  	fcall	_Lcd_Cmd
  2739  0536                     l1782:	
  2740                           
  2741                           ;RASP.c: 302:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  2742  0536  3010               	movlw	16
  2743  0537  1283               	bcf	3,5	;RP0=0, select bank0
  2744  0538  1303               	bcf	3,6	;RP1=0, select bank0
  2745  0539  00A0               	movwf	??_Lcd_Init
  2746  053A                     u1327:	
  2747  053A  0BA0               	decfsz	??_Lcd_Init,f
  2748  053B  2D3A               	goto	u1327
  2749  053C  2D3D               	nop2
  2750                           
  2751                           ;RASP.c: 303:     Lcd_Cmd(0x08);
  2752  053D  3008               	movlw	8
  2753  053E  120A  118A  2715  120A  118A  	fcall	_Lcd_Cmd
  2754  0543                     l1784:	
  2755                           
  2756                           ;RASP.c: 304:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  2757  0543  3010               	movlw	16
  2758  0544  1283               	bcf	3,5	;RP0=0, select bank0
  2759  0545  1303               	bcf	3,6	;RP1=0, select bank0
  2760  0546  00A0               	movwf	??_Lcd_Init
  2761  0547                     u1337:	
  2762  0547  0BA0               	decfsz	??_Lcd_Init,f
  2763  0548  2D47               	goto	u1337
  2764  0549  2D4A               	nop2
  2765  054A                     l1786:	
  2766                           
  2767                           ;RASP.c: 305:     Lcd_Cmd(0x01);
  2768  054A  3001               	movlw	1
  2769  054B  120A  118A  2715  120A  118A  	fcall	_Lcd_Cmd
  2770                           
  2771                           ;RASP.c: 306:     _delay((unsigned long)((3)*(4000000/4000.0)));
  2772  0550  3004               	movlw	4
  2773  0551  1283               	bcf	3,5	;RP0=0, select bank0
  2774  0552  1303               	bcf	3,6	;RP1=0, select bank0
  2775  0553  00A1               	movwf	??_Lcd_Init+1
  2776  0554  30E3               	movlw	227
  2777  0555  00A0               	movwf	??_Lcd_Init
  2778  0556                     u1347:	
  2779  0556  0BA0               	decfsz	??_Lcd_Init,f
  2780  0557  2D56               	goto	u1347
  2781  0558  0BA1               	decfsz	??_Lcd_Init+1,f
  2782  0559  2D56               	goto	u1347
  2783  055A  2D5B               	nop2
  2784  055B                     l1788:	
  2785                           
  2786                           ;RASP.c: 307:     Lcd_Cmd(0x06);
  2787  055B  3006               	movlw	6
  2788  055C  120A  118A  2715  120A  118A  	fcall	_Lcd_Cmd
  2789  0561                     l1790:	
  2790                           
  2791                           ;RASP.c: 308:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  2792  0561  3010               	movlw	16
  2793  0562  1283               	bcf	3,5	;RP0=0, select bank0
  2794  0563  1303               	bcf	3,6	;RP1=0, select bank0
  2795  0564  00A0               	movwf	??_Lcd_Init
  2796  0565                     u1357:	
  2797  0565  0BA0               	decfsz	??_Lcd_Init,f
  2798  0566  2D65               	goto	u1357
  2799  0567  2D68               	nop2
  2800                           
  2801                           ;RASP.c: 309:     Lcd_Cmd(0x0C);
  2802  0568  300C               	movlw	12
  2803  0569  120A  118A  2715  120A  118A  	fcall	_Lcd_Cmd
  2804  056E                     l1792:	
  2805                           
  2806                           ;RASP.c: 310:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  2807  056E  3010               	movlw	16
  2808  056F  1283               	bcf	3,5	;RP0=0, select bank0
  2809  0570  1303               	bcf	3,6	;RP1=0, select bank0
  2810  0571  00A0               	movwf	??_Lcd_Init
  2811  0572                     u1367:	
  2812  0572  0BA0               	decfsz	??_Lcd_Init,f
  2813  0573  2D72               	goto	u1367
  2814  0574  2D75               	nop2
  2815  0575                     l138:	
  2816  0575  0008               	return
  2817  0576                     __end_of_Lcd_Init:	
  2818                           
  2819                           	psect	text8
  2820  07D5                     __ptext8:	
  2821 ;; *************** function _Lcd_Clear *****************
  2822 ;; Defined at:
  2823 ;;		line 325 in file "RASP.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;		None
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;		None
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg, status,2, status,0, pclath, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2837 ;;      Params:         0       0       0       0       0
  2838 ;;      Locals:         0       0       0       0       0
  2839 ;;      Temps:          0       2       0       0       0
  2840 ;;      Totals:         0       2       0       0       0
  2841 ;;Total ram usage:        2 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; Hardware stack levels required when called:    4
  2844 ;; This function calls:
  2845 ;;		_Lcd_Cmd
  2846 ;; This function is called by:
  2847 ;;		_main
  2848 ;;		_config
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           
  2853                           ;psect for function _Lcd_Clear
  2854  07D5                     _Lcd_Clear:	
  2855  07D5                     l1756:	
  2856                           ;incstack = 0
  2857                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2858                           
  2859                           
  2860                           ;RASP.c: 327:     Lcd_Cmd(0x00);
  2861  07D5  3000               	movlw	0
  2862  07D6  120A  118A  2715  120A  118A  	fcall	_Lcd_Cmd
  2863                           
  2864                           ;RASP.c: 328:     Lcd_Cmd(0x01);
  2865  07DB  3001               	movlw	1
  2866  07DC  120A  118A  2715  120A  118A  	fcall	_Lcd_Cmd
  2867  07E1                     l1758:	
  2868                           
  2869                           ;RASP.c: 329:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2870  07E1  3006               	movlw	6
  2871  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  2872  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  2873  07E4  00A1               	movwf	??_Lcd_Clear+1
  2874  07E5  302F               	movlw	47
  2875  07E6  00A0               	movwf	??_Lcd_Clear
  2876  07E7                     u1377:	
  2877  07E7  0BA0               	decfsz	??_Lcd_Clear,f
  2878  07E8  2FE7               	goto	u1377
  2879  07E9  0BA1               	decfsz	??_Lcd_Clear+1,f
  2880  07EA  2FE7               	goto	u1377
  2881  07EB  2FEC               	nop2
  2882  07EC                     l144:	
  2883  07EC  0008               	return
  2884  07ED                     __end_of_Lcd_Clear:	
  2885                           
  2886                           	psect	text9
  2887  05DF                     __ptext9:	
  2888 ;; *************** function ___awmod *****************
  2889 ;; Defined at:
  2890 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  divisor         2    0[BANK0 ] int 
  2893 ;;  dividend        2    2[BANK0 ] int 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  sign            1    6[COMMON] unsigned char 
  2896 ;;  counter         1    5[COMMON] unsigned char 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  2    0[BANK0 ] int 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2906 ;;      Params:         0       4       0       0       0
  2907 ;;      Locals:         2       0       0       0       0
  2908 ;;      Temps:          1       0       0       0       0
  2909 ;;      Totals:         3       4       0       0       0
  2910 ;;Total ram usage:        7 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    3
  2913 ;; This function calls:
  2914 ;;		Nothing
  2915 ;; This function is called by:
  2916 ;;		_main
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           
  2921                           ;psect for function ___awmod
  2922  05DF                     ___awmod:	
  2923  05DF                     l1926:	
  2924                           ;incstack = 0
  2925                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2926                           
  2927  05DF  01F6               	clrf	___awmod@sign
  2928  05E0                     l1928:	
  2929  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  2930  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  2931  05E2  1FA3               	btfss	___awmod@dividend+1,7
  2932  05E3  2DE5               	goto	u1121
  2933  05E4  2DE6               	goto	u1120
  2934  05E5                     u1121:	
  2935  05E5  2DED               	goto	l1934
  2936  05E6                     u1120:	
  2937  05E6                     l1930:	
  2938  05E6  09A2               	comf	___awmod@dividend,f
  2939  05E7  09A3               	comf	___awmod@dividend+1,f
  2940  05E8  0AA2               	incf	___awmod@dividend,f
  2941  05E9  1903               	skipnz
  2942  05EA  0AA3               	incf	___awmod@dividend+1,f
  2943  05EB                     l1932:	
  2944  05EB  01F6               	clrf	___awmod@sign
  2945  05EC  0AF6               	incf	___awmod@sign,f
  2946  05ED                     l1934:	
  2947  05ED  1FA1               	btfss	___awmod@divisor+1,7
  2948  05EE  2DF0               	goto	u1131
  2949  05EF  2DF1               	goto	u1130
  2950  05F0                     u1131:	
  2951  05F0  2DF6               	goto	l1938
  2952  05F1                     u1130:	
  2953  05F1                     l1936:	
  2954  05F1  09A0               	comf	___awmod@divisor,f
  2955  05F2  09A1               	comf	___awmod@divisor+1,f
  2956  05F3  0AA0               	incf	___awmod@divisor,f
  2957  05F4  1903               	skipnz
  2958  05F5  0AA1               	incf	___awmod@divisor+1,f
  2959  05F6                     l1938:	
  2960  05F6  0820               	movf	___awmod@divisor,w
  2961  05F7  0421               	iorwf	___awmod@divisor+1,w
  2962  05F8  1903               	btfsc	3,2
  2963  05F9  2DFB               	goto	u1141
  2964  05FA  2DFC               	goto	u1140
  2965  05FB                     u1141:	
  2966  05FB  2E2B               	goto	l1956
  2967  05FC                     u1140:	
  2968  05FC                     l1940:	
  2969  05FC  01F5               	clrf	___awmod@counter
  2970  05FD  0AF5               	incf	___awmod@counter,f
  2971  05FE  2E0A               	goto	l1946
  2972  05FF                     l1942:	
  2973  05FF  3001               	movlw	1
  2974  0600                     u1155:	
  2975  0600  1003               	clrc
  2976  0601  0DA0               	rlf	___awmod@divisor,f
  2977  0602  0DA1               	rlf	___awmod@divisor+1,f
  2978  0603  3EFF               	addlw	-1
  2979  0604  1D03               	skipz
  2980  0605  2E00               	goto	u1155
  2981  0606                     l1944:	
  2982  0606  3001               	movlw	1
  2983  0607  00F4               	movwf	??___awmod
  2984  0608  0874               	movf	??___awmod,w
  2985  0609  07F5               	addwf	___awmod@counter,f
  2986  060A                     l1946:	
  2987  060A  1FA1               	btfss	___awmod@divisor+1,7
  2988  060B  2E0D               	goto	u1161
  2989  060C  2E0E               	goto	u1160
  2990  060D                     u1161:	
  2991  060D  2DFF               	goto	l1942
  2992  060E                     u1160:	
  2993  060E                     l1948:	
  2994  060E  0821               	movf	___awmod@divisor+1,w
  2995  060F  0223               	subwf	___awmod@dividend+1,w
  2996  0610  1D03               	skipz
  2997  0611  2E14               	goto	u1175
  2998  0612  0820               	movf	___awmod@divisor,w
  2999  0613  0222               	subwf	___awmod@dividend,w
  3000  0614                     u1175:	
  3001  0614  1C03               	skipc
  3002  0615  2E17               	goto	u1171
  3003  0616  2E18               	goto	u1170
  3004  0617                     u1171:	
  3005  0617  2E1E               	goto	l1952
  3006  0618                     u1170:	
  3007  0618                     l1950:	
  3008  0618  0820               	movf	___awmod@divisor,w
  3009  0619  02A2               	subwf	___awmod@dividend,f
  3010  061A  0821               	movf	___awmod@divisor+1,w
  3011  061B  1C03               	skipc
  3012  061C  03A3               	decf	___awmod@dividend+1,f
  3013  061D  02A3               	subwf	___awmod@dividend+1,f
  3014  061E                     l1952:	
  3015  061E  3001               	movlw	1
  3016  061F                     u1185:	
  3017  061F  1003               	clrc
  3018  0620  0CA1               	rrf	___awmod@divisor+1,f
  3019  0621  0CA0               	rrf	___awmod@divisor,f
  3020  0622  3EFF               	addlw	-1
  3021  0623  1D03               	skipz
  3022  0624  2E1F               	goto	u1185
  3023  0625                     l1954:	
  3024  0625  3001               	movlw	1
  3025  0626  02F5               	subwf	___awmod@counter,f
  3026  0627  1D03               	btfss	3,2
  3027  0628  2E2A               	goto	u1191
  3028  0629  2E2B               	goto	u1190
  3029  062A                     u1191:	
  3030  062A  2E0E               	goto	l1948
  3031  062B                     u1190:	
  3032  062B                     l1956:	
  3033  062B  0876               	movf	___awmod@sign,w
  3034  062C  1903               	btfsc	3,2
  3035  062D  2E2F               	goto	u1201
  3036  062E  2E30               	goto	u1200
  3037  062F                     u1201:	
  3038  062F  2E35               	goto	l1960
  3039  0630                     u1200:	
  3040  0630                     l1958:	
  3041  0630  09A2               	comf	___awmod@dividend,f
  3042  0631  09A3               	comf	___awmod@dividend+1,f
  3043  0632  0AA2               	incf	___awmod@dividend,f
  3044  0633  1903               	skipnz
  3045  0634  0AA3               	incf	___awmod@dividend+1,f
  3046  0635                     l1960:	
  3047  0635  0823               	movf	___awmod@dividend+1,w
  3048  0636  00A1               	movwf	?___awmod+1
  3049  0637  0822               	movf	___awmod@dividend,w
  3050  0638  00A0               	movwf	?___awmod
  3051  0639                     l450:	
  3052  0639  0008               	return
  3053  063A                     __end_of___awmod:	
  3054                           
  3055                           	psect	text10
  3056  076B                     __ptext10:	
  3057 ;; *************** function _Lcd_Write_String *****************
  3058 ;; Defined at:
  3059 ;;		line 358 in file "RASP.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  a               1    wreg     PTR unsigned char 
  3062 ;;		 -> STR_7(14), STR_6(4), STR_5(8), STR_4(4), 
  3063 ;;		 -> STR_3(11), STR_2(17), STR_1(10), 
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;  a               1    1[BANK0 ] PTR unsigned char 
  3066 ;;		 -> STR_7(14), STR_6(4), STR_5(8), STR_4(4), 
  3067 ;;		 -> STR_3(11), STR_2(17), STR_1(10), 
  3068 ;;  n               1    0[BANK0 ] unsigned char 
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  1    wreg      void 
  3071 ;; Registers used:
  3072 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3078 ;;      Params:         0       0       0       0       0
  3079 ;;      Locals:         0       2       0       0       0
  3080 ;;      Temps:          1       0       0       0       0
  3081 ;;      Totals:         1       2       0       0       0
  3082 ;;Total ram usage:        3 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; Hardware stack levels required when called:    4
  3085 ;; This function calls:
  3086 ;;		_Lcd_Write_Char
  3087 ;; This function is called by:
  3088 ;;		_main
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092                           
  3093                           ;psect for function _Lcd_Write_String
  3094  076B                     _Lcd_Write_String:	
  3095                           
  3096                           ;incstack = 0
  3097                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3098                           ;Lcd_Write_String@a stored from wreg
  3099  076B  1283               	bcf	3,5	;RP0=0, select bank0
  3100  076C  1303               	bcf	3,6	;RP1=0, select bank0
  3101  076D  00A1               	movwf	Lcd_Write_String@a
  3102  076E                     l1902:	
  3103                           
  3104                           ;RASP.c: 358: void Lcd_Write_String(char *a);RASP.c: 359: {;RASP.c: 360:     uint8_t n;;
      +                          RASP.c: 361:     for(n = 0; a[n] != '\0'; n++){
  3105  076E  01A0               	clrf	Lcd_Write_String@n
  3106  076F  2F83               	goto	l1908
  3107  0770                     l1904:	
  3108                           
  3109                           ;RASP.c: 362:         Lcd_Write_Char(a[n]);
  3110  0770  0820               	movf	Lcd_Write_String@n,w
  3111  0771  0721               	addwf	Lcd_Write_String@a,w
  3112  0772  0084               	movwf	4
  3113  0773  120A  118A  268D  120A  118A  	fcall	stringdir
  3114  0778  120A  118A  27ED  120A  118A  	fcall	_Lcd_Write_Char
  3115  077D                     l1906:	
  3116                           
  3117                           ;RASP.c: 363:     }
  3118  077D  3001               	movlw	1
  3119  077E  00F6               	movwf	??_Lcd_Write_String
  3120  077F  0876               	movf	??_Lcd_Write_String,w
  3121  0780  1283               	bcf	3,5	;RP0=0, select bank0
  3122  0781  1303               	bcf	3,6	;RP1=0, select bank0
  3123  0782  07A0               	addwf	Lcd_Write_String@n,f
  3124  0783                     l1908:	
  3125  0783  0820               	movf	Lcd_Write_String@n,w
  3126  0784  0721               	addwf	Lcd_Write_String@a,w
  3127  0785  0084               	movwf	4
  3128  0786  120A  118A  268D  120A  118A  	fcall	stringdir
  3129  078B  3A00               	xorlw	0
  3130  078C  1D03               	skipz
  3131  078D  2F8F               	goto	u1101
  3132  078E  2F90               	goto	u1100
  3133  078F                     u1101:	
  3134  078F  2F70               	goto	l1904
  3135  0790                     u1100:	
  3136  0790                     l159:	
  3137  0790  0008               	return
  3138  0791                     __end_of_Lcd_Write_String:	
  3139                           
  3140                           	psect	text11
  3141  07ED                     __ptext11:	
  3142 ;; *************** function _Lcd_Write_Char *****************
  3143 ;; Defined at:
  3144 ;;		line 348 in file "RASP.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  a               1    wreg     unsigned char 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  a               1    5[COMMON] unsigned char 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		wreg
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3158 ;;      Params:         0       0       0       0       0
  3159 ;;      Locals:         1       0       0       0       0
  3160 ;;      Temps:          1       0       0       0       0
  3161 ;;      Totals:         2       0       0       0       0
  3162 ;;Total ram usage:        2 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; Hardware stack levels required when called:    3
  3165 ;; This function calls:
  3166 ;;		Nothing
  3167 ;; This function is called by:
  3168 ;;		_main
  3169 ;;		_Lcd_Write_String
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           
  3174                           ;psect for function _Lcd_Write_Char
  3175  07ED                     _Lcd_Write_Char:	
  3176                           
  3177                           ;incstack = 0
  3178                           ; Regs used in _Lcd_Write_Char: [wreg]
  3179                           ;Lcd_Write_Char@a stored from wreg
  3180  07ED  00F5               	movwf	Lcd_Write_Char@a
  3181  07EE                     l1748:	
  3182                           
  3183                           ;RASP.c: 348: void Lcd_Write_Char(char a);RASP.c: 349: {;RASP.c: 350:     PORTAbits.RA0 
      +                          = 1;
  3184  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  3185  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  3186  07F0  1405               	bsf	5,0	;volatile
  3187  07F1                     l1750:	
  3188                           
  3189                           ;RASP.c: 352:     PORTD = a;
  3190  07F1  0875               	movf	Lcd_Write_Char@a,w
  3191  07F2  0088               	movwf	8	;volatile
  3192  07F3                     l1752:	
  3193                           
  3194                           ;RASP.c: 353:     PORTAbits.RA1 = 1;
  3195  07F3  1485               	bsf	5,1	;volatile
  3196                           
  3197                           ;RASP.c: 354:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3198  07F4  300D               	movlw	13
  3199  07F5  00F4               	movwf	??_Lcd_Write_Char
  3200  07F6                     u1387:	
  3201  07F6  0BF4               	decfsz	??_Lcd_Write_Char,f
  3202  07F7  2FF6               	goto	u1387
  3203  07F8                     l1754:	
  3204                           
  3205                           ;RASP.c: 355:     PORTAbits.RA1 = 0;
  3206  07F8  1283               	bcf	3,5	;RP0=0, select bank0
  3207  07F9  1303               	bcf	3,6	;RP1=0, select bank0
  3208  07FA  1085               	bcf	5,1	;volatile
  3209  07FB                     l153:	
  3210  07FB  0008               	return
  3211  07FC                     __end_of_Lcd_Write_Char:	
  3212                           
  3213                           	psect	text12
  3214  0791                     __ptext12:	
  3215 ;; *************** function _Lcd_Set_Cursor *****************
  3216 ;; Defined at:
  3217 ;;		line 332 in file "RASP.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;  a               1    wreg     unsigned char 
  3220 ;;  b               1    0[BANK0 ] unsigned char 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  a               1    2[BANK0 ] unsigned char 
  3223 ;;  d               1    3[BANK0 ] unsigned char 
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  1    wreg      void 
  3226 ;; Registers used:
  3227 ;;		wreg, status,2, status,0, pclath, cstack
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3233 ;;      Params:         0       1       0       0       0
  3234 ;;      Locals:         0       2       0       0       0
  3235 ;;      Temps:          0       1       0       0       0
  3236 ;;      Totals:         0       4       0       0       0
  3237 ;;Total ram usage:        4 bytes
  3238 ;; Hardware stack levels used:    1
  3239 ;; Hardware stack levels required when called:    4
  3240 ;; This function calls:
  3241 ;;		_Lcd_Cmd
  3242 ;; This function is called by:
  3243 ;;		_main
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           
  3248                           ;psect for function _Lcd_Set_Cursor
  3249  0791                     _Lcd_Set_Cursor:	
  3250                           
  3251                           ;incstack = 0
  3252                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3253                           ;Lcd_Set_Cursor@a stored from wreg
  3254  0791  1283               	bcf	3,5	;RP0=0, select bank0
  3255  0792  1303               	bcf	3,6	;RP1=0, select bank0
  3256  0793  00A2               	movwf	Lcd_Set_Cursor@a
  3257  0794                     l1890:	
  3258                           
  3259                           ;RASP.c: 332: void Lcd_Set_Cursor(uint8_t a, uint8_t b);RASP.c: 333: {;RASP.c: 334:  uin
      +                          t8_t d;;RASP.c: 335:  if(a == 1)
  3260  0794  0322               	decf	Lcd_Set_Cursor@a,w
  3261  0795  1D03               	btfss	3,2
  3262  0796  2F98               	goto	u1081
  3263  0797  2F99               	goto	u1080
  3264  0798                     u1081:	
  3265  0798  2FA5               	goto	l1896
  3266  0799                     u1080:	
  3267  0799                     l1892:	
  3268                           
  3269                           ;RASP.c: 336:  {;RASP.c: 337:         d = 0x80 + b - 1;
  3270  0799  0820               	movf	Lcd_Set_Cursor@b,w
  3271  079A  3E7F               	addlw	127
  3272  079B  00A1               	movwf	??_Lcd_Set_Cursor
  3273  079C  0821               	movf	??_Lcd_Set_Cursor,w
  3274  079D  00A3               	movwf	Lcd_Set_Cursor@d
  3275  079E                     l1894:	
  3276                           
  3277                           ;RASP.c: 338:   Lcd_Cmd(d);
  3278  079E  0823               	movf	Lcd_Set_Cursor@d,w
  3279  079F  120A  118A  2715  120A  118A  	fcall	_Lcd_Cmd
  3280                           
  3281                           ;RASP.c: 339:  }
  3282  07A4  2FB6               	goto	l150
  3283  07A5                     l1896:	
  3284  07A5  3002               	movlw	2
  3285  07A6  0622               	xorwf	Lcd_Set_Cursor@a,w
  3286  07A7  1D03               	btfss	3,2
  3287  07A8  2FAA               	goto	u1091
  3288  07A9  2FAB               	goto	u1090
  3289  07AA                     u1091:	
  3290  07AA  2FB6               	goto	l150
  3291  07AB                     u1090:	
  3292  07AB                     l1898:	
  3293                           
  3294                           ;RASP.c: 341:  {;RASP.c: 342:   d = 0xC0 + b - 1;
  3295  07AB  0820               	movf	Lcd_Set_Cursor@b,w
  3296  07AC  3EBF               	addlw	191
  3297  07AD  00A1               	movwf	??_Lcd_Set_Cursor
  3298  07AE  0821               	movf	??_Lcd_Set_Cursor,w
  3299  07AF  00A3               	movwf	Lcd_Set_Cursor@d
  3300  07B0                     l1900:	
  3301                           
  3302                           ;RASP.c: 343:   Lcd_Cmd(d);
  3303  07B0  0823               	movf	Lcd_Set_Cursor@d,w
  3304  07B1  120A  118A  2715  120A  118A  	fcall	_Lcd_Cmd
  3305  07B6                     l150:	
  3306  07B6  0008               	return
  3307  07B7                     __end_of_Lcd_Set_Cursor:	
  3308                           
  3309                           	psect	text13
  3310  0715                     __ptext13:	
  3311 ;; *************** function _Lcd_Cmd *****************
  3312 ;; Defined at:
  3313 ;;		line 314 in file "RASP.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;  a               1    wreg     unsigned char 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  a               1    6[COMMON] unsigned char 
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1    wreg      void 
  3320 ;; Registers used:
  3321 ;;		wreg
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3327 ;;      Params:         0       0       0       0       0
  3328 ;;      Locals:         1       0       0       0       0
  3329 ;;      Temps:          2       0       0       0       0
  3330 ;;      Totals:         3       0       0       0       0
  3331 ;;Total ram usage:        3 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    3
  3334 ;; This function calls:
  3335 ;;		Nothing
  3336 ;; This function is called by:
  3337 ;;		_Lcd_Init
  3338 ;;		_Lcd_Clear
  3339 ;;		_Lcd_Set_Cursor
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           
  3344                           ;psect for function _Lcd_Cmd
  3345  0715                     _Lcd_Cmd:	
  3346                           
  3347                           ;incstack = 0
  3348                           ; Regs used in _Lcd_Cmd: [wreg]
  3349                           ;Lcd_Cmd@a stored from wreg
  3350  0715  00F6               	movwf	Lcd_Cmd@a
  3351  0716                     l1272:	
  3352                           
  3353                           ;RASP.c: 315:  PORTAbits.RA0 = 0;
  3354  0716  1283               	bcf	3,5	;RP0=0, select bank0
  3355  0717  1303               	bcf	3,6	;RP1=0, select bank0
  3356  0718  1005               	bcf	5,0	;volatile
  3357  0719                     l1274:	
  3358                           
  3359                           ;RASP.c: 316:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3360  0719  3007               	movlw	7
  3361  071A  00F5               	movwf	??_Lcd_Cmd+1
  3362  071B  307D               	movlw	125
  3363  071C  00F4               	movwf	??_Lcd_Cmd
  3364  071D                     u1397:	
  3365  071D  0BF4               	decfsz	??_Lcd_Cmd,f
  3366  071E  2F1D               	goto	u1397
  3367  071F  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3368  0720  2F1D               	goto	u1397
  3369  0721                     l1276:	
  3370                           
  3371                           ;RASP.c: 317:     PORTAbits.RA1 = 1;
  3372  0721  1283               	bcf	3,5	;RP0=0, select bank0
  3373  0722  1303               	bcf	3,6	;RP1=0, select bank0
  3374  0723  1485               	bsf	5,1	;volatile
  3375                           
  3376                           ;RASP.c: 318:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3377  0724  3007               	movlw	7
  3378  0725  00F5               	movwf	??_Lcd_Cmd+1
  3379  0726  307D               	movlw	125
  3380  0727  00F4               	movwf	??_Lcd_Cmd
  3381  0728                     u1407:	
  3382  0728  0BF4               	decfsz	??_Lcd_Cmd,f
  3383  0729  2F28               	goto	u1407
  3384  072A  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3385  072B  2F28               	goto	u1407
  3386                           
  3387                           ;RASP.c: 319:  PORTD = a;
  3388  072C  0876               	movf	Lcd_Cmd@a,w
  3389  072D  1283               	bcf	3,5	;RP0=0, select bank0
  3390  072E  1303               	bcf	3,6	;RP1=0, select bank0
  3391  072F  0088               	movwf	8	;volatile
  3392                           
  3393                           ;RASP.c: 320:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3394  0730  3007               	movlw	7
  3395  0731  00F5               	movwf	??_Lcd_Cmd+1
  3396  0732  307D               	movlw	125
  3397  0733  00F4               	movwf	??_Lcd_Cmd
  3398  0734                     u1417:	
  3399  0734  0BF4               	decfsz	??_Lcd_Cmd,f
  3400  0735  2F34               	goto	u1417
  3401  0736  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3402  0737  2F34               	goto	u1417
  3403  0738                     l1278:	
  3404                           
  3405                           ;RASP.c: 321:     PORTAbits.RA1 = 0;
  3406  0738  1283               	bcf	3,5	;RP0=0, select bank0
  3407  0739  1303               	bcf	3,6	;RP1=0, select bank0
  3408  073A  1085               	bcf	5,1	;volatile
  3409                           
  3410                           ;RASP.c: 322:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3411  073B  3007               	movlw	7
  3412  073C  00F5               	movwf	??_Lcd_Cmd+1
  3413  073D  307D               	movlw	125
  3414  073E  00F4               	movwf	??_Lcd_Cmd
  3415  073F                     u1427:	
  3416  073F  0BF4               	decfsz	??_Lcd_Cmd,f
  3417  0740  2F3F               	goto	u1427
  3418  0741  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3419  0742  2F3F               	goto	u1427
  3420  0743                     l141:	
  3421  0743  0008               	return
  3422  0744                     __end_of_Lcd_Cmd:	
  3423                           
  3424                           	psect	text14
  3425  0399                     __ptext14:	
  3426 ;; *************** function _isr *****************
  3427 ;; Defined at:
  3428 ;;		line 59 in file "RASP.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;		None
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;		None
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, status,2, status,0, pclath, cstack
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3442 ;;      Params:         0       0       0       0       0
  3443 ;;      Locals:         0       0       0       0       0
  3444 ;;      Temps:          3       0       0       0       0
  3445 ;;      Totals:         3       0       0       0       0
  3446 ;;Total ram usage:        3 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; Hardware stack levels required when called:    2
  3449 ;; This function calls:
  3450 ;;		_spiRead
  3451 ;;		_spiWrite
  3452 ;; This function is called by:
  3453 ;;		Interrupt level 1
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           
  3458                           ;psect for function _isr
  3459  0399                     _isr:	
  3460  0399                     i1l1514:	
  3461                           
  3462                           ;RASP.c: 61:     if (INTCONbits.RBIF == 1){
  3463  0399  1C0B               	btfss	11,0	;volatile
  3464  039A  2B9C               	goto	u76_21
  3465  039B  2B9D               	goto	u76_20
  3466  039C                     u76_21:	
  3467  039C  2BAF               	goto	i1l1524
  3468  039D                     u76_20:	
  3469  039D                     i1l1516:	
  3470                           
  3471                           ;RASP.c: 62:         if (PORTBbits.RB0==0){
  3472  039D  1283               	bcf	3,5	;RP0=0, select bank0
  3473  039E  1303               	bcf	3,6	;RP1=0, select bank0
  3474  039F  1806               	btfsc	6,0	;volatile
  3475  03A0  2BA2               	goto	u77_21
  3476  03A1  2BA3               	goto	u77_20
  3477  03A2                     u77_21:	
  3478  03A2  2BAE               	goto	i1l1522
  3479  03A3                     u77_20:	
  3480  03A3                     i1l1518:	
  3481                           
  3482                           ;RASP.c: 63:             contador1++;
  3483  03A3  3001               	movlw	1
  3484  03A4  00F1               	movwf	??_isr
  3485  03A5  0871               	movf	??_isr,w
  3486  03A6  07F8               	addwf	_contador1,f
  3487                           
  3488                           ;RASP.c: 64:             if(contador1 == 4){
  3489  03A7  3004               	movlw	4
  3490  03A8  0678               	xorwf	_contador1,w
  3491  03A9  1D03               	btfss	3,2
  3492  03AA  2BAC               	goto	u78_21
  3493  03AB  2BAD               	goto	u78_20
  3494  03AC                     u78_21:	
  3495  03AC  2BAE               	goto	i1l1522
  3496  03AD                     u78_20:	
  3497  03AD                     i1l1520:	
  3498                           
  3499                           ;RASP.c: 65:                 contador1 = 0;
  3500  03AD  01F8               	clrf	_contador1
  3501  03AE                     i1l1522:	
  3502                           
  3503                           ;RASP.c: 69:         INTCONbits.RBIF = 0;
  3504  03AE  100B               	bcf	11,0	;volatile
  3505  03AF                     i1l1524:	
  3506                           
  3507                           ;RASP.c: 72:     if (PIR1bits.SSPIF == 1){
  3508  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  3509  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  3510  03B1  1D8C               	btfss	12,3	;volatile
  3511  03B2  2BB4               	goto	u79_21
  3512  03B3  2BB5               	goto	u79_20
  3513  03B4                     u79_21:	
  3514  03B4  2C6C               	goto	i1l105
  3515  03B5                     u79_20:	
  3516  03B5                     i1l1526:	
  3517                           
  3518                           ;RASP.c: 73:         recibir1 = spiRead();
  3519  03B5  120A  158A  27F7  120A  118A  	fcall	_spiRead
  3520  03BA  00F1               	movwf	??_isr
  3521  03BB  0871               	movf	??_isr,w
  3522  03BC  00F7               	movwf	_recibir1
  3523  03BD                     i1l1528:	
  3524                           
  3525                           ;RASP.c: 75:         if(recibir1 == 125){
  3526  03BD  307D               	movlw	125
  3527  03BE  0677               	xorwf	_recibir1,w
  3528  03BF  1D03               	btfss	3,2
  3529  03C0  2BC2               	goto	u80_21
  3530  03C1  2BC3               	goto	u80_20
  3531  03C2                     u80_21:	
  3532  03C2  2BC4               	goto	i1l1532
  3533  03C3                     u80_20:	
  3534  03C3                     i1l1530:	
  3535                           
  3536                           ;RASP.c: 76:             contador = 0;
  3537  03C3  01F9               	clrf	_contador
  3538  03C4                     i1l1532:	
  3539                           
  3540                           ;RASP.c: 79:         if (contador == 1){
  3541  03C4  0379               	decf	_contador,w
  3542  03C5  1D03               	btfss	3,2
  3543  03C6  2BC8               	goto	u81_21
  3544  03C7  2BC9               	goto	u81_20
  3545  03C8                     u81_21:	
  3546  03C8  2BD5               	goto	i1l1538
  3547  03C9                     u81_20:	
  3548  03C9                     i1l1534:	
  3549                           
  3550                           ;RASP.c: 80:             spiWrite(0);
  3551  03C9  3000               	movlw	0
  3552  03CA  120A  158A  27E2  120A  118A  	fcall	_spiWrite
  3553  03CF                     i1l1536:	
  3554                           
  3555                           ;RASP.c: 81:             hora = recibir1;
  3556  03CF  0877               	movf	_recibir1,w
  3557  03D0  00F1               	movwf	??_isr
  3558  03D1  0871               	movf	??_isr,w
  3559  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  3560  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  3561  03D4  00D6               	movwf	_hora
  3562  03D5                     i1l1538:	
  3563                           
  3564                           ;RASP.c: 83:         if (contador == 2){
  3565  03D5  3002               	movlw	2
  3566  03D6  0679               	xorwf	_contador,w
  3567  03D7  1D03               	btfss	3,2
  3568  03D8  2BDA               	goto	u82_21
  3569  03D9  2BDB               	goto	u82_20
  3570  03DA                     u82_21:	
  3571  03DA  2BE7               	goto	i1l1544
  3572  03DB                     u82_20:	
  3573  03DB                     i1l1540:	
  3574                           
  3575                           ;RASP.c: 84:             spiWrite(0);
  3576  03DB  3000               	movlw	0
  3577  03DC  120A  158A  27E2  120A  118A  	fcall	_spiWrite
  3578  03E1                     i1l1542:	
  3579                           
  3580                           ;RASP.c: 85:             minutos = recibir1;
  3581  03E1  0877               	movf	_recibir1,w
  3582  03E2  00F1               	movwf	??_isr
  3583  03E3  0871               	movf	??_isr,w
  3584  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  3585  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  3586  03E6  00D5               	movwf	_minutos
  3587  03E7                     i1l1544:	
  3588                           
  3589                           ;RASP.c: 87:         if (contador == 3){
  3590  03E7  3003               	movlw	3
  3591  03E8  0679               	xorwf	_contador,w
  3592  03E9  1D03               	btfss	3,2
  3593  03EA  2BEC               	goto	u83_21
  3594  03EB  2BED               	goto	u83_20
  3595  03EC                     u83_21:	
  3596  03EC  2BF9               	goto	i1l1550
  3597  03ED                     u83_20:	
  3598  03ED                     i1l1546:	
  3599                           
  3600                           ;RASP.c: 88:             spiWrite(0);
  3601  03ED  3000               	movlw	0
  3602  03EE  120A  158A  27E2  120A  118A  	fcall	_spiWrite
  3603  03F3                     i1l1548:	
  3604                           
  3605                           ;RASP.c: 89:             segundos = recibir1;
  3606  03F3  0877               	movf	_recibir1,w
  3607  03F4  00F1               	movwf	??_isr
  3608  03F5  0871               	movf	??_isr,w
  3609  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  3610  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  3611  03F8  00D4               	movwf	_segundos
  3612  03F9                     i1l1550:	
  3613                           
  3614                           ;RASP.c: 91:         if (contador == 4){
  3615  03F9  3004               	movlw	4
  3616  03FA  0679               	xorwf	_contador,w
  3617  03FB  1D03               	btfss	3,2
  3618  03FC  2BFE               	goto	u84_21
  3619  03FD  2BFF               	goto	u84_20
  3620  03FE                     u84_21:	
  3621  03FE  2C0B               	goto	i1l1556
  3622  03FF                     u84_20:	
  3623  03FF                     i1l1552:	
  3624                           
  3625                           ;RASP.c: 92:             spiWrite(0);
  3626  03FF  3000               	movlw	0
  3627  0400  120A  158A  27E2  120A  118A  	fcall	_spiWrite
  3628  0405                     i1l1554:	
  3629                           
  3630                           ;RASP.c: 93:             temp_amb = recibir1;
  3631  0405  0877               	movf	_recibir1,w
  3632  0406  00F1               	movwf	??_isr
  3633  0407  0871               	movf	??_isr,w
  3634  0408  1283               	bcf	3,5	;RP0=0, select bank0
  3635  0409  1303               	bcf	3,6	;RP1=0, select bank0
  3636  040A  00D8               	movwf	_temp_amb
  3637  040B                     i1l1556:	
  3638                           
  3639                           ;RASP.c: 95:         if (contador == 5){
  3640  040B  3005               	movlw	5
  3641  040C  0679               	xorwf	_contador,w
  3642  040D  1D03               	btfss	3,2
  3643  040E  2C10               	goto	u85_21
  3644  040F  2C11               	goto	u85_20
  3645  0410                     u85_21:	
  3646  0410  2C1D               	goto	i1l1562
  3647  0411                     u85_20:	
  3648  0411                     i1l1558:	
  3649                           
  3650                           ;RASP.c: 96:             spiWrite(0);
  3651  0411  3000               	movlw	0
  3652  0412  120A  158A  27E2  120A  118A  	fcall	_spiWrite
  3653  0417                     i1l1560:	
  3654                           
  3655                           ;RASP.c: 97:             temp_obj = recibir1;
  3656  0417  0877               	movf	_recibir1,w
  3657  0418  00F1               	movwf	??_isr
  3658  0419  0871               	movf	??_isr,w
  3659  041A  1283               	bcf	3,5	;RP0=0, select bank0
  3660  041B  1303               	bcf	3,6	;RP1=0, select bank0
  3661  041C  00D7               	movwf	_temp_obj
  3662  041D                     i1l1562:	
  3663                           
  3664                           ;RASP.c: 99:         if (contador == 6){
  3665  041D  3006               	movlw	6
  3666  041E  0679               	xorwf	_contador,w
  3667  041F  1D03               	btfss	3,2
  3668  0420  2C22               	goto	u86_21
  3669  0421  2C23               	goto	u86_20
  3670  0422                     u86_21:	
  3671  0422  2C2F               	goto	i1l1568
  3672  0423                     u86_20:	
  3673  0423                     i1l1564:	
  3674                           
  3675                           ;RASP.c: 100:             spiWrite(0);
  3676  0423  3000               	movlw	0
  3677  0424  120A  158A  27E2  120A  118A  	fcall	_spiWrite
  3678  0429                     i1l1566:	
  3679                           
  3680                           ;RASP.c: 101:             posicion = recibir1;
  3681  0429  0877               	movf	_recibir1,w
  3682  042A  00F1               	movwf	??_isr
  3683  042B  0871               	movf	??_isr,w
  3684  042C  1283               	bcf	3,5	;RP0=0, select bank0
  3685  042D  1303               	bcf	3,6	;RP1=0, select bank0
  3686  042E  00D9               	movwf	_posicion
  3687  042F                     i1l1568:	
  3688                           
  3689                           ;RASP.c: 103:         if (contador == 7){
  3690  042F  3007               	movlw	7
  3691  0430  0679               	xorwf	_contador,w
  3692  0431  1D03               	btfss	3,2
  3693  0432  2C34               	goto	u87_21
  3694  0433  2C35               	goto	u87_20
  3695  0434                     u87_21:	
  3696  0434  2C41               	goto	i1l1574
  3697  0435                     u87_20:	
  3698  0435                     i1l1570:	
  3699                           
  3700                           ;RASP.c: 104:             spiWrite(0);
  3701  0435  3000               	movlw	0
  3702  0436  120A  158A  27E2  120A  118A  	fcall	_spiWrite
  3703  043B                     i1l1572:	
  3704                           
  3705                           ;RASP.c: 105:             humedad = recibir1;
  3706  043B  0877               	movf	_recibir1,w
  3707  043C  00F1               	movwf	??_isr
  3708  043D  0871               	movf	??_isr,w
  3709  043E  1283               	bcf	3,5	;RP0=0, select bank0
  3710  043F  1303               	bcf	3,6	;RP1=0, select bank0
  3711  0440  00DA               	movwf	_humedad
  3712  0441                     i1l1574:	
  3713                           
  3714                           ;RASP.c: 107:         if (contador == 8){
  3715  0441  3008               	movlw	8
  3716  0442  0679               	xorwf	_contador,w
  3717  0443  1D03               	btfss	3,2
  3718  0444  2C46               	goto	u88_21
  3719  0445  2C47               	goto	u88_20
  3720  0446                     u88_21:	
  3721  0446  2C53               	goto	i1l1580
  3722  0447                     u88_20:	
  3723  0447                     i1l1576:	
  3724                           
  3725                           ;RASP.c: 108:             spiWrite(0);
  3726  0447  3000               	movlw	0
  3727  0448  120A  158A  27E2  120A  118A  	fcall	_spiWrite
  3728  044D                     i1l1578:	
  3729                           
  3730                           ;RASP.c: 109:             distancia_ade = recibir1;
  3731  044D  0877               	movf	_recibir1,w
  3732  044E  00F1               	movwf	??_isr
  3733  044F  0871               	movf	??_isr,w
  3734  0450  1283               	bcf	3,5	;RP0=0, select bank0
  3735  0451  1303               	bcf	3,6	;RP1=0, select bank0
  3736  0452  00DC               	movwf	_distancia_ade
  3737  0453                     i1l1580:	
  3738                           
  3739                           ;RASP.c: 111:         if (contador == 9){
  3740  0453  3009               	movlw	9
  3741  0454  0679               	xorwf	_contador,w
  3742  0455  1D03               	btfss	3,2
  3743  0456  2C58               	goto	u89_21
  3744  0457  2C59               	goto	u89_20
  3745  0458                     u89_21:	
  3746  0458  2C65               	goto	i1l1586
  3747  0459                     u89_20:	
  3748  0459                     i1l1582:	
  3749                           
  3750                           ;RASP.c: 112:             spiWrite(0);
  3751  0459  3000               	movlw	0
  3752  045A  120A  158A  27E2  120A  118A  	fcall	_spiWrite
  3753  045F                     i1l1584:	
  3754                           
  3755                           ;RASP.c: 113:             distancia_atr = recibir1;
  3756  045F  0877               	movf	_recibir1,w
  3757  0460  00F1               	movwf	??_isr
  3758  0461  0871               	movf	??_isr,w
  3759  0462  1283               	bcf	3,5	;RP0=0, select bank0
  3760  0463  1303               	bcf	3,6	;RP1=0, select bank0
  3761  0464  00DB               	movwf	_distancia_atr
  3762  0465                     i1l1586:	
  3763                           
  3764                           ;RASP.c: 115:         PIR1bits.SSPIF = 0;
  3765  0465  1283               	bcf	3,5	;RP0=0, select bank0
  3766  0466  1303               	bcf	3,6	;RP1=0, select bank0
  3767  0467  118C               	bcf	12,3	;volatile
  3768  0468                     i1l1588:	
  3769                           
  3770                           ;RASP.c: 116:         contador ++;
  3771  0468  3001               	movlw	1
  3772  0469  00F1               	movwf	??_isr
  3773  046A  0871               	movf	??_isr,w
  3774  046B  07F9               	addwf	_contador,f
  3775  046C                     i1l105:	
  3776  046C  0873               	movf	??_isr+2,w
  3777  046D  008A               	movwf	10
  3778  046E  0E72               	swapf	(??_isr+1)^(0+4294967168),w
  3779  046F  0083               	movwf	3
  3780  0470  0EFE               	swapf	btemp,f
  3781  0471  0E7E               	swapf	btemp,w
  3782  0472  0009               	retfie
  3783  0473                     __end_of_isr:	
  3784                           
  3785                           	psect	intentry
  3786  0004                     __pintentry:	
  3787                           ;incstack = 0
  3788                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  3789                           
  3790  0004                     interrupt_function:	
  3791  007E                     saved_w	set	btemp
  3792  0004  00FE               	movwf	btemp
  3793  0005  0E03               	swapf	3,w
  3794  0006  00F2               	movwf	??_isr+1
  3795  0007  080A               	movf	10,w
  3796  0008  00F3               	movwf	??_isr+2
  3797  0009  120A  118A  2B99   	ljmp	_isr
  3798                           
  3799                           	psect	text15
  3800  0FE2                     __ptext15:	
  3801 ;; *************** function _spiWrite *****************
  3802 ;; Defined at:
  3803 ;;		line 36 in file "SPI.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;  dat             1    wreg     unsigned char 
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;  dat             1    0[COMMON] unsigned char 
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      void 
  3810 ;; Registers used:
  3811 ;;		wreg
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3817 ;;      Params:         0       0       0       0       0
  3818 ;;      Locals:         1       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0
  3820 ;;      Totals:         1       0       0       0       0
  3821 ;;Total ram usage:        1 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; This function calls:
  3824 ;;		Nothing
  3825 ;; This function is called by:
  3826 ;;		_isr
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           
  3831                           ;psect for function _spiWrite
  3832  0FE2                     _spiWrite:	
  3833                           
  3834                           ;incstack = 0
  3835                           ; Regs used in _spiWrite: [wreg]
  3836                           ;spiWrite@dat stored from wreg
  3837  0FE2  00F0               	movwf	spiWrite@dat
  3838  0FE3                     i1l1400:	
  3839                           
  3840                           ;SPI.c: 36: void spiWrite(char dat);SPI.c: 37: {;SPI.c: 38:     SSPBUF = dat;
  3841  0FE3  0870               	movf	spiWrite@dat,w
  3842  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  3843  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  3844  0FE6  0093               	movwf	19	;volatile
  3845  0FE7                     i1l190:	
  3846  0FE7  0008               	return
  3847  0FE8                     __end_of_spiWrite:	
  3848                           
  3849                           	psect	text16
  3850  0FF7                     __ptext16:	
  3851 ;; *************** function _spiRead *****************
  3852 ;; Defined at:
  3853 ;;		line 49 in file "SPI.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;		None
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;		None
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  1    wreg      unsigned char 
  3860 ;; Registers used:
  3861 ;;		wreg, status,2, status,0, pclath, cstack
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3867 ;;      Params:         0       0       0       0       0
  3868 ;;      Locals:         0       0       0       0       0
  3869 ;;      Temps:          0       0       0       0       0
  3870 ;;      Totals:         0       0       0       0       0
  3871 ;;Total ram usage:        0 bytes
  3872 ;; Hardware stack levels used:    1
  3873 ;; Hardware stack levels required when called:    1
  3874 ;; This function calls:
  3875 ;;		_spiReceiveWait
  3876 ;; This function is called by:
  3877 ;;		_isr
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           
  3882                           ;psect for function _spiRead
  3883  0FF7                     _spiRead:	
  3884  0FF7                     i1l1394:	
  3885                           ;incstack = 0
  3886                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  3887                           
  3888                           
  3889                           ;SPI.c: 51:     spiReceiveWait();
  3890  0FF7  120A  158A  27E8  120A  158A  	fcall	_spiReceiveWait
  3891  0FFC                     i1l1396:	
  3892                           
  3893                           ;SPI.c: 52:     return(SSPBUF);
  3894  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  3895  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  3896  0FFE  0813               	movf	19,w	;volatile
  3897  0FFF                     i1l198:	
  3898  0FFF  0008               	return
  3899  1000                     __end_of_spiRead:	
  3900                           
  3901                           	psect	text17
  3902  0FE8                     __ptext17:	
  3903 ;; *************** function _spiReceiveWait *****************
  3904 ;; Defined at:
  3905 ;;		line 31 in file "SPI.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;		None
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;		None
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  1    wreg      void 
  3912 ;; Registers used:
  3913 ;;		None
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3919 ;;      Params:         0       0       0       0       0
  3920 ;;      Locals:         0       0       0       0       0
  3921 ;;      Temps:          0       0       0       0       0
  3922 ;;      Totals:         0       0       0       0       0
  3923 ;;Total ram usage:        0 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; This function calls:
  3926 ;;		Nothing
  3927 ;; This function is called by:
  3928 ;;		_spiRead
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           
  3933                           ;psect for function _spiReceiveWait
  3934  0FE8                     _spiReceiveWait:	
  3935  0FE8                     i1l1334:	
  3936                           ;incstack = 0
  3937                           ; Regs used in _spiReceiveWait: []
  3938                           
  3939  0FE8                     i1l184:	
  3940                           ;SPI.c: 33:     while ( !SSPSTATbits.BF );
  3941                           
  3942  0FE8  1683               	bsf	3,5	;RP0=1, select bank1
  3943  0FE9  1303               	bcf	3,6	;RP1=0, select bank1
  3944  0FEA  1C14               	btfss	20,0	;volatile
  3945  0FEB  2FED               	goto	u48_21
  3946  0FEC  2FEE               	goto	u48_20
  3947  0FED                     u48_21:	
  3948  0FED  2FE8               	goto	i1l184
  3949  0FEE                     u48_20:	
  3950  0FEE                     i1l187:	
  3951  0FEE  0008               	return
  3952  0FEF                     __end_of_spiReceiveWait:	
  3953  007E                     btemp	set	126	;btemp
  3954  007E                     wtemp0	set	126


Data Sizes:
    Strings     64
    Constant    0
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     45      61
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_7(CODE[14]), STR_6(CODE[4]), STR_5(CODE[8]), STR_4(CODE[4]), 
		 -> STR_3(CODE[11]), STR_2(CODE[17]), STR_1(CODE[10]), 

    sp__uint_to_array	PTR unsigned int  size(1) Largest target is 6
		 -> uint_to_array@resultado(BANK0[6]), 

    obj_array	PTR unsigned int  size(1) Largest target is 6
		 -> NULL(NULL[0]), uint_to_array@resultado(BANK0[6]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _main->___awdiv
    _main->___awmod
    _uint_to_array->___awdiv
    ___awdiv->___wmul
    _config->_oscillator
    _config->_spiInit
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_uint_to_array
    _uint_to_array->___awdiv
    ___awdiv->___wmul
    _config->_Lcd_Clear
    _config->_Lcd_Init

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0    9773
                                             27 BANK0     18    18      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                             _config
                      _uint_to_array
 ---------------------------------------------------------------------------------
 (1) _uint_to_array                                       15    15      0    3313
                                             12 BANK0     15    15      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    2245
                                              6 COMMON     1     1      0
                                              4 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0     522
                          _Lcd_Clear
                           _Lcd_Init
                         _oscillator
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _oscillator                                           3     3      0      22
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      22
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            2     2      0      22
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1693
                                              4 COMMON     3     3      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     413
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1    1024
                                              0 BANK0      4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      22
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0      22
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (6) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
     ___wmul (ARG)
   ___awmod
   _config
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Init
       _Lcd_Cmd
     _oscillator
     _spiInit
   _uint_to_array
     ___awdiv
       ___wmul (ARG)
     ___wmul

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      47       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      3D       5       76.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      47      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat May 02 23:13:24 2020

                        pc 0002                __CFG_CP$OFF 0000                _SSPSTATbits 0094  
             ___awdiv@sign 0029                         fsr 0004        ___wmul@multiplicand 0022  
                      l112 01A6                        l121 0714                        l130 0655  
                      l114 0209                        l131 065A                        l115 036A  
                      l132 065F                        l141 0743                        l133 0664  
                      l125 063C                        l150 07B6                        l126 0641  
                      l135 068C                        l127 0646                        l144 07EC  
                      l128 064B                        l153 07FB                        l129 0650  
                      l138 0575                        l180 07CF                        l164 04F9  
                      l181 07D4                        l159 0790                        l450 0639  
                      l284 0752                        l437 05DE                        l286 076A  
             __CFG_CPD$OFF 0000                        u930 07C3                        u931 07C2  
                      u940 074C                        u941 074B                        u970 0766  
                      u971 0765                        u955 0753                        u980 057D  
                      u981 057C                        u965 075A                        u990 0588  
                      u991 0587                        _isr 0399                        fsr0 0004  
                      indf 0000               ___awmod@sign 0076               __CFG_LVP$OFF 0000  
                     l2000 0124                       l2010 0159                       l2002 0134  
                     l2020 0188                       l2012 0163                       l2004 013D  
                     l2030 01CC                       l2022 0196                       l2014 0169  
                     l2006 0146                       l2120 0672                       l2040 0200  
                     l2032 01D8                       l2024 019D                       l2016 0175  
                     l2008 0154                       l2050 0242                       l2042 0223  
                     l2034 01DE                       l2026 01C0                       l2018 017B  
                     l2060 0287                       l2052 025A                       l2044 0229  
                     l2036 01EB                       l2028 01C6                       l2070 02CC  
                     l2062 0290                       l2054 0270                       l2046 022F  
                     l2038 01F9                       l1272 0716                       l2080 02F8  
                     l2072 02D2                       l2064 0296                       l2056 0278  
                     l2048 023D                       l1274 0719                       l2090 034F  
                     l2082 02FD                       l2074 02DB                       l2066 02AE  
                     l2058 027E                       l1276 0721                       l1292 063B  
                     l2092 035B                       l2084 0315                       l2076 02E4  
                     l2068 02C4                       l1278 0738                       l1294 066A  
                     l2094 0363                       l2086 032B                       l2078 02EA  
                     l1800 0759                       l2096 0382                       l2088 0341  
                     l1810 0579                       l1802 0760                       l2098 0390  
                     l1900 07B0                       l1820 058D                       l1812 057D  
                     l1804 0766                       l1750 07F1                       l1902 076E  
                     l1830 05A3                       l1822 0591                       l1814 0582  
                     l1910 0476                       l1752 07F3                       l1904 0770  
                     l1760 07BA                       l1840 05C3                       l1832 05A7  
                     l1824 0593                       l1816 0584                       l1808 0576  
                     l1920 04C5                       l1912 047F                       l1754 07F8  
                     l1906 077D                       l1930 05E6                       l1770 04FA  
                     l1762 07C3                       l1842 05CA                       l1834 05AB  
                     l1826 0599                       l1818 0588                       l1922 04F8  
                     l1914 0495                       l1748 07EE                       l1908 0783  
                     l1940 05FC                       l1932 05EB                       l1756 07D5  
                     l1780 0530                       l1772 0505                       l1764 07C7  
                     l1860 06E2                       l1852 06D3                       l1836 05BC  
                     l1828 059C                       l1844 05D0                       l1916 0499  
                     l1950 0618                       l1942 05FF                       l1934 05ED  
                     l1926 05DF                       l1758 07E1                       l1790 0561  
                     l1782 0536                       l1774 050B                       l1766 07C9  
                     l1870 06F2                       l1862 06E5                       l1854 06D9  
                     l1846 05D5                       l1838 05C2                       l1918 04C1  
                     l1960 0635                       l1952 061E                       l1944 0606  
                     l1936 05F1                       l1928 05E0                       l1792 056E  
                     l1784 0543                       l1776 051C                       l1768 07CE  
                     l1880 0703                       l1872 06F6                       l1864 06E8  
                     l1856 06DC                       l1848 05DA                       l1890 0794  
                     l1954 0625                       l1946 060A                       l1938 05F6  
                     l1786 054A                       l1778 0523                       l1882 0704  
                     l1874 06F7                       l1866 06EB                       l1858 06DF  
                     l1794 0744                       l1970 0052                       l1892 0799  
                     l1948 060E                       l1956 062B                       l1788 055B  
                     l1884 0707                       l1876 06F9                       l1868 06EF  
                     l1796 0746                       l1980 00B4                       l1972 0068  
                     l1964 001F                       l1894 079E                       l1958 0630  
                     l1886 070A                       l1878 0702                       l1798 074C  
                     l1990 00DE                       l1982 00BD                       l1974 007E  
                     l1966 0024                       l1896 07A5                       l1888 070F  
                     l1992 00E4                       l1984 00C6                       l1976 0094  
                     l1968 003C                       l1898 07AB                       l1994 00ED  
                     l1986 00CC                       l1978 00AA                       l1996 00F6  
                     l1988 00D5                       l1998 010E                       ?_isr 0070  
                     STR_1 06BD                       STR_2 0693                       STR_3 06B2  
                     STR_4 06CF                       STR_5 06C7                       STR_6 06CF  
                     STR_7 06A4                       u1000 0599                       u1001 0598  
                     u1100 0790                       u1020 05AB                       u1101 078F  
                     u1021 05AA                       u1110 047A                       u1015 059D  
                     u1200 0630                       u1120 05E6                       u1040 05BC  
                     u1201 062F                       u1121 05E5                       u1041 05BB  
                     u1130 05F1                       u1210 0196                       u1131 05F0  
                     u1035 05AC                       u1211 0195                       u1140 05FC  
                     u1060 05D0                       u1220 01F9                       u1141 05FB  
                     u1061 05CF                       u1045 05B8                       u1221 01F8  
                     u1070 05D5                       u1230 0363                       u1071 05D4  
                     u1055 05C4                       u1231 0362                       u1080 0799  
                     u1160 060E                       u1081 0798                       u1161 060D  
                     u1090 07AB                       u1170 0618                       u1091 07AA  
                     u1171 0617                       u1155 0600                       u1307 0520  
                     _IOCB 0096                       u1317 052D                       u1190 062B  
                     u1407 0728                       u1191 062A                       u1175 0614  
                     u1327 053A                       u1247 014E                       u1417 0734  
                     u1185 061F                       u1337 0547                       u1257 0237  
                     u1427 073F                       u1347 0556                       u1267 02F2  
                     u1357 0565                       u1277 038A                       u1367 0572  
                     u1287 0500                       u1377 07E7                       u1297 0511  
                     u1387 07F6                       u1397 071D                       _WPUB 0095  
             __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0070                       _main 001F  
                     _hora 0056                       btemp 007E              _uint_to_array 0473  
                     start 000C         ??_Lcd_Write_String 0076              __CFG_IESO$OFF 0000  
          __end_of_Lcd_Cmd 0744                      ??_isr 0071                      ?_main 0070  
          __end_of___awdiv 05DF              __CFG_WDTE$OFF 0000            __end_of___awmod 063A  
                    _ANSEL 0188            ___awdiv@divisor 0024                      i1l105 046C  
                    i1l190 0FE7                      i1l184 0FE8                      i1l187 0FEE  
                    i1l198 0FFF            ___awdiv@counter 0028                      _PORTA 0005  
                    _PORTB 0006                      _PORTD 0008                      u48_20 0FEE  
                    u80_20 03C3                      u48_21 0FED                      u80_21 03C2  
                    u81_20 03C9                      u81_21 03C8    __size_of_Lcd_Set_Cursor 0026  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    u82_20 03DB                      u82_21 03DA                      u83_20 03ED  
                    u83_21 03EC                      u84_20 03FF                      u76_20 039D  
                    u84_21 03FE                      u76_21 039C                      u85_20 0411  
                    u77_20 03A3                      u85_21 0410                      u77_21 03A2  
                    u86_20 0423                      u78_20 03AD                      u86_21 0422  
                    u78_21 03AC                      u87_20 0435                      u79_20 03B5  
                    u87_21 0434                      u79_21 03B4                      u88_20 0447  
                    u88_21 0446                      u89_20 0459                      u89_21 0458  
           __CFG_FCMEN$OFF 0000             __CFG_BOREN$OFF 0000                      pclath 000A  
          __end_of_spiInit 07D5            __end_of_spiRead 1000             ?_uint_to_array 0070  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 0576  
           __CFG_MCLRE$OFF 0000            __initialization 000F               __end_of_main 0399  
                   ??_main 003B         __size_of_Lcd_Clear 0018           ___awdiv@dividend 0026  
                   _ANSELH 0189                     i1l1400 0FE3                     i1l1334 0FE8  
                   i1l1520 03AD                     i1l1530 03C3                     i1l1522 03AE  
                   i1l1514 0399                     i1l1540 03DB                     i1l1532 03C4  
                   i1l1516 039D                     i1l1524 03AF                     i1l1550 03F9  
                   i1l1542 03E1                     i1l1534 03C9                     i1l1526 03B5  
                   i1l1518 03A3                     i1l1560 0417                     i1l1552 03FF  
                   i1l1544 03E7                     i1l1536 03CF                     i1l1528 03BD  
                   i1l1394 0FF7                     i1l1570 0435                     i1l1562 041D  
                   i1l1554 0405                     i1l1546 03ED                     i1l1538 03D5  
                   i1l1396 0FFC                     i1l1580 0453                     i1l1572 043B  
                   i1l1564 0423                     i1l1556 040B                     i1l1548 03F3  
                   i1l1582 0459                     i1l1574 0441                     i1l1566 0429  
                   i1l1558 0411                     i1l1584 045F                     i1l1576 0447  
                   i1l1568 042F                     i1l1586 0465                     i1l1578 044D  
                   i1l1588 0468                  ??_Lcd_Cmd 0074    __size_of_Lcd_Write_Char 000F  
                   _TRISC3 043B                     _TRISC5 043D         uint_to_array@F1385 004D  
                   _SSPCON 0014                     _SSPBUF 0013             __CFG_PWRTE$OFF 0000  
                   ___wmul 0744                  ??___awdiv 0076                  ??___awmod 0074  
                   _config 06D3           ___awdiv@quotient 002A            ___awmod@divisor 0020  
          ___awmod@counter 0075                     saved_w 007E           __end_of_spiWrite 0FE8  
                ??_spiInit 0077                  ??_spiRead 0070            Lcd_Set_Cursor@a 0022  
          Lcd_Set_Cursor@b 0020            Lcd_Set_Cursor@d 0023            ??_uint_to_array 002C  
  __end_of__initialization 001B          __end_of_Lcd_Clear 07ED             __pcstackCOMMON 0070  
           _Lcd_Set_Cursor 0791             _OPTION_REGbits 0081                  ?_Lcd_Init 0070  
               __pbssBANK0 004D                 __pmaintext 001F                    ?___wmul 0020  
               __pintentry 0004                    ?_config 0070    __size_of_spiReceiveWait 0007  
__size_of_Lcd_Write_String 0026     __end_of_Lcd_Set_Cursor 07B7                 ??_Lcd_Init 0020  
                  _SSPSTAT 0094                 __stringtab 068D             _Lcd_Write_Char 07ED  
                  _Lcd_Cmd 0715     uint_to_array@resultado 0034                  ?_spiWrite 0070  
                  ___awdiv 0576                    ___awmod 05DF            __size_of___wmul 0027  
          __size_of_config 0042            ?_Lcd_Set_Cursor 0020                    __ptext1 0473  
                  __ptext2 0744                    __ptext3 0576                    __ptext4 06D3  
                  __ptext5 07B7                    __ptext6 063A                    __ptext7 04FA  
                  __ptext8 07D5                    __ptext9 05DF        uint_to_array@numero 003A  
             __size_of_isr 00DA                    _humedad 005A           ___awmod@dividend 0022  
                  _minutos 0055                    _spiInit 07B7                    _spiRead 0FF7  
              oscillator@a 0076                    clrloop0 0FF0     __end_of_Lcd_Write_Char 07FC  
     end_of_initialization 001B                 _oscillator 063A                 ??_spiWrite 0070  
                _PORTAbits 0005                  _PORTBbits 0006                spiWrite@dat 0070  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0021          Lcd_Write_String@n 0020  
               main@hume_d 0045                 main@hume_u 0044                  _Lcd_Clear 07D5  
           _spiReceiveWait 0FE8             __end_of___wmul 076B           _Lcd_Write_String 076B  
           __end_of_config 0715        start_initialization 000F                __end_of_isr 0473  
        __size_of_Lcd_Init 007C      __end_of_uint_to_array 04FA   __CFG_FOSC$INTRC_NOCLKOUT 0000  
   __end_of_spiReceiveWait 0FEF                ?_oscillator 0070                 ?_Lcd_Clear 0070  
                 ??___wmul 0074                   ??_config 0077            Lcd_Write_Char@a 0075  
              __pbssCOMMON 0077                  ___latbits 0002              __pcstackBANK0 0020  
                 ?_Lcd_Cmd 0070      uint_to_array@centenas 0033            ?_spiReceiveWait 0070  
         ??_Lcd_Set_Cursor 0021                   ?___awdiv 0024                   ?___awmod 0020  
        __size_of_spiWrite 0006                  __pstrings 068D                  _contador1 0078  
                _obj_array 0053                   ?_spiInit 0074                   ?_spiRead 0070  
      __size_of_oscillator 0053       spiInit@sTransmitEdge 0076          interrupt_function 0004  
           ___wmul@product 0074                  clear_ram0 0FEF                   _PIE1bits 008C  
       spiInit@sDataSample 0074                   Lcd_Cmd@a 0076                   _PIR1bits 000C  
              ??_Lcd_Clear 0020                __stringbase 0692          ___wmul@multiplier 0020  
                main@Uhr_d 0043                  main@Uhr_u 0042                  main@ade_d 0047  
                main@ade_u 0046                  main@atr_d 0049                  main@atr_u 0048  
         ??_Lcd_Write_Char 0074                  main@min_d 0041                  main@min_u 0040  
                main@seg_d 003F                  main@seg_u 003E                  main@pos_c 004C  
                main@pos_d 004B                  main@pos_u 004A                   _Lcd_Init 04FA  
 __end_of_Lcd_Write_String 0791           __size_of_Lcd_Cmd 002F           __size_of___awdiv 0069  
         __size_of___awmod 005B         __end_of__stringtab 0693       uint_to_array@decenas 0032  
                 __ptext10 076B                   __ptext11 07ED                   __ptext12 0791  
                 __ptext13 0715                   __ptext14 0399                   __ptext15 0FE2  
                 __ptext16 0FF7                   __ptext17 0FE8           __size_of_spiInit 001E  
         __size_of_spiRead 0009          __CFG_BOR4V$BOR40V 0000                   _contador 0079  
            __size_of_main 037A                   _recibir1 0077                   _segundos 0054  
             ??_oscillator 0074                   _temp_amb 0058                   _temp_obj 0057  
                 _spiWrite 0FE2                   _posicion 0059               spiInit@sType 0020  
        spiInit@sClockIdle 0075                 _INTCONbits 000B         __end_of_oscillator 068D  
                 intlevel1 0000           ??_spiReceiveWait 0070                  stringcode 068D  
               _OSCCONbits 008F     __size_of_uint_to_array 0087                   stringdir 068D  
                 stringtab 068D              _distancia_ade 005C              _distancia_atr 005B  

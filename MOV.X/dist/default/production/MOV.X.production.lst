

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun May 03 23:58:45 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.05
    32                           ; Generated 20/12/2018 GMT
    33                           ; 
    34                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221                           
   222                           	psect	idataBANK0
   223  0675                     __pidataBANK0:	
   224                           
   225                           ;initializer for _contador_m
   226  0675  3401               	retlw	1
   227                           
   228                           ;initializer for _indicador_mov
   229  0676  3401               	retlw	1
   230  0014                     _SSPCON	set	20
   231  0015                     _CCPR1L	set	21
   232  0012                     _T2CONbits	set	18
   233  001B                     _CCPR2L	set	27
   234  0017                     _CCP1CONbits	set	23
   235  001F                     _ADCON0bits	set	31
   236  001E                     _ADRESH	set	30
   237  0009                     _PORTE	set	9
   238  0005                     _PORTA	set	5
   239  0006                     _PORTBbits	set	6
   240  0008                     _PORTD	set	8
   241  0006                     _PORTB	set	6
   242  0013                     _SSPBUF	set	19
   243  0014                     _SSPCONbits	set	20
   244  000C                     _PIR1bits	set	12
   245  0063                     _SSPIF	set	99
   246  005E                     _PEIE	set	94
   247  005F                     _GIE	set	95
   248  0091                     _SSPCON2	set	145
   249  0093                     _SSPADD	set	147
   250  0094                     _SSPSTAT	set	148
   251  008F                     _OSCCONbits	set	143
   252  0092                     _PR2	set	146
   253  0087                     _TRISCbits	set	135
   254  009F                     _ADCON1bits	set	159
   255  0085                     _TRISA	set	133
   256  0089                     _TRISE	set	137
   257  0086                     _TRISB	set	134
   258  0088                     _TRISD	set	136
   259  0094                     _SSPSTATbits	set	148
   260  0463                     _SSPIE	set	1123
   261  043C                     _TRISC4	set	1084
   262  043B                     _TRISC3	set	1083
   263  04A0                     _BF	set	1184
   264  0188                     _ANSEL	set	392
   265  0189                     _ANSELH	set	393
   266                           
   267                           ; #config settings
   268  0000                     
   269                           	psect	cinit
   270  000F                     start_initialization:	
   271  000F                     __initialization:	
   272                           
   273                           ; Initialize objects allocated to BANK0
   274  000F  120A  118A  2675  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   275  0014  00B7               	movwf	__pdataBANK0& (0+127)
   276  0015  120A  118A  2676   	fcall	__pidataBANK0+1	;fetch initializer
   277  0018  00B8               	movwf	(__pdataBANK0+1)& (0+127)
   278                           
   279                           ; Clear objects allocated to BANK0
   280  0019  01AD               	clrf	__pbssBANK0& (0+127)
   281  001A  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   282  001B  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   283  001C  01B0               	clrf	(__pbssBANK0+3)& (0+127)
   284  001D  01B1               	clrf	(__pbssBANK0+4)& (0+127)
   285  001E  01B2               	clrf	(__pbssBANK0+5)& (0+127)
   286  001F  01B3               	clrf	(__pbssBANK0+6)& (0+127)
   287  0020  01B4               	clrf	(__pbssBANK0+7)& (0+127)
   288  0021  01B5               	clrf	(__pbssBANK0+8)& (0+127)
   289  0022  01B6               	clrf	(__pbssBANK0+9)& (0+127)
   290                           
   291                           ; Clear objects allocated to COMMON
   292  0023  01F6               	clrf	__pbssCOMMON& (0+127)
   293  0024  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   294  0025  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   295  0026  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   296  0027                     end_of_initialization:	
   297                           ;End of C runtime variable initialization code
   298                           
   299  0027                     __end_of__initialization:	
   300  0027  0183               	clrf	3
   301  0028  120A  118A  282B   	ljmp	_main	;jump to C main() function
   302                           
   303                           	psect	bssCOMMON
   304  0076                     __pbssCOMMON:	
   305  0076                     _atras:	
   306  0076                     	ds	1
   307  0077                     _contador:	
   308  0077                     	ds	1
   309  0078                     _recibir_ind:	
   310  0078                     	ds	1
   311  0079                     _recibir:	
   312  0079                     	ds	1
   313                           
   314                           	psect	bssBANK0
   315  002D                     __pbssBANK0:	
   316  002D                     _z:	
   317  002D                     	ds	2
   318  002F                     _motor:	
   319  002F                     	ds	1
   320  0030                     _adelante:	
   321  0030                     	ds	1
   322  0031                     _muestras:	
   323  0031                     	ds	1
   324  0032                     _cont_obs:	
   325  0032                     	ds	1
   326  0033                     _indicador:	
   327  0033                     	ds	1
   328  0034                     _ancho:	
   329  0034                     	ds	1
   330  0035                     _largo:	
   331  0035                     	ds	1
   332  0036                     _velocidad:	
   333  0036                     	ds	1
   334                           
   335                           	psect	dataBANK0
   336  0037                     __pdataBANK0:	
   337  0037                     _contador_m:	
   338  0037                     	ds	1
   339  0038                     _indicador_mov:	
   340  0038                     	ds	1
   341                           
   342                           	psect	cstackCOMMON
   343  0070                     __pcstackCOMMON:	
   344  0070                     ?_config:	
   345  0070                     ?_select_velocidad:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_dis_ade:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ?_dis_atr:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_cambiar_fila_derecha:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?_cambiar_fila_izquierda:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?_esperar:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ?_obstaculo:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ?_regresar:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ?_init_PWM_2:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ?_init_ADC:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_Servo2_grados:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ?_ISR:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ??_ISR:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ?_main:	
   385                           ; 1 bytes @ 0x0
   386                           
   387                           
   388                           ; 1 bytes @ 0x0
   389  0070                     	ds	4
   390  0074                     ?_I2C_Slave_Init:	
   391  0074                     ??_OSC_config:	
   392                           ; 1 bytes @ 0x4
   393                           
   394  0074                     ??_init_PWM_2:	
   395                           ; 1 bytes @ 0x4
   396                           
   397  0074                     ??_init_ADC:	
   398                           ; 1 bytes @ 0x4
   399                           
   400  0074                     ??_Servo2_grados:	
   401                           ; 1 bytes @ 0x4
   402                           
   403  0074                     ?___bmul:	
   404                           ; 1 bytes @ 0x4
   405                           
   406  0074                     esperar@vel:	
   407                           ; 1 bytes @ 0x4
   408                           
   409  0074                     ___bmul@multiplicand:	
   410                           ; 1 bytes @ 0x4
   411                           
   412  0074                     I2C_Slave_Init@address:	
   413                           ; 1 bytes @ 0x4
   414                           
   415                           
   416                           ; 2 bytes @ 0x4
   417  0074                     	ds	1
   418  0075                     ??___bmul:	
   419                           
   420                           ; 1 bytes @ 0x5
   421  0075                     	ds	1
   422  0076                     ??_config:	
   423  0076                     ??_I2C_Slave_Init:	
   424                           ; 1 bytes @ 0x6
   425                           
   426                           
   427                           	psect	cstackBANK0
   428  0020                     __pcstackBANK0:	
   429                           ; 1 bytes @ 0x6
   430                           
   431  0020                     ??_cambiar_fila_derecha:	
   432  0020                     ??_cambiar_fila_izquierda:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0020                     ??_esperar:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0020                     ??_obstaculo:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0020                     ?_OSC_config:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0020                     init_ADC@channel:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0020                     Servo2_grados@Servo2_grados:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0020                     ___bmul@product:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0020                     OSC_config@frecuencia:	
   454                           ; 1 bytes @ 0x0
   455                           
   456                           
   457                           ; 4 bytes @ 0x0
   458  0020                     	ds	1
   459  0021                     ??_select_velocidad:	
   460  0021                     ??_dis_ade:	
   461                           ; 1 bytes @ 0x1
   462                           
   463  0021                     ??_dis_atr:	
   464                           ; 1 bytes @ 0x1
   465                           
   466  0021                     ___bmul@multiplier:	
   467                           ; 1 bytes @ 0x1
   468                           
   469                           
   470                           ; 1 bytes @ 0x1
   471  0021                     	ds	2
   472  0023                     ??_regresar:	
   473  0023                     select_velocidad@vel:	
   474                           ; 1 bytes @ 0x3
   475                           
   476                           
   477                           ; 1 bytes @ 0x3
   478  0023                     	ds	3
   479  0026                     regresar@i:	
   480                           
   481                           ; 2 bytes @ 0x6
   482  0026                     	ds	2
   483  0028                     ??_main:	
   484                           
   485                           ; 1 bytes @ 0x8
   486  0028                     	ds	3
   487  002B                     main@i:	
   488                           
   489                           ; 2 bytes @ 0xB
   490  002B                     	ds	2
   491                           
   492                           	psect	maintext
   493  002B                     __pmaintext:	
   494 ;;
   495 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   496 ;;
   497 ;; *************** function _main *****************
   498 ;; Defined at:
   499 ;;		line 136 in file "MAIN_CONTROL.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;		None
   502 ;; Auto vars:     Size  Location     Type
   503 ;;  i               2   11[BANK0 ] int 
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   508 ;; Tracked objects:
   509 ;;		On entry : B00/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   513 ;;      Params:         0       0       0       0       0
   514 ;;      Locals:         0       2       0       0       0
   515 ;;      Temps:          0       3       0       0       0
   516 ;;      Totals:         0       5       0       0       0
   517 ;;Total ram usage:        5 bytes
   518 ;; Hardware stack levels required when called:    4
   519 ;; This function calls:
   520 ;;		_I2C_Slave_Init
   521 ;;		___bmul
   522 ;;		_cambiar_fila_derecha
   523 ;;		_cambiar_fila_izquierda
   524 ;;		_config
   525 ;;		_dis_ade
   526 ;;		_dis_atr
   527 ;;		_esperar
   528 ;;		_obstaculo
   529 ;;		_regresar
   530 ;;		_select_velocidad
   531 ;; This function is called by:
   532 ;;		Startup code after reset
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           
   537                           ;psect for function _main
   538  002B                     _main:	
   539                           
   540                           ;MAIN_CONTROL.c: 137:     config();
   541                           
   542                           ;incstack = 0
   543                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   544  002B  120A  118A  259B  120A  118A  	fcall	_config
   545                           
   546                           ;MAIN_CONTROL.c: 138:     I2C_Slave_Init(0x30);
   547  0030  3030               	movlw	48
   548  0031  00F4               	movwf	I2C_Slave_Init@address
   549  0032  3000               	movlw	0
   550  0033  00F5               	movwf	I2C_Slave_Init@address+1
   551  0034  120A  118A  2619  120A  118A  	fcall	_I2C_Slave_Init
   552                           
   553                           ;MAIN_CONTROL.c: 139:     select_velocidad(2);
   554  0039  3002               	movlw	2
   555  003A  120A  118A  25D5  120A  118A  	fcall	_select_velocidad
   556  003F                     l3145:	
   557                           
   558                           ;MAIN_CONTROL.c: 141:         PORTB = 0b00000001;;
   559  003F  3001               	movlw	1
   560  0040  1283               	bcf	3,5	;RP0=0, select bank0
   561  0041  1303               	bcf	3,6	;RP1=0, select bank0
   562  0042  0086               	movwf	6	;volatile
   563                           
   564                           ;MAIN_CONTROL.c: 142:         dis_ade();
   565  0043  120A  118A  264A  120A  118A  	fcall	_dis_ade
   566                           
   567                           ;MAIN_CONTROL.c: 143:         _delay((unsigned long)((300)*(1000000/4000.0)));
   568  0048  3062               	movlw	98
   569  0049  1283               	bcf	3,5	;RP0=0, select bank0
   570  004A  1303               	bcf	3,6	;RP1=0, select bank0
   571  004B  00A9               	movwf	??_main+1
   572  004C  3065               	movlw	101
   573  004D  00A8               	movwf	??_main
   574  004E                     u867:	
   575  004E  0BA8               	decfsz	??_main,f
   576  004F  284E               	goto	u867
   577  0050  0BA9               	decfsz	??_main+1,f
   578  0051  284E               	goto	u867
   579                           
   580                           ;MAIN_CONTROL.c: 144:         PORTB = 0b00000000;
   581  0052  1283               	bcf	3,5	;RP0=0, select bank0
   582  0053  1303               	bcf	3,6	;RP1=0, select bank0
   583  0054  0186               	clrf	6	;volatile
   584                           
   585                           ;MAIN_CONTROL.c: 145:         dis_atr();
   586  0055  120A  118A  2632  120A  118A  	fcall	_dis_atr
   587                           
   588                           ;MAIN_CONTROL.c: 146:         _delay((unsigned long)((300)*(1000000/4000.0)));
   589  005A  3062               	movlw	98
   590  005B  1283               	bcf	3,5	;RP0=0, select bank0
   591  005C  1303               	bcf	3,6	;RP1=0, select bank0
   592  005D  00A9               	movwf	??_main+1
   593  005E  3065               	movlw	101
   594  005F  00A8               	movwf	??_main
   595  0060                     u877:	
   596  0060  0BA8               	decfsz	??_main,f
   597  0061  2860               	goto	u877
   598  0062  0BA9               	decfsz	??_main+1,f
   599  0063  2860               	goto	u877
   600                           
   601                           ;MAIN_CONTROL.c: 148:         if (indicador_mov==1){
   602  0064  1283               	bcf	3,5	;RP0=0, select bank0
   603  0065  1303               	bcf	3,6	;RP1=0, select bank0
   604  0066  0338               	decf	_indicador_mov,w
   605  0067  1D03               	btfss	3,2
   606  0068  283F               	goto	l3145
   607                           
   608                           ;MAIN_CONTROL.c: 149:             select_velocidad(velocidad);
   609  0069  0836               	movf	_velocidad,w
   610  006A  120A  118A  25D5  120A  118A  	fcall	_select_velocidad
   611                           
   612                           ;MAIN_CONTROL.c: 150:             muestras = largo*ancho;
   613  006F  1283               	bcf	3,5	;RP0=0, select bank0
   614  0070  1303               	bcf	3,6	;RP1=0, select bank0
   615  0071  0834               	movf	_ancho,w
   616  0072  00A8               	movwf	??_main
   617  0073  0828               	movf	??_main,w
   618  0074  00F4               	movwf	___bmul@multiplicand
   619  0075  0835               	movf	_largo,w
   620  0076  120A  118A  2662  120A  118A  	fcall	___bmul
   621  007B  1283               	bcf	3,5	;RP0=0, select bank0
   622  007C  1303               	bcf	3,6	;RP1=0, select bank0
   623  007D  00A9               	movwf	??_main+1
   624  007E  0829               	movf	??_main+1,w
   625  007F  00B1               	movwf	_muestras
   626  0080                     l3225:	
   627                           ;MAIN_CONTROL.c: 151:             while(muestras > 1){
   628                           
   629                           
   630                           ;MAIN_CONTROL.c: 151:             while(muestras > 1){
   631  0080  3002               	movlw	2
   632  0081  0231               	subwf	_muestras,w
   633  0082  1C03               	btfss	3,0
   634  0083  2920               	goto	l185
   635                           
   636                           ;MAIN_CONTROL.c: 152:                 PORTD = 0;
   637  0084  0188               	clrf	8	;volatile
   638                           
   639                           ;MAIN_CONTROL.c: 153:                 PORTBbits.RB7 = 1;
   640  0085  1786               	bsf	6,7	;volatile
   641                           
   642                           ;MAIN_CONTROL.c: 154:                 motor = 0xF0;
   643  0086  30F0               	movlw	240
   644  0087  00A8               	movwf	??_main
   645  0088  0828               	movf	??_main,w
   646  0089  00AF               	movwf	_motor
   647                           
   648                           ;MAIN_CONTROL.c: 155:                 _delay((unsigned long)((6000)*(1000000/4000.0)));
   649  008A  3008               	movlw	8
   650  008B  1283               	bcf	3,5	;RP0=0, select bank0
   651  008C  1303               	bcf	3,6	;RP1=0, select bank0
   652  008D  00AA               	movwf	??_main+2
   653  008E  309D               	movlw	157
   654  008F  00A9               	movwf	??_main+1
   655  0090  3005               	movlw	5
   656  0091  00A8               	movwf	??_main
   657  0092                     u887:	
   658  0092  0BA8               	decfsz	??_main,f
   659  0093  2892               	goto	u887
   660  0094  0BA9               	decfsz	??_main+1,f
   661  0095  2892               	goto	u887
   662  0096  0BAA               	decfsz	??_main+2,f
   663  0097  2892               	goto	u887
   664                           
   665                           ;MAIN_CONTROL.c: 156:                 PORTBbits.RB7 = 0;
   666  0098  1283               	bcf	3,5	;RP0=0, select bank0
   667  0099  1303               	bcf	3,6	;RP1=0, select bank0
   668  009A  1386               	bcf	6,7	;volatile
   669                           
   670                           ;MAIN_CONTROL.c: 157:                 PORTD = 0b10101010;
   671  009B  30AA               	movlw	170
   672  009C  0088               	movwf	8	;volatile
   673                           
   674                           ;MAIN_CONTROL.c: 158:                 motor = 0x00;
   675  009D  01AF               	clrf	_motor
   676                           
   677                           ;MAIN_CONTROL.c: 159:                 if (muestras > 1){
   678  009E  3002               	movlw	2
   679  009F  0231               	subwf	_muestras,w
   680  00A0  1C03               	skipc
   681  00A1  291D               	goto	l3223
   682                           
   683                           ;MAIN_CONTROL.c: 160:                     if(contador_m == largo){
   684  00A2  0837               	movf	_contador_m,w
   685  00A3  0635               	xorwf	_largo,w
   686  00A4  1D03               	skipz
   687  00A5  28BF               	goto	l3193
   688                           
   689                           ;MAIN_CONTROL.c: 161:                         if (muestras !=1){
   690  00A6  0331               	decf	_muestras,w
   691  00A7  1903               	btfsc	3,2
   692  00A8  291D               	goto	l3223
   693                           
   694                           ;MAIN_CONTROL.c: 162:                             if(indicador==0){
   695  00A9  0833               	movf	_indicador,w
   696  00AA  1D03               	btfss	3,2
   697  00AB  28B6               	goto	l3187
   698                           
   699                           ;MAIN_CONTROL.c: 163:                                 cambiar_fila_derecha();
   700  00AC  120A  118A  239E  120A  118A  	fcall	_cambiar_fila_derecha
   701  00B1                     l3185:	
   702                           
   703                           ;MAIN_CONTROL.c: 164:                                 contador_m = 1;
   704  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   705  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   706  00B3  01B7               	clrf	_contador_m
   707  00B4  0AB7               	incf	_contador_m,f
   708                           
   709                           ;MAIN_CONTROL.c: 165:                             }
   710  00B5  291D               	goto	l3223
   711  00B6                     l3187:	
   712  00B6  0333               	decf	_indicador,w
   713  00B7  1D03               	btfss	3,2
   714  00B8  291D               	goto	l3223
   715                           
   716                           ;MAIN_CONTROL.c: 167:                                 cambiar_fila_izquierda();
   717  00B9  120A  118A  241D  120A  118A  	fcall	_cambiar_fila_izquierda
   718  00BE  28B1               	goto	l3185
   719  00BF                     l3193:	
   720                           
   721                           ;MAIN_CONTROL.c: 173:                         for(int i = 0;i<6;i++){
   722  00BF  01AB               	clrf	main@i
   723  00C0  01AC               	clrf	main@i+1
   724  00C1                     l3199:	
   725                           
   726                           ;MAIN_CONTROL.c: 174:                             dis_ade();
   727  00C1  120A  118A  264A  120A  118A  	fcall	_dis_ade
   728                           
   729                           ;MAIN_CONTROL.c: 175:                             esperar(velocidad);
   730  00C6  1283               	bcf	3,5	;RP0=0, select bank0
   731  00C7  1303               	bcf	3,6	;RP1=0, select bank0
   732  00C8  0836               	movf	_velocidad,w
   733  00C9  120A  118A  255C  120A  118A  	fcall	_esperar
   734                           
   735                           ;MAIN_CONTROL.c: 176:                             dis_atr();
   736  00CE  120A  118A  2632  120A  118A  	fcall	_dis_atr
   737                           
   738                           ;MAIN_CONTROL.c: 177:                             esperar(velocidad);
   739  00D3  1283               	bcf	3,5	;RP0=0, select bank0
   740  00D4  1303               	bcf	3,6	;RP1=0, select bank0
   741  00D5  0836               	movf	_velocidad,w
   742  00D6  120A  118A  255C  120A  118A  	fcall	_esperar
   743                           
   744                           ;MAIN_CONTROL.c: 178:                         }
   745  00DB  3001               	movlw	1
   746  00DC  1283               	bcf	3,5	;RP0=0, select bank0
   747  00DD  1303               	bcf	3,6	;RP1=0, select bank0
   748  00DE  07AB               	addwf	main@i,f
   749  00DF  1803               	skipnc
   750  00E0  0AAC               	incf	main@i+1,f
   751  00E1  3000               	movlw	0
   752  00E2  07AC               	addwf	main@i+1,f
   753  00E3  082C               	movf	main@i+1,w
   754  00E4  3A80               	xorlw	128
   755  00E5  00FF               	movwf	127
   756  00E6  3080               	movlw	128
   757  00E7  027F               	subwf	127,w
   758  00E8  1D03               	skipz
   759  00E9  28EC               	goto	u825
   760  00EA  3006               	movlw	6
   761  00EB  022B               	subwf	main@i,w
   762  00EC                     u825:	
   763  00EC  1803               	btfsc	3,0
   764  00ED  2908               	goto	l3213
   765  00EE  28C1               	goto	l3199
   766  00EF                     l3205:	
   767                           
   768                           ;MAIN_CONTROL.c: 180:                             obstaculo();
   769  00EF  120A  118A  2319  120A  118A  	fcall	_obstaculo
   770                           
   771                           ;MAIN_CONTROL.c: 181:                             dis_ade();
   772  00F4  120A  118A  264A  120A  118A  	fcall	_dis_ade
   773                           
   774                           ;MAIN_CONTROL.c: 182:                             _delay((unsigned long)((300)*(1000000/
      +                          4000.0)));
   775  00F9  3062               	movlw	98
   776  00FA  1283               	bcf	3,5	;RP0=0, select bank0
   777  00FB  1303               	bcf	3,6	;RP1=0, select bank0
   778  00FC  00A9               	movwf	??_main+1
   779  00FD  3065               	movlw	101
   780  00FE  00A8               	movwf	??_main
   781  00FF                     u897:	
   782  00FF  0BA8               	decfsz	??_main,f
   783  0100  28FF               	goto	u897
   784  0101  0BA9               	decfsz	??_main+1,f
   785  0102  28FF               	goto	u897
   786                           
   787                           ;MAIN_CONTROL.c: 183:                             dis_atr();
   788  0103  120A  118A  2632  120A  118A  	fcall	_dis_atr
   789  0108                     l3213:	
   790                           
   791                           ;MAIN_CONTROL.c: 179:                         while(adelante <20){
   792  0108  3014               	movlw	20
   793  0109  1283               	bcf	3,5	;RP0=0, select bank0
   794  010A  1303               	bcf	3,6	;RP1=0, select bank0
   795  010B  0230               	subwf	_adelante,w
   796  010C  1C03               	skipc
   797  010D  28EF               	goto	l3205
   798                           
   799                           ;MAIN_CONTROL.c: 185:                         if(cont_obs>0){
   800  010E  0832               	movf	_cont_obs,w
   801  010F  1903               	btfsc	3,2
   802  0110  2916               	goto	l3219
   803                           
   804                           ;MAIN_CONTROL.c: 186:                             regresar();
   805  0111  120A  118A  21D3  120A  118A  	fcall	_regresar
   806  0116                     l3219:	
   807                           
   808                           ;MAIN_CONTROL.c: 188:                         contador_m++;
   809  0116  3001               	movlw	1
   810  0117  1283               	bcf	3,5	;RP0=0, select bank0
   811  0118  1303               	bcf	3,6	;RP1=0, select bank0
   812  0119  00A8               	movwf	??_main
   813  011A  0828               	movf	??_main,w
   814  011B  07B7               	addwf	_contador_m,f
   815                           
   816                           ;MAIN_CONTROL.c: 189:                         PORTD = 0;
   817  011C  0188               	clrf	8	;volatile
   818  011D                     l3223:	
   819                           ;MAIN_CONTROL.c: 190:                     }
   820                           
   821                           
   822                           ;MAIN_CONTROL.c: 193:                 muestras--;
   823  011D  3001               	movlw	1
   824  011E  02B1               	subwf	_muestras,f
   825  011F  2880               	goto	l3225
   826  0120                     l185:	
   827                           
   828                           ;MAIN_CONTROL.c: 195:             contador_m = 1;
   829  0120  01B7               	clrf	_contador_m
   830  0121  0AB7               	incf	_contador_m,f
   831                           
   832                           ;MAIN_CONTROL.c: 196:             indicador_mov = 0;
   833  0122  01B8               	clrf	_indicador_mov
   834                           
   835                           ;MAIN_CONTROL.c: 197:             indicador = 0;
   836  0123  01B3               	clrf	_indicador
   837  0124  283F               	goto	l3145
   838  0125                     __end_of_main:	
   839                           
   840                           	psect	text1
   841  05D5                     __ptext1:	
   842 ;; *************** function _select_velocidad *****************
   843 ;; Defined at:
   844 ;;		line 447 in file "MAIN_CONTROL.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  vel             1    wreg     unsigned char 
   847 ;; Auto vars:     Size  Location     Type
   848 ;;  vel             1    3[BANK0 ] unsigned char 
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   858 ;;      Params:         0       0       0       0       0
   859 ;;      Locals:         0       1       0       0       0
   860 ;;      Temps:          0       2       0       0       0
   861 ;;      Totals:         0       3       0       0       0
   862 ;;Total ram usage:        3 bytes
   863 ;; Hardware stack levels used:    1
   864 ;; Hardware stack levels required when called:    2
   865 ;; This function calls:
   866 ;;		_Servo2_grados
   867 ;; This function is called by:
   868 ;;		_main
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           
   873                           ;psect for function _select_velocidad
   874  05D5                     _select_velocidad:	
   875                           
   876                           ;incstack = 0
   877                           ; Regs used in _select_velocidad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   878                           ;select_velocidad@vel stored from wreg
   879  05D5  1283               	bcf	3,5	;RP0=0, select bank0
   880  05D6  1303               	bcf	3,6	;RP1=0, select bank0
   881  05D7  00A3               	movwf	select_velocidad@vel
   882                           
   883                           ;MAIN_CONTROL.c: 448:     switch(vel){
   884  05D8  2DE8               	goto	l3003
   885  05D9                     l2995:	
   886                           
   887                           ;MAIN_CONTROL.c: 450:             Servo2_grados(30);
   888  05D9  301E               	movlw	30
   889  05DA  120A  118A  2517   	fcall	_Servo2_grados
   890                           
   891                           ;MAIN_CONTROL.c: 451:             break;
   892  05DD  0008               	return
   893  05DE                     l2997:	
   894                           
   895                           ;MAIN_CONTROL.c: 454:             Servo2_grados(90);
   896  05DE  305A               	movlw	90
   897  05DF  120A  118A  2517   	fcall	_Servo2_grados
   898                           
   899                           ;MAIN_CONTROL.c: 455:             break;
   900  05E2  0008               	return
   901  05E3                     l2999:	
   902                           
   903                           ;MAIN_CONTROL.c: 457:             Servo2_grados(180);
   904  05E3  30B4               	movlw	180
   905  05E4  120A  118A  2517   	fcall	_Servo2_grados
   906                           
   907                           ;MAIN_CONTROL.c: 458:             break;
   908  05E7  0008               	return
   909  05E8                     l3003:	
   910  05E8  0823               	movf	select_velocidad@vel,w
   911  05E9  00A1               	movwf	??_select_velocidad
   912  05EA  01A2               	clrf	??_select_velocidad+1
   913                           
   914                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   915                           ; Switch size 1, requested type "simple"
   916                           ; Number of cases is 1, Range of values is 0 to 0
   917                           ; switch strategies available:
   918                           ; Name         Instructions Cycles
   919                           ; simple_byte            4     3 (average)
   920                           ; direct_byte           11     8 (fixed)
   921                           ; jumptable            260     6 (fixed)
   922                           ;	Chosen strategy is simple_byte
   923  05EB  0822               	movf	??_select_velocidad+1,w
   924  05EC  3A00               	xorlw	0	; case 0
   925  05ED  1903               	skipnz
   926  05EE  2DF0               	goto	l3669
   927  05EF  2DFB               	goto	l247
   928  05F0                     l3669:	
   929                           
   930                           ; Switch size 1, requested type "simple"
   931                           ; Number of cases is 3, Range of values is 1 to 3
   932                           ; switch strategies available:
   933                           ; Name         Instructions Cycles
   934                           ; simple_byte           10     6 (average)
   935                           ; direct_byte           20    11 (fixed)
   936                           ; jumptable            263     9 (fixed)
   937                           ;	Chosen strategy is simple_byte
   938  05F0  0821               	movf	??_select_velocidad,w
   939  05F1  3A01               	xorlw	1	; case 1
   940  05F2  1903               	skipnz
   941  05F3  2DD9               	goto	l2995
   942  05F4  3A03               	xorlw	3	; case 2
   943  05F5  1903               	skipnz
   944  05F6  2DDE               	goto	l2997
   945  05F7  3A01               	xorlw	1	; case 3
   946  05F8  1903               	skipnz
   947  05F9  2DE3               	goto	l2999
   948  05FA  2DFB               	goto	l247
   949  05FB                     l247:	
   950  05FB  0008               	return
   951  05FC                     __end_of_select_velocidad:	
   952                           
   953                           	psect	text2
   954  0517                     __ptext2:	
   955 ;; *************** function _Servo2_grados *****************
   956 ;; Defined at:
   957 ;;		line 542 in file "MAIN_CONTROL.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;  Servo2_grado    1    wreg     unsigned char 
   960 ;; Auto vars:     Size  Location     Type
   961 ;;  Servo2_grado    1    0[BANK0 ] unsigned char 
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   971 ;;      Params:         0       0       0       0       0
   972 ;;      Locals:         0       1       0       0       0
   973 ;;      Temps:          2       0       0       0       0
   974 ;;      Totals:         2       1       0       0       0
   975 ;;Total ram usage:        3 bytes
   976 ;; Hardware stack levels used:    1
   977 ;; Hardware stack levels required when called:    1
   978 ;; This function calls:
   979 ;;		Nothing
   980 ;; This function is called by:
   981 ;;		_select_velocidad
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           
   986                           ;psect for function _Servo2_grados
   987  0517                     _Servo2_grados:	
   988                           
   989                           ;incstack = 0
   990                           ; Regs used in _Servo2_grados: [wreg-fsr0h+status,2+status,0]
   991                           ;Servo2_grados@Servo2_grados stored from wreg
   992  0517  1283               	bcf	3,5	;RP0=0, select bank0
   993  0518  1303               	bcf	3,6	;RP1=0, select bank0
   994  0519  00A0               	movwf	Servo2_grados@Servo2_grados
   995                           
   996                           ;MAIN_CONTROL.c: 543:     switch(Servo2_grados){
   997  051A  2D36               	goto	l2959
   998  051B                     l2939:	
   999                           
  1000                           ;MAIN_CONTROL.c: 545:             CCPR1L = 10;
  1001  051B  300A               	movlw	10
  1002  051C  0095               	movwf	21	;volatile
  1003                           
  1004                           ;MAIN_CONTROL.c: 546:             break;
  1005  051D  0008               	return
  1006  051E                     l2941:	
  1007                           
  1008                           ;MAIN_CONTROL.c: 549:             CCPR1L = 12;
  1009  051E  300C               	movlw	12
  1010  051F  0095               	movwf	21	;volatile
  1011                           
  1012                           ;MAIN_CONTROL.c: 550:             break;
  1013  0520  0008               	return
  1014  0521                     l2943:	
  1015                           
  1016                           ;MAIN_CONTROL.c: 553:             CCPR1L = 14;
  1017  0521  300E               	movlw	14
  1018  0522  0095               	movwf	21	;volatile
  1019                           
  1020                           ;MAIN_CONTROL.c: 554:             break;
  1021  0523  0008               	return
  1022  0524                     l2945:	
  1023                           
  1024                           ;MAIN_CONTROL.c: 557:             CCPR1L = 18;
  1025  0524  3012               	movlw	18
  1026  0525  0095               	movwf	21	;volatile
  1027                           
  1028                           ;MAIN_CONTROL.c: 558:             break;
  1029  0526  0008               	return
  1030  0527                     l2947:	
  1031                           
  1032                           ;MAIN_CONTROL.c: 561:             CCPR1L = 25;
  1033  0527  3019               	movlw	25
  1034  0528  0095               	movwf	21	;volatile
  1035                           
  1036                           ;MAIN_CONTROL.c: 562:             break;
  1037  0529  0008               	return
  1038  052A                     l2949:	
  1039                           
  1040                           ;MAIN_CONTROL.c: 565:             CCPR1L = 30;
  1041  052A  301E               	movlw	30
  1042  052B  0095               	movwf	21	;volatile
  1043                           
  1044                           ;MAIN_CONTROL.c: 566:             break;
  1045  052C  0008               	return
  1046  052D                     l2951:	
  1047                           
  1048                           ;MAIN_CONTROL.c: 569:             CCPR1L = 33;
  1049  052D  3021               	movlw	33
  1050  052E  0095               	movwf	21	;volatile
  1051                           
  1052                           ;MAIN_CONTROL.c: 570:             break;
  1053  052F  0008               	return
  1054  0530                     l2953:	
  1055                           
  1056                           ;MAIN_CONTROL.c: 573:             CCPR1L = 37;
  1057  0530  3025               	movlw	37
  1058  0531  0095               	movwf	21	;volatile
  1059                           
  1060                           ;MAIN_CONTROL.c: 574:             break;
  1061  0532  0008               	return
  1062  0533                     l2955:	
  1063                           
  1064                           ;MAIN_CONTROL.c: 577:             CCPR1L = 40;
  1065  0533  3028               	movlw	40
  1066  0534  0095               	movwf	21	;volatile
  1067                           
  1068                           ;MAIN_CONTROL.c: 578:             break;
  1069  0535  0008               	return
  1070  0536                     l2959:	
  1071  0536  0820               	movf	Servo2_grados@Servo2_grados,w
  1072  0537  00F4               	movwf	??_Servo2_grados
  1073  0538  01F5               	clrf	??_Servo2_grados+1
  1074                           
  1075                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1076                           ; Switch size 1, requested type "simple"
  1077                           ; Number of cases is 1, Range of values is 0 to 0
  1078                           ; switch strategies available:
  1079                           ; Name         Instructions Cycles
  1080                           ; simple_byte            4     3 (average)
  1081                           ; direct_byte           11     8 (fixed)
  1082                           ; jumptable            260     6 (fixed)
  1083                           ;	Chosen strategy is simple_byte
  1084  0539  0875               	movf	??_Servo2_grados+1,w
  1085  053A  3A00               	xorlw	0	; case 0
  1086  053B  1903               	skipnz
  1087  053C  2D3E               	goto	l3671
  1088  053D  2D1B               	goto	l2939
  1089  053E                     l3671:	
  1090                           
  1091                           ; Switch size 1, requested type "simple"
  1092                           ; Number of cases is 9, Range of values is 0 to 180
  1093                           ; switch strategies available:
  1094                           ; Name         Instructions Cycles
  1095                           ; simple_byte           28    15 (average)
  1096                           ; jumptable            260     6 (fixed)
  1097                           ;	Chosen strategy is simple_byte
  1098  053E  0874               	movf	??_Servo2_grados,w
  1099  053F  3A00               	xorlw	0	; case 0
  1100  0540  1903               	skipnz
  1101  0541  2D1B               	goto	l2939
  1102  0542  3A0A               	xorlw	10	; case 10
  1103  0543  1903               	skipnz
  1104  0544  2D1E               	goto	l2941
  1105  0545  3A14               	xorlw	20	; case 30
  1106  0546  1903               	skipnz
  1107  0547  2D21               	goto	l2943
  1108  0548  3A33               	xorlw	51	; case 45
  1109  0549  1903               	skipnz
  1110  054A  2D24               	goto	l2945
  1111  054B  3A77               	xorlw	119	; case 90
  1112  054C  1903               	skipnz
  1113  054D  2D27               	goto	l2947
  1114  054E  3A22               	xorlw	34	; case 120
  1115  054F  1903               	skipnz
  1116  0550  2D2A               	goto	l2949
  1117  0551  3AFF               	xorlw	255	; case 135
  1118  0552  1903               	skipnz
  1119  0553  2D2D               	goto	l2951
  1120  0554  3A11               	xorlw	17	; case 150
  1121  0555  1903               	skipnz
  1122  0556  2D30               	goto	l2953
  1123  0557  3A22               	xorlw	34	; case 180
  1124  0558  1903               	skipnz
  1125  0559  2D33               	goto	l2955
  1126  055A  2D1B               	goto	l2939
  1127  055B  0008               	return
  1128  055C                     __end_of_Servo2_grados:	
  1129                           
  1130                           	psect	text3
  1131  01D3                     __ptext3:	
  1132 ;; *************** function _regresar *****************
  1133 ;; Defined at:
  1134 ;;		line 205 in file "MAIN_CONTROL.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;		None
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  i               2    6[BANK0 ] int 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  1    wreg      void 
  1141 ;; Registers used:
  1142 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1148 ;;      Params:         0       0       0       0       0
  1149 ;;      Locals:         0       2       0       0       0
  1150 ;;      Temps:          0       3       0       0       0
  1151 ;;      Totals:         0       5       0       0       0
  1152 ;;Total ram usage:        5 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    3
  1155 ;; This function calls:
  1156 ;;		_dis_ade
  1157 ;;		_dis_atr
  1158 ;;		_esperar
  1159 ;; This function is called by:
  1160 ;;		_main
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           
  1165                           ;psect for function _regresar
  1166  01D3                     _regresar:	
  1167                           
  1168                           ;MAIN_CONTROL.c: 206:     PORTD = 0b10101010;
  1169                           
  1170                           ;incstack = 0
  1171                           ; Regs used in _regresar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1172  01D3  30AA               	movlw	170
  1173  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  1174  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  1175  01D6  0088               	movwf	8	;volatile
  1176                           
  1177                           ;MAIN_CONTROL.c: 207:     for(int i = 0;i<6;i++){
  1178  01D7  01A6               	clrf	regresar@i
  1179  01D8  01A7               	clrf	regresar@i+1
  1180  01D9                     l3087:	
  1181                           
  1182                           ;MAIN_CONTROL.c: 208:         dis_ade();
  1183  01D9  120A  118A  264A  120A  118A  	fcall	_dis_ade
  1184                           
  1185                           ;MAIN_CONTROL.c: 209:         esperar(velocidad);
  1186  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1187  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  1188  01E0  0836               	movf	_velocidad,w
  1189  01E1  120A  118A  255C  120A  118A  	fcall	_esperar
  1190                           
  1191                           ;MAIN_CONTROL.c: 210:         dis_atr();
  1192  01E6  120A  118A  2632  120A  118A  	fcall	_dis_atr
  1193                           
  1194                           ;MAIN_CONTROL.c: 211:        esperar(velocidad);
  1195  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1196  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1197  01ED  0836               	movf	_velocidad,w
  1198  01EE  120A  118A  255C  120A  118A  	fcall	_esperar
  1199                           
  1200                           ;MAIN_CONTROL.c: 212:     }
  1201  01F3  3001               	movlw	1
  1202  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1203  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1204  01F6  07A6               	addwf	regresar@i,f
  1205  01F7  1803               	skipnc
  1206  01F8  0AA7               	incf	regresar@i+1,f
  1207  01F9  3000               	movlw	0
  1208  01FA  07A7               	addwf	regresar@i+1,f
  1209  01FB  0827               	movf	regresar@i+1,w
  1210  01FC  3A80               	xorlw	128
  1211  01FD  00FF               	movwf	127
  1212  01FE  3080               	movlw	128
  1213  01FF  027F               	subwf	127,w
  1214  0200  1D03               	skipz
  1215  0201  2A04               	goto	u725
  1216  0202  3006               	movlw	6
  1217  0203  0226               	subwf	regresar@i,w
  1218  0204                     u725:	
  1219  0204  1C03               	skipc
  1220  0205  29D9               	goto	l3087
  1221                           
  1222                           ;MAIN_CONTROL.c: 213:     PORTD = 0;
  1223  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1224  0207  1303               	bcf	3,6	;RP1=0, select bank0
  1225  0208  0188               	clrf	8	;volatile
  1226                           
  1227                           ;MAIN_CONTROL.c: 214:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  1228  0209  3003               	movlw	3
  1229  020A  1283               	bcf	3,5	;RP0=0, select bank0
  1230  020B  1303               	bcf	3,6	;RP1=0, select bank0
  1231  020C  00A5               	movwf	??_regresar+2
  1232  020D  308A               	movlw	138
  1233  020E  00A4               	movwf	??_regresar+1
  1234  020F  3055               	movlw	85
  1235  0210  00A3               	movwf	??_regresar
  1236  0211                     u907:	
  1237  0211  0BA3               	decfsz	??_regresar,f
  1238  0212  2A11               	goto	u907
  1239  0213  0BA4               	decfsz	??_regresar+1,f
  1240  0214  2A11               	goto	u907
  1241  0215  0BA5               	decfsz	??_regresar+2,f
  1242  0216  2A11               	goto	u907
  1243                           
  1244                           ;MAIN_CONTROL.c: 215:     PORTD = 0b10011001;
  1245  0217  3099               	movlw	153
  1246  0218  1283               	bcf	3,5	;RP0=0, select bank0
  1247  0219  1303               	bcf	3,6	;RP1=0, select bank0
  1248  021A  0088               	movwf	8	;volatile
  1249                           
  1250                           ;MAIN_CONTROL.c: 216:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  1251  021B  3003               	movlw	3
  1252  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1253  021D  1303               	bcf	3,6	;RP1=0, select bank0
  1254  021E  00A5               	movwf	??_regresar+2
  1255  021F  308A               	movlw	138
  1256  0220  00A4               	movwf	??_regresar+1
  1257  0221  3055               	movlw	85
  1258  0222  00A3               	movwf	??_regresar
  1259  0223                     u917:	
  1260  0223  0BA3               	decfsz	??_regresar,f
  1261  0224  2A23               	goto	u917
  1262  0225  0BA4               	decfsz	??_regresar+1,f
  1263  0226  2A23               	goto	u917
  1264  0227  0BA5               	decfsz	??_regresar+2,f
  1265  0228  2A23               	goto	u917
  1266                           
  1267                           ;MAIN_CONTROL.c: 217:     PORTD = 0;
  1268  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1269  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1270  022B  0188               	clrf	8	;volatile
  1271                           
  1272                           ;MAIN_CONTROL.c: 218:     _delay((unsigned long)((500)*(1000000/4000.0)));
  1273  022C  30A3               	movlw	163
  1274  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1275  022E  1303               	bcf	3,6	;RP1=0, select bank0
  1276  022F  00A4               	movwf	??_regresar+1
  1277  0230  3054               	movlw	84
  1278  0231  00A3               	movwf	??_regresar
  1279  0232                     u927:	
  1280  0232  0BA3               	decfsz	??_regresar,f
  1281  0233  2A32               	goto	u927
  1282  0234  0BA4               	decfsz	??_regresar+1,f
  1283  0235  2A32               	goto	u927
  1284  0236  0000               	nop
  1285                           
  1286                           ;MAIN_CONTROL.c: 219:     PORTD = 0b10101010;
  1287  0237  30AA               	movlw	170
  1288  0238  1283               	bcf	3,5	;RP0=0, select bank0
  1289  0239  1303               	bcf	3,6	;RP1=0, select bank0
  1290  023A  0088               	movwf	8	;volatile
  1291  023B                     l3109:	
  1292                           ;MAIN_CONTROL.c: 220:    while(cont_obs>0){
  1293                           
  1294                           
  1295                           ;MAIN_CONTROL.c: 220:    while(cont_obs>0){
  1296  023B  0832               	movf	_cont_obs,w
  1297  023C  1903               	btfsc	3,2
  1298  023D  2A53               	goto	l3111
  1299                           
  1300                           ;MAIN_CONTROL.c: 222:         _delay((unsigned long)((2000)*(1000000/4000.0)));
  1301  023E  3003               	movlw	3
  1302  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1303  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1304  0241  00A5               	movwf	??_regresar+2
  1305  0242  308A               	movlw	138
  1306  0243  00A4               	movwf	??_regresar+1
  1307  0244  3055               	movlw	85
  1308  0245  00A3               	movwf	??_regresar
  1309  0246                     u937:	
  1310  0246  0BA3               	decfsz	??_regresar,f
  1311  0247  2A46               	goto	u937
  1312  0248  0BA4               	decfsz	??_regresar+1,f
  1313  0249  2A46               	goto	u937
  1314  024A  0BA5               	decfsz	??_regresar+2,f
  1315  024B  2A46               	goto	u937
  1316                           
  1317                           ;MAIN_CONTROL.c: 223:         PORTA--;
  1318  024C  3001               	movlw	1
  1319  024D  1283               	bcf	3,5	;RP0=0, select bank0
  1320  024E  1303               	bcf	3,6	;RP1=0, select bank0
  1321  024F  0285               	subwf	5,f	;volatile
  1322                           
  1323                           ;MAIN_CONTROL.c: 224:         cont_obs--;
  1324  0250  3001               	movlw	1
  1325  0251  02B2               	subwf	_cont_obs,f
  1326  0252  2A3B               	goto	l3109
  1327  0253                     l3111:	
  1328                           
  1329                           ;MAIN_CONTROL.c: 226:     PORTD = 0;
  1330  0253  0188               	clrf	8	;volatile
  1331                           
  1332                           ;MAIN_CONTROL.c: 227:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  1333  0254  3002               	movlw	2
  1334  0255  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0256  1303               	bcf	3,6	;RP1=0, select bank0
  1336  0257  00A5               	movwf	??_regresar+2
  1337  0258  3045               	movlw	69
  1338  0259  00A4               	movwf	??_regresar+1
  1339  025A  30A9               	movlw	169
  1340  025B  00A3               	movwf	??_regresar
  1341  025C                     u947:	
  1342  025C  0BA3               	decfsz	??_regresar,f
  1343  025D  2A5C               	goto	u947
  1344  025E  0BA4               	decfsz	??_regresar+1,f
  1345  025F  2A5C               	goto	u947
  1346  0260  0BA5               	decfsz	??_regresar+2,f
  1347  0261  2A5C               	goto	u947
  1348                           
  1349                           ;MAIN_CONTROL.c: 228:     PORTD = 0b01100110;
  1350  0262  3066               	movlw	102
  1351  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1352  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1353  0265  0088               	movwf	8	;volatile
  1354                           
  1355                           ;MAIN_CONTROL.c: 229:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  1356  0266  3002               	movlw	2
  1357  0267  1283               	bcf	3,5	;RP0=0, select bank0
  1358  0268  1303               	bcf	3,6	;RP1=0, select bank0
  1359  0269  00A5               	movwf	??_regresar+2
  1360  026A  3045               	movlw	69
  1361  026B  00A4               	movwf	??_regresar+1
  1362  026C  30A9               	movlw	169
  1363  026D  00A3               	movwf	??_regresar
  1364  026E                     u957:	
  1365  026E  0BA3               	decfsz	??_regresar,f
  1366  026F  2A6E               	goto	u957
  1367  0270  0BA4               	decfsz	??_regresar+1,f
  1368  0271  2A6E               	goto	u957
  1369  0272  0BA5               	decfsz	??_regresar+2,f
  1370  0273  2A6E               	goto	u957
  1371                           
  1372                           ;MAIN_CONTROL.c: 230:     PORTD=0;
  1373  0274  1283               	bcf	3,5	;RP0=0, select bank0
  1374  0275  1303               	bcf	3,6	;RP1=0, select bank0
  1375  0276  0188               	clrf	8	;volatile
  1376                           
  1377                           ;MAIN_CONTROL.c: 231:     muestras--;
  1378  0277  3001               	movlw	1
  1379  0278  02B1               	subwf	_muestras,f
  1380                           
  1381                           ;MAIN_CONTROL.c: 232:     cont_obs = 0;
  1382  0279  01B2               	clrf	_cont_obs
  1383  027A  0008               	return
  1384  027B                     __end_of_regresar:	
  1385                           
  1386                           	psect	text4
  1387  055C                     __ptext4:	
  1388 ;; *************** function _esperar *****************
  1389 ;; Defined at:
  1390 ;;		line 462 in file "MAIN_CONTROL.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;  vel             1    wreg     unsigned char 
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  vel             1    4[COMMON] unsigned char 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1404 ;;      Params:         0       0       0       0       0
  1405 ;;      Locals:         1       0       0       0       0
  1406 ;;      Temps:          0       3       0       0       0
  1407 ;;      Totals:         1       3       0       0       0
  1408 ;;Total ram usage:        4 bytes
  1409 ;; Hardware stack levels used:    1
  1410 ;; Hardware stack levels required when called:    1
  1411 ;; This function calls:
  1412 ;;		Nothing
  1413 ;; This function is called by:
  1414 ;;		_main
  1415 ;;		_regresar
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           
  1420                           ;psect for function _esperar
  1421  055C                     _esperar:	
  1422                           
  1423                           ;incstack = 0
  1424                           ; Regs used in _esperar: [wreg-fsr0h+status,2+status,0]
  1425                           ;esperar@vel stored from wreg
  1426  055C  00F4               	movwf	esperar@vel
  1427                           
  1428                           ;MAIN_CONTROL.c: 463:     switch(vel){
  1429  055D  2D85               	goto	l2841
  1430  055E                     l2833:	
  1431                           
  1432                           ;MAIN_CONTROL.c: 465:             _delay((unsigned long)((1000)*(1000000/4000.0)));
  1433  055E  3002               	movlw	2
  1434  055F  1283               	bcf	3,5	;RP0=0, select bank0
  1435  0560  1303               	bcf	3,6	;RP1=0, select bank0
  1436  0561  00A2               	movwf	??_esperar+2
  1437  0562  3045               	movlw	69
  1438  0563  00A1               	movwf	??_esperar+1
  1439  0564  30A9               	movlw	169
  1440  0565  00A0               	movwf	??_esperar
  1441  0566                     u967:	
  1442  0566  0BA0               	decfsz	??_esperar,f
  1443  0567  2D66               	goto	u967
  1444  0568  0BA1               	decfsz	??_esperar+1,f
  1445  0569  2D66               	goto	u967
  1446  056A  0BA2               	decfsz	??_esperar+2,f
  1447  056B  2D66               	goto	u967
  1448                           
  1449                           ;MAIN_CONTROL.c: 466:             break;
  1450  056C  0008               	return
  1451  056D                     l2835:	
  1452                           
  1453                           ;MAIN_CONTROL.c: 469:             _delay((unsigned long)((500)*(1000000/4000.0)));
  1454  056D  30A3               	movlw	163
  1455  056E  1283               	bcf	3,5	;RP0=0, select bank0
  1456  056F  1303               	bcf	3,6	;RP1=0, select bank0
  1457  0570  00A1               	movwf	??_esperar+1
  1458  0571  3054               	movlw	84
  1459  0572  00A0               	movwf	??_esperar
  1460  0573                     u977:	
  1461  0573  0BA0               	decfsz	??_esperar,f
  1462  0574  2D73               	goto	u977
  1463  0575  0BA1               	decfsz	??_esperar+1,f
  1464  0576  2D73               	goto	u977
  1465  0577  0000               	nop
  1466                           
  1467                           ;MAIN_CONTROL.c: 470:             break;
  1468  0578  0008               	return
  1469  0579                     l2837:	
  1470                           
  1471                           ;MAIN_CONTROL.c: 472:             _delay((unsigned long)((333)*(1000000/4000.0)));
  1472  0579  306D               	movlw	109
  1473  057A  1283               	bcf	3,5	;RP0=0, select bank0
  1474  057B  1303               	bcf	3,6	;RP1=0, select bank0
  1475  057C  00A1               	movwf	??_esperar+1
  1476  057D  301B               	movlw	27
  1477  057E  00A0               	movwf	??_esperar
  1478  057F                     u987:	
  1479  057F  0BA0               	decfsz	??_esperar,f
  1480  0580  2D7F               	goto	u987
  1481  0581  0BA1               	decfsz	??_esperar+1,f
  1482  0582  2D7F               	goto	u987
  1483  0583  2D84               	nop2
  1484                           
  1485                           ;MAIN_CONTROL.c: 473:             break;
  1486  0584  0008               	return
  1487  0585                     l2841:	
  1488  0585  0874               	movf	esperar@vel,w
  1489  0586  1283               	bcf	3,5	;RP0=0, select bank0
  1490  0587  1303               	bcf	3,6	;RP1=0, select bank0
  1491  0588  00A0               	movwf	??_esperar
  1492  0589  01A1               	clrf	??_esperar+1
  1493                           
  1494                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1495                           ; Switch size 1, requested type "simple"
  1496                           ; Number of cases is 1, Range of values is 0 to 0
  1497                           ; switch strategies available:
  1498                           ; Name         Instructions Cycles
  1499                           ; simple_byte            4     3 (average)
  1500                           ; direct_byte           11     8 (fixed)
  1501                           ; jumptable            260     6 (fixed)
  1502                           ;	Chosen strategy is simple_byte
  1503  058A  0821               	movf	??_esperar+1,w
  1504  058B  3A00               	xorlw	0	; case 0
  1505  058C  1903               	skipnz
  1506  058D  2D8F               	goto	l3673
  1507  058E  2D9A               	goto	l255
  1508  058F                     l3673:	
  1509                           
  1510                           ; Switch size 1, requested type "simple"
  1511                           ; Number of cases is 3, Range of values is 1 to 3
  1512                           ; switch strategies available:
  1513                           ; Name         Instructions Cycles
  1514                           ; simple_byte           10     6 (average)
  1515                           ; direct_byte           20    11 (fixed)
  1516                           ; jumptable            263     9 (fixed)
  1517                           ;	Chosen strategy is simple_byte
  1518  058F  0820               	movf	??_esperar,w
  1519  0590  3A01               	xorlw	1	; case 1
  1520  0591  1903               	skipnz
  1521  0592  2D5E               	goto	l2833
  1522  0593  3A03               	xorlw	3	; case 2
  1523  0594  1903               	skipnz
  1524  0595  2D6D               	goto	l2835
  1525  0596  3A01               	xorlw	1	; case 3
  1526  0597  1903               	skipnz
  1527  0598  2D79               	goto	l2837
  1528  0599  2D9A               	goto	l255
  1529  059A                     l255:	
  1530  059A  0008               	return
  1531  059B                     __end_of_esperar:	
  1532                           
  1533                           	psect	text5
  1534  0632                     __ptext5:	
  1535 ;; *************** function _dis_atr *****************
  1536 ;; Defined at:
  1537 ;;		line 317 in file "MAIN_CONTROL.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;		None
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1551 ;;      Params:         0       0       0       0       0
  1552 ;;      Locals:         0       0       0       0       0
  1553 ;;      Temps:          0       2       0       0       0
  1554 ;;      Totals:         0       2       0       0       0
  1555 ;;Total ram usage:        2 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    2
  1558 ;; This function calls:
  1559 ;;		_init_ADC
  1560 ;; This function is called by:
  1561 ;;		_main
  1562 ;;		_regresar
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           
  1567                           ;psect for function _dis_atr
  1568  0632                     _dis_atr:	
  1569                           
  1570                           ;MAIN_CONTROL.c: 318:     init_ADC(0x06);
  1571                           
  1572                           ;incstack = 0
  1573                           ; Regs used in _dis_atr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1574  0632  3006               	movlw	6
  1575  0633  120A  118A  249B  120A  118A  	fcall	_init_ADC
  1576                           
  1577                           ;MAIN_CONTROL.c: 319:     PIR1bits.ADIF = 0;
  1578  0638  1283               	bcf	3,5	;RP0=0, select bank0
  1579  0639  1303               	bcf	3,6	;RP1=0, select bank0
  1580  063A  130C               	bcf	12,6	;volatile
  1581                           
  1582                           ;MAIN_CONTROL.c: 320:     atras = ADRESH;
  1583  063B  081E               	movf	30,w	;volatile
  1584  063C  00A1               	movwf	??_dis_atr
  1585  063D  0821               	movf	??_dis_atr,w
  1586  063E  00F6               	movwf	_atras
  1587                           
  1588                           ;MAIN_CONTROL.c: 321:     _delay((unsigned long)((10)*(1000000/4000.0)));
  1589  063F  3004               	movlw	4
  1590  0640  1283               	bcf	3,5	;RP0=0, select bank0
  1591  0641  1303               	bcf	3,6	;RP1=0, select bank0
  1592  0642  00A2               	movwf	??_dis_atr+1
  1593  0643  303D               	movlw	61
  1594  0644  00A1               	movwf	??_dis_atr
  1595  0645                     u997:	
  1596  0645  0BA1               	decfsz	??_dis_atr,f
  1597  0646  2E45               	goto	u997
  1598  0647  0BA2               	decfsz	??_dis_atr+1,f
  1599  0648  2E45               	goto	u997
  1600  0649  0008               	return
  1601  064A                     __end_of_dis_atr:	
  1602                           
  1603                           	psect	text6
  1604  064A                     __ptext6:	
  1605 ;; *************** function _dis_ade *****************
  1606 ;; Defined at:
  1607 ;;		line 310 in file "MAIN_CONTROL.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;		None
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;		None
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1621 ;;      Params:         0       0       0       0       0
  1622 ;;      Locals:         0       0       0       0       0
  1623 ;;      Temps:          0       2       0       0       0
  1624 ;;      Totals:         0       2       0       0       0
  1625 ;;Total ram usage:        2 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; Hardware stack levels required when called:    2
  1628 ;; This function calls:
  1629 ;;		_init_ADC
  1630 ;; This function is called by:
  1631 ;;		_main
  1632 ;;		_regresar
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           
  1637                           ;psect for function _dis_ade
  1638  064A                     _dis_ade:	
  1639                           
  1640                           ;MAIN_CONTROL.c: 311:     init_ADC(0x05);
  1641                           
  1642                           ;incstack = 0
  1643                           ; Regs used in _dis_ade: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1644  064A  3005               	movlw	5
  1645  064B  120A  118A  249B  120A  118A  	fcall	_init_ADC
  1646                           
  1647                           ;MAIN_CONTROL.c: 312:     PIR1bits.ADIF = 0;
  1648  0650  1283               	bcf	3,5	;RP0=0, select bank0
  1649  0651  1303               	bcf	3,6	;RP1=0, select bank0
  1650  0652  130C               	bcf	12,6	;volatile
  1651                           
  1652                           ;MAIN_CONTROL.c: 313:     adelante = ADRESH;
  1653  0653  081E               	movf	30,w	;volatile
  1654  0654  00A1               	movwf	??_dis_ade
  1655  0655  0821               	movf	??_dis_ade,w
  1656  0656  00B0               	movwf	_adelante
  1657                           
  1658                           ;MAIN_CONTROL.c: 314:     _delay((unsigned long)((10)*(1000000/4000.0)));
  1659  0657  3004               	movlw	4
  1660  0658  1283               	bcf	3,5	;RP0=0, select bank0
  1661  0659  1303               	bcf	3,6	;RP1=0, select bank0
  1662  065A  00A2               	movwf	??_dis_ade+1
  1663  065B  303D               	movlw	61
  1664  065C  00A1               	movwf	??_dis_ade
  1665  065D                     u1007:	
  1666  065D  0BA1               	decfsz	??_dis_ade,f
  1667  065E  2E5D               	goto	u1007
  1668  065F  0BA2               	decfsz	??_dis_ade+1,f
  1669  0660  2E5D               	goto	u1007
  1670  0661  0008               	return
  1671  0662                     __end_of_dis_ade:	
  1672                           
  1673                           	psect	text7
  1674  0319                     __ptext7:	
  1675 ;; *************** function _obstaculo *****************
  1676 ;; Defined at:
  1677 ;;		line 235 in file "MAIN_CONTROL.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2, status,0
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1691 ;;      Params:         0       0       0       0       0
  1692 ;;      Locals:         0       0       0       0       0
  1693 ;;      Temps:          0       3       0       0       0
  1694 ;;      Totals:         0       3       0       0       0
  1695 ;;Total ram usage:        3 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    1
  1698 ;; This function calls:
  1699 ;;		Nothing
  1700 ;; This function is called by:
  1701 ;;		_main
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           
  1706                           ;psect for function _obstaculo
  1707  0319                     _obstaculo:	
  1708                           
  1709                           ;MAIN_CONTROL.c: 236:     PORTD = 0;
  1710                           
  1711                           ;incstack = 0
  1712                           ; Regs used in _obstaculo: [wreg+status,2+status,0]
  1713  0319  1283               	bcf	3,5	;RP0=0, select bank0
  1714  031A  1303               	bcf	3,6	;RP1=0, select bank0
  1715  031B  0188               	clrf	8	;volatile
  1716                           
  1717                           ;MAIN_CONTROL.c: 237:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  1718  031C  3003               	movlw	3
  1719  031D  1283               	bcf	3,5	;RP0=0, select bank0
  1720  031E  1303               	bcf	3,6	;RP1=0, select bank0
  1721  031F  00A2               	movwf	??_obstaculo+2
  1722  0320  308A               	movlw	138
  1723  0321  00A1               	movwf	??_obstaculo+1
  1724  0322  3055               	movlw	85
  1725  0323  00A0               	movwf	??_obstaculo
  1726  0324                     u1017:	
  1727  0324  0BA0               	decfsz	??_obstaculo,f
  1728  0325  2B24               	goto	u1017
  1729  0326  0BA1               	decfsz	??_obstaculo+1,f
  1730  0327  2B24               	goto	u1017
  1731  0328  0BA2               	decfsz	??_obstaculo+2,f
  1732  0329  2B24               	goto	u1017
  1733                           
  1734                           ;MAIN_CONTROL.c: 238:     PORTD = 0b01100110;
  1735  032A  3066               	movlw	102
  1736  032B  1283               	bcf	3,5	;RP0=0, select bank0
  1737  032C  1303               	bcf	3,6	;RP1=0, select bank0
  1738  032D  0088               	movwf	8	;volatile
  1739                           
  1740                           ;MAIN_CONTROL.c: 239:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  1741  032E  3003               	movlw	3
  1742  032F  1283               	bcf	3,5	;RP0=0, select bank0
  1743  0330  1303               	bcf	3,6	;RP1=0, select bank0
  1744  0331  00A2               	movwf	??_obstaculo+2
  1745  0332  308A               	movlw	138
  1746  0333  00A1               	movwf	??_obstaculo+1
  1747  0334  3055               	movlw	85
  1748  0335  00A0               	movwf	??_obstaculo
  1749  0336                     u1027:	
  1750  0336  0BA0               	decfsz	??_obstaculo,f
  1751  0337  2B36               	goto	u1027
  1752  0338  0BA1               	decfsz	??_obstaculo+1,f
  1753  0339  2B36               	goto	u1027
  1754  033A  0BA2               	decfsz	??_obstaculo+2,f
  1755  033B  2B36               	goto	u1027
  1756                           
  1757                           ;MAIN_CONTROL.c: 240:     PORTD = 0;
  1758  033C  1283               	bcf	3,5	;RP0=0, select bank0
  1759  033D  1303               	bcf	3,6	;RP1=0, select bank0
  1760  033E  0188               	clrf	8	;volatile
  1761                           
  1762                           ;MAIN_CONTROL.c: 241:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  1763  033F  3003               	movlw	3
  1764  0340  1283               	bcf	3,5	;RP0=0, select bank0
  1765  0341  1303               	bcf	3,6	;RP1=0, select bank0
  1766  0342  00A2               	movwf	??_obstaculo+2
  1767  0343  308A               	movlw	138
  1768  0344  00A1               	movwf	??_obstaculo+1
  1769  0345  3055               	movlw	85
  1770  0346  00A0               	movwf	??_obstaculo
  1771  0347                     u1037:	
  1772  0347  0BA0               	decfsz	??_obstaculo,f
  1773  0348  2B47               	goto	u1037
  1774  0349  0BA1               	decfsz	??_obstaculo+1,f
  1775  034A  2B47               	goto	u1037
  1776  034B  0BA2               	decfsz	??_obstaculo+2,f
  1777  034C  2B47               	goto	u1037
  1778                           
  1779                           ;MAIN_CONTROL.c: 242:     PORTD = 0b10101010;
  1780  034D  30AA               	movlw	170
  1781  034E  1283               	bcf	3,5	;RP0=0, select bank0
  1782  034F  1303               	bcf	3,6	;RP1=0, select bank0
  1783  0350  0088               	movwf	8	;volatile
  1784                           
  1785                           ;MAIN_CONTROL.c: 243:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  1786  0351  3003               	movlw	3
  1787  0352  1283               	bcf	3,5	;RP0=0, select bank0
  1788  0353  1303               	bcf	3,6	;RP1=0, select bank0
  1789  0354  00A2               	movwf	??_obstaculo+2
  1790  0355  308A               	movlw	138
  1791  0356  00A1               	movwf	??_obstaculo+1
  1792  0357  3055               	movlw	85
  1793  0358  00A0               	movwf	??_obstaculo
  1794  0359                     u1047:	
  1795  0359  0BA0               	decfsz	??_obstaculo,f
  1796  035A  2B59               	goto	u1047
  1797  035B  0BA1               	decfsz	??_obstaculo+1,f
  1798  035C  2B59               	goto	u1047
  1799  035D  0BA2               	decfsz	??_obstaculo+2,f
  1800  035E  2B59               	goto	u1047
  1801                           
  1802                           ;MAIN_CONTROL.c: 244:     PORTD = 0;
  1803  035F  1283               	bcf	3,5	;RP0=0, select bank0
  1804  0360  1303               	bcf	3,6	;RP1=0, select bank0
  1805  0361  0188               	clrf	8	;volatile
  1806                           
  1807                           ;MAIN_CONTROL.c: 245:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  1808  0362  3003               	movlw	3
  1809  0363  1283               	bcf	3,5	;RP0=0, select bank0
  1810  0364  1303               	bcf	3,6	;RP1=0, select bank0
  1811  0365  00A2               	movwf	??_obstaculo+2
  1812  0366  308A               	movlw	138
  1813  0367  00A1               	movwf	??_obstaculo+1
  1814  0368  3055               	movlw	85
  1815  0369  00A0               	movwf	??_obstaculo
  1816  036A                     u1057:	
  1817  036A  0BA0               	decfsz	??_obstaculo,f
  1818  036B  2B6A               	goto	u1057
  1819  036C  0BA1               	decfsz	??_obstaculo+1,f
  1820  036D  2B6A               	goto	u1057
  1821  036E  0BA2               	decfsz	??_obstaculo+2,f
  1822  036F  2B6A               	goto	u1057
  1823                           
  1824                           ;MAIN_CONTROL.c: 246:     PORTD = 0b10011001;
  1825  0370  3099               	movlw	153
  1826  0371  1283               	bcf	3,5	;RP0=0, select bank0
  1827  0372  1303               	bcf	3,6	;RP1=0, select bank0
  1828  0373  0088               	movwf	8	;volatile
  1829                           
  1830                           ;MAIN_CONTROL.c: 247:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  1831  0374  3003               	movlw	3
  1832  0375  1283               	bcf	3,5	;RP0=0, select bank0
  1833  0376  1303               	bcf	3,6	;RP1=0, select bank0
  1834  0377  00A2               	movwf	??_obstaculo+2
  1835  0378  308A               	movlw	138
  1836  0379  00A1               	movwf	??_obstaculo+1
  1837  037A  3055               	movlw	85
  1838  037B  00A0               	movwf	??_obstaculo
  1839  037C                     u1067:	
  1840  037C  0BA0               	decfsz	??_obstaculo,f
  1841  037D  2B7C               	goto	u1067
  1842  037E  0BA1               	decfsz	??_obstaculo+1,f
  1843  037F  2B7C               	goto	u1067
  1844  0380  0BA2               	decfsz	??_obstaculo+2,f
  1845  0381  2B7C               	goto	u1067
  1846                           
  1847                           ;MAIN_CONTROL.c: 248:     PORTD = 0;
  1848  0382  1283               	bcf	3,5	;RP0=0, select bank0
  1849  0383  1303               	bcf	3,6	;RP1=0, select bank0
  1850  0384  0188               	clrf	8	;volatile
  1851                           
  1852                           ;MAIN_CONTROL.c: 249:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  1853  0385  3003               	movlw	3
  1854  0386  1283               	bcf	3,5	;RP0=0, select bank0
  1855  0387  1303               	bcf	3,6	;RP1=0, select bank0
  1856  0388  00A2               	movwf	??_obstaculo+2
  1857  0389  308A               	movlw	138
  1858  038A  00A1               	movwf	??_obstaculo+1
  1859  038B  3055               	movlw	85
  1860  038C  00A0               	movwf	??_obstaculo
  1861  038D                     u1077:	
  1862  038D  0BA0               	decfsz	??_obstaculo,f
  1863  038E  2B8D               	goto	u1077
  1864  038F  0BA1               	decfsz	??_obstaculo+1,f
  1865  0390  2B8D               	goto	u1077
  1866  0391  0BA2               	decfsz	??_obstaculo+2,f
  1867  0392  2B8D               	goto	u1077
  1868                           
  1869                           ;MAIN_CONTROL.c: 250:     cont_obs++;
  1870  0393  3001               	movlw	1
  1871  0394  1283               	bcf	3,5	;RP0=0, select bank0
  1872  0395  1303               	bcf	3,6	;RP1=0, select bank0
  1873  0396  00A0               	movwf	??_obstaculo
  1874  0397  0820               	movf	??_obstaculo,w
  1875  0398  07B2               	addwf	_cont_obs,f
  1876                           
  1877                           ;MAIN_CONTROL.c: 251:     PORTA++;
  1878  0399  3001               	movlw	1
  1879  039A  00A0               	movwf	??_obstaculo
  1880  039B  0820               	movf	??_obstaculo,w
  1881  039C  0785               	addwf	5,f	;volatile
  1882  039D  0008               	return
  1883  039E                     __end_of_obstaculo:	
  1884                           
  1885                           	psect	text8
  1886  059B                     __ptext8:	
  1887 ;; *************** function _config *****************
  1888 ;; Defined at:
  1889 ;;		line 291 in file "MAIN_CONTROL.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;		None
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;		None
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1903 ;;      Params:         0       0       0       0       0
  1904 ;;      Locals:         0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0
  1906 ;;      Totals:         0       0       0       0       0
  1907 ;;Total ram usage:        0 bytes
  1908 ;; Hardware stack levels used:    1
  1909 ;; Hardware stack levels required when called:    2
  1910 ;; This function calls:
  1911 ;;		_OSC_config
  1912 ;;		_init_ADC
  1913 ;;		_init_PWM_2
  1914 ;; This function is called by:
  1915 ;;		_main
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           
  1920                           ;psect for function _config
  1921  059B                     _config:	
  1922                           
  1923                           ;MAIN_CONTROL.c: 292:     OSC_config(1000000);
  1924                           
  1925                           ;incstack = 0
  1926                           ; Regs used in _config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1927  059B  3000               	movlw	0
  1928  059C  1283               	bcf	3,5	;RP0=0, select bank0
  1929  059D  1303               	bcf	3,6	;RP1=0, select bank0
  1930  059E  00A3               	movwf	OSC_config@frecuencia+3
  1931  059F  300F               	movlw	15
  1932  05A0  00A2               	movwf	OSC_config@frecuencia+2
  1933  05A1  3042               	movlw	66
  1934  05A2  00A1               	movwf	OSC_config@frecuencia+1
  1935  05A3  3040               	movlw	64
  1936  05A4  00A0               	movwf	OSC_config@frecuencia
  1937  05A5  120A  118A  2125  120A  118A  	fcall	_OSC_config
  1938                           
  1939                           ;MAIN_CONTROL.c: 293:     PORTD = 0;
  1940  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  1941  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  1942  05AC  0188               	clrf	8	;volatile
  1943                           
  1944                           ;MAIN_CONTROL.c: 294:     TRISD = 0;
  1945  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  1946  05AE  1303               	bcf	3,6	;RP1=0, select bank1
  1947  05AF  0188               	clrf	8	;volatile
  1948                           
  1949                           ;MAIN_CONTROL.c: 295:     PORTB = 0;
  1950  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  1951  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  1952  05B2  0186               	clrf	6	;volatile
  1953                           
  1954                           ;MAIN_CONTROL.c: 296:     TRISB = 0;
  1955  05B3  1683               	bsf	3,5	;RP0=1, select bank1
  1956  05B4  1303               	bcf	3,6	;RP1=0, select bank1
  1957  05B5  0186               	clrf	6	;volatile
  1958                           
  1959                           ;MAIN_CONTROL.c: 297:     ANSELH = 0;
  1960  05B6  1683               	bsf	3,5	;RP0=1, select bank3
  1961  05B7  1703               	bsf	3,6	;RP1=1, select bank3
  1962  05B8  0189               	clrf	9	;volatile
  1963                           
  1964                           ;MAIN_CONTROL.c: 298:     PORTE = 0b1111;
  1965  05B9  300F               	movlw	15
  1966  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  1967  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  1968  05BC  0089               	movwf	9	;volatile
  1969                           
  1970                           ;MAIN_CONTROL.c: 299:     TRISE = 0b1111;
  1971  05BD  300F               	movlw	15
  1972  05BE  1683               	bsf	3,5	;RP0=1, select bank1
  1973  05BF  1303               	bcf	3,6	;RP1=0, select bank1
  1974  05C0  0089               	movwf	9	;volatile
  1975                           
  1976                           ;MAIN_CONTROL.c: 300:     PORTA = 0;
  1977  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  1978  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  1979  05C3  0185               	clrf	5	;volatile
  1980                           
  1981                           ;MAIN_CONTROL.c: 301:     TRISA = 0;
  1982  05C4  1683               	bsf	3,5	;RP0=1, select bank1
  1983  05C5  1303               	bcf	3,6	;RP1=0, select bank1
  1984  05C6  0185               	clrf	5	;volatile
  1985                           
  1986                           ;MAIN_CONTROL.c: 302:     ANSEL = 0b01100000;
  1987  05C7  3060               	movlw	96
  1988  05C8  1683               	bsf	3,5	;RP0=1, select bank3
  1989  05C9  1703               	bsf	3,6	;RP1=1, select bank3
  1990  05CA  0088               	movwf	8	;volatile
  1991                           
  1992                           ;MAIN_CONTROL.c: 303:     init_PWM_2();
  1993  05CB  120A  118A  25FC  120A  118A  	fcall	_init_PWM_2
  1994                           
  1995                           ;MAIN_CONTROL.c: 304:     init_ADC(5);
  1996  05D0  3005               	movlw	5
  1997  05D1  120A  118A  249B   	fcall	_init_ADC
  1998  05D4  0008               	return
  1999  05D5                     __end_of_config:	
  2000                           
  2001                           	psect	text9
  2002  05FC                     __ptext9:	
  2003 ;; *************** function _init_PWM_2 *****************
  2004 ;; Defined at:
  2005 ;;		line 477 in file "MAIN_CONTROL.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;		None
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;		None
  2010 ;; Return value:  Size  Location     Type
  2011 ;;                  1    wreg      void 
  2012 ;; Registers used:
  2013 ;;		wreg
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2019 ;;      Params:         0       0       0       0       0
  2020 ;;      Locals:         0       0       0       0       0
  2021 ;;      Temps:          0       0       0       0       0
  2022 ;;      Totals:         0       0       0       0       0
  2023 ;;Total ram usage:        0 bytes
  2024 ;; Hardware stack levels used:    1
  2025 ;; Hardware stack levels required when called:    1
  2026 ;; This function calls:
  2027 ;;		Nothing
  2028 ;; This function is called by:
  2029 ;;		_config
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           
  2034                           ;psect for function _init_PWM_2
  2035  05FC                     _init_PWM_2:	
  2036                           
  2037                           ;MAIN_CONTROL.c: 478:     TRISCbits.TRISC2 = 1;
  2038                           
  2039                           ;incstack = 0
  2040                           ; Regs used in _init_PWM_2: [wreg]
  2041  05FC  1683               	bsf	3,5	;RP0=1, select bank1
  2042  05FD  1303               	bcf	3,6	;RP1=0, select bank1
  2043  05FE  1507               	bsf	7,2	;volatile
  2044                           
  2045                           ;MAIN_CONTROL.c: 481:     PR2 = 200;
  2046  05FF  30C8               	movlw	200
  2047  0600  0092               	movwf	18	;volatile
  2048                           
  2049                           ;MAIN_CONTROL.c: 483:     CCP1CONbits.CCP1M3 = 1;
  2050  0601  1283               	bcf	3,5	;RP0=0, select bank0
  2051  0602  1303               	bcf	3,6	;RP1=0, select bank0
  2052  0603  1597               	bsf	23,3	;volatile
  2053                           
  2054                           ;MAIN_CONTROL.c: 484:     CCP1CONbits.CCP1M2 = 1;
  2055  0604  1517               	bsf	23,2	;volatile
  2056                           
  2057                           ;MAIN_CONTROL.c: 485:     CCP1CONbits.CCP1M1 = 0;
  2058  0605  1097               	bcf	23,1	;volatile
  2059                           
  2060                           ;MAIN_CONTROL.c: 486:     CCP1CONbits.CCP1M0 = 0;
  2061  0606  1017               	bcf	23,0	;volatile
  2062                           
  2063                           ;MAIN_CONTROL.c: 488:     CCP1CONbits.P1M1 = 0;
  2064  0607  1397               	bcf	23,7	;volatile
  2065                           
  2066                           ;MAIN_CONTROL.c: 489:     CCP1CONbits.P1M0 = 0;
  2067  0608  1317               	bcf	23,6	;volatile
  2068                           
  2069                           ;MAIN_CONTROL.c: 492:     CCPR2L = 0b00011011;
  2070  0609  301B               	movlw	27
  2071  060A  009B               	movwf	27	;volatile
  2072                           
  2073                           ;MAIN_CONTROL.c: 493:     CCP1CONbits.DC1B0 = 1;
  2074  060B  1617               	bsf	23,4	;volatile
  2075                           
  2076                           ;MAIN_CONTROL.c: 494:     CCP1CONbits.DC1B1 = 1;
  2077  060C  1697               	bsf	23,5	;volatile
  2078                           
  2079                           ;MAIN_CONTROL.c: 496:     PIR1bits.TMR2IF = 0;
  2080  060D  108C               	bcf	12,1	;volatile
  2081                           
  2082                           ;MAIN_CONTROL.c: 497:     T2CONbits.T2CKPS1 = 1;
  2083  060E  1492               	bsf	18,1	;volatile
  2084                           
  2085                           ;MAIN_CONTROL.c: 498:     T2CONbits.T2CKPS0 = 1;
  2086  060F  1412               	bsf	18,0	;volatile
  2087                           
  2088                           ;MAIN_CONTROL.c: 500:     T2CONbits.TMR2ON = 1;
  2089  0610  1512               	bsf	18,2	;volatile
  2090  0611                     l258:	
  2091                           ;MAIN_CONTROL.c: 504:     }
  2092                           
  2093                           ;MAIN_CONTROL.c: 502:     while(PIR1bits.TMR2IF == 1){
  2094                           
  2095                           
  2096                           ;MAIN_CONTROL.c: 502:     while(PIR1bits.TMR2IF == 1){
  2097  0611  1C8C               	btfss	12,1	;volatile
  2098  0612  2E15               	goto	l260
  2099                           
  2100                           ;MAIN_CONTROL.c: 503:         PIR1bits.TMR2IF = 0;
  2101  0613  108C               	bcf	12,1	;volatile
  2102  0614  2E11               	goto	l258
  2103  0615                     l260:	
  2104                           
  2105                           ;MAIN_CONTROL.c: 506:     TRISCbits.TRISC2 = 0;
  2106  0615  1683               	bsf	3,5	;RP0=1, select bank1
  2107  0616  1303               	bcf	3,6	;RP1=0, select bank1
  2108  0617  1107               	bcf	7,2	;volatile
  2109  0618  0008               	return
  2110  0619                     __end_of_init_PWM_2:	
  2111                           
  2112                           	psect	text10
  2113  049B                     __ptext10:	
  2114 ;; *************** function _init_ADC *****************
  2115 ;; Defined at:
  2116 ;;		line 323 in file "MAIN_CONTROL.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  channel         1    wreg     unsigned char 
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;  channel         1    0[BANK0 ] unsigned char 
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2130 ;;      Params:         0       0       0       0       0
  2131 ;;      Locals:         0       1       0       0       0
  2132 ;;      Temps:          2       0       0       0       0
  2133 ;;      Totals:         2       1       0       0       0
  2134 ;;Total ram usage:        3 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:    1
  2137 ;; This function calls:
  2138 ;;		Nothing
  2139 ;; This function is called by:
  2140 ;;		_config
  2141 ;;		_dis_ade
  2142 ;;		_dis_atr
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           
  2147                           ;psect for function _init_ADC
  2148  049B                     _init_ADC:	
  2149                           
  2150                           ;incstack = 0
  2151                           ; Regs used in _init_ADC: [wreg-fsr0h+status,2+status,0]
  2152                           ;init_ADC@channel stored from wreg
  2153  049B  1283               	bcf	3,5	;RP0=0, select bank0
  2154  049C  1303               	bcf	3,6	;RP1=0, select bank0
  2155  049D  00A0               	movwf	init_ADC@channel
  2156                           
  2157                           ;MAIN_CONTROL.c: 324:     ADCON0bits.ADCS1 = 0;
  2158  049E  139F               	bcf	31,7	;volatile
  2159                           
  2160                           ;MAIN_CONTROL.c: 325:     ADCON0bits.ADCS0 = 1;
  2161  049F  171F               	bsf	31,6	;volatile
  2162                           
  2163                           ;MAIN_CONTROL.c: 328:     switch(channel){
  2164  04A0  2CD0               	goto	l2809
  2165  04A1                     l218:	
  2166                           ;MAIN_CONTROL.c: 329:         case 0:
  2167                           
  2168  04A1  2CCB               	goto	l235
  2169  04A2                     l220:	
  2170                           ;MAIN_CONTROL.c: 335:         case 1:
  2171                           
  2172                           ;MAIN_CONTROL.c: 334:             break;
  2173                           
  2174                           ;MAIN_CONTROL.c: 333:             ADCON0bits.CHS0 = 0;
  2175                           
  2176                           ;MAIN_CONTROL.c: 332:             ADCON0bits.CHS1 = 0;
  2177                           
  2178                           ;MAIN_CONTROL.c: 331:             ADCON0bits.CHS2 = 0;
  2179                           
  2180                           ;MAIN_CONTROL.c: 330:             ADCON0bits.CHS3 = 0;
  2181                           
  2182                           
  2183                           ;MAIN_CONTROL.c: 336:             ADCON0bits.CHS3 = 0;
  2184  04A2  129F               	bcf	31,5	;volatile
  2185  04A3  2CB3               	goto	L30
  2186  04A4                     l221:	
  2187                           ;MAIN_CONTROL.c: 341:         case 2:
  2188                           
  2189                           ;MAIN_CONTROL.c: 340:             break;
  2190                           
  2191                           ;MAIN_CONTROL.c: 339:             ADCON0bits.CHS0 = 1;
  2192                           
  2193                           ;MAIN_CONTROL.c: 338:             ADCON0bits.CHS1 = 0;
  2194                           
  2195                           ;MAIN_CONTROL.c: 337:             ADCON0bits.CHS2 = 0;
  2196                           
  2197                           
  2198                           ;MAIN_CONTROL.c: 342:             ADCON0bits.CHS3 = 0;
  2199  04A4  129F               	bcf	31,5	;volatile
  2200  04A5  2CB6               	goto	L31
  2201  04A6                     l222:	
  2202                           ;MAIN_CONTROL.c: 347:         case 3:
  2203                           
  2204                           ;MAIN_CONTROL.c: 346:             break;
  2205                           
  2206                           ;MAIN_CONTROL.c: 345:             ADCON0bits.CHS0 = 0;
  2207                           
  2208                           ;MAIN_CONTROL.c: 344:             ADCON0bits.CHS1 = 1;
  2209                           
  2210                           ;MAIN_CONTROL.c: 343:             ADCON0bits.CHS2 = 0;
  2211                           
  2212                           
  2213                           ;MAIN_CONTROL.c: 348:             ADCON0bits.CHS3 = 0;
  2214  04A6  129F               	bcf	31,5	;volatile
  2215  04A7  2CB9               	goto	L26
  2216  04A8                     l223:	
  2217                           ;MAIN_CONTROL.c: 353:         case 4:
  2218                           
  2219                           ;MAIN_CONTROL.c: 352:             break;
  2220                           
  2221                           ;MAIN_CONTROL.c: 351:             ADCON0bits.CHS0 = 1;
  2222                           
  2223                           ;MAIN_CONTROL.c: 350:             ADCON0bits.CHS1 = 1;
  2224                           
  2225                           ;MAIN_CONTROL.c: 349:             ADCON0bits.CHS2 = 0;
  2226                           
  2227                           
  2228                           ;MAIN_CONTROL.c: 354:             ADCON0bits.CHS3 = 0;
  2229  04A8  129F               	bcf	31,5	;volatile
  2230  04A9  2CBC               	goto	L27
  2231  04AA                     l224:	
  2232                           ;MAIN_CONTROL.c: 359:         case 5:
  2233                           
  2234                           ;MAIN_CONTROL.c: 358:             break;
  2235                           
  2236                           ;MAIN_CONTROL.c: 357:             ADCON0bits.CHS0 = 0;
  2237                           
  2238                           ;MAIN_CONTROL.c: 356:             ADCON0bits.CHS1 = 0;
  2239                           
  2240                           ;MAIN_CONTROL.c: 355:             ADCON0bits.CHS2 = 1;
  2241                           
  2242                           
  2243                           ;MAIN_CONTROL.c: 360:             ADCON0bits.CHS3 = 0;
  2244  04AA  129F               	bcf	31,5	;volatile
  2245  04AB  2CBF               	goto	L28
  2246  04AC                     l225:	
  2247                           ;MAIN_CONTROL.c: 365:         case 6:
  2248                           
  2249                           ;MAIN_CONTROL.c: 364:             break;
  2250                           
  2251                           ;MAIN_CONTROL.c: 363:             ADCON0bits.CHS0 = 1;
  2252                           
  2253                           ;MAIN_CONTROL.c: 362:             ADCON0bits.CHS1 = 0;
  2254                           
  2255                           ;MAIN_CONTROL.c: 361:             ADCON0bits.CHS2 = 1;
  2256                           
  2257                           
  2258                           ;MAIN_CONTROL.c: 366:             ADCON0bits.CHS3 = 0;
  2259  04AC  129F               	bcf	31,5	;volatile
  2260  04AD  2CC3               	goto	L29
  2261  04AE                     l226:	
  2262                           ;MAIN_CONTROL.c: 371:         case 7:
  2263                           
  2264                           ;MAIN_CONTROL.c: 370:             break;
  2265                           
  2266                           ;MAIN_CONTROL.c: 369:             ADCON0bits.CHS0 = 0;
  2267                           
  2268                           ;MAIN_CONTROL.c: 368:             ADCON0bits.CHS1 = 1;
  2269                           
  2270                           ;MAIN_CONTROL.c: 367:             ADCON0bits.CHS2 = 1;
  2271                           
  2272                           
  2273                           ;MAIN_CONTROL.c: 372:             ADCON0bits.CHS3 = 0;
  2274  04AE  129F               	bcf	31,5	;volatile
  2275  04AF  2CC7               	goto	L16
  2276  04B0                     l227:	
  2277                           ;MAIN_CONTROL.c: 377:         case 8:
  2278                           
  2279                           ;MAIN_CONTROL.c: 376:             break;
  2280                           
  2281                           ;MAIN_CONTROL.c: 375:             ADCON0bits.CHS0 = 1;
  2282                           
  2283                           ;MAIN_CONTROL.c: 374:             ADCON0bits.CHS1 = 1;
  2284                           
  2285                           ;MAIN_CONTROL.c: 373:             ADCON0bits.CHS2 = 1;
  2286                           
  2287                           
  2288                           ;MAIN_CONTROL.c: 378:             ADCON0bits.CHS3 = 1;
  2289  04B0  169F               	bsf	31,5	;volatile
  2290  04B1  2CCC               	goto	L17
  2291  04B2                     l228:	
  2292                           ;MAIN_CONTROL.c: 383:         case 9:
  2293                           
  2294                           ;MAIN_CONTROL.c: 382:             break;
  2295                           
  2296                           ;MAIN_CONTROL.c: 381:             ADCON0bits.CHS0 = 0;
  2297                           
  2298                           ;MAIN_CONTROL.c: 380:             ADCON0bits.CHS1 = 0;
  2299                           
  2300                           ;MAIN_CONTROL.c: 379:             ADCON0bits.CHS2 = 0;
  2301                           
  2302                           
  2303                           ;MAIN_CONTROL.c: 384:             ADCON0bits.CHS3 = 1;
  2304  04B2  169F               	bsf	31,5	;volatile
  2305  04B3                     L30:	
  2306                           
  2307                           ;MAIN_CONTROL.c: 385:             ADCON0bits.CHS2 = 0;
  2308  04B3  121F               	bcf	31,4	;volatile
  2309  04B4  2CC0               	goto	L24
  2310  04B5                     l229:	
  2311                           ;MAIN_CONTROL.c: 389:         case 10:
  2312                           
  2313                           ;MAIN_CONTROL.c: 388:             break;
  2314                           
  2315                           ;MAIN_CONTROL.c: 387:             ADCON0bits.CHS0 = 1;
  2316                           
  2317                           ;MAIN_CONTROL.c: 386:             ADCON0bits.CHS1 = 0;
  2318                           
  2319                           
  2320                           ;MAIN_CONTROL.c: 390:             ADCON0bits.CHS3 = 1;
  2321  04B5  169F               	bsf	31,5	;volatile
  2322  04B6                     L31:	
  2323                           
  2324                           ;MAIN_CONTROL.c: 391:             ADCON0bits.CHS2 = 0;
  2325  04B6  121F               	bcf	31,4	;volatile
  2326  04B7  2CC4               	goto	L25
  2327  04B8                     l230:	
  2328                           ;MAIN_CONTROL.c: 395:         case 11:
  2329                           
  2330                           ;MAIN_CONTROL.c: 394:             break;
  2331                           
  2332                           ;MAIN_CONTROL.c: 393:             ADCON0bits.CHS0 = 0;
  2333                           
  2334                           ;MAIN_CONTROL.c: 392:             ADCON0bits.CHS1 = 1;
  2335                           
  2336                           
  2337                           ;MAIN_CONTROL.c: 396:             ADCON0bits.CHS3 = 1;
  2338  04B8  169F               	bsf	31,5	;volatile
  2339  04B9                     L26:	
  2340                           
  2341                           ;MAIN_CONTROL.c: 397:             ADCON0bits.CHS2 = 0;
  2342  04B9  121F               	bcf	31,4	;volatile
  2343  04BA  2CC8               	goto	L18
  2344  04BB                     l231:	
  2345                           ;MAIN_CONTROL.c: 401:         case 12:
  2346                           
  2347                           ;MAIN_CONTROL.c: 400:             break;
  2348                           
  2349                           ;MAIN_CONTROL.c: 399:             ADCON0bits.CHS0 = 1;
  2350                           
  2351                           ;MAIN_CONTROL.c: 398:             ADCON0bits.CHS1 = 1;
  2352                           
  2353                           
  2354                           ;MAIN_CONTROL.c: 402:             ADCON0bits.CHS3 = 1;
  2355  04BB  169F               	bsf	31,5	;volatile
  2356  04BC                     L27:	
  2357                           
  2358                           ;MAIN_CONTROL.c: 403:             ADCON0bits.CHS2 = 1;
  2359  04BC  161F               	bsf	31,4	;volatile
  2360  04BD  2CCD               	goto	L19
  2361  04BE                     l232:	
  2362                           ;MAIN_CONTROL.c: 407:         case 13:
  2363                           
  2364                           ;MAIN_CONTROL.c: 406:             break;
  2365                           
  2366                           ;MAIN_CONTROL.c: 405:             ADCON0bits.CHS0 = 0;
  2367                           
  2368                           ;MAIN_CONTROL.c: 404:             ADCON0bits.CHS1 = 0;
  2369                           
  2370                           
  2371                           ;MAIN_CONTROL.c: 408:             ADCON0bits.CHS3 = 1;
  2372  04BE  169F               	bsf	31,5	;volatile
  2373  04BF                     L28:	
  2374                           
  2375                           ;MAIN_CONTROL.c: 409:             ADCON0bits.CHS2 = 1;
  2376  04BF  161F               	bsf	31,4	;volatile
  2377  04C0                     L24:	
  2378                           
  2379                           ;MAIN_CONTROL.c: 410:             ADCON0bits.CHS1 = 0;
  2380  04C0  119F               	bcf	31,3	;volatile
  2381  04C1  2CC9               	goto	L14
  2382  04C2                     l233:	
  2383                           ;MAIN_CONTROL.c: 413:         case 14:
  2384                           
  2385                           ;MAIN_CONTROL.c: 412:             break;
  2386                           
  2387                           ;MAIN_CONTROL.c: 411:             ADCON0bits.CHS0 = 1;
  2388                           
  2389                           
  2390                           ;MAIN_CONTROL.c: 414:             ADCON0bits.CHS3 = 1;
  2391  04C2  169F               	bsf	31,5	;volatile
  2392  04C3                     L29:	
  2393                           
  2394                           ;MAIN_CONTROL.c: 415:             ADCON0bits.CHS2 = 1;
  2395  04C3  161F               	bsf	31,4	;volatile
  2396  04C4                     L25:	
  2397                           
  2398                           ;MAIN_CONTROL.c: 416:             ADCON0bits.CHS1 = 1;
  2399  04C4  159F               	bsf	31,3	;volatile
  2400  04C5  2CCE               	goto	L15
  2401  04C6                     l234:	
  2402                           ;MAIN_CONTROL.c: 419:         case 15:
  2403                           
  2404                           ;MAIN_CONTROL.c: 418:             break;
  2405                           
  2406                           ;MAIN_CONTROL.c: 417:             ADCON0bits.CHS0 = 0;
  2407                           
  2408                           
  2409                           ;MAIN_CONTROL.c: 420:             ADCON0bits.CHS3 = 1;
  2410  04C6  169F               	bsf	31,5	;volatile
  2411  04C7                     L16:	
  2412                           
  2413                           ;MAIN_CONTROL.c: 421:             ADCON0bits.CHS2 = 1;
  2414  04C7  161F               	bsf	31,4	;volatile
  2415  04C8                     L18:	
  2416                           
  2417                           ;MAIN_CONTROL.c: 422:             ADCON0bits.CHS1 = 1;
  2418  04C8  159F               	bsf	31,3	;volatile
  2419  04C9                     L14:	
  2420                           
  2421                           ;MAIN_CONTROL.c: 423:             ADCON0bits.CHS0 = 1;
  2422  04C9  151F               	bsf	31,2	;volatile
  2423                           
  2424                           ;MAIN_CONTROL.c: 424:             break;
  2425  04CA  2D0A               	goto	l219
  2426  04CB                     l235:	
  2427                           ;MAIN_CONTROL.c: 425:         default:
  2428                           
  2429                           
  2430                           ;MAIN_CONTROL.c: 426:             ADCON0bits.CHS3 = 0;
  2431  04CB  129F               	bcf	31,5	;volatile
  2432  04CC                     L17:	
  2433                           
  2434                           ;MAIN_CONTROL.c: 427:             ADCON0bits.CHS2 = 0;
  2435  04CC  121F               	bcf	31,4	;volatile
  2436  04CD                     L19:	
  2437                           
  2438                           ;MAIN_CONTROL.c: 428:             ADCON0bits.CHS1 = 0;
  2439  04CD  119F               	bcf	31,3	;volatile
  2440  04CE                     L15:	
  2441                           
  2442                           ;MAIN_CONTROL.c: 429:             ADCON0bits.CHS0 = 0;
  2443  04CE  111F               	bcf	31,2	;volatile
  2444                           
  2445                           ;MAIN_CONTROL.c: 430:             break;
  2446  04CF  2D0A               	goto	l219
  2447  04D0                     l2809:	
  2448  04D0  0820               	movf	init_ADC@channel,w
  2449  04D1  00F4               	movwf	??_init_ADC
  2450  04D2  01F5               	clrf	??_init_ADC+1
  2451                           
  2452                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2453                           ; Switch size 1, requested type "simple"
  2454                           ; Number of cases is 1, Range of values is 0 to 0
  2455                           ; switch strategies available:
  2456                           ; Name         Instructions Cycles
  2457                           ; simple_byte            4     3 (average)
  2458                           ; direct_byte           11     8 (fixed)
  2459                           ; jumptable            260     6 (fixed)
  2460                           ;	Chosen strategy is simple_byte
  2461  04D3  0875               	movf	??_init_ADC+1,w
  2462  04D4  3A00               	xorlw	0	; case 0
  2463  04D5  1903               	skipnz
  2464  04D6  2CD8               	goto	l3675
  2465  04D7  2CCB               	goto	l235
  2466  04D8                     l3675:	
  2467                           
  2468                           ; Switch size 1, requested type "simple"
  2469                           ; Number of cases is 16, Range of values is 0 to 15
  2470                           ; switch strategies available:
  2471                           ; Name         Instructions Cycles
  2472                           ; simple_byte           49    25 (average)
  2473                           ; direct_byte           56     8 (fixed)
  2474                           ; jumptable            260     6 (fixed)
  2475                           ;	Chosen strategy is simple_byte
  2476  04D8  0874               	movf	??_init_ADC,w
  2477  04D9  3A00               	xorlw	0	; case 0
  2478  04DA  1903               	skipnz
  2479  04DB  2CA1               	goto	l218
  2480  04DC  3A01               	xorlw	1	; case 1
  2481  04DD  1903               	skipnz
  2482  04DE  2CA2               	goto	l220
  2483  04DF  3A03               	xorlw	3	; case 2
  2484  04E0  1903               	skipnz
  2485  04E1  2CA4               	goto	l221
  2486  04E2  3A01               	xorlw	1	; case 3
  2487  04E3  1903               	skipnz
  2488  04E4  2CA6               	goto	l222
  2489  04E5  3A07               	xorlw	7	; case 4
  2490  04E6  1903               	skipnz
  2491  04E7  2CA8               	goto	l223
  2492  04E8  3A01               	xorlw	1	; case 5
  2493  04E9  1903               	skipnz
  2494  04EA  2CAA               	goto	l224
  2495  04EB  3A03               	xorlw	3	; case 6
  2496  04EC  1903               	skipnz
  2497  04ED  2CAC               	goto	l225
  2498  04EE  3A01               	xorlw	1	; case 7
  2499  04EF  1903               	skipnz
  2500  04F0  2CAE               	goto	l226
  2501  04F1  3A0F               	xorlw	15	; case 8
  2502  04F2  1903               	skipnz
  2503  04F3  2CB0               	goto	l227
  2504  04F4  3A01               	xorlw	1	; case 9
  2505  04F5  1903               	skipnz
  2506  04F6  2CB2               	goto	l228
  2507  04F7  3A03               	xorlw	3	; case 10
  2508  04F8  1903               	skipnz
  2509  04F9  2CB5               	goto	l229
  2510  04FA  3A01               	xorlw	1	; case 11
  2511  04FB  1903               	skipnz
  2512  04FC  2CB8               	goto	l230
  2513  04FD  3A07               	xorlw	7	; case 12
  2514  04FE  1903               	skipnz
  2515  04FF  2CBB               	goto	l231
  2516  0500  3A01               	xorlw	1	; case 13
  2517  0501  1903               	skipnz
  2518  0502  2CBE               	goto	l232
  2519  0503  3A03               	xorlw	3	; case 14
  2520  0504  1903               	skipnz
  2521  0505  2CC2               	goto	l233
  2522  0506  3A01               	xorlw	1	; case 15
  2523  0507  1903               	skipnz
  2524  0508  2CC6               	goto	l234
  2525  0509  2CCB               	goto	l235
  2526  050A                     l219:	
  2527                           
  2528                           ;MAIN_CONTROL.c: 433:     ADCON1bits.ADFM = 0;
  2529  050A  1683               	bsf	3,5	;RP0=1, select bank1
  2530  050B  1303               	bcf	3,6	;RP1=0, select bank1
  2531  050C  139F               	bcf	31,7	;volatile
  2532                           
  2533                           ;MAIN_CONTROL.c: 434:     ADCON1bits.VCFG1 = 0;
  2534  050D  129F               	bcf	31,5	;volatile
  2535                           
  2536                           ;MAIN_CONTROL.c: 435:     ADCON1bits.VCFG0 = 0;
  2537  050E  121F               	bcf	31,4	;volatile
  2538                           
  2539                           ;MAIN_CONTROL.c: 436:     ADCON0bits.ADON = 1;
  2540  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2541  0510  1303               	bcf	3,6	;RP1=0, select bank0
  2542  0511  141F               	bsf	31,0	;volatile
  2543                           
  2544                           ;MAIN_CONTROL.c: 438:     PIR1bits.ADIF = 0;
  2545  0512  130C               	bcf	12,6	;volatile
  2546                           
  2547                           ;MAIN_CONTROL.c: 440:     ADCON0bits.GO = 1;
  2548  0513  149F               	bsf	31,1	;volatile
  2549  0514                     l236:	
  2550                           ;MAIN_CONTROL.c: 442:     }
  2551                           
  2552                           
  2553                           ;MAIN_CONTROL.c: 441:     while(ADCON0bits.GO == 1){
  2554  0514  1C9F               	btfss	31,1	;volatile
  2555  0515  0008               	return
  2556  0516  2D14               	goto	l236
  2557  0517                     __end_of_init_ADC:	
  2558                           
  2559                           	psect	text11
  2560  0125                     __ptext11:	
  2561 ;; *************** function _OSC_config *****************
  2562 ;; Defined at:
  2563 ;;		line 510 in file "MAIN_CONTROL.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  frecuencia      4    0[BANK0 ] unsigned long 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2577 ;;      Params:         0       4       0       0       0
  2578 ;;      Locals:         0       0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0
  2580 ;;      Totals:         0       4       0       0       0
  2581 ;;Total ram usage:        4 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    1
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_config
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           
  2592                           ;psect for function _OSC_config
  2593  0125                     _OSC_config:	
  2594                           
  2595                           ;MAIN_CONTROL.c: 511:     switch(frecuencia){
  2596                           
  2597                           ;incstack = 0
  2598                           ; Regs used in _OSC_config: [wreg-fsr0h+status,2+status,0]
  2599  0125  2961               	goto	l2867
  2600  0126                     l2849:	
  2601                           
  2602                           ;MAIN_CONTROL.c: 513:             OSCCONbits.IRCF = 0b111;
  2603  0126  3070               	movlw	112
  2604  0127  1683               	bsf	3,5	;RP0=1, select bank1
  2605  0128  1303               	bcf	3,6	;RP1=0, select bank1
  2606  0129  048F               	iorwf	15,f	;volatile
  2607                           
  2608                           ;MAIN_CONTROL.c: 514:             break;
  2609  012A  0008               	return
  2610  012B                     l2851:	
  2611                           
  2612                           ;MAIN_CONTROL.c: 516:             OSCCONbits.IRCF = 0b110;
  2613  012B  1683               	bsf	3,5	;RP0=1, select bank1
  2614  012C  1303               	bcf	3,6	;RP1=0, select bank1
  2615  012D  080F               	movf	15,w	;volatile
  2616  012E  398F               	andlw	-113
  2617  012F  3860               	iorlw	96
  2618  0130  008F               	movwf	15	;volatile
  2619                           
  2620                           ;MAIN_CONTROL.c: 517:             break;
  2621  0131  0008               	return
  2622  0132                     l2853:	
  2623                           
  2624                           ;MAIN_CONTROL.c: 519:             OSCCONbits.IRCF = 0b101;
  2625  0132  1683               	bsf	3,5	;RP0=1, select bank1
  2626  0133  1303               	bcf	3,6	;RP1=0, select bank1
  2627  0134  080F               	movf	15,w	;volatile
  2628  0135  398F               	andlw	-113
  2629  0136  3850               	iorlw	80
  2630  0137  008F               	movwf	15	;volatile
  2631                           
  2632                           ;MAIN_CONTROL.c: 520:             break;
  2633  0138  0008               	return
  2634  0139                     l2855:	
  2635                           
  2636                           ;MAIN_CONTROL.c: 522:             OSCCONbits.IRCF = 0b100;
  2637  0139  1683               	bsf	3,5	;RP0=1, select bank1
  2638  013A  1303               	bcf	3,6	;RP1=0, select bank1
  2639  013B  080F               	movf	15,w	;volatile
  2640  013C  398F               	andlw	-113
  2641  013D  3840               	iorlw	64
  2642  013E  008F               	movwf	15	;volatile
  2643                           
  2644                           ;MAIN_CONTROL.c: 523:             break;
  2645  013F  0008               	return
  2646  0140                     l2857:	
  2647                           
  2648                           ;MAIN_CONTROL.c: 525:             OSCCONbits.IRCF = 0b011;
  2649  0140  1683               	bsf	3,5	;RP0=1, select bank1
  2650  0141  1303               	bcf	3,6	;RP1=0, select bank1
  2651  0142  080F               	movf	15,w	;volatile
  2652  0143  398F               	andlw	-113
  2653  0144  3830               	iorlw	48
  2654  0145  008F               	movwf	15	;volatile
  2655                           
  2656                           ;MAIN_CONTROL.c: 526:             break;
  2657  0146  0008               	return
  2658  0147                     l2859:	
  2659                           
  2660                           ;MAIN_CONTROL.c: 528:             OSCCONbits.IRCF = 0b010;
  2661  0147  1683               	bsf	3,5	;RP0=1, select bank1
  2662  0148  1303               	bcf	3,6	;RP1=0, select bank1
  2663  0149  080F               	movf	15,w	;volatile
  2664  014A  398F               	andlw	-113
  2665  014B  3820               	iorlw	32
  2666  014C  008F               	movwf	15	;volatile
  2667                           
  2668                           ;MAIN_CONTROL.c: 529:             break;
  2669  014D  0008               	return
  2670  014E                     l2861:	
  2671                           
  2672                           ;MAIN_CONTROL.c: 531:             OSCCONbits.IRCF = 0b001;
  2673  014E  1683               	bsf	3,5	;RP0=1, select bank1
  2674  014F  1303               	bcf	3,6	;RP1=0, select bank1
  2675  0150  080F               	movf	15,w	;volatile
  2676  0151  398F               	andlw	-113
  2677  0152  3810               	iorlw	16
  2678  0153  008F               	movwf	15	;volatile
  2679                           
  2680                           ;MAIN_CONTROL.c: 532:             break;
  2681  0154  0008               	return
  2682  0155                     l2863:	
  2683                           
  2684                           ;MAIN_CONTROL.c: 534:             OSCCONbits.IRCF = 0b000;
  2685  0155  308F               	movlw	-113
  2686  0156  1683               	bsf	3,5	;RP0=1, select bank1
  2687  0157  1303               	bcf	3,6	;RP1=0, select bank1
  2688  0158  058F               	andwf	15,f	;volatile
  2689                           
  2690                           ;MAIN_CONTROL.c: 535:             break;
  2691  0159  0008               	return
  2692  015A                     l2865:	
  2693                           
  2694                           ;MAIN_CONTROL.c: 537:             OSCCONbits.IRCF = 0b110;
  2695  015A  1683               	bsf	3,5	;RP0=1, select bank1
  2696  015B  1303               	bcf	3,6	;RP1=0, select bank1
  2697  015C  080F               	movf	15,w	;volatile
  2698  015D  398F               	andlw	-113
  2699  015E  3860               	iorlw	96
  2700  015F  008F               	movwf	15	;volatile
  2701                           
  2702                           ;MAIN_CONTROL.c: 538:     }
  2703  0160  0008               	return
  2704  0161                     l2867:	
  2705                           
  2706                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 9 sub-sw
      +                          itches
  2707                           ; Switch size 1, requested type "simple"
  2708                           ; Number of cases is 1, Range of values is 0 to 0
  2709                           ; switch strategies available:
  2710                           ; Name         Instructions Cycles
  2711                           ; simple_byte            4     3 (average)
  2712                           ; direct_byte           11     8 (fixed)
  2713                           ; jumptable            260     6 (fixed)
  2714                           ;	Chosen strategy is simple_byte
  2715  0161  1283               	bcf	3,5	;RP0=0, select bank0
  2716  0162  1303               	bcf	3,6	;RP1=0, select bank0
  2717  0163  0823               	movf	OSC_config@frecuencia+3,w
  2718  0164  3A00               	xorlw	0	; case 0
  2719  0165  1903               	skipnz
  2720  0166  29B8               	goto	l3693
  2721  0167  295A               	goto	l2865
  2722  0168                     l3677:	
  2723                           
  2724                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2725                           ; Switch size 1, requested type "simple"
  2726                           ; Number of cases is 1, Range of values is 125 to 125
  2727                           ; switch strategies available:
  2728                           ; Name         Instructions Cycles
  2729                           ; simple_byte            4     3 (average)
  2730                           ; direct_byte           14    11 (fixed)
  2731                           ; jumptable            263     9 (fixed)
  2732                           ;	Chosen strategy is simple_byte
  2733  0168  0821               	movf	OSC_config@frecuencia+1,w
  2734  0169  3A7D               	xorlw	125	; case 125
  2735  016A  1903               	skipnz
  2736  016B  296D               	goto	l3695
  2737  016C  295A               	goto	l2865
  2738  016D                     l3695:	
  2739                           
  2740                           ; Switch size 1, requested type "simple"
  2741                           ; Number of cases is 1, Range of values is 0 to 0
  2742                           ; switch strategies available:
  2743                           ; Name         Instructions Cycles
  2744                           ; simple_byte            4     3 (average)
  2745                           ; direct_byte           11     8 (fixed)
  2746                           ; jumptable            260     6 (fixed)
  2747                           ;	Chosen strategy is simple_byte
  2748  016D  0820               	movf	OSC_config@frecuencia,w
  2749  016E  3A00               	xorlw	0	; case 0
  2750  016F  1903               	skipnz
  2751  0170  2955               	goto	l2863
  2752  0171  295A               	goto	l2865
  2753  0172                     l3679:	
  2754                           
  2755                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2756                           ; Switch size 1, requested type "simple"
  2757                           ; Number of cases is 1, Range of values is 232 to 232
  2758                           ; switch strategies available:
  2759                           ; Name         Instructions Cycles
  2760                           ; simple_byte            4     3 (average)
  2761                           ; direct_byte           14    11 (fixed)
  2762                           ; jumptable            263     9 (fixed)
  2763                           ;	Chosen strategy is simple_byte
  2764  0172  0821               	movf	OSC_config@frecuencia+1,w
  2765  0173  3AE8               	xorlw	232	; case 232
  2766  0174  1903               	skipnz
  2767  0175  2977               	goto	l3697
  2768  0176  295A               	goto	l2865
  2769  0177                     l3697:	
  2770                           
  2771                           ; Switch size 1, requested type "simple"
  2772                           ; Number of cases is 1, Range of values is 72 to 72
  2773                           ; switch strategies available:
  2774                           ; Name         Instructions Cycles
  2775                           ; simple_byte            4     3 (average)
  2776                           ; direct_byte           14    11 (fixed)
  2777                           ; jumptable            263     9 (fixed)
  2778                           ;	Chosen strategy is simple_byte
  2779  0177  0820               	movf	OSC_config@frecuencia,w
  2780  0178  3A48               	xorlw	72	; case 72
  2781  0179  1903               	skipnz
  2782  017A  294E               	goto	l2861
  2783  017B  295A               	goto	l2865
  2784  017C                     l3681:	
  2785                           
  2786                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2787                           ; Switch size 1, requested type "simple"
  2788                           ; Number of cases is 1, Range of values is 208 to 208
  2789                           ; switch strategies available:
  2790                           ; Name         Instructions Cycles
  2791                           ; simple_byte            4     3 (average)
  2792                           ; direct_byte           14    11 (fixed)
  2793                           ; jumptable            263     9 (fixed)
  2794                           ;	Chosen strategy is simple_byte
  2795  017C  0821               	movf	OSC_config@frecuencia+1,w
  2796  017D  3AD0               	xorlw	208	; case 208
  2797  017E  1903               	skipnz
  2798  017F  2981               	goto	l3699
  2799  0180  295A               	goto	l2865
  2800  0181                     l3699:	
  2801                           
  2802                           ; Switch size 1, requested type "simple"
  2803                           ; Number of cases is 1, Range of values is 144 to 144
  2804                           ; switch strategies available:
  2805                           ; Name         Instructions Cycles
  2806                           ; simple_byte            4     3 (average)
  2807                           ; direct_byte           14    11 (fixed)
  2808                           ; jumptable            263     9 (fixed)
  2809                           ;	Chosen strategy is simple_byte
  2810  0181  0820               	movf	OSC_config@frecuencia,w
  2811  0182  3A90               	xorlw	144	; case 144
  2812  0183  1903               	skipnz
  2813  0184  2947               	goto	l2859
  2814  0185  295A               	goto	l2865
  2815  0186                     l3683:	
  2816                           
  2817                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2818                           ; Switch size 1, requested type "simple"
  2819                           ; Number of cases is 1, Range of values is 161 to 161
  2820                           ; switch strategies available:
  2821                           ; Name         Instructions Cycles
  2822                           ; simple_byte            4     3 (average)
  2823                           ; direct_byte           14    11 (fixed)
  2824                           ; jumptable            263     9 (fixed)
  2825                           ;	Chosen strategy is simple_byte
  2826  0186  0821               	movf	OSC_config@frecuencia+1,w
  2827  0187  3AA1               	xorlw	161	; case 161
  2828  0188  1903               	skipnz
  2829  0189  298B               	goto	l3701
  2830  018A  295A               	goto	l2865
  2831  018B                     l3701:	
  2832                           
  2833                           ; Switch size 1, requested type "simple"
  2834                           ; Number of cases is 1, Range of values is 32 to 32
  2835                           ; switch strategies available:
  2836                           ; Name         Instructions Cycles
  2837                           ; simple_byte            4     3 (average)
  2838                           ; direct_byte           14    11 (fixed)
  2839                           ; jumptable            263     9 (fixed)
  2840                           ;	Chosen strategy is simple_byte
  2841  018B  0820               	movf	OSC_config@frecuencia,w
  2842  018C  3A20               	xorlw	32	; case 32
  2843  018D  1903               	skipnz
  2844  018E  2940               	goto	l2857
  2845  018F  295A               	goto	l2865
  2846  0190                     l3685:	
  2847                           
  2848                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2849                           ; Switch size 1, requested type "simple"
  2850                           ; Number of cases is 1, Range of values is 66 to 66
  2851                           ; switch strategies available:
  2852                           ; Name         Instructions Cycles
  2853                           ; simple_byte            4     3 (average)
  2854                           ; direct_byte           14    11 (fixed)
  2855                           ; jumptable            263     9 (fixed)
  2856                           ;	Chosen strategy is simple_byte
  2857  0190  0821               	movf	OSC_config@frecuencia+1,w
  2858  0191  3A42               	xorlw	66	; case 66
  2859  0192  1903               	skipnz
  2860  0193  2995               	goto	l3703
  2861  0194  295A               	goto	l2865
  2862  0195                     l3703:	
  2863                           
  2864                           ; Switch size 1, requested type "simple"
  2865                           ; Number of cases is 1, Range of values is 64 to 64
  2866                           ; switch strategies available:
  2867                           ; Name         Instructions Cycles
  2868                           ; simple_byte            4     3 (average)
  2869                           ; direct_byte           14    11 (fixed)
  2870                           ; jumptable            263     9 (fixed)
  2871                           ;	Chosen strategy is simple_byte
  2872  0195  0820               	movf	OSC_config@frecuencia,w
  2873  0196  3A40               	xorlw	64	; case 64
  2874  0197  1903               	skipnz
  2875  0198  2939               	goto	l2855
  2876  0199  295A               	goto	l2865
  2877  019A                     l3687:	
  2878                           
  2879                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2880                           ; Switch size 1, requested type "simple"
  2881                           ; Number of cases is 1, Range of values is 132 to 132
  2882                           ; switch strategies available:
  2883                           ; Name         Instructions Cycles
  2884                           ; simple_byte            4     3 (average)
  2885                           ; direct_byte           14    11 (fixed)
  2886                           ; jumptable            263     9 (fixed)
  2887                           ;	Chosen strategy is simple_byte
  2888  019A  0821               	movf	OSC_config@frecuencia+1,w
  2889  019B  3A84               	xorlw	132	; case 132
  2890  019C  1903               	skipnz
  2891  019D  299F               	goto	l3705
  2892  019E  295A               	goto	l2865
  2893  019F                     l3705:	
  2894                           
  2895                           ; Switch size 1, requested type "simple"
  2896                           ; Number of cases is 1, Range of values is 128 to 128
  2897                           ; switch strategies available:
  2898                           ; Name         Instructions Cycles
  2899                           ; simple_byte            4     3 (average)
  2900                           ; direct_byte           14    11 (fixed)
  2901                           ; jumptable            263     9 (fixed)
  2902                           ;	Chosen strategy is simple_byte
  2903  019F  0820               	movf	OSC_config@frecuencia,w
  2904  01A0  3A80               	xorlw	128	; case 128
  2905  01A1  1903               	skipnz
  2906  01A2  2932               	goto	l2853
  2907  01A3  295A               	goto	l2865
  2908  01A4                     l3689:	
  2909                           
  2910                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2911                           ; Switch size 1, requested type "simple"
  2912                           ; Number of cases is 1, Range of values is 9 to 9
  2913                           ; switch strategies available:
  2914                           ; Name         Instructions Cycles
  2915                           ; simple_byte            4     3 (average)
  2916                           ; direct_byte           14    11 (fixed)
  2917                           ; jumptable            263     9 (fixed)
  2918                           ;	Chosen strategy is simple_byte
  2919  01A4  0821               	movf	OSC_config@frecuencia+1,w
  2920  01A5  3A09               	xorlw	9	; case 9
  2921  01A6  1903               	skipnz
  2922  01A7  29A9               	goto	l3707
  2923  01A8  295A               	goto	l2865
  2924  01A9                     l3707:	
  2925                           
  2926                           ; Switch size 1, requested type "simple"
  2927                           ; Number of cases is 1, Range of values is 0 to 0
  2928                           ; switch strategies available:
  2929                           ; Name         Instructions Cycles
  2930                           ; simple_byte            4     3 (average)
  2931                           ; direct_byte           11     8 (fixed)
  2932                           ; jumptable            260     6 (fixed)
  2933                           ;	Chosen strategy is simple_byte
  2934  01A9  0820               	movf	OSC_config@frecuencia,w
  2935  01AA  3A00               	xorlw	0	; case 0
  2936  01AB  1903               	skipnz
  2937  01AC  292B               	goto	l2851
  2938  01AD  295A               	goto	l2865
  2939  01AE                     l3691:	
  2940                           
  2941                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2942                           ; Switch size 1, requested type "simple"
  2943                           ; Number of cases is 1, Range of values is 18 to 18
  2944                           ; switch strategies available:
  2945                           ; Name         Instructions Cycles
  2946                           ; simple_byte            4     3 (average)
  2947                           ; direct_byte           14    11 (fixed)
  2948                           ; jumptable            263     9 (fixed)
  2949                           ;	Chosen strategy is simple_byte
  2950  01AE  0821               	movf	OSC_config@frecuencia+1,w
  2951  01AF  3A12               	xorlw	18	; case 18
  2952  01B0  1903               	skipnz
  2953  01B1  29B3               	goto	l3709
  2954  01B2  295A               	goto	l2865
  2955  01B3                     l3709:	
  2956                           
  2957                           ; Switch size 1, requested type "simple"
  2958                           ; Number of cases is 1, Range of values is 0 to 0
  2959                           ; switch strategies available:
  2960                           ; Name         Instructions Cycles
  2961                           ; simple_byte            4     3 (average)
  2962                           ; direct_byte           11     8 (fixed)
  2963                           ; jumptable            260     6 (fixed)
  2964                           ;	Chosen strategy is simple_byte
  2965  01B3  0820               	movf	OSC_config@frecuencia,w
  2966  01B4  3A00               	xorlw	0	; case 0
  2967  01B5  1903               	skipnz
  2968  01B6  2926               	goto	l2849
  2969  01B7  295A               	goto	l2865
  2970  01B8                     l3693:	
  2971                           
  2972                           ; Switch size 1, requested type "simple"
  2973                           ; Number of cases is 8, Range of values is 0 to 122
  2974                           ; switch strategies available:
  2975                           ; Name         Instructions Cycles
  2976                           ; simple_byte           25    13 (average)
  2977                           ; jumptable            260     6 (fixed)
  2978                           ;	Chosen strategy is simple_byte
  2979  01B8  0822               	movf	OSC_config@frecuencia+2,w
  2980  01B9  3A00               	xorlw	0	; case 0
  2981  01BA  1903               	skipnz
  2982  01BB  2968               	goto	l3677
  2983  01BC  3A01               	xorlw	1	; case 1
  2984  01BD  1903               	skipnz
  2985  01BE  2972               	goto	l3679
  2986  01BF  3A02               	xorlw	2	; case 3
  2987  01C0  1903               	skipnz
  2988  01C1  297C               	goto	l3681
  2989  01C2  3A04               	xorlw	4	; case 7
  2990  01C3  1903               	skipnz
  2991  01C4  2986               	goto	l3683
  2992  01C5  3A08               	xorlw	8	; case 15
  2993  01C6  1903               	skipnz
  2994  01C7  2990               	goto	l3685
  2995  01C8  3A11               	xorlw	17	; case 30
  2996  01C9  1903               	skipnz
  2997  01CA  299A               	goto	l3687
  2998  01CB  3A23               	xorlw	35	; case 61
  2999  01CC  1903               	skipnz
  3000  01CD  29A4               	goto	l3689
  3001  01CE  3A47               	xorlw	71	; case 122
  3002  01CF  1903               	skipnz
  3003  01D0  29AE               	goto	l3691
  3004  01D1  295A               	goto	l2865
  3005  01D2  0008               	return
  3006  01D3                     __end_of_OSC_config:	
  3007                           
  3008                           	psect	text12
  3009  041D                     __ptext12:	
  3010 ;; *************** function _cambiar_fila_izquierda *****************
  3011 ;; Defined at:
  3012 ;;		line 272 in file "MAIN_CONTROL.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;		None
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;		None
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      void 
  3019 ;; Registers used:
  3020 ;;		wreg, status,2
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3026 ;;      Params:         0       0       0       0       0
  3027 ;;      Locals:         0       0       0       0       0
  3028 ;;      Temps:          0       3       0       0       0
  3029 ;;      Totals:         0       3       0       0       0
  3030 ;;Total ram usage:        3 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; Hardware stack levels required when called:    1
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_main
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           
  3041                           ;psect for function _cambiar_fila_izquierda
  3042  041D                     _cambiar_fila_izquierda:	
  3043                           
  3044                           ;MAIN_CONTROL.c: 273:     PORTD = 0;
  3045                           
  3046                           ;incstack = 0
  3047                           ; Regs used in _cambiar_fila_izquierda: [wreg+status,2]
  3048  041D  1283               	bcf	3,5	;RP0=0, select bank0
  3049  041E  1303               	bcf	3,6	;RP1=0, select bank0
  3050  041F  0188               	clrf	8	;volatile
  3051                           
  3052                           ;MAIN_CONTROL.c: 274:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3053  0420  3003               	movlw	3
  3054  0421  1283               	bcf	3,5	;RP0=0, select bank0
  3055  0422  1303               	bcf	3,6	;RP1=0, select bank0
  3056  0423  00A2               	movwf	??_cambiar_fila_izquierda+2
  3057  0424  308A               	movlw	138
  3058  0425  00A1               	movwf	??_cambiar_fila_izquierda+1
  3059  0426  3055               	movlw	85
  3060  0427  00A0               	movwf	??_cambiar_fila_izquierda
  3061  0428                     u1087:	
  3062  0428  0BA0               	decfsz	??_cambiar_fila_izquierda,f
  3063  0429  2C28               	goto	u1087
  3064  042A  0BA1               	decfsz	??_cambiar_fila_izquierda+1,f
  3065  042B  2C28               	goto	u1087
  3066  042C  0BA2               	decfsz	??_cambiar_fila_izquierda+2,f
  3067  042D  2C28               	goto	u1087
  3068                           
  3069                           ;MAIN_CONTROL.c: 275:     PORTD = 0b10011001;
  3070  042E  3099               	movlw	153
  3071  042F  1283               	bcf	3,5	;RP0=0, select bank0
  3072  0430  1303               	bcf	3,6	;RP1=0, select bank0
  3073  0431  0088               	movwf	8	;volatile
  3074                           
  3075                           ;MAIN_CONTROL.c: 276:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3076  0432  3003               	movlw	3
  3077  0433  1283               	bcf	3,5	;RP0=0, select bank0
  3078  0434  1303               	bcf	3,6	;RP1=0, select bank0
  3079  0435  00A2               	movwf	??_cambiar_fila_izquierda+2
  3080  0436  308A               	movlw	138
  3081  0437  00A1               	movwf	??_cambiar_fila_izquierda+1
  3082  0438  3055               	movlw	85
  3083  0439  00A0               	movwf	??_cambiar_fila_izquierda
  3084  043A                     u1097:	
  3085  043A  0BA0               	decfsz	??_cambiar_fila_izquierda,f
  3086  043B  2C3A               	goto	u1097
  3087  043C  0BA1               	decfsz	??_cambiar_fila_izquierda+1,f
  3088  043D  2C3A               	goto	u1097
  3089  043E  0BA2               	decfsz	??_cambiar_fila_izquierda+2,f
  3090  043F  2C3A               	goto	u1097
  3091                           
  3092                           ;MAIN_CONTROL.c: 277:     PORTD = 0;
  3093  0440  1283               	bcf	3,5	;RP0=0, select bank0
  3094  0441  1303               	bcf	3,6	;RP1=0, select bank0
  3095  0442  0188               	clrf	8	;volatile
  3096                           
  3097                           ;MAIN_CONTROL.c: 278:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3098  0443  3003               	movlw	3
  3099  0444  1283               	bcf	3,5	;RP0=0, select bank0
  3100  0445  1303               	bcf	3,6	;RP1=0, select bank0
  3101  0446  00A2               	movwf	??_cambiar_fila_izquierda+2
  3102  0447  308A               	movlw	138
  3103  0448  00A1               	movwf	??_cambiar_fila_izquierda+1
  3104  0449  3055               	movlw	85
  3105  044A  00A0               	movwf	??_cambiar_fila_izquierda
  3106  044B                     u1107:	
  3107  044B  0BA0               	decfsz	??_cambiar_fila_izquierda,f
  3108  044C  2C4B               	goto	u1107
  3109  044D  0BA1               	decfsz	??_cambiar_fila_izquierda+1,f
  3110  044E  2C4B               	goto	u1107
  3111  044F  0BA2               	decfsz	??_cambiar_fila_izquierda+2,f
  3112  0450  2C4B               	goto	u1107
  3113                           
  3114                           ;MAIN_CONTROL.c: 279:     PORTD = 0b10101010;
  3115  0451  30AA               	movlw	170
  3116  0452  1283               	bcf	3,5	;RP0=0, select bank0
  3117  0453  1303               	bcf	3,6	;RP1=0, select bank0
  3118  0454  0088               	movwf	8	;volatile
  3119                           
  3120                           ;MAIN_CONTROL.c: 280:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3121  0455  3003               	movlw	3
  3122  0456  1283               	bcf	3,5	;RP0=0, select bank0
  3123  0457  1303               	bcf	3,6	;RP1=0, select bank0
  3124  0458  00A2               	movwf	??_cambiar_fila_izquierda+2
  3125  0459  308A               	movlw	138
  3126  045A  00A1               	movwf	??_cambiar_fila_izquierda+1
  3127  045B  3055               	movlw	85
  3128  045C  00A0               	movwf	??_cambiar_fila_izquierda
  3129  045D                     u1117:	
  3130  045D  0BA0               	decfsz	??_cambiar_fila_izquierda,f
  3131  045E  2C5D               	goto	u1117
  3132  045F  0BA1               	decfsz	??_cambiar_fila_izquierda+1,f
  3133  0460  2C5D               	goto	u1117
  3134  0461  0BA2               	decfsz	??_cambiar_fila_izquierda+2,f
  3135  0462  2C5D               	goto	u1117
  3136                           
  3137                           ;MAIN_CONTROL.c: 281:     PORTD = 0;
  3138  0463  1283               	bcf	3,5	;RP0=0, select bank0
  3139  0464  1303               	bcf	3,6	;RP1=0, select bank0
  3140  0465  0188               	clrf	8	;volatile
  3141                           
  3142                           ;MAIN_CONTROL.c: 282:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3143  0466  3003               	movlw	3
  3144  0467  1283               	bcf	3,5	;RP0=0, select bank0
  3145  0468  1303               	bcf	3,6	;RP1=0, select bank0
  3146  0469  00A2               	movwf	??_cambiar_fila_izquierda+2
  3147  046A  308A               	movlw	138
  3148  046B  00A1               	movwf	??_cambiar_fila_izquierda+1
  3149  046C  3055               	movlw	85
  3150  046D  00A0               	movwf	??_cambiar_fila_izquierda
  3151  046E                     u1127:	
  3152  046E  0BA0               	decfsz	??_cambiar_fila_izquierda,f
  3153  046F  2C6E               	goto	u1127
  3154  0470  0BA1               	decfsz	??_cambiar_fila_izquierda+1,f
  3155  0471  2C6E               	goto	u1127
  3156  0472  0BA2               	decfsz	??_cambiar_fila_izquierda+2,f
  3157  0473  2C6E               	goto	u1127
  3158                           
  3159                           ;MAIN_CONTROL.c: 283:     PORTD = 0b10011001;
  3160  0474  3099               	movlw	153
  3161  0475  1283               	bcf	3,5	;RP0=0, select bank0
  3162  0476  1303               	bcf	3,6	;RP1=0, select bank0
  3163  0477  0088               	movwf	8	;volatile
  3164                           
  3165                           ;MAIN_CONTROL.c: 284:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3166  0478  3003               	movlw	3
  3167  0479  1283               	bcf	3,5	;RP0=0, select bank0
  3168  047A  1303               	bcf	3,6	;RP1=0, select bank0
  3169  047B  00A2               	movwf	??_cambiar_fila_izquierda+2
  3170  047C  308A               	movlw	138
  3171  047D  00A1               	movwf	??_cambiar_fila_izquierda+1
  3172  047E  3055               	movlw	85
  3173  047F  00A0               	movwf	??_cambiar_fila_izquierda
  3174  0480                     u1137:	
  3175  0480  0BA0               	decfsz	??_cambiar_fila_izquierda,f
  3176  0481  2C80               	goto	u1137
  3177  0482  0BA1               	decfsz	??_cambiar_fila_izquierda+1,f
  3178  0483  2C80               	goto	u1137
  3179  0484  0BA2               	decfsz	??_cambiar_fila_izquierda+2,f
  3180  0485  2C80               	goto	u1137
  3181                           
  3182                           ;MAIN_CONTROL.c: 285:     PORTD = 0;
  3183  0486  1283               	bcf	3,5	;RP0=0, select bank0
  3184  0487  1303               	bcf	3,6	;RP1=0, select bank0
  3185  0488  0188               	clrf	8	;volatile
  3186                           
  3187                           ;MAIN_CONTROL.c: 286:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3188  0489  3003               	movlw	3
  3189  048A  1283               	bcf	3,5	;RP0=0, select bank0
  3190  048B  1303               	bcf	3,6	;RP1=0, select bank0
  3191  048C  00A2               	movwf	??_cambiar_fila_izquierda+2
  3192  048D  308A               	movlw	138
  3193  048E  00A1               	movwf	??_cambiar_fila_izquierda+1
  3194  048F  3055               	movlw	85
  3195  0490  00A0               	movwf	??_cambiar_fila_izquierda
  3196  0491                     u1147:	
  3197  0491  0BA0               	decfsz	??_cambiar_fila_izquierda,f
  3198  0492  2C91               	goto	u1147
  3199  0493  0BA1               	decfsz	??_cambiar_fila_izquierda+1,f
  3200  0494  2C91               	goto	u1147
  3201  0495  0BA2               	decfsz	??_cambiar_fila_izquierda+2,f
  3202  0496  2C91               	goto	u1147
  3203                           
  3204                           ;MAIN_CONTROL.c: 287:     indicador = 0;
  3205  0497  1283               	bcf	3,5	;RP0=0, select bank0
  3206  0498  1303               	bcf	3,6	;RP1=0, select bank0
  3207  0499  01B3               	clrf	_indicador
  3208  049A  0008               	return
  3209  049B                     __end_of_cambiar_fila_izquierda:	
  3210                           
  3211                           	psect	text13
  3212  039E                     __ptext13:	
  3213 ;; *************** function _cambiar_fila_derecha *****************
  3214 ;; Defined at:
  3215 ;;		line 254 in file "MAIN_CONTROL.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;		None
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;		None
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  1    wreg      void 
  3222 ;; Registers used:
  3223 ;;		wreg, status,2
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3229 ;;      Params:         0       0       0       0       0
  3230 ;;      Locals:         0       0       0       0       0
  3231 ;;      Temps:          0       3       0       0       0
  3232 ;;      Totals:         0       3       0       0       0
  3233 ;;Total ram usage:        3 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; Hardware stack levels required when called:    1
  3236 ;; This function calls:
  3237 ;;		Nothing
  3238 ;; This function is called by:
  3239 ;;		_main
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           
  3244                           ;psect for function _cambiar_fila_derecha
  3245  039E                     _cambiar_fila_derecha:	
  3246                           
  3247                           ;MAIN_CONTROL.c: 255:     PORTD = 0;
  3248                           
  3249                           ;incstack = 0
  3250                           ; Regs used in _cambiar_fila_derecha: [wreg+status,2]
  3251  039E  1283               	bcf	3,5	;RP0=0, select bank0
  3252  039F  1303               	bcf	3,6	;RP1=0, select bank0
  3253  03A0  0188               	clrf	8	;volatile
  3254                           
  3255                           ;MAIN_CONTROL.c: 256:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3256  03A1  3003               	movlw	3
  3257  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  3258  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  3259  03A4  00A2               	movwf	??_cambiar_fila_derecha+2
  3260  03A5  308A               	movlw	138
  3261  03A6  00A1               	movwf	??_cambiar_fila_derecha+1
  3262  03A7  3055               	movlw	85
  3263  03A8  00A0               	movwf	??_cambiar_fila_derecha
  3264  03A9                     u1157:	
  3265  03A9  0BA0               	decfsz	??_cambiar_fila_derecha,f
  3266  03AA  2BA9               	goto	u1157
  3267  03AB  0BA1               	decfsz	??_cambiar_fila_derecha+1,f
  3268  03AC  2BA9               	goto	u1157
  3269  03AD  0BA2               	decfsz	??_cambiar_fila_derecha+2,f
  3270  03AE  2BA9               	goto	u1157
  3271                           
  3272                           ;MAIN_CONTROL.c: 257:     PORTD = 0b01100110;
  3273  03AF  3066               	movlw	102
  3274  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  3275  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  3276  03B2  0088               	movwf	8	;volatile
  3277                           
  3278                           ;MAIN_CONTROL.c: 258:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3279  03B3  3003               	movlw	3
  3280  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  3281  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  3282  03B6  00A2               	movwf	??_cambiar_fila_derecha+2
  3283  03B7  308A               	movlw	138
  3284  03B8  00A1               	movwf	??_cambiar_fila_derecha+1
  3285  03B9  3055               	movlw	85
  3286  03BA  00A0               	movwf	??_cambiar_fila_derecha
  3287  03BB                     u1167:	
  3288  03BB  0BA0               	decfsz	??_cambiar_fila_derecha,f
  3289  03BC  2BBB               	goto	u1167
  3290  03BD  0BA1               	decfsz	??_cambiar_fila_derecha+1,f
  3291  03BE  2BBB               	goto	u1167
  3292  03BF  0BA2               	decfsz	??_cambiar_fila_derecha+2,f
  3293  03C0  2BBB               	goto	u1167
  3294                           
  3295                           ;MAIN_CONTROL.c: 259:     PORTD = 0;
  3296  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  3297  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  3298  03C3  0188               	clrf	8	;volatile
  3299                           
  3300                           ;MAIN_CONTROL.c: 260:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3301  03C4  3003               	movlw	3
  3302  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  3303  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  3304  03C7  00A2               	movwf	??_cambiar_fila_derecha+2
  3305  03C8  308A               	movlw	138
  3306  03C9  00A1               	movwf	??_cambiar_fila_derecha+1
  3307  03CA  3055               	movlw	85
  3308  03CB  00A0               	movwf	??_cambiar_fila_derecha
  3309  03CC                     u1177:	
  3310  03CC  0BA0               	decfsz	??_cambiar_fila_derecha,f
  3311  03CD  2BCC               	goto	u1177
  3312  03CE  0BA1               	decfsz	??_cambiar_fila_derecha+1,f
  3313  03CF  2BCC               	goto	u1177
  3314  03D0  0BA2               	decfsz	??_cambiar_fila_derecha+2,f
  3315  03D1  2BCC               	goto	u1177
  3316                           
  3317                           ;MAIN_CONTROL.c: 261:     PORTD = 0b10101010;
  3318  03D2  30AA               	movlw	170
  3319  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  3320  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  3321  03D5  0088               	movwf	8	;volatile
  3322                           
  3323                           ;MAIN_CONTROL.c: 262:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3324  03D6  3003               	movlw	3
  3325  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  3326  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  3327  03D9  00A2               	movwf	??_cambiar_fila_derecha+2
  3328  03DA  308A               	movlw	138
  3329  03DB  00A1               	movwf	??_cambiar_fila_derecha+1
  3330  03DC  3055               	movlw	85
  3331  03DD  00A0               	movwf	??_cambiar_fila_derecha
  3332  03DE                     u1187:	
  3333  03DE  0BA0               	decfsz	??_cambiar_fila_derecha,f
  3334  03DF  2BDE               	goto	u1187
  3335  03E0  0BA1               	decfsz	??_cambiar_fila_derecha+1,f
  3336  03E1  2BDE               	goto	u1187
  3337  03E2  0BA2               	decfsz	??_cambiar_fila_derecha+2,f
  3338  03E3  2BDE               	goto	u1187
  3339                           
  3340                           ;MAIN_CONTROL.c: 263:     PORTD = 0;
  3341  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  3342  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  3343  03E6  0188               	clrf	8	;volatile
  3344                           
  3345                           ;MAIN_CONTROL.c: 264:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3346  03E7  3003               	movlw	3
  3347  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  3348  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  3349  03EA  00A2               	movwf	??_cambiar_fila_derecha+2
  3350  03EB  308A               	movlw	138
  3351  03EC  00A1               	movwf	??_cambiar_fila_derecha+1
  3352  03ED  3055               	movlw	85
  3353  03EE  00A0               	movwf	??_cambiar_fila_derecha
  3354  03EF                     u1197:	
  3355  03EF  0BA0               	decfsz	??_cambiar_fila_derecha,f
  3356  03F0  2BEF               	goto	u1197
  3357  03F1  0BA1               	decfsz	??_cambiar_fila_derecha+1,f
  3358  03F2  2BEF               	goto	u1197
  3359  03F3  0BA2               	decfsz	??_cambiar_fila_derecha+2,f
  3360  03F4  2BEF               	goto	u1197
  3361                           
  3362                           ;MAIN_CONTROL.c: 265:     PORTD = 0b01100110;
  3363  03F5  3066               	movlw	102
  3364  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  3365  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  3366  03F8  0088               	movwf	8	;volatile
  3367                           
  3368                           ;MAIN_CONTROL.c: 266:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3369  03F9  3003               	movlw	3
  3370  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  3371  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  3372  03FC  00A2               	movwf	??_cambiar_fila_derecha+2
  3373  03FD  308A               	movlw	138
  3374  03FE  00A1               	movwf	??_cambiar_fila_derecha+1
  3375  03FF  3055               	movlw	85
  3376  0400  00A0               	movwf	??_cambiar_fila_derecha
  3377  0401                     u1207:	
  3378  0401  0BA0               	decfsz	??_cambiar_fila_derecha,f
  3379  0402  2C01               	goto	u1207
  3380  0403  0BA1               	decfsz	??_cambiar_fila_derecha+1,f
  3381  0404  2C01               	goto	u1207
  3382  0405  0BA2               	decfsz	??_cambiar_fila_derecha+2,f
  3383  0406  2C01               	goto	u1207
  3384                           
  3385                           ;MAIN_CONTROL.c: 267:     PORTD = 0;
  3386  0407  1283               	bcf	3,5	;RP0=0, select bank0
  3387  0408  1303               	bcf	3,6	;RP1=0, select bank0
  3388  0409  0188               	clrf	8	;volatile
  3389                           
  3390                           ;MAIN_CONTROL.c: 268:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3391  040A  3003               	movlw	3
  3392  040B  1283               	bcf	3,5	;RP0=0, select bank0
  3393  040C  1303               	bcf	3,6	;RP1=0, select bank0
  3394  040D  00A2               	movwf	??_cambiar_fila_derecha+2
  3395  040E  308A               	movlw	138
  3396  040F  00A1               	movwf	??_cambiar_fila_derecha+1
  3397  0410  3055               	movlw	85
  3398  0411  00A0               	movwf	??_cambiar_fila_derecha
  3399  0412                     u1217:	
  3400  0412  0BA0               	decfsz	??_cambiar_fila_derecha,f
  3401  0413  2C12               	goto	u1217
  3402  0414  0BA1               	decfsz	??_cambiar_fila_derecha+1,f
  3403  0415  2C12               	goto	u1217
  3404  0416  0BA2               	decfsz	??_cambiar_fila_derecha+2,f
  3405  0417  2C12               	goto	u1217
  3406                           
  3407                           ;MAIN_CONTROL.c: 269:     indicador = 1;
  3408  0418  1283               	bcf	3,5	;RP0=0, select bank0
  3409  0419  1303               	bcf	3,6	;RP1=0, select bank0
  3410  041A  01B3               	clrf	_indicador
  3411  041B  0AB3               	incf	_indicador,f
  3412  041C  0008               	return
  3413  041D                     __end_of_cambiar_fila_derecha:	
  3414                           
  3415                           	psect	text14
  3416  0662                     __ptext14:	
  3417 ;; *************** function ___bmul *****************
  3418 ;; Defined at:
  3419 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;  multiplier      1    wreg     unsigned char 
  3422 ;;  multiplicand    1    4[COMMON] unsigned char 
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;  multiplier      1    1[BANK0 ] unsigned char 
  3425 ;;  product         1    0[BANK0 ] unsigned char 
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      unsigned char 
  3428 ;; Registers used:
  3429 ;;		wreg, status,2, status,0
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3435 ;;      Params:         1       0       0       0       0
  3436 ;;      Locals:         0       2       0       0       0
  3437 ;;      Temps:          1       0       0       0       0
  3438 ;;      Totals:         2       2       0       0       0
  3439 ;;Total ram usage:        4 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; Hardware stack levels required when called:    1
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		_main
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           
  3450                           ;psect for function ___bmul
  3451  0662                     ___bmul:	
  3452                           
  3453                           ;incstack = 0
  3454                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3455                           ;___bmul@multiplier stored from wreg
  3456  0662  1283               	bcf	3,5	;RP0=0, select bank0
  3457  0663  1303               	bcf	3,6	;RP1=0, select bank0
  3458  0664  00A1               	movwf	___bmul@multiplier
  3459  0665  01A0               	clrf	___bmul@product
  3460  0666                     l3127:	
  3461  0666  1C21               	btfss	___bmul@multiplier,0
  3462  0667  2E6C               	goto	l3131
  3463  0668  0874               	movf	___bmul@multiplicand,w
  3464  0669  00F5               	movwf	??___bmul
  3465  066A  0875               	movf	??___bmul,w
  3466  066B  07A0               	addwf	___bmul@product,f
  3467  066C                     l3131:	
  3468  066C  1003               	clrc
  3469  066D  0DF4               	rlf	___bmul@multiplicand,f
  3470  066E  1003               	clrc
  3471  066F  0CA1               	rrf	___bmul@multiplier,f
  3472  0670  0821               	movf	___bmul@multiplier,w
  3473  0671  1D03               	btfss	3,2
  3474  0672  2E66               	goto	l3127
  3475  0673  0820               	movf	___bmul@product,w
  3476  0674  0008               	return
  3477  0675                     __end_of___bmul:	
  3478                           
  3479                           	psect	text15
  3480  0619                     __ptext15:	
  3481 ;; *************** function _I2C_Slave_Init *****************
  3482 ;; Defined at:
  3483 ;;		line 586 in file "MAIN_CONTROL.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  address         2    4[COMMON] short 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3497 ;;      Params:         2       0       0       0       0
  3498 ;;      Locals:         0       0       0       0       0
  3499 ;;      Temps:          0       0       0       0       0
  3500 ;;      Totals:         2       0       0       0       0
  3501 ;;Total ram usage:        2 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    1
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_main
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _I2C_Slave_Init
  3513  0619                     _I2C_Slave_Init:	
  3514                           
  3515                           ;MAIN_CONTROL.c: 586: void I2C_Slave_Init(short address);MAIN_CONTROL.c: 587: {;MAIN_CON
      +                          TROL.c: 588:   SSPSTAT = 0x80;
  3516                           
  3517                           ;incstack = 0
  3518                           ; Regs used in _I2C_Slave_Init: [wreg]
  3519  0619  3080               	movlw	128
  3520  061A  1683               	bsf	3,5	;RP0=1, select bank1
  3521  061B  1303               	bcf	3,6	;RP1=0, select bank1
  3522  061C  0094               	movwf	20	;volatile
  3523                           
  3524                           ;MAIN_CONTROL.c: 589:   SSPADD = address;
  3525  061D  0874               	movf	I2C_Slave_Init@address,w
  3526  061E  0093               	movwf	19	;volatile
  3527                           
  3528                           ;MAIN_CONTROL.c: 590:   SSPCON = 0x36;
  3529  061F  3036               	movlw	54
  3530  0620  1283               	bcf	3,5	;RP0=0, select bank0
  3531  0621  1303               	bcf	3,6	;RP1=0, select bank0
  3532  0622  0094               	movwf	20	;volatile
  3533                           
  3534                           ;MAIN_CONTROL.c: 591:   SSPCON2 = 0x01;
  3535  0623  3001               	movlw	1
  3536  0624  1683               	bsf	3,5	;RP0=1, select bank1
  3537  0625  1303               	bcf	3,6	;RP1=0, select bank1
  3538  0626  0091               	movwf	17	;volatile
  3539                           
  3540                           ;MAIN_CONTROL.c: 592:   TRISC3 = 1;
  3541  0627  1587               	bsf	7,3	;volatile
  3542                           
  3543                           ;MAIN_CONTROL.c: 593:   TRISC4 = 1;
  3544  0628  1607               	bsf	7,4	;volatile
  3545                           
  3546                           ;MAIN_CONTROL.c: 594:   GIE = 1;
  3547  0629  178B               	bsf	11,7	;volatile
  3548                           
  3549                           ;MAIN_CONTROL.c: 595:   PEIE = 1;
  3550  062A  170B               	bsf	11,6	;volatile
  3551                           
  3552                           ;MAIN_CONTROL.c: 596:   SSPIF = 0;
  3553  062B  1283               	bcf	3,5	;RP0=0, select bank0
  3554  062C  1303               	bcf	3,6	;RP1=0, select bank0
  3555  062D  118C               	bcf	12,3	;volatile
  3556                           
  3557                           ;MAIN_CONTROL.c: 597:   SSPIE = 1;
  3558  062E  1683               	bsf	3,5	;RP0=1, select bank1
  3559  062F  1303               	bcf	3,6	;RP1=0, select bank1
  3560  0630  158C               	bsf	12,3	;volatile
  3561  0631  0008               	return
  3562  0632                     __end_of_I2C_Slave_Init:	
  3563                           
  3564                           	psect	text16
  3565  027B                     __ptext16:	
  3566 ;; *************** function _ISR *****************
  3567 ;; Defined at:
  3568 ;;		line 71 in file "MAIN_CONTROL.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;		None
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;		None
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1    wreg      void 
  3575 ;; Registers used:
  3576 ;;		wreg, status,2, status,0
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3582 ;;      Params:         0       0       0       0       0
  3583 ;;      Locals:         0       0       0       0       0
  3584 ;;      Temps:          4       0       0       0       0
  3585 ;;      Totals:         4       0       0       0       0
  3586 ;;Total ram usage:        4 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; This function calls:
  3589 ;;		Nothing
  3590 ;; This function is called by:
  3591 ;;		Interrupt level 1
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           
  3596                           ;psect for function _ISR
  3597  027B                     _ISR:	
  3598                           
  3599                           ;MAIN_CONTROL.c: 72:    if(PIR1bits.SSPIF == 1){
  3600  027B  1283               	bcf	3,5	;RP0=0, select bank0
  3601  027C  1303               	bcf	3,6	;RP1=0, select bank0
  3602  027D  1D8C               	btfss	12,3	;volatile
  3603  027E  2B12               	goto	i1l163
  3604                           
  3605                           ;MAIN_CONTROL.c: 74:         SSPCONbits.CKP = 0;
  3606  027F  1214               	bcf	20,4	;volatile
  3607                           
  3608                           ;MAIN_CONTROL.c: 76:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  3609  0280  1B14               	btfsc	20,6	;volatile
  3610  0281  2A84               	goto	i1l2223
  3611  0282  1F94               	btfss	20,7	;volatile
  3612  0283  2A8E               	goto	i1l2231
  3613  0284                     i1l2223:	
  3614                           
  3615                           ;MAIN_CONTROL.c: 77:             z = SSPBUF;
  3616  0284  0813               	movf	19,w	;volatile
  3617  0285  00F0               	movwf	??_ISR
  3618  0286  01F1               	clrf	??_ISR+1
  3619  0287  0870               	movf	??_ISR,w
  3620  0288  00AD               	movwf	_z
  3621  0289  0871               	movf	??_ISR+1,w
  3622  028A  00AE               	movwf	_z+1
  3623                           
  3624                           ;MAIN_CONTROL.c: 78:             SSPCONbits.SSPOV = 0;
  3625  028B  1314               	bcf	20,6	;volatile
  3626                           
  3627                           ;MAIN_CONTROL.c: 79:             SSPCONbits.WCOL = 0;
  3628  028C  1394               	bcf	20,7	;volatile
  3629                           
  3630                           ;MAIN_CONTROL.c: 80:             SSPCONbits.CKP = 1;
  3631  028D  1614               	bsf	20,4	;volatile
  3632  028E                     i1l2231:	
  3633                           
  3634                           ;MAIN_CONTROL.c: 83:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  3635  028E  1683               	bsf	3,5	;RP0=1, select bank1
  3636  028F  1303               	bcf	3,6	;RP1=0, select bank1
  3637  0290  1E94               	btfss	20,5	;volatile
  3638  0291  1914               	btfsc	20,2	;volatile
  3639  0292  2AD7               	goto	i1l141
  3640                           
  3641                           ;MAIN_CONTROL.c: 85:             z = SSPBUF;
  3642  0293  1283               	bcf	3,5	;RP0=0, select bank0
  3643  0294  1303               	bcf	3,6	;RP1=0, select bank0
  3644  0295  0813               	movf	19,w	;volatile
  3645  0296  00F0               	movwf	??_ISR
  3646  0297  01F1               	clrf	??_ISR+1
  3647  0298  0870               	movf	??_ISR,w
  3648  0299  00AD               	movwf	_z
  3649  029A  0871               	movf	??_ISR+1,w
  3650  029B  00AE               	movwf	_z+1
  3651                           
  3652                           ;MAIN_CONTROL.c: 87:             PIR1bits.SSPIF = 0;
  3653  029C  118C               	bcf	12,3	;volatile
  3654                           
  3655                           ;MAIN_CONTROL.c: 88:             SSPCONbits.CKP = 1;
  3656  029D  1614               	bsf	20,4	;volatile
  3657  029E                     i1l142:	
  3658                           ;MAIN_CONTROL.c: 89:             while(!SSPSTATbits.BF);
  3659                           
  3660  029E  1683               	bsf	3,5	;RP0=1, select bank1
  3661  029F  1303               	bcf	3,6	;RP1=0, select bank1
  3662  02A0  1C14               	btfss	20,0	;volatile
  3663  02A1  2A9E               	goto	i1l142
  3664                           
  3665                           ;MAIN_CONTROL.c: 90:             recibir = SSPBUF;
  3666  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  3667  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  3668  02A4  0813               	movf	19,w	;volatile
  3669  02A5  00F0               	movwf	??_ISR
  3670  02A6  0870               	movf	??_ISR,w
  3671  02A7  00F9               	movwf	_recibir
  3672                           
  3673                           ;MAIN_CONTROL.c: 91:             if (recibir_ind == 0){
  3674  02A8  0878               	movf	_recibir_ind,w
  3675  02A9  1D03               	btfss	3,2
  3676  02AA  2AB0               	goto	i1l2247
  3677                           
  3678                           ;MAIN_CONTROL.c: 92:                 velocidad = recibir;
  3679  02AB  0879               	movf	_recibir,w
  3680  02AC  00F0               	movwf	??_ISR
  3681  02AD  0870               	movf	??_ISR,w
  3682  02AE  00B6               	movwf	_velocidad
  3683                           
  3684                           ;MAIN_CONTROL.c: 93:             }
  3685  02AF  2AC9               	goto	i1l2261
  3686  02B0                     i1l2247:	
  3687  02B0  0378               	decf	_recibir_ind,w
  3688  02B1  1D03               	btfss	3,2
  3689  02B2  2AB8               	goto	i1l2251
  3690                           
  3691                           ;MAIN_CONTROL.c: 95:                 largo = recibir;
  3692  02B3  0879               	movf	_recibir,w
  3693  02B4  00F0               	movwf	??_ISR
  3694  02B5  0870               	movf	??_ISR,w
  3695  02B6  00B5               	movwf	_largo
  3696                           
  3697                           ;MAIN_CONTROL.c: 96:             }
  3698  02B7  2AC9               	goto	i1l2261
  3699  02B8                     i1l2251:	
  3700  02B8  3002               	movlw	2
  3701  02B9  0678               	xorwf	_recibir_ind,w
  3702  02BA  1D03               	btfss	3,2
  3703  02BB  2AC9               	goto	i1l2261
  3704                           
  3705                           ;MAIN_CONTROL.c: 98:                 ancho = recibir;
  3706  02BC  0879               	movf	_recibir,w
  3707  02BD  00F0               	movwf	??_ISR
  3708  02BE  0870               	movf	??_ISR,w
  3709  02BF  00B4               	movwf	_ancho
  3710                           
  3711                           ;MAIN_CONTROL.c: 99:                 if(velocidad>0 && velocidad <5){
  3712  02C0  0836               	movf	_velocidad,w
  3713  02C1  1903               	btfsc	3,2
  3714  02C2  2AC9               	goto	i1l2261
  3715  02C3  3005               	movlw	5
  3716  02C4  0236               	subwf	_velocidad,w
  3717  02C5  1803               	skipnc
  3718  02C6  2AC9               	goto	i1l2261
  3719                           
  3720                           ;MAIN_CONTROL.c: 100:                     indicador_mov = 1;
  3721  02C7  01B8               	clrf	_indicador_mov
  3722  02C8  0AB8               	incf	_indicador_mov,f
  3723  02C9                     i1l2261:	
  3724                           
  3725                           ;MAIN_CONTROL.c: 104:             recibir_ind++;
  3726  02C9  3001               	movlw	1
  3727  02CA  00F0               	movwf	??_ISR
  3728  02CB  0870               	movf	??_ISR,w
  3729  02CC  07F8               	addwf	_recibir_ind,f
  3730                           
  3731                           ;MAIN_CONTROL.c: 105:             if (recibir_ind == 3){
  3732  02CD  3003               	movlw	3
  3733  02CE  0678               	xorwf	_recibir_ind,w
  3734  02CF  1903               	btfsc	3,2
  3735                           
  3736                           ;MAIN_CONTROL.c: 106:                 recibir_ind = 0;
  3737  02D0  01F8               	clrf	_recibir_ind
  3738                           
  3739                           ;MAIN_CONTROL.c: 108:             _delay((unsigned long)((250)*(1000000/4000000.0)));
  3740  02D1  3014               	movlw	20
  3741  02D2  00F0               	movwf	??_ISR
  3742  02D3                     u122_27:	
  3743  02D3  0BF0               	decfsz	??_ISR,f
  3744  02D4  2AD3               	goto	u122_27
  3745  02D5  0000               	nop
  3746                           
  3747                           ;MAIN_CONTROL.c: 110:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  3748  02D6  2B0F               	goto	i1l152
  3749  02D7                     i1l141:	
  3750  02D7  1E94               	btfss	20,5	;volatile
  3751  02D8  1D14               	btfss	20,2	;volatile
  3752  02D9  2B0F               	goto	i1l152
  3753                           
  3754                           ;MAIN_CONTROL.c: 111:             z = SSPBUF;
  3755  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  3756  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  3757  02DC  0813               	movf	19,w	;volatile
  3758  02DD  00F0               	movwf	??_ISR
  3759  02DE  01F1               	clrf	??_ISR+1
  3760  02DF  0870               	movf	??_ISR,w
  3761  02E0  00AD               	movwf	_z
  3762  02E1  0871               	movf	??_ISR+1,w
  3763  02E2  00AE               	movwf	_z+1
  3764                           
  3765                           ;MAIN_CONTROL.c: 112:             BF = 0;
  3766  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  3767  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  3768  02E5  1014               	bcf	20,0	;volatile
  3769                           
  3770                           ;MAIN_CONTROL.c: 113:             if (contador == 0){
  3771  02E6  0877               	movf	_contador,w
  3772  02E7  1D03               	btfss	3,2
  3773  02E8  2AED               	goto	i1l2277
  3774                           
  3775                           ;MAIN_CONTROL.c: 114:                 SSPBUF = adelante;
  3776  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  3777  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  3778  02EB  0830               	movf	_adelante,w
  3779  02EC  2AFB               	goto	L32
  3780  02ED                     i1l2277:	
  3781                           ;MAIN_CONTROL.c: 115:             }
  3782                           
  3783  02ED  0377               	decf	_contador,w
  3784  02EE  1D03               	btfss	3,2
  3785  02EF  2AF4               	goto	i1l2281
  3786                           
  3787                           ;MAIN_CONTROL.c: 117:                 SSPBUF = atras;
  3788  02F0  0876               	movf	_atras,w
  3789  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  3790  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  3791  02F3  2AFB               	goto	L32
  3792  02F4                     i1l2281:	
  3793                           ;MAIN_CONTROL.c: 118:             }
  3794                           
  3795  02F4  3002               	movlw	2
  3796  02F5  0677               	xorwf	_contador,w
  3797  02F6  1D03               	btfss	3,2
  3798  02F7  2AFC               	goto	i1l2285
  3799                           
  3800                           ;MAIN_CONTROL.c: 120:                 SSPBUF = motor;
  3801  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  3802  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  3803  02FA  082F               	movf	_motor,w
  3804  02FB                     L32:	
  3805  02FB  0093               	movwf	19	;volatile
  3806  02FC                     i1l2285:	
  3807                           
  3808                           ;MAIN_CONTROL.c: 122:             contador++;
  3809  02FC  3001               	movlw	1
  3810  02FD  00F0               	movwf	??_ISR
  3811  02FE  0870               	movf	??_ISR,w
  3812  02FF  07F7               	addwf	_contador,f
  3813                           
  3814                           ;MAIN_CONTROL.c: 123:             if (contador == 3){
  3815  0300  3003               	movlw	3
  3816  0301  0677               	xorwf	_contador,w
  3817  0302  1903               	btfsc	3,2
  3818                           
  3819                           ;MAIN_CONTROL.c: 124:                 contador = 0;
  3820  0303  01F7               	clrf	_contador
  3821                           
  3822                           ;MAIN_CONTROL.c: 126:             SSPCONbits.CKP = 1;
  3823  0304  1283               	bcf	3,5	;RP0=0, select bank0
  3824  0305  1614               	bsf	20,4	;volatile
  3825                           
  3826                           ;MAIN_CONTROL.c: 127:             _delay((unsigned long)((250)*(1000000/4000000.0)));
  3827  0306  3014               	movlw	20
  3828  0307  00F0               	movwf	??_ISR
  3829  0308                     u123_27:	
  3830  0308  0BF0               	decfsz	??_ISR,f
  3831  0309  2B08               	goto	u123_27
  3832  030A  0000               	nop
  3833  030B                     i1l160:	
  3834                           ;MAIN_CONTROL.c: 128:             while(SSPSTATbits.BF);
  3835                           
  3836  030B  1683               	bsf	3,5	;RP0=1, select bank1
  3837  030C  1303               	bcf	3,6	;RP1=0, select bank1
  3838  030D  1814               	btfsc	20,0	;volatile
  3839  030E  2B0B               	goto	i1l160
  3840  030F                     i1l152:	
  3841                           
  3842                           ;MAIN_CONTROL.c: 131:         PIR1bits.SSPIF = 0;
  3843  030F  1283               	bcf	3,5	;RP0=0, select bank0
  3844  0310  1303               	bcf	3,6	;RP1=0, select bank0
  3845  0311  118C               	bcf	12,3	;volatile
  3846  0312                     i1l163:	
  3847  0312  0873               	movf	??_ISR+3,w
  3848  0313  008A               	movwf	10
  3849  0314  0E72               	swapf	(??_ISR+2)^(0+4294967168),w
  3850  0315  0083               	movwf	3
  3851  0316  0EFE               	swapf	126,f
  3852  0317  0E7E               	swapf	126,w
  3853  0318  0009               	retfie
  3854  0319                     __end_of_ISR:	
  3855  007E                     btemp	set	126	;btemp
  3856  007E                     wtemp0	set	126
  3857                           
  3858                           	psect	intentry
  3859  0004                     __pintentry:	
  3860                           ;incstack = 0
  3861                           ; Regs used in _ISR: [wreg+status,2+status,0]
  3862                           
  3863  0004                     interrupt_function:	
  3864  007E                     saved_w	set	btemp
  3865  0004  00FE               	movwf	btemp
  3866  0005  0E03               	swapf	3,w
  3867  0006  00F2               	movwf	??_ISR+2
  3868  0007  080A               	movf	10,w
  3869  0008  00F3               	movwf	??_ISR+3
  3870  0009  120A  118A  2A7B   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     13      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Slave_Init
    _main->___bmul
    _select_velocidad->_Servo2_grados
    _dis_atr->_init_ADC
    _dis_ade->_init_ADC
    _config->_init_ADC

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_regresar
    _select_velocidad->_Servo2_grados
    _regresar->_dis_ade
    _regresar->_dis_atr
    _regresar->_esperar
    _dis_atr->_init_ADC
    _dis_ade->_init_ADC
    _config->_OSC_config

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     860
                                              8 BANK0      5     5      0
                     _I2C_Slave_Init
                             ___bmul
               _cambiar_fila_derecha
             _cambiar_fila_izquierda
                             _config
                            _dis_ade
                            _dis_atr
                            _esperar
                          _obstaculo
                           _regresar
                   _select_velocidad
 ---------------------------------------------------------------------------------
 (1) _select_velocidad                                     3     3      0      62
                                              1 BANK0      3     3      0
                      _Servo2_grados
 ---------------------------------------------------------------------------------
 (2) _Servo2_grados                                        3     3      0      31
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _regresar                                             5     5      0     161
                                              3 BANK0      5     5      0
                            _dis_ade
                            _dis_atr
                            _esperar
 ---------------------------------------------------------------------------------
 (2) _esperar                                              4     4      0      31
                                              4 COMMON     1     1      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _dis_atr                                              2     2      0      31
                                              1 BANK0      2     2      0
                           _init_ADC
 ---------------------------------------------------------------------------------
 (2) _dis_ade                                              2     2      0      31
                                              1 BANK0      2     2      0
                           _init_ADC
 ---------------------------------------------------------------------------------
 (1) _obstaculo                                            3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0     152
                         _OSC_config
                           _init_ADC
                         _init_PWM_2
 ---------------------------------------------------------------------------------
 (2) _init_PWM_2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _init_ADC                                             3     3      0      31
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSC_config                                           4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _cambiar_fila_izquierda                               3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _cambiar_fila_derecha                                 3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     226
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init
   ___bmul
   _cambiar_fila_derecha
   _cambiar_fila_izquierda
   _config
     _OSC_config
     _init_ADC
     _init_PWM_2
   _dis_ade
     _init_ADC
   _dis_atr
     _init_ADC
   _esperar
   _obstaculo
   _regresar
     _dis_ade
       _init_ADC
     _dis_atr
       _init_ADC
     _esperar
   _select_velocidad
     _Servo2_grados

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      D      19       5       31.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      23      12        0.0%
ABS                  0      0      23       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun May 03 23:58:45 2020

                              _z 002D                   ___bmul@product 0020          ?_cambiar_fila_izquierda 0070  
                    __CFG_CP$OFF 0000                      _SSPSTATbits 0094                               _BF 04A0  
                            l220 04A2                              l221 04A4                              l230 04B8  
                            l222 04A6                              l231 04BB                              l223 04A8  
                            l232 04BE                              l224 04AA                              l233 04C2  
                            l225 04AC                              l234 04C6                              l226 04AE  
                            l218 04A1                              l235 04CB                              l227 04B0  
                            l219 050A                              l236 0514                              l228 04B2  
                            l260 0615                              l229 04B5                              l255 059A  
                            l247 05FB                              l185 0120                              l258 0611  
                            _GIE 005F                              _PR2 0092                     __CFG_CPD$OFF 0000  
                            _ISR 027B                              u725 0204                              u825 00EC  
                            u907 0211                              u917 0223                              u927 0232  
                            u937 0246                              u947 025C                              u867 004E  
                            u957 026E                              u877 0060                              u967 0566  
                            u887 0092                              u977 0573                              u897 00FF  
                            u987 057F                              u997 0645                     __CFG_LVP$OFF 0000  
                           ?_ISR 0070                             l3003 05E8                             l3111 0253  
                           l3131 066C                             l3109 023B                             l3205 00EF  
                           l3213 0108                             l3127 0666                             l3223 011D  
                           l3225 0080                             l3145 003F                             l3219 0116  
                           l3087 01D9                             l3185 00B1                             l3193 00BF  
                           l3187 00B6                             l3701 018B                             l3703 0195  
                           l3199 00C1                             l3705 019F                             l2809 04D0  
                           l2833 055E                             l2841 0585                             l3707 01A9  
                           l2851 012B                             l2835 056D                             l3709 01B3  
                           l2861 014E                             l2853 0132                             l2837 0579  
                           l2941 051E                             l2863 0155                             l2855 0139  
                           l3671 053E                             l2951 052D                             l2943 0521  
                           l3681 017C                             l2865 015A                             l2857 0140  
                           l2849 0126                             l3673 058F                             l2953 0530  
                           l2945 0524                             l3691 01AE                             l3683 0186  
                           l2859 0147                             l2867 0161                             l3675 04D8  
                           l2955 0533                             l2947 0527                             l2939 051B  
                           l3685 0190                             l3677 0168                             l3693 01B8  
                           l2949 052A                             l3669 05F0                             l3687 019A  
                           l3679 0172                             l3695 016D                             l2959 0536  
                           l3689 01A4                             l3697 0177                             l3699 0181  
                           l2995 05D9                             l2997 05DE                             l2999 05E3  
                           u1007 065D                             u1017 0324                             u1107 044B  
                           u1027 0336                             u1117 045D                             u1037 0347  
                           u1207 0401                             u1127 046E                             u1047 0359  
                           u1217 0412                             u1137 0480                             u1057 036A  
                           u1147 0491                             u1067 037C                             u1157 03A9  
                           u1077 038D                             u1167 03BB                             u1087 0428  
                           u1177 03CC                             u1097 043A                             u1187 03DE  
                           u1197 03EF                             _PEIE 005E                     __CFG_WRT$OFF 0000  
                           _main 002B                             btemp 007E                             start 000C  
                  __CFG_IESO$OFF 0000                ___bmul@multiplier 0021   __end_of_cambiar_fila_izquierda 049B  
                          ??_ISR 0070                            ?_main 0070                    __CFG_WDTE$OFF 0000  
                          _ANSEL 0188                            i1l141 02D7                            i1l142 029E  
                          i1l160 030B                            i1l152 030F                            i1l163 0312  
               _select_velocidad 05D5                            _PORTA 0005                            _PORTB 0006  
                          _PORTD 0008                            _PORTE 0009                            _TRISA 0085  
                          _TRISB 0086                            _TRISD 0088                            _SSPIE 0463  
                          _TRISE 0089                            _SSPIF 0063                  __end_of_dis_ade 0662  
                 __CFG_FCMEN$OFF 0000                  __end_of_dis_atr 064A                            _ancho 0034  
                          _atras 0076                            _largo 0035                  __end_of_esperar 059B  
                          _motor 002F                            main@i 002B                   __CFG_BOREN$OFF 0000  
                    ?_OSC_config 0020                            pclath 000A                            status 0003  
                          wtemp0 007E                    _indicador_mov 0038                   __CFG_MCLRE$OFF 0000  
                __initialization 000F                     __end_of_main 0125            __end_of_Servo2_grados 055C  
                         ??_main 0028                           _ADRESH 001E                           _CCPR1L 0015  
                         _CCPR2L 001B                           _ANSELH 0189                           i1l2231 028E  
                         i1l2223 0284                           i1l2251 02B8                           i1l2261 02C9  
                         i1l2247 02B0                           i1l2281 02F4                           i1l2285 02FC  
                         i1l2277 02ED                           u122_27 02D3                           u123_27 0308  
                         _SSPADD 0093                           _TRISC3 043B                           _TRISC4 043C  
                         _SSPBUF 0013                           _SSPCON 0014                   __CFG_PWRTE$OFF 0000  
                         ___bmul 0662                 __end_of_init_ADC 0517                           _config 059B  
            __size_of_OSC_config 00AE                        ??_dis_ade 0021                        ??_dis_atr 0021  
               __end_of_regresar 027B                        ??_esperar 0020                           saved_w 007E  
   __end_of_cambiar_fila_derecha 041D          __end_of__initialization 0027              ___bmul@multiplicand 0074  
                init_ADC@channel 0020                   __pcstackCOMMON 0070                     __pidataBANK0 0675  
        __size_of_I2C_Slave_Init 0019            I2C_Slave_Init@address 0074                       __pbssBANK0 002D  
       __end_of_select_velocidad 05FC                       __pmaintext 002B               __size_of_obstaculo 0085  
                        ?___bmul 0074                       __pintentry 0004                          ?_config 0070  
           OSC_config@frecuencia 0020                          _SSPCON2 0091                          _SSPSTAT 0094  
                     _contador_m 0037                     ??_OSC_config 0074                        ?_init_ADC 0070  
                      ?_regresar 0070                       _init_PWM_2 05FC                  __size_of___bmul 0013  
                __size_of_config 003A                          _dis_ade 064A                          __ptext1 05D5  
                        __ptext2 0517                          __ptext3 01D3                          __ptext4 055C  
                        __ptext5 0632                          __ptext6 064A                          _dis_atr 0632  
                        __ptext7 0319                          __ptext8 059B                          __ptext9 05FC  
           _cambiar_fila_derecha 039E               __end_of_OSC_config 01D3                     __size_of_ISR 009E  
                      _T2CONbits 0012                          _esperar 055C                          _recibir 0079  
              __end_of_obstaculo 039E             end_of_initialization 0027                       ??_init_ADC 0074  
                     ??_regresar 0023                   _I2C_Slave_Init 0619            ?_cambiar_fila_derecha 0070  
                      _PORTBbits 0006                        _TRISCbits 0087                      _CCP1CONbits 0017  
       ??_cambiar_fila_izquierda 0020           __size_of_Servo2_grados 0045           __end_of_I2C_Slave_Init 0632  
                    ?_init_PWM_2 0070                   __end_of___bmul 0675                   __end_of_config 05D5  
            start_initialization 000F                      __end_of_ISR 0319         __CFG_FOSC$INTRC_NOCLKOUT 0000  
              ?_select_velocidad 0070                  ?_I2C_Slave_Init 0074                       esperar@vel 0074  
             ??_select_velocidad 0021                         ??___bmul 0075                         ??_config 0076  
                    __pdataBANK0 0037           ??_cambiar_fila_derecha 0020                    _Servo2_grados 0517  
                    __pbssCOMMON 0076                        ___latbits 0002                    __pcstackBANK0 0020  
            __size_of_init_PWM_2 001D  __size_of_cambiar_fila_izquierda 007E                __size_of_init_ADC 007C  
              __size_of_regresar 00A8                   ?_Servo2_grados 0070                         ?_dis_ade 0070  
                       ?_dis_atr 0070                         ?_esperar 0070                        _indicador 0033  
                      _obstaculo 0319                interrupt_function 0004                         _PIR1bits 000C  
            select_velocidad@vel 0023                        _velocidad 0036                       _ADCON0bits 001F  
                     _ADCON1bits 009F           _cambiar_fila_izquierda 041D                       ?_obstaculo 0070  
                   ??_init_PWM_2 0074                  ??_Servo2_grados 0074       Servo2_grados@Servo2_grados 0020  
                       _adelante 0030                 __size_of_dis_ade 0018                 __size_of_dis_atr 0018  
               __size_of_esperar 003F                         __ptext10 049B                         __ptext11 0125  
                       __ptext12 041D                         __ptext13 039E                         __ptext14 0662  
                       __ptext15 0619                         __ptext16 027B                __CFG_BOR4V$BOR40V 0000  
                      regresar@i 0026               __end_of_init_PWM_2 0619                         _contador 0077  
                       _cont_obs 0032                 ??_I2C_Slave_Init 0076                         _init_ADC 049B  
                  __size_of_main 00FA                      _recibir_ind 0078                         _regresar 01D3  
                       _muestras 0031        __size_of_select_velocidad 0027                         intlevel1 0000  
                    ??_obstaculo 0020                       _OSCCONbits 008F    __size_of_cambiar_fila_derecha 007F  
                     _OSC_config 0125                       _SSPCONbits 0014  

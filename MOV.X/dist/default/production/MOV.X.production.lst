

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun May 03 23:44:57 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.05
    32                           ; Generated 20/12/2018 GMT
    33                           ; 
    34                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221                           
   222                           	psect	idataBANK0
   223  0673                     __pidataBANK0:	
   224                           
   225                           ;initializer for _contador_m
   226  0673  3401               	retlw	1
   227                           
   228                           ;initializer for _indicador_mov
   229  0674  3401               	retlw	1
   230  0014                     _SSPCON	set	20
   231  0015                     _CCPR1L	set	21
   232  0012                     _T2CONbits	set	18
   233  001B                     _CCPR2L	set	27
   234  0017                     _CCP1CONbits	set	23
   235  001F                     _ADCON0bits	set	31
   236  001E                     _ADRESH	set	30
   237  0009                     _PORTE	set	9
   238  0005                     _PORTA	set	5
   239  0008                     _PORTD	set	8
   240  0006                     _PORTB	set	6
   241  0013                     _SSPBUF	set	19
   242  0014                     _SSPCONbits	set	20
   243  000C                     _PIR1bits	set	12
   244  0063                     _SSPIF	set	99
   245  005E                     _PEIE	set	94
   246  005F                     _GIE	set	95
   247  0091                     _SSPCON2	set	145
   248  0093                     _SSPADD	set	147
   249  0094                     _SSPSTAT	set	148
   250  008F                     _OSCCONbits	set	143
   251  0092                     _PR2	set	146
   252  0087                     _TRISCbits	set	135
   253  009F                     _ADCON1bits	set	159
   254  0085                     _TRISA	set	133
   255  0089                     _TRISE	set	137
   256  0086                     _TRISB	set	134
   257  0088                     _TRISD	set	136
   258  0094                     _SSPSTATbits	set	148
   259  0463                     _SSPIE	set	1123
   260  043C                     _TRISC4	set	1084
   261  043B                     _TRISC3	set	1083
   262  04A0                     _BF	set	1184
   263  0188                     _ANSEL	set	392
   264  0189                     _ANSELH	set	393
   265                           
   266                           ; #config settings
   267  0000                     
   268                           	psect	cinit
   269  000F                     start_initialization:	
   270  000F                     __initialization:	
   271                           
   272                           ; Initialize objects allocated to BANK0
   273  000F  120A  118A  2673  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   274  0014  00B7               	movwf	__pdataBANK0& (0+127)
   275  0015  120A  118A  2674   	fcall	__pidataBANK0+1	;fetch initializer
   276  0018  00B8               	movwf	(__pdataBANK0+1)& (0+127)
   277                           
   278                           ; Clear objects allocated to BANK0
   279  0019  01AD               	clrf	__pbssBANK0& (0+127)
   280  001A  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   281  001B  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   282  001C  01B0               	clrf	(__pbssBANK0+3)& (0+127)
   283  001D  01B1               	clrf	(__pbssBANK0+4)& (0+127)
   284  001E  01B2               	clrf	(__pbssBANK0+5)& (0+127)
   285  001F  01B3               	clrf	(__pbssBANK0+6)& (0+127)
   286  0020  01B4               	clrf	(__pbssBANK0+7)& (0+127)
   287  0021  01B5               	clrf	(__pbssBANK0+8)& (0+127)
   288  0022  01B6               	clrf	(__pbssBANK0+9)& (0+127)
   289                           
   290                           ; Clear objects allocated to COMMON
   291  0023  01F6               	clrf	__pbssCOMMON& (0+127)
   292  0024  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   293  0025  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   294  0026  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   295  0027                     end_of_initialization:	
   296                           ;End of C runtime variable initialization code
   297                           
   298  0027                     __end_of__initialization:	
   299  0027  0183               	clrf	3
   300  0028  120A  118A  282B   	ljmp	_main	;jump to C main() function
   301                           
   302                           	psect	bssCOMMON
   303  0076                     __pbssCOMMON:	
   304  0076                     _atras:	
   305  0076                     	ds	1
   306  0077                     _contador:	
   307  0077                     	ds	1
   308  0078                     _recibir_ind:	
   309  0078                     	ds	1
   310  0079                     _recibir:	
   311  0079                     	ds	1
   312                           
   313                           	psect	bssBANK0
   314  002D                     __pbssBANK0:	
   315  002D                     _z:	
   316  002D                     	ds	2
   317  002F                     _motor:	
   318  002F                     	ds	1
   319  0030                     _adelante:	
   320  0030                     	ds	1
   321  0031                     _muestras:	
   322  0031                     	ds	1
   323  0032                     _cont_obs:	
   324  0032                     	ds	1
   325  0033                     _indicador:	
   326  0033                     	ds	1
   327  0034                     _ancho:	
   328  0034                     	ds	1
   329  0035                     _largo:	
   330  0035                     	ds	1
   331  0036                     _velocidad:	
   332  0036                     	ds	1
   333                           
   334                           	psect	dataBANK0
   335  0037                     __pdataBANK0:	
   336  0037                     _contador_m:	
   337  0037                     	ds	1
   338  0038                     _indicador_mov:	
   339  0038                     	ds	1
   340                           
   341                           	psect	cstackCOMMON
   342  0070                     __pcstackCOMMON:	
   343  0070                     ?_config:	
   344  0070                     ?_select_velocidad:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_dis_ade:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_dis_atr:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_cambiar_fila_derecha:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_cambiar_fila_izquierda:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_esperar:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_obstaculo:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_regresar:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_init_PWM_2:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_init_ADC:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ?_Servo2_grados:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_ISR:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ??_ISR:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_main:	
   384                           ; 1 bytes @ 0x0
   385                           
   386                           
   387                           ; 1 bytes @ 0x0
   388  0070                     	ds	4
   389  0074                     ?_I2C_Slave_Init:	
   390  0074                     ??_OSC_config:	
   391                           ; 1 bytes @ 0x4
   392                           
   393  0074                     ??_init_PWM_2:	
   394                           ; 1 bytes @ 0x4
   395                           
   396  0074                     ??_init_ADC:	
   397                           ; 1 bytes @ 0x4
   398                           
   399  0074                     ??_Servo2_grados:	
   400                           ; 1 bytes @ 0x4
   401                           
   402  0074                     ?___bmul:	
   403                           ; 1 bytes @ 0x4
   404                           
   405  0074                     esperar@vel:	
   406                           ; 1 bytes @ 0x4
   407                           
   408  0074                     ___bmul@multiplicand:	
   409                           ; 1 bytes @ 0x4
   410                           
   411  0074                     I2C_Slave_Init@address:	
   412                           ; 1 bytes @ 0x4
   413                           
   414                           
   415                           ; 2 bytes @ 0x4
   416  0074                     	ds	1
   417  0075                     ??___bmul:	
   418                           
   419                           ; 1 bytes @ 0x5
   420  0075                     	ds	1
   421  0076                     ??_config:	
   422  0076                     ??_I2C_Slave_Init:	
   423                           ; 1 bytes @ 0x6
   424                           
   425                           
   426                           	psect	cstackBANK0
   427  0020                     __pcstackBANK0:	
   428                           ; 1 bytes @ 0x6
   429                           
   430  0020                     ??_cambiar_fila_derecha:	
   431  0020                     ??_cambiar_fila_izquierda:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0020                     ??_esperar:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0020                     ??_obstaculo:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0020                     ?_OSC_config:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0020                     init_ADC@channel:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0020                     Servo2_grados@Servo2_grados:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0020                     ___bmul@product:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0020                     OSC_config@frecuencia:	
   453                           ; 1 bytes @ 0x0
   454                           
   455                           
   456                           ; 4 bytes @ 0x0
   457  0020                     	ds	1
   458  0021                     ??_select_velocidad:	
   459  0021                     ??_dis_ade:	
   460                           ; 1 bytes @ 0x1
   461                           
   462  0021                     ??_dis_atr:	
   463                           ; 1 bytes @ 0x1
   464                           
   465  0021                     ___bmul@multiplier:	
   466                           ; 1 bytes @ 0x1
   467                           
   468                           
   469                           ; 1 bytes @ 0x1
   470  0021                     	ds	2
   471  0023                     ??_regresar:	
   472  0023                     select_velocidad@vel:	
   473                           ; 1 bytes @ 0x3
   474                           
   475                           
   476                           ; 1 bytes @ 0x3
   477  0023                     	ds	3
   478  0026                     regresar@i:	
   479                           
   480                           ; 2 bytes @ 0x6
   481  0026                     	ds	2
   482  0028                     ??_main:	
   483                           
   484                           ; 1 bytes @ 0x8
   485  0028                     	ds	3
   486  002B                     main@i:	
   487                           
   488                           ; 2 bytes @ 0xB
   489  002B                     	ds	2
   490                           
   491                           	psect	maintext
   492  002B                     __pmaintext:	
   493 ;;
   494 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   495 ;;
   496 ;; *************** function _main *****************
   497 ;; Defined at:
   498 ;;		line 136 in file "MAIN_CONTROL.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;  i               2   11[BANK0 ] int 
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : B00/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   512 ;;      Params:         0       0       0       0       0
   513 ;;      Locals:         0       2       0       0       0
   514 ;;      Temps:          0       3       0       0       0
   515 ;;      Totals:         0       5       0       0       0
   516 ;;Total ram usage:        5 bytes
   517 ;; Hardware stack levels required when called:    4
   518 ;; This function calls:
   519 ;;		_I2C_Slave_Init
   520 ;;		___bmul
   521 ;;		_cambiar_fila_derecha
   522 ;;		_cambiar_fila_izquierda
   523 ;;		_config
   524 ;;		_dis_ade
   525 ;;		_dis_atr
   526 ;;		_esperar
   527 ;;		_obstaculo
   528 ;;		_regresar
   529 ;;		_select_velocidad
   530 ;; This function is called by:
   531 ;;		Startup code after reset
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535                           
   536                           ;psect for function _main
   537  002B                     _main:	
   538                           
   539                           ;MAIN_CONTROL.c: 137:     config();
   540                           
   541                           ;incstack = 0
   542                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   543  002B  120A  118A  2599  120A  118A  	fcall	_config
   544                           
   545                           ;MAIN_CONTROL.c: 138:     I2C_Slave_Init(0x30);
   546  0030  3030               	movlw	48
   547  0031  00F4               	movwf	I2C_Slave_Init@address
   548  0032  3000               	movlw	0
   549  0033  00F5               	movwf	I2C_Slave_Init@address+1
   550  0034  120A  118A  2617  120A  118A  	fcall	_I2C_Slave_Init
   551                           
   552                           ;MAIN_CONTROL.c: 139:     select_velocidad(2);
   553  0039  3002               	movlw	2
   554  003A  120A  118A  25D3  120A  118A  	fcall	_select_velocidad
   555  003F                     l3135:	
   556                           
   557                           ;MAIN_CONTROL.c: 141:         PORTB = 0xFF;
   558  003F  30FF               	movlw	255
   559  0040  1283               	bcf	3,5	;RP0=0, select bank0
   560  0041  1303               	bcf	3,6	;RP1=0, select bank0
   561  0042  0086               	movwf	6	;volatile
   562                           
   563                           ;MAIN_CONTROL.c: 142:         dis_ade();
   564  0043  120A  118A  2648  120A  118A  	fcall	_dis_ade
   565                           
   566                           ;MAIN_CONTROL.c: 143:         _delay((unsigned long)((300)*(1000000/4000.0)));
   567  0048  3062               	movlw	98
   568  0049  1283               	bcf	3,5	;RP0=0, select bank0
   569  004A  1303               	bcf	3,6	;RP1=0, select bank0
   570  004B  00A9               	movwf	??_main+1
   571  004C  3065               	movlw	101
   572  004D  00A8               	movwf	??_main
   573  004E                     u867:	
   574  004E  0BA8               	decfsz	??_main,f
   575  004F  284E               	goto	u867
   576  0050  0BA9               	decfsz	??_main+1,f
   577  0051  284E               	goto	u867
   578                           
   579                           ;MAIN_CONTROL.c: 144:         PORTB = 0x00;
   580  0052  1283               	bcf	3,5	;RP0=0, select bank0
   581  0053  1303               	bcf	3,6	;RP1=0, select bank0
   582  0054  0186               	clrf	6	;volatile
   583                           
   584                           ;MAIN_CONTROL.c: 145:         dis_atr();
   585  0055  120A  118A  2630  120A  118A  	fcall	_dis_atr
   586                           
   587                           ;MAIN_CONTROL.c: 146:         _delay((unsigned long)((300)*(1000000/4000.0)));
   588  005A  3062               	movlw	98
   589  005B  1283               	bcf	3,5	;RP0=0, select bank0
   590  005C  1303               	bcf	3,6	;RP1=0, select bank0
   591  005D  00A9               	movwf	??_main+1
   592  005E  3065               	movlw	101
   593  005F  00A8               	movwf	??_main
   594  0060                     u877:	
   595  0060  0BA8               	decfsz	??_main,f
   596  0061  2860               	goto	u877
   597  0062  0BA9               	decfsz	??_main+1,f
   598  0063  2860               	goto	u877
   599                           
   600                           ;MAIN_CONTROL.c: 148:         if (indicador_mov==1){
   601  0064  1283               	bcf	3,5	;RP0=0, select bank0
   602  0065  1303               	bcf	3,6	;RP1=0, select bank0
   603  0066  0338               	decf	_indicador_mov,w
   604  0067  1D03               	btfss	3,2
   605  0068  283F               	goto	l3135
   606                           
   607                           ;MAIN_CONTROL.c: 149:             select_velocidad(velocidad);
   608  0069  0836               	movf	_velocidad,w
   609  006A  120A  118A  25D3  120A  118A  	fcall	_select_velocidad
   610                           
   611                           ;MAIN_CONTROL.c: 150:             muestras = largo*ancho;
   612  006F  1283               	bcf	3,5	;RP0=0, select bank0
   613  0070  1303               	bcf	3,6	;RP1=0, select bank0
   614  0071  0834               	movf	_ancho,w
   615  0072  00A8               	movwf	??_main
   616  0073  0828               	movf	??_main,w
   617  0074  00F4               	movwf	___bmul@multiplicand
   618  0075  0835               	movf	_largo,w
   619  0076  120A  118A  2660  120A  118A  	fcall	___bmul
   620  007B  1283               	bcf	3,5	;RP0=0, select bank0
   621  007C  1303               	bcf	3,6	;RP1=0, select bank0
   622  007D  00A9               	movwf	??_main+1
   623  007E  0829               	movf	??_main+1,w
   624  007F  00B1               	movwf	_muestras
   625  0080                     l3211:	
   626                           ;MAIN_CONTROL.c: 151:             while(muestras > 1){
   627                           
   628                           
   629                           ;MAIN_CONTROL.c: 151:             while(muestras > 1){
   630  0080  3002               	movlw	2
   631  0081  0231               	subwf	_muestras,w
   632  0082  1C03               	btfss	3,0
   633  0083  291E               	goto	l183
   634                           
   635                           ;MAIN_CONTROL.c: 152:                 PORTD = 0;
   636  0084  0188               	clrf	8	;volatile
   637                           
   638                           ;MAIN_CONTROL.c: 153:                 motor = 0xF0;
   639  0085  30F0               	movlw	240
   640  0086  00A8               	movwf	??_main
   641  0087  0828               	movf	??_main,w
   642  0088  00AF               	movwf	_motor
   643                           
   644                           ;MAIN_CONTROL.c: 154:                 _delay((unsigned long)((5000)*(1000000/4000.0)));
   645  0089  3007               	movlw	7
   646  008A  1283               	bcf	3,5	;RP0=0, select bank0
   647  008B  1303               	bcf	3,6	;RP1=0, select bank0
   648  008C  00AA               	movwf	??_main+2
   649  008D  3058               	movlw	88
   650  008E  00A9               	movwf	??_main+1
   651  008F  3059               	movlw	89
   652  0090  00A8               	movwf	??_main
   653  0091                     u887:	
   654  0091  0BA8               	decfsz	??_main,f
   655  0092  2891               	goto	u887
   656  0093  0BA9               	decfsz	??_main+1,f
   657  0094  2891               	goto	u887
   658  0095  0BAA               	decfsz	??_main+2,f
   659  0096  2891               	goto	u887
   660                           
   661                           ;MAIN_CONTROL.c: 155:                 PORTD = 0b10101010;
   662  0097  30AA               	movlw	170
   663  0098  1283               	bcf	3,5	;RP0=0, select bank0
   664  0099  1303               	bcf	3,6	;RP1=0, select bank0
   665  009A  0088               	movwf	8	;volatile
   666                           
   667                           ;MAIN_CONTROL.c: 156:                 motor = 0x00;
   668  009B  01AF               	clrf	_motor
   669                           
   670                           ;MAIN_CONTROL.c: 157:                 if (muestras > 1){
   671  009C  3002               	movlw	2
   672  009D  0231               	subwf	_muestras,w
   673  009E  1C03               	skipc
   674  009F  291B               	goto	l3209
   675                           
   676                           ;MAIN_CONTROL.c: 158:                     if(contador_m == largo){
   677  00A0  0837               	movf	_contador_m,w
   678  00A1  0635               	xorwf	_largo,w
   679  00A2  1D03               	skipz
   680  00A3  28BD               	goto	l3179
   681                           
   682                           ;MAIN_CONTROL.c: 159:                         if (muestras !=1){
   683  00A4  0331               	decf	_muestras,w
   684  00A5  1903               	btfsc	3,2
   685  00A6  291B               	goto	l3209
   686                           
   687                           ;MAIN_CONTROL.c: 160:                             if(indicador==0){
   688  00A7  0833               	movf	_indicador,w
   689  00A8  1D03               	btfss	3,2
   690  00A9  28B4               	goto	l3173
   691                           
   692                           ;MAIN_CONTROL.c: 161:                                 cambiar_fila_derecha();
   693  00AA  120A  118A  239C  120A  118A  	fcall	_cambiar_fila_derecha
   694  00AF                     l3171:	
   695                           
   696                           ;MAIN_CONTROL.c: 162:                                 contador_m = 1;
   697  00AF  1283               	bcf	3,5	;RP0=0, select bank0
   698  00B0  1303               	bcf	3,6	;RP1=0, select bank0
   699  00B1  01B7               	clrf	_contador_m
   700  00B2  0AB7               	incf	_contador_m,f
   701                           
   702                           ;MAIN_CONTROL.c: 163:                             }
   703  00B3  291B               	goto	l3209
   704  00B4                     l3173:	
   705  00B4  0333               	decf	_indicador,w
   706  00B5  1D03               	btfss	3,2
   707  00B6  291B               	goto	l3209
   708                           
   709                           ;MAIN_CONTROL.c: 165:                                 cambiar_fila_izquierda();
   710  00B7  120A  118A  241B  120A  118A  	fcall	_cambiar_fila_izquierda
   711  00BC  28AF               	goto	l3171
   712  00BD                     l3179:	
   713                           
   714                           ;MAIN_CONTROL.c: 171:                         for(int i = 0;i<6;i++){
   715  00BD  01AB               	clrf	main@i
   716  00BE  01AC               	clrf	main@i+1
   717  00BF                     l3185:	
   718                           
   719                           ;MAIN_CONTROL.c: 172:                             dis_ade();
   720  00BF  120A  118A  2648  120A  118A  	fcall	_dis_ade
   721                           
   722                           ;MAIN_CONTROL.c: 173:                             esperar(velocidad);
   723  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   724  00C5  1303               	bcf	3,6	;RP1=0, select bank0
   725  00C6  0836               	movf	_velocidad,w
   726  00C7  120A  118A  255A  120A  118A  	fcall	_esperar
   727                           
   728                           ;MAIN_CONTROL.c: 174:                             dis_atr();
   729  00CC  120A  118A  2630  120A  118A  	fcall	_dis_atr
   730                           
   731                           ;MAIN_CONTROL.c: 175:                             esperar(velocidad);
   732  00D1  1283               	bcf	3,5	;RP0=0, select bank0
   733  00D2  1303               	bcf	3,6	;RP1=0, select bank0
   734  00D3  0836               	movf	_velocidad,w
   735  00D4  120A  118A  255A  120A  118A  	fcall	_esperar
   736                           
   737                           ;MAIN_CONTROL.c: 176:                         }
   738  00D9  3001               	movlw	1
   739  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   740  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   741  00DC  07AB               	addwf	main@i,f
   742  00DD  1803               	skipnc
   743  00DE  0AAC               	incf	main@i+1,f
   744  00DF  3000               	movlw	0
   745  00E0  07AC               	addwf	main@i+1,f
   746  00E1  082C               	movf	main@i+1,w
   747  00E2  3A80               	xorlw	128
   748  00E3  00FF               	movwf	127
   749  00E4  3080               	movlw	128
   750  00E5  027F               	subwf	127,w
   751  00E6  1D03               	skipz
   752  00E7  28EA               	goto	u825
   753  00E8  3006               	movlw	6
   754  00E9  022B               	subwf	main@i,w
   755  00EA                     u825:	
   756  00EA  1803               	btfsc	3,0
   757  00EB  2906               	goto	l3199
   758  00EC  28BF               	goto	l3185
   759  00ED                     l3191:	
   760                           
   761                           ;MAIN_CONTROL.c: 178:                             obstaculo();
   762  00ED  120A  118A  2317  120A  118A  	fcall	_obstaculo
   763                           
   764                           ;MAIN_CONTROL.c: 179:                             dis_ade();
   765  00F2  120A  118A  2648  120A  118A  	fcall	_dis_ade
   766                           
   767                           ;MAIN_CONTROL.c: 180:                             _delay((unsigned long)((300)*(1000000/
      +                          4000.0)));
   768  00F7  3062               	movlw	98
   769  00F8  1283               	bcf	3,5	;RP0=0, select bank0
   770  00F9  1303               	bcf	3,6	;RP1=0, select bank0
   771  00FA  00A9               	movwf	??_main+1
   772  00FB  3065               	movlw	101
   773  00FC  00A8               	movwf	??_main
   774  00FD                     u897:	
   775  00FD  0BA8               	decfsz	??_main,f
   776  00FE  28FD               	goto	u897
   777  00FF  0BA9               	decfsz	??_main+1,f
   778  0100  28FD               	goto	u897
   779                           
   780                           ;MAIN_CONTROL.c: 181:                             dis_atr();
   781  0101  120A  118A  2630  120A  118A  	fcall	_dis_atr
   782  0106                     l3199:	
   783                           
   784                           ;MAIN_CONTROL.c: 177:                         while(adelante <20){
   785  0106  3014               	movlw	20
   786  0107  1283               	bcf	3,5	;RP0=0, select bank0
   787  0108  1303               	bcf	3,6	;RP1=0, select bank0
   788  0109  0230               	subwf	_adelante,w
   789  010A  1C03               	skipc
   790  010B  28ED               	goto	l3191
   791                           
   792                           ;MAIN_CONTROL.c: 183:                         if(cont_obs>0){
   793  010C  0832               	movf	_cont_obs,w
   794  010D  1903               	btfsc	3,2
   795  010E  2914               	goto	l3205
   796                           
   797                           ;MAIN_CONTROL.c: 184:                             regresar();
   798  010F  120A  118A  21D1  120A  118A  	fcall	_regresar
   799  0114                     l3205:	
   800                           
   801                           ;MAIN_CONTROL.c: 186:                         contador_m++;
   802  0114  3001               	movlw	1
   803  0115  1283               	bcf	3,5	;RP0=0, select bank0
   804  0116  1303               	bcf	3,6	;RP1=0, select bank0
   805  0117  00A8               	movwf	??_main
   806  0118  0828               	movf	??_main,w
   807  0119  07B7               	addwf	_contador_m,f
   808                           
   809                           ;MAIN_CONTROL.c: 187:                         PORTD = 0;
   810  011A  0188               	clrf	8	;volatile
   811  011B                     l3209:	
   812                           ;MAIN_CONTROL.c: 188:                     }
   813                           
   814                           
   815                           ;MAIN_CONTROL.c: 191:                 muestras--;
   816  011B  3001               	movlw	1
   817  011C  02B1               	subwf	_muestras,f
   818  011D  2880               	goto	l3211
   819  011E                     l183:	
   820                           
   821                           ;MAIN_CONTROL.c: 193:             contador_m = 1;
   822  011E  01B7               	clrf	_contador_m
   823  011F  0AB7               	incf	_contador_m,f
   824                           
   825                           ;MAIN_CONTROL.c: 194:             indicador_mov = 0;
   826  0120  01B8               	clrf	_indicador_mov
   827                           
   828                           ;MAIN_CONTROL.c: 195:             indicador = 0;
   829  0121  01B3               	clrf	_indicador
   830  0122  283F               	goto	l3135
   831  0123                     __end_of_main:	
   832                           
   833                           	psect	text1
   834  05D3                     __ptext1:	
   835 ;; *************** function _select_velocidad *****************
   836 ;; Defined at:
   837 ;;		line 445 in file "MAIN_CONTROL.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  vel             1    wreg     unsigned char 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;  vel             1    3[BANK0 ] unsigned char 
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   851 ;;      Params:         0       0       0       0       0
   852 ;;      Locals:         0       1       0       0       0
   853 ;;      Temps:          0       2       0       0       0
   854 ;;      Totals:         0       3       0       0       0
   855 ;;Total ram usage:        3 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; Hardware stack levels required when called:    2
   858 ;; This function calls:
   859 ;;		_Servo2_grados
   860 ;; This function is called by:
   861 ;;		_main
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           
   866                           ;psect for function _select_velocidad
   867  05D3                     _select_velocidad:	
   868                           
   869                           ;incstack = 0
   870                           ; Regs used in _select_velocidad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   871                           ;select_velocidad@vel stored from wreg
   872  05D3  1283               	bcf	3,5	;RP0=0, select bank0
   873  05D4  1303               	bcf	3,6	;RP1=0, select bank0
   874  05D5  00A3               	movwf	select_velocidad@vel
   875                           
   876                           ;MAIN_CONTROL.c: 446:     switch(vel){
   877  05D6  2DE6               	goto	l2993
   878  05D7                     l2985:	
   879                           
   880                           ;MAIN_CONTROL.c: 448:             Servo2_grados(30);
   881  05D7  301E               	movlw	30
   882  05D8  120A  118A  2515   	fcall	_Servo2_grados
   883                           
   884                           ;MAIN_CONTROL.c: 449:             break;
   885  05DB  0008               	return
   886  05DC                     l2987:	
   887                           
   888                           ;MAIN_CONTROL.c: 452:             Servo2_grados(90);
   889  05DC  305A               	movlw	90
   890  05DD  120A  118A  2515   	fcall	_Servo2_grados
   891                           
   892                           ;MAIN_CONTROL.c: 453:             break;
   893  05E0  0008               	return
   894  05E1                     l2989:	
   895                           
   896                           ;MAIN_CONTROL.c: 455:             Servo2_grados(180);
   897  05E1  30B4               	movlw	180
   898  05E2  120A  118A  2515   	fcall	_Servo2_grados
   899                           
   900                           ;MAIN_CONTROL.c: 456:             break;
   901  05E5  0008               	return
   902  05E6                     l2993:	
   903  05E6  0823               	movf	select_velocidad@vel,w
   904  05E7  00A1               	movwf	??_select_velocidad
   905  05E8  01A2               	clrf	??_select_velocidad+1
   906                           
   907                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   908                           ; Switch size 1, requested type "simple"
   909                           ; Number of cases is 1, Range of values is 0 to 0
   910                           ; switch strategies available:
   911                           ; Name         Instructions Cycles
   912                           ; simple_byte            4     3 (average)
   913                           ; direct_byte           11     8 (fixed)
   914                           ; jumptable            260     6 (fixed)
   915                           ;	Chosen strategy is simple_byte
   916  05E9  0822               	movf	??_select_velocidad+1,w
   917  05EA  3A00               	xorlw	0	; case 0
   918  05EB  1903               	skipnz
   919  05EC  2DEE               	goto	l3655
   920  05ED  2DF9               	goto	l245
   921  05EE                     l3655:	
   922                           
   923                           ; Switch size 1, requested type "simple"
   924                           ; Number of cases is 3, Range of values is 1 to 3
   925                           ; switch strategies available:
   926                           ; Name         Instructions Cycles
   927                           ; simple_byte           10     6 (average)
   928                           ; direct_byte           20    11 (fixed)
   929                           ; jumptable            263     9 (fixed)
   930                           ;	Chosen strategy is simple_byte
   931  05EE  0821               	movf	??_select_velocidad,w
   932  05EF  3A01               	xorlw	1	; case 1
   933  05F0  1903               	skipnz
   934  05F1  2DD7               	goto	l2985
   935  05F2  3A03               	xorlw	3	; case 2
   936  05F3  1903               	skipnz
   937  05F4  2DDC               	goto	l2987
   938  05F5  3A01               	xorlw	1	; case 3
   939  05F6  1903               	skipnz
   940  05F7  2DE1               	goto	l2989
   941  05F8  2DF9               	goto	l245
   942  05F9                     l245:	
   943  05F9  0008               	return
   944  05FA                     __end_of_select_velocidad:	
   945                           
   946                           	psect	text2
   947  0515                     __ptext2:	
   948 ;; *************** function _Servo2_grados *****************
   949 ;; Defined at:
   950 ;;		line 540 in file "MAIN_CONTROL.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;  Servo2_grado    1    wreg     unsigned char 
   953 ;; Auto vars:     Size  Location     Type
   954 ;;  Servo2_grado    1    0[BANK0 ] unsigned char 
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   964 ;;      Params:         0       0       0       0       0
   965 ;;      Locals:         0       1       0       0       0
   966 ;;      Temps:          2       0       0       0       0
   967 ;;      Totals:         2       1       0       0       0
   968 ;;Total ram usage:        3 bytes
   969 ;; Hardware stack levels used:    1
   970 ;; Hardware stack levels required when called:    1
   971 ;; This function calls:
   972 ;;		Nothing
   973 ;; This function is called by:
   974 ;;		_select_velocidad
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           
   979                           ;psect for function _Servo2_grados
   980  0515                     _Servo2_grados:	
   981                           
   982                           ;incstack = 0
   983                           ; Regs used in _Servo2_grados: [wreg-fsr0h+status,2+status,0]
   984                           ;Servo2_grados@Servo2_grados stored from wreg
   985  0515  1283               	bcf	3,5	;RP0=0, select bank0
   986  0516  1303               	bcf	3,6	;RP1=0, select bank0
   987  0517  00A0               	movwf	Servo2_grados@Servo2_grados
   988                           
   989                           ;MAIN_CONTROL.c: 541:     switch(Servo2_grados){
   990  0518  2D34               	goto	l2949
   991  0519                     l2929:	
   992                           
   993                           ;MAIN_CONTROL.c: 543:             CCPR1L = 10;
   994  0519  300A               	movlw	10
   995  051A  0095               	movwf	21	;volatile
   996                           
   997                           ;MAIN_CONTROL.c: 544:             break;
   998  051B  0008               	return
   999  051C                     l2931:	
  1000                           
  1001                           ;MAIN_CONTROL.c: 547:             CCPR1L = 12;
  1002  051C  300C               	movlw	12
  1003  051D  0095               	movwf	21	;volatile
  1004                           
  1005                           ;MAIN_CONTROL.c: 548:             break;
  1006  051E  0008               	return
  1007  051F                     l2933:	
  1008                           
  1009                           ;MAIN_CONTROL.c: 551:             CCPR1L = 14;
  1010  051F  300E               	movlw	14
  1011  0520  0095               	movwf	21	;volatile
  1012                           
  1013                           ;MAIN_CONTROL.c: 552:             break;
  1014  0521  0008               	return
  1015  0522                     l2935:	
  1016                           
  1017                           ;MAIN_CONTROL.c: 555:             CCPR1L = 18;
  1018  0522  3012               	movlw	18
  1019  0523  0095               	movwf	21	;volatile
  1020                           
  1021                           ;MAIN_CONTROL.c: 556:             break;
  1022  0524  0008               	return
  1023  0525                     l2937:	
  1024                           
  1025                           ;MAIN_CONTROL.c: 559:             CCPR1L = 25;
  1026  0525  3019               	movlw	25
  1027  0526  0095               	movwf	21	;volatile
  1028                           
  1029                           ;MAIN_CONTROL.c: 560:             break;
  1030  0527  0008               	return
  1031  0528                     l2939:	
  1032                           
  1033                           ;MAIN_CONTROL.c: 563:             CCPR1L = 30;
  1034  0528  301E               	movlw	30
  1035  0529  0095               	movwf	21	;volatile
  1036                           
  1037                           ;MAIN_CONTROL.c: 564:             break;
  1038  052A  0008               	return
  1039  052B                     l2941:	
  1040                           
  1041                           ;MAIN_CONTROL.c: 567:             CCPR1L = 33;
  1042  052B  3021               	movlw	33
  1043  052C  0095               	movwf	21	;volatile
  1044                           
  1045                           ;MAIN_CONTROL.c: 568:             break;
  1046  052D  0008               	return
  1047  052E                     l2943:	
  1048                           
  1049                           ;MAIN_CONTROL.c: 571:             CCPR1L = 37;
  1050  052E  3025               	movlw	37
  1051  052F  0095               	movwf	21	;volatile
  1052                           
  1053                           ;MAIN_CONTROL.c: 572:             break;
  1054  0530  0008               	return
  1055  0531                     l2945:	
  1056                           
  1057                           ;MAIN_CONTROL.c: 575:             CCPR1L = 40;
  1058  0531  3028               	movlw	40
  1059  0532  0095               	movwf	21	;volatile
  1060                           
  1061                           ;MAIN_CONTROL.c: 576:             break;
  1062  0533  0008               	return
  1063  0534                     l2949:	
  1064  0534  0820               	movf	Servo2_grados@Servo2_grados,w
  1065  0535  00F4               	movwf	??_Servo2_grados
  1066  0536  01F5               	clrf	??_Servo2_grados+1
  1067                           
  1068                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1069                           ; Switch size 1, requested type "simple"
  1070                           ; Number of cases is 1, Range of values is 0 to 0
  1071                           ; switch strategies available:
  1072                           ; Name         Instructions Cycles
  1073                           ; simple_byte            4     3 (average)
  1074                           ; direct_byte           11     8 (fixed)
  1075                           ; jumptable            260     6 (fixed)
  1076                           ;	Chosen strategy is simple_byte
  1077  0537  0875               	movf	??_Servo2_grados+1,w
  1078  0538  3A00               	xorlw	0	; case 0
  1079  0539  1903               	skipnz
  1080  053A  2D3C               	goto	l3657
  1081  053B  2D19               	goto	l2929
  1082  053C                     l3657:	
  1083                           
  1084                           ; Switch size 1, requested type "simple"
  1085                           ; Number of cases is 9, Range of values is 0 to 180
  1086                           ; switch strategies available:
  1087                           ; Name         Instructions Cycles
  1088                           ; simple_byte           28    15 (average)
  1089                           ; jumptable            260     6 (fixed)
  1090                           ;	Chosen strategy is simple_byte
  1091  053C  0874               	movf	??_Servo2_grados,w
  1092  053D  3A00               	xorlw	0	; case 0
  1093  053E  1903               	skipnz
  1094  053F  2D19               	goto	l2929
  1095  0540  3A0A               	xorlw	10	; case 10
  1096  0541  1903               	skipnz
  1097  0542  2D1C               	goto	l2931
  1098  0543  3A14               	xorlw	20	; case 30
  1099  0544  1903               	skipnz
  1100  0545  2D1F               	goto	l2933
  1101  0546  3A33               	xorlw	51	; case 45
  1102  0547  1903               	skipnz
  1103  0548  2D22               	goto	l2935
  1104  0549  3A77               	xorlw	119	; case 90
  1105  054A  1903               	skipnz
  1106  054B  2D25               	goto	l2937
  1107  054C  3A22               	xorlw	34	; case 120
  1108  054D  1903               	skipnz
  1109  054E  2D28               	goto	l2939
  1110  054F  3AFF               	xorlw	255	; case 135
  1111  0550  1903               	skipnz
  1112  0551  2D2B               	goto	l2941
  1113  0552  3A11               	xorlw	17	; case 150
  1114  0553  1903               	skipnz
  1115  0554  2D2E               	goto	l2943
  1116  0555  3A22               	xorlw	34	; case 180
  1117  0556  1903               	skipnz
  1118  0557  2D31               	goto	l2945
  1119  0558  2D19               	goto	l2929
  1120  0559  0008               	return
  1121  055A                     __end_of_Servo2_grados:	
  1122                           
  1123                           	psect	text3
  1124  01D1                     __ptext3:	
  1125 ;; *************** function _regresar *****************
  1126 ;; Defined at:
  1127 ;;		line 203 in file "MAIN_CONTROL.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;		None
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  i               2    6[BANK0 ] int 
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1141 ;;      Params:         0       0       0       0       0
  1142 ;;      Locals:         0       2       0       0       0
  1143 ;;      Temps:          0       3       0       0       0
  1144 ;;      Totals:         0       5       0       0       0
  1145 ;;Total ram usage:        5 bytes
  1146 ;; Hardware stack levels used:    1
  1147 ;; Hardware stack levels required when called:    3
  1148 ;; This function calls:
  1149 ;;		_dis_ade
  1150 ;;		_dis_atr
  1151 ;;		_esperar
  1152 ;; This function is called by:
  1153 ;;		_main
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           
  1158                           ;psect for function _regresar
  1159  01D1                     _regresar:	
  1160                           
  1161                           ;MAIN_CONTROL.c: 204:     PORTD = 0b10101010;
  1162                           
  1163                           ;incstack = 0
  1164                           ; Regs used in _regresar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1165  01D1  30AA               	movlw	170
  1166  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1167  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1168  01D4  0088               	movwf	8	;volatile
  1169                           
  1170                           ;MAIN_CONTROL.c: 205:     for(int i = 0;i<6;i++){
  1171  01D5  01A6               	clrf	regresar@i
  1172  01D6  01A7               	clrf	regresar@i+1
  1173  01D7                     l3077:	
  1174                           
  1175                           ;MAIN_CONTROL.c: 206:         dis_ade();
  1176  01D7  120A  118A  2648  120A  118A  	fcall	_dis_ade
  1177                           
  1178                           ;MAIN_CONTROL.c: 207:         esperar(velocidad);
  1179  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1180  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1181  01DE  0836               	movf	_velocidad,w
  1182  01DF  120A  118A  255A  120A  118A  	fcall	_esperar
  1183                           
  1184                           ;MAIN_CONTROL.c: 208:         dis_atr();
  1185  01E4  120A  118A  2630  120A  118A  	fcall	_dis_atr
  1186                           
  1187                           ;MAIN_CONTROL.c: 209:        esperar(velocidad);
  1188  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  1189  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  1190  01EB  0836               	movf	_velocidad,w
  1191  01EC  120A  118A  255A  120A  118A  	fcall	_esperar
  1192                           
  1193                           ;MAIN_CONTROL.c: 210:     }
  1194  01F1  3001               	movlw	1
  1195  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1196  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1197  01F4  07A6               	addwf	regresar@i,f
  1198  01F5  1803               	skipnc
  1199  01F6  0AA7               	incf	regresar@i+1,f
  1200  01F7  3000               	movlw	0
  1201  01F8  07A7               	addwf	regresar@i+1,f
  1202  01F9  0827               	movf	regresar@i+1,w
  1203  01FA  3A80               	xorlw	128
  1204  01FB  00FF               	movwf	127
  1205  01FC  3080               	movlw	128
  1206  01FD  027F               	subwf	127,w
  1207  01FE  1D03               	skipz
  1208  01FF  2A02               	goto	u725
  1209  0200  3006               	movlw	6
  1210  0201  0226               	subwf	regresar@i,w
  1211  0202                     u725:	
  1212  0202  1C03               	skipc
  1213  0203  29D7               	goto	l3077
  1214                           
  1215                           ;MAIN_CONTROL.c: 211:     PORTD = 0;
  1216  0204  1283               	bcf	3,5	;RP0=0, select bank0
  1217  0205  1303               	bcf	3,6	;RP1=0, select bank0
  1218  0206  0188               	clrf	8	;volatile
  1219                           
  1220                           ;MAIN_CONTROL.c: 212:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  1221  0207  3003               	movlw	3
  1222  0208  1283               	bcf	3,5	;RP0=0, select bank0
  1223  0209  1303               	bcf	3,6	;RP1=0, select bank0
  1224  020A  00A5               	movwf	??_regresar+2
  1225  020B  308A               	movlw	138
  1226  020C  00A4               	movwf	??_regresar+1
  1227  020D  3055               	movlw	85
  1228  020E  00A3               	movwf	??_regresar
  1229  020F                     u907:	
  1230  020F  0BA3               	decfsz	??_regresar,f
  1231  0210  2A0F               	goto	u907
  1232  0211  0BA4               	decfsz	??_regresar+1,f
  1233  0212  2A0F               	goto	u907
  1234  0213  0BA5               	decfsz	??_regresar+2,f
  1235  0214  2A0F               	goto	u907
  1236                           
  1237                           ;MAIN_CONTROL.c: 213:     PORTD = 0b10011001;
  1238  0215  3099               	movlw	153
  1239  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1240  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1241  0218  0088               	movwf	8	;volatile
  1242                           
  1243                           ;MAIN_CONTROL.c: 214:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  1244  0219  3003               	movlw	3
  1245  021A  1283               	bcf	3,5	;RP0=0, select bank0
  1246  021B  1303               	bcf	3,6	;RP1=0, select bank0
  1247  021C  00A5               	movwf	??_regresar+2
  1248  021D  308A               	movlw	138
  1249  021E  00A4               	movwf	??_regresar+1
  1250  021F  3055               	movlw	85
  1251  0220  00A3               	movwf	??_regresar
  1252  0221                     u917:	
  1253  0221  0BA3               	decfsz	??_regresar,f
  1254  0222  2A21               	goto	u917
  1255  0223  0BA4               	decfsz	??_regresar+1,f
  1256  0224  2A21               	goto	u917
  1257  0225  0BA5               	decfsz	??_regresar+2,f
  1258  0226  2A21               	goto	u917
  1259                           
  1260                           ;MAIN_CONTROL.c: 215:     PORTD = 0;
  1261  0227  1283               	bcf	3,5	;RP0=0, select bank0
  1262  0228  1303               	bcf	3,6	;RP1=0, select bank0
  1263  0229  0188               	clrf	8	;volatile
  1264                           
  1265                           ;MAIN_CONTROL.c: 216:     _delay((unsigned long)((500)*(1000000/4000.0)));
  1266  022A  30A3               	movlw	163
  1267  022B  1283               	bcf	3,5	;RP0=0, select bank0
  1268  022C  1303               	bcf	3,6	;RP1=0, select bank0
  1269  022D  00A4               	movwf	??_regresar+1
  1270  022E  3054               	movlw	84
  1271  022F  00A3               	movwf	??_regresar
  1272  0230                     u927:	
  1273  0230  0BA3               	decfsz	??_regresar,f
  1274  0231  2A30               	goto	u927
  1275  0232  0BA4               	decfsz	??_regresar+1,f
  1276  0233  2A30               	goto	u927
  1277  0234  0000               	nop
  1278                           
  1279                           ;MAIN_CONTROL.c: 217:     PORTD = 0b10101010;
  1280  0235  30AA               	movlw	170
  1281  0236  1283               	bcf	3,5	;RP0=0, select bank0
  1282  0237  1303               	bcf	3,6	;RP1=0, select bank0
  1283  0238  0088               	movwf	8	;volatile
  1284  0239                     l3099:	
  1285                           ;MAIN_CONTROL.c: 218:    while(cont_obs>0){
  1286                           
  1287                           
  1288                           ;MAIN_CONTROL.c: 218:    while(cont_obs>0){
  1289  0239  0832               	movf	_cont_obs,w
  1290  023A  1903               	btfsc	3,2
  1291  023B  2A51               	goto	l3101
  1292                           
  1293                           ;MAIN_CONTROL.c: 220:         _delay((unsigned long)((2000)*(1000000/4000.0)));
  1294  023C  3003               	movlw	3
  1295  023D  1283               	bcf	3,5	;RP0=0, select bank0
  1296  023E  1303               	bcf	3,6	;RP1=0, select bank0
  1297  023F  00A5               	movwf	??_regresar+2
  1298  0240  308A               	movlw	138
  1299  0241  00A4               	movwf	??_regresar+1
  1300  0242  3055               	movlw	85
  1301  0243  00A3               	movwf	??_regresar
  1302  0244                     u937:	
  1303  0244  0BA3               	decfsz	??_regresar,f
  1304  0245  2A44               	goto	u937
  1305  0246  0BA4               	decfsz	??_regresar+1,f
  1306  0247  2A44               	goto	u937
  1307  0248  0BA5               	decfsz	??_regresar+2,f
  1308  0249  2A44               	goto	u937
  1309                           
  1310                           ;MAIN_CONTROL.c: 221:         PORTA--;
  1311  024A  3001               	movlw	1
  1312  024B  1283               	bcf	3,5	;RP0=0, select bank0
  1313  024C  1303               	bcf	3,6	;RP1=0, select bank0
  1314  024D  0285               	subwf	5,f	;volatile
  1315                           
  1316                           ;MAIN_CONTROL.c: 222:         cont_obs--;
  1317  024E  3001               	movlw	1
  1318  024F  02B2               	subwf	_cont_obs,f
  1319  0250  2A39               	goto	l3099
  1320  0251                     l3101:	
  1321                           
  1322                           ;MAIN_CONTROL.c: 224:     PORTD = 0;
  1323  0251  0188               	clrf	8	;volatile
  1324                           
  1325                           ;MAIN_CONTROL.c: 225:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  1326  0252  3002               	movlw	2
  1327  0253  1283               	bcf	3,5	;RP0=0, select bank0
  1328  0254  1303               	bcf	3,6	;RP1=0, select bank0
  1329  0255  00A5               	movwf	??_regresar+2
  1330  0256  3045               	movlw	69
  1331  0257  00A4               	movwf	??_regresar+1
  1332  0258  30A9               	movlw	169
  1333  0259  00A3               	movwf	??_regresar
  1334  025A                     u947:	
  1335  025A  0BA3               	decfsz	??_regresar,f
  1336  025B  2A5A               	goto	u947
  1337  025C  0BA4               	decfsz	??_regresar+1,f
  1338  025D  2A5A               	goto	u947
  1339  025E  0BA5               	decfsz	??_regresar+2,f
  1340  025F  2A5A               	goto	u947
  1341                           
  1342                           ;MAIN_CONTROL.c: 226:     PORTD = 0b01100110;
  1343  0260  3066               	movlw	102
  1344  0261  1283               	bcf	3,5	;RP0=0, select bank0
  1345  0262  1303               	bcf	3,6	;RP1=0, select bank0
  1346  0263  0088               	movwf	8	;volatile
  1347                           
  1348                           ;MAIN_CONTROL.c: 227:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  1349  0264  3002               	movlw	2
  1350  0265  1283               	bcf	3,5	;RP0=0, select bank0
  1351  0266  1303               	bcf	3,6	;RP1=0, select bank0
  1352  0267  00A5               	movwf	??_regresar+2
  1353  0268  3045               	movlw	69
  1354  0269  00A4               	movwf	??_regresar+1
  1355  026A  30A9               	movlw	169
  1356  026B  00A3               	movwf	??_regresar
  1357  026C                     u957:	
  1358  026C  0BA3               	decfsz	??_regresar,f
  1359  026D  2A6C               	goto	u957
  1360  026E  0BA4               	decfsz	??_regresar+1,f
  1361  026F  2A6C               	goto	u957
  1362  0270  0BA5               	decfsz	??_regresar+2,f
  1363  0271  2A6C               	goto	u957
  1364                           
  1365                           ;MAIN_CONTROL.c: 228:     PORTD=0;
  1366  0272  1283               	bcf	3,5	;RP0=0, select bank0
  1367  0273  1303               	bcf	3,6	;RP1=0, select bank0
  1368  0274  0188               	clrf	8	;volatile
  1369                           
  1370                           ;MAIN_CONTROL.c: 229:     muestras--;
  1371  0275  3001               	movlw	1
  1372  0276  02B1               	subwf	_muestras,f
  1373                           
  1374                           ;MAIN_CONTROL.c: 230:     cont_obs = 0;
  1375  0277  01B2               	clrf	_cont_obs
  1376  0278  0008               	return
  1377  0279                     __end_of_regresar:	
  1378                           
  1379                           	psect	text4
  1380  055A                     __ptext4:	
  1381 ;; *************** function _esperar *****************
  1382 ;; Defined at:
  1383 ;;		line 460 in file "MAIN_CONTROL.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  vel             1    wreg     unsigned char 
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  vel             1    4[COMMON] unsigned char 
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1397 ;;      Params:         0       0       0       0       0
  1398 ;;      Locals:         1       0       0       0       0
  1399 ;;      Temps:          0       3       0       0       0
  1400 ;;      Totals:         1       3       0       0       0
  1401 ;;Total ram usage:        4 bytes
  1402 ;; Hardware stack levels used:    1
  1403 ;; Hardware stack levels required when called:    1
  1404 ;; This function calls:
  1405 ;;		Nothing
  1406 ;; This function is called by:
  1407 ;;		_main
  1408 ;;		_regresar
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           
  1413                           ;psect for function _esperar
  1414  055A                     _esperar:	
  1415                           
  1416                           ;incstack = 0
  1417                           ; Regs used in _esperar: [wreg-fsr0h+status,2+status,0]
  1418                           ;esperar@vel stored from wreg
  1419  055A  00F4               	movwf	esperar@vel
  1420                           
  1421                           ;MAIN_CONTROL.c: 461:     switch(vel){
  1422  055B  2D83               	goto	l2831
  1423  055C                     l2823:	
  1424                           
  1425                           ;MAIN_CONTROL.c: 463:             _delay((unsigned long)((1000)*(1000000/4000.0)));
  1426  055C  3002               	movlw	2
  1427  055D  1283               	bcf	3,5	;RP0=0, select bank0
  1428  055E  1303               	bcf	3,6	;RP1=0, select bank0
  1429  055F  00A2               	movwf	??_esperar+2
  1430  0560  3045               	movlw	69
  1431  0561  00A1               	movwf	??_esperar+1
  1432  0562  30A9               	movlw	169
  1433  0563  00A0               	movwf	??_esperar
  1434  0564                     u967:	
  1435  0564  0BA0               	decfsz	??_esperar,f
  1436  0565  2D64               	goto	u967
  1437  0566  0BA1               	decfsz	??_esperar+1,f
  1438  0567  2D64               	goto	u967
  1439  0568  0BA2               	decfsz	??_esperar+2,f
  1440  0569  2D64               	goto	u967
  1441                           
  1442                           ;MAIN_CONTROL.c: 464:             break;
  1443  056A  0008               	return
  1444  056B                     l2825:	
  1445                           
  1446                           ;MAIN_CONTROL.c: 467:             _delay((unsigned long)((500)*(1000000/4000.0)));
  1447  056B  30A3               	movlw	163
  1448  056C  1283               	bcf	3,5	;RP0=0, select bank0
  1449  056D  1303               	bcf	3,6	;RP1=0, select bank0
  1450  056E  00A1               	movwf	??_esperar+1
  1451  056F  3054               	movlw	84
  1452  0570  00A0               	movwf	??_esperar
  1453  0571                     u977:	
  1454  0571  0BA0               	decfsz	??_esperar,f
  1455  0572  2D71               	goto	u977
  1456  0573  0BA1               	decfsz	??_esperar+1,f
  1457  0574  2D71               	goto	u977
  1458  0575  0000               	nop
  1459                           
  1460                           ;MAIN_CONTROL.c: 468:             break;
  1461  0576  0008               	return
  1462  0577                     l2827:	
  1463                           
  1464                           ;MAIN_CONTROL.c: 470:             _delay((unsigned long)((333)*(1000000/4000.0)));
  1465  0577  306D               	movlw	109
  1466  0578  1283               	bcf	3,5	;RP0=0, select bank0
  1467  0579  1303               	bcf	3,6	;RP1=0, select bank0
  1468  057A  00A1               	movwf	??_esperar+1
  1469  057B  301B               	movlw	27
  1470  057C  00A0               	movwf	??_esperar
  1471  057D                     u987:	
  1472  057D  0BA0               	decfsz	??_esperar,f
  1473  057E  2D7D               	goto	u987
  1474  057F  0BA1               	decfsz	??_esperar+1,f
  1475  0580  2D7D               	goto	u987
  1476  0581  2D82               	nop2
  1477                           
  1478                           ;MAIN_CONTROL.c: 471:             break;
  1479  0582  0008               	return
  1480  0583                     l2831:	
  1481  0583  0874               	movf	esperar@vel,w
  1482  0584  1283               	bcf	3,5	;RP0=0, select bank0
  1483  0585  1303               	bcf	3,6	;RP1=0, select bank0
  1484  0586  00A0               	movwf	??_esperar
  1485  0587  01A1               	clrf	??_esperar+1
  1486                           
  1487                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1488                           ; Switch size 1, requested type "simple"
  1489                           ; Number of cases is 1, Range of values is 0 to 0
  1490                           ; switch strategies available:
  1491                           ; Name         Instructions Cycles
  1492                           ; simple_byte            4     3 (average)
  1493                           ; direct_byte           11     8 (fixed)
  1494                           ; jumptable            260     6 (fixed)
  1495                           ;	Chosen strategy is simple_byte
  1496  0588  0821               	movf	??_esperar+1,w
  1497  0589  3A00               	xorlw	0	; case 0
  1498  058A  1903               	skipnz
  1499  058B  2D8D               	goto	l3659
  1500  058C  2D98               	goto	l253
  1501  058D                     l3659:	
  1502                           
  1503                           ; Switch size 1, requested type "simple"
  1504                           ; Number of cases is 3, Range of values is 1 to 3
  1505                           ; switch strategies available:
  1506                           ; Name         Instructions Cycles
  1507                           ; simple_byte           10     6 (average)
  1508                           ; direct_byte           20    11 (fixed)
  1509                           ; jumptable            263     9 (fixed)
  1510                           ;	Chosen strategy is simple_byte
  1511  058D  0820               	movf	??_esperar,w
  1512  058E  3A01               	xorlw	1	; case 1
  1513  058F  1903               	skipnz
  1514  0590  2D5C               	goto	l2823
  1515  0591  3A03               	xorlw	3	; case 2
  1516  0592  1903               	skipnz
  1517  0593  2D6B               	goto	l2825
  1518  0594  3A01               	xorlw	1	; case 3
  1519  0595  1903               	skipnz
  1520  0596  2D77               	goto	l2827
  1521  0597  2D98               	goto	l253
  1522  0598                     l253:	
  1523  0598  0008               	return
  1524  0599                     __end_of_esperar:	
  1525                           
  1526                           	psect	text5
  1527  0630                     __ptext5:	
  1528 ;; *************** function _dis_atr *****************
  1529 ;; Defined at:
  1530 ;;		line 315 in file "MAIN_CONTROL.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1544 ;;      Params:         0       0       0       0       0
  1545 ;;      Locals:         0       0       0       0       0
  1546 ;;      Temps:          0       2       0       0       0
  1547 ;;      Totals:         0       2       0       0       0
  1548 ;;Total ram usage:        2 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; Hardware stack levels required when called:    2
  1551 ;; This function calls:
  1552 ;;		_init_ADC
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;;		_regresar
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           
  1560                           ;psect for function _dis_atr
  1561  0630                     _dis_atr:	
  1562                           
  1563                           ;MAIN_CONTROL.c: 316:     init_ADC(0x06);
  1564                           
  1565                           ;incstack = 0
  1566                           ; Regs used in _dis_atr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1567  0630  3006               	movlw	6
  1568  0631  120A  118A  2499  120A  118A  	fcall	_init_ADC
  1569                           
  1570                           ;MAIN_CONTROL.c: 317:     PIR1bits.ADIF = 0;
  1571  0636  1283               	bcf	3,5	;RP0=0, select bank0
  1572  0637  1303               	bcf	3,6	;RP1=0, select bank0
  1573  0638  130C               	bcf	12,6	;volatile
  1574                           
  1575                           ;MAIN_CONTROL.c: 318:     atras = ADRESH;
  1576  0639  081E               	movf	30,w	;volatile
  1577  063A  00A1               	movwf	??_dis_atr
  1578  063B  0821               	movf	??_dis_atr,w
  1579  063C  00F6               	movwf	_atras
  1580                           
  1581                           ;MAIN_CONTROL.c: 319:     _delay((unsigned long)((10)*(1000000/4000.0)));
  1582  063D  3004               	movlw	4
  1583  063E  1283               	bcf	3,5	;RP0=0, select bank0
  1584  063F  1303               	bcf	3,6	;RP1=0, select bank0
  1585  0640  00A2               	movwf	??_dis_atr+1
  1586  0641  303D               	movlw	61
  1587  0642  00A1               	movwf	??_dis_atr
  1588  0643                     u997:	
  1589  0643  0BA1               	decfsz	??_dis_atr,f
  1590  0644  2E43               	goto	u997
  1591  0645  0BA2               	decfsz	??_dis_atr+1,f
  1592  0646  2E43               	goto	u997
  1593  0647  0008               	return
  1594  0648                     __end_of_dis_atr:	
  1595                           
  1596                           	psect	text6
  1597  0648                     __ptext6:	
  1598 ;; *************** function _dis_ade *****************
  1599 ;; Defined at:
  1600 ;;		line 308 in file "MAIN_CONTROL.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;		None
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      void 
  1607 ;; Registers used:
  1608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1614 ;;      Params:         0       0       0       0       0
  1615 ;;      Locals:         0       0       0       0       0
  1616 ;;      Temps:          0       2       0       0       0
  1617 ;;      Totals:         0       2       0       0       0
  1618 ;;Total ram usage:        2 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:    2
  1621 ;; This function calls:
  1622 ;;		_init_ADC
  1623 ;; This function is called by:
  1624 ;;		_main
  1625 ;;		_regresar
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           
  1630                           ;psect for function _dis_ade
  1631  0648                     _dis_ade:	
  1632                           
  1633                           ;MAIN_CONTROL.c: 309:     init_ADC(0x05);
  1634                           
  1635                           ;incstack = 0
  1636                           ; Regs used in _dis_ade: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1637  0648  3005               	movlw	5
  1638  0649  120A  118A  2499  120A  118A  	fcall	_init_ADC
  1639                           
  1640                           ;MAIN_CONTROL.c: 310:     PIR1bits.ADIF = 0;
  1641  064E  1283               	bcf	3,5	;RP0=0, select bank0
  1642  064F  1303               	bcf	3,6	;RP1=0, select bank0
  1643  0650  130C               	bcf	12,6	;volatile
  1644                           
  1645                           ;MAIN_CONTROL.c: 311:     adelante = ADRESH;
  1646  0651  081E               	movf	30,w	;volatile
  1647  0652  00A1               	movwf	??_dis_ade
  1648  0653  0821               	movf	??_dis_ade,w
  1649  0654  00B0               	movwf	_adelante
  1650                           
  1651                           ;MAIN_CONTROL.c: 312:     _delay((unsigned long)((10)*(1000000/4000.0)));
  1652  0655  3004               	movlw	4
  1653  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1654  0657  1303               	bcf	3,6	;RP1=0, select bank0
  1655  0658  00A2               	movwf	??_dis_ade+1
  1656  0659  303D               	movlw	61
  1657  065A  00A1               	movwf	??_dis_ade
  1658  065B                     u1007:	
  1659  065B  0BA1               	decfsz	??_dis_ade,f
  1660  065C  2E5B               	goto	u1007
  1661  065D  0BA2               	decfsz	??_dis_ade+1,f
  1662  065E  2E5B               	goto	u1007
  1663  065F  0008               	return
  1664  0660                     __end_of_dis_ade:	
  1665                           
  1666                           	psect	text7
  1667  0317                     __ptext7:	
  1668 ;; *************** function _obstaculo *****************
  1669 ;; Defined at:
  1670 ;;		line 233 in file "MAIN_CONTROL.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;		None
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;		None
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  1    wreg      void 
  1677 ;; Registers used:
  1678 ;;		wreg, status,2, status,0
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1684 ;;      Params:         0       0       0       0       0
  1685 ;;      Locals:         0       0       0       0       0
  1686 ;;      Temps:          0       3       0       0       0
  1687 ;;      Totals:         0       3       0       0       0
  1688 ;;Total ram usage:        3 bytes
  1689 ;; Hardware stack levels used:    1
  1690 ;; Hardware stack levels required when called:    1
  1691 ;; This function calls:
  1692 ;;		Nothing
  1693 ;; This function is called by:
  1694 ;;		_main
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           
  1699                           ;psect for function _obstaculo
  1700  0317                     _obstaculo:	
  1701                           
  1702                           ;MAIN_CONTROL.c: 234:     PORTD = 0;
  1703                           
  1704                           ;incstack = 0
  1705                           ; Regs used in _obstaculo: [wreg+status,2+status,0]
  1706  0317  1283               	bcf	3,5	;RP0=0, select bank0
  1707  0318  1303               	bcf	3,6	;RP1=0, select bank0
  1708  0319  0188               	clrf	8	;volatile
  1709                           
  1710                           ;MAIN_CONTROL.c: 235:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  1711  031A  3003               	movlw	3
  1712  031B  1283               	bcf	3,5	;RP0=0, select bank0
  1713  031C  1303               	bcf	3,6	;RP1=0, select bank0
  1714  031D  00A2               	movwf	??_obstaculo+2
  1715  031E  308A               	movlw	138
  1716  031F  00A1               	movwf	??_obstaculo+1
  1717  0320  3055               	movlw	85
  1718  0321  00A0               	movwf	??_obstaculo
  1719  0322                     u1017:	
  1720  0322  0BA0               	decfsz	??_obstaculo,f
  1721  0323  2B22               	goto	u1017
  1722  0324  0BA1               	decfsz	??_obstaculo+1,f
  1723  0325  2B22               	goto	u1017
  1724  0326  0BA2               	decfsz	??_obstaculo+2,f
  1725  0327  2B22               	goto	u1017
  1726                           
  1727                           ;MAIN_CONTROL.c: 236:     PORTD = 0b01100110;
  1728  0328  3066               	movlw	102
  1729  0329  1283               	bcf	3,5	;RP0=0, select bank0
  1730  032A  1303               	bcf	3,6	;RP1=0, select bank0
  1731  032B  0088               	movwf	8	;volatile
  1732                           
  1733                           ;MAIN_CONTROL.c: 237:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  1734  032C  3003               	movlw	3
  1735  032D  1283               	bcf	3,5	;RP0=0, select bank0
  1736  032E  1303               	bcf	3,6	;RP1=0, select bank0
  1737  032F  00A2               	movwf	??_obstaculo+2
  1738  0330  308A               	movlw	138
  1739  0331  00A1               	movwf	??_obstaculo+1
  1740  0332  3055               	movlw	85
  1741  0333  00A0               	movwf	??_obstaculo
  1742  0334                     u1027:	
  1743  0334  0BA0               	decfsz	??_obstaculo,f
  1744  0335  2B34               	goto	u1027
  1745  0336  0BA1               	decfsz	??_obstaculo+1,f
  1746  0337  2B34               	goto	u1027
  1747  0338  0BA2               	decfsz	??_obstaculo+2,f
  1748  0339  2B34               	goto	u1027
  1749                           
  1750                           ;MAIN_CONTROL.c: 238:     PORTD = 0;
  1751  033A  1283               	bcf	3,5	;RP0=0, select bank0
  1752  033B  1303               	bcf	3,6	;RP1=0, select bank0
  1753  033C  0188               	clrf	8	;volatile
  1754                           
  1755                           ;MAIN_CONTROL.c: 239:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  1756  033D  3003               	movlw	3
  1757  033E  1283               	bcf	3,5	;RP0=0, select bank0
  1758  033F  1303               	bcf	3,6	;RP1=0, select bank0
  1759  0340  00A2               	movwf	??_obstaculo+2
  1760  0341  308A               	movlw	138
  1761  0342  00A1               	movwf	??_obstaculo+1
  1762  0343  3055               	movlw	85
  1763  0344  00A0               	movwf	??_obstaculo
  1764  0345                     u1037:	
  1765  0345  0BA0               	decfsz	??_obstaculo,f
  1766  0346  2B45               	goto	u1037
  1767  0347  0BA1               	decfsz	??_obstaculo+1,f
  1768  0348  2B45               	goto	u1037
  1769  0349  0BA2               	decfsz	??_obstaculo+2,f
  1770  034A  2B45               	goto	u1037
  1771                           
  1772                           ;MAIN_CONTROL.c: 240:     PORTD = 0b10101010;
  1773  034B  30AA               	movlw	170
  1774  034C  1283               	bcf	3,5	;RP0=0, select bank0
  1775  034D  1303               	bcf	3,6	;RP1=0, select bank0
  1776  034E  0088               	movwf	8	;volatile
  1777                           
  1778                           ;MAIN_CONTROL.c: 241:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  1779  034F  3003               	movlw	3
  1780  0350  1283               	bcf	3,5	;RP0=0, select bank0
  1781  0351  1303               	bcf	3,6	;RP1=0, select bank0
  1782  0352  00A2               	movwf	??_obstaculo+2
  1783  0353  308A               	movlw	138
  1784  0354  00A1               	movwf	??_obstaculo+1
  1785  0355  3055               	movlw	85
  1786  0356  00A0               	movwf	??_obstaculo
  1787  0357                     u1047:	
  1788  0357  0BA0               	decfsz	??_obstaculo,f
  1789  0358  2B57               	goto	u1047
  1790  0359  0BA1               	decfsz	??_obstaculo+1,f
  1791  035A  2B57               	goto	u1047
  1792  035B  0BA2               	decfsz	??_obstaculo+2,f
  1793  035C  2B57               	goto	u1047
  1794                           
  1795                           ;MAIN_CONTROL.c: 242:     PORTD = 0;
  1796  035D  1283               	bcf	3,5	;RP0=0, select bank0
  1797  035E  1303               	bcf	3,6	;RP1=0, select bank0
  1798  035F  0188               	clrf	8	;volatile
  1799                           
  1800                           ;MAIN_CONTROL.c: 243:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  1801  0360  3003               	movlw	3
  1802  0361  1283               	bcf	3,5	;RP0=0, select bank0
  1803  0362  1303               	bcf	3,6	;RP1=0, select bank0
  1804  0363  00A2               	movwf	??_obstaculo+2
  1805  0364  308A               	movlw	138
  1806  0365  00A1               	movwf	??_obstaculo+1
  1807  0366  3055               	movlw	85
  1808  0367  00A0               	movwf	??_obstaculo
  1809  0368                     u1057:	
  1810  0368  0BA0               	decfsz	??_obstaculo,f
  1811  0369  2B68               	goto	u1057
  1812  036A  0BA1               	decfsz	??_obstaculo+1,f
  1813  036B  2B68               	goto	u1057
  1814  036C  0BA2               	decfsz	??_obstaculo+2,f
  1815  036D  2B68               	goto	u1057
  1816                           
  1817                           ;MAIN_CONTROL.c: 244:     PORTD = 0b10011001;
  1818  036E  3099               	movlw	153
  1819  036F  1283               	bcf	3,5	;RP0=0, select bank0
  1820  0370  1303               	bcf	3,6	;RP1=0, select bank0
  1821  0371  0088               	movwf	8	;volatile
  1822                           
  1823                           ;MAIN_CONTROL.c: 245:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  1824  0372  3003               	movlw	3
  1825  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1826  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1827  0375  00A2               	movwf	??_obstaculo+2
  1828  0376  308A               	movlw	138
  1829  0377  00A1               	movwf	??_obstaculo+1
  1830  0378  3055               	movlw	85
  1831  0379  00A0               	movwf	??_obstaculo
  1832  037A                     u1067:	
  1833  037A  0BA0               	decfsz	??_obstaculo,f
  1834  037B  2B7A               	goto	u1067
  1835  037C  0BA1               	decfsz	??_obstaculo+1,f
  1836  037D  2B7A               	goto	u1067
  1837  037E  0BA2               	decfsz	??_obstaculo+2,f
  1838  037F  2B7A               	goto	u1067
  1839                           
  1840                           ;MAIN_CONTROL.c: 246:     PORTD = 0;
  1841  0380  1283               	bcf	3,5	;RP0=0, select bank0
  1842  0381  1303               	bcf	3,6	;RP1=0, select bank0
  1843  0382  0188               	clrf	8	;volatile
  1844                           
  1845                           ;MAIN_CONTROL.c: 247:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  1846  0383  3003               	movlw	3
  1847  0384  1283               	bcf	3,5	;RP0=0, select bank0
  1848  0385  1303               	bcf	3,6	;RP1=0, select bank0
  1849  0386  00A2               	movwf	??_obstaculo+2
  1850  0387  308A               	movlw	138
  1851  0388  00A1               	movwf	??_obstaculo+1
  1852  0389  3055               	movlw	85
  1853  038A  00A0               	movwf	??_obstaculo
  1854  038B                     u1077:	
  1855  038B  0BA0               	decfsz	??_obstaculo,f
  1856  038C  2B8B               	goto	u1077
  1857  038D  0BA1               	decfsz	??_obstaculo+1,f
  1858  038E  2B8B               	goto	u1077
  1859  038F  0BA2               	decfsz	??_obstaculo+2,f
  1860  0390  2B8B               	goto	u1077
  1861                           
  1862                           ;MAIN_CONTROL.c: 248:     cont_obs++;
  1863  0391  3001               	movlw	1
  1864  0392  1283               	bcf	3,5	;RP0=0, select bank0
  1865  0393  1303               	bcf	3,6	;RP1=0, select bank0
  1866  0394  00A0               	movwf	??_obstaculo
  1867  0395  0820               	movf	??_obstaculo,w
  1868  0396  07B2               	addwf	_cont_obs,f
  1869                           
  1870                           ;MAIN_CONTROL.c: 249:     PORTA++;
  1871  0397  3001               	movlw	1
  1872  0398  00A0               	movwf	??_obstaculo
  1873  0399  0820               	movf	??_obstaculo,w
  1874  039A  0785               	addwf	5,f	;volatile
  1875  039B  0008               	return
  1876  039C                     __end_of_obstaculo:	
  1877                           
  1878                           	psect	text8
  1879  0599                     __ptext8:	
  1880 ;; *************** function _config *****************
  1881 ;; Defined at:
  1882 ;;		line 289 in file "MAIN_CONTROL.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1896 ;;      Params:         0       0       0       0       0
  1897 ;;      Locals:         0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0
  1899 ;;      Totals:         0       0       0       0       0
  1900 ;;Total ram usage:        0 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; Hardware stack levels required when called:    2
  1903 ;; This function calls:
  1904 ;;		_OSC_config
  1905 ;;		_init_ADC
  1906 ;;		_init_PWM_2
  1907 ;; This function is called by:
  1908 ;;		_main
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           
  1913                           ;psect for function _config
  1914  0599                     _config:	
  1915                           
  1916                           ;MAIN_CONTROL.c: 290:     OSC_config(1000000);
  1917                           
  1918                           ;incstack = 0
  1919                           ; Regs used in _config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1920  0599  3000               	movlw	0
  1921  059A  1283               	bcf	3,5	;RP0=0, select bank0
  1922  059B  1303               	bcf	3,6	;RP1=0, select bank0
  1923  059C  00A3               	movwf	OSC_config@frecuencia+3
  1924  059D  300F               	movlw	15
  1925  059E  00A2               	movwf	OSC_config@frecuencia+2
  1926  059F  3042               	movlw	66
  1927  05A0  00A1               	movwf	OSC_config@frecuencia+1
  1928  05A1  3040               	movlw	64
  1929  05A2  00A0               	movwf	OSC_config@frecuencia
  1930  05A3  120A  118A  2123  120A  118A  	fcall	_OSC_config
  1931                           
  1932                           ;MAIN_CONTROL.c: 291:     PORTD = 0;
  1933  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  1934  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  1935  05AA  0188               	clrf	8	;volatile
  1936                           
  1937                           ;MAIN_CONTROL.c: 292:     TRISD = 0;
  1938  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  1939  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  1940  05AD  0188               	clrf	8	;volatile
  1941                           
  1942                           ;MAIN_CONTROL.c: 293:     PORTB = 0;
  1943  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  1944  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  1945  05B0  0186               	clrf	6	;volatile
  1946                           
  1947                           ;MAIN_CONTROL.c: 294:     TRISB = 0;
  1948  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  1949  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  1950  05B3  0186               	clrf	6	;volatile
  1951                           
  1952                           ;MAIN_CONTROL.c: 295:     ANSELH = 0;
  1953  05B4  1683               	bsf	3,5	;RP0=1, select bank3
  1954  05B5  1703               	bsf	3,6	;RP1=1, select bank3
  1955  05B6  0189               	clrf	9	;volatile
  1956                           
  1957                           ;MAIN_CONTROL.c: 296:     PORTE = 0b1111;
  1958  05B7  300F               	movlw	15
  1959  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  1960  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  1961  05BA  0089               	movwf	9	;volatile
  1962                           
  1963                           ;MAIN_CONTROL.c: 297:     TRISE = 0b1111;
  1964  05BB  300F               	movlw	15
  1965  05BC  1683               	bsf	3,5	;RP0=1, select bank1
  1966  05BD  1303               	bcf	3,6	;RP1=0, select bank1
  1967  05BE  0089               	movwf	9	;volatile
  1968                           
  1969                           ;MAIN_CONTROL.c: 298:     PORTA = 0;
  1970  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  1971  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  1972  05C1  0185               	clrf	5	;volatile
  1973                           
  1974                           ;MAIN_CONTROL.c: 299:     TRISA = 0;
  1975  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  1976  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  1977  05C4  0185               	clrf	5	;volatile
  1978                           
  1979                           ;MAIN_CONTROL.c: 300:     ANSEL = 0b01100000;
  1980  05C5  3060               	movlw	96
  1981  05C6  1683               	bsf	3,5	;RP0=1, select bank3
  1982  05C7  1703               	bsf	3,6	;RP1=1, select bank3
  1983  05C8  0088               	movwf	8	;volatile
  1984                           
  1985                           ;MAIN_CONTROL.c: 301:     init_PWM_2();
  1986  05C9  120A  118A  25FA  120A  118A  	fcall	_init_PWM_2
  1987                           
  1988                           ;MAIN_CONTROL.c: 302:     init_ADC(5);
  1989  05CE  3005               	movlw	5
  1990  05CF  120A  118A  2499   	fcall	_init_ADC
  1991  05D2  0008               	return
  1992  05D3                     __end_of_config:	
  1993                           
  1994                           	psect	text9
  1995  05FA                     __ptext9:	
  1996 ;; *************** function _init_PWM_2 *****************
  1997 ;; Defined at:
  1998 ;;		line 475 in file "MAIN_CONTROL.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;		None
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;		None
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      void 
  2005 ;; Registers used:
  2006 ;;		wreg
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2012 ;;      Params:         0       0       0       0       0
  2013 ;;      Locals:         0       0       0       0       0
  2014 ;;      Temps:          0       0       0       0       0
  2015 ;;      Totals:         0       0       0       0       0
  2016 ;;Total ram usage:        0 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:    1
  2019 ;; This function calls:
  2020 ;;		Nothing
  2021 ;; This function is called by:
  2022 ;;		_config
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           
  2027                           ;psect for function _init_PWM_2
  2028  05FA                     _init_PWM_2:	
  2029                           
  2030                           ;MAIN_CONTROL.c: 476:     TRISCbits.TRISC2 = 1;
  2031                           
  2032                           ;incstack = 0
  2033                           ; Regs used in _init_PWM_2: [wreg]
  2034  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  2035  05FB  1303               	bcf	3,6	;RP1=0, select bank1
  2036  05FC  1507               	bsf	7,2	;volatile
  2037                           
  2038                           ;MAIN_CONTROL.c: 479:     PR2 = 200;
  2039  05FD  30C8               	movlw	200
  2040  05FE  0092               	movwf	18	;volatile
  2041                           
  2042                           ;MAIN_CONTROL.c: 481:     CCP1CONbits.CCP1M3 = 1;
  2043  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  2044  0600  1303               	bcf	3,6	;RP1=0, select bank0
  2045  0601  1597               	bsf	23,3	;volatile
  2046                           
  2047                           ;MAIN_CONTROL.c: 482:     CCP1CONbits.CCP1M2 = 1;
  2048  0602  1517               	bsf	23,2	;volatile
  2049                           
  2050                           ;MAIN_CONTROL.c: 483:     CCP1CONbits.CCP1M1 = 0;
  2051  0603  1097               	bcf	23,1	;volatile
  2052                           
  2053                           ;MAIN_CONTROL.c: 484:     CCP1CONbits.CCP1M0 = 0;
  2054  0604  1017               	bcf	23,0	;volatile
  2055                           
  2056                           ;MAIN_CONTROL.c: 486:     CCP1CONbits.P1M1 = 0;
  2057  0605  1397               	bcf	23,7	;volatile
  2058                           
  2059                           ;MAIN_CONTROL.c: 487:     CCP1CONbits.P1M0 = 0;
  2060  0606  1317               	bcf	23,6	;volatile
  2061                           
  2062                           ;MAIN_CONTROL.c: 490:     CCPR2L = 0b00011011;
  2063  0607  301B               	movlw	27
  2064  0608  009B               	movwf	27	;volatile
  2065                           
  2066                           ;MAIN_CONTROL.c: 491:     CCP1CONbits.DC1B0 = 1;
  2067  0609  1617               	bsf	23,4	;volatile
  2068                           
  2069                           ;MAIN_CONTROL.c: 492:     CCP1CONbits.DC1B1 = 1;
  2070  060A  1697               	bsf	23,5	;volatile
  2071                           
  2072                           ;MAIN_CONTROL.c: 494:     PIR1bits.TMR2IF = 0;
  2073  060B  108C               	bcf	12,1	;volatile
  2074                           
  2075                           ;MAIN_CONTROL.c: 495:     T2CONbits.T2CKPS1 = 1;
  2076  060C  1492               	bsf	18,1	;volatile
  2077                           
  2078                           ;MAIN_CONTROL.c: 496:     T2CONbits.T2CKPS0 = 1;
  2079  060D  1412               	bsf	18,0	;volatile
  2080                           
  2081                           ;MAIN_CONTROL.c: 498:     T2CONbits.TMR2ON = 1;
  2082  060E  1512               	bsf	18,2	;volatile
  2083  060F                     l256:	
  2084                           ;MAIN_CONTROL.c: 502:     }
  2085                           
  2086                           ;MAIN_CONTROL.c: 500:     while(PIR1bits.TMR2IF == 1){
  2087                           
  2088                           
  2089                           ;MAIN_CONTROL.c: 500:     while(PIR1bits.TMR2IF == 1){
  2090  060F  1C8C               	btfss	12,1	;volatile
  2091  0610  2E13               	goto	l258
  2092                           
  2093                           ;MAIN_CONTROL.c: 501:         PIR1bits.TMR2IF = 0;
  2094  0611  108C               	bcf	12,1	;volatile
  2095  0612  2E0F               	goto	l256
  2096  0613                     l258:	
  2097                           
  2098                           ;MAIN_CONTROL.c: 504:     TRISCbits.TRISC2 = 0;
  2099  0613  1683               	bsf	3,5	;RP0=1, select bank1
  2100  0614  1303               	bcf	3,6	;RP1=0, select bank1
  2101  0615  1107               	bcf	7,2	;volatile
  2102  0616  0008               	return
  2103  0617                     __end_of_init_PWM_2:	
  2104                           
  2105                           	psect	text10
  2106  0499                     __ptext10:	
  2107 ;; *************** function _init_ADC *****************
  2108 ;; Defined at:
  2109 ;;		line 321 in file "MAIN_CONTROL.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  channel         1    wreg     unsigned char 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  channel         1    0[BANK0 ] unsigned char 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2123 ;;      Params:         0       0       0       0       0
  2124 ;;      Locals:         0       1       0       0       0
  2125 ;;      Temps:          2       0       0       0       0
  2126 ;;      Totals:         2       1       0       0       0
  2127 ;;Total ram usage:        3 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    1
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_config
  2134 ;;		_dis_ade
  2135 ;;		_dis_atr
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           
  2140                           ;psect for function _init_ADC
  2141  0499                     _init_ADC:	
  2142                           
  2143                           ;incstack = 0
  2144                           ; Regs used in _init_ADC: [wreg-fsr0h+status,2+status,0]
  2145                           ;init_ADC@channel stored from wreg
  2146  0499  1283               	bcf	3,5	;RP0=0, select bank0
  2147  049A  1303               	bcf	3,6	;RP1=0, select bank0
  2148  049B  00A0               	movwf	init_ADC@channel
  2149                           
  2150                           ;MAIN_CONTROL.c: 322:     ADCON0bits.ADCS1 = 0;
  2151  049C  139F               	bcf	31,7	;volatile
  2152                           
  2153                           ;MAIN_CONTROL.c: 323:     ADCON0bits.ADCS0 = 1;
  2154  049D  171F               	bsf	31,6	;volatile
  2155                           
  2156                           ;MAIN_CONTROL.c: 326:     switch(channel){
  2157  049E  2CCE               	goto	l2799
  2158  049F                     l216:	
  2159                           ;MAIN_CONTROL.c: 327:         case 0:
  2160                           
  2161  049F  2CC9               	goto	l233
  2162  04A0                     l218:	
  2163                           ;MAIN_CONTROL.c: 333:         case 1:
  2164                           
  2165                           ;MAIN_CONTROL.c: 332:             break;
  2166                           
  2167                           ;MAIN_CONTROL.c: 331:             ADCON0bits.CHS0 = 0;
  2168                           
  2169                           ;MAIN_CONTROL.c: 330:             ADCON0bits.CHS1 = 0;
  2170                           
  2171                           ;MAIN_CONTROL.c: 329:             ADCON0bits.CHS2 = 0;
  2172                           
  2173                           ;MAIN_CONTROL.c: 328:             ADCON0bits.CHS3 = 0;
  2174                           
  2175                           
  2176                           ;MAIN_CONTROL.c: 334:             ADCON0bits.CHS3 = 0;
  2177  04A0  129F               	bcf	31,5	;volatile
  2178  04A1  2CB1               	goto	L30
  2179  04A2                     l219:	
  2180                           ;MAIN_CONTROL.c: 339:         case 2:
  2181                           
  2182                           ;MAIN_CONTROL.c: 338:             break;
  2183                           
  2184                           ;MAIN_CONTROL.c: 337:             ADCON0bits.CHS0 = 1;
  2185                           
  2186                           ;MAIN_CONTROL.c: 336:             ADCON0bits.CHS1 = 0;
  2187                           
  2188                           ;MAIN_CONTROL.c: 335:             ADCON0bits.CHS2 = 0;
  2189                           
  2190                           
  2191                           ;MAIN_CONTROL.c: 340:             ADCON0bits.CHS3 = 0;
  2192  04A2  129F               	bcf	31,5	;volatile
  2193  04A3  2CB4               	goto	L31
  2194  04A4                     l220:	
  2195                           ;MAIN_CONTROL.c: 345:         case 3:
  2196                           
  2197                           ;MAIN_CONTROL.c: 344:             break;
  2198                           
  2199                           ;MAIN_CONTROL.c: 343:             ADCON0bits.CHS0 = 0;
  2200                           
  2201                           ;MAIN_CONTROL.c: 342:             ADCON0bits.CHS1 = 1;
  2202                           
  2203                           ;MAIN_CONTROL.c: 341:             ADCON0bits.CHS2 = 0;
  2204                           
  2205                           
  2206                           ;MAIN_CONTROL.c: 346:             ADCON0bits.CHS3 = 0;
  2207  04A4  129F               	bcf	31,5	;volatile
  2208  04A5  2CB7               	goto	L26
  2209  04A6                     l221:	
  2210                           ;MAIN_CONTROL.c: 351:         case 4:
  2211                           
  2212                           ;MAIN_CONTROL.c: 350:             break;
  2213                           
  2214                           ;MAIN_CONTROL.c: 349:             ADCON0bits.CHS0 = 1;
  2215                           
  2216                           ;MAIN_CONTROL.c: 348:             ADCON0bits.CHS1 = 1;
  2217                           
  2218                           ;MAIN_CONTROL.c: 347:             ADCON0bits.CHS2 = 0;
  2219                           
  2220                           
  2221                           ;MAIN_CONTROL.c: 352:             ADCON0bits.CHS3 = 0;
  2222  04A6  129F               	bcf	31,5	;volatile
  2223  04A7  2CBA               	goto	L27
  2224  04A8                     l222:	
  2225                           ;MAIN_CONTROL.c: 357:         case 5:
  2226                           
  2227                           ;MAIN_CONTROL.c: 356:             break;
  2228                           
  2229                           ;MAIN_CONTROL.c: 355:             ADCON0bits.CHS0 = 0;
  2230                           
  2231                           ;MAIN_CONTROL.c: 354:             ADCON0bits.CHS1 = 0;
  2232                           
  2233                           ;MAIN_CONTROL.c: 353:             ADCON0bits.CHS2 = 1;
  2234                           
  2235                           
  2236                           ;MAIN_CONTROL.c: 358:             ADCON0bits.CHS3 = 0;
  2237  04A8  129F               	bcf	31,5	;volatile
  2238  04A9  2CBD               	goto	L28
  2239  04AA                     l223:	
  2240                           ;MAIN_CONTROL.c: 363:         case 6:
  2241                           
  2242                           ;MAIN_CONTROL.c: 362:             break;
  2243                           
  2244                           ;MAIN_CONTROL.c: 361:             ADCON0bits.CHS0 = 1;
  2245                           
  2246                           ;MAIN_CONTROL.c: 360:             ADCON0bits.CHS1 = 0;
  2247                           
  2248                           ;MAIN_CONTROL.c: 359:             ADCON0bits.CHS2 = 1;
  2249                           
  2250                           
  2251                           ;MAIN_CONTROL.c: 364:             ADCON0bits.CHS3 = 0;
  2252  04AA  129F               	bcf	31,5	;volatile
  2253  04AB  2CC1               	goto	L29
  2254  04AC                     l224:	
  2255                           ;MAIN_CONTROL.c: 369:         case 7:
  2256                           
  2257                           ;MAIN_CONTROL.c: 368:             break;
  2258                           
  2259                           ;MAIN_CONTROL.c: 367:             ADCON0bits.CHS0 = 0;
  2260                           
  2261                           ;MAIN_CONTROL.c: 366:             ADCON0bits.CHS1 = 1;
  2262                           
  2263                           ;MAIN_CONTROL.c: 365:             ADCON0bits.CHS2 = 1;
  2264                           
  2265                           
  2266                           ;MAIN_CONTROL.c: 370:             ADCON0bits.CHS3 = 0;
  2267  04AC  129F               	bcf	31,5	;volatile
  2268  04AD  2CC5               	goto	L16
  2269  04AE                     l225:	
  2270                           ;MAIN_CONTROL.c: 375:         case 8:
  2271                           
  2272                           ;MAIN_CONTROL.c: 374:             break;
  2273                           
  2274                           ;MAIN_CONTROL.c: 373:             ADCON0bits.CHS0 = 1;
  2275                           
  2276                           ;MAIN_CONTROL.c: 372:             ADCON0bits.CHS1 = 1;
  2277                           
  2278                           ;MAIN_CONTROL.c: 371:             ADCON0bits.CHS2 = 1;
  2279                           
  2280                           
  2281                           ;MAIN_CONTROL.c: 376:             ADCON0bits.CHS3 = 1;
  2282  04AE  169F               	bsf	31,5	;volatile
  2283  04AF  2CCA               	goto	L17
  2284  04B0                     l226:	
  2285                           ;MAIN_CONTROL.c: 381:         case 9:
  2286                           
  2287                           ;MAIN_CONTROL.c: 380:             break;
  2288                           
  2289                           ;MAIN_CONTROL.c: 379:             ADCON0bits.CHS0 = 0;
  2290                           
  2291                           ;MAIN_CONTROL.c: 378:             ADCON0bits.CHS1 = 0;
  2292                           
  2293                           ;MAIN_CONTROL.c: 377:             ADCON0bits.CHS2 = 0;
  2294                           
  2295                           
  2296                           ;MAIN_CONTROL.c: 382:             ADCON0bits.CHS3 = 1;
  2297  04B0  169F               	bsf	31,5	;volatile
  2298  04B1                     L30:	
  2299                           
  2300                           ;MAIN_CONTROL.c: 383:             ADCON0bits.CHS2 = 0;
  2301  04B1  121F               	bcf	31,4	;volatile
  2302  04B2  2CBE               	goto	L24
  2303  04B3                     l227:	
  2304                           ;MAIN_CONTROL.c: 387:         case 10:
  2305                           
  2306                           ;MAIN_CONTROL.c: 386:             break;
  2307                           
  2308                           ;MAIN_CONTROL.c: 385:             ADCON0bits.CHS0 = 1;
  2309                           
  2310                           ;MAIN_CONTROL.c: 384:             ADCON0bits.CHS1 = 0;
  2311                           
  2312                           
  2313                           ;MAIN_CONTROL.c: 388:             ADCON0bits.CHS3 = 1;
  2314  04B3  169F               	bsf	31,5	;volatile
  2315  04B4                     L31:	
  2316                           
  2317                           ;MAIN_CONTROL.c: 389:             ADCON0bits.CHS2 = 0;
  2318  04B4  121F               	bcf	31,4	;volatile
  2319  04B5  2CC2               	goto	L25
  2320  04B6                     l228:	
  2321                           ;MAIN_CONTROL.c: 393:         case 11:
  2322                           
  2323                           ;MAIN_CONTROL.c: 392:             break;
  2324                           
  2325                           ;MAIN_CONTROL.c: 391:             ADCON0bits.CHS0 = 0;
  2326                           
  2327                           ;MAIN_CONTROL.c: 390:             ADCON0bits.CHS1 = 1;
  2328                           
  2329                           
  2330                           ;MAIN_CONTROL.c: 394:             ADCON0bits.CHS3 = 1;
  2331  04B6  169F               	bsf	31,5	;volatile
  2332  04B7                     L26:	
  2333                           
  2334                           ;MAIN_CONTROL.c: 395:             ADCON0bits.CHS2 = 0;
  2335  04B7  121F               	bcf	31,4	;volatile
  2336  04B8  2CC6               	goto	L18
  2337  04B9                     l229:	
  2338                           ;MAIN_CONTROL.c: 399:         case 12:
  2339                           
  2340                           ;MAIN_CONTROL.c: 398:             break;
  2341                           
  2342                           ;MAIN_CONTROL.c: 397:             ADCON0bits.CHS0 = 1;
  2343                           
  2344                           ;MAIN_CONTROL.c: 396:             ADCON0bits.CHS1 = 1;
  2345                           
  2346                           
  2347                           ;MAIN_CONTROL.c: 400:             ADCON0bits.CHS3 = 1;
  2348  04B9  169F               	bsf	31,5	;volatile
  2349  04BA                     L27:	
  2350                           
  2351                           ;MAIN_CONTROL.c: 401:             ADCON0bits.CHS2 = 1;
  2352  04BA  161F               	bsf	31,4	;volatile
  2353  04BB  2CCB               	goto	L19
  2354  04BC                     l230:	
  2355                           ;MAIN_CONTROL.c: 405:         case 13:
  2356                           
  2357                           ;MAIN_CONTROL.c: 404:             break;
  2358                           
  2359                           ;MAIN_CONTROL.c: 403:             ADCON0bits.CHS0 = 0;
  2360                           
  2361                           ;MAIN_CONTROL.c: 402:             ADCON0bits.CHS1 = 0;
  2362                           
  2363                           
  2364                           ;MAIN_CONTROL.c: 406:             ADCON0bits.CHS3 = 1;
  2365  04BC  169F               	bsf	31,5	;volatile
  2366  04BD                     L28:	
  2367                           
  2368                           ;MAIN_CONTROL.c: 407:             ADCON0bits.CHS2 = 1;
  2369  04BD  161F               	bsf	31,4	;volatile
  2370  04BE                     L24:	
  2371                           
  2372                           ;MAIN_CONTROL.c: 408:             ADCON0bits.CHS1 = 0;
  2373  04BE  119F               	bcf	31,3	;volatile
  2374  04BF  2CC7               	goto	L14
  2375  04C0                     l231:	
  2376                           ;MAIN_CONTROL.c: 411:         case 14:
  2377                           
  2378                           ;MAIN_CONTROL.c: 410:             break;
  2379                           
  2380                           ;MAIN_CONTROL.c: 409:             ADCON0bits.CHS0 = 1;
  2381                           
  2382                           
  2383                           ;MAIN_CONTROL.c: 412:             ADCON0bits.CHS3 = 1;
  2384  04C0  169F               	bsf	31,5	;volatile
  2385  04C1                     L29:	
  2386                           
  2387                           ;MAIN_CONTROL.c: 413:             ADCON0bits.CHS2 = 1;
  2388  04C1  161F               	bsf	31,4	;volatile
  2389  04C2                     L25:	
  2390                           
  2391                           ;MAIN_CONTROL.c: 414:             ADCON0bits.CHS1 = 1;
  2392  04C2  159F               	bsf	31,3	;volatile
  2393  04C3  2CCC               	goto	L15
  2394  04C4                     l232:	
  2395                           ;MAIN_CONTROL.c: 417:         case 15:
  2396                           
  2397                           ;MAIN_CONTROL.c: 416:             break;
  2398                           
  2399                           ;MAIN_CONTROL.c: 415:             ADCON0bits.CHS0 = 0;
  2400                           
  2401                           
  2402                           ;MAIN_CONTROL.c: 418:             ADCON0bits.CHS3 = 1;
  2403  04C4  169F               	bsf	31,5	;volatile
  2404  04C5                     L16:	
  2405                           
  2406                           ;MAIN_CONTROL.c: 419:             ADCON0bits.CHS2 = 1;
  2407  04C5  161F               	bsf	31,4	;volatile
  2408  04C6                     L18:	
  2409                           
  2410                           ;MAIN_CONTROL.c: 420:             ADCON0bits.CHS1 = 1;
  2411  04C6  159F               	bsf	31,3	;volatile
  2412  04C7                     L14:	
  2413                           
  2414                           ;MAIN_CONTROL.c: 421:             ADCON0bits.CHS0 = 1;
  2415  04C7  151F               	bsf	31,2	;volatile
  2416                           
  2417                           ;MAIN_CONTROL.c: 422:             break;
  2418  04C8  2D08               	goto	l217
  2419  04C9                     l233:	
  2420                           ;MAIN_CONTROL.c: 423:         default:
  2421                           
  2422                           
  2423                           ;MAIN_CONTROL.c: 424:             ADCON0bits.CHS3 = 0;
  2424  04C9  129F               	bcf	31,5	;volatile
  2425  04CA                     L17:	
  2426                           
  2427                           ;MAIN_CONTROL.c: 425:             ADCON0bits.CHS2 = 0;
  2428  04CA  121F               	bcf	31,4	;volatile
  2429  04CB                     L19:	
  2430                           
  2431                           ;MAIN_CONTROL.c: 426:             ADCON0bits.CHS1 = 0;
  2432  04CB  119F               	bcf	31,3	;volatile
  2433  04CC                     L15:	
  2434                           
  2435                           ;MAIN_CONTROL.c: 427:             ADCON0bits.CHS0 = 0;
  2436  04CC  111F               	bcf	31,2	;volatile
  2437                           
  2438                           ;MAIN_CONTROL.c: 428:             break;
  2439  04CD  2D08               	goto	l217
  2440  04CE                     l2799:	
  2441  04CE  0820               	movf	init_ADC@channel,w
  2442  04CF  00F4               	movwf	??_init_ADC
  2443  04D0  01F5               	clrf	??_init_ADC+1
  2444                           
  2445                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2446                           ; Switch size 1, requested type "simple"
  2447                           ; Number of cases is 1, Range of values is 0 to 0
  2448                           ; switch strategies available:
  2449                           ; Name         Instructions Cycles
  2450                           ; simple_byte            4     3 (average)
  2451                           ; direct_byte           11     8 (fixed)
  2452                           ; jumptable            260     6 (fixed)
  2453                           ;	Chosen strategy is simple_byte
  2454  04D1  0875               	movf	??_init_ADC+1,w
  2455  04D2  3A00               	xorlw	0	; case 0
  2456  04D3  1903               	skipnz
  2457  04D4  2CD6               	goto	l3661
  2458  04D5  2CC9               	goto	l233
  2459  04D6                     l3661:	
  2460                           
  2461                           ; Switch size 1, requested type "simple"
  2462                           ; Number of cases is 16, Range of values is 0 to 15
  2463                           ; switch strategies available:
  2464                           ; Name         Instructions Cycles
  2465                           ; simple_byte           49    25 (average)
  2466                           ; direct_byte           56     8 (fixed)
  2467                           ; jumptable            260     6 (fixed)
  2468                           ;	Chosen strategy is simple_byte
  2469  04D6  0874               	movf	??_init_ADC,w
  2470  04D7  3A00               	xorlw	0	; case 0
  2471  04D8  1903               	skipnz
  2472  04D9  2C9F               	goto	l216
  2473  04DA  3A01               	xorlw	1	; case 1
  2474  04DB  1903               	skipnz
  2475  04DC  2CA0               	goto	l218
  2476  04DD  3A03               	xorlw	3	; case 2
  2477  04DE  1903               	skipnz
  2478  04DF  2CA2               	goto	l219
  2479  04E0  3A01               	xorlw	1	; case 3
  2480  04E1  1903               	skipnz
  2481  04E2  2CA4               	goto	l220
  2482  04E3  3A07               	xorlw	7	; case 4
  2483  04E4  1903               	skipnz
  2484  04E5  2CA6               	goto	l221
  2485  04E6  3A01               	xorlw	1	; case 5
  2486  04E7  1903               	skipnz
  2487  04E8  2CA8               	goto	l222
  2488  04E9  3A03               	xorlw	3	; case 6
  2489  04EA  1903               	skipnz
  2490  04EB  2CAA               	goto	l223
  2491  04EC  3A01               	xorlw	1	; case 7
  2492  04ED  1903               	skipnz
  2493  04EE  2CAC               	goto	l224
  2494  04EF  3A0F               	xorlw	15	; case 8
  2495  04F0  1903               	skipnz
  2496  04F1  2CAE               	goto	l225
  2497  04F2  3A01               	xorlw	1	; case 9
  2498  04F3  1903               	skipnz
  2499  04F4  2CB0               	goto	l226
  2500  04F5  3A03               	xorlw	3	; case 10
  2501  04F6  1903               	skipnz
  2502  04F7  2CB3               	goto	l227
  2503  04F8  3A01               	xorlw	1	; case 11
  2504  04F9  1903               	skipnz
  2505  04FA  2CB6               	goto	l228
  2506  04FB  3A07               	xorlw	7	; case 12
  2507  04FC  1903               	skipnz
  2508  04FD  2CB9               	goto	l229
  2509  04FE  3A01               	xorlw	1	; case 13
  2510  04FF  1903               	skipnz
  2511  0500  2CBC               	goto	l230
  2512  0501  3A03               	xorlw	3	; case 14
  2513  0502  1903               	skipnz
  2514  0503  2CC0               	goto	l231
  2515  0504  3A01               	xorlw	1	; case 15
  2516  0505  1903               	skipnz
  2517  0506  2CC4               	goto	l232
  2518  0507  2CC9               	goto	l233
  2519  0508                     l217:	
  2520                           
  2521                           ;MAIN_CONTROL.c: 431:     ADCON1bits.ADFM = 0;
  2522  0508  1683               	bsf	3,5	;RP0=1, select bank1
  2523  0509  1303               	bcf	3,6	;RP1=0, select bank1
  2524  050A  139F               	bcf	31,7	;volatile
  2525                           
  2526                           ;MAIN_CONTROL.c: 432:     ADCON1bits.VCFG1 = 0;
  2527  050B  129F               	bcf	31,5	;volatile
  2528                           
  2529                           ;MAIN_CONTROL.c: 433:     ADCON1bits.VCFG0 = 0;
  2530  050C  121F               	bcf	31,4	;volatile
  2531                           
  2532                           ;MAIN_CONTROL.c: 434:     ADCON0bits.ADON = 1;
  2533  050D  1283               	bcf	3,5	;RP0=0, select bank0
  2534  050E  1303               	bcf	3,6	;RP1=0, select bank0
  2535  050F  141F               	bsf	31,0	;volatile
  2536                           
  2537                           ;MAIN_CONTROL.c: 436:     PIR1bits.ADIF = 0;
  2538  0510  130C               	bcf	12,6	;volatile
  2539                           
  2540                           ;MAIN_CONTROL.c: 438:     ADCON0bits.GO = 1;
  2541  0511  149F               	bsf	31,1	;volatile
  2542  0512                     l234:	
  2543                           ;MAIN_CONTROL.c: 440:     }
  2544                           
  2545                           
  2546                           ;MAIN_CONTROL.c: 439:     while(ADCON0bits.GO == 1){
  2547  0512  1C9F               	btfss	31,1	;volatile
  2548  0513  0008               	return
  2549  0514  2D12               	goto	l234
  2550  0515                     __end_of_init_ADC:	
  2551                           
  2552                           	psect	text11
  2553  0123                     __ptext11:	
  2554 ;; *************** function _OSC_config *****************
  2555 ;; Defined at:
  2556 ;;		line 508 in file "MAIN_CONTROL.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  frecuencia      4    0[BANK0 ] unsigned long 
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;		None
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2570 ;;      Params:         0       4       0       0       0
  2571 ;;      Locals:         0       0       0       0       0
  2572 ;;      Temps:          0       0       0       0       0
  2573 ;;      Totals:         0       4       0       0       0
  2574 ;;Total ram usage:        4 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:    1
  2577 ;; This function calls:
  2578 ;;		Nothing
  2579 ;; This function is called by:
  2580 ;;		_config
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           
  2585                           ;psect for function _OSC_config
  2586  0123                     _OSC_config:	
  2587                           
  2588                           ;MAIN_CONTROL.c: 509:     switch(frecuencia){
  2589                           
  2590                           ;incstack = 0
  2591                           ; Regs used in _OSC_config: [wreg-fsr0h+status,2+status,0]
  2592  0123  295F               	goto	l2857
  2593  0124                     l2839:	
  2594                           
  2595                           ;MAIN_CONTROL.c: 511:             OSCCONbits.IRCF = 0b111;
  2596  0124  3070               	movlw	112
  2597  0125  1683               	bsf	3,5	;RP0=1, select bank1
  2598  0126  1303               	bcf	3,6	;RP1=0, select bank1
  2599  0127  048F               	iorwf	15,f	;volatile
  2600                           
  2601                           ;MAIN_CONTROL.c: 512:             break;
  2602  0128  0008               	return
  2603  0129                     l2841:	
  2604                           
  2605                           ;MAIN_CONTROL.c: 514:             OSCCONbits.IRCF = 0b110;
  2606  0129  1683               	bsf	3,5	;RP0=1, select bank1
  2607  012A  1303               	bcf	3,6	;RP1=0, select bank1
  2608  012B  080F               	movf	15,w	;volatile
  2609  012C  398F               	andlw	-113
  2610  012D  3860               	iorlw	96
  2611  012E  008F               	movwf	15	;volatile
  2612                           
  2613                           ;MAIN_CONTROL.c: 515:             break;
  2614  012F  0008               	return
  2615  0130                     l2843:	
  2616                           
  2617                           ;MAIN_CONTROL.c: 517:             OSCCONbits.IRCF = 0b101;
  2618  0130  1683               	bsf	3,5	;RP0=1, select bank1
  2619  0131  1303               	bcf	3,6	;RP1=0, select bank1
  2620  0132  080F               	movf	15,w	;volatile
  2621  0133  398F               	andlw	-113
  2622  0134  3850               	iorlw	80
  2623  0135  008F               	movwf	15	;volatile
  2624                           
  2625                           ;MAIN_CONTROL.c: 518:             break;
  2626  0136  0008               	return
  2627  0137                     l2845:	
  2628                           
  2629                           ;MAIN_CONTROL.c: 520:             OSCCONbits.IRCF = 0b100;
  2630  0137  1683               	bsf	3,5	;RP0=1, select bank1
  2631  0138  1303               	bcf	3,6	;RP1=0, select bank1
  2632  0139  080F               	movf	15,w	;volatile
  2633  013A  398F               	andlw	-113
  2634  013B  3840               	iorlw	64
  2635  013C  008F               	movwf	15	;volatile
  2636                           
  2637                           ;MAIN_CONTROL.c: 521:             break;
  2638  013D  0008               	return
  2639  013E                     l2847:	
  2640                           
  2641                           ;MAIN_CONTROL.c: 523:             OSCCONbits.IRCF = 0b011;
  2642  013E  1683               	bsf	3,5	;RP0=1, select bank1
  2643  013F  1303               	bcf	3,6	;RP1=0, select bank1
  2644  0140  080F               	movf	15,w	;volatile
  2645  0141  398F               	andlw	-113
  2646  0142  3830               	iorlw	48
  2647  0143  008F               	movwf	15	;volatile
  2648                           
  2649                           ;MAIN_CONTROL.c: 524:             break;
  2650  0144  0008               	return
  2651  0145                     l2849:	
  2652                           
  2653                           ;MAIN_CONTROL.c: 526:             OSCCONbits.IRCF = 0b010;
  2654  0145  1683               	bsf	3,5	;RP0=1, select bank1
  2655  0146  1303               	bcf	3,6	;RP1=0, select bank1
  2656  0147  080F               	movf	15,w	;volatile
  2657  0148  398F               	andlw	-113
  2658  0149  3820               	iorlw	32
  2659  014A  008F               	movwf	15	;volatile
  2660                           
  2661                           ;MAIN_CONTROL.c: 527:             break;
  2662  014B  0008               	return
  2663  014C                     l2851:	
  2664                           
  2665                           ;MAIN_CONTROL.c: 529:             OSCCONbits.IRCF = 0b001;
  2666  014C  1683               	bsf	3,5	;RP0=1, select bank1
  2667  014D  1303               	bcf	3,6	;RP1=0, select bank1
  2668  014E  080F               	movf	15,w	;volatile
  2669  014F  398F               	andlw	-113
  2670  0150  3810               	iorlw	16
  2671  0151  008F               	movwf	15	;volatile
  2672                           
  2673                           ;MAIN_CONTROL.c: 530:             break;
  2674  0152  0008               	return
  2675  0153                     l2853:	
  2676                           
  2677                           ;MAIN_CONTROL.c: 532:             OSCCONbits.IRCF = 0b000;
  2678  0153  308F               	movlw	-113
  2679  0154  1683               	bsf	3,5	;RP0=1, select bank1
  2680  0155  1303               	bcf	3,6	;RP1=0, select bank1
  2681  0156  058F               	andwf	15,f	;volatile
  2682                           
  2683                           ;MAIN_CONTROL.c: 533:             break;
  2684  0157  0008               	return
  2685  0158                     l2855:	
  2686                           
  2687                           ;MAIN_CONTROL.c: 535:             OSCCONbits.IRCF = 0b110;
  2688  0158  1683               	bsf	3,5	;RP0=1, select bank1
  2689  0159  1303               	bcf	3,6	;RP1=0, select bank1
  2690  015A  080F               	movf	15,w	;volatile
  2691  015B  398F               	andlw	-113
  2692  015C  3860               	iorlw	96
  2693  015D  008F               	movwf	15	;volatile
  2694                           
  2695                           ;MAIN_CONTROL.c: 536:     }
  2696  015E  0008               	return
  2697  015F                     l2857:	
  2698                           
  2699                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 9 sub-sw
      +                          itches
  2700                           ; Switch size 1, requested type "simple"
  2701                           ; Number of cases is 1, Range of values is 0 to 0
  2702                           ; switch strategies available:
  2703                           ; Name         Instructions Cycles
  2704                           ; simple_byte            4     3 (average)
  2705                           ; direct_byte           11     8 (fixed)
  2706                           ; jumptable            260     6 (fixed)
  2707                           ;	Chosen strategy is simple_byte
  2708  015F  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0160  1303               	bcf	3,6	;RP1=0, select bank0
  2710  0161  0823               	movf	OSC_config@frecuencia+3,w
  2711  0162  3A00               	xorlw	0	; case 0
  2712  0163  1903               	skipnz
  2713  0164  29B6               	goto	l3679
  2714  0165  2958               	goto	l2855
  2715  0166                     l3663:	
  2716                           
  2717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2718                           ; Switch size 1, requested type "simple"
  2719                           ; Number of cases is 1, Range of values is 125 to 125
  2720                           ; switch strategies available:
  2721                           ; Name         Instructions Cycles
  2722                           ; simple_byte            4     3 (average)
  2723                           ; direct_byte           14    11 (fixed)
  2724                           ; jumptable            263     9 (fixed)
  2725                           ;	Chosen strategy is simple_byte
  2726  0166  0821               	movf	OSC_config@frecuencia+1,w
  2727  0167  3A7D               	xorlw	125	; case 125
  2728  0168  1903               	skipnz
  2729  0169  296B               	goto	l3681
  2730  016A  2958               	goto	l2855
  2731  016B                     l3681:	
  2732                           
  2733                           ; Switch size 1, requested type "simple"
  2734                           ; Number of cases is 1, Range of values is 0 to 0
  2735                           ; switch strategies available:
  2736                           ; Name         Instructions Cycles
  2737                           ; simple_byte            4     3 (average)
  2738                           ; direct_byte           11     8 (fixed)
  2739                           ; jumptable            260     6 (fixed)
  2740                           ;	Chosen strategy is simple_byte
  2741  016B  0820               	movf	OSC_config@frecuencia,w
  2742  016C  3A00               	xorlw	0	; case 0
  2743  016D  1903               	skipnz
  2744  016E  2953               	goto	l2853
  2745  016F  2958               	goto	l2855
  2746  0170                     l3665:	
  2747                           
  2748                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2749                           ; Switch size 1, requested type "simple"
  2750                           ; Number of cases is 1, Range of values is 232 to 232
  2751                           ; switch strategies available:
  2752                           ; Name         Instructions Cycles
  2753                           ; simple_byte            4     3 (average)
  2754                           ; direct_byte           14    11 (fixed)
  2755                           ; jumptable            263     9 (fixed)
  2756                           ;	Chosen strategy is simple_byte
  2757  0170  0821               	movf	OSC_config@frecuencia+1,w
  2758  0171  3AE8               	xorlw	232	; case 232
  2759  0172  1903               	skipnz
  2760  0173  2975               	goto	l3683
  2761  0174  2958               	goto	l2855
  2762  0175                     l3683:	
  2763                           
  2764                           ; Switch size 1, requested type "simple"
  2765                           ; Number of cases is 1, Range of values is 72 to 72
  2766                           ; switch strategies available:
  2767                           ; Name         Instructions Cycles
  2768                           ; simple_byte            4     3 (average)
  2769                           ; direct_byte           14    11 (fixed)
  2770                           ; jumptable            263     9 (fixed)
  2771                           ;	Chosen strategy is simple_byte
  2772  0175  0820               	movf	OSC_config@frecuencia,w
  2773  0176  3A48               	xorlw	72	; case 72
  2774  0177  1903               	skipnz
  2775  0178  294C               	goto	l2851
  2776  0179  2958               	goto	l2855
  2777  017A                     l3667:	
  2778                           
  2779                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2780                           ; Switch size 1, requested type "simple"
  2781                           ; Number of cases is 1, Range of values is 208 to 208
  2782                           ; switch strategies available:
  2783                           ; Name         Instructions Cycles
  2784                           ; simple_byte            4     3 (average)
  2785                           ; direct_byte           14    11 (fixed)
  2786                           ; jumptable            263     9 (fixed)
  2787                           ;	Chosen strategy is simple_byte
  2788  017A  0821               	movf	OSC_config@frecuencia+1,w
  2789  017B  3AD0               	xorlw	208	; case 208
  2790  017C  1903               	skipnz
  2791  017D  297F               	goto	l3685
  2792  017E  2958               	goto	l2855
  2793  017F                     l3685:	
  2794                           
  2795                           ; Switch size 1, requested type "simple"
  2796                           ; Number of cases is 1, Range of values is 144 to 144
  2797                           ; switch strategies available:
  2798                           ; Name         Instructions Cycles
  2799                           ; simple_byte            4     3 (average)
  2800                           ; direct_byte           14    11 (fixed)
  2801                           ; jumptable            263     9 (fixed)
  2802                           ;	Chosen strategy is simple_byte
  2803  017F  0820               	movf	OSC_config@frecuencia,w
  2804  0180  3A90               	xorlw	144	; case 144
  2805  0181  1903               	skipnz
  2806  0182  2945               	goto	l2849
  2807  0183  2958               	goto	l2855
  2808  0184                     l3669:	
  2809                           
  2810                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2811                           ; Switch size 1, requested type "simple"
  2812                           ; Number of cases is 1, Range of values is 161 to 161
  2813                           ; switch strategies available:
  2814                           ; Name         Instructions Cycles
  2815                           ; simple_byte            4     3 (average)
  2816                           ; direct_byte           14    11 (fixed)
  2817                           ; jumptable            263     9 (fixed)
  2818                           ;	Chosen strategy is simple_byte
  2819  0184  0821               	movf	OSC_config@frecuencia+1,w
  2820  0185  3AA1               	xorlw	161	; case 161
  2821  0186  1903               	skipnz
  2822  0187  2989               	goto	l3687
  2823  0188  2958               	goto	l2855
  2824  0189                     l3687:	
  2825                           
  2826                           ; Switch size 1, requested type "simple"
  2827                           ; Number of cases is 1, Range of values is 32 to 32
  2828                           ; switch strategies available:
  2829                           ; Name         Instructions Cycles
  2830                           ; simple_byte            4     3 (average)
  2831                           ; direct_byte           14    11 (fixed)
  2832                           ; jumptable            263     9 (fixed)
  2833                           ;	Chosen strategy is simple_byte
  2834  0189  0820               	movf	OSC_config@frecuencia,w
  2835  018A  3A20               	xorlw	32	; case 32
  2836  018B  1903               	skipnz
  2837  018C  293E               	goto	l2847
  2838  018D  2958               	goto	l2855
  2839  018E                     l3671:	
  2840                           
  2841                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2842                           ; Switch size 1, requested type "simple"
  2843                           ; Number of cases is 1, Range of values is 66 to 66
  2844                           ; switch strategies available:
  2845                           ; Name         Instructions Cycles
  2846                           ; simple_byte            4     3 (average)
  2847                           ; direct_byte           14    11 (fixed)
  2848                           ; jumptable            263     9 (fixed)
  2849                           ;	Chosen strategy is simple_byte
  2850  018E  0821               	movf	OSC_config@frecuencia+1,w
  2851  018F  3A42               	xorlw	66	; case 66
  2852  0190  1903               	skipnz
  2853  0191  2993               	goto	l3689
  2854  0192  2958               	goto	l2855
  2855  0193                     l3689:	
  2856                           
  2857                           ; Switch size 1, requested type "simple"
  2858                           ; Number of cases is 1, Range of values is 64 to 64
  2859                           ; switch strategies available:
  2860                           ; Name         Instructions Cycles
  2861                           ; simple_byte            4     3 (average)
  2862                           ; direct_byte           14    11 (fixed)
  2863                           ; jumptable            263     9 (fixed)
  2864                           ;	Chosen strategy is simple_byte
  2865  0193  0820               	movf	OSC_config@frecuencia,w
  2866  0194  3A40               	xorlw	64	; case 64
  2867  0195  1903               	skipnz
  2868  0196  2937               	goto	l2845
  2869  0197  2958               	goto	l2855
  2870  0198                     l3673:	
  2871                           
  2872                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2873                           ; Switch size 1, requested type "simple"
  2874                           ; Number of cases is 1, Range of values is 132 to 132
  2875                           ; switch strategies available:
  2876                           ; Name         Instructions Cycles
  2877                           ; simple_byte            4     3 (average)
  2878                           ; direct_byte           14    11 (fixed)
  2879                           ; jumptable            263     9 (fixed)
  2880                           ;	Chosen strategy is simple_byte
  2881  0198  0821               	movf	OSC_config@frecuencia+1,w
  2882  0199  3A84               	xorlw	132	; case 132
  2883  019A  1903               	skipnz
  2884  019B  299D               	goto	l3691
  2885  019C  2958               	goto	l2855
  2886  019D                     l3691:	
  2887                           
  2888                           ; Switch size 1, requested type "simple"
  2889                           ; Number of cases is 1, Range of values is 128 to 128
  2890                           ; switch strategies available:
  2891                           ; Name         Instructions Cycles
  2892                           ; simple_byte            4     3 (average)
  2893                           ; direct_byte           14    11 (fixed)
  2894                           ; jumptable            263     9 (fixed)
  2895                           ;	Chosen strategy is simple_byte
  2896  019D  0820               	movf	OSC_config@frecuencia,w
  2897  019E  3A80               	xorlw	128	; case 128
  2898  019F  1903               	skipnz
  2899  01A0  2930               	goto	l2843
  2900  01A1  2958               	goto	l2855
  2901  01A2                     l3675:	
  2902                           
  2903                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2904                           ; Switch size 1, requested type "simple"
  2905                           ; Number of cases is 1, Range of values is 9 to 9
  2906                           ; switch strategies available:
  2907                           ; Name         Instructions Cycles
  2908                           ; simple_byte            4     3 (average)
  2909                           ; direct_byte           14    11 (fixed)
  2910                           ; jumptable            263     9 (fixed)
  2911                           ;	Chosen strategy is simple_byte
  2912  01A2  0821               	movf	OSC_config@frecuencia+1,w
  2913  01A3  3A09               	xorlw	9	; case 9
  2914  01A4  1903               	skipnz
  2915  01A5  29A7               	goto	l3693
  2916  01A6  2958               	goto	l2855
  2917  01A7                     l3693:	
  2918                           
  2919                           ; Switch size 1, requested type "simple"
  2920                           ; Number of cases is 1, Range of values is 0 to 0
  2921                           ; switch strategies available:
  2922                           ; Name         Instructions Cycles
  2923                           ; simple_byte            4     3 (average)
  2924                           ; direct_byte           11     8 (fixed)
  2925                           ; jumptable            260     6 (fixed)
  2926                           ;	Chosen strategy is simple_byte
  2927  01A7  0820               	movf	OSC_config@frecuencia,w
  2928  01A8  3A00               	xorlw	0	; case 0
  2929  01A9  1903               	skipnz
  2930  01AA  2929               	goto	l2841
  2931  01AB  2958               	goto	l2855
  2932  01AC                     l3677:	
  2933                           
  2934                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2935                           ; Switch size 1, requested type "simple"
  2936                           ; Number of cases is 1, Range of values is 18 to 18
  2937                           ; switch strategies available:
  2938                           ; Name         Instructions Cycles
  2939                           ; simple_byte            4     3 (average)
  2940                           ; direct_byte           14    11 (fixed)
  2941                           ; jumptable            263     9 (fixed)
  2942                           ;	Chosen strategy is simple_byte
  2943  01AC  0821               	movf	OSC_config@frecuencia+1,w
  2944  01AD  3A12               	xorlw	18	; case 18
  2945  01AE  1903               	skipnz
  2946  01AF  29B1               	goto	l3695
  2947  01B0  2958               	goto	l2855
  2948  01B1                     l3695:	
  2949                           
  2950                           ; Switch size 1, requested type "simple"
  2951                           ; Number of cases is 1, Range of values is 0 to 0
  2952                           ; switch strategies available:
  2953                           ; Name         Instructions Cycles
  2954                           ; simple_byte            4     3 (average)
  2955                           ; direct_byte           11     8 (fixed)
  2956                           ; jumptable            260     6 (fixed)
  2957                           ;	Chosen strategy is simple_byte
  2958  01B1  0820               	movf	OSC_config@frecuencia,w
  2959  01B2  3A00               	xorlw	0	; case 0
  2960  01B3  1903               	skipnz
  2961  01B4  2924               	goto	l2839
  2962  01B5  2958               	goto	l2855
  2963  01B6                     l3679:	
  2964                           
  2965                           ; Switch size 1, requested type "simple"
  2966                           ; Number of cases is 8, Range of values is 0 to 122
  2967                           ; switch strategies available:
  2968                           ; Name         Instructions Cycles
  2969                           ; simple_byte           25    13 (average)
  2970                           ; jumptable            260     6 (fixed)
  2971                           ;	Chosen strategy is simple_byte
  2972  01B6  0822               	movf	OSC_config@frecuencia+2,w
  2973  01B7  3A00               	xorlw	0	; case 0
  2974  01B8  1903               	skipnz
  2975  01B9  2966               	goto	l3663
  2976  01BA  3A01               	xorlw	1	; case 1
  2977  01BB  1903               	skipnz
  2978  01BC  2970               	goto	l3665
  2979  01BD  3A02               	xorlw	2	; case 3
  2980  01BE  1903               	skipnz
  2981  01BF  297A               	goto	l3667
  2982  01C0  3A04               	xorlw	4	; case 7
  2983  01C1  1903               	skipnz
  2984  01C2  2984               	goto	l3669
  2985  01C3  3A08               	xorlw	8	; case 15
  2986  01C4  1903               	skipnz
  2987  01C5  298E               	goto	l3671
  2988  01C6  3A11               	xorlw	17	; case 30
  2989  01C7  1903               	skipnz
  2990  01C8  2998               	goto	l3673
  2991  01C9  3A23               	xorlw	35	; case 61
  2992  01CA  1903               	skipnz
  2993  01CB  29A2               	goto	l3675
  2994  01CC  3A47               	xorlw	71	; case 122
  2995  01CD  1903               	skipnz
  2996  01CE  29AC               	goto	l3677
  2997  01CF  2958               	goto	l2855
  2998  01D0  0008               	return
  2999  01D1                     __end_of_OSC_config:	
  3000                           
  3001                           	psect	text12
  3002  041B                     __ptext12:	
  3003 ;; *************** function _cambiar_fila_izquierda *****************
  3004 ;; Defined at:
  3005 ;;		line 270 in file "MAIN_CONTROL.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;		None
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;		None
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      void 
  3012 ;; Registers used:
  3013 ;;		wreg, status,2
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3019 ;;      Params:         0       0       0       0       0
  3020 ;;      Locals:         0       0       0       0       0
  3021 ;;      Temps:          0       3       0       0       0
  3022 ;;      Totals:         0       3       0       0       0
  3023 ;;Total ram usage:        3 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    1
  3026 ;; This function calls:
  3027 ;;		Nothing
  3028 ;; This function is called by:
  3029 ;;		_main
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           
  3034                           ;psect for function _cambiar_fila_izquierda
  3035  041B                     _cambiar_fila_izquierda:	
  3036                           
  3037                           ;MAIN_CONTROL.c: 271:     PORTD = 0;
  3038                           
  3039                           ;incstack = 0
  3040                           ; Regs used in _cambiar_fila_izquierda: [wreg+status,2]
  3041  041B  1283               	bcf	3,5	;RP0=0, select bank0
  3042  041C  1303               	bcf	3,6	;RP1=0, select bank0
  3043  041D  0188               	clrf	8	;volatile
  3044                           
  3045                           ;MAIN_CONTROL.c: 272:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3046  041E  3003               	movlw	3
  3047  041F  1283               	bcf	3,5	;RP0=0, select bank0
  3048  0420  1303               	bcf	3,6	;RP1=0, select bank0
  3049  0421  00A2               	movwf	??_cambiar_fila_izquierda+2
  3050  0422  308A               	movlw	138
  3051  0423  00A1               	movwf	??_cambiar_fila_izquierda+1
  3052  0424  3055               	movlw	85
  3053  0425  00A0               	movwf	??_cambiar_fila_izquierda
  3054  0426                     u1087:	
  3055  0426  0BA0               	decfsz	??_cambiar_fila_izquierda,f
  3056  0427  2C26               	goto	u1087
  3057  0428  0BA1               	decfsz	??_cambiar_fila_izquierda+1,f
  3058  0429  2C26               	goto	u1087
  3059  042A  0BA2               	decfsz	??_cambiar_fila_izquierda+2,f
  3060  042B  2C26               	goto	u1087
  3061                           
  3062                           ;MAIN_CONTROL.c: 273:     PORTD = 0b10011001;
  3063  042C  3099               	movlw	153
  3064  042D  1283               	bcf	3,5	;RP0=0, select bank0
  3065  042E  1303               	bcf	3,6	;RP1=0, select bank0
  3066  042F  0088               	movwf	8	;volatile
  3067                           
  3068                           ;MAIN_CONTROL.c: 274:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3069  0430  3003               	movlw	3
  3070  0431  1283               	bcf	3,5	;RP0=0, select bank0
  3071  0432  1303               	bcf	3,6	;RP1=0, select bank0
  3072  0433  00A2               	movwf	??_cambiar_fila_izquierda+2
  3073  0434  308A               	movlw	138
  3074  0435  00A1               	movwf	??_cambiar_fila_izquierda+1
  3075  0436  3055               	movlw	85
  3076  0437  00A0               	movwf	??_cambiar_fila_izquierda
  3077  0438                     u1097:	
  3078  0438  0BA0               	decfsz	??_cambiar_fila_izquierda,f
  3079  0439  2C38               	goto	u1097
  3080  043A  0BA1               	decfsz	??_cambiar_fila_izquierda+1,f
  3081  043B  2C38               	goto	u1097
  3082  043C  0BA2               	decfsz	??_cambiar_fila_izquierda+2,f
  3083  043D  2C38               	goto	u1097
  3084                           
  3085                           ;MAIN_CONTROL.c: 275:     PORTD = 0;
  3086  043E  1283               	bcf	3,5	;RP0=0, select bank0
  3087  043F  1303               	bcf	3,6	;RP1=0, select bank0
  3088  0440  0188               	clrf	8	;volatile
  3089                           
  3090                           ;MAIN_CONTROL.c: 276:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3091  0441  3003               	movlw	3
  3092  0442  1283               	bcf	3,5	;RP0=0, select bank0
  3093  0443  1303               	bcf	3,6	;RP1=0, select bank0
  3094  0444  00A2               	movwf	??_cambiar_fila_izquierda+2
  3095  0445  308A               	movlw	138
  3096  0446  00A1               	movwf	??_cambiar_fila_izquierda+1
  3097  0447  3055               	movlw	85
  3098  0448  00A0               	movwf	??_cambiar_fila_izquierda
  3099  0449                     u1107:	
  3100  0449  0BA0               	decfsz	??_cambiar_fila_izquierda,f
  3101  044A  2C49               	goto	u1107
  3102  044B  0BA1               	decfsz	??_cambiar_fila_izquierda+1,f
  3103  044C  2C49               	goto	u1107
  3104  044D  0BA2               	decfsz	??_cambiar_fila_izquierda+2,f
  3105  044E  2C49               	goto	u1107
  3106                           
  3107                           ;MAIN_CONTROL.c: 277:     PORTD = 0b10101010;
  3108  044F  30AA               	movlw	170
  3109  0450  1283               	bcf	3,5	;RP0=0, select bank0
  3110  0451  1303               	bcf	3,6	;RP1=0, select bank0
  3111  0452  0088               	movwf	8	;volatile
  3112                           
  3113                           ;MAIN_CONTROL.c: 278:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3114  0453  3003               	movlw	3
  3115  0454  1283               	bcf	3,5	;RP0=0, select bank0
  3116  0455  1303               	bcf	3,6	;RP1=0, select bank0
  3117  0456  00A2               	movwf	??_cambiar_fila_izquierda+2
  3118  0457  308A               	movlw	138
  3119  0458  00A1               	movwf	??_cambiar_fila_izquierda+1
  3120  0459  3055               	movlw	85
  3121  045A  00A0               	movwf	??_cambiar_fila_izquierda
  3122  045B                     u1117:	
  3123  045B  0BA0               	decfsz	??_cambiar_fila_izquierda,f
  3124  045C  2C5B               	goto	u1117
  3125  045D  0BA1               	decfsz	??_cambiar_fila_izquierda+1,f
  3126  045E  2C5B               	goto	u1117
  3127  045F  0BA2               	decfsz	??_cambiar_fila_izquierda+2,f
  3128  0460  2C5B               	goto	u1117
  3129                           
  3130                           ;MAIN_CONTROL.c: 279:     PORTD = 0;
  3131  0461  1283               	bcf	3,5	;RP0=0, select bank0
  3132  0462  1303               	bcf	3,6	;RP1=0, select bank0
  3133  0463  0188               	clrf	8	;volatile
  3134                           
  3135                           ;MAIN_CONTROL.c: 280:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3136  0464  3003               	movlw	3
  3137  0465  1283               	bcf	3,5	;RP0=0, select bank0
  3138  0466  1303               	bcf	3,6	;RP1=0, select bank0
  3139  0467  00A2               	movwf	??_cambiar_fila_izquierda+2
  3140  0468  308A               	movlw	138
  3141  0469  00A1               	movwf	??_cambiar_fila_izquierda+1
  3142  046A  3055               	movlw	85
  3143  046B  00A0               	movwf	??_cambiar_fila_izquierda
  3144  046C                     u1127:	
  3145  046C  0BA0               	decfsz	??_cambiar_fila_izquierda,f
  3146  046D  2C6C               	goto	u1127
  3147  046E  0BA1               	decfsz	??_cambiar_fila_izquierda+1,f
  3148  046F  2C6C               	goto	u1127
  3149  0470  0BA2               	decfsz	??_cambiar_fila_izquierda+2,f
  3150  0471  2C6C               	goto	u1127
  3151                           
  3152                           ;MAIN_CONTROL.c: 281:     PORTD = 0b10011001;
  3153  0472  3099               	movlw	153
  3154  0473  1283               	bcf	3,5	;RP0=0, select bank0
  3155  0474  1303               	bcf	3,6	;RP1=0, select bank0
  3156  0475  0088               	movwf	8	;volatile
  3157                           
  3158                           ;MAIN_CONTROL.c: 282:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3159  0476  3003               	movlw	3
  3160  0477  1283               	bcf	3,5	;RP0=0, select bank0
  3161  0478  1303               	bcf	3,6	;RP1=0, select bank0
  3162  0479  00A2               	movwf	??_cambiar_fila_izquierda+2
  3163  047A  308A               	movlw	138
  3164  047B  00A1               	movwf	??_cambiar_fila_izquierda+1
  3165  047C  3055               	movlw	85
  3166  047D  00A0               	movwf	??_cambiar_fila_izquierda
  3167  047E                     u1137:	
  3168  047E  0BA0               	decfsz	??_cambiar_fila_izquierda,f
  3169  047F  2C7E               	goto	u1137
  3170  0480  0BA1               	decfsz	??_cambiar_fila_izquierda+1,f
  3171  0481  2C7E               	goto	u1137
  3172  0482  0BA2               	decfsz	??_cambiar_fila_izquierda+2,f
  3173  0483  2C7E               	goto	u1137
  3174                           
  3175                           ;MAIN_CONTROL.c: 283:     PORTD = 0;
  3176  0484  1283               	bcf	3,5	;RP0=0, select bank0
  3177  0485  1303               	bcf	3,6	;RP1=0, select bank0
  3178  0486  0188               	clrf	8	;volatile
  3179                           
  3180                           ;MAIN_CONTROL.c: 284:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3181  0487  3003               	movlw	3
  3182  0488  1283               	bcf	3,5	;RP0=0, select bank0
  3183  0489  1303               	bcf	3,6	;RP1=0, select bank0
  3184  048A  00A2               	movwf	??_cambiar_fila_izquierda+2
  3185  048B  308A               	movlw	138
  3186  048C  00A1               	movwf	??_cambiar_fila_izquierda+1
  3187  048D  3055               	movlw	85
  3188  048E  00A0               	movwf	??_cambiar_fila_izquierda
  3189  048F                     u1147:	
  3190  048F  0BA0               	decfsz	??_cambiar_fila_izquierda,f
  3191  0490  2C8F               	goto	u1147
  3192  0491  0BA1               	decfsz	??_cambiar_fila_izquierda+1,f
  3193  0492  2C8F               	goto	u1147
  3194  0493  0BA2               	decfsz	??_cambiar_fila_izquierda+2,f
  3195  0494  2C8F               	goto	u1147
  3196                           
  3197                           ;MAIN_CONTROL.c: 285:     indicador = 0;
  3198  0495  1283               	bcf	3,5	;RP0=0, select bank0
  3199  0496  1303               	bcf	3,6	;RP1=0, select bank0
  3200  0497  01B3               	clrf	_indicador
  3201  0498  0008               	return
  3202  0499                     __end_of_cambiar_fila_izquierda:	
  3203                           
  3204                           	psect	text13
  3205  039C                     __ptext13:	
  3206 ;; *************** function _cambiar_fila_derecha *****************
  3207 ;; Defined at:
  3208 ;;		line 252 in file "MAIN_CONTROL.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;		None
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;		None
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  1    wreg      void 
  3215 ;; Registers used:
  3216 ;;		wreg, status,2
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3222 ;;      Params:         0       0       0       0       0
  3223 ;;      Locals:         0       0       0       0       0
  3224 ;;      Temps:          0       3       0       0       0
  3225 ;;      Totals:         0       3       0       0       0
  3226 ;;Total ram usage:        3 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; Hardware stack levels required when called:    1
  3229 ;; This function calls:
  3230 ;;		Nothing
  3231 ;; This function is called by:
  3232 ;;		_main
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           
  3237                           ;psect for function _cambiar_fila_derecha
  3238  039C                     _cambiar_fila_derecha:	
  3239                           
  3240                           ;MAIN_CONTROL.c: 253:     PORTD = 0;
  3241                           
  3242                           ;incstack = 0
  3243                           ; Regs used in _cambiar_fila_derecha: [wreg+status,2]
  3244  039C  1283               	bcf	3,5	;RP0=0, select bank0
  3245  039D  1303               	bcf	3,6	;RP1=0, select bank0
  3246  039E  0188               	clrf	8	;volatile
  3247                           
  3248                           ;MAIN_CONTROL.c: 254:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3249  039F  3003               	movlw	3
  3250  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  3251  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  3252  03A2  00A2               	movwf	??_cambiar_fila_derecha+2
  3253  03A3  308A               	movlw	138
  3254  03A4  00A1               	movwf	??_cambiar_fila_derecha+1
  3255  03A5  3055               	movlw	85
  3256  03A6  00A0               	movwf	??_cambiar_fila_derecha
  3257  03A7                     u1157:	
  3258  03A7  0BA0               	decfsz	??_cambiar_fila_derecha,f
  3259  03A8  2BA7               	goto	u1157
  3260  03A9  0BA1               	decfsz	??_cambiar_fila_derecha+1,f
  3261  03AA  2BA7               	goto	u1157
  3262  03AB  0BA2               	decfsz	??_cambiar_fila_derecha+2,f
  3263  03AC  2BA7               	goto	u1157
  3264                           
  3265                           ;MAIN_CONTROL.c: 255:     PORTD = 0b01100110;
  3266  03AD  3066               	movlw	102
  3267  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  3268  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  3269  03B0  0088               	movwf	8	;volatile
  3270                           
  3271                           ;MAIN_CONTROL.c: 256:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3272  03B1  3003               	movlw	3
  3273  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  3274  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  3275  03B4  00A2               	movwf	??_cambiar_fila_derecha+2
  3276  03B5  308A               	movlw	138
  3277  03B6  00A1               	movwf	??_cambiar_fila_derecha+1
  3278  03B7  3055               	movlw	85
  3279  03B8  00A0               	movwf	??_cambiar_fila_derecha
  3280  03B9                     u1167:	
  3281  03B9  0BA0               	decfsz	??_cambiar_fila_derecha,f
  3282  03BA  2BB9               	goto	u1167
  3283  03BB  0BA1               	decfsz	??_cambiar_fila_derecha+1,f
  3284  03BC  2BB9               	goto	u1167
  3285  03BD  0BA2               	decfsz	??_cambiar_fila_derecha+2,f
  3286  03BE  2BB9               	goto	u1167
  3287                           
  3288                           ;MAIN_CONTROL.c: 257:     PORTD = 0;
  3289  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  3290  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  3291  03C1  0188               	clrf	8	;volatile
  3292                           
  3293                           ;MAIN_CONTROL.c: 258:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3294  03C2  3003               	movlw	3
  3295  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  3296  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  3297  03C5  00A2               	movwf	??_cambiar_fila_derecha+2
  3298  03C6  308A               	movlw	138
  3299  03C7  00A1               	movwf	??_cambiar_fila_derecha+1
  3300  03C8  3055               	movlw	85
  3301  03C9  00A0               	movwf	??_cambiar_fila_derecha
  3302  03CA                     u1177:	
  3303  03CA  0BA0               	decfsz	??_cambiar_fila_derecha,f
  3304  03CB  2BCA               	goto	u1177
  3305  03CC  0BA1               	decfsz	??_cambiar_fila_derecha+1,f
  3306  03CD  2BCA               	goto	u1177
  3307  03CE  0BA2               	decfsz	??_cambiar_fila_derecha+2,f
  3308  03CF  2BCA               	goto	u1177
  3309                           
  3310                           ;MAIN_CONTROL.c: 259:     PORTD = 0b10101010;
  3311  03D0  30AA               	movlw	170
  3312  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  3313  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  3314  03D3  0088               	movwf	8	;volatile
  3315                           
  3316                           ;MAIN_CONTROL.c: 260:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3317  03D4  3003               	movlw	3
  3318  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  3319  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  3320  03D7  00A2               	movwf	??_cambiar_fila_derecha+2
  3321  03D8  308A               	movlw	138
  3322  03D9  00A1               	movwf	??_cambiar_fila_derecha+1
  3323  03DA  3055               	movlw	85
  3324  03DB  00A0               	movwf	??_cambiar_fila_derecha
  3325  03DC                     u1187:	
  3326  03DC  0BA0               	decfsz	??_cambiar_fila_derecha,f
  3327  03DD  2BDC               	goto	u1187
  3328  03DE  0BA1               	decfsz	??_cambiar_fila_derecha+1,f
  3329  03DF  2BDC               	goto	u1187
  3330  03E0  0BA2               	decfsz	??_cambiar_fila_derecha+2,f
  3331  03E1  2BDC               	goto	u1187
  3332                           
  3333                           ;MAIN_CONTROL.c: 261:     PORTD = 0;
  3334  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  3335  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  3336  03E4  0188               	clrf	8	;volatile
  3337                           
  3338                           ;MAIN_CONTROL.c: 262:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3339  03E5  3003               	movlw	3
  3340  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  3341  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  3342  03E8  00A2               	movwf	??_cambiar_fila_derecha+2
  3343  03E9  308A               	movlw	138
  3344  03EA  00A1               	movwf	??_cambiar_fila_derecha+1
  3345  03EB  3055               	movlw	85
  3346  03EC  00A0               	movwf	??_cambiar_fila_derecha
  3347  03ED                     u1197:	
  3348  03ED  0BA0               	decfsz	??_cambiar_fila_derecha,f
  3349  03EE  2BED               	goto	u1197
  3350  03EF  0BA1               	decfsz	??_cambiar_fila_derecha+1,f
  3351  03F0  2BED               	goto	u1197
  3352  03F1  0BA2               	decfsz	??_cambiar_fila_derecha+2,f
  3353  03F2  2BED               	goto	u1197
  3354                           
  3355                           ;MAIN_CONTROL.c: 263:     PORTD = 0b01100110;
  3356  03F3  3066               	movlw	102
  3357  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  3358  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  3359  03F6  0088               	movwf	8	;volatile
  3360                           
  3361                           ;MAIN_CONTROL.c: 264:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3362  03F7  3003               	movlw	3
  3363  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  3364  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  3365  03FA  00A2               	movwf	??_cambiar_fila_derecha+2
  3366  03FB  308A               	movlw	138
  3367  03FC  00A1               	movwf	??_cambiar_fila_derecha+1
  3368  03FD  3055               	movlw	85
  3369  03FE  00A0               	movwf	??_cambiar_fila_derecha
  3370  03FF                     u1207:	
  3371  03FF  0BA0               	decfsz	??_cambiar_fila_derecha,f
  3372  0400  2BFF               	goto	u1207
  3373  0401  0BA1               	decfsz	??_cambiar_fila_derecha+1,f
  3374  0402  2BFF               	goto	u1207
  3375  0403  0BA2               	decfsz	??_cambiar_fila_derecha+2,f
  3376  0404  2BFF               	goto	u1207
  3377                           
  3378                           ;MAIN_CONTROL.c: 265:     PORTD = 0;
  3379  0405  1283               	bcf	3,5	;RP0=0, select bank0
  3380  0406  1303               	bcf	3,6	;RP1=0, select bank0
  3381  0407  0188               	clrf	8	;volatile
  3382                           
  3383                           ;MAIN_CONTROL.c: 266:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  3384  0408  3003               	movlw	3
  3385  0409  1283               	bcf	3,5	;RP0=0, select bank0
  3386  040A  1303               	bcf	3,6	;RP1=0, select bank0
  3387  040B  00A2               	movwf	??_cambiar_fila_derecha+2
  3388  040C  308A               	movlw	138
  3389  040D  00A1               	movwf	??_cambiar_fila_derecha+1
  3390  040E  3055               	movlw	85
  3391  040F  00A0               	movwf	??_cambiar_fila_derecha
  3392  0410                     u1217:	
  3393  0410  0BA0               	decfsz	??_cambiar_fila_derecha,f
  3394  0411  2C10               	goto	u1217
  3395  0412  0BA1               	decfsz	??_cambiar_fila_derecha+1,f
  3396  0413  2C10               	goto	u1217
  3397  0414  0BA2               	decfsz	??_cambiar_fila_derecha+2,f
  3398  0415  2C10               	goto	u1217
  3399                           
  3400                           ;MAIN_CONTROL.c: 267:     indicador = 1;
  3401  0416  1283               	bcf	3,5	;RP0=0, select bank0
  3402  0417  1303               	bcf	3,6	;RP1=0, select bank0
  3403  0418  01B3               	clrf	_indicador
  3404  0419  0AB3               	incf	_indicador,f
  3405  041A  0008               	return
  3406  041B                     __end_of_cambiar_fila_derecha:	
  3407                           
  3408                           	psect	text14
  3409  0660                     __ptext14:	
  3410 ;; *************** function ___bmul *****************
  3411 ;; Defined at:
  3412 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;  multiplier      1    wreg     unsigned char 
  3415 ;;  multiplicand    1    4[COMMON] unsigned char 
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;  multiplier      1    1[BANK0 ] unsigned char 
  3418 ;;  product         1    0[BANK0 ] unsigned char 
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      unsigned char 
  3421 ;; Registers used:
  3422 ;;		wreg, status,2, status,0
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3428 ;;      Params:         1       0       0       0       0
  3429 ;;      Locals:         0       2       0       0       0
  3430 ;;      Temps:          1       0       0       0       0
  3431 ;;      Totals:         2       2       0       0       0
  3432 ;;Total ram usage:        4 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:    1
  3435 ;; This function calls:
  3436 ;;		Nothing
  3437 ;; This function is called by:
  3438 ;;		_main
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           
  3443                           ;psect for function ___bmul
  3444  0660                     ___bmul:	
  3445                           
  3446                           ;incstack = 0
  3447                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3448                           ;___bmul@multiplier stored from wreg
  3449  0660  1283               	bcf	3,5	;RP0=0, select bank0
  3450  0661  1303               	bcf	3,6	;RP1=0, select bank0
  3451  0662  00A1               	movwf	___bmul@multiplier
  3452  0663  01A0               	clrf	___bmul@product
  3453  0664                     l3117:	
  3454  0664  1C21               	btfss	___bmul@multiplier,0
  3455  0665  2E6A               	goto	l3121
  3456  0666  0874               	movf	___bmul@multiplicand,w
  3457  0667  00F5               	movwf	??___bmul
  3458  0668  0875               	movf	??___bmul,w
  3459  0669  07A0               	addwf	___bmul@product,f
  3460  066A                     l3121:	
  3461  066A  1003               	clrc
  3462  066B  0DF4               	rlf	___bmul@multiplicand,f
  3463  066C  1003               	clrc
  3464  066D  0CA1               	rrf	___bmul@multiplier,f
  3465  066E  0821               	movf	___bmul@multiplier,w
  3466  066F  1D03               	btfss	3,2
  3467  0670  2E64               	goto	l3117
  3468  0671  0820               	movf	___bmul@product,w
  3469  0672  0008               	return
  3470  0673                     __end_of___bmul:	
  3471                           
  3472                           	psect	text15
  3473  0617                     __ptext15:	
  3474 ;; *************** function _I2C_Slave_Init *****************
  3475 ;; Defined at:
  3476 ;;		line 584 in file "MAIN_CONTROL.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;  address         2    4[COMMON] short 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;		None
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      void 
  3483 ;; Registers used:
  3484 ;;		wreg
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3490 ;;      Params:         2       0       0       0       0
  3491 ;;      Locals:         0       0       0       0       0
  3492 ;;      Temps:          0       0       0       0       0
  3493 ;;      Totals:         2       0       0       0       0
  3494 ;;Total ram usage:        2 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:    1
  3497 ;; This function calls:
  3498 ;;		Nothing
  3499 ;; This function is called by:
  3500 ;;		_main
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           
  3505                           ;psect for function _I2C_Slave_Init
  3506  0617                     _I2C_Slave_Init:	
  3507                           
  3508                           ;MAIN_CONTROL.c: 584: void I2C_Slave_Init(short address);MAIN_CONTROL.c: 585: {;MAIN_CON
      +                          TROL.c: 586:   SSPSTAT = 0x80;
  3509                           
  3510                           ;incstack = 0
  3511                           ; Regs used in _I2C_Slave_Init: [wreg]
  3512  0617  3080               	movlw	128
  3513  0618  1683               	bsf	3,5	;RP0=1, select bank1
  3514  0619  1303               	bcf	3,6	;RP1=0, select bank1
  3515  061A  0094               	movwf	20	;volatile
  3516                           
  3517                           ;MAIN_CONTROL.c: 587:   SSPADD = address;
  3518  061B  0874               	movf	I2C_Slave_Init@address,w
  3519  061C  0093               	movwf	19	;volatile
  3520                           
  3521                           ;MAIN_CONTROL.c: 588:   SSPCON = 0x36;
  3522  061D  3036               	movlw	54
  3523  061E  1283               	bcf	3,5	;RP0=0, select bank0
  3524  061F  1303               	bcf	3,6	;RP1=0, select bank0
  3525  0620  0094               	movwf	20	;volatile
  3526                           
  3527                           ;MAIN_CONTROL.c: 589:   SSPCON2 = 0x01;
  3528  0621  3001               	movlw	1
  3529  0622  1683               	bsf	3,5	;RP0=1, select bank1
  3530  0623  1303               	bcf	3,6	;RP1=0, select bank1
  3531  0624  0091               	movwf	17	;volatile
  3532                           
  3533                           ;MAIN_CONTROL.c: 590:   TRISC3 = 1;
  3534  0625  1587               	bsf	7,3	;volatile
  3535                           
  3536                           ;MAIN_CONTROL.c: 591:   TRISC4 = 1;
  3537  0626  1607               	bsf	7,4	;volatile
  3538                           
  3539                           ;MAIN_CONTROL.c: 592:   GIE = 1;
  3540  0627  178B               	bsf	11,7	;volatile
  3541                           
  3542                           ;MAIN_CONTROL.c: 593:   PEIE = 1;
  3543  0628  170B               	bsf	11,6	;volatile
  3544                           
  3545                           ;MAIN_CONTROL.c: 594:   SSPIF = 0;
  3546  0629  1283               	bcf	3,5	;RP0=0, select bank0
  3547  062A  1303               	bcf	3,6	;RP1=0, select bank0
  3548  062B  118C               	bcf	12,3	;volatile
  3549                           
  3550                           ;MAIN_CONTROL.c: 595:   SSPIE = 1;
  3551  062C  1683               	bsf	3,5	;RP0=1, select bank1
  3552  062D  1303               	bcf	3,6	;RP1=0, select bank1
  3553  062E  158C               	bsf	12,3	;volatile
  3554  062F  0008               	return
  3555  0630                     __end_of_I2C_Slave_Init:	
  3556                           
  3557                           	psect	text16
  3558  0279                     __ptext16:	
  3559 ;; *************** function _ISR *****************
  3560 ;; Defined at:
  3561 ;;		line 71 in file "MAIN_CONTROL.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;		None
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;		None
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      void 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3575 ;;      Params:         0       0       0       0       0
  3576 ;;      Locals:         0       0       0       0       0
  3577 ;;      Temps:          4       0       0       0       0
  3578 ;;      Totals:         4       0       0       0       0
  3579 ;;Total ram usage:        4 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; This function calls:
  3582 ;;		Nothing
  3583 ;; This function is called by:
  3584 ;;		Interrupt level 1
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           
  3589                           ;psect for function _ISR
  3590  0279                     _ISR:	
  3591                           
  3592                           ;MAIN_CONTROL.c: 72:    if(PIR1bits.SSPIF == 1){
  3593  0279  1283               	bcf	3,5	;RP0=0, select bank0
  3594  027A  1303               	bcf	3,6	;RP1=0, select bank0
  3595  027B  1D8C               	btfss	12,3	;volatile
  3596  027C  2B10               	goto	i1l161
  3597                           
  3598                           ;MAIN_CONTROL.c: 74:         SSPCONbits.CKP = 0;
  3599  027D  1214               	bcf	20,4	;volatile
  3600                           
  3601                           ;MAIN_CONTROL.c: 76:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  3602  027E  1B14               	btfsc	20,6	;volatile
  3603  027F  2A82               	goto	i1l2217
  3604  0280  1F94               	btfss	20,7	;volatile
  3605  0281  2A8C               	goto	i1l2225
  3606  0282                     i1l2217:	
  3607                           
  3608                           ;MAIN_CONTROL.c: 77:             z = SSPBUF;
  3609  0282  0813               	movf	19,w	;volatile
  3610  0283  00F0               	movwf	??_ISR
  3611  0284  01F1               	clrf	??_ISR+1
  3612  0285  0870               	movf	??_ISR,w
  3613  0286  00AD               	movwf	_z
  3614  0287  0871               	movf	??_ISR+1,w
  3615  0288  00AE               	movwf	_z+1
  3616                           
  3617                           ;MAIN_CONTROL.c: 78:             SSPCONbits.SSPOV = 0;
  3618  0289  1314               	bcf	20,6	;volatile
  3619                           
  3620                           ;MAIN_CONTROL.c: 79:             SSPCONbits.WCOL = 0;
  3621  028A  1394               	bcf	20,7	;volatile
  3622                           
  3623                           ;MAIN_CONTROL.c: 80:             SSPCONbits.CKP = 1;
  3624  028B  1614               	bsf	20,4	;volatile
  3625  028C                     i1l2225:	
  3626                           
  3627                           ;MAIN_CONTROL.c: 83:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  3628  028C  1683               	bsf	3,5	;RP0=1, select bank1
  3629  028D  1303               	bcf	3,6	;RP1=0, select bank1
  3630  028E  1E94               	btfss	20,5	;volatile
  3631  028F  1914               	btfsc	20,2	;volatile
  3632  0290  2AD5               	goto	i1l139
  3633                           
  3634                           ;MAIN_CONTROL.c: 85:             z = SSPBUF;
  3635  0291  1283               	bcf	3,5	;RP0=0, select bank0
  3636  0292  1303               	bcf	3,6	;RP1=0, select bank0
  3637  0293  0813               	movf	19,w	;volatile
  3638  0294  00F0               	movwf	??_ISR
  3639  0295  01F1               	clrf	??_ISR+1
  3640  0296  0870               	movf	??_ISR,w
  3641  0297  00AD               	movwf	_z
  3642  0298  0871               	movf	??_ISR+1,w
  3643  0299  00AE               	movwf	_z+1
  3644                           
  3645                           ;MAIN_CONTROL.c: 87:             PIR1bits.SSPIF = 0;
  3646  029A  118C               	bcf	12,3	;volatile
  3647                           
  3648                           ;MAIN_CONTROL.c: 88:             SSPCONbits.CKP = 1;
  3649  029B  1614               	bsf	20,4	;volatile
  3650  029C                     i1l140:	
  3651                           ;MAIN_CONTROL.c: 89:             while(!SSPSTATbits.BF);
  3652                           
  3653  029C  1683               	bsf	3,5	;RP0=1, select bank1
  3654  029D  1303               	bcf	3,6	;RP1=0, select bank1
  3655  029E  1C14               	btfss	20,0	;volatile
  3656  029F  2A9C               	goto	i1l140
  3657                           
  3658                           ;MAIN_CONTROL.c: 90:             recibir = SSPBUF;
  3659  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  3660  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  3661  02A2  0813               	movf	19,w	;volatile
  3662  02A3  00F0               	movwf	??_ISR
  3663  02A4  0870               	movf	??_ISR,w
  3664  02A5  00F9               	movwf	_recibir
  3665                           
  3666                           ;MAIN_CONTROL.c: 91:             if (recibir_ind == 0){
  3667  02A6  0878               	movf	_recibir_ind,w
  3668  02A7  1D03               	btfss	3,2
  3669  02A8  2AAE               	goto	i1l2241
  3670                           
  3671                           ;MAIN_CONTROL.c: 92:                 velocidad = recibir;
  3672  02A9  0879               	movf	_recibir,w
  3673  02AA  00F0               	movwf	??_ISR
  3674  02AB  0870               	movf	??_ISR,w
  3675  02AC  00B6               	movwf	_velocidad
  3676                           
  3677                           ;MAIN_CONTROL.c: 93:             }
  3678  02AD  2AC7               	goto	i1l2255
  3679  02AE                     i1l2241:	
  3680  02AE  0378               	decf	_recibir_ind,w
  3681  02AF  1D03               	btfss	3,2
  3682  02B0  2AB6               	goto	i1l2245
  3683                           
  3684                           ;MAIN_CONTROL.c: 95:                 largo = recibir;
  3685  02B1  0879               	movf	_recibir,w
  3686  02B2  00F0               	movwf	??_ISR
  3687  02B3  0870               	movf	??_ISR,w
  3688  02B4  00B5               	movwf	_largo
  3689                           
  3690                           ;MAIN_CONTROL.c: 96:             }
  3691  02B5  2AC7               	goto	i1l2255
  3692  02B6                     i1l2245:	
  3693  02B6  3002               	movlw	2
  3694  02B7  0678               	xorwf	_recibir_ind,w
  3695  02B8  1D03               	btfss	3,2
  3696  02B9  2AC7               	goto	i1l2255
  3697                           
  3698                           ;MAIN_CONTROL.c: 98:                 ancho = recibir;
  3699  02BA  0879               	movf	_recibir,w
  3700  02BB  00F0               	movwf	??_ISR
  3701  02BC  0870               	movf	??_ISR,w
  3702  02BD  00B4               	movwf	_ancho
  3703                           
  3704                           ;MAIN_CONTROL.c: 99:                 if(velocidad>0 && velocidad <5){
  3705  02BE  0836               	movf	_velocidad,w
  3706  02BF  1903               	btfsc	3,2
  3707  02C0  2AC7               	goto	i1l2255
  3708  02C1  3005               	movlw	5
  3709  02C2  0236               	subwf	_velocidad,w
  3710  02C3  1803               	skipnc
  3711  02C4  2AC7               	goto	i1l2255
  3712                           
  3713                           ;MAIN_CONTROL.c: 100:                     indicador_mov = 1;
  3714  02C5  01B8               	clrf	_indicador_mov
  3715  02C6  0AB8               	incf	_indicador_mov,f
  3716  02C7                     i1l2255:	
  3717                           
  3718                           ;MAIN_CONTROL.c: 104:             recibir_ind++;
  3719  02C7  3001               	movlw	1
  3720  02C8  00F0               	movwf	??_ISR
  3721  02C9  0870               	movf	??_ISR,w
  3722  02CA  07F8               	addwf	_recibir_ind,f
  3723                           
  3724                           ;MAIN_CONTROL.c: 105:             if (recibir_ind == 3){
  3725  02CB  3003               	movlw	3
  3726  02CC  0678               	xorwf	_recibir_ind,w
  3727  02CD  1903               	btfsc	3,2
  3728                           
  3729                           ;MAIN_CONTROL.c: 106:                 recibir_ind = 0;
  3730  02CE  01F8               	clrf	_recibir_ind
  3731                           
  3732                           ;MAIN_CONTROL.c: 108:             _delay((unsigned long)((250)*(1000000/4000000.0)));
  3733  02CF  3014               	movlw	20
  3734  02D0  00F0               	movwf	??_ISR
  3735  02D1                     u122_27:	
  3736  02D1  0BF0               	decfsz	??_ISR,f
  3737  02D2  2AD1               	goto	u122_27
  3738  02D3  0000               	nop
  3739                           
  3740                           ;MAIN_CONTROL.c: 110:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  3741  02D4  2B0D               	goto	i1l150
  3742  02D5                     i1l139:	
  3743  02D5  1E94               	btfss	20,5	;volatile
  3744  02D6  1D14               	btfss	20,2	;volatile
  3745  02D7  2B0D               	goto	i1l150
  3746                           
  3747                           ;MAIN_CONTROL.c: 111:             z = SSPBUF;
  3748  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  3749  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  3750  02DA  0813               	movf	19,w	;volatile
  3751  02DB  00F0               	movwf	??_ISR
  3752  02DC  01F1               	clrf	??_ISR+1
  3753  02DD  0870               	movf	??_ISR,w
  3754  02DE  00AD               	movwf	_z
  3755  02DF  0871               	movf	??_ISR+1,w
  3756  02E0  00AE               	movwf	_z+1
  3757                           
  3758                           ;MAIN_CONTROL.c: 112:             BF = 0;
  3759  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  3760  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  3761  02E3  1014               	bcf	20,0	;volatile
  3762                           
  3763                           ;MAIN_CONTROL.c: 113:             if (contador == 0){
  3764  02E4  0877               	movf	_contador,w
  3765  02E5  1D03               	btfss	3,2
  3766  02E6  2AEB               	goto	i1l2271
  3767                           
  3768                           ;MAIN_CONTROL.c: 114:                 SSPBUF = adelante;
  3769  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  3770  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  3771  02E9  0830               	movf	_adelante,w
  3772  02EA  2AF9               	goto	L32
  3773  02EB                     i1l2271:	
  3774                           ;MAIN_CONTROL.c: 115:             }
  3775                           
  3776  02EB  0377               	decf	_contador,w
  3777  02EC  1D03               	btfss	3,2
  3778  02ED  2AF2               	goto	i1l2275
  3779                           
  3780                           ;MAIN_CONTROL.c: 117:                 SSPBUF = atras;
  3781  02EE  0876               	movf	_atras,w
  3782  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  3783  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  3784  02F1  2AF9               	goto	L32
  3785  02F2                     i1l2275:	
  3786                           ;MAIN_CONTROL.c: 118:             }
  3787                           
  3788  02F2  3002               	movlw	2
  3789  02F3  0677               	xorwf	_contador,w
  3790  02F4  1D03               	btfss	3,2
  3791  02F5  2AFA               	goto	i1l2279
  3792                           
  3793                           ;MAIN_CONTROL.c: 120:                 SSPBUF = motor;
  3794  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  3795  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  3796  02F8  082F               	movf	_motor,w
  3797  02F9                     L32:	
  3798  02F9  0093               	movwf	19	;volatile
  3799  02FA                     i1l2279:	
  3800                           
  3801                           ;MAIN_CONTROL.c: 122:             contador++;
  3802  02FA  3001               	movlw	1
  3803  02FB  00F0               	movwf	??_ISR
  3804  02FC  0870               	movf	??_ISR,w
  3805  02FD  07F7               	addwf	_contador,f
  3806                           
  3807                           ;MAIN_CONTROL.c: 123:             if (contador == 3){
  3808  02FE  3003               	movlw	3
  3809  02FF  0677               	xorwf	_contador,w
  3810  0300  1903               	btfsc	3,2
  3811                           
  3812                           ;MAIN_CONTROL.c: 124:                 contador = 0;
  3813  0301  01F7               	clrf	_contador
  3814                           
  3815                           ;MAIN_CONTROL.c: 126:             SSPCONbits.CKP = 1;
  3816  0302  1283               	bcf	3,5	;RP0=0, select bank0
  3817  0303  1614               	bsf	20,4	;volatile
  3818                           
  3819                           ;MAIN_CONTROL.c: 127:             _delay((unsigned long)((250)*(1000000/4000000.0)));
  3820  0304  3014               	movlw	20
  3821  0305  00F0               	movwf	??_ISR
  3822  0306                     u123_27:	
  3823  0306  0BF0               	decfsz	??_ISR,f
  3824  0307  2B06               	goto	u123_27
  3825  0308  0000               	nop
  3826  0309                     i1l158:	
  3827                           ;MAIN_CONTROL.c: 128:             while(SSPSTATbits.BF);
  3828                           
  3829  0309  1683               	bsf	3,5	;RP0=1, select bank1
  3830  030A  1303               	bcf	3,6	;RP1=0, select bank1
  3831  030B  1814               	btfsc	20,0	;volatile
  3832  030C  2B09               	goto	i1l158
  3833  030D                     i1l150:	
  3834                           
  3835                           ;MAIN_CONTROL.c: 131:         PIR1bits.SSPIF = 0;
  3836  030D  1283               	bcf	3,5	;RP0=0, select bank0
  3837  030E  1303               	bcf	3,6	;RP1=0, select bank0
  3838  030F  118C               	bcf	12,3	;volatile
  3839  0310                     i1l161:	
  3840  0310  0873               	movf	??_ISR+3,w
  3841  0311  008A               	movwf	10
  3842  0312  0E72               	swapf	(??_ISR+2)^(0+4294967168),w
  3843  0313  0083               	movwf	3
  3844  0314  0EFE               	swapf	126,f
  3845  0315  0E7E               	swapf	126,w
  3846  0316  0009               	retfie
  3847  0317                     __end_of_ISR:	
  3848  007E                     btemp	set	126	;btemp
  3849  007E                     wtemp0	set	126
  3850                           
  3851                           	psect	intentry
  3852  0004                     __pintentry:	
  3853                           ;incstack = 0
  3854                           ; Regs used in _ISR: [wreg+status,2+status,0]
  3855                           
  3856  0004                     interrupt_function:	
  3857  007E                     saved_w	set	btemp
  3858  0004  00FE               	movwf	btemp
  3859  0005  0E03               	swapf	3,w
  3860  0006  00F2               	movwf	??_ISR+2
  3861  0007  080A               	movf	10,w
  3862  0008  00F3               	movwf	??_ISR+3
  3863  0009  120A  118A  2A79   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     13      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Slave_Init
    _main->___bmul
    _select_velocidad->_Servo2_grados
    _dis_atr->_init_ADC
    _dis_ade->_init_ADC
    _config->_init_ADC

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_regresar
    _select_velocidad->_Servo2_grados
    _regresar->_dis_ade
    _regresar->_dis_atr
    _regresar->_esperar
    _dis_atr->_init_ADC
    _dis_ade->_init_ADC
    _config->_OSC_config

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     860
                                              8 BANK0      5     5      0
                     _I2C_Slave_Init
                             ___bmul
               _cambiar_fila_derecha
             _cambiar_fila_izquierda
                             _config
                            _dis_ade
                            _dis_atr
                            _esperar
                          _obstaculo
                           _regresar
                   _select_velocidad
 ---------------------------------------------------------------------------------
 (1) _select_velocidad                                     3     3      0      62
                                              1 BANK0      3     3      0
                      _Servo2_grados
 ---------------------------------------------------------------------------------
 (2) _Servo2_grados                                        3     3      0      31
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _regresar                                             5     5      0     161
                                              3 BANK0      5     5      0
                            _dis_ade
                            _dis_atr
                            _esperar
 ---------------------------------------------------------------------------------
 (2) _esperar                                              4     4      0      31
                                              4 COMMON     1     1      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _dis_atr                                              2     2      0      31
                                              1 BANK0      2     2      0
                           _init_ADC
 ---------------------------------------------------------------------------------
 (2) _dis_ade                                              2     2      0      31
                                              1 BANK0      2     2      0
                           _init_ADC
 ---------------------------------------------------------------------------------
 (1) _obstaculo                                            3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0     152
                         _OSC_config
                           _init_ADC
                         _init_PWM_2
 ---------------------------------------------------------------------------------
 (2) _init_PWM_2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _init_ADC                                             3     3      0      31
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSC_config                                           4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _cambiar_fila_izquierda                               3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _cambiar_fila_derecha                                 3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     226
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init
   ___bmul
   _cambiar_fila_derecha
   _cambiar_fila_izquierda
   _config
     _OSC_config
     _init_ADC
     _init_PWM_2
   _dis_ade
     _init_ADC
   _dis_atr
     _init_ADC
   _esperar
   _obstaculo
   _regresar
     _dis_ade
       _init_ADC
     _dis_atr
       _init_ADC
     _esperar
   _select_velocidad
     _Servo2_grados

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      D      19       5       31.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      23      12        0.0%
ABS                  0      0      23       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun May 03 23:44:57 2020

                              _z 002D                   ___bmul@product 0020          ?_cambiar_fila_izquierda 0070  
                    __CFG_CP$OFF 0000                      _SSPSTATbits 0094                               _BF 04A0  
                            l220 04A4                              l221 04A6                              l230 04BC  
                            l222 04A8                              l231 04C0                              l223 04AA  
                            l232 04C4                              l224 04AC                              l216 049F  
                            l233 04C9                              l225 04AE                              l217 0508  
                            l234 0512                              l226 04B0                              l218 04A0  
                            l227 04B3                              l219 04A2                              l228 04B6  
                            l229 04B9                              l253 0598                              l245 05F9  
                            l183 011E                              l256 060F                              l258 0613  
                            _GIE 005F                              _PR2 0092                     __CFG_CPD$OFF 0000  
                            _ISR 0279                              u725 0202                              u825 00EA  
                            u907 020F                              u917 0221                              u927 0230  
                            u937 0244                              u947 025A                              u867 004E  
                            u957 026C                              u877 0060                              u967 0564  
                            u887 0091                              u977 0571                              u897 00FD  
                            u987 057D                              u997 0643                     __CFG_LVP$OFF 0000  
                           ?_ISR 0070                             l3101 0251                             l3121 066A  
                           l3211 0080                             l3117 0664                             l3205 0114  
                           l3135 003F                             l3209 011B                             l3171 00AF  
                           l3077 01D7                             l3173 00B4                             l3191 00ED  
                           l3185 00BF                             l3099 0239                             l3179 00BD  
                           l2823 055C                             l2831 0583                             l3199 0106  
                           l2841 0129                             l2825 056B                             l2851 014C  
                           l2843 0130                             l2827 0577                             l2931 051C  
                           l2853 0153                             l2845 0137                             l3661 04D6  
                           l2941 052B                             l2933 051F                             l3671 018E  
                           l3663 0166                             l2855 0158                             l2847 013E  
                           l2839 0124                             l2943 052E                             l2935 0522  
                           l3655 05EE                             l3673 0198                             l3665 0170  
                           l3681 016B                             l2849 0145                             l2857 015F  
                           l3657 053C                             l2945 0531                             l2937 0525  
                           l2929 0519                             l3675 01A2                             l3691 019D  
                           l3667 017A                             l3683 0175                             l3659 058D  
                           l2939 0528                             l3677 01AC                             l3693 01A7  
                           l3669 0184                             l3685 017F                             l2949 0534  
                           l3695 01B1                             l3687 0189                             l3679 01B6  
                           l2799 04CE                             l3689 0193                             l2985 05D7  
                           l2993 05E6                             l2987 05DC                             l2989 05E1  
                           u1007 065B                             u1017 0322                             u1107 0449  
                           u1027 0334                             u1117 045B                             u1037 0345  
                           u1207 03FF                             u1127 046C                             u1047 0357  
                           u1217 0410                             u1137 047E                             u1057 0368  
                           u1147 048F                             u1067 037A                             u1157 03A7  
                           u1077 038B                             u1167 03B9                             u1087 0426  
                           u1177 03CA                             u1097 0438                             u1187 03DC  
                           u1197 03ED                             _PEIE 005E                     __CFG_WRT$OFF 0000  
                           _main 002B                             btemp 007E                             start 000C  
                  __CFG_IESO$OFF 0000                ___bmul@multiplier 0021   __end_of_cambiar_fila_izquierda 0499  
                          ??_ISR 0070                            ?_main 0070                    __CFG_WDTE$OFF 0000  
                          _ANSEL 0188                            i1l140 029C                            i1l150 030D  
                          i1l161 0310                            i1l139 02D5                            i1l158 0309  
               _select_velocidad 05D3                            _PORTA 0005                            _PORTB 0006  
                          _PORTD 0008                            _PORTE 0009                            _TRISA 0085  
                          _TRISB 0086                            _TRISD 0088                            _SSPIE 0463  
                          _TRISE 0089                            _SSPIF 0063                  __end_of_dis_ade 0660  
                 __CFG_FCMEN$OFF 0000                  __end_of_dis_atr 0648                            _ancho 0034  
                          _atras 0076                            _largo 0035                  __end_of_esperar 0599  
                          _motor 002F                            main@i 002B                   __CFG_BOREN$OFF 0000  
                    ?_OSC_config 0020                            pclath 000A                            status 0003  
                          wtemp0 007E                    _indicador_mov 0038                   __CFG_MCLRE$OFF 0000  
                __initialization 000F                     __end_of_main 0123            __end_of_Servo2_grados 055A  
                         ??_main 0028                           _ADRESH 001E                           _CCPR1L 0015  
                         _CCPR2L 001B                           _ANSELH 0189                           i1l2241 02AE  
                         i1l2225 028C                           i1l2217 0282                           i1l2245 02B6  
                         i1l2271 02EB                           i1l2255 02C7                           i1l2275 02F2  
                         i1l2279 02FA                           u122_27 02D1                           u123_27 0306  
                         _SSPADD 0093                           _TRISC3 043B                           _TRISC4 043C  
                         _SSPBUF 0013                           _SSPCON 0014                   __CFG_PWRTE$OFF 0000  
                         ___bmul 0660                 __end_of_init_ADC 0515                           _config 0599  
            __size_of_OSC_config 00AE                        ??_dis_ade 0021                        ??_dis_atr 0021  
               __end_of_regresar 0279                        ??_esperar 0020                           saved_w 007E  
   __end_of_cambiar_fila_derecha 041B          __end_of__initialization 0027              ___bmul@multiplicand 0074  
                init_ADC@channel 0020                   __pcstackCOMMON 0070                     __pidataBANK0 0673  
        __size_of_I2C_Slave_Init 0019            I2C_Slave_Init@address 0074                       __pbssBANK0 002D  
       __end_of_select_velocidad 05FA                       __pmaintext 002B               __size_of_obstaculo 0085  
                        ?___bmul 0074                       __pintentry 0004                          ?_config 0070  
           OSC_config@frecuencia 0020                          _SSPCON2 0091                          _SSPSTAT 0094  
                     _contador_m 0037                     ??_OSC_config 0074                        ?_init_ADC 0070  
                      ?_regresar 0070                       _init_PWM_2 05FA                  __size_of___bmul 0013  
                __size_of_config 003A                          _dis_ade 0648                          __ptext1 05D3  
                        __ptext2 0515                          __ptext3 01D1                          __ptext4 055A  
                        __ptext5 0630                          __ptext6 0648                          _dis_atr 0630  
                        __ptext7 0317                          __ptext8 0599                          __ptext9 05FA  
           _cambiar_fila_derecha 039C               __end_of_OSC_config 01D1                     __size_of_ISR 009E  
                      _T2CONbits 0012                          _esperar 055A                          _recibir 0079  
              __end_of_obstaculo 039C             end_of_initialization 0027                       ??_init_ADC 0074  
                     ??_regresar 0023                   _I2C_Slave_Init 0617            ?_cambiar_fila_derecha 0070  
                      _TRISCbits 0087                      _CCP1CONbits 0017         ??_cambiar_fila_izquierda 0020  
         __size_of_Servo2_grados 0045           __end_of_I2C_Slave_Init 0630                      ?_init_PWM_2 0070  
                 __end_of___bmul 0673                   __end_of_config 05D3              start_initialization 000F  
                    __end_of_ISR 0317         __CFG_FOSC$INTRC_NOCLKOUT 0000                ?_select_velocidad 0070  
                ?_I2C_Slave_Init 0074                       esperar@vel 0074               ??_select_velocidad 0021  
                       ??___bmul 0075                         ??_config 0076                      __pdataBANK0 0037  
         ??_cambiar_fila_derecha 0020                    _Servo2_grados 0515                      __pbssCOMMON 0076  
                      ___latbits 0002                    __pcstackBANK0 0020              __size_of_init_PWM_2 001D  
__size_of_cambiar_fila_izquierda 007E                __size_of_init_ADC 007C                __size_of_regresar 00A8  
                 ?_Servo2_grados 0070                         ?_dis_ade 0070                         ?_dis_atr 0070  
                       ?_esperar 0070                        _indicador 0033                        _obstaculo 0317  
              interrupt_function 0004                         _PIR1bits 000C              select_velocidad@vel 0023  
                      _velocidad 0036                       _ADCON0bits 001F                       _ADCON1bits 009F  
         _cambiar_fila_izquierda 041B                       ?_obstaculo 0070                     ??_init_PWM_2 0074  
                ??_Servo2_grados 0074       Servo2_grados@Servo2_grados 0020                         _adelante 0030  
               __size_of_dis_ade 0018                 __size_of_dis_atr 0018                 __size_of_esperar 003F  
                       __ptext10 0499                         __ptext11 0123                         __ptext12 041B  
                       __ptext13 039C                         __ptext14 0660                         __ptext15 0617  
                       __ptext16 0279                __CFG_BOR4V$BOR40V 0000                        regresar@i 0026  
             __end_of_init_PWM_2 0617                         _contador 0077                         _cont_obs 0032  
               ??_I2C_Slave_Init 0076                         _init_ADC 0499                    __size_of_main 00F8  
                    _recibir_ind 0078                         _regresar 01D1                         _muestras 0031  
      __size_of_select_velocidad 0027                         intlevel1 0000                      ??_obstaculo 0020  
                     _OSCCONbits 008F    __size_of_cambiar_fila_derecha 007F                       _OSC_config 0123  
                     _SSPCONbits 0014  

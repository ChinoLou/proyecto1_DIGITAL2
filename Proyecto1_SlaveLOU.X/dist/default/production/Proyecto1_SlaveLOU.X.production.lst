

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri May 01 14:56:47 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.10
    36                           ; Generated 31/07/2019 GMT
    37                           ; 
    38                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0088                     	;# 
   265  0089                     	;# 
   266  008C                     	;# 
   267  008D                     	;# 
   268  008E                     	;# 
   269  008F                     	;# 
   270  0090                     	;# 
   271  0091                     	;# 
   272  0092                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0094                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  0105                     	;# 
   289  0107                     	;# 
   290  0108                     	;# 
   291  0109                     	;# 
   292  010C                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  0185                     	;# 
   298  0187                     	;# 
   299  0188                     	;# 
   300  0189                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001D                     	;# 
   336  001E                     	;# 
   337  001F                     	;# 
   338  0081                     	;# 
   339  0085                     	;# 
   340  0086                     	;# 
   341  0087                     	;# 
   342  0088                     	;# 
   343  0089                     	;# 
   344  008C                     	;# 
   345  008D                     	;# 
   346  008E                     	;# 
   347  008F                     	;# 
   348  0090                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0095                     	;# 
   356  0096                     	;# 
   357  0097                     	;# 
   358  0098                     	;# 
   359  0099                     	;# 
   360  009A                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  009F                     	;# 
   366  0105                     	;# 
   367  0107                     	;# 
   368  0108                     	;# 
   369  0109                     	;# 
   370  010C                     	;# 
   371  010C                     	;# 
   372  010D                     	;# 
   373  010E                     	;# 
   374  010F                     	;# 
   375  0185                     	;# 
   376  0187                     	;# 
   377  0188                     	;# 
   378  0189                     	;# 
   379  018C                     	;# 
   380  018D                     	;# 
   381  0000                     	;# 
   382  0001                     	;# 
   383  0002                     	;# 
   384  0003                     	;# 
   385  0004                     	;# 
   386  0005                     	;# 
   387  0006                     	;# 
   388  0007                     	;# 
   389  0008                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000D                     	;# 
   395  000E                     	;# 
   396  000E                     	;# 
   397  000F                     	;# 
   398  0010                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0014                     	;# 
   403  0015                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001D                     	;# 
   414  001E                     	;# 
   415  001F                     	;# 
   416  0081                     	;# 
   417  0085                     	;# 
   418  0086                     	;# 
   419  0087                     	;# 
   420  0088                     	;# 
   421  0089                     	;# 
   422  008C                     	;# 
   423  008D                     	;# 
   424  008E                     	;# 
   425  008F                     	;# 
   426  0090                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0094                     	;# 
   433  0095                     	;# 
   434  0096                     	;# 
   435  0097                     	;# 
   436  0098                     	;# 
   437  0099                     	;# 
   438  009A                     	;# 
   439  009B                     	;# 
   440  009C                     	;# 
   441  009D                     	;# 
   442  009E                     	;# 
   443  009F                     	;# 
   444  0105                     	;# 
   445  0107                     	;# 
   446  0108                     	;# 
   447  0109                     	;# 
   448  010C                     	;# 
   449  010C                     	;# 
   450  010D                     	;# 
   451  010E                     	;# 
   452  010F                     	;# 
   453  0185                     	;# 
   454  0187                     	;# 
   455  0188                     	;# 
   456  0189                     	;# 
   457  018C                     	;# 
   458  018D                     	;# 
   459  0000                     	;# 
   460  0001                     	;# 
   461  0002                     	;# 
   462  0003                     	;# 
   463  0004                     	;# 
   464  0005                     	;# 
   465  0006                     	;# 
   466  0007                     	;# 
   467  0008                     	;# 
   468  0009                     	;# 
   469  000A                     	;# 
   470  000B                     	;# 
   471  000C                     	;# 
   472  000D                     	;# 
   473  000E                     	;# 
   474  000E                     	;# 
   475  000F                     	;# 
   476  0010                     	;# 
   477  0011                     	;# 
   478  0012                     	;# 
   479  0013                     	;# 
   480  0014                     	;# 
   481  0015                     	;# 
   482  0015                     	;# 
   483  0016                     	;# 
   484  0017                     	;# 
   485  0018                     	;# 
   486  0019                     	;# 
   487  001A                     	;# 
   488  001B                     	;# 
   489  001B                     	;# 
   490  001C                     	;# 
   491  001D                     	;# 
   492  001E                     	;# 
   493  001F                     	;# 
   494  0081                     	;# 
   495  0085                     	;# 
   496  0086                     	;# 
   497  0087                     	;# 
   498  0088                     	;# 
   499  0089                     	;# 
   500  008C                     	;# 
   501  008D                     	;# 
   502  008E                     	;# 
   503  008F                     	;# 
   504  0090                     	;# 
   505  0091                     	;# 
   506  0092                     	;# 
   507  0093                     	;# 
   508  0093                     	;# 
   509  0093                     	;# 
   510  0094                     	;# 
   511  0095                     	;# 
   512  0096                     	;# 
   513  0097                     	;# 
   514  0098                     	;# 
   515  0099                     	;# 
   516  009A                     	;# 
   517  009B                     	;# 
   518  009C                     	;# 
   519  009D                     	;# 
   520  009E                     	;# 
   521  009F                     	;# 
   522  0105                     	;# 
   523  0107                     	;# 
   524  0108                     	;# 
   525  0109                     	;# 
   526  010C                     	;# 
   527  010C                     	;# 
   528  010D                     	;# 
   529  010E                     	;# 
   530  010F                     	;# 
   531  0185                     	;# 
   532  0187                     	;# 
   533  0188                     	;# 
   534  0189                     	;# 
   535  018C                     	;# 
   536  018D                     	;# 
   537  0015                     _CCPR1L	set	21
   538  0017                     _CCP1CONbits	set	23
   539  0012                     _T2CONbits	set	18
   540  001B                     _CCPR2L	set	27
   541  001D                     _CCP2CONbits	set	29
   542  0013                     _SSPBUF	set	19
   543  0014                     _SSPCON	set	20
   544  000B                     _INTCONbits	set	11
   545  0009                     _PORTE	set	9
   546  0008                     _PORTD	set	8
   547  0007                     _PORTC	set	7
   548  0006                     _PORTB	set	6
   549  0005                     _PORTA	set	5
   550  0009                     _PORTEbits	set	9
   551  001E                     _ADRESH	set	30
   552  001F                     _ADCON0bits	set	31
   553  000C                     _PIR1bits	set	12
   554  002C                     _RA4	set	44
   555  002B                     _RA3	set	43
   556  0063                     _SSPIF	set	99
   557  005E                     _PEIE	set	94
   558  005F                     _GIE	set	95
   559  0066                     _ADIF	set	102
   560  0092                     _PR2	set	146
   561  0093                     _SSPADD	set	147
   562  0091                     _SSPCON2bits	set	145
   563  0087                     _TRISCbits	set	135
   564  0094                     _SSPSTAT	set	148
   565  0091                     _SSPCON2	set	145
   566  008C                     _PIE1bits	set	140
   567  009F                     _ADCON1bits	set	159
   568  008F                     _OSCCONbits	set	143
   569  0089                     _TRISE	set	137
   570  0088                     _TRISD	set	136
   571  0087                     _TRISC	set	135
   572  0086                     _TRISB	set	134
   573  0085                     _TRISAbits	set	133
   574  0085                     _TRISA	set	133
   575  0463                     _SSPIE	set	1123
   576  043C                     _TRISC4	set	1084
   577  043B                     _TRISC3	set	1083
   578  0188                     _ANSELbits	set	392
   579  0188                     _ANSEL	set	392
   580                           
   581                           	psect	strings
   582  0800                     __pstrings:	
   583  0800                     stringtab:	
   584  0800                     __stringtab:	
   585  0800                     stringcode:	
   586                           ;	String table - string pointers are 1 byte each
   587                           
   588  0800                     stringdir:	
   589  0800  3008               	movlw	high stringdir
   590  0801  008A               	movwf	10
   591  0802  0804               	movf	4,w
   592  0803  0A84               	incf	4,f
   593  0804  0782               	addwf	2,f
   594  0805                     __stringbase:	
   595  0805  3400               	retlw	0
   596  0806                     __end_of__stringtab:	
   597  0806                     STR_1:	
   598  0806  3453               	retlw	83	;'S'
   599  0807  3465               	retlw	101	;'e'
   600  0808  346E               	retlw	110	;'n'
   601  0809  3473               	retlw	115	;'s'
   602  080A  346F               	retlw	111	;'o'
   603  080B  3472               	retlw	114	;'r'
   604  080C  3420               	retlw	32	;' '
   605  080D  3448               	retlw	72	;'H'
   606  080E  3475               	retlw	117	;'u'
   607  080F  346D               	retlw	109	;'m'
   608  0810  342E               	retlw	46	;'.'
   609  0811  3420               	retlw	32	;' '
   610  0812  3459               	retlw	89	;'Y'
   611  0813  344C               	retlw	76	;'L'
   612  0814  3436               	retlw	54	;'6'
   613  0815  3439               	retlw	57	;'9'
   614  0816  3400               	retlw	0
   615  0817                     STR_3:	
   616  0817  3420               	retlw	32	;' '
   617  0818  3420               	retlw	32	;' '
   618  0819  3430               	retlw	48	;'0'
   619  081A  3425               	retlw	37	;'%'
   620  081B  3400               	retlw	0
   621  081C                     STR_14:	
   622  081C  3431               	retlw	49	;'1'
   623  081D  3430               	retlw	48	;'0'
   624  081E  3430               	retlw	48	;'0'
   625  081F  3425               	retlw	37	;'%'
   626  0820  3400               	retlw	0
   627  0821                     STR_5:	
   628  0821  3420               	retlw	32	;' '
   629  0822  3431               	retlw	49	;'1'
   630  0823  3430               	retlw	48	;'0'
   631  0824  3425               	retlw	37	;'%'
   632  0825  3400               	retlw	0
   633  0826                     STR_6:	
   634  0826  3420               	retlw	32	;' '
   635  0827  3432               	retlw	50	;'2'
   636  0828  3430               	retlw	48	;'0'
   637  0829  3425               	retlw	37	;'%'
   638  082A  3400               	retlw	0
   639  082B                     STR_7:	
   640  082B  3420               	retlw	32	;' '
   641  082C  3433               	retlw	51	;'3'
   642  082D  3430               	retlw	48	;'0'
   643  082E  3425               	retlw	37	;'%'
   644  082F  3400               	retlw	0
   645  0830                     STR_8:	
   646  0830  3420               	retlw	32	;' '
   647  0831  3434               	retlw	52	;'4'
   648  0832  3430               	retlw	48	;'0'
   649  0833  3425               	retlw	37	;'%'
   650  0834  3400               	retlw	0
   651  0835                     STR_9:	
   652  0835  3420               	retlw	32	;' '
   653  0836  3435               	retlw	53	;'5'
   654  0837  3430               	retlw	48	;'0'
   655  0838  3425               	retlw	37	;'%'
   656  0839  3400               	retlw	0
   657  083A                     STR_10:	
   658  083A  3420               	retlw	32	;' '
   659  083B  3436               	retlw	54	;'6'
   660  083C  3430               	retlw	48	;'0'
   661  083D  3425               	retlw	37	;'%'
   662  083E  3400               	retlw	0
   663  083F                     STR_11:	
   664  083F  3420               	retlw	32	;' '
   665  0840  3437               	retlw	55	;'7'
   666  0841  3430               	retlw	48	;'0'
   667  0842  3425               	retlw	37	;'%'
   668  0843  3400               	retlw	0
   669  0844                     STR_12:	
   670  0844  3420               	retlw	32	;' '
   671  0845  3438               	retlw	56	;'8'
   672  0846  3430               	retlw	48	;'0'
   673  0847  3425               	retlw	37	;'%'
   674  0848  3400               	retlw	0
   675  0849                     STR_13:	
   676  0849  3420               	retlw	32	;' '
   677  084A  3439               	retlw	57	;'9'
   678  084B  3430               	retlw	48	;'0'
   679  084C  3425               	retlw	37	;'%'
   680  084D  3400               	retlw	0
   681  0817                     
   682                           ; #config settings
   683  0000                     
   684                           	psect	cinit
   685  000F                     start_initialization:	
   686  000F                     __initialization:	
   687                           
   688                           ; Clear objects allocated to COMMON
   689  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   690  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   691  0011  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   692                           
   693                           ; Clear objects allocated to BANK0
   694  0012  1383               	bcf	3,7	;select IRP bank0
   695  0013  3020               	movlw	low __pbssBANK0
   696  0014  0084               	movwf	4
   697  0015  3038               	movlw	low (__pbssBANK0+24)
   698  0016  120A  158A  22DC  120A  118A  	fcall	clear_ram0
   699  001B                     end_of_initialization:	
   700                           ;End of C runtime variable initialization code
   701                           
   702  001B                     __end_of__initialization:	
   703  001B  0183               	clrf	3
   704  001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   705                           
   706                           	psect	bssCOMMON
   707  0079                     __pbssCOMMON:	
   708  0079                     _i:	
   709  0079                     	ds	2
   710  007B                     _uni:	
   711  007B                     	ds	1
   712                           
   713                           	psect	bssBANK0
   714  0020                     __pbssBANK0:	
   715  0020                     mapeo@F1417:	
   716  0020                     	ds	6
   717  0026                     _LCD_Humedad:	
   718  0026                     	ds	2
   719  0028                     _Sens_Humedad:	
   720  0028                     	ds	2
   721  002A                     _Humedad_L:	
   722  002A                     	ds	2
   723  002C                     _Humedad_H:	
   724  002C                     	ds	2
   725  002E                     _ESTADO3:	
   726  002E                     	ds	1
   727  002F                     _ESTADO2:	
   728  002F                     	ds	1
   729  0030                     _ESTADO:	
   730  0030                     	ds	1
   731  0031                     _unidad:	
   732  0031                     	ds	1
   733  0032                     _decena:	
   734  0032                     	ds	1
   735  0033                     _centena:	
   736  0033                     	ds	1
   737  0034                     _cen:	
   738  0034                     	ds	1
   739  0035                     _dec:	
   740  0035                     	ds	1
   741  0036                     _z:	
   742  0036                     	ds	1
   743  0037                     _voltaje_map:	
   744  0037                     	ds	1
   745                           
   746                           	psect	clrtext
   747  0ADC                     clear_ram0:	
   748                           ;	Called with FSR containing the base address, and
   749                           ;	W with the last address+1
   750                           
   751  0ADC  0064               	clrwdt	;clear the watchdog before getting into this loop
   752  0ADD                     clrloop0:	
   753  0ADD  0180               	clrf	0	;clear RAM location pointed to by FSR
   754  0ADE  0A84               	incf	4,f	;increment pointer
   755  0ADF  0604               	xorwf	4,w	;XOR with final address
   756  0AE0  1903               	btfsc	3,2	;have we reached the end yet?
   757  0AE1  3400               	retlw	0	;all done for this memory range, return
   758  0AE2  0604               	xorwf	4,w	;XOR again to restore value
   759  0AE3  2ADD               	goto	clrloop0	;do the next byte
   760                           
   761                           	psect	cstackCOMMON
   762  0070                     __pcstackCOMMON:	
   763  0070                     ?_config_PORTS:	
   764  0070                     ?_init_PWM_1:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_init_PWM_2:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ?_config_ADC:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_I2C_Slave_Init:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ?_LCD_iniciar:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ?_LCD_CLEAR:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ?_LCD_STRING:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0070                     ?_uint_to_char:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0070                     ?_LCD_CHAR:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0070                     ?_Servo1_grados:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0070                     ?_Servo2_grados:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0070                     ?_ISR:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0070                     ??_ISR:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0070                     ?_main:	
   804                           ; 1 bytes @ 0x0
   805                           
   806                           
   807                           ; 1 bytes @ 0x0
   808  0070                     	ds	2
   809  0072                     ??_init_PWM_1:	
   810  0072                     ??_init_PWM_2:	
   811                           ; 1 bytes @ 0x2
   812                           
   813  0072                     ??_config_ADC:	
   814                           ; 1 bytes @ 0x2
   815                           
   816  0072                     ??_I2C_Slave_Init:	
   817                           ; 1 bytes @ 0x2
   818                           
   819  0072                     ??_uint_to_char:	
   820                           ; 1 bytes @ 0x2
   821                           
   822  0072                     ??_LCD_CHAR:	
   823                           ; 1 bytes @ 0x2
   824                           
   825  0072                     ??_Servo1_grados:	
   826                           ; 1 bytes @ 0x2
   827                           
   828  0072                     ??_Servo2_grados:	
   829                           ; 1 bytes @ 0x2
   830                           
   831  0072                     ?_Stepper_CW:	
   832                           ; 1 bytes @ 0x2
   833                           
   834  0072                     ?_Stepper_CCW:	
   835                           ; 1 bytes @ 0x2
   836                           
   837  0072                     ?_OSC_config:	
   838                           ; 1 bytes @ 0x2
   839                           
   840  0072                     ?_LCD_DATO:	
   841                           ; 1 bytes @ 0x2
   842                           
   843  0072                     ?___wmul:	
   844                           ; 1 bytes @ 0x2
   845                           
   846  0072                     I2C_Slave_Init@address:	
   847                           ; 2 bytes @ 0x2
   848                           
   849  0072                     Stepper_CW@Step_grados_cw:	
   850                           ; 1 bytes @ 0x2
   851                           
   852  0072                     Stepper_CCW@Step_grados_ccw:	
   853                           ; 2 bytes @ 0x2
   854                           
   855  0072                     LCD_DATO@var:	
   856                           ; 2 bytes @ 0x2
   857                           
   858  0072                     ___wmul@multiplier:	
   859                           ; 2 bytes @ 0x2
   860                           
   861  0072                     OSC_config@frecuencia:	
   862                           ; 2 bytes @ 0x2
   863                           
   864                           
   865                           ; 4 bytes @ 0x2
   866  0072                     	ds	1
   867  0073                     LCD_CHAR@a:	
   868                           
   869                           ; 1 bytes @ 0x3
   870  0073                     	ds	1
   871  0074                     ??_LCD_STRING:	
   872  0074                     ??_Stepper_CW:	
   873                           ; 1 bytes @ 0x4
   874                           
   875  0074                     ??_Stepper_CCW:	
   876                           ; 1 bytes @ 0x4
   877                           
   878  0074                     ??_LCD_DATO:	
   879                           ; 1 bytes @ 0x4
   880                           
   881  0074                     Servo1_grados@Servo1_grados:	
   882                           ; 1 bytes @ 0x4
   883                           
   884  0074                     Servo2_grados@Servo2_grados:	
   885                           ; 1 bytes @ 0x4
   886                           
   887  0074                     uint_to_char@numero:	
   888                           ; 1 bytes @ 0x4
   889                           
   890  0074                     LCD_STRING@n:	
   891                           ; 1 bytes @ 0x4
   892                           
   893  0074                     ___wmul@multiplicand:	
   894                           ; 2 bytes @ 0x4
   895                           
   896                           
   897                           ; 2 bytes @ 0x4
   898  0074                     	ds	1
   899  0075                     ??_LCD_iniciar:	
   900  0075                     ??_LCD_CLEAR:	
   901                           ; 1 bytes @ 0x5
   902                           
   903  0075                     ?_LCD_CURSOR:	
   904                           ; 1 bytes @ 0x5
   905                           
   906  0075                     uint_to_char@numChr:	
   907                           ; 1 bytes @ 0x5
   908                           
   909  0075                     LCD_CURSOR@a:	
   910                           ; 1 bytes @ 0x5
   911                           
   912                           
   913                           ; 2 bytes @ 0x5
   914  0075                     	ds	1
   915  0076                     ??_config_PORTS:	
   916  0076                     ??_OSC_config:	
   917                           ; 1 bytes @ 0x6
   918                           
   919  0076                     ??___wmul:	
   920                           ; 1 bytes @ 0x6
   921                           
   922  0076                     LCD_STRING@a:	
   923                           ; 1 bytes @ 0x6
   924                           
   925  0076                     ___wmul@product:	
   926                           ; 1 bytes @ 0x6
   927                           
   928                           
   929                           ; 2 bytes @ 0x6
   930  0076                     	ds	1
   931  0077                     LCD_CURSOR@b:	
   932                           
   933                           ; 2 bytes @ 0x7
   934  0077                     	ds	2
   935  0079                     ??_LCD_CURSOR:	
   936                           
   937                           	psect	cstackBANK0
   938  0038                     __pcstackBANK0:	
   939                           ; 1 bytes @ 0x9
   940                           
   941  0038                     ?_mapeo:	
   942  0038                     mapeo@limPIC:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0038                     LCD_CURSOR@d:	
   946                           ; 1 bytes @ 0x0
   947                           
   948                           
   949                           ; 2 bytes @ 0x0
   950  0038                     	ds	1
   951  0039                     mapeo@limFisico:	
   952                           
   953                           ; 1 bytes @ 0x1
   954  0039                     	ds	1
   955  003A                     ??_mapeo:	
   956                           
   957                           ; 1 bytes @ 0x2
   958  003A                     	ds	4
   959  003E                     mapeo@valor:	
   960                           
   961                           ; 1 bytes @ 0x6
   962  003E                     	ds	1
   963  003F                     mapeo@result:	
   964                           
   965                           ; 6 bytes @ 0x7
   966  003F                     	ds	6
   967  0045                     mapeo@dividendo:	
   968                           
   969                           ; 2 bytes @ 0xD
   970  0045                     	ds	2
   971  0047                     ??_main:	
   972                           
   973                           ; 1 bytes @ 0xF
   974  0047                     	ds	3
   975                           
   976                           	psect	maintext
   977  001F                     __pmaintext:	
   978 ;;
   979 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   980 ;;
   981 ;; *************** function _main *****************
   982 ;; Defined at:
   983 ;;		line 125 in file "Slave_Lou.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : B00/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   997 ;;      Params:         0       0       0       0       0
   998 ;;      Locals:         0       0       0       0       0
   999 ;;      Temps:          0       3       0       0       0
  1000 ;;      Totals:         0       3       0       0       0
  1001 ;;Total ram usage:        3 bytes
  1002 ;; Hardware stack levels required when called:    3
  1003 ;; This function calls:
  1004 ;;		_I2C_Slave_Init
  1005 ;;		_LCD_CHAR
  1006 ;;		_LCD_CLEAR
  1007 ;;		_LCD_CURSOR
  1008 ;;		_LCD_STRING
  1009 ;;		_LCD_iniciar
  1010 ;;		_Servo1_grados
  1011 ;;		_Servo2_grados
  1012 ;;		_Stepper_CCW
  1013 ;;		_Stepper_CW
  1014 ;;		_config_ADC
  1015 ;;		_config_PORTS
  1016 ;;		_init_PWM_1
  1017 ;;		_init_PWM_2
  1018 ;;		_mapeo
  1019 ;;		_uint_to_char
  1020 ;; This function is called by:
  1021 ;;		Startup code after reset
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           
  1026                           ;psect for function _main
  1027  001F                     _main:	
  1028  001F                     l3653:	
  1029                           ;incstack = 0
  1030                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1031                           
  1032                           
  1033                           ;Slave_Lou.c: 126:     config_PORTS();
  1034  001F  120A  158A  23ED  120A  118A  	fcall	_config_PORTS
  1035  0024                     l3655:	
  1036                           
  1037                           ;Slave_Lou.c: 127:     init_PWM_1();
  1038  0024  120A  158A  2325  120A  118A  	fcall	_init_PWM_1
  1039  0029                     l3657:	
  1040                           
  1041                           ;Slave_Lou.c: 128:     init_PWM_2();
  1042  0029  120A  158A  2342  120A  118A  	fcall	_init_PWM_2
  1043  002E                     l3659:	
  1044                           
  1045                           ;Slave_Lou.c: 129:     config_ADC();
  1046  002E  120A  158A  2382  120A  118A  	fcall	_config_ADC
  1047  0033                     l3661:	
  1048                           
  1049                           ;Slave_Lou.c: 130:     I2C_Slave_Init(0x20);
  1050  0033  3020               	movlw	32
  1051  0034  120A  158A  230B  120A  118A  	fcall	_I2C_Slave_Init
  1052  0039                     l3663:	
  1053                           
  1054                           ;Slave_Lou.c: 132:     LCD_iniciar();
  1055  0039  120A  118A  2774  120A  118A  	fcall	_LCD_iniciar
  1056  003E                     l3665:	
  1057                           
  1058                           ;Slave_Lou.c: 133:     LCD_CLEAR();
  1059  003E  120A  158A  22F2  120A  118A  	fcall	_LCD_CLEAR
  1060  0043                     l3667:	
  1061                           
  1062                           ;Slave_Lou.c: 134:     LCD_CURSOR(1,1);
  1063  0043  3001               	movlw	1
  1064  0044  00F5               	movwf	LCD_CURSOR@a
  1065  0045  3000               	movlw	0
  1066  0046  00F6               	movwf	LCD_CURSOR@a+1
  1067  0047  3001               	movlw	1
  1068  0048  00F7               	movwf	LCD_CURSOR@b
  1069  0049  3000               	movlw	0
  1070  004A  00F8               	movwf	LCD_CURSOR@b+1
  1071  004B  120A  158A  2413  120A  118A  	fcall	_LCD_CURSOR
  1072  0050                     l3669:	
  1073                           
  1074                           ;Slave_Lou.c: 135:     LCD_STRING ("Sensor Hum. YL69");
  1075  0050  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1076  0051  120A  158A  23A3  120A  118A  	fcall	_LCD_STRING
  1077  0056                     l3671:	
  1078                           
  1079                           ;Slave_Lou.c: 139:         LCD_CURSOR(1,1);
  1080  0056  3001               	movlw	1
  1081  0057  00F5               	movwf	LCD_CURSOR@a
  1082  0058  3000               	movlw	0
  1083  0059  00F6               	movwf	LCD_CURSOR@a+1
  1084  005A  3001               	movlw	1
  1085  005B  00F7               	movwf	LCD_CURSOR@b
  1086  005C  3000               	movlw	0
  1087  005D  00F8               	movwf	LCD_CURSOR@b+1
  1088  005E  120A  158A  2413  120A  118A  	fcall	_LCD_CURSOR
  1089  0063                     l3673:	
  1090                           
  1091                           ;Slave_Lou.c: 140:         LCD_STRING ("Sensor Hum. YL69");
  1092  0063  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1093  0064  120A  158A  23A3  120A  118A  	fcall	_LCD_STRING
  1094  0069                     l3675:	
  1095                           
  1096                           ;Slave_Lou.c: 142:         ADCON0bits.GO = 1;
  1097  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1098  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1099  006B  149F               	bsf	31,1	;volatile
  1100  006C                     l3677:	
  1101                           
  1102                           ;Slave_Lou.c: 143:         Humedad_H = ADRESH ;
  1103  006C  081E               	movf	30,w	;volatile
  1104  006D  00C7               	movwf	??_main
  1105  006E  01C8               	clrf	??_main+1
  1106  006F  0847               	movf	??_main,w
  1107  0070  00AC               	movwf	_Humedad_H
  1108  0071  0848               	movf	??_main+1,w
  1109  0072  00AD               	movwf	_Humedad_H+1
  1110  0073                     l3679:	
  1111                           
  1112                           ;Slave_Lou.c: 150:         voltaje_map = mapeo(Humedad_H, 255,1);
  1113  0073  30FF               	movlw	255
  1114  0074  00C7               	movwf	??_main
  1115  0075  0847               	movf	??_main,w
  1116  0076  00B8               	movwf	mapeo@limPIC
  1117  0077  01B9               	clrf	mapeo@limFisico
  1118  0078  0AB9               	incf	mapeo@limFisico,f
  1119  0079  082C               	movf	_Humedad_H,w
  1120  007A  120A  158A  257D  120A  118A  	fcall	_mapeo
  1121  007F  1283               	bcf	3,5	;RP0=0, select bank0
  1122  0080  1303               	bcf	3,6	;RP1=0, select bank0
  1123  0081  00C8               	movwf	??_main+1
  1124  0082  0848               	movf	??_main+1,w
  1125  0083  00B7               	movwf	_voltaje_map
  1126  0084                     l3681:	
  1127                           
  1128                           ;Slave_Lou.c: 151:         cen = voltaje_map[0];
  1129  0084  0837               	movf	_voltaje_map,w
  1130  0085  0084               	movwf	4
  1131  0086  1383               	bcf	3,7	;select IRP bank0
  1132  0087  0800               	movf	0,w
  1133  0088  00C7               	movwf	??_main
  1134  0089  0847               	movf	??_main,w
  1135  008A  00B4               	movwf	_cen
  1136  008B                     l3683:	
  1137                           
  1138                           ;Slave_Lou.c: 152:         dec = voltaje_map[1];
  1139  008B  0837               	movf	_voltaje_map,w
  1140  008C  3E02               	addlw	2
  1141  008D  0084               	movwf	4
  1142  008E  0800               	movf	0,w
  1143  008F  00C7               	movwf	??_main
  1144  0090  0847               	movf	??_main,w
  1145  0091  00B5               	movwf	_dec
  1146  0092                     l3685:	
  1147                           
  1148                           ;Slave_Lou.c: 153:         uni = voltaje_map[2];
  1149  0092  0837               	movf	_voltaje_map,w
  1150  0093  3E04               	addlw	4
  1151  0094  0084               	movwf	4
  1152  0095  0800               	movf	0,w
  1153  0096  00C7               	movwf	??_main
  1154  0097  0847               	movf	??_main,w
  1155  0098  00FB               	movwf	_uni
  1156  0099                     l3687:	
  1157                           
  1158                           ;Slave_Lou.c: 155:         centena = uint_to_char(cen);
  1159  0099  0834               	movf	_cen,w
  1160  009A  120A  158A  24EA  120A  118A  	fcall	_uint_to_char
  1161  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1162  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1163  00A1  00C7               	movwf	??_main
  1164  00A2  0847               	movf	??_main,w
  1165  00A3  00B3               	movwf	_centena
  1166  00A4                     l3689:	
  1167                           
  1168                           ;Slave_Lou.c: 156:         decena = uint_to_char(dec);
  1169  00A4  0835               	movf	_dec,w
  1170  00A5  120A  158A  24EA  120A  118A  	fcall	_uint_to_char
  1171  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1172  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1173  00AC  00C7               	movwf	??_main
  1174  00AD  0847               	movf	??_main,w
  1175  00AE  00B2               	movwf	_decena
  1176  00AF                     l3691:	
  1177                           
  1178                           ;Slave_Lou.c: 157:         unidad = uint_to_char(uni);
  1179  00AF  087B               	movf	_uni,w
  1180  00B0  120A  158A  24EA  120A  118A  	fcall	_uint_to_char
  1181  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1182  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1183  00B7  00C7               	movwf	??_main
  1184  00B8  0847               	movf	??_main,w
  1185  00B9  00B1               	movwf	_unidad
  1186  00BA                     l3693:	
  1187                           
  1188                           ;Slave_Lou.c: 159:         LCD_CURSOR(2,1);
  1189  00BA  3002               	movlw	2
  1190  00BB  00F5               	movwf	LCD_CURSOR@a
  1191  00BC  3000               	movlw	0
  1192  00BD  00F6               	movwf	LCD_CURSOR@a+1
  1193  00BE  3001               	movlw	1
  1194  00BF  00F7               	movwf	LCD_CURSOR@b
  1195  00C0  3000               	movlw	0
  1196  00C1  00F8               	movwf	LCD_CURSOR@b+1
  1197  00C2  120A  158A  2413  120A  118A  	fcall	_LCD_CURSOR
  1198  00C7                     l3695:	
  1199                           
  1200                           ;Slave_Lou.c: 160:         LCD_CHAR(centena);
  1201  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1202  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1203  00C9  0833               	movf	_centena,w
  1204  00CA  120A  118A  27EB  120A  118A  	fcall	_LCD_CHAR
  1205  00CF                     l3697:	
  1206                           
  1207                           ;Slave_Lou.c: 161:         LCD_CHAR(decena);
  1208  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1209  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1210  00D1  0832               	movf	_decena,w
  1211  00D2  120A  118A  27EB  120A  118A  	fcall	_LCD_CHAR
  1212  00D7                     l3699:	
  1213                           
  1214                           ;Slave_Lou.c: 162:         LCD_CHAR(unidad);
  1215  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1216  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1217  00D9  0831               	movf	_unidad,w
  1218  00DA  120A  118A  27EB  120A  118A  	fcall	_LCD_CHAR
  1219  00DF                     l3701:	
  1220                           
  1221                           ;Slave_Lou.c: 163:         LCD_CHAR('%');
  1222  00DF  3025               	movlw	37
  1223  00E0  120A  118A  27EB  120A  118A  	fcall	_LCD_CHAR
  1224  00E5                     l3703:	
  1225                           
  1226                           ;Slave_Lou.c: 167:         if (PORTEbits.RE0 == 1){
  1227  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1228  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1229  00E7  1C09               	btfss	9,0	;volatile
  1230  00E8  28EA               	goto	u1291
  1231  00E9  28EB               	goto	u1290
  1232  00EA                     u1291:	
  1233  00EA  2A34               	goto	l3757
  1234  00EB                     u1290:	
  1235  00EB                     l3705:	
  1236                           
  1237                           ;Slave_Lou.c: 168:             ESTADO = 1;
  1238  00EB  01B0               	clrf	_ESTADO
  1239  00EC  0AB0               	incf	_ESTADO,f
  1240  00ED                     l3707:	
  1241                           
  1242                           ;Slave_Lou.c: 169:             _delay((unsigned long)((250)*(1000000/4000000.0)));
  1243  00ED  3013               	movlw	19
  1244  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1245  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1246  00F0  00C7               	movwf	??_main
  1247  00F1                     u1637:	
  1248  00F1  0BC7               	decfsz	??_main,f
  1249  00F2  28F1               	goto	u1637
  1250  00F3  28F4               	nop2
  1251  00F4                     l3709:	
  1252                           
  1253                           ;Slave_Lou.c: 172:             if (ESTADO == 1 && PORTEbits.RE0 == 0) {
  1254  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1255  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1256  00F6  0330               	decf	_ESTADO,w
  1257  00F7  1D03               	btfss	3,2
  1258  00F8  28FA               	goto	u1301
  1259  00F9  28FB               	goto	u1300
  1260  00FA                     u1301:	
  1261  00FA  2A31               	goto	l3755
  1262  00FB                     u1300:	
  1263  00FB                     l3711:	
  1264  00FB  1809               	btfsc	9,0	;volatile
  1265  00FC  28FE               	goto	u1311
  1266  00FD  28FF               	goto	u1310
  1267  00FE                     u1311:	
  1268  00FE  2A31               	goto	l3755
  1269  00FF                     u1310:	
  1270  00FF                     l3713:	
  1271                           
  1272                           ;Slave_Lou.c: 175:                 Servo1_grados(0);
  1273  00FF  3000               	movlw	0
  1274  0100  120A  158A  2440  120A  118A  	fcall	_Servo1_grados
  1275  0105                     l3715:	
  1276                           
  1277                           ;Slave_Lou.c: 176:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  1278  0105  3002               	movlw	2
  1279  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1280  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1281  0108  00C9               	movwf	??_main+2
  1282  0109  3045               	movlw	69
  1283  010A  00C8               	movwf	??_main+1
  1284  010B  30A9               	movlw	169
  1285  010C  00C7               	movwf	??_main
  1286  010D                     u1647:	
  1287  010D  0BC7               	decfsz	??_main,f
  1288  010E  290D               	goto	u1647
  1289  010F  0BC8               	decfsz	??_main+1,f
  1290  0110  290D               	goto	u1647
  1291  0111  0BC9               	decfsz	??_main+2,f
  1292  0112  290D               	goto	u1647
  1293  0113                     l3717:	
  1294                           
  1295                           ;Slave_Lou.c: 177:                 Servo1_grados(10);
  1296  0113  300A               	movlw	10
  1297  0114  120A  158A  2440  120A  118A  	fcall	_Servo1_grados
  1298                           
  1299                           ;Slave_Lou.c: 178:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  1300  0119  3002               	movlw	2
  1301  011A  1283               	bcf	3,5	;RP0=0, select bank0
  1302  011B  1303               	bcf	3,6	;RP1=0, select bank0
  1303  011C  00C9               	movwf	??_main+2
  1304  011D  3045               	movlw	69
  1305  011E  00C8               	movwf	??_main+1
  1306  011F  30A9               	movlw	169
  1307  0120  00C7               	movwf	??_main
  1308  0121                     u1657:	
  1309  0121  0BC7               	decfsz	??_main,f
  1310  0122  2921               	goto	u1657
  1311  0123  0BC8               	decfsz	??_main+1,f
  1312  0124  2921               	goto	u1657
  1313  0125  0BC9               	decfsz	??_main+2,f
  1314  0126  2921               	goto	u1657
  1315  0127                     l3719:	
  1316                           
  1317                           ;Slave_Lou.c: 179:                 Servo1_grados(30);
  1318  0127  301E               	movlw	30
  1319  0128  120A  158A  2440  120A  118A  	fcall	_Servo1_grados
  1320  012D                     l3721:	
  1321                           
  1322                           ;Slave_Lou.c: 180:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  1323  012D  3002               	movlw	2
  1324  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1325  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1326  0130  00C9               	movwf	??_main+2
  1327  0131  3045               	movlw	69
  1328  0132  00C8               	movwf	??_main+1
  1329  0133  30A9               	movlw	169
  1330  0134  00C7               	movwf	??_main
  1331  0135                     u1667:	
  1332  0135  0BC7               	decfsz	??_main,f
  1333  0136  2935               	goto	u1667
  1334  0137  0BC8               	decfsz	??_main+1,f
  1335  0138  2935               	goto	u1667
  1336  0139  0BC9               	decfsz	??_main+2,f
  1337  013A  2935               	goto	u1667
  1338                           
  1339                           ;Slave_Lou.c: 181:                 Servo1_grados(45);
  1340  013B  302D               	movlw	45
  1341  013C  120A  158A  2440  120A  118A  	fcall	_Servo1_grados
  1342  0141                     l3723:	
  1343                           
  1344                           ;Slave_Lou.c: 183:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  1345  0141  3002               	movlw	2
  1346  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1347  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1348  0144  00C9               	movwf	??_main+2
  1349  0145  3045               	movlw	69
  1350  0146  00C8               	movwf	??_main+1
  1351  0147  30A9               	movlw	169
  1352  0148  00C7               	movwf	??_main
  1353  0149                     u1677:	
  1354  0149  0BC7               	decfsz	??_main,f
  1355  014A  2949               	goto	u1677
  1356  014B  0BC8               	decfsz	??_main+1,f
  1357  014C  2949               	goto	u1677
  1358  014D  0BC9               	decfsz	??_main+2,f
  1359  014E  2949               	goto	u1677
  1360  014F                     l3725:	
  1361                           
  1362                           ;Slave_Lou.c: 184:                 Servo1_grados(90);
  1363  014F  305A               	movlw	90
  1364  0150  120A  158A  2440  120A  118A  	fcall	_Servo1_grados
  1365                           
  1366                           ;Slave_Lou.c: 185:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  1367  0155  3002               	movlw	2
  1368  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1369  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1370  0158  00C9               	movwf	??_main+2
  1371  0159  3045               	movlw	69
  1372  015A  00C8               	movwf	??_main+1
  1373  015B  30A9               	movlw	169
  1374  015C  00C7               	movwf	??_main
  1375  015D                     u1687:	
  1376  015D  0BC7               	decfsz	??_main,f
  1377  015E  295D               	goto	u1687
  1378  015F  0BC8               	decfsz	??_main+1,f
  1379  0160  295D               	goto	u1687
  1380  0161  0BC9               	decfsz	??_main+2,f
  1381  0162  295D               	goto	u1687
  1382  0163                     l3727:	
  1383                           
  1384                           ;Slave_Lou.c: 186:                 Servo1_grados(120);
  1385  0163  3078               	movlw	120
  1386  0164  120A  158A  2440  120A  118A  	fcall	_Servo1_grados
  1387  0169                     l3729:	
  1388                           
  1389                           ;Slave_Lou.c: 187:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  1390  0169  3002               	movlw	2
  1391  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1392  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1393  016C  00C9               	movwf	??_main+2
  1394  016D  3045               	movlw	69
  1395  016E  00C8               	movwf	??_main+1
  1396  016F  30A9               	movlw	169
  1397  0170  00C7               	movwf	??_main
  1398  0171                     u1697:	
  1399  0171  0BC7               	decfsz	??_main,f
  1400  0172  2971               	goto	u1697
  1401  0173  0BC8               	decfsz	??_main+1,f
  1402  0174  2971               	goto	u1697
  1403  0175  0BC9               	decfsz	??_main+2,f
  1404  0176  2971               	goto	u1697
  1405                           
  1406                           ;Slave_Lou.c: 188:                 Servo1_grados(150);
  1407  0177  3096               	movlw	150
  1408  0178  120A  158A  2440  120A  118A  	fcall	_Servo1_grados
  1409  017D                     l3731:	
  1410                           
  1411                           ;Slave_Lou.c: 189:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  1412  017D  3002               	movlw	2
  1413  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1414  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1415  0180  00C9               	movwf	??_main+2
  1416  0181  3045               	movlw	69
  1417  0182  00C8               	movwf	??_main+1
  1418  0183  30A9               	movlw	169
  1419  0184  00C7               	movwf	??_main
  1420  0185                     u1707:	
  1421  0185  0BC7               	decfsz	??_main,f
  1422  0186  2985               	goto	u1707
  1423  0187  0BC8               	decfsz	??_main+1,f
  1424  0188  2985               	goto	u1707
  1425  0189  0BC9               	decfsz	??_main+2,f
  1426  018A  2985               	goto	u1707
  1427  018B                     l3733:	
  1428                           
  1429                           ;Slave_Lou.c: 190:                 Servo1_grados(180);
  1430  018B  30B4               	movlw	180
  1431  018C  120A  158A  2440  120A  118A  	fcall	_Servo1_grados
  1432                           
  1433                           ;Slave_Lou.c: 192:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  1434  0191  3002               	movlw	2
  1435  0192  1283               	bcf	3,5	;RP0=0, select bank0
  1436  0193  1303               	bcf	3,6	;RP1=0, select bank0
  1437  0194  00C9               	movwf	??_main+2
  1438  0195  3045               	movlw	69
  1439  0196  00C8               	movwf	??_main+1
  1440  0197  30A9               	movlw	169
  1441  0198  00C7               	movwf	??_main
  1442  0199                     u1717:	
  1443  0199  0BC7               	decfsz	??_main,f
  1444  019A  2999               	goto	u1717
  1445  019B  0BC8               	decfsz	??_main+1,f
  1446  019C  2999               	goto	u1717
  1447  019D  0BC9               	decfsz	??_main+2,f
  1448  019E  2999               	goto	u1717
  1449  019F                     l3735:	
  1450                           
  1451                           ;Slave_Lou.c: 194:                  Servo2_grados(0);
  1452  019F  3000               	movlw	0
  1453  01A0  120A  158A  2495  120A  118A  	fcall	_Servo2_grados
  1454  01A5                     l3737:	
  1455                           
  1456                           ;Slave_Lou.c: 195:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  1457  01A5  3002               	movlw	2
  1458  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1459  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1460  01A8  00C9               	movwf	??_main+2
  1461  01A9  3045               	movlw	69
  1462  01AA  00C8               	movwf	??_main+1
  1463  01AB  30A9               	movlw	169
  1464  01AC  00C7               	movwf	??_main
  1465  01AD                     u1727:	
  1466  01AD  0BC7               	decfsz	??_main,f
  1467  01AE  29AD               	goto	u1727
  1468  01AF  0BC8               	decfsz	??_main+1,f
  1469  01B0  29AD               	goto	u1727
  1470  01B1  0BC9               	decfsz	??_main+2,f
  1471  01B2  29AD               	goto	u1727
  1472                           
  1473                           ;Slave_Lou.c: 196:                 Servo2_grados(10);
  1474  01B3  300A               	movlw	10
  1475  01B4  120A  158A  2495  120A  118A  	fcall	_Servo2_grados
  1476  01B9                     l3739:	
  1477                           
  1478                           ;Slave_Lou.c: 197:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  1479  01B9  3002               	movlw	2
  1480  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1481  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1482  01BC  00C9               	movwf	??_main+2
  1483  01BD  3045               	movlw	69
  1484  01BE  00C8               	movwf	??_main+1
  1485  01BF  30A9               	movlw	169
  1486  01C0  00C7               	movwf	??_main
  1487  01C1                     u1737:	
  1488  01C1  0BC7               	decfsz	??_main,f
  1489  01C2  29C1               	goto	u1737
  1490  01C3  0BC8               	decfsz	??_main+1,f
  1491  01C4  29C1               	goto	u1737
  1492  01C5  0BC9               	decfsz	??_main+2,f
  1493  01C6  29C1               	goto	u1737
  1494  01C7                     l3741:	
  1495                           
  1496                           ;Slave_Lou.c: 198:                 Servo2_grados(30);
  1497  01C7  301E               	movlw	30
  1498  01C8  120A  158A  2495  120A  118A  	fcall	_Servo2_grados
  1499                           
  1500                           ;Slave_Lou.c: 199:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  1501  01CD  3002               	movlw	2
  1502  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1503  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1504  01D0  00C9               	movwf	??_main+2
  1505  01D1  3045               	movlw	69
  1506  01D2  00C8               	movwf	??_main+1
  1507  01D3  30A9               	movlw	169
  1508  01D4  00C7               	movwf	??_main
  1509  01D5                     u1747:	
  1510  01D5  0BC7               	decfsz	??_main,f
  1511  01D6  29D5               	goto	u1747
  1512  01D7  0BC8               	decfsz	??_main+1,f
  1513  01D8  29D5               	goto	u1747
  1514  01D9  0BC9               	decfsz	??_main+2,f
  1515  01DA  29D5               	goto	u1747
  1516  01DB                     l3743:	
  1517                           
  1518                           ;Slave_Lou.c: 200:                 Servo2_grados(45);
  1519  01DB  302D               	movlw	45
  1520  01DC  120A  158A  2495  120A  118A  	fcall	_Servo2_grados
  1521  01E1                     l3745:	
  1522                           
  1523                           ;Slave_Lou.c: 202:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  1524  01E1  3002               	movlw	2
  1525  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1526  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1527  01E4  00C9               	movwf	??_main+2
  1528  01E5  3045               	movlw	69
  1529  01E6  00C8               	movwf	??_main+1
  1530  01E7  30A9               	movlw	169
  1531  01E8  00C7               	movwf	??_main
  1532  01E9                     u1757:	
  1533  01E9  0BC7               	decfsz	??_main,f
  1534  01EA  29E9               	goto	u1757
  1535  01EB  0BC8               	decfsz	??_main+1,f
  1536  01EC  29E9               	goto	u1757
  1537  01ED  0BC9               	decfsz	??_main+2,f
  1538  01EE  29E9               	goto	u1757
  1539                           
  1540                           ;Slave_Lou.c: 203:                 Servo2_grados(90);
  1541  01EF  305A               	movlw	90
  1542  01F0  120A  158A  2495  120A  118A  	fcall	_Servo2_grados
  1543  01F5                     l3747:	
  1544                           
  1545                           ;Slave_Lou.c: 204:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  1546  01F5  3002               	movlw	2
  1547  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1548  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1549  01F8  00C9               	movwf	??_main+2
  1550  01F9  3045               	movlw	69
  1551  01FA  00C8               	movwf	??_main+1
  1552  01FB  30A9               	movlw	169
  1553  01FC  00C7               	movwf	??_main
  1554  01FD                     u1767:	
  1555  01FD  0BC7               	decfsz	??_main,f
  1556  01FE  29FD               	goto	u1767
  1557  01FF  0BC8               	decfsz	??_main+1,f
  1558  0200  29FD               	goto	u1767
  1559  0201  0BC9               	decfsz	??_main+2,f
  1560  0202  29FD               	goto	u1767
  1561  0203                     l3749:	
  1562                           
  1563                           ;Slave_Lou.c: 205:                 Servo2_grados(120);
  1564  0203  3078               	movlw	120
  1565  0204  120A  158A  2495  120A  118A  	fcall	_Servo2_grados
  1566                           
  1567                           ;Slave_Lou.c: 206:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  1568  0209  3002               	movlw	2
  1569  020A  1283               	bcf	3,5	;RP0=0, select bank0
  1570  020B  1303               	bcf	3,6	;RP1=0, select bank0
  1571  020C  00C9               	movwf	??_main+2
  1572  020D  3045               	movlw	69
  1573  020E  00C8               	movwf	??_main+1
  1574  020F  30A9               	movlw	169
  1575  0210  00C7               	movwf	??_main
  1576  0211                     u1777:	
  1577  0211  0BC7               	decfsz	??_main,f
  1578  0212  2A11               	goto	u1777
  1579  0213  0BC8               	decfsz	??_main+1,f
  1580  0214  2A11               	goto	u1777
  1581  0215  0BC9               	decfsz	??_main+2,f
  1582  0216  2A11               	goto	u1777
  1583  0217                     l3751:	
  1584                           
  1585                           ;Slave_Lou.c: 207:                 Servo2_grados(150);
  1586  0217  3096               	movlw	150
  1587  0218  120A  158A  2495  120A  118A  	fcall	_Servo2_grados
  1588  021D                     l3753:	
  1589                           
  1590                           ;Slave_Lou.c: 208:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  1591  021D  3002               	movlw	2
  1592  021E  1283               	bcf	3,5	;RP0=0, select bank0
  1593  021F  1303               	bcf	3,6	;RP1=0, select bank0
  1594  0220  00C9               	movwf	??_main+2
  1595  0221  3045               	movlw	69
  1596  0222  00C8               	movwf	??_main+1
  1597  0223  30A9               	movlw	169
  1598  0224  00C7               	movwf	??_main
  1599  0225                     u1787:	
  1600  0225  0BC7               	decfsz	??_main,f
  1601  0226  2A25               	goto	u1787
  1602  0227  0BC8               	decfsz	??_main+1,f
  1603  0228  2A25               	goto	u1787
  1604  0229  0BC9               	decfsz	??_main+2,f
  1605  022A  2A25               	goto	u1787
  1606                           
  1607                           ;Slave_Lou.c: 209:                 Servo2_grados(180);
  1608  022B  30B4               	movlw	180
  1609  022C  120A  158A  2495  120A  118A  	fcall	_Servo2_grados
  1610  0231                     l3755:	
  1611                           
  1612                           ;Slave_Lou.c: 212:             ESTADO = 0;
  1613  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1614  0232  1303               	bcf	3,6	;RP1=0, select bank0
  1615  0233  01B0               	clrf	_ESTADO
  1616  0234                     l3757:	
  1617                           
  1618                           ;Slave_Lou.c: 216:         if (PORTEbits.RE1 == 1){
  1619  0234  1C89               	btfss	9,1	;volatile
  1620  0235  2A37               	goto	u1321
  1621  0236  2A38               	goto	u1320
  1622  0237                     u1321:	
  1623  0237  2B35               	goto	l3797
  1624  0238                     u1320:	
  1625  0238                     l3759:	
  1626                           
  1627                           ;Slave_Lou.c: 217:             ESTADO2 = 1;
  1628  0238  01AF               	clrf	_ESTADO2
  1629  0239  0AAF               	incf	_ESTADO2,f
  1630  023A                     l3761:	
  1631                           
  1632                           ;Slave_Lou.c: 218:             _delay((unsigned long)((250)*(1000000/4000000.0)));
  1633  023A  3013               	movlw	19
  1634  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1635  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1636  023D  00C7               	movwf	??_main
  1637  023E                     u1797:	
  1638  023E  0BC7               	decfsz	??_main,f
  1639  023F  2A3E               	goto	u1797
  1640  0240  2A41               	nop2
  1641  0241                     l3763:	
  1642                           
  1643                           ;Slave_Lou.c: 220:             if (ESTADO2 == 1 && PORTEbits.RE1 == 0) {
  1644  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1645  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1646  0243  032F               	decf	_ESTADO2,w
  1647  0244  1D03               	btfss	3,2
  1648  0245  2A47               	goto	u1331
  1649  0246  2A48               	goto	u1330
  1650  0247                     u1331:	
  1651  0247  2B32               	goto	l3795
  1652  0248                     u1330:	
  1653  0248                     l3765:	
  1654  0248  1889               	btfsc	9,1	;volatile
  1655  0249  2A4B               	goto	u1341
  1656  024A  2A4C               	goto	u1340
  1657  024B                     u1341:	
  1658  024B  2B32               	goto	l3795
  1659  024C                     u1340:	
  1660  024C                     l3767:	
  1661                           
  1662                           ;Slave_Lou.c: 222:                  Stepper_CW(360);
  1663  024C  3068               	movlw	104
  1664  024D  00F2               	movwf	Stepper_CW@Step_grados_cw
  1665  024E  3001               	movlw	1
  1666  024F  00F3               	movwf	Stepper_CW@Step_grados_cw+1
  1667  0250  120A  118A  24E9  120A  118A  	fcall	_Stepper_CW
  1668  0255                     l3769:	
  1669                           
  1670                           ;Slave_Lou.c: 223:                  _delay((unsigned long)((1000)*(1000000/4000.0)));
  1671  0255  3002               	movlw	2
  1672  0256  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0257  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0258  00C9               	movwf	??_main+2
  1675  0259  3045               	movlw	69
  1676  025A  00C8               	movwf	??_main+1
  1677  025B  30A9               	movlw	169
  1678  025C  00C7               	movwf	??_main
  1679  025D                     u1807:	
  1680  025D  0BC7               	decfsz	??_main,f
  1681  025E  2A5D               	goto	u1807
  1682  025F  0BC8               	decfsz	??_main+1,f
  1683  0260  2A5D               	goto	u1807
  1684  0261  0BC9               	decfsz	??_main+2,f
  1685  0262  2A5D               	goto	u1807
  1686  0263                     l3771:	
  1687                           
  1688                           ;Slave_Lou.c: 224:                  Stepper_CW(180);
  1689  0263  30B4               	movlw	180
  1690  0264  00F2               	movwf	Stepper_CW@Step_grados_cw
  1691  0265  3000               	movlw	0
  1692  0266  00F3               	movwf	Stepper_CW@Step_grados_cw+1
  1693  0267  120A  118A  24E9  120A  118A  	fcall	_Stepper_CW
  1694                           
  1695                           ;Slave_Lou.c: 225:                  _delay((unsigned long)((1000)*(1000000/4000.0)));
  1696  026C  3002               	movlw	2
  1697  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1698  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1699  026F  00C9               	movwf	??_main+2
  1700  0270  3045               	movlw	69
  1701  0271  00C8               	movwf	??_main+1
  1702  0272  30A9               	movlw	169
  1703  0273  00C7               	movwf	??_main
  1704  0274                     u1817:	
  1705  0274  0BC7               	decfsz	??_main,f
  1706  0275  2A74               	goto	u1817
  1707  0276  0BC8               	decfsz	??_main+1,f
  1708  0277  2A74               	goto	u1817
  1709  0278  0BC9               	decfsz	??_main+2,f
  1710  0279  2A74               	goto	u1817
  1711  027A                     l3773:	
  1712                           
  1713                           ;Slave_Lou.c: 226:                  Stepper_CW(90);
  1714  027A  305A               	movlw	90
  1715  027B  00F2               	movwf	Stepper_CW@Step_grados_cw
  1716  027C  3000               	movlw	0
  1717  027D  00F3               	movwf	Stepper_CW@Step_grados_cw+1
  1718  027E  120A  118A  24E9  120A  118A  	fcall	_Stepper_CW
  1719  0283                     l3775:	
  1720                           
  1721                           ;Slave_Lou.c: 227:                  _delay((unsigned long)((1000)*(1000000/4000.0)));
  1722  0283  3002               	movlw	2
  1723  0284  1283               	bcf	3,5	;RP0=0, select bank0
  1724  0285  1303               	bcf	3,6	;RP1=0, select bank0
  1725  0286  00C9               	movwf	??_main+2
  1726  0287  3045               	movlw	69
  1727  0288  00C8               	movwf	??_main+1
  1728  0289  30A9               	movlw	169
  1729  028A  00C7               	movwf	??_main
  1730  028B                     u1827:	
  1731  028B  0BC7               	decfsz	??_main,f
  1732  028C  2A8B               	goto	u1827
  1733  028D  0BC8               	decfsz	??_main+1,f
  1734  028E  2A8B               	goto	u1827
  1735  028F  0BC9               	decfsz	??_main+2,f
  1736  0290  2A8B               	goto	u1827
  1737                           
  1738                           ;Slave_Lou.c: 228:                  Stepper_CW(45);
  1739  0291  302D               	movlw	45
  1740  0292  00F2               	movwf	Stepper_CW@Step_grados_cw
  1741  0293  3000               	movlw	0
  1742  0294  00F3               	movwf	Stepper_CW@Step_grados_cw+1
  1743  0295  120A  118A  24E9  120A  118A  	fcall	_Stepper_CW
  1744  029A                     l3777:	
  1745                           
  1746                           ;Slave_Lou.c: 229:                  _delay((unsigned long)((1000)*(1000000/4000.0)));
  1747  029A  3002               	movlw	2
  1748  029B  1283               	bcf	3,5	;RP0=0, select bank0
  1749  029C  1303               	bcf	3,6	;RP1=0, select bank0
  1750  029D  00C9               	movwf	??_main+2
  1751  029E  3045               	movlw	69
  1752  029F  00C8               	movwf	??_main+1
  1753  02A0  30A9               	movlw	169
  1754  02A1  00C7               	movwf	??_main
  1755  02A2                     u1837:	
  1756  02A2  0BC7               	decfsz	??_main,f
  1757  02A3  2AA2               	goto	u1837
  1758  02A4  0BC8               	decfsz	??_main+1,f
  1759  02A5  2AA2               	goto	u1837
  1760  02A6  0BC9               	decfsz	??_main+2,f
  1761  02A7  2AA2               	goto	u1837
  1762  02A8                     l3779:	
  1763                           
  1764                           ;Slave_Lou.c: 230:                  Stepper_CW(15);
  1765  02A8  300F               	movlw	15
  1766  02A9  00F2               	movwf	Stepper_CW@Step_grados_cw
  1767  02AA  3000               	movlw	0
  1768  02AB  00F3               	movwf	Stepper_CW@Step_grados_cw+1
  1769  02AC  120A  118A  24E9  120A  118A  	fcall	_Stepper_CW
  1770                           
  1771                           ;Slave_Lou.c: 231:                  _delay((unsigned long)((1000)*(1000000/4000.0)));
  1772  02B1  3002               	movlw	2
  1773  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  1774  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  1775  02B4  00C9               	movwf	??_main+2
  1776  02B5  3045               	movlw	69
  1777  02B6  00C8               	movwf	??_main+1
  1778  02B7  30A9               	movlw	169
  1779  02B8  00C7               	movwf	??_main
  1780  02B9                     u1847:	
  1781  02B9  0BC7               	decfsz	??_main,f
  1782  02BA  2AB9               	goto	u1847
  1783  02BB  0BC8               	decfsz	??_main+1,f
  1784  02BC  2AB9               	goto	u1847
  1785  02BD  0BC9               	decfsz	??_main+2,f
  1786  02BE  2AB9               	goto	u1847
  1787  02BF                     l3781:	
  1788                           
  1789                           ;Slave_Lou.c: 235:                  Stepper_CCW(360);
  1790  02BF  3068               	movlw	104
  1791  02C0  00F2               	movwf	Stepper_CCW@Step_grados_ccw
  1792  02C1  3001               	movlw	1
  1793  02C2  00F3               	movwf	Stepper_CCW@Step_grados_ccw+1
  1794  02C3  120A  158A  2621  120A  118A  	fcall	_Stepper_CCW
  1795  02C8                     l3783:	
  1796                           
  1797                           ;Slave_Lou.c: 236:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  1798  02C8  3002               	movlw	2
  1799  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  1800  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  1801  02CB  00C9               	movwf	??_main+2
  1802  02CC  3045               	movlw	69
  1803  02CD  00C8               	movwf	??_main+1
  1804  02CE  30A9               	movlw	169
  1805  02CF  00C7               	movwf	??_main
  1806  02D0                     u1857:	
  1807  02D0  0BC7               	decfsz	??_main,f
  1808  02D1  2AD0               	goto	u1857
  1809  02D2  0BC8               	decfsz	??_main+1,f
  1810  02D3  2AD0               	goto	u1857
  1811  02D4  0BC9               	decfsz	??_main+2,f
  1812  02D5  2AD0               	goto	u1857
  1813                           
  1814                           ;Slave_Lou.c: 237:                 Stepper_CCW(180);
  1815  02D6  30B4               	movlw	180
  1816  02D7  00F2               	movwf	Stepper_CCW@Step_grados_ccw
  1817  02D8  3000               	movlw	0
  1818  02D9  00F3               	movwf	Stepper_CCW@Step_grados_ccw+1
  1819  02DA  120A  158A  2621  120A  118A  	fcall	_Stepper_CCW
  1820  02DF                     l3785:	
  1821                           
  1822                           ;Slave_Lou.c: 238:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  1823  02DF  3002               	movlw	2
  1824  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  1825  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  1826  02E2  00C9               	movwf	??_main+2
  1827  02E3  3045               	movlw	69
  1828  02E4  00C8               	movwf	??_main+1
  1829  02E5  30A9               	movlw	169
  1830  02E6  00C7               	movwf	??_main
  1831  02E7                     u1867:	
  1832  02E7  0BC7               	decfsz	??_main,f
  1833  02E8  2AE7               	goto	u1867
  1834  02E9  0BC8               	decfsz	??_main+1,f
  1835  02EA  2AE7               	goto	u1867
  1836  02EB  0BC9               	decfsz	??_main+2,f
  1837  02EC  2AE7               	goto	u1867
  1838  02ED                     l3787:	
  1839                           
  1840                           ;Slave_Lou.c: 239:                 Stepper_CCW(90);
  1841  02ED  305A               	movlw	90
  1842  02EE  00F2               	movwf	Stepper_CCW@Step_grados_ccw
  1843  02EF  3000               	movlw	0
  1844  02F0  00F3               	movwf	Stepper_CCW@Step_grados_ccw+1
  1845  02F1  120A  158A  2621  120A  118A  	fcall	_Stepper_CCW
  1846                           
  1847                           ;Slave_Lou.c: 240:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  1848  02F6  3002               	movlw	2
  1849  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  1850  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  1851  02F9  00C9               	movwf	??_main+2
  1852  02FA  3045               	movlw	69
  1853  02FB  00C8               	movwf	??_main+1
  1854  02FC  30A9               	movlw	169
  1855  02FD  00C7               	movwf	??_main
  1856  02FE                     u1877:	
  1857  02FE  0BC7               	decfsz	??_main,f
  1858  02FF  2AFE               	goto	u1877
  1859  0300  0BC8               	decfsz	??_main+1,f
  1860  0301  2AFE               	goto	u1877
  1861  0302  0BC9               	decfsz	??_main+2,f
  1862  0303  2AFE               	goto	u1877
  1863  0304                     l3789:	
  1864                           
  1865                           ;Slave_Lou.c: 241:                 Stepper_CCW(45);
  1866  0304  302D               	movlw	45
  1867  0305  00F2               	movwf	Stepper_CCW@Step_grados_ccw
  1868  0306  3000               	movlw	0
  1869  0307  00F3               	movwf	Stepper_CCW@Step_grados_ccw+1
  1870  0308  120A  158A  2621  120A  118A  	fcall	_Stepper_CCW
  1871  030D                     l3791:	
  1872                           
  1873                           ;Slave_Lou.c: 242:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  1874  030D  3002               	movlw	2
  1875  030E  1283               	bcf	3,5	;RP0=0, select bank0
  1876  030F  1303               	bcf	3,6	;RP1=0, select bank0
  1877  0310  00C9               	movwf	??_main+2
  1878  0311  3045               	movlw	69
  1879  0312  00C8               	movwf	??_main+1
  1880  0313  30A9               	movlw	169
  1881  0314  00C7               	movwf	??_main
  1882  0315                     u1887:	
  1883  0315  0BC7               	decfsz	??_main,f
  1884  0316  2B15               	goto	u1887
  1885  0317  0BC8               	decfsz	??_main+1,f
  1886  0318  2B15               	goto	u1887
  1887  0319  0BC9               	decfsz	??_main+2,f
  1888  031A  2B15               	goto	u1887
  1889                           
  1890                           ;Slave_Lou.c: 243:                 Stepper_CCW(15);
  1891  031B  300F               	movlw	15
  1892  031C  00F2               	movwf	Stepper_CCW@Step_grados_ccw
  1893  031D  3000               	movlw	0
  1894  031E  00F3               	movwf	Stepper_CCW@Step_grados_ccw+1
  1895  031F  120A  158A  2621  120A  118A  	fcall	_Stepper_CCW
  1896  0324                     l3793:	
  1897                           
  1898                           ;Slave_Lou.c: 244:                 _delay((unsigned long)((1000)*(1000000/4000.0)));
  1899  0324  3002               	movlw	2
  1900  0325  1283               	bcf	3,5	;RP0=0, select bank0
  1901  0326  1303               	bcf	3,6	;RP1=0, select bank0
  1902  0327  00C9               	movwf	??_main+2
  1903  0328  3045               	movlw	69
  1904  0329  00C8               	movwf	??_main+1
  1905  032A  30A9               	movlw	169
  1906  032B  00C7               	movwf	??_main
  1907  032C                     u1897:	
  1908  032C  0BC7               	decfsz	??_main,f
  1909  032D  2B2C               	goto	u1897
  1910  032E  0BC8               	decfsz	??_main+1,f
  1911  032F  2B2C               	goto	u1897
  1912  0330  0BC9               	decfsz	??_main+2,f
  1913  0331  2B2C               	goto	u1897
  1914  0332                     l3795:	
  1915                           
  1916                           ;Slave_Lou.c: 247:             ESTADO2 = 0;
  1917  0332  1283               	bcf	3,5	;RP0=0, select bank0
  1918  0333  1303               	bcf	3,6	;RP1=0, select bank0
  1919  0334  01AF               	clrf	_ESTADO2
  1920  0335                     l3797:	
  1921                           
  1922                           ;Slave_Lou.c: 254:         if (Humedad_H == 0xFF){
  1923  0335  0A2C               	incf	_Humedad_H,w
  1924  0336  042D               	iorwf	_Humedad_H+1,w
  1925  0337  1D03               	btfss	3,2
  1926  0338  2B3A               	goto	u1351
  1927  0339  2B3B               	goto	u1350
  1928  033A                     u1351:	
  1929  033A  2B4E               	goto	l3803
  1930  033B                     u1350:	
  1931  033B                     l3799:	
  1932                           
  1933                           ;Slave_Lou.c: 255:             LCD_CURSOR(2,7);
  1934  033B  3002               	movlw	2
  1935  033C  00F5               	movwf	LCD_CURSOR@a
  1936  033D  3000               	movlw	0
  1937  033E  00F6               	movwf	LCD_CURSOR@a+1
  1938  033F  3007               	movlw	7
  1939  0340  00F7               	movwf	LCD_CURSOR@b
  1940  0341  3000               	movlw	0
  1941  0342  00F8               	movwf	LCD_CURSOR@b+1
  1942  0343  120A  158A  2413  120A  118A  	fcall	_LCD_CURSOR
  1943  0348                     l3801:	
  1944                           
  1945                           ;Slave_Lou.c: 256:             LCD_STRING("  0%");
  1946  0348  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1947  0349  120A  158A  23A3  120A  118A  	fcall	_LCD_STRING
  1948  034E                     l3803:	
  1949                           
  1950                           ;Slave_Lou.c: 261:         if ((dec == 9 || dec == 0) && (uni >= 6 || uni == 0) ){
  1951  034E  3009               	movlw	9
  1952  034F  1283               	bcf	3,5	;RP0=0, select bank0
  1953  0350  1303               	bcf	3,6	;RP1=0, select bank0
  1954  0351  0635               	xorwf	_dec,w
  1955  0352  1903               	btfsc	3,2
  1956  0353  2B55               	goto	u1361
  1957  0354  2B56               	goto	u1360
  1958  0355                     u1361:	
  1959  0355  2B5B               	goto	l3807
  1960  0356                     u1360:	
  1961  0356                     l3805:	
  1962  0356  0835               	movf	_dec,w
  1963  0357  1D03               	btfss	3,2
  1964  0358  2B5A               	goto	u1371
  1965  0359  2B5B               	goto	u1370
  1966  035A                     u1371:	
  1967  035A  2B79               	goto	l3815
  1968  035B                     u1370:	
  1969  035B                     l3807:	
  1970  035B  3006               	movlw	6
  1971  035C  027B               	subwf	_uni,w
  1972  035D  1803               	skipnc
  1973  035E  2B60               	goto	u1381
  1974  035F  2B61               	goto	u1380
  1975  0360                     u1381:	
  1976  0360  2B66               	goto	l3811
  1977  0361                     u1380:	
  1978  0361                     l3809:	
  1979  0361  087B               	movf	_uni,w
  1980  0362  1D03               	btfss	3,2
  1981  0363  2B65               	goto	u1391
  1982  0364  2B66               	goto	u1390
  1983  0365                     u1391:	
  1984  0365  2B79               	goto	l3815
  1985  0366                     u1390:	
  1986  0366                     l3811:	
  1987                           
  1988                           ;Slave_Lou.c: 262:             LCD_CURSOR(2,7);
  1989  0366  3002               	movlw	2
  1990  0367  00F5               	movwf	LCD_CURSOR@a
  1991  0368  3000               	movlw	0
  1992  0369  00F6               	movwf	LCD_CURSOR@a+1
  1993  036A  3007               	movlw	7
  1994  036B  00F7               	movwf	LCD_CURSOR@b
  1995  036C  3000               	movlw	0
  1996  036D  00F8               	movwf	LCD_CURSOR@b+1
  1997  036E  120A  158A  2413  120A  118A  	fcall	_LCD_CURSOR
  1998  0373                     l3813:	
  1999                           
  2000                           ;Slave_Lou.c: 263:             LCD_STRING("  0%");
  2001  0373  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2002  0374  120A  158A  23A3  120A  118A  	fcall	_LCD_STRING
  2003  0379                     l3815:	
  2004                           
  2005                           ;Slave_Lou.c: 267:         if ( dec == 9 ){
  2006  0379  3009               	movlw	9
  2007  037A  1283               	bcf	3,5	;RP0=0, select bank0
  2008  037B  1303               	bcf	3,6	;RP1=0, select bank0
  2009  037C  0635               	xorwf	_dec,w
  2010  037D  1D03               	btfss	3,2
  2011  037E  2B80               	goto	u1401
  2012  037F  2B81               	goto	u1400
  2013  0380                     u1401:	
  2014  0380  2B9A               	goto	l3823
  2015  0381                     u1400:	
  2016  0381                     l3817:	
  2017                           
  2018                           ;Slave_Lou.c: 268:             if(uni >= 0 && uni < 5 ){
  2019  0381  3005               	movlw	5
  2020  0382  027B               	subwf	_uni,w
  2021  0383  1803               	skipnc
  2022  0384  2B86               	goto	u1411
  2023  0385  2B87               	goto	u1410
  2024  0386                     u1411:	
  2025  0386  2B9A               	goto	l3823
  2026  0387                     u1410:	
  2027  0387                     l3819:	
  2028                           
  2029                           ;Slave_Lou.c: 269:             LCD_CURSOR(2,7);
  2030  0387  3002               	movlw	2
  2031  0388  00F5               	movwf	LCD_CURSOR@a
  2032  0389  3000               	movlw	0
  2033  038A  00F6               	movwf	LCD_CURSOR@a+1
  2034  038B  3007               	movlw	7
  2035  038C  00F7               	movwf	LCD_CURSOR@b
  2036  038D  3000               	movlw	0
  2037  038E  00F8               	movwf	LCD_CURSOR@b+1
  2038  038F  120A  158A  2413  120A  118A  	fcall	_LCD_CURSOR
  2039  0394                     l3821:	
  2040                           
  2041                           ;Slave_Lou.c: 270:             LCD_STRING(" 10%");
  2042  0394  301C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2043  0395  120A  158A  23A3  120A  118A  	fcall	_LCD_STRING
  2044  039A                     l3823:	
  2045                           
  2046                           ;Slave_Lou.c: 275:         if ( dec == 8 ){
  2047  039A  3008               	movlw	8
  2048  039B  1283               	bcf	3,5	;RP0=0, select bank0
  2049  039C  1303               	bcf	3,6	;RP1=0, select bank0
  2050  039D  0635               	xorwf	_dec,w
  2051  039E  1D03               	btfss	3,2
  2052  039F  2BA1               	goto	u1421
  2053  03A0  2BA2               	goto	u1420
  2054  03A1                     u1421:	
  2055  03A1  2BBB               	goto	l3831
  2056  03A2                     u1420:	
  2057  03A2                     l3825:	
  2058                           
  2059                           ;Slave_Lou.c: 276:             if(uni >= 0 && uni < 9 ){
  2060  03A2  3009               	movlw	9
  2061  03A3  027B               	subwf	_uni,w
  2062  03A4  1803               	skipnc
  2063  03A5  2BA7               	goto	u1431
  2064  03A6  2BA8               	goto	u1430
  2065  03A7                     u1431:	
  2066  03A7  2BBB               	goto	l3831
  2067  03A8                     u1430:	
  2068  03A8                     l3827:	
  2069                           
  2070                           ;Slave_Lou.c: 277:             LCD_CURSOR(2,7);
  2071  03A8  3002               	movlw	2
  2072  03A9  00F5               	movwf	LCD_CURSOR@a
  2073  03AA  3000               	movlw	0
  2074  03AB  00F6               	movwf	LCD_CURSOR@a+1
  2075  03AC  3007               	movlw	7
  2076  03AD  00F7               	movwf	LCD_CURSOR@b
  2077  03AE  3000               	movlw	0
  2078  03AF  00F8               	movwf	LCD_CURSOR@b+1
  2079  03B0  120A  158A  2413  120A  118A  	fcall	_LCD_CURSOR
  2080  03B5                     l3829:	
  2081                           
  2082                           ;Slave_Lou.c: 278:             LCD_STRING(" 20%");
  2083  03B5  3021               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2084  03B6  120A  158A  23A3  120A  118A  	fcall	_LCD_STRING
  2085  03BB                     l3831:	
  2086                           
  2087                           ;Slave_Lou.c: 283:         if ( dec == 7 ){
  2088  03BB  3007               	movlw	7
  2089  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2090  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2091  03BE  0635               	xorwf	_dec,w
  2092  03BF  1D03               	btfss	3,2
  2093  03C0  2BC2               	goto	u1441
  2094  03C1  2BC3               	goto	u1440
  2095  03C2                     u1441:	
  2096  03C2  2BDC               	goto	l3839
  2097  03C3                     u1440:	
  2098  03C3                     l3833:	
  2099                           
  2100                           ;Slave_Lou.c: 284:             if(uni >= 0 && uni < 9 ){
  2101  03C3  3009               	movlw	9
  2102  03C4  027B               	subwf	_uni,w
  2103  03C5  1803               	skipnc
  2104  03C6  2BC8               	goto	u1451
  2105  03C7  2BC9               	goto	u1450
  2106  03C8                     u1451:	
  2107  03C8  2BDC               	goto	l3839
  2108  03C9                     u1450:	
  2109  03C9                     l3835:	
  2110                           
  2111                           ;Slave_Lou.c: 285:             LCD_CURSOR(2,7);
  2112  03C9  3002               	movlw	2
  2113  03CA  00F5               	movwf	LCD_CURSOR@a
  2114  03CB  3000               	movlw	0
  2115  03CC  00F6               	movwf	LCD_CURSOR@a+1
  2116  03CD  3007               	movlw	7
  2117  03CE  00F7               	movwf	LCD_CURSOR@b
  2118  03CF  3000               	movlw	0
  2119  03D0  00F8               	movwf	LCD_CURSOR@b+1
  2120  03D1  120A  158A  2413  120A  118A  	fcall	_LCD_CURSOR
  2121  03D6                     l3837:	
  2122                           
  2123                           ;Slave_Lou.c: 286:             LCD_STRING(" 30%");
  2124  03D6  3026               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2125  03D7  120A  158A  23A3  120A  118A  	fcall	_LCD_STRING
  2126  03DC                     l3839:	
  2127                           
  2128                           ;Slave_Lou.c: 291:         if ( dec == 6 ){
  2129  03DC  3006               	movlw	6
  2130  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2131  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2132  03DF  0635               	xorwf	_dec,w
  2133  03E0  1D03               	btfss	3,2
  2134  03E1  2BE3               	goto	u1461
  2135  03E2  2BE4               	goto	u1460
  2136  03E3                     u1461:	
  2137  03E3  2BFD               	goto	l3847
  2138  03E4                     u1460:	
  2139  03E4                     l3841:	
  2140                           
  2141                           ;Slave_Lou.c: 292:             if(uni >= 0 && uni < 9 ){
  2142  03E4  3009               	movlw	9
  2143  03E5  027B               	subwf	_uni,w
  2144  03E6  1803               	skipnc
  2145  03E7  2BE9               	goto	u1471
  2146  03E8  2BEA               	goto	u1470
  2147  03E9                     u1471:	
  2148  03E9  2BFD               	goto	l3847
  2149  03EA                     u1470:	
  2150  03EA                     l3843:	
  2151                           
  2152                           ;Slave_Lou.c: 293:             LCD_CURSOR(2,7);
  2153  03EA  3002               	movlw	2
  2154  03EB  00F5               	movwf	LCD_CURSOR@a
  2155  03EC  3000               	movlw	0
  2156  03ED  00F6               	movwf	LCD_CURSOR@a+1
  2157  03EE  3007               	movlw	7
  2158  03EF  00F7               	movwf	LCD_CURSOR@b
  2159  03F0  3000               	movlw	0
  2160  03F1  00F8               	movwf	LCD_CURSOR@b+1
  2161  03F2  120A  158A  2413  120A  118A  	fcall	_LCD_CURSOR
  2162  03F7                     l3845:	
  2163                           
  2164                           ;Slave_Lou.c: 294:             LCD_STRING(" 40%");
  2165  03F7  302B               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2166  03F8  120A  158A  23A3  120A  118A  	fcall	_LCD_STRING
  2167  03FD                     l3847:	
  2168                           
  2169                           ;Slave_Lou.c: 299:         if ( dec == 5 ){
  2170  03FD  3005               	movlw	5
  2171  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  2172  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  2173  0400  0635               	xorwf	_dec,w
  2174  0401  1D03               	btfss	3,2
  2175  0402  2C04               	goto	u1481
  2176  0403  2C05               	goto	u1480
  2177  0404                     u1481:	
  2178  0404  2C1E               	goto	l3855
  2179  0405                     u1480:	
  2180  0405                     l3849:	
  2181                           
  2182                           ;Slave_Lou.c: 300:             if(uni >= 0 && uni < 9 ){
  2183  0405  3009               	movlw	9
  2184  0406  027B               	subwf	_uni,w
  2185  0407  1803               	skipnc
  2186  0408  2C0A               	goto	u1491
  2187  0409  2C0B               	goto	u1490
  2188  040A                     u1491:	
  2189  040A  2C1E               	goto	l3855
  2190  040B                     u1490:	
  2191  040B                     l3851:	
  2192                           
  2193                           ;Slave_Lou.c: 301:             LCD_CURSOR(2,7);
  2194  040B  3002               	movlw	2
  2195  040C  00F5               	movwf	LCD_CURSOR@a
  2196  040D  3000               	movlw	0
  2197  040E  00F6               	movwf	LCD_CURSOR@a+1
  2198  040F  3007               	movlw	7
  2199  0410  00F7               	movwf	LCD_CURSOR@b
  2200  0411  3000               	movlw	0
  2201  0412  00F8               	movwf	LCD_CURSOR@b+1
  2202  0413  120A  158A  2413  120A  118A  	fcall	_LCD_CURSOR
  2203  0418                     l3853:	
  2204                           
  2205                           ;Slave_Lou.c: 302:             LCD_STRING(" 50%");
  2206  0418  3030               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2207  0419  120A  158A  23A3  120A  118A  	fcall	_LCD_STRING
  2208  041E                     l3855:	
  2209                           
  2210                           ;Slave_Lou.c: 307:         if ( dec == 4 ){
  2211  041E  3004               	movlw	4
  2212  041F  1283               	bcf	3,5	;RP0=0, select bank0
  2213  0420  1303               	bcf	3,6	;RP1=0, select bank0
  2214  0421  0635               	xorwf	_dec,w
  2215  0422  1D03               	btfss	3,2
  2216  0423  2C25               	goto	u1501
  2217  0424  2C26               	goto	u1500
  2218  0425                     u1501:	
  2219  0425  2C3F               	goto	l3863
  2220  0426                     u1500:	
  2221  0426                     l3857:	
  2222                           
  2223                           ;Slave_Lou.c: 308:             if(uni >= 0 && uni < 9 ){
  2224  0426  3009               	movlw	9
  2225  0427  027B               	subwf	_uni,w
  2226  0428  1803               	skipnc
  2227  0429  2C2B               	goto	u1511
  2228  042A  2C2C               	goto	u1510
  2229  042B                     u1511:	
  2230  042B  2C3F               	goto	l3863
  2231  042C                     u1510:	
  2232  042C                     l3859:	
  2233                           
  2234                           ;Slave_Lou.c: 309:             LCD_CURSOR(2,7);
  2235  042C  3002               	movlw	2
  2236  042D  00F5               	movwf	LCD_CURSOR@a
  2237  042E  3000               	movlw	0
  2238  042F  00F6               	movwf	LCD_CURSOR@a+1
  2239  0430  3007               	movlw	7
  2240  0431  00F7               	movwf	LCD_CURSOR@b
  2241  0432  3000               	movlw	0
  2242  0433  00F8               	movwf	LCD_CURSOR@b+1
  2243  0434  120A  158A  2413  120A  118A  	fcall	_LCD_CURSOR
  2244  0439                     l3861:	
  2245                           
  2246                           ;Slave_Lou.c: 310:             LCD_STRING(" 60%");
  2247  0439  3035               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2248  043A  120A  158A  23A3  120A  118A  	fcall	_LCD_STRING
  2249  043F                     l3863:	
  2250                           
  2251                           ;Slave_Lou.c: 315:         if ( dec == 3 ){
  2252  043F  3003               	movlw	3
  2253  0440  1283               	bcf	3,5	;RP0=0, select bank0
  2254  0441  1303               	bcf	3,6	;RP1=0, select bank0
  2255  0442  0635               	xorwf	_dec,w
  2256  0443  1D03               	btfss	3,2
  2257  0444  2C46               	goto	u1521
  2258  0445  2C47               	goto	u1520
  2259  0446                     u1521:	
  2260  0446  2C60               	goto	l3871
  2261  0447                     u1520:	
  2262  0447                     l3865:	
  2263                           
  2264                           ;Slave_Lou.c: 316:             if(uni >= 0 && uni < 9 ){
  2265  0447  3009               	movlw	9
  2266  0448  027B               	subwf	_uni,w
  2267  0449  1803               	skipnc
  2268  044A  2C4C               	goto	u1531
  2269  044B  2C4D               	goto	u1530
  2270  044C                     u1531:	
  2271  044C  2C60               	goto	l3871
  2272  044D                     u1530:	
  2273  044D                     l3867:	
  2274                           
  2275                           ;Slave_Lou.c: 317:             LCD_CURSOR(2,7);
  2276  044D  3002               	movlw	2
  2277  044E  00F5               	movwf	LCD_CURSOR@a
  2278  044F  3000               	movlw	0
  2279  0450  00F6               	movwf	LCD_CURSOR@a+1
  2280  0451  3007               	movlw	7
  2281  0452  00F7               	movwf	LCD_CURSOR@b
  2282  0453  3000               	movlw	0
  2283  0454  00F8               	movwf	LCD_CURSOR@b+1
  2284  0455  120A  158A  2413  120A  118A  	fcall	_LCD_CURSOR
  2285  045A                     l3869:	
  2286                           
  2287                           ;Slave_Lou.c: 318:             LCD_STRING(" 70%");
  2288  045A  303A               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2289  045B  120A  158A  23A3  120A  118A  	fcall	_LCD_STRING
  2290  0460                     l3871:	
  2291                           
  2292                           ;Slave_Lou.c: 323:         if ( dec == 2 ){
  2293  0460  3002               	movlw	2
  2294  0461  1283               	bcf	3,5	;RP0=0, select bank0
  2295  0462  1303               	bcf	3,6	;RP1=0, select bank0
  2296  0463  0635               	xorwf	_dec,w
  2297  0464  1D03               	btfss	3,2
  2298  0465  2C67               	goto	u1541
  2299  0466  2C68               	goto	u1540
  2300  0467                     u1541:	
  2301  0467  2C81               	goto	l3879
  2302  0468                     u1540:	
  2303  0468                     l3873:	
  2304                           
  2305                           ;Slave_Lou.c: 324:             if(uni >= 0 && uni < 9 ){
  2306  0468  3009               	movlw	9
  2307  0469  027B               	subwf	_uni,w
  2308  046A  1803               	skipnc
  2309  046B  2C6D               	goto	u1551
  2310  046C  2C6E               	goto	u1550
  2311  046D                     u1551:	
  2312  046D  2C81               	goto	l3879
  2313  046E                     u1550:	
  2314  046E                     l3875:	
  2315                           
  2316                           ;Slave_Lou.c: 325:             LCD_CURSOR(2,7);
  2317  046E  3002               	movlw	2
  2318  046F  00F5               	movwf	LCD_CURSOR@a
  2319  0470  3000               	movlw	0
  2320  0471  00F6               	movwf	LCD_CURSOR@a+1
  2321  0472  3007               	movlw	7
  2322  0473  00F7               	movwf	LCD_CURSOR@b
  2323  0474  3000               	movlw	0
  2324  0475  00F8               	movwf	LCD_CURSOR@b+1
  2325  0476  120A  158A  2413  120A  118A  	fcall	_LCD_CURSOR
  2326  047B                     l3877:	
  2327                           
  2328                           ;Slave_Lou.c: 326:             LCD_STRING(" 80%");
  2329  047B  303F               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2330  047C  120A  158A  23A3  120A  118A  	fcall	_LCD_STRING
  2331  0481                     l3879:	
  2332                           
  2333                           ;Slave_Lou.c: 331:         if ( dec == 1 ){
  2334  0481  1283               	bcf	3,5	;RP0=0, select bank0
  2335  0482  1303               	bcf	3,6	;RP1=0, select bank0
  2336  0483  0335               	decf	_dec,w
  2337  0484  1D03               	btfss	3,2
  2338  0485  2C87               	goto	u1561
  2339  0486  2C88               	goto	u1560
  2340  0487                     u1561:	
  2341  0487  2CA1               	goto	l3887
  2342  0488                     u1560:	
  2343  0488                     l3881:	
  2344                           
  2345                           ;Slave_Lou.c: 332:             if(uni >= 0 && uni < 9 ){
  2346  0488  3009               	movlw	9
  2347  0489  027B               	subwf	_uni,w
  2348  048A  1803               	skipnc
  2349  048B  2C8D               	goto	u1571
  2350  048C  2C8E               	goto	u1570
  2351  048D                     u1571:	
  2352  048D  2CA1               	goto	l3887
  2353  048E                     u1570:	
  2354  048E                     l3883:	
  2355                           
  2356                           ;Slave_Lou.c: 333:             LCD_CURSOR(2,7);
  2357  048E  3002               	movlw	2
  2358  048F  00F5               	movwf	LCD_CURSOR@a
  2359  0490  3000               	movlw	0
  2360  0491  00F6               	movwf	LCD_CURSOR@a+1
  2361  0492  3007               	movlw	7
  2362  0493  00F7               	movwf	LCD_CURSOR@b
  2363  0494  3000               	movlw	0
  2364  0495  00F8               	movwf	LCD_CURSOR@b+1
  2365  0496  120A  158A  2413  120A  118A  	fcall	_LCD_CURSOR
  2366  049B                     l3885:	
  2367                           
  2368                           ;Slave_Lou.c: 334:             LCD_STRING(" 90%");
  2369  049B  3044               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2370  049C  120A  158A  23A3  120A  118A  	fcall	_LCD_STRING
  2371  04A1                     l3887:	
  2372                           
  2373                           ;Slave_Lou.c: 339:         if ( dec == 0 ){
  2374  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  2375  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  2376  04A3  0835               	movf	_dec,w
  2377  04A4  1D03               	btfss	3,2
  2378  04A5  2CA7               	goto	u1581
  2379  04A6  2CA8               	goto	u1580
  2380  04A7                     u1581:	
  2381  04A7  2CC1               	goto	l3895
  2382  04A8                     u1580:	
  2383  04A8                     l3889:	
  2384                           
  2385                           ;Slave_Lou.c: 340:             if(uni >= 0 && uni < 9 ){
  2386  04A8  3009               	movlw	9
  2387  04A9  027B               	subwf	_uni,w
  2388  04AA  1803               	skipnc
  2389  04AB  2CAD               	goto	u1591
  2390  04AC  2CAE               	goto	u1590
  2391  04AD                     u1591:	
  2392  04AD  2CC1               	goto	l3895
  2393  04AE                     u1590:	
  2394  04AE                     l3891:	
  2395                           
  2396                           ;Slave_Lou.c: 341:             LCD_CURSOR(2,7);
  2397  04AE  3002               	movlw	2
  2398  04AF  00F5               	movwf	LCD_CURSOR@a
  2399  04B0  3000               	movlw	0
  2400  04B1  00F6               	movwf	LCD_CURSOR@a+1
  2401  04B2  3007               	movlw	7
  2402  04B3  00F7               	movwf	LCD_CURSOR@b
  2403  04B4  3000               	movlw	0
  2404  04B5  00F8               	movwf	LCD_CURSOR@b+1
  2405  04B6  120A  158A  2413  120A  118A  	fcall	_LCD_CURSOR
  2406  04BB                     l3893:	
  2407                           
  2408                           ;Slave_Lou.c: 342:             LCD_STRING("100%");
  2409  04BB  3017               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2410  04BC  120A  158A  23A3  120A  118A  	fcall	_LCD_STRING
  2411  04C1                     l3895:	
  2412                           
  2413                           ;Slave_Lou.c: 348:         if (cen == 0 ){
  2414  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2415  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2416  04C3  0834               	movf	_cen,w
  2417  04C4  1D03               	btfss	3,2
  2418  04C5  2CC7               	goto	u1601
  2419  04C6  2CC8               	goto	u1600
  2420  04C7                     u1601:	
  2421  04C7  2856               	goto	l3671
  2422  04C8                     u1600:	
  2423  04C8                     l3897:	
  2424                           
  2425                           ;Slave_Lou.c: 349:             if(dec == 0 && uni == 0 ){
  2426  04C8  0835               	movf	_dec,w
  2427  04C9  1D03               	btfss	3,2
  2428  04CA  2CCC               	goto	u1611
  2429  04CB  2CCD               	goto	u1610
  2430  04CC                     u1611:	
  2431  04CC  2856               	goto	l3671
  2432  04CD                     u1610:	
  2433  04CD                     l3899:	
  2434  04CD  087B               	movf	_uni,w
  2435  04CE  1D03               	btfss	3,2
  2436  04CF  2CD1               	goto	u1621
  2437  04D0  2CD2               	goto	u1620
  2438  04D1                     u1621:	
  2439  04D1  2856               	goto	l3671
  2440  04D2                     u1620:	
  2441  04D2                     l3901:	
  2442                           
  2443                           ;Slave_Lou.c: 350:             LCD_CURSOR(2,7);
  2444  04D2  3002               	movlw	2
  2445  04D3  00F5               	movwf	LCD_CURSOR@a
  2446  04D4  3000               	movlw	0
  2447  04D5  00F6               	movwf	LCD_CURSOR@a+1
  2448  04D6  3007               	movlw	7
  2449  04D7  00F7               	movwf	LCD_CURSOR@b
  2450  04D8  3000               	movlw	0
  2451  04D9  00F8               	movwf	LCD_CURSOR@b+1
  2452  04DA  120A  158A  2413  120A  118A  	fcall	_LCD_CURSOR
  2453  04DF                     l3903:	
  2454                           
  2455                           ;Slave_Lou.c: 351:             LCD_STRING("100%");
  2456  04DF  3017               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2457  04E0  120A  158A  23A3  120A  118A  	fcall	_LCD_STRING
  2458  04E5  2856               	goto	l3671
  2459  04E6  120A  118A  280C   	ljmp	start
  2460  04E9                     __end_of_main:	
  2461                           
  2462                           	psect	text1
  2463  0CEA                     __ptext1:	
  2464 ;; *************** function _uint_to_char *****************
  2465 ;; Defined at:
  2466 ;;		line 98 in file "Lib_LCD.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  numero          1    wreg     unsigned char 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  numero          1    4[COMMON] unsigned char 
  2471 ;;  numChr          1    5[COMMON] unsigned char 
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  1    wreg      unsigned char 
  2474 ;; Registers used:
  2475 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2481 ;;      Params:         0       0       0       0       0
  2482 ;;      Locals:         2       0       0       0       0
  2483 ;;      Temps:          2       0       0       0       0
  2484 ;;      Totals:         4       0       0       0       0
  2485 ;;Total ram usage:        4 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:    1
  2488 ;; This function calls:
  2489 ;;		Nothing
  2490 ;; This function is called by:
  2491 ;;		_main
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           
  2496                           ;psect for function _uint_to_char
  2497  0CEA                     _uint_to_char:	
  2498                           
  2499                           ;incstack = 0
  2500                           ; Regs used in _uint_to_char: [wreg-fsr0h+status,2+status,0]
  2501                           ;uint_to_char@numero stored from wreg
  2502  0CEA  00F4               	movwf	uint_to_char@numero
  2503  0CEB                     l2603:	
  2504                           
  2505                           ;Lib_LCD.c: 100:     switch (numero){
  2506  0CEB  2D41               	goto	l2639
  2507  0CEC                     l2605:	
  2508                           
  2509                           ;Lib_LCD.c: 102:             numChr = 48;
  2510  0CEC  3030               	movlw	48
  2511  0CED  00F2               	movwf	??_uint_to_char
  2512  0CEE  0872               	movf	??_uint_to_char,w
  2513  0CEF  00F5               	movwf	uint_to_char@numChr
  2514                           
  2515                           ;Lib_LCD.c: 103:             break;
  2516  0CF0  2D7B               	goto	l2641
  2517  0CF1                     l2607:	
  2518                           
  2519                           ;Lib_LCD.c: 105:             numChr = 49;
  2520  0CF1  3031               	movlw	49
  2521  0CF2  00F2               	movwf	??_uint_to_char
  2522  0CF3  0872               	movf	??_uint_to_char,w
  2523  0CF4  00F5               	movwf	uint_to_char@numChr
  2524                           
  2525                           ;Lib_LCD.c: 106:             break;
  2526  0CF5  2D7B               	goto	l2641
  2527  0CF6                     l2609:	
  2528                           
  2529                           ;Lib_LCD.c: 108:             numChr = 50;
  2530  0CF6  3032               	movlw	50
  2531  0CF7  00F2               	movwf	??_uint_to_char
  2532  0CF8  0872               	movf	??_uint_to_char,w
  2533  0CF9  00F5               	movwf	uint_to_char@numChr
  2534                           
  2535                           ;Lib_LCD.c: 109:             break;
  2536  0CFA  2D7B               	goto	l2641
  2537  0CFB                     l2611:	
  2538                           
  2539                           ;Lib_LCD.c: 111:             numChr = 51;
  2540  0CFB  3033               	movlw	51
  2541  0CFC  00F2               	movwf	??_uint_to_char
  2542  0CFD  0872               	movf	??_uint_to_char,w
  2543  0CFE  00F5               	movwf	uint_to_char@numChr
  2544                           
  2545                           ;Lib_LCD.c: 112:             break;
  2546  0CFF  2D7B               	goto	l2641
  2547  0D00                     l2613:	
  2548                           
  2549                           ;Lib_LCD.c: 114:             numChr = 52;
  2550  0D00  3034               	movlw	52
  2551  0D01  00F2               	movwf	??_uint_to_char
  2552  0D02  0872               	movf	??_uint_to_char,w
  2553  0D03  00F5               	movwf	uint_to_char@numChr
  2554                           
  2555                           ;Lib_LCD.c: 115:             break;
  2556  0D04  2D7B               	goto	l2641
  2557  0D05                     l2615:	
  2558                           
  2559                           ;Lib_LCD.c: 117:             numChr = 53;
  2560  0D05  3035               	movlw	53
  2561  0D06  00F2               	movwf	??_uint_to_char
  2562  0D07  0872               	movf	??_uint_to_char,w
  2563  0D08  00F5               	movwf	uint_to_char@numChr
  2564                           
  2565                           ;Lib_LCD.c: 118:             break;
  2566  0D09  2D7B               	goto	l2641
  2567  0D0A                     l2617:	
  2568                           
  2569                           ;Lib_LCD.c: 120:             numChr = 54;
  2570  0D0A  3036               	movlw	54
  2571  0D0B  00F2               	movwf	??_uint_to_char
  2572  0D0C  0872               	movf	??_uint_to_char,w
  2573  0D0D  00F5               	movwf	uint_to_char@numChr
  2574                           
  2575                           ;Lib_LCD.c: 121:             break;
  2576  0D0E  2D7B               	goto	l2641
  2577  0D0F                     l2619:	
  2578                           
  2579                           ;Lib_LCD.c: 123:             numChr = 55;
  2580  0D0F  3037               	movlw	55
  2581  0D10  00F2               	movwf	??_uint_to_char
  2582  0D11  0872               	movf	??_uint_to_char,w
  2583  0D12  00F5               	movwf	uint_to_char@numChr
  2584                           
  2585                           ;Lib_LCD.c: 124:             break;
  2586  0D13  2D7B               	goto	l2641
  2587  0D14                     l2621:	
  2588                           
  2589                           ;Lib_LCD.c: 126:             numChr = 56;
  2590  0D14  3038               	movlw	56
  2591  0D15  00F2               	movwf	??_uint_to_char
  2592  0D16  0872               	movf	??_uint_to_char,w
  2593  0D17  00F5               	movwf	uint_to_char@numChr
  2594                           
  2595                           ;Lib_LCD.c: 127:             break;
  2596  0D18  2D7B               	goto	l2641
  2597  0D19                     l2623:	
  2598                           
  2599                           ;Lib_LCD.c: 129:             numChr = 57;
  2600  0D19  3039               	movlw	57
  2601  0D1A  00F2               	movwf	??_uint_to_char
  2602  0D1B  0872               	movf	??_uint_to_char,w
  2603  0D1C  00F5               	movwf	uint_to_char@numChr
  2604                           
  2605                           ;Lib_LCD.c: 130:             break;
  2606  0D1D  2D7B               	goto	l2641
  2607  0D1E                     l2625:	
  2608                           
  2609                           ;Lib_LCD.c: 132:             numChr = 65;
  2610  0D1E  3041               	movlw	65
  2611  0D1F  00F2               	movwf	??_uint_to_char
  2612  0D20  0872               	movf	??_uint_to_char,w
  2613  0D21  00F5               	movwf	uint_to_char@numChr
  2614                           
  2615                           ;Lib_LCD.c: 133:             break;
  2616  0D22  2D7B               	goto	l2641
  2617  0D23                     l2627:	
  2618                           
  2619                           ;Lib_LCD.c: 135:             numChr = 66;
  2620  0D23  3042               	movlw	66
  2621  0D24  00F2               	movwf	??_uint_to_char
  2622  0D25  0872               	movf	??_uint_to_char,w
  2623  0D26  00F5               	movwf	uint_to_char@numChr
  2624                           
  2625                           ;Lib_LCD.c: 136:             break;
  2626  0D27  2D7B               	goto	l2641
  2627  0D28                     l2629:	
  2628                           
  2629                           ;Lib_LCD.c: 138:             numChr = 67;
  2630  0D28  3043               	movlw	67
  2631  0D29  00F2               	movwf	??_uint_to_char
  2632  0D2A  0872               	movf	??_uint_to_char,w
  2633  0D2B  00F5               	movwf	uint_to_char@numChr
  2634                           
  2635                           ;Lib_LCD.c: 139:             break;
  2636  0D2C  2D7B               	goto	l2641
  2637  0D2D                     l2631:	
  2638                           
  2639                           ;Lib_LCD.c: 141:             numChr = 68;
  2640  0D2D  3044               	movlw	68
  2641  0D2E  00F2               	movwf	??_uint_to_char
  2642  0D2F  0872               	movf	??_uint_to_char,w
  2643  0D30  00F5               	movwf	uint_to_char@numChr
  2644                           
  2645                           ;Lib_LCD.c: 142:             break;
  2646  0D31  2D7B               	goto	l2641
  2647  0D32                     l2633:	
  2648                           
  2649                           ;Lib_LCD.c: 144:             numChr = 69;
  2650  0D32  3045               	movlw	69
  2651  0D33  00F2               	movwf	??_uint_to_char
  2652  0D34  0872               	movf	??_uint_to_char,w
  2653  0D35  00F5               	movwf	uint_to_char@numChr
  2654                           
  2655                           ;Lib_LCD.c: 145:             break;
  2656  0D36  2D7B               	goto	l2641
  2657  0D37                     l2635:	
  2658                           
  2659                           ;Lib_LCD.c: 147:             numChr = 70;
  2660  0D37  3046               	movlw	70
  2661  0D38  00F2               	movwf	??_uint_to_char
  2662  0D39  0872               	movf	??_uint_to_char,w
  2663  0D3A  00F5               	movwf	uint_to_char@numChr
  2664                           
  2665                           ;Lib_LCD.c: 148:             break;
  2666  0D3B  2D7B               	goto	l2641
  2667  0D3C                     l2637:	
  2668                           
  2669                           ;Lib_LCD.c: 150:             numChr = 214;
  2670  0D3C  30D6               	movlw	214
  2671  0D3D  00F2               	movwf	??_uint_to_char
  2672  0D3E  0872               	movf	??_uint_to_char,w
  2673  0D3F  00F5               	movwf	uint_to_char@numChr
  2674                           
  2675                           ;Lib_LCD.c: 151:     }
  2676  0D40  2D7B               	goto	l2641
  2677  0D41                     l2639:	
  2678  0D41  0874               	movf	uint_to_char@numero,w
  2679  0D42  00F2               	movwf	??_uint_to_char
  2680  0D43  01F3               	clrf	??_uint_to_char+1
  2681                           
  2682                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2683                           ; Switch size 1, requested type "simple"
  2684                           ; Number of cases is 1, Range of values is 0 to 0
  2685                           ; switch strategies available:
  2686                           ; Name         Instructions Cycles
  2687                           ; simple_byte            4     3 (average)
  2688                           ; direct_byte           11     8 (fixed)
  2689                           ; jumptable            260     6 (fixed)
  2690                           ;	Chosen strategy is simple_byte
  2691  0D44  0873               	movf	??_uint_to_char+1,w
  2692  0D45  3A00               	xorlw	0	; case 0
  2693  0D46  1903               	skipnz
  2694  0D47  2D49               	goto	l4385
  2695  0D48  2D3C               	goto	l2637
  2696  0D49                     l4385:	
  2697                           
  2698                           ; Switch size 1, requested type "simple"
  2699                           ; Number of cases is 16, Range of values is 0 to 15
  2700                           ; switch strategies available:
  2701                           ; Name         Instructions Cycles
  2702                           ; simple_byte           49    25 (average)
  2703                           ; direct_byte           56     8 (fixed)
  2704                           ; jumptable            260     6 (fixed)
  2705                           ;	Chosen strategy is simple_byte
  2706  0D49  0872               	movf	??_uint_to_char,w
  2707  0D4A  3A00               	xorlw	0	; case 0
  2708  0D4B  1903               	skipnz
  2709  0D4C  2CEC               	goto	l2605
  2710  0D4D  3A01               	xorlw	1	; case 1
  2711  0D4E  1903               	skipnz
  2712  0D4F  2CF1               	goto	l2607
  2713  0D50  3A03               	xorlw	3	; case 2
  2714  0D51  1903               	skipnz
  2715  0D52  2CF6               	goto	l2609
  2716  0D53  3A01               	xorlw	1	; case 3
  2717  0D54  1903               	skipnz
  2718  0D55  2CFB               	goto	l2611
  2719  0D56  3A07               	xorlw	7	; case 4
  2720  0D57  1903               	skipnz
  2721  0D58  2D00               	goto	l2613
  2722  0D59  3A01               	xorlw	1	; case 5
  2723  0D5A  1903               	skipnz
  2724  0D5B  2D05               	goto	l2615
  2725  0D5C  3A03               	xorlw	3	; case 6
  2726  0D5D  1903               	skipnz
  2727  0D5E  2D0A               	goto	l2617
  2728  0D5F  3A01               	xorlw	1	; case 7
  2729  0D60  1903               	skipnz
  2730  0D61  2D0F               	goto	l2619
  2731  0D62  3A0F               	xorlw	15	; case 8
  2732  0D63  1903               	skipnz
  2733  0D64  2D14               	goto	l2621
  2734  0D65  3A01               	xorlw	1	; case 9
  2735  0D66  1903               	skipnz
  2736  0D67  2D19               	goto	l2623
  2737  0D68  3A03               	xorlw	3	; case 10
  2738  0D69  1903               	skipnz
  2739  0D6A  2D1E               	goto	l2625
  2740  0D6B  3A01               	xorlw	1	; case 11
  2741  0D6C  1903               	skipnz
  2742  0D6D  2D23               	goto	l2627
  2743  0D6E  3A07               	xorlw	7	; case 12
  2744  0D6F  1903               	skipnz
  2745  0D70  2D28               	goto	l2629
  2746  0D71  3A01               	xorlw	1	; case 13
  2747  0D72  1903               	skipnz
  2748  0D73  2D2D               	goto	l2631
  2749  0D74  3A03               	xorlw	3	; case 14
  2750  0D75  1903               	skipnz
  2751  0D76  2D32               	goto	l2633
  2752  0D77  3A01               	xorlw	1	; case 15
  2753  0D78  1903               	skipnz
  2754  0D79  2D37               	goto	l2635
  2755  0D7A  2D3C               	goto	l2637
  2756  0D7B                     l2641:	
  2757                           
  2758                           ;Lib_LCD.c: 152:     return(numChr);
  2759  0D7B  0875               	movf	uint_to_char@numChr,w
  2760  0D7C                     l411:	
  2761  0D7C  0008               	return
  2762  0D7D                     __end_of_uint_to_char:	
  2763                           
  2764                           	psect	text2
  2765  0D7D                     __ptext2:	
  2766 ;; *************** function _mapeo *****************
  2767 ;; Defined at:
  2768 ;;		line 452 in file "Slave_Lou.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  valor           1    wreg     unsigned char 
  2771 ;;  limPIC          1    0[BANK0 ] unsigned char 
  2772 ;;  limFisico       1    1[BANK0 ] unsigned char 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;  valor           1    6[BANK0 ] unsigned char 
  2775 ;;  result          6    7[BANK0 ] unsigned int [3]
  2776 ;;  dividendo       2   13[BANK0 ] unsigned int 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      PTR unsigned int 
  2779 ;; Registers used:
  2780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2786 ;;      Params:         0       2       0       0       0
  2787 ;;      Locals:         0       9       0       0       0
  2788 ;;      Temps:          0       4       0       0       0
  2789 ;;      Totals:         0      15       0       0       0
  2790 ;;Total ram usage:       15 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; Hardware stack levels required when called:    2
  2793 ;; This function calls:
  2794 ;;		___wmul
  2795 ;; This function is called by:
  2796 ;;		_main
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           
  2801                           ;psect for function _mapeo
  2802  0D7D                     _mapeo:	
  2803                           
  2804                           ;incstack = 0
  2805                           ; Regs used in _mapeo: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2806                           ;mapeo@valor stored from wreg
  2807  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  2808  0D7E  1303               	bcf	3,6	;RP1=0, select bank0
  2809  0D7F  00BE               	movwf	mapeo@valor
  2810  0D80                     l3629:	
  2811                           
  2812                           ;Slave_Lou.c: 453:     uint16_t result[3] = {0,0,0};
  2813  0D80  303F               	movlw	mapeo@result& (0+255)
  2814  0D81  0084               	movwf	4
  2815  0D82  3006               	movlw	6
  2816  0D83  00FF               	movwf	btemp+1
  2817  0D84                     u1250:	
  2818  0D84  1383               	bcf	3,7	;select IRP bank0
  2819  0D85  0180               	clrf	0
  2820  0D86  0A84               	incf	4,f
  2821  0D87  0BFF               	decfsz	btemp+1,f
  2822  0D88  2D84               	goto	u1250
  2823  0D89                     l3631:	
  2824                           
  2825                           ;Slave_Lou.c: 454:     uint16_t dividendo = valor*limFisico;
  2826  0D89  083E               	movf	mapeo@valor,w
  2827  0D8A  00BA               	movwf	??_mapeo
  2828  0D8B  01BB               	clrf	??_mapeo+1
  2829  0D8C  083A               	movf	??_mapeo,w
  2830  0D8D  00F2               	movwf	___wmul@multiplier
  2831  0D8E  083B               	movf	??_mapeo+1,w
  2832  0D8F  00F3               	movwf	___wmul@multiplier+1
  2833  0D90  0839               	movf	mapeo@limFisico,w
  2834  0D91  00BC               	movwf	??_mapeo+2
  2835  0D92  01BD               	clrf	??_mapeo+3
  2836  0D93  083C               	movf	??_mapeo+2,w
  2837  0D94  00F4               	movwf	___wmul@multiplicand
  2838  0D95  083D               	movf	??_mapeo+3,w
  2839  0D96  00F5               	movwf	___wmul@multiplicand+1
  2840  0D97  120A  158A  23C8  120A  158A  	fcall	___wmul
  2841  0D9C  0873               	movf	?___wmul+1,w
  2842  0D9D  1283               	bcf	3,5	;RP0=0, select bank0
  2843  0D9E  1303               	bcf	3,6	;RP1=0, select bank0
  2844  0D9F  00C6               	movwf	mapeo@dividendo+1
  2845  0DA0  0872               	movf	?___wmul,w
  2846  0DA1  00C5               	movwf	mapeo@dividendo
  2847                           
  2848                           ;Slave_Lou.c: 455:     while (limPIC <= dividendo){
  2849  0DA2  2DB2               	goto	l3635
  2850  0DA3                     l3633:	
  2851                           
  2852                           ;Slave_Lou.c: 456:         result[0] = result[0] + 1;
  2853  0DA3  083F               	movf	mapeo@result,w
  2854  0DA4  3E01               	addlw	1
  2855  0DA5  00BF               	movwf	mapeo@result
  2856  0DA6  0840               	movf	mapeo@result+1,w
  2857  0DA7  1803               	skipnc
  2858  0DA8  3E01               	addlw	1
  2859  0DA9  3E00               	addlw	0
  2860  0DAA  00C0               	movwf	mapeo@result+1
  2861                           
  2862                           ;Slave_Lou.c: 457:         dividendo = dividendo - limPIC;
  2863  0DAB  0838               	movf	mapeo@limPIC,w
  2864  0DAC  0245               	subwf	mapeo@dividendo,w
  2865  0DAD  00C5               	movwf	mapeo@dividendo
  2866  0DAE  0846               	movf	mapeo@dividendo+1,w
  2867  0DAF  1C03               	skipc
  2868  0DB0  0346               	decf	mapeo@dividendo+1,w
  2869  0DB1  00C6               	movwf	mapeo@dividendo+1
  2870  0DB2                     l3635:	
  2871                           
  2872                           ;Slave_Lou.c: 455:     while (limPIC <= dividendo){
  2873  0DB2  0838               	movf	mapeo@limPIC,w
  2874  0DB3  00BA               	movwf	??_mapeo
  2875  0DB4  01BB               	clrf	??_mapeo+1
  2876  0DB5  083B               	movf	??_mapeo+1,w
  2877  0DB6  0246               	subwf	mapeo@dividendo+1,w
  2878  0DB7  1D03               	skipz
  2879  0DB8  2DBB               	goto	u1265
  2880  0DB9  083A               	movf	??_mapeo,w
  2881  0DBA  0245               	subwf	mapeo@dividendo,w
  2882  0DBB                     u1265:	
  2883  0DBB  1803               	skipnc
  2884  0DBC  2DBE               	goto	u1261
  2885  0DBD  2DBF               	goto	u1260
  2886  0DBE                     u1261:	
  2887  0DBE  2DA3               	goto	l3633
  2888  0DBF                     u1260:	
  2889  0DBF                     l3637:	
  2890                           
  2891                           ;Slave_Lou.c: 459:     dividendo = dividendo *10;
  2892  0DBF  0846               	movf	mapeo@dividendo+1,w
  2893  0DC0  00F3               	movwf	___wmul@multiplier+1
  2894  0DC1  0845               	movf	mapeo@dividendo,w
  2895  0DC2  00F2               	movwf	___wmul@multiplier
  2896  0DC3  300A               	movlw	10
  2897  0DC4  00F4               	movwf	___wmul@multiplicand
  2898  0DC5  3000               	movlw	0
  2899  0DC6  00F5               	movwf	___wmul@multiplicand+1
  2900  0DC7  120A  158A  23C8  120A  158A  	fcall	___wmul
  2901  0DCC  0873               	movf	?___wmul+1,w
  2902  0DCD  1283               	bcf	3,5	;RP0=0, select bank0
  2903  0DCE  1303               	bcf	3,6	;RP1=0, select bank0
  2904  0DCF  00C6               	movwf	mapeo@dividendo+1
  2905  0DD0  0872               	movf	?___wmul,w
  2906  0DD1  00C5               	movwf	mapeo@dividendo
  2907                           
  2908                           ;Slave_Lou.c: 460:     while (limPIC <= dividendo){
  2909  0DD2  2DE2               	goto	l3641
  2910  0DD3                     l3639:	
  2911                           
  2912                           ;Slave_Lou.c: 461:         result[1] = result[1] +1;
  2913  0DD3  0841               	movf	mapeo@result+2,w
  2914  0DD4  3E01               	addlw	1
  2915  0DD5  00C1               	movwf	mapeo@result+2
  2916  0DD6  0842               	movf	mapeo@result+3,w
  2917  0DD7  1803               	skipnc
  2918  0DD8  3E01               	addlw	1
  2919  0DD9  3E00               	addlw	0
  2920  0DDA  00C2               	movwf	mapeo@result+3
  2921                           
  2922                           ;Slave_Lou.c: 462:         dividendo = dividendo - limPIC;
  2923  0DDB  0838               	movf	mapeo@limPIC,w
  2924  0DDC  0245               	subwf	mapeo@dividendo,w
  2925  0DDD  00C5               	movwf	mapeo@dividendo
  2926  0DDE  0846               	movf	mapeo@dividendo+1,w
  2927  0DDF  1C03               	skipc
  2928  0DE0  0346               	decf	mapeo@dividendo+1,w
  2929  0DE1  00C6               	movwf	mapeo@dividendo+1
  2930  0DE2                     l3641:	
  2931                           
  2932                           ;Slave_Lou.c: 460:     while (limPIC <= dividendo){
  2933  0DE2  0838               	movf	mapeo@limPIC,w
  2934  0DE3  00BA               	movwf	??_mapeo
  2935  0DE4  01BB               	clrf	??_mapeo+1
  2936  0DE5  083B               	movf	??_mapeo+1,w
  2937  0DE6  0246               	subwf	mapeo@dividendo+1,w
  2938  0DE7  1D03               	skipz
  2939  0DE8  2DEB               	goto	u1275
  2940  0DE9  083A               	movf	??_mapeo,w
  2941  0DEA  0245               	subwf	mapeo@dividendo,w
  2942  0DEB                     u1275:	
  2943  0DEB  1803               	skipnc
  2944  0DEC  2DEE               	goto	u1271
  2945  0DED  2DEF               	goto	u1270
  2946  0DEE                     u1271:	
  2947  0DEE  2DD3               	goto	l3639
  2948  0DEF                     u1270:	
  2949  0DEF                     l3643:	
  2950                           
  2951                           ;Slave_Lou.c: 464:     dividendo = dividendo *10;
  2952  0DEF  0846               	movf	mapeo@dividendo+1,w
  2953  0DF0  00F3               	movwf	___wmul@multiplier+1
  2954  0DF1  0845               	movf	mapeo@dividendo,w
  2955  0DF2  00F2               	movwf	___wmul@multiplier
  2956  0DF3  300A               	movlw	10
  2957  0DF4  00F4               	movwf	___wmul@multiplicand
  2958  0DF5  3000               	movlw	0
  2959  0DF6  00F5               	movwf	___wmul@multiplicand+1
  2960  0DF7  120A  158A  23C8  120A  158A  	fcall	___wmul
  2961  0DFC  0873               	movf	?___wmul+1,w
  2962  0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  2963  0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  2964  0DFF  00C6               	movwf	mapeo@dividendo+1
  2965  0E00  0872               	movf	?___wmul,w
  2966  0E01  00C5               	movwf	mapeo@dividendo
  2967                           
  2968                           ;Slave_Lou.c: 465:     while (limPIC <= dividendo){
  2969  0E02  2E12               	goto	l3647
  2970  0E03                     l3645:	
  2971                           
  2972                           ;Slave_Lou.c: 466:         result[2] = result[2] +1;
  2973  0E03  0843               	movf	mapeo@result+4,w
  2974  0E04  3E01               	addlw	1
  2975  0E05  00C3               	movwf	mapeo@result+4
  2976  0E06  0844               	movf	mapeo@result+5,w
  2977  0E07  1803               	skipnc
  2978  0E08  3E01               	addlw	1
  2979  0E09  3E00               	addlw	0
  2980  0E0A  00C4               	movwf	mapeo@result+5
  2981                           
  2982                           ;Slave_Lou.c: 467:         dividendo = dividendo - limPIC;
  2983  0E0B  0838               	movf	mapeo@limPIC,w
  2984  0E0C  0245               	subwf	mapeo@dividendo,w
  2985  0E0D  00C5               	movwf	mapeo@dividendo
  2986  0E0E  0846               	movf	mapeo@dividendo+1,w
  2987  0E0F  1C03               	skipc
  2988  0E10  0346               	decf	mapeo@dividendo+1,w
  2989  0E11  00C6               	movwf	mapeo@dividendo+1
  2990  0E12                     l3647:	
  2991                           
  2992                           ;Slave_Lou.c: 465:     while (limPIC <= dividendo){
  2993  0E12  0838               	movf	mapeo@limPIC,w
  2994  0E13  00BA               	movwf	??_mapeo
  2995  0E14  01BB               	clrf	??_mapeo+1
  2996  0E15  083B               	movf	??_mapeo+1,w
  2997  0E16  0246               	subwf	mapeo@dividendo+1,w
  2998  0E17  1D03               	skipz
  2999  0E18  2E1B               	goto	u1285
  3000  0E19  083A               	movf	??_mapeo,w
  3001  0E1A  0245               	subwf	mapeo@dividendo,w
  3002  0E1B                     u1285:	
  3003  0E1B  1803               	skipnc
  3004  0E1C  2E1E               	goto	u1281
  3005  0E1D  2E1F               	goto	u1280
  3006  0E1E                     u1281:	
  3007  0E1E  2E03               	goto	l3645
  3008  0E1F                     u1280:	
  3009  0E1F                     l3649:	
  3010                           
  3011                           ;Slave_Lou.c: 470:     return(result);
  3012  0E1F  303F               	movlw	(low (mapeo@result| 0))& (0+255)
  3013  0E20                     l190:	
  3014  0E20  0008               	return
  3015  0E21                     __end_of_mapeo:	
  3016                           
  3017                           	psect	text3
  3018  0BC8                     __ptext3:	
  3019 ;; *************** function ___wmul *****************
  3020 ;; Defined at:
  3021 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  multiplier      2    2[COMMON] unsigned int 
  3024 ;;  multiplicand    2    4[COMMON] unsigned int 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  product         2    6[COMMON] unsigned int 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  2    2[COMMON] unsigned int 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3036 ;;      Params:         4       0       0       0       0
  3037 ;;      Locals:         2       0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0
  3039 ;;      Totals:         6       0       0       0       0
  3040 ;;Total ram usage:        6 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    1
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_mapeo
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           
  3051                           ;psect for function ___wmul
  3052  0BC8                     ___wmul:	
  3053  0BC8                     l2421:	
  3054                           ;incstack = 0
  3055                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3056                           
  3057  0BC8  01F6               	clrf	___wmul@product
  3058  0BC9  01F7               	clrf	___wmul@product+1
  3059  0BCA                     l2423:	
  3060  0BCA  1C72               	btfss	___wmul@multiplier,0
  3061  0BCB  2BCD               	goto	u641
  3062  0BCC  2BCE               	goto	u640
  3063  0BCD                     u641:	
  3064  0BCD  2BD4               	goto	l497
  3065  0BCE                     u640:	
  3066  0BCE                     l2425:	
  3067  0BCE  0874               	movf	___wmul@multiplicand,w
  3068  0BCF  07F6               	addwf	___wmul@product,f
  3069  0BD0  1803               	skipnc
  3070  0BD1  0AF7               	incf	___wmul@product+1,f
  3071  0BD2  0875               	movf	___wmul@multiplicand+1,w
  3072  0BD3  07F7               	addwf	___wmul@product+1,f
  3073  0BD4                     l497:	
  3074  0BD4  3001               	movlw	1
  3075  0BD5                     u655:	
  3076  0BD5  1003               	clrc
  3077  0BD6  0DF4               	rlf	___wmul@multiplicand,f
  3078  0BD7  0DF5               	rlf	___wmul@multiplicand+1,f
  3079  0BD8  3EFF               	addlw	-1
  3080  0BD9  1D03               	skipz
  3081  0BDA  2BD5               	goto	u655
  3082  0BDB                     l2427:	
  3083  0BDB  3001               	movlw	1
  3084  0BDC                     u665:	
  3085  0BDC  1003               	clrc
  3086  0BDD  0CF3               	rrf	___wmul@multiplier+1,f
  3087  0BDE  0CF2               	rrf	___wmul@multiplier,f
  3088  0BDF  3EFF               	addlw	-1
  3089  0BE0  1D03               	skipz
  3090  0BE1  2BDC               	goto	u665
  3091  0BE2                     l2429:	
  3092  0BE2  0872               	movf	___wmul@multiplier,w
  3093  0BE3  0473               	iorwf	___wmul@multiplier+1,w
  3094  0BE4  1D03               	btfss	3,2
  3095  0BE5  2BE7               	goto	u671
  3096  0BE6  2BE8               	goto	u670
  3097  0BE7                     u671:	
  3098  0BE7  2BCA               	goto	l2423
  3099  0BE8                     u670:	
  3100  0BE8                     l2431:	
  3101  0BE8  0877               	movf	___wmul@product+1,w
  3102  0BE9  00F3               	movwf	?___wmul+1
  3103  0BEA  0876               	movf	___wmul@product,w
  3104  0BEB  00F2               	movwf	?___wmul
  3105  0BEC                     l499:	
  3106  0BEC  0008               	return
  3107  0BED                     __end_of___wmul:	
  3108                           
  3109                           	psect	text4
  3110  0B42                     __ptext4:	
  3111 ;; *************** function _init_PWM_2 *****************
  3112 ;; Defined at:
  3113 ;;		line 42 in file "PWMs.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;		None
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;		None
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  1    wreg      void 
  3120 ;; Registers used:
  3121 ;;		wreg
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3127 ;;      Params:         0       0       0       0       0
  3128 ;;      Locals:         0       0       0       0       0
  3129 ;;      Temps:          0       0       0       0       0
  3130 ;;      Totals:         0       0       0       0       0
  3131 ;;Total ram usage:        0 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; Hardware stack levels required when called:    1
  3134 ;; This function calls:
  3135 ;;		Nothing
  3136 ;; This function is called by:
  3137 ;;		_main
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           
  3142                           ;psect for function _init_PWM_2
  3143  0B42                     _init_PWM_2:	
  3144  0B42                     l2487:	
  3145                           ;incstack = 0
  3146                           ; Regs used in _init_PWM_2: [wreg]
  3147                           
  3148                           
  3149                           ;PWMs.c: 43:     TRISCbits.TRISC2 = 1;
  3150  0B42  1683               	bsf	3,5	;RP0=1, select bank1
  3151  0B43  1303               	bcf	3,6	;RP1=0, select bank1
  3152  0B44  1507               	bsf	7,2	;volatile
  3153  0B45                     l2489:	
  3154                           
  3155                           ;PWMs.c: 45:     PR2 = 200;
  3156  0B45  30C8               	movlw	200
  3157  0B46  0092               	movwf	18	;volatile
  3158  0B47                     l2491:	
  3159                           
  3160                           ;PWMs.c: 47:     CCP1CONbits.CCP1M3 = 1;
  3161  0B47  1283               	bcf	3,5	;RP0=0, select bank0
  3162  0B48  1303               	bcf	3,6	;RP1=0, select bank0
  3163  0B49  1597               	bsf	23,3	;volatile
  3164  0B4A                     l2493:	
  3165                           
  3166                           ;PWMs.c: 48:     CCP1CONbits.CCP1M2 = 1;
  3167  0B4A  1517               	bsf	23,2	;volatile
  3168  0B4B                     l2495:	
  3169                           
  3170                           ;PWMs.c: 49:     CCP1CONbits.CCP1M1 = 0;
  3171  0B4B  1097               	bcf	23,1	;volatile
  3172  0B4C                     l2497:	
  3173                           
  3174                           ;PWMs.c: 50:     CCP1CONbits.CCP1M0 = 0;
  3175  0B4C  1017               	bcf	23,0	;volatile
  3176  0B4D                     l2499:	
  3177                           
  3178                           ;PWMs.c: 52:     CCP1CONbits.P1M1 = 0;
  3179  0B4D  1397               	bcf	23,7	;volatile
  3180  0B4E                     l2501:	
  3181                           
  3182                           ;PWMs.c: 53:     CCP1CONbits.P1M0 = 0;
  3183  0B4E  1317               	bcf	23,6	;volatile
  3184                           
  3185                           ;PWMs.c: 56:     CCPR2L = 0b00011011;
  3186  0B4F  301B               	movlw	27
  3187  0B50  009B               	movwf	27	;volatile
  3188  0B51                     l2503:	
  3189                           
  3190                           ;PWMs.c: 57:     CCP1CONbits.DC1B0 = 1;
  3191  0B51  1617               	bsf	23,4	;volatile
  3192  0B52                     l2505:	
  3193                           
  3194                           ;PWMs.c: 58:     CCP1CONbits.DC1B1 = 1;
  3195  0B52  1697               	bsf	23,5	;volatile
  3196  0B53                     l2507:	
  3197                           
  3198                           ;PWMs.c: 60:     PIR1bits.TMR2IF = 0;
  3199  0B53  108C               	bcf	12,1	;volatile
  3200  0B54                     l2509:	
  3201                           
  3202                           ;PWMs.c: 61:     T2CONbits.T2CKPS1 = 1;
  3203  0B54  1492               	bsf	18,1	;volatile
  3204  0B55                     l2511:	
  3205                           
  3206                           ;PWMs.c: 62:     T2CONbits.T2CKPS0 = 1;
  3207  0B55  1412               	bsf	18,0	;volatile
  3208  0B56                     l2513:	
  3209                           
  3210                           ;PWMs.c: 64:     T2CONbits.TMR2ON = 1;
  3211  0B56  1512               	bsf	18,2	;volatile
  3212                           
  3213                           ;PWMs.c: 66:     while(PIR1bits.TMR2IF == 1){
  3214  0B57  2B59               	goto	l322
  3215  0B58                     l323:	
  3216                           
  3217                           ;PWMs.c: 67:         PIR1bits.TMR2IF = 0;
  3218  0B58  108C               	bcf	12,1	;volatile
  3219  0B59                     l322:	
  3220                           ;PWMs.c: 68:     }
  3221                           
  3222                           
  3223                           ;PWMs.c: 66:     while(PIR1bits.TMR2IF == 1){
  3224  0B59  188C               	btfsc	12,1	;volatile
  3225  0B5A  2B5C               	goto	u691
  3226  0B5B  2B5D               	goto	u690
  3227  0B5C                     u691:	
  3228  0B5C  2B58               	goto	l323
  3229  0B5D                     u690:	
  3230  0B5D                     l324:	
  3231                           
  3232                           ;PWMs.c: 70:     TRISCbits.TRISC2 = 0;
  3233  0B5D  1683               	bsf	3,5	;RP0=1, select bank1
  3234  0B5E  1303               	bcf	3,6	;RP1=0, select bank1
  3235  0B5F  1107               	bcf	7,2	;volatile
  3236  0B60                     l325:	
  3237  0B60  0008               	return
  3238  0B61                     __end_of_init_PWM_2:	
  3239                           
  3240                           	psect	text5
  3241  0B25                     __ptext5:	
  3242 ;; *************** function _init_PWM_1 *****************
  3243 ;; Defined at:
  3244 ;;		line 14 in file "PWMs.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;		None
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;		None
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		wreg
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3258 ;;      Params:         0       0       0       0       0
  3259 ;;      Locals:         0       0       0       0       0
  3260 ;;      Temps:          0       0       0       0       0
  3261 ;;      Totals:         0       0       0       0       0
  3262 ;;Total ram usage:        0 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    1
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		_main
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           
  3273                           ;psect for function _init_PWM_1
  3274  0B25                     _init_PWM_1:	
  3275  0B25                     l2463:	
  3276                           ;incstack = 0
  3277                           ; Regs used in _init_PWM_1: [wreg]
  3278                           
  3279                           
  3280                           ;PWMs.c: 15:     TRISCbits.TRISC1 = 1;
  3281  0B25  1683               	bsf	3,5	;RP0=1, select bank1
  3282  0B26  1303               	bcf	3,6	;RP1=0, select bank1
  3283  0B27  1487               	bsf	7,1	;volatile
  3284  0B28                     l2465:	
  3285                           
  3286                           ;PWMs.c: 17:     PR2 = 200;
  3287  0B28  30C8               	movlw	200
  3288  0B29  0092               	movwf	18	;volatile
  3289  0B2A                     l2467:	
  3290                           
  3291                           ;PWMs.c: 19:     CCP2CONbits.CCP2M3 = 1;
  3292  0B2A  1283               	bcf	3,5	;RP0=0, select bank0
  3293  0B2B  1303               	bcf	3,6	;RP1=0, select bank0
  3294  0B2C  159D               	bsf	29,3	;volatile
  3295  0B2D                     l2469:	
  3296                           
  3297                           ;PWMs.c: 20:     CCP2CONbits.CCP2M2 = 1;
  3298  0B2D  151D               	bsf	29,2	;volatile
  3299  0B2E                     l2471:	
  3300                           
  3301                           ;PWMs.c: 21:     CCP2CONbits.CCP2M1 = 1;
  3302  0B2E  149D               	bsf	29,1	;volatile
  3303  0B2F                     l2473:	
  3304                           
  3305                           ;PWMs.c: 22:     CCP2CONbits.CCP2M0 = 1;
  3306  0B2F  141D               	bsf	29,0	;volatile
  3307                           
  3308                           ;PWMs.c: 25:     CCPR2L = 0b00011011;
  3309  0B30  301B               	movlw	27
  3310  0B31  009B               	movwf	27	;volatile
  3311  0B32                     l2475:	
  3312                           
  3313                           ;PWMs.c: 26:     CCP2CONbits.DC2B0 = 1;
  3314  0B32  161D               	bsf	29,4	;volatile
  3315  0B33                     l2477:	
  3316                           
  3317                           ;PWMs.c: 27:     CCP2CONbits.DC2B1 = 1;
  3318  0B33  169D               	bsf	29,5	;volatile
  3319  0B34                     l2479:	
  3320                           
  3321                           ;PWMs.c: 29:     PIR1bits.TMR2IF = 0;
  3322  0B34  108C               	bcf	12,1	;volatile
  3323  0B35                     l2481:	
  3324                           
  3325                           ;PWMs.c: 30:     T2CONbits.T2CKPS1 = 1;
  3326  0B35  1492               	bsf	18,1	;volatile
  3327  0B36                     l2483:	
  3328                           
  3329                           ;PWMs.c: 31:     T2CONbits.T2CKPS0 = 1;
  3330  0B36  1412               	bsf	18,0	;volatile
  3331  0B37                     l2485:	
  3332                           
  3333                           ;PWMs.c: 33:     T2CONbits.TMR2ON = 1;
  3334  0B37  1512               	bsf	18,2	;volatile
  3335                           
  3336                           ;PWMs.c: 35:     while(PIR1bits.TMR2IF == 1){
  3337  0B38  2B3A               	goto	l316
  3338  0B39                     l317:	
  3339                           
  3340                           ;PWMs.c: 36:         PIR1bits.TMR2IF = 0;
  3341  0B39  108C               	bcf	12,1	;volatile
  3342  0B3A                     l316:	
  3343                           ;PWMs.c: 37:     }
  3344                           
  3345                           
  3346                           ;PWMs.c: 35:     while(PIR1bits.TMR2IF == 1){
  3347  0B3A  188C               	btfsc	12,1	;volatile
  3348  0B3B  2B3D               	goto	u681
  3349  0B3C  2B3E               	goto	u680
  3350  0B3D                     u681:	
  3351  0B3D  2B39               	goto	l317
  3352  0B3E                     u680:	
  3353  0B3E                     l318:	
  3354                           
  3355                           ;PWMs.c: 39:     TRISCbits.TRISC1 = 0;
  3356  0B3E  1683               	bsf	3,5	;RP0=1, select bank1
  3357  0B3F  1303               	bcf	3,6	;RP1=0, select bank1
  3358  0B40  1087               	bcf	7,1	;volatile
  3359  0B41                     l319:	
  3360  0B41  0008               	return
  3361  0B42                     __end_of_init_PWM_1:	
  3362                           
  3363                           	psect	text6
  3364  0BED                     __ptext6:	
  3365 ;; *************** function _config_PORTS *****************
  3366 ;; Defined at:
  3367 ;;		line 369 in file "Slave_Lou.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3381 ;;      Params:         0       0       0       0       0
  3382 ;;      Locals:         0       0       0       0       0
  3383 ;;      Temps:          0       0       0       0       0
  3384 ;;      Totals:         0       0       0       0       0
  3385 ;;Total ram usage:        0 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; Hardware stack levels required when called:    2
  3388 ;; This function calls:
  3389 ;;		_OSC_config
  3390 ;; This function is called by:
  3391 ;;		_main
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           
  3396                           ;psect for function _config_PORTS
  3397  0BED                     _config_PORTS:	
  3398  0BED                     l2435:	
  3399                           ;incstack = 0
  3400                           ; Regs used in _config_PORTS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3401                           
  3402                           
  3403                           ;Slave_Lou.c: 370:     OSC_config(1000000);
  3404  0BED  3000               	movlw	0
  3405  0BEE  00F5               	movwf	OSC_config@frecuencia+3
  3406  0BEF  300F               	movlw	15
  3407  0BF0  00F4               	movwf	OSC_config@frecuencia+2
  3408  0BF1  3042               	movlw	66
  3409  0BF2  00F3               	movwf	OSC_config@frecuencia+1
  3410  0BF3  3040               	movlw	64
  3411  0BF4  00F2               	movwf	OSC_config@frecuencia
  3412  0BF5  120A  118A  26C8  120A  158A  	fcall	_OSC_config
  3413  0BFA                     l2437:	
  3414                           
  3415                           ;Slave_Lou.c: 372:     TRISA = 0b00000001;
  3416  0BFA  3001               	movlw	1
  3417  0BFB  1683               	bsf	3,5	;RP0=1, select bank1
  3418  0BFC  1303               	bcf	3,6	;RP1=0, select bank1
  3419  0BFD  0085               	movwf	5	;volatile
  3420  0BFE                     l2439:	
  3421                           
  3422                           ;Slave_Lou.c: 373:     ANSEL = 0b00000001;
  3423  0BFE  3001               	movlw	1
  3424  0BFF  1683               	bsf	3,5	;RP0=1, select bank3
  3425  0C00  1703               	bsf	3,6	;RP1=1, select bank3
  3426  0C01  0088               	movwf	8	;volatile
  3427  0C02                     l2441:	
  3428                           
  3429                           ;Slave_Lou.c: 375:     TRISAbits.TRISA3 = 0;
  3430  0C02  1683               	bsf	3,5	;RP0=1, select bank1
  3431  0C03  1303               	bcf	3,6	;RP1=0, select bank1
  3432  0C04  1185               	bcf	5,3	;volatile
  3433  0C05                     l2443:	
  3434                           
  3435                           ;Slave_Lou.c: 376:     TRISAbits.TRISA4 = 0;
  3436  0C05  1205               	bcf	5,4	;volatile
  3437  0C06                     l2445:	
  3438                           
  3439                           ;Slave_Lou.c: 378:     TRISB = 0x00;
  3440  0C06  0186               	clrf	6	;volatile
  3441  0C07                     l2447:	
  3442                           
  3443                           ;Slave_Lou.c: 379:     TRISC = 0b00000000;
  3444  0C07  0187               	clrf	7	;volatile
  3445  0C08                     l2449:	
  3446                           
  3447                           ;Slave_Lou.c: 380:     TRISD = 0x00;
  3448  0C08  0188               	clrf	8	;volatile
  3449  0C09                     l2451:	
  3450                           
  3451                           ;Slave_Lou.c: 381:     TRISE = 0b00000111;
  3452  0C09  3007               	movlw	7
  3453  0C0A  0089               	movwf	9	;volatile
  3454  0C0B                     l2453:	
  3455                           
  3456                           ;Slave_Lou.c: 384:     PORTA = 0x00;
  3457  0C0B  1283               	bcf	3,5	;RP0=0, select bank0
  3458  0C0C  1303               	bcf	3,6	;RP1=0, select bank0
  3459  0C0D  0185               	clrf	5	;volatile
  3460  0C0E                     l2455:	
  3461                           
  3462                           ;Slave_Lou.c: 385:     PORTB = 0x00;
  3463  0C0E  0186               	clrf	6	;volatile
  3464  0C0F                     l2457:	
  3465                           
  3466                           ;Slave_Lou.c: 386:     PORTC = 0x00;
  3467  0C0F  0187               	clrf	7	;volatile
  3468  0C10                     l2459:	
  3469                           
  3470                           ;Slave_Lou.c: 387:     PORTD = 0x00;
  3471  0C10  0188               	clrf	8	;volatile
  3472  0C11                     l2461:	
  3473                           
  3474                           ;Slave_Lou.c: 388:     PORTE = 0x00;
  3475  0C11  0189               	clrf	9	;volatile
  3476  0C12                     l159:	
  3477  0C12  0008               	return
  3478  0C13                     __end_of_config_PORTS:	
  3479                           
  3480                           	psect	text7
  3481  06C8                     __ptext7:	
  3482 ;; *************** function _OSC_config *****************
  3483 ;; Defined at:
  3484 ;;		line 393 in file "Slave_Lou.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;  frecuencia      4    2[COMMON] unsigned long 
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;		None
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  1    wreg      void 
  3491 ;; Registers used:
  3492 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3498 ;;      Params:         4       0       0       0       0
  3499 ;;      Locals:         0       0       0       0       0
  3500 ;;      Temps:          0       0       0       0       0
  3501 ;;      Totals:         4       0       0       0       0
  3502 ;;Total ram usage:        4 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; Hardware stack levels required when called:    1
  3505 ;; This function calls:
  3506 ;;		Nothing
  3507 ;; This function is called by:
  3508 ;;		_config_PORTS
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           
  3513                           ;psect for function _OSC_config
  3514  06C8                     _OSC_config:	
  3515  06C8                     l2323:	
  3516                           ;incstack = 0
  3517                           ; Regs used in _OSC_config: [wreg-fsr0h+status,2+status,0]
  3518                           
  3519                           
  3520                           ;Slave_Lou.c: 394:     switch(frecuencia){
  3521  06C8  2F04               	goto	l2343
  3522  06C9                     l2325:	
  3523                           
  3524                           ;Slave_Lou.c: 396:             OSCCONbits.IRCF = 0b111;
  3525  06C9  3070               	movlw	112
  3526  06CA  1683               	bsf	3,5	;RP0=1, select bank1
  3527  06CB  1303               	bcf	3,6	;RP1=0, select bank1
  3528  06CC  048F               	iorwf	15,f	;volatile
  3529                           
  3530                           ;Slave_Lou.c: 397:             break;
  3531  06CD  2F73               	goto	l173
  3532  06CE                     l2327:	
  3533                           
  3534                           ;Slave_Lou.c: 399:             OSCCONbits.IRCF = 0b110;
  3535  06CE  1683               	bsf	3,5	;RP0=1, select bank1
  3536  06CF  1303               	bcf	3,6	;RP1=0, select bank1
  3537  06D0  080F               	movf	15,w	;volatile
  3538  06D1  398F               	andlw	-113
  3539  06D2  3860               	iorlw	96
  3540  06D3  008F               	movwf	15	;volatile
  3541                           
  3542                           ;Slave_Lou.c: 400:             break;
  3543  06D4  2F73               	goto	l173
  3544  06D5                     l2329:	
  3545                           
  3546                           ;Slave_Lou.c: 402:             OSCCONbits.IRCF = 0b101;
  3547  06D5  1683               	bsf	3,5	;RP0=1, select bank1
  3548  06D6  1303               	bcf	3,6	;RP1=0, select bank1
  3549  06D7  080F               	movf	15,w	;volatile
  3550  06D8  398F               	andlw	-113
  3551  06D9  3850               	iorlw	80
  3552  06DA  008F               	movwf	15	;volatile
  3553                           
  3554                           ;Slave_Lou.c: 403:             break;
  3555  06DB  2F73               	goto	l173
  3556  06DC                     l2331:	
  3557                           
  3558                           ;Slave_Lou.c: 405:             OSCCONbits.IRCF = 0b100;
  3559  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  3560  06DD  1303               	bcf	3,6	;RP1=0, select bank1
  3561  06DE  080F               	movf	15,w	;volatile
  3562  06DF  398F               	andlw	-113
  3563  06E0  3840               	iorlw	64
  3564  06E1  008F               	movwf	15	;volatile
  3565                           
  3566                           ;Slave_Lou.c: 406:             break;
  3567  06E2  2F73               	goto	l173
  3568  06E3                     l2333:	
  3569                           
  3570                           ;Slave_Lou.c: 408:             OSCCONbits.IRCF = 0b011;
  3571  06E3  1683               	bsf	3,5	;RP0=1, select bank1
  3572  06E4  1303               	bcf	3,6	;RP1=0, select bank1
  3573  06E5  080F               	movf	15,w	;volatile
  3574  06E6  398F               	andlw	-113
  3575  06E7  3830               	iorlw	48
  3576  06E8  008F               	movwf	15	;volatile
  3577                           
  3578                           ;Slave_Lou.c: 409:             break;
  3579  06E9  2F73               	goto	l173
  3580  06EA                     l2335:	
  3581                           
  3582                           ;Slave_Lou.c: 411:             OSCCONbits.IRCF = 0b010;
  3583  06EA  1683               	bsf	3,5	;RP0=1, select bank1
  3584  06EB  1303               	bcf	3,6	;RP1=0, select bank1
  3585  06EC  080F               	movf	15,w	;volatile
  3586  06ED  398F               	andlw	-113
  3587  06EE  3820               	iorlw	32
  3588  06EF  008F               	movwf	15	;volatile
  3589                           
  3590                           ;Slave_Lou.c: 412:             break;
  3591  06F0  2F73               	goto	l173
  3592  06F1                     l2337:	
  3593                           
  3594                           ;Slave_Lou.c: 414:             OSCCONbits.IRCF = 0b001;
  3595  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  3596  06F2  1303               	bcf	3,6	;RP1=0, select bank1
  3597  06F3  080F               	movf	15,w	;volatile
  3598  06F4  398F               	andlw	-113
  3599  06F5  3810               	iorlw	16
  3600  06F6  008F               	movwf	15	;volatile
  3601                           
  3602                           ;Slave_Lou.c: 415:             break;
  3603  06F7  2F73               	goto	l173
  3604  06F8                     l2339:	
  3605                           
  3606                           ;Slave_Lou.c: 417:             OSCCONbits.IRCF = 0b000;
  3607  06F8  308F               	movlw	-113
  3608  06F9  1683               	bsf	3,5	;RP0=1, select bank1
  3609  06FA  1303               	bcf	3,6	;RP1=0, select bank1
  3610  06FB  058F               	andwf	15,f	;volatile
  3611                           
  3612                           ;Slave_Lou.c: 418:             break;
  3613  06FC  2F73               	goto	l173
  3614  06FD                     l2341:	
  3615                           
  3616                           ;Slave_Lou.c: 420:             OSCCONbits.IRCF = 0b110;
  3617  06FD  1683               	bsf	3,5	;RP0=1, select bank1
  3618  06FE  1303               	bcf	3,6	;RP1=0, select bank1
  3619  06FF  080F               	movf	15,w	;volatile
  3620  0700  398F               	andlw	-113
  3621  0701  3860               	iorlw	96
  3622  0702  008F               	movwf	15	;volatile
  3623                           
  3624                           ;Slave_Lou.c: 421:     }
  3625  0703  2F73               	goto	l173
  3626  0704                     l2343:	
  3627                           
  3628                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 9 sub-sw
      +                          itches
  3629                           ; Switch size 1, requested type "simple"
  3630                           ; Number of cases is 1, Range of values is 0 to 0
  3631                           ; switch strategies available:
  3632                           ; Name         Instructions Cycles
  3633                           ; simple_byte            4     3 (average)
  3634                           ; direct_byte           11     8 (fixed)
  3635                           ; jumptable            260     6 (fixed)
  3636                           ;	Chosen strategy is simple_byte
  3637  0704  0875               	movf	OSC_config@frecuencia+3,w
  3638  0705  3A00               	xorlw	0	; case 0
  3639  0706  1903               	skipnz
  3640  0707  2F59               	goto	l4403
  3641  0708  2EFD               	goto	l2341
  3642  0709                     l4387:	
  3643                           
  3644                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3645                           ; Switch size 1, requested type "simple"
  3646                           ; Number of cases is 1, Range of values is 125 to 125
  3647                           ; switch strategies available:
  3648                           ; Name         Instructions Cycles
  3649                           ; simple_byte            4     3 (average)
  3650                           ; direct_byte           14    11 (fixed)
  3651                           ; jumptable            263     9 (fixed)
  3652                           ;	Chosen strategy is simple_byte
  3653  0709  0873               	movf	OSC_config@frecuencia+1,w
  3654  070A  3A7D               	xorlw	125	; case 125
  3655  070B  1903               	skipnz
  3656  070C  2F0E               	goto	l4405
  3657  070D  2EFD               	goto	l2341
  3658  070E                     l4405:	
  3659                           
  3660                           ; Switch size 1, requested type "simple"
  3661                           ; Number of cases is 1, Range of values is 0 to 0
  3662                           ; switch strategies available:
  3663                           ; Name         Instructions Cycles
  3664                           ; simple_byte            4     3 (average)
  3665                           ; direct_byte           11     8 (fixed)
  3666                           ; jumptable            260     6 (fixed)
  3667                           ;	Chosen strategy is simple_byte
  3668  070E  0872               	movf	OSC_config@frecuencia,w
  3669  070F  3A00               	xorlw	0	; case 0
  3670  0710  1903               	skipnz
  3671  0711  2EF8               	goto	l2339
  3672  0712  2EFD               	goto	l2341
  3673  0713                     l4389:	
  3674                           
  3675                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3676                           ; Switch size 1, requested type "simple"
  3677                           ; Number of cases is 1, Range of values is 232 to 232
  3678                           ; switch strategies available:
  3679                           ; Name         Instructions Cycles
  3680                           ; simple_byte            4     3 (average)
  3681                           ; direct_byte           14    11 (fixed)
  3682                           ; jumptable            263     9 (fixed)
  3683                           ;	Chosen strategy is simple_byte
  3684  0713  0873               	movf	OSC_config@frecuencia+1,w
  3685  0714  3AE8               	xorlw	232	; case 232
  3686  0715  1903               	skipnz
  3687  0716  2F18               	goto	l4407
  3688  0717  2EFD               	goto	l2341
  3689  0718                     l4407:	
  3690                           
  3691                           ; Switch size 1, requested type "simple"
  3692                           ; Number of cases is 1, Range of values is 72 to 72
  3693                           ; switch strategies available:
  3694                           ; Name         Instructions Cycles
  3695                           ; simple_byte            4     3 (average)
  3696                           ; direct_byte           14    11 (fixed)
  3697                           ; jumptable            263     9 (fixed)
  3698                           ;	Chosen strategy is simple_byte
  3699  0718  0872               	movf	OSC_config@frecuencia,w
  3700  0719  3A48               	xorlw	72	; case 72
  3701  071A  1903               	skipnz
  3702  071B  2EF1               	goto	l2337
  3703  071C  2EFD               	goto	l2341
  3704  071D                     l4391:	
  3705                           
  3706                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3707                           ; Switch size 1, requested type "simple"
  3708                           ; Number of cases is 1, Range of values is 208 to 208
  3709                           ; switch strategies available:
  3710                           ; Name         Instructions Cycles
  3711                           ; simple_byte            4     3 (average)
  3712                           ; direct_byte           14    11 (fixed)
  3713                           ; jumptable            263     9 (fixed)
  3714                           ;	Chosen strategy is simple_byte
  3715  071D  0873               	movf	OSC_config@frecuencia+1,w
  3716  071E  3AD0               	xorlw	208	; case 208
  3717  071F  1903               	skipnz
  3718  0720  2F22               	goto	l4409
  3719  0721  2EFD               	goto	l2341
  3720  0722                     l4409:	
  3721                           
  3722                           ; Switch size 1, requested type "simple"
  3723                           ; Number of cases is 1, Range of values is 144 to 144
  3724                           ; switch strategies available:
  3725                           ; Name         Instructions Cycles
  3726                           ; simple_byte            4     3 (average)
  3727                           ; direct_byte           14    11 (fixed)
  3728                           ; jumptable            263     9 (fixed)
  3729                           ;	Chosen strategy is simple_byte
  3730  0722  0872               	movf	OSC_config@frecuencia,w
  3731  0723  3A90               	xorlw	144	; case 144
  3732  0724  1903               	skipnz
  3733  0725  2EEA               	goto	l2335
  3734  0726  2EFD               	goto	l2341
  3735  0727                     l4393:	
  3736                           
  3737                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3738                           ; Switch size 1, requested type "simple"
  3739                           ; Number of cases is 1, Range of values is 161 to 161
  3740                           ; switch strategies available:
  3741                           ; Name         Instructions Cycles
  3742                           ; simple_byte            4     3 (average)
  3743                           ; direct_byte           14    11 (fixed)
  3744                           ; jumptable            263     9 (fixed)
  3745                           ;	Chosen strategy is simple_byte
  3746  0727  0873               	movf	OSC_config@frecuencia+1,w
  3747  0728  3AA1               	xorlw	161	; case 161
  3748  0729  1903               	skipnz
  3749  072A  2F2C               	goto	l4411
  3750  072B  2EFD               	goto	l2341
  3751  072C                     l4411:	
  3752                           
  3753                           ; Switch size 1, requested type "simple"
  3754                           ; Number of cases is 1, Range of values is 32 to 32
  3755                           ; switch strategies available:
  3756                           ; Name         Instructions Cycles
  3757                           ; simple_byte            4     3 (average)
  3758                           ; direct_byte           14    11 (fixed)
  3759                           ; jumptable            263     9 (fixed)
  3760                           ;	Chosen strategy is simple_byte
  3761  072C  0872               	movf	OSC_config@frecuencia,w
  3762  072D  3A20               	xorlw	32	; case 32
  3763  072E  1903               	skipnz
  3764  072F  2EE3               	goto	l2333
  3765  0730  2EFD               	goto	l2341
  3766  0731                     l4395:	
  3767                           
  3768                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3769                           ; Switch size 1, requested type "simple"
  3770                           ; Number of cases is 1, Range of values is 66 to 66
  3771                           ; switch strategies available:
  3772                           ; Name         Instructions Cycles
  3773                           ; simple_byte            4     3 (average)
  3774                           ; direct_byte           14    11 (fixed)
  3775                           ; jumptable            263     9 (fixed)
  3776                           ;	Chosen strategy is simple_byte
  3777  0731  0873               	movf	OSC_config@frecuencia+1,w
  3778  0732  3A42               	xorlw	66	; case 66
  3779  0733  1903               	skipnz
  3780  0734  2F36               	goto	l4413
  3781  0735  2EFD               	goto	l2341
  3782  0736                     l4413:	
  3783                           
  3784                           ; Switch size 1, requested type "simple"
  3785                           ; Number of cases is 1, Range of values is 64 to 64
  3786                           ; switch strategies available:
  3787                           ; Name         Instructions Cycles
  3788                           ; simple_byte            4     3 (average)
  3789                           ; direct_byte           14    11 (fixed)
  3790                           ; jumptable            263     9 (fixed)
  3791                           ;	Chosen strategy is simple_byte
  3792  0736  0872               	movf	OSC_config@frecuencia,w
  3793  0737  3A40               	xorlw	64	; case 64
  3794  0738  1903               	skipnz
  3795  0739  2EDC               	goto	l2331
  3796  073A  2EFD               	goto	l2341
  3797  073B                     l4397:	
  3798                           
  3799                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3800                           ; Switch size 1, requested type "simple"
  3801                           ; Number of cases is 1, Range of values is 132 to 132
  3802                           ; switch strategies available:
  3803                           ; Name         Instructions Cycles
  3804                           ; simple_byte            4     3 (average)
  3805                           ; direct_byte           14    11 (fixed)
  3806                           ; jumptable            263     9 (fixed)
  3807                           ;	Chosen strategy is simple_byte
  3808  073B  0873               	movf	OSC_config@frecuencia+1,w
  3809  073C  3A84               	xorlw	132	; case 132
  3810  073D  1903               	skipnz
  3811  073E  2F40               	goto	l4415
  3812  073F  2EFD               	goto	l2341
  3813  0740                     l4415:	
  3814                           
  3815                           ; Switch size 1, requested type "simple"
  3816                           ; Number of cases is 1, Range of values is 128 to 128
  3817                           ; switch strategies available:
  3818                           ; Name         Instructions Cycles
  3819                           ; simple_byte            4     3 (average)
  3820                           ; direct_byte           14    11 (fixed)
  3821                           ; jumptable            263     9 (fixed)
  3822                           ;	Chosen strategy is simple_byte
  3823  0740  0872               	movf	OSC_config@frecuencia,w
  3824  0741  3A80               	xorlw	128	; case 128
  3825  0742  1903               	skipnz
  3826  0743  2ED5               	goto	l2329
  3827  0744  2EFD               	goto	l2341
  3828  0745                     l4399:	
  3829                           
  3830                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3831                           ; Switch size 1, requested type "simple"
  3832                           ; Number of cases is 1, Range of values is 9 to 9
  3833                           ; switch strategies available:
  3834                           ; Name         Instructions Cycles
  3835                           ; simple_byte            4     3 (average)
  3836                           ; direct_byte           14    11 (fixed)
  3837                           ; jumptable            263     9 (fixed)
  3838                           ;	Chosen strategy is simple_byte
  3839  0745  0873               	movf	OSC_config@frecuencia+1,w
  3840  0746  3A09               	xorlw	9	; case 9
  3841  0747  1903               	skipnz
  3842  0748  2F4A               	goto	l4417
  3843  0749  2EFD               	goto	l2341
  3844  074A                     l4417:	
  3845                           
  3846                           ; Switch size 1, requested type "simple"
  3847                           ; Number of cases is 1, Range of values is 0 to 0
  3848                           ; switch strategies available:
  3849                           ; Name         Instructions Cycles
  3850                           ; simple_byte            4     3 (average)
  3851                           ; direct_byte           11     8 (fixed)
  3852                           ; jumptable            260     6 (fixed)
  3853                           ;	Chosen strategy is simple_byte
  3854  074A  0872               	movf	OSC_config@frecuencia,w
  3855  074B  3A00               	xorlw	0	; case 0
  3856  074C  1903               	skipnz
  3857  074D  2ECE               	goto	l2327
  3858  074E  2EFD               	goto	l2341
  3859  074F                     l4401:	
  3860                           
  3861                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3862                           ; Switch size 1, requested type "simple"
  3863                           ; Number of cases is 1, Range of values is 18 to 18
  3864                           ; switch strategies available:
  3865                           ; Name         Instructions Cycles
  3866                           ; simple_byte            4     3 (average)
  3867                           ; direct_byte           14    11 (fixed)
  3868                           ; jumptable            263     9 (fixed)
  3869                           ;	Chosen strategy is simple_byte
  3870  074F  0873               	movf	OSC_config@frecuencia+1,w
  3871  0750  3A12               	xorlw	18	; case 18
  3872  0751  1903               	skipnz
  3873  0752  2F54               	goto	l4419
  3874  0753  2EFD               	goto	l2341
  3875  0754                     l4419:	
  3876                           
  3877                           ; Switch size 1, requested type "simple"
  3878                           ; Number of cases is 1, Range of values is 0 to 0
  3879                           ; switch strategies available:
  3880                           ; Name         Instructions Cycles
  3881                           ; simple_byte            4     3 (average)
  3882                           ; direct_byte           11     8 (fixed)
  3883                           ; jumptable            260     6 (fixed)
  3884                           ;	Chosen strategy is simple_byte
  3885  0754  0872               	movf	OSC_config@frecuencia,w
  3886  0755  3A00               	xorlw	0	; case 0
  3887  0756  1903               	skipnz
  3888  0757  2EC9               	goto	l2325
  3889  0758  2EFD               	goto	l2341
  3890  0759                     l4403:	
  3891                           
  3892                           ; Switch size 1, requested type "simple"
  3893                           ; Number of cases is 8, Range of values is 0 to 122
  3894                           ; switch strategies available:
  3895                           ; Name         Instructions Cycles
  3896                           ; simple_byte           25    13 (average)
  3897                           ; jumptable            260     6 (fixed)
  3898                           ;	Chosen strategy is simple_byte
  3899  0759  0874               	movf	OSC_config@frecuencia+2,w
  3900  075A  3A00               	xorlw	0	; case 0
  3901  075B  1903               	skipnz
  3902  075C  2F09               	goto	l4387
  3903  075D  3A01               	xorlw	1	; case 1
  3904  075E  1903               	skipnz
  3905  075F  2F13               	goto	l4389
  3906  0760  3A02               	xorlw	2	; case 3
  3907  0761  1903               	skipnz
  3908  0762  2F1D               	goto	l4391
  3909  0763  3A04               	xorlw	4	; case 7
  3910  0764  1903               	skipnz
  3911  0765  2F27               	goto	l4393
  3912  0766  3A08               	xorlw	8	; case 15
  3913  0767  1903               	skipnz
  3914  0768  2F31               	goto	l4395
  3915  0769  3A11               	xorlw	17	; case 30
  3916  076A  1903               	skipnz
  3917  076B  2F3B               	goto	l4397
  3918  076C  3A23               	xorlw	35	; case 61
  3919  076D  1903               	skipnz
  3920  076E  2F45               	goto	l4399
  3921  076F  3A47               	xorlw	71	; case 122
  3922  0770  1903               	skipnz
  3923  0771  2F4F               	goto	l4401
  3924  0772  2EFD               	goto	l2341
  3925  0773                     l173:	
  3926  0773  0008               	return
  3927  0774                     __end_of_OSC_config:	
  3928                           
  3929                           	psect	text8
  3930  0B82                     __ptext8:	
  3931 ;; *************** function _config_ADC *****************
  3932 ;; Defined at:
  3933 ;;		line 424 in file "Slave_Lou.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;		None
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;		None
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  1    wreg      void 
  3940 ;; Registers used:
  3941 ;;		None
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3947 ;;      Params:         0       0       0       0       0
  3948 ;;      Locals:         0       0       0       0       0
  3949 ;;      Temps:          0       0       0       0       0
  3950 ;;      Totals:         0       0       0       0       0
  3951 ;;Total ram usage:        0 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:    1
  3954 ;; This function calls:
  3955 ;;		Nothing
  3956 ;; This function is called by:
  3957 ;;		_main
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           
  3962                           ;psect for function _config_ADC
  3963  0B82                     _config_ADC:	
  3964  0B82                     l2515:	
  3965                           ;incstack = 0
  3966                           ; Regs used in _config_ADC: []
  3967                           
  3968                           
  3969                           ;Slave_Lou.c: 425:     ADCON0bits.ADON = 1;
  3970  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  3971  0B83  1303               	bcf	3,6	;RP1=0, select bank0
  3972  0B84  141F               	bsf	31,0	;volatile
  3973                           
  3974                           ;Slave_Lou.c: 428:     ANSELbits.ANS0 = 1;
  3975  0B85  1683               	bsf	3,5	;RP0=1, select bank3
  3976  0B86  1703               	bsf	3,6	;RP1=1, select bank3
  3977  0B87  1408               	bsf	8,0	;volatile
  3978                           
  3979                           ;Slave_Lou.c: 429:     TRISAbits.TRISA0 = 1;
  3980  0B88  1683               	bsf	3,5	;RP0=1, select bank1
  3981  0B89  1303               	bcf	3,6	;RP1=0, select bank1
  3982  0B8A  1405               	bsf	5,0	;volatile
  3983                           
  3984                           ;Slave_Lou.c: 431:     ADCON0bits.CHS0 = 0;
  3985  0B8B  1283               	bcf	3,5	;RP0=0, select bank0
  3986  0B8C  1303               	bcf	3,6	;RP1=0, select bank0
  3987  0B8D  111F               	bcf	31,2	;volatile
  3988                           
  3989                           ;Slave_Lou.c: 432:     ADCON0bits.CHS0 = 0;
  3990  0B8E  111F               	bcf	31,2	;volatile
  3991                           
  3992                           ;Slave_Lou.c: 433:     ADCON0bits.CHS0 = 0;
  3993  0B8F  111F               	bcf	31,2	;volatile
  3994                           
  3995                           ;Slave_Lou.c: 434:     ADCON0bits.CHS0 = 0;
  3996  0B90  111F               	bcf	31,2	;volatile
  3997                           
  3998                           ;Slave_Lou.c: 436:     ADCON1bits.ADFM = 0;
  3999  0B91  1683               	bsf	3,5	;RP0=1, select bank1
  4000  0B92  1303               	bcf	3,6	;RP1=0, select bank1
  4001  0B93  139F               	bcf	31,7	;volatile
  4002                           
  4003                           ;Slave_Lou.c: 437:     ADCON1bits.VCFG0 = 0;
  4004  0B94  121F               	bcf	31,4	;volatile
  4005                           
  4006                           ;Slave_Lou.c: 438:     ADCON1bits.VCFG1 = 0;
  4007  0B95  129F               	bcf	31,5	;volatile
  4008                           
  4009                           ;Slave_Lou.c: 440:     ADCON0bits.ADCS1 = 1;
  4010  0B96  1283               	bcf	3,5	;RP0=0, select bank0
  4011  0B97  1303               	bcf	3,6	;RP1=0, select bank0
  4012  0B98  179F               	bsf	31,7	;volatile
  4013                           
  4014                           ;Slave_Lou.c: 441:     ADCON0bits.ADCS0 = 0;
  4015  0B99  131F               	bcf	31,6	;volatile
  4016                           
  4017                           ;Slave_Lou.c: 444:     INTCONbits.GIE = 1;
  4018  0B9A  178B               	bsf	11,7	;volatile
  4019                           
  4020                           ;Slave_Lou.c: 445:     INTCONbits.PEIE = 1;
  4021  0B9B  170B               	bsf	11,6	;volatile
  4022                           
  4023                           ;Slave_Lou.c: 446:     PIE1bits.ADIE = 1;
  4024  0B9C  1683               	bsf	3,5	;RP0=1, select bank1
  4025  0B9D  1303               	bcf	3,6	;RP1=0, select bank1
  4026  0B9E  170C               	bsf	12,6	;volatile
  4027                           
  4028                           ;Slave_Lou.c: 447:     PIR1bits.ADIF = 0;
  4029  0B9F  1283               	bcf	3,5	;RP0=0, select bank0
  4030  0BA0  1303               	bcf	3,6	;RP1=0, select bank0
  4031  0BA1  130C               	bcf	12,6	;volatile
  4032  0BA2                     l176:	
  4033  0BA2  0008               	return
  4034  0BA3                     __end_of_config_ADC:	
  4035                           
  4036                           	psect	text9
  4037  04E9                     __ptext9:	
  4038 ;; *************** function _Stepper_CW *****************
  4039 ;; Defined at:
  4040 ;;		line 14 in file "STEPPER_MITSUMI.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;  Step_grados_    2    2[COMMON] unsigned int 
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;		None
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  1    wreg      void 
  4047 ;; Registers used:
  4048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4054 ;;      Params:         2       0       0       0       0
  4055 ;;      Locals:         0       0       0       0       0
  4056 ;;      Temps:          2       0       0       0       0
  4057 ;;      Totals:         4       0       0       0       0
  4058 ;;Total ram usage:        4 bytes
  4059 ;; Hardware stack levels used:    1
  4060 ;; Hardware stack levels required when called:    1
  4061 ;; This function calls:
  4062 ;;		Nothing
  4063 ;; This function is called by:
  4064 ;;		_main
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           
  4069                           ;psect for function _Stepper_CW
  4070  04E9                     _Stepper_CW:	
  4071  04E9                     l2705:	
  4072                           ;incstack = 0
  4073                           ; Regs used in _Stepper_CW: [wreg-fsr0h+status,2+status,0+btemp+1]
  4074                           
  4075                           
  4076                           ;STEPPER_MITSUMI.c: 15:     switch(Step_grados_cw){
  4077  04E9  2EAC               	goto	l2767
  4078  04EA                     l2707:	
  4079                           
  4080                           ;STEPPER_MITSUMI.c: 17:             for(i=0; i<25; i++){
  4081  04EA  01F9               	clrf	_i
  4082  04EB  01FA               	clrf	_i+1
  4083  04EC                     l2709:	
  4084  04EC  087A               	movf	_i+1,w
  4085  04ED  3A80               	xorlw	128
  4086  04EE  00FF               	movwf	btemp+1
  4087  04EF  3080               	movlw	128
  4088  04F0  027F               	subwf	btemp+1,w
  4089  04F1  1D03               	skipz
  4090  04F2  2CF5               	goto	u775
  4091  04F3  3019               	movlw	25
  4092  04F4  0279               	subwf	_i,w
  4093  04F5                     u775:	
  4094  04F5  1C03               	skipc
  4095  04F6  2CF8               	goto	u771
  4096  04F7  2CF9               	goto	u770
  4097  04F8                     u771:	
  4098  04F8  2CFA               	goto	l2713
  4099  04F9                     u770:	
  4100  04F9  2EC7               	goto	l219
  4101  04FA                     l2713:	
  4102                           
  4103                           ;STEPPER_MITSUMI.c: 18:                     PORTD = 0b1010;
  4104  04FA  300A               	movlw	10
  4105  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  4106  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  4107  04FD  0088               	movwf	8	;volatile
  4108                           
  4109                           ;STEPPER_MITSUMI.c: 19:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4110  04FE  300D               	movlw	13
  4111  04FF  00F5               	movwf	??_Stepper_CW+1
  4112  0500  30FB               	movlw	251
  4113  0501  00F4               	movwf	??_Stepper_CW
  4114  0502                     u1907:	
  4115  0502  0BF4               	decfsz	??_Stepper_CW,f
  4116  0503  2D02               	goto	u1907
  4117  0504  0BF5               	decfsz	??_Stepper_CW+1,f
  4118  0505  2D02               	goto	u1907
  4119  0506  2D07               	nop2
  4120                           
  4121                           ;STEPPER_MITSUMI.c: 20:                     PORTD = 0b0110;
  4122  0507  3006               	movlw	6
  4123  0508  1283               	bcf	3,5	;RP0=0, select bank0
  4124  0509  1303               	bcf	3,6	;RP1=0, select bank0
  4125  050A  0088               	movwf	8	;volatile
  4126                           
  4127                           ;STEPPER_MITSUMI.c: 21:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4128  050B  300D               	movlw	13
  4129  050C  00F5               	movwf	??_Stepper_CW+1
  4130  050D  30FB               	movlw	251
  4131  050E  00F4               	movwf	??_Stepper_CW
  4132  050F                     u1917:	
  4133  050F  0BF4               	decfsz	??_Stepper_CW,f
  4134  0510  2D0F               	goto	u1917
  4135  0511  0BF5               	decfsz	??_Stepper_CW+1,f
  4136  0512  2D0F               	goto	u1917
  4137  0513  2D14               	nop2
  4138                           
  4139                           ;STEPPER_MITSUMI.c: 22:                     PORTD = 0b0101;
  4140  0514  3005               	movlw	5
  4141  0515  1283               	bcf	3,5	;RP0=0, select bank0
  4142  0516  1303               	bcf	3,6	;RP1=0, select bank0
  4143  0517  0088               	movwf	8	;volatile
  4144                           
  4145                           ;STEPPER_MITSUMI.c: 23:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4146  0518  300D               	movlw	13
  4147  0519  00F5               	movwf	??_Stepper_CW+1
  4148  051A  30FB               	movlw	251
  4149  051B  00F4               	movwf	??_Stepper_CW
  4150  051C                     u1927:	
  4151  051C  0BF4               	decfsz	??_Stepper_CW,f
  4152  051D  2D1C               	goto	u1927
  4153  051E  0BF5               	decfsz	??_Stepper_CW+1,f
  4154  051F  2D1C               	goto	u1927
  4155  0520  2D21               	nop2
  4156                           
  4157                           ;STEPPER_MITSUMI.c: 24:                     PORTD = 0b1001;
  4158  0521  3009               	movlw	9
  4159  0522  1283               	bcf	3,5	;RP0=0, select bank0
  4160  0523  1303               	bcf	3,6	;RP1=0, select bank0
  4161  0524  0088               	movwf	8	;volatile
  4162                           
  4163                           ;STEPPER_MITSUMI.c: 25:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4164  0525  300D               	movlw	13
  4165  0526  00F5               	movwf	??_Stepper_CW+1
  4166  0527  30FB               	movlw	251
  4167  0528  00F4               	movwf	??_Stepper_CW
  4168  0529                     u1937:	
  4169  0529  0BF4               	decfsz	??_Stepper_CW,f
  4170  052A  2D29               	goto	u1937
  4171  052B  0BF5               	decfsz	??_Stepper_CW+1,f
  4172  052C  2D29               	goto	u1937
  4173  052D  2D2E               	nop2
  4174                           
  4175                           ;STEPPER_MITSUMI.c: 27:                 };
  4176  052E  3001               	movlw	1
  4177  052F  07F9               	addwf	_i,f
  4178  0530  1803               	skipnc
  4179  0531  0AFA               	incf	_i+1,f
  4180  0532  3000               	movlw	0
  4181  0533  07FA               	addwf	_i+1,f
  4182  0534  2CEC               	goto	l2709
  4183  0535                     l2717:	
  4184                           
  4185                           ;STEPPER_MITSUMI.c: 31:             for(i=0; i<12; i++){
  4186  0535  01F9               	clrf	_i
  4187  0536  01FA               	clrf	_i+1
  4188  0537                     l2719:	
  4189  0537  087A               	movf	_i+1,w
  4190  0538  3A80               	xorlw	128
  4191  0539  00FF               	movwf	btemp+1
  4192  053A  3080               	movlw	128
  4193  053B  027F               	subwf	btemp+1,w
  4194  053C  1D03               	skipz
  4195  053D  2D40               	goto	u785
  4196  053E  300C               	movlw	12
  4197  053F  0279               	subwf	_i,w
  4198  0540                     u785:	
  4199  0540  1C03               	skipc
  4200  0541  2D43               	goto	u781
  4201  0542  2D44               	goto	u780
  4202  0543                     u781:	
  4203  0543  2D45               	goto	l2723
  4204  0544                     u780:	
  4205  0544  2EC7               	goto	l219
  4206  0545                     l2723:	
  4207                           
  4208                           ;STEPPER_MITSUMI.c: 32:                     PORTD = 0b1010;
  4209  0545  300A               	movlw	10
  4210  0546  1283               	bcf	3,5	;RP0=0, select bank0
  4211  0547  1303               	bcf	3,6	;RP1=0, select bank0
  4212  0548  0088               	movwf	8	;volatile
  4213                           
  4214                           ;STEPPER_MITSUMI.c: 33:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4215  0549  300D               	movlw	13
  4216  054A  00F5               	movwf	??_Stepper_CW+1
  4217  054B  30FB               	movlw	251
  4218  054C  00F4               	movwf	??_Stepper_CW
  4219  054D                     u1947:	
  4220  054D  0BF4               	decfsz	??_Stepper_CW,f
  4221  054E  2D4D               	goto	u1947
  4222  054F  0BF5               	decfsz	??_Stepper_CW+1,f
  4223  0550  2D4D               	goto	u1947
  4224  0551  2D52               	nop2
  4225                           
  4226                           ;STEPPER_MITSUMI.c: 34:                     PORTD = 0b0110;
  4227  0552  3006               	movlw	6
  4228  0553  1283               	bcf	3,5	;RP0=0, select bank0
  4229  0554  1303               	bcf	3,6	;RP1=0, select bank0
  4230  0555  0088               	movwf	8	;volatile
  4231                           
  4232                           ;STEPPER_MITSUMI.c: 35:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4233  0556  300D               	movlw	13
  4234  0557  00F5               	movwf	??_Stepper_CW+1
  4235  0558  30FB               	movlw	251
  4236  0559  00F4               	movwf	??_Stepper_CW
  4237  055A                     u1957:	
  4238  055A  0BF4               	decfsz	??_Stepper_CW,f
  4239  055B  2D5A               	goto	u1957
  4240  055C  0BF5               	decfsz	??_Stepper_CW+1,f
  4241  055D  2D5A               	goto	u1957
  4242  055E  2D5F               	nop2
  4243                           
  4244                           ;STEPPER_MITSUMI.c: 36:                     PORTD = 0b0101;
  4245  055F  3005               	movlw	5
  4246  0560  1283               	bcf	3,5	;RP0=0, select bank0
  4247  0561  1303               	bcf	3,6	;RP1=0, select bank0
  4248  0562  0088               	movwf	8	;volatile
  4249                           
  4250                           ;STEPPER_MITSUMI.c: 37:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4251  0563  300D               	movlw	13
  4252  0564  00F5               	movwf	??_Stepper_CW+1
  4253  0565  30FB               	movlw	251
  4254  0566  00F4               	movwf	??_Stepper_CW
  4255  0567                     u1967:	
  4256  0567  0BF4               	decfsz	??_Stepper_CW,f
  4257  0568  2D67               	goto	u1967
  4258  0569  0BF5               	decfsz	??_Stepper_CW+1,f
  4259  056A  2D67               	goto	u1967
  4260  056B  2D6C               	nop2
  4261                           
  4262                           ;STEPPER_MITSUMI.c: 38:                     PORTD = 0b1001;
  4263  056C  3009               	movlw	9
  4264  056D  1283               	bcf	3,5	;RP0=0, select bank0
  4265  056E  1303               	bcf	3,6	;RP1=0, select bank0
  4266  056F  0088               	movwf	8	;volatile
  4267                           
  4268                           ;STEPPER_MITSUMI.c: 39:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4269  0570  300D               	movlw	13
  4270  0571  00F5               	movwf	??_Stepper_CW+1
  4271  0572  30FB               	movlw	251
  4272  0573  00F4               	movwf	??_Stepper_CW
  4273  0574                     u1977:	
  4274  0574  0BF4               	decfsz	??_Stepper_CW,f
  4275  0575  2D74               	goto	u1977
  4276  0576  0BF5               	decfsz	??_Stepper_CW+1,f
  4277  0577  2D74               	goto	u1977
  4278  0578  2D79               	nop2
  4279                           
  4280                           ;STEPPER_MITSUMI.c: 41:                 };
  4281  0579  3001               	movlw	1
  4282  057A  07F9               	addwf	_i,f
  4283  057B  1803               	skipnc
  4284  057C  0AFA               	incf	_i+1,f
  4285  057D  3000               	movlw	0
  4286  057E  07FA               	addwf	_i+1,f
  4287  057F  2D37               	goto	l2719
  4288  0580                     l2727:	
  4289                           
  4290                           ;STEPPER_MITSUMI.c: 45:             for(i=0; i<6; i++){
  4291  0580  01F9               	clrf	_i
  4292  0581  01FA               	clrf	_i+1
  4293  0582                     l2729:	
  4294  0582  087A               	movf	_i+1,w
  4295  0583  3A80               	xorlw	128
  4296  0584  00FF               	movwf	btemp+1
  4297  0585  3080               	movlw	128
  4298  0586  027F               	subwf	btemp+1,w
  4299  0587  1D03               	skipz
  4300  0588  2D8B               	goto	u795
  4301  0589  3006               	movlw	6
  4302  058A  0279               	subwf	_i,w
  4303  058B                     u795:	
  4304  058B  1C03               	skipc
  4305  058C  2D8E               	goto	u791
  4306  058D  2D8F               	goto	u790
  4307  058E                     u791:	
  4308  058E  2D90               	goto	l2733
  4309  058F                     u790:	
  4310  058F  2EC7               	goto	l219
  4311  0590                     l2733:	
  4312                           
  4313                           ;STEPPER_MITSUMI.c: 46:                     PORTD = 0b1010;
  4314  0590  300A               	movlw	10
  4315  0591  1283               	bcf	3,5	;RP0=0, select bank0
  4316  0592  1303               	bcf	3,6	;RP1=0, select bank0
  4317  0593  0088               	movwf	8	;volatile
  4318                           
  4319                           ;STEPPER_MITSUMI.c: 47:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4320  0594  300D               	movlw	13
  4321  0595  00F5               	movwf	??_Stepper_CW+1
  4322  0596  30FB               	movlw	251
  4323  0597  00F4               	movwf	??_Stepper_CW
  4324  0598                     u1987:	
  4325  0598  0BF4               	decfsz	??_Stepper_CW,f
  4326  0599  2D98               	goto	u1987
  4327  059A  0BF5               	decfsz	??_Stepper_CW+1,f
  4328  059B  2D98               	goto	u1987
  4329  059C  2D9D               	nop2
  4330                           
  4331                           ;STEPPER_MITSUMI.c: 48:                     PORTD = 0b0110;
  4332  059D  3006               	movlw	6
  4333  059E  1283               	bcf	3,5	;RP0=0, select bank0
  4334  059F  1303               	bcf	3,6	;RP1=0, select bank0
  4335  05A0  0088               	movwf	8	;volatile
  4336                           
  4337                           ;STEPPER_MITSUMI.c: 49:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4338  05A1  300D               	movlw	13
  4339  05A2  00F5               	movwf	??_Stepper_CW+1
  4340  05A3  30FB               	movlw	251
  4341  05A4  00F4               	movwf	??_Stepper_CW
  4342  05A5                     u1997:	
  4343  05A5  0BF4               	decfsz	??_Stepper_CW,f
  4344  05A6  2DA5               	goto	u1997
  4345  05A7  0BF5               	decfsz	??_Stepper_CW+1,f
  4346  05A8  2DA5               	goto	u1997
  4347  05A9  2DAA               	nop2
  4348                           
  4349                           ;STEPPER_MITSUMI.c: 50:                     PORTD = 0b0101;
  4350  05AA  3005               	movlw	5
  4351  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  4352  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  4353  05AD  0088               	movwf	8	;volatile
  4354                           
  4355                           ;STEPPER_MITSUMI.c: 51:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4356  05AE  300D               	movlw	13
  4357  05AF  00F5               	movwf	??_Stepper_CW+1
  4358  05B0  30FB               	movlw	251
  4359  05B1  00F4               	movwf	??_Stepper_CW
  4360  05B2                     u2007:	
  4361  05B2  0BF4               	decfsz	??_Stepper_CW,f
  4362  05B3  2DB2               	goto	u2007
  4363  05B4  0BF5               	decfsz	??_Stepper_CW+1,f
  4364  05B5  2DB2               	goto	u2007
  4365  05B6  2DB7               	nop2
  4366                           
  4367                           ;STEPPER_MITSUMI.c: 52:                     PORTD = 0b1001;
  4368  05B7  3009               	movlw	9
  4369  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  4370  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  4371  05BA  0088               	movwf	8	;volatile
  4372                           
  4373                           ;STEPPER_MITSUMI.c: 53:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4374  05BB  300D               	movlw	13
  4375  05BC  00F5               	movwf	??_Stepper_CW+1
  4376  05BD  30FB               	movlw	251
  4377  05BE  00F4               	movwf	??_Stepper_CW
  4378  05BF                     u2017:	
  4379  05BF  0BF4               	decfsz	??_Stepper_CW,f
  4380  05C0  2DBF               	goto	u2017
  4381  05C1  0BF5               	decfsz	??_Stepper_CW+1,f
  4382  05C2  2DBF               	goto	u2017
  4383  05C3  2DC4               	nop2
  4384                           
  4385                           ;STEPPER_MITSUMI.c: 55:                 };
  4386  05C4  3001               	movlw	1
  4387  05C5  07F9               	addwf	_i,f
  4388  05C6  1803               	skipnc
  4389  05C7  0AFA               	incf	_i+1,f
  4390  05C8  3000               	movlw	0
  4391  05C9  07FA               	addwf	_i+1,f
  4392  05CA  2D82               	goto	l2729
  4393  05CB                     l2737:	
  4394                           
  4395                           ;STEPPER_MITSUMI.c: 59:             for(i=0; i<3; i++){
  4396  05CB  01F9               	clrf	_i
  4397  05CC  01FA               	clrf	_i+1
  4398  05CD                     l2739:	
  4399  05CD  087A               	movf	_i+1,w
  4400  05CE  3A80               	xorlw	128
  4401  05CF  00FF               	movwf	btemp+1
  4402  05D0  3080               	movlw	128
  4403  05D1  027F               	subwf	btemp+1,w
  4404  05D2  1D03               	skipz
  4405  05D3  2DD6               	goto	u805
  4406  05D4  3003               	movlw	3
  4407  05D5  0279               	subwf	_i,w
  4408  05D6                     u805:	
  4409  05D6  1C03               	skipc
  4410  05D7  2DD9               	goto	u801
  4411  05D8  2DDA               	goto	u800
  4412  05D9                     u801:	
  4413  05D9  2DDB               	goto	l2743
  4414  05DA                     u800:	
  4415  05DA  2EC7               	goto	l219
  4416  05DB                     l2743:	
  4417                           
  4418                           ;STEPPER_MITSUMI.c: 60:                     PORTD = 0b1010;
  4419  05DB  300A               	movlw	10
  4420  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  4421  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  4422  05DE  0088               	movwf	8	;volatile
  4423                           
  4424                           ;STEPPER_MITSUMI.c: 61:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4425  05DF  300D               	movlw	13
  4426  05E0  00F5               	movwf	??_Stepper_CW+1
  4427  05E1  30FB               	movlw	251
  4428  05E2  00F4               	movwf	??_Stepper_CW
  4429  05E3                     u2027:	
  4430  05E3  0BF4               	decfsz	??_Stepper_CW,f
  4431  05E4  2DE3               	goto	u2027
  4432  05E5  0BF5               	decfsz	??_Stepper_CW+1,f
  4433  05E6  2DE3               	goto	u2027
  4434  05E7  2DE8               	nop2
  4435                           
  4436                           ;STEPPER_MITSUMI.c: 62:                     PORTD = 0b0110;
  4437  05E8  3006               	movlw	6
  4438  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  4439  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  4440  05EB  0088               	movwf	8	;volatile
  4441                           
  4442                           ;STEPPER_MITSUMI.c: 63:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4443  05EC  300D               	movlw	13
  4444  05ED  00F5               	movwf	??_Stepper_CW+1
  4445  05EE  30FB               	movlw	251
  4446  05EF  00F4               	movwf	??_Stepper_CW
  4447  05F0                     u2037:	
  4448  05F0  0BF4               	decfsz	??_Stepper_CW,f
  4449  05F1  2DF0               	goto	u2037
  4450  05F2  0BF5               	decfsz	??_Stepper_CW+1,f
  4451  05F3  2DF0               	goto	u2037
  4452  05F4  2DF5               	nop2
  4453                           
  4454                           ;STEPPER_MITSUMI.c: 64:                     PORTD = 0b0101;
  4455  05F5  3005               	movlw	5
  4456  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  4457  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  4458  05F8  0088               	movwf	8	;volatile
  4459                           
  4460                           ;STEPPER_MITSUMI.c: 65:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4461  05F9  300D               	movlw	13
  4462  05FA  00F5               	movwf	??_Stepper_CW+1
  4463  05FB  30FB               	movlw	251
  4464  05FC  00F4               	movwf	??_Stepper_CW
  4465  05FD                     u2047:	
  4466  05FD  0BF4               	decfsz	??_Stepper_CW,f
  4467  05FE  2DFD               	goto	u2047
  4468  05FF  0BF5               	decfsz	??_Stepper_CW+1,f
  4469  0600  2DFD               	goto	u2047
  4470  0601  2E02               	nop2
  4471                           
  4472                           ;STEPPER_MITSUMI.c: 66:                     PORTD = 0b1001;
  4473  0602  3009               	movlw	9
  4474  0603  1283               	bcf	3,5	;RP0=0, select bank0
  4475  0604  1303               	bcf	3,6	;RP1=0, select bank0
  4476  0605  0088               	movwf	8	;volatile
  4477                           
  4478                           ;STEPPER_MITSUMI.c: 67:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4479  0606  300D               	movlw	13
  4480  0607  00F5               	movwf	??_Stepper_CW+1
  4481  0608  30FB               	movlw	251
  4482  0609  00F4               	movwf	??_Stepper_CW
  4483  060A                     u2057:	
  4484  060A  0BF4               	decfsz	??_Stepper_CW,f
  4485  060B  2E0A               	goto	u2057
  4486  060C  0BF5               	decfsz	??_Stepper_CW+1,f
  4487  060D  2E0A               	goto	u2057
  4488  060E  2E0F               	nop2
  4489                           
  4490                           ;STEPPER_MITSUMI.c: 69:                 };
  4491  060F  3001               	movlw	1
  4492  0610  07F9               	addwf	_i,f
  4493  0611  1803               	skipnc
  4494  0612  0AFA               	incf	_i+1,f
  4495  0613  3000               	movlw	0
  4496  0614  07FA               	addwf	_i+1,f
  4497  0615  2DCD               	goto	l2739
  4498  0616                     l2747:	
  4499                           
  4500                           ;STEPPER_MITSUMI.c: 73:             for(i=0; i<1; i++){
  4501  0616  01F9               	clrf	_i
  4502  0617  01FA               	clrf	_i+1
  4503  0618                     l2749:	
  4504  0618  087A               	movf	_i+1,w
  4505  0619  3A80               	xorlw	128
  4506  061A  00FF               	movwf	btemp+1
  4507  061B  3080               	movlw	128
  4508  061C  027F               	subwf	btemp+1,w
  4509  061D  1D03               	skipz
  4510  061E  2E21               	goto	u815
  4511  061F  3001               	movlw	1
  4512  0620  0279               	subwf	_i,w
  4513  0621                     u815:	
  4514  0621  1C03               	skipc
  4515  0622  2E24               	goto	u811
  4516  0623  2E25               	goto	u810
  4517  0624                     u811:	
  4518  0624  2E26               	goto	l2753
  4519  0625                     u810:	
  4520  0625  2EC7               	goto	l219
  4521  0626                     l2753:	
  4522                           
  4523                           ;STEPPER_MITSUMI.c: 74:                     PORTD = 0b1010;
  4524  0626  300A               	movlw	10
  4525  0627  1283               	bcf	3,5	;RP0=0, select bank0
  4526  0628  1303               	bcf	3,6	;RP1=0, select bank0
  4527  0629  0088               	movwf	8	;volatile
  4528                           
  4529                           ;STEPPER_MITSUMI.c: 75:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4530  062A  300D               	movlw	13
  4531  062B  00F5               	movwf	??_Stepper_CW+1
  4532  062C  30FB               	movlw	251
  4533  062D  00F4               	movwf	??_Stepper_CW
  4534  062E                     u2067:	
  4535  062E  0BF4               	decfsz	??_Stepper_CW,f
  4536  062F  2E2E               	goto	u2067
  4537  0630  0BF5               	decfsz	??_Stepper_CW+1,f
  4538  0631  2E2E               	goto	u2067
  4539  0632  2E33               	nop2
  4540                           
  4541                           ;STEPPER_MITSUMI.c: 76:                     PORTD = 0b0110;
  4542  0633  3006               	movlw	6
  4543  0634  1283               	bcf	3,5	;RP0=0, select bank0
  4544  0635  1303               	bcf	3,6	;RP1=0, select bank0
  4545  0636  0088               	movwf	8	;volatile
  4546                           
  4547                           ;STEPPER_MITSUMI.c: 77:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4548  0637  300D               	movlw	13
  4549  0638  00F5               	movwf	??_Stepper_CW+1
  4550  0639  30FB               	movlw	251
  4551  063A  00F4               	movwf	??_Stepper_CW
  4552  063B                     u2077:	
  4553  063B  0BF4               	decfsz	??_Stepper_CW,f
  4554  063C  2E3B               	goto	u2077
  4555  063D  0BF5               	decfsz	??_Stepper_CW+1,f
  4556  063E  2E3B               	goto	u2077
  4557  063F  2E40               	nop2
  4558                           
  4559                           ;STEPPER_MITSUMI.c: 78:                     PORTD = 0b0101;
  4560  0640  3005               	movlw	5
  4561  0641  1283               	bcf	3,5	;RP0=0, select bank0
  4562  0642  1303               	bcf	3,6	;RP1=0, select bank0
  4563  0643  0088               	movwf	8	;volatile
  4564                           
  4565                           ;STEPPER_MITSUMI.c: 79:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4566  0644  300D               	movlw	13
  4567  0645  00F5               	movwf	??_Stepper_CW+1
  4568  0646  30FB               	movlw	251
  4569  0647  00F4               	movwf	??_Stepper_CW
  4570  0648                     u2087:	
  4571  0648  0BF4               	decfsz	??_Stepper_CW,f
  4572  0649  2E48               	goto	u2087
  4573  064A  0BF5               	decfsz	??_Stepper_CW+1,f
  4574  064B  2E48               	goto	u2087
  4575  064C  2E4D               	nop2
  4576                           
  4577                           ;STEPPER_MITSUMI.c: 80:                     PORTD = 0b1001;
  4578  064D  3009               	movlw	9
  4579  064E  1283               	bcf	3,5	;RP0=0, select bank0
  4580  064F  1303               	bcf	3,6	;RP1=0, select bank0
  4581  0650  0088               	movwf	8	;volatile
  4582                           
  4583                           ;STEPPER_MITSUMI.c: 81:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4584  0651  300D               	movlw	13
  4585  0652  00F5               	movwf	??_Stepper_CW+1
  4586  0653  30FB               	movlw	251
  4587  0654  00F4               	movwf	??_Stepper_CW
  4588  0655                     u2097:	
  4589  0655  0BF4               	decfsz	??_Stepper_CW,f
  4590  0656  2E55               	goto	u2097
  4591  0657  0BF5               	decfsz	??_Stepper_CW+1,f
  4592  0658  2E55               	goto	u2097
  4593  0659  2E5A               	nop2
  4594                           
  4595                           ;STEPPER_MITSUMI.c: 83:                 };
  4596  065A  3001               	movlw	1
  4597  065B  07F9               	addwf	_i,f
  4598  065C  1803               	skipnc
  4599  065D  0AFA               	incf	_i+1,f
  4600  065E  3000               	movlw	0
  4601  065F  07FA               	addwf	_i+1,f
  4602  0660  2E18               	goto	l2749
  4603  0661                     l2757:	
  4604                           
  4605                           ;STEPPER_MITSUMI.c: 87:             for(i=0; i<2; i++){
  4606  0661  01F9               	clrf	_i
  4607  0662  01FA               	clrf	_i+1
  4608  0663                     l2759:	
  4609  0663  087A               	movf	_i+1,w
  4610  0664  3A80               	xorlw	128
  4611  0665  00FF               	movwf	btemp+1
  4612  0666  3080               	movlw	128
  4613  0667  027F               	subwf	btemp+1,w
  4614  0668  1D03               	skipz
  4615  0669  2E6C               	goto	u825
  4616  066A  3002               	movlw	2
  4617  066B  0279               	subwf	_i,w
  4618  066C                     u825:	
  4619  066C  1C03               	skipc
  4620  066D  2E6F               	goto	u821
  4621  066E  2E70               	goto	u820
  4622  066F                     u821:	
  4623  066F  2E71               	goto	l2763
  4624  0670                     u820:	
  4625  0670  2EC7               	goto	l219
  4626  0671                     l2763:	
  4627                           
  4628                           ;STEPPER_MITSUMI.c: 88:                     PORTD = 0b1010;
  4629  0671  300A               	movlw	10
  4630  0672  1283               	bcf	3,5	;RP0=0, select bank0
  4631  0673  1303               	bcf	3,6	;RP1=0, select bank0
  4632  0674  0088               	movwf	8	;volatile
  4633                           
  4634                           ;STEPPER_MITSUMI.c: 89:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4635  0675  300D               	movlw	13
  4636  0676  00F5               	movwf	??_Stepper_CW+1
  4637  0677  30FB               	movlw	251
  4638  0678  00F4               	movwf	??_Stepper_CW
  4639  0679                     u2107:	
  4640  0679  0BF4               	decfsz	??_Stepper_CW,f
  4641  067A  2E79               	goto	u2107
  4642  067B  0BF5               	decfsz	??_Stepper_CW+1,f
  4643  067C  2E79               	goto	u2107
  4644  067D  2E7E               	nop2
  4645                           
  4646                           ;STEPPER_MITSUMI.c: 90:                     PORTD = 0b0110;
  4647  067E  3006               	movlw	6
  4648  067F  1283               	bcf	3,5	;RP0=0, select bank0
  4649  0680  1303               	bcf	3,6	;RP1=0, select bank0
  4650  0681  0088               	movwf	8	;volatile
  4651                           
  4652                           ;STEPPER_MITSUMI.c: 91:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4653  0682  300D               	movlw	13
  4654  0683  00F5               	movwf	??_Stepper_CW+1
  4655  0684  30FB               	movlw	251
  4656  0685  00F4               	movwf	??_Stepper_CW
  4657  0686                     u2117:	
  4658  0686  0BF4               	decfsz	??_Stepper_CW,f
  4659  0687  2E86               	goto	u2117
  4660  0688  0BF5               	decfsz	??_Stepper_CW+1,f
  4661  0689  2E86               	goto	u2117
  4662  068A  2E8B               	nop2
  4663                           
  4664                           ;STEPPER_MITSUMI.c: 92:                     PORTD = 0b0101;
  4665  068B  3005               	movlw	5
  4666  068C  1283               	bcf	3,5	;RP0=0, select bank0
  4667  068D  1303               	bcf	3,6	;RP1=0, select bank0
  4668  068E  0088               	movwf	8	;volatile
  4669                           
  4670                           ;STEPPER_MITSUMI.c: 93:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4671  068F  300D               	movlw	13
  4672  0690  00F5               	movwf	??_Stepper_CW+1
  4673  0691  30FB               	movlw	251
  4674  0692  00F4               	movwf	??_Stepper_CW
  4675  0693                     u2127:	
  4676  0693  0BF4               	decfsz	??_Stepper_CW,f
  4677  0694  2E93               	goto	u2127
  4678  0695  0BF5               	decfsz	??_Stepper_CW+1,f
  4679  0696  2E93               	goto	u2127
  4680  0697  2E98               	nop2
  4681                           
  4682                           ;STEPPER_MITSUMI.c: 94:                     PORTD = 0b1001;
  4683  0698  3009               	movlw	9
  4684  0699  1283               	bcf	3,5	;RP0=0, select bank0
  4685  069A  1303               	bcf	3,6	;RP1=0, select bank0
  4686  069B  0088               	movwf	8	;volatile
  4687                           
  4688                           ;STEPPER_MITSUMI.c: 95:                     _delay((unsigned long)((10)*(4000000/4000.0)
      +                          ));
  4689  069C  300D               	movlw	13
  4690  069D  00F5               	movwf	??_Stepper_CW+1
  4691  069E  30FB               	movlw	251
  4692  069F  00F4               	movwf	??_Stepper_CW
  4693  06A0                     u2137:	
  4694  06A0  0BF4               	decfsz	??_Stepper_CW,f
  4695  06A1  2EA0               	goto	u2137
  4696  06A2  0BF5               	decfsz	??_Stepper_CW+1,f
  4697  06A3  2EA0               	goto	u2137
  4698  06A4  2EA5               	nop2
  4699                           
  4700                           ;STEPPER_MITSUMI.c: 97:                 };
  4701  06A5  3001               	movlw	1
  4702  06A6  07F9               	addwf	_i,f
  4703  06A7  1803               	skipnc
  4704  06A8  0AFA               	incf	_i+1,f
  4705  06A9  3000               	movlw	0
  4706  06AA  07FA               	addwf	_i+1,f
  4707  06AB  2E63               	goto	l2759
  4708  06AC                     l2767:	
  4709                           
  4710                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4711                           ; Switch size 1, requested type "simple"
  4712                           ; Number of cases is 2, Range of values is 0 to 1
  4713                           ; switch strategies available:
  4714                           ; Name         Instructions Cycles
  4715                           ; simple_byte            7     4 (average)
  4716                           ; direct_byte           14     8 (fixed)
  4717                           ; jumptable            260     6 (fixed)
  4718                           ;	Chosen strategy is simple_byte
  4719  06AC  0873               	movf	Stepper_CW@Step_grados_cw+1,w
  4720  06AD  3A00               	xorlw	0	; case 0
  4721  06AE  1903               	skipnz
  4722  06AF  2EB4               	goto	l4421
  4723  06B0  3A01               	xorlw	1	; case 1
  4724  06B1  1903               	skipnz
  4725  06B2  2EC2               	goto	l4423
  4726  06B3  2E61               	goto	l2757
  4727  06B4                     l4421:	
  4728                           
  4729                           ; Switch size 1, requested type "simple"
  4730                           ; Number of cases is 4, Range of values is 15 to 180
  4731                           ; switch strategies available:
  4732                           ; Name         Instructions Cycles
  4733                           ; simple_byte           13     7 (average)
  4734                           ; jumptable            263     9 (fixed)
  4735                           ;	Chosen strategy is simple_byte
  4736  06B4  0872               	movf	Stepper_CW@Step_grados_cw,w
  4737  06B5  3A0F               	xorlw	15	; case 15
  4738  06B6  1903               	skipnz
  4739  06B7  2E16               	goto	l2747
  4740  06B8  3A22               	xorlw	34	; case 45
  4741  06B9  1903               	skipnz
  4742  06BA  2DCB               	goto	l2737
  4743  06BB  3A77               	xorlw	119	; case 90
  4744  06BC  1903               	skipnz
  4745  06BD  2D80               	goto	l2727
  4746  06BE  3AEE               	xorlw	238	; case 180
  4747  06BF  1903               	skipnz
  4748  06C0  2D35               	goto	l2717
  4749  06C1  2E61               	goto	l2757
  4750  06C2                     l4423:	
  4751                           
  4752                           ; Switch size 1, requested type "simple"
  4753                           ; Number of cases is 1, Range of values is 104 to 104
  4754                           ; switch strategies available:
  4755                           ; Name         Instructions Cycles
  4756                           ; simple_byte            4     3 (average)
  4757                           ; direct_byte           14    11 (fixed)
  4758                           ; jumptable            263     9 (fixed)
  4759                           ;	Chosen strategy is simple_byte
  4760  06C2  0872               	movf	Stepper_CW@Step_grados_cw,w
  4761  06C3  3A68               	xorlw	104	; case 104
  4762  06C4  1903               	skipnz
  4763  06C5  2CEA               	goto	l2707
  4764  06C6  2E61               	goto	l2757
  4765  06C7                     l219:	
  4766  06C7  0008               	return
  4767  06C8                     __end_of_Stepper_CW:	
  4768                           
  4769                           	psect	text10
  4770  0E21                     __ptext10:	
  4771 ;; *************** function _Stepper_CCW *****************
  4772 ;; Defined at:
  4773 ;;		line 102 in file "STEPPER_MITSUMI.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;  Step_grados_    2    2[COMMON] unsigned int 
  4776 ;; Auto vars:     Size  Location     Type
  4777 ;;		None
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  1    wreg      void 
  4780 ;; Registers used:
  4781 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4787 ;;      Params:         2       0       0       0       0
  4788 ;;      Locals:         0       0       0       0       0
  4789 ;;      Temps:          2       0       0       0       0
  4790 ;;      Totals:         4       0       0       0       0
  4791 ;;Total ram usage:        4 bytes
  4792 ;; Hardware stack levels used:    1
  4793 ;; Hardware stack levels required when called:    1
  4794 ;; This function calls:
  4795 ;;		Nothing
  4796 ;; This function is called by:
  4797 ;;		_main
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           
  4802                           ;psect for function _Stepper_CCW
  4803  0E21                     _Stepper_CCW:	
  4804  0E21                     l2777:	
  4805                           ;incstack = 0
  4806                           ; Regs used in _Stepper_CCW: [wreg-fsr0h+status,2+status,0+btemp+1]
  4807                           
  4808                           
  4809                           ;STEPPER_MITSUMI.c: 103:     switch(Step_grados_ccw){
  4810  0E21  2FE4               	goto	l2839
  4811  0E22                     l2779:	
  4812                           
  4813                           ;STEPPER_MITSUMI.c: 105:             for(i=0; i<25; i++){
  4814  0E22  01F9               	clrf	_i
  4815  0E23  01FA               	clrf	_i+1
  4816  0E24                     l2781:	
  4817  0E24  087A               	movf	_i+1,w
  4818  0E25  3A80               	xorlw	128
  4819  0E26  00FF               	movwf	btemp+1
  4820  0E27  3080               	movlw	128
  4821  0E28  027F               	subwf	btemp+1,w
  4822  0E29  1D03               	skipz
  4823  0E2A  2E2D               	goto	u835
  4824  0E2B  3019               	movlw	25
  4825  0E2C  0279               	subwf	_i,w
  4826  0E2D                     u835:	
  4827  0E2D  1C03               	skipc
  4828  0E2E  2E30               	goto	u831
  4829  0E2F  2E31               	goto	u830
  4830  0E30                     u831:	
  4831  0E30  2E32               	goto	l2785
  4832  0E31                     u830:	
  4833  0E31  2FFF               	goto	l242
  4834  0E32                     l2785:	
  4835                           
  4836                           ;STEPPER_MITSUMI.c: 106:                     PORTD = 0b1001;
  4837  0E32  3009               	movlw	9
  4838  0E33  1283               	bcf	3,5	;RP0=0, select bank0
  4839  0E34  1303               	bcf	3,6	;RP1=0, select bank0
  4840  0E35  0088               	movwf	8	;volatile
  4841                           
  4842                           ;STEPPER_MITSUMI.c: 107:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  4843  0E36  300D               	movlw	13
  4844  0E37  00F5               	movwf	??_Stepper_CCW+1
  4845  0E38  30FB               	movlw	251
  4846  0E39  00F4               	movwf	??_Stepper_CCW
  4847  0E3A                     u2147:	
  4848  0E3A  0BF4               	decfsz	??_Stepper_CCW,f
  4849  0E3B  2E3A               	goto	u2147
  4850  0E3C  0BF5               	decfsz	??_Stepper_CCW+1,f
  4851  0E3D  2E3A               	goto	u2147
  4852  0E3E  2E3F               	nop2
  4853                           
  4854                           ;STEPPER_MITSUMI.c: 108:                     PORTD = 0b0101;
  4855  0E3F  3005               	movlw	5
  4856  0E40  1283               	bcf	3,5	;RP0=0, select bank0
  4857  0E41  1303               	bcf	3,6	;RP1=0, select bank0
  4858  0E42  0088               	movwf	8	;volatile
  4859                           
  4860                           ;STEPPER_MITSUMI.c: 109:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  4861  0E43  300D               	movlw	13
  4862  0E44  00F5               	movwf	??_Stepper_CCW+1
  4863  0E45  30FB               	movlw	251
  4864  0E46  00F4               	movwf	??_Stepper_CCW
  4865  0E47                     u2157:	
  4866  0E47  0BF4               	decfsz	??_Stepper_CCW,f
  4867  0E48  2E47               	goto	u2157
  4868  0E49  0BF5               	decfsz	??_Stepper_CCW+1,f
  4869  0E4A  2E47               	goto	u2157
  4870  0E4B  2E4C               	nop2
  4871                           
  4872                           ;STEPPER_MITSUMI.c: 110:                     PORTD = 0b0110;
  4873  0E4C  3006               	movlw	6
  4874  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  4875  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  4876  0E4F  0088               	movwf	8	;volatile
  4877                           
  4878                           ;STEPPER_MITSUMI.c: 111:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  4879  0E50  300D               	movlw	13
  4880  0E51  00F5               	movwf	??_Stepper_CCW+1
  4881  0E52  30FB               	movlw	251
  4882  0E53  00F4               	movwf	??_Stepper_CCW
  4883  0E54                     u2167:	
  4884  0E54  0BF4               	decfsz	??_Stepper_CCW,f
  4885  0E55  2E54               	goto	u2167
  4886  0E56  0BF5               	decfsz	??_Stepper_CCW+1,f
  4887  0E57  2E54               	goto	u2167
  4888  0E58  2E59               	nop2
  4889                           
  4890                           ;STEPPER_MITSUMI.c: 112:                     PORTD = 0b1010;
  4891  0E59  300A               	movlw	10
  4892  0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  4893  0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  4894  0E5C  0088               	movwf	8	;volatile
  4895                           
  4896                           ;STEPPER_MITSUMI.c: 113:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  4897  0E5D  300D               	movlw	13
  4898  0E5E  00F5               	movwf	??_Stepper_CCW+1
  4899  0E5F  30FB               	movlw	251
  4900  0E60  00F4               	movwf	??_Stepper_CCW
  4901  0E61                     u2177:	
  4902  0E61  0BF4               	decfsz	??_Stepper_CCW,f
  4903  0E62  2E61               	goto	u2177
  4904  0E63  0BF5               	decfsz	??_Stepper_CCW+1,f
  4905  0E64  2E61               	goto	u2177
  4906  0E65  2E66               	nop2
  4907                           
  4908                           ;STEPPER_MITSUMI.c: 114:                 };
  4909  0E66  3001               	movlw	1
  4910  0E67  07F9               	addwf	_i,f
  4911  0E68  1803               	skipnc
  4912  0E69  0AFA               	incf	_i+1,f
  4913  0E6A  3000               	movlw	0
  4914  0E6B  07FA               	addwf	_i+1,f
  4915  0E6C  2E24               	goto	l2781
  4916  0E6D                     l2789:	
  4917                           
  4918                           ;STEPPER_MITSUMI.c: 118:             for(i=0; i<12; i++){
  4919  0E6D  01F9               	clrf	_i
  4920  0E6E  01FA               	clrf	_i+1
  4921  0E6F                     l2791:	
  4922  0E6F  087A               	movf	_i+1,w
  4923  0E70  3A80               	xorlw	128
  4924  0E71  00FF               	movwf	btemp+1
  4925  0E72  3080               	movlw	128
  4926  0E73  027F               	subwf	btemp+1,w
  4927  0E74  1D03               	skipz
  4928  0E75  2E78               	goto	u845
  4929  0E76  300C               	movlw	12
  4930  0E77  0279               	subwf	_i,w
  4931  0E78                     u845:	
  4932  0E78  1C03               	skipc
  4933  0E79  2E7B               	goto	u841
  4934  0E7A  2E7C               	goto	u840
  4935  0E7B                     u841:	
  4936  0E7B  2E7D               	goto	l2795
  4937  0E7C                     u840:	
  4938  0E7C  2FFF               	goto	l242
  4939  0E7D                     l2795:	
  4940                           
  4941                           ;STEPPER_MITSUMI.c: 119:                     PORTD = 0b1001;
  4942  0E7D  3009               	movlw	9
  4943  0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  4944  0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  4945  0E80  0088               	movwf	8	;volatile
  4946                           
  4947                           ;STEPPER_MITSUMI.c: 120:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  4948  0E81  300D               	movlw	13
  4949  0E82  00F5               	movwf	??_Stepper_CCW+1
  4950  0E83  30FB               	movlw	251
  4951  0E84  00F4               	movwf	??_Stepper_CCW
  4952  0E85                     u2187:	
  4953  0E85  0BF4               	decfsz	??_Stepper_CCW,f
  4954  0E86  2E85               	goto	u2187
  4955  0E87  0BF5               	decfsz	??_Stepper_CCW+1,f
  4956  0E88  2E85               	goto	u2187
  4957  0E89  2E8A               	nop2
  4958                           
  4959                           ;STEPPER_MITSUMI.c: 121:                     PORTD = 0b0101;
  4960  0E8A  3005               	movlw	5
  4961  0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  4962  0E8C  1303               	bcf	3,6	;RP1=0, select bank0
  4963  0E8D  0088               	movwf	8	;volatile
  4964                           
  4965                           ;STEPPER_MITSUMI.c: 122:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  4966  0E8E  300D               	movlw	13
  4967  0E8F  00F5               	movwf	??_Stepper_CCW+1
  4968  0E90  30FB               	movlw	251
  4969  0E91  00F4               	movwf	??_Stepper_CCW
  4970  0E92                     u2197:	
  4971  0E92  0BF4               	decfsz	??_Stepper_CCW,f
  4972  0E93  2E92               	goto	u2197
  4973  0E94  0BF5               	decfsz	??_Stepper_CCW+1,f
  4974  0E95  2E92               	goto	u2197
  4975  0E96  2E97               	nop2
  4976                           
  4977                           ;STEPPER_MITSUMI.c: 123:                     PORTD = 0b0110;
  4978  0E97  3006               	movlw	6
  4979  0E98  1283               	bcf	3,5	;RP0=0, select bank0
  4980  0E99  1303               	bcf	3,6	;RP1=0, select bank0
  4981  0E9A  0088               	movwf	8	;volatile
  4982                           
  4983                           ;STEPPER_MITSUMI.c: 124:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  4984  0E9B  300D               	movlw	13
  4985  0E9C  00F5               	movwf	??_Stepper_CCW+1
  4986  0E9D  30FB               	movlw	251
  4987  0E9E  00F4               	movwf	??_Stepper_CCW
  4988  0E9F                     u2207:	
  4989  0E9F  0BF4               	decfsz	??_Stepper_CCW,f
  4990  0EA0  2E9F               	goto	u2207
  4991  0EA1  0BF5               	decfsz	??_Stepper_CCW+1,f
  4992  0EA2  2E9F               	goto	u2207
  4993  0EA3  2EA4               	nop2
  4994                           
  4995                           ;STEPPER_MITSUMI.c: 125:                     PORTD = 0b1010;
  4996  0EA4  300A               	movlw	10
  4997  0EA5  1283               	bcf	3,5	;RP0=0, select bank0
  4998  0EA6  1303               	bcf	3,6	;RP1=0, select bank0
  4999  0EA7  0088               	movwf	8	;volatile
  5000                           
  5001                           ;STEPPER_MITSUMI.c: 126:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  5002  0EA8  300D               	movlw	13
  5003  0EA9  00F5               	movwf	??_Stepper_CCW+1
  5004  0EAA  30FB               	movlw	251
  5005  0EAB  00F4               	movwf	??_Stepper_CCW
  5006  0EAC                     u2217:	
  5007  0EAC  0BF4               	decfsz	??_Stepper_CCW,f
  5008  0EAD  2EAC               	goto	u2217
  5009  0EAE  0BF5               	decfsz	??_Stepper_CCW+1,f
  5010  0EAF  2EAC               	goto	u2217
  5011  0EB0  2EB1               	nop2
  5012                           
  5013                           ;STEPPER_MITSUMI.c: 127:                 };
  5014  0EB1  3001               	movlw	1
  5015  0EB2  07F9               	addwf	_i,f
  5016  0EB3  1803               	skipnc
  5017  0EB4  0AFA               	incf	_i+1,f
  5018  0EB5  3000               	movlw	0
  5019  0EB6  07FA               	addwf	_i+1,f
  5020  0EB7  2E6F               	goto	l2791
  5021  0EB8                     l2799:	
  5022                           
  5023                           ;STEPPER_MITSUMI.c: 131:             for(i=0; i<6; i++){
  5024  0EB8  01F9               	clrf	_i
  5025  0EB9  01FA               	clrf	_i+1
  5026  0EBA                     l2801:	
  5027  0EBA  087A               	movf	_i+1,w
  5028  0EBB  3A80               	xorlw	128
  5029  0EBC  00FF               	movwf	btemp+1
  5030  0EBD  3080               	movlw	128
  5031  0EBE  027F               	subwf	btemp+1,w
  5032  0EBF  1D03               	skipz
  5033  0EC0  2EC3               	goto	u855
  5034  0EC1  3006               	movlw	6
  5035  0EC2  0279               	subwf	_i,w
  5036  0EC3                     u855:	
  5037  0EC3  1C03               	skipc
  5038  0EC4  2EC6               	goto	u851
  5039  0EC5  2EC7               	goto	u850
  5040  0EC6                     u851:	
  5041  0EC6  2EC8               	goto	l2805
  5042  0EC7                     u850:	
  5043  0EC7  2FFF               	goto	l242
  5044  0EC8                     l2805:	
  5045                           
  5046                           ;STEPPER_MITSUMI.c: 132:                     PORTD = 0b1001;
  5047  0EC8  3009               	movlw	9
  5048  0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  5049  0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  5050  0ECB  0088               	movwf	8	;volatile
  5051                           
  5052                           ;STEPPER_MITSUMI.c: 133:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  5053  0ECC  300D               	movlw	13
  5054  0ECD  00F5               	movwf	??_Stepper_CCW+1
  5055  0ECE  30FB               	movlw	251
  5056  0ECF  00F4               	movwf	??_Stepper_CCW
  5057  0ED0                     u2227:	
  5058  0ED0  0BF4               	decfsz	??_Stepper_CCW,f
  5059  0ED1  2ED0               	goto	u2227
  5060  0ED2  0BF5               	decfsz	??_Stepper_CCW+1,f
  5061  0ED3  2ED0               	goto	u2227
  5062  0ED4  2ED5               	nop2
  5063                           
  5064                           ;STEPPER_MITSUMI.c: 134:                     PORTD = 0b0101;
  5065  0ED5  3005               	movlw	5
  5066  0ED6  1283               	bcf	3,5	;RP0=0, select bank0
  5067  0ED7  1303               	bcf	3,6	;RP1=0, select bank0
  5068  0ED8  0088               	movwf	8	;volatile
  5069                           
  5070                           ;STEPPER_MITSUMI.c: 135:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  5071  0ED9  300D               	movlw	13
  5072  0EDA  00F5               	movwf	??_Stepper_CCW+1
  5073  0EDB  30FB               	movlw	251
  5074  0EDC  00F4               	movwf	??_Stepper_CCW
  5075  0EDD                     u2237:	
  5076  0EDD  0BF4               	decfsz	??_Stepper_CCW,f
  5077  0EDE  2EDD               	goto	u2237
  5078  0EDF  0BF5               	decfsz	??_Stepper_CCW+1,f
  5079  0EE0  2EDD               	goto	u2237
  5080  0EE1  2EE2               	nop2
  5081                           
  5082                           ;STEPPER_MITSUMI.c: 136:                     PORTD = 0b0110;
  5083  0EE2  3006               	movlw	6
  5084  0EE3  1283               	bcf	3,5	;RP0=0, select bank0
  5085  0EE4  1303               	bcf	3,6	;RP1=0, select bank0
  5086  0EE5  0088               	movwf	8	;volatile
  5087                           
  5088                           ;STEPPER_MITSUMI.c: 137:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  5089  0EE6  300D               	movlw	13
  5090  0EE7  00F5               	movwf	??_Stepper_CCW+1
  5091  0EE8  30FB               	movlw	251
  5092  0EE9  00F4               	movwf	??_Stepper_CCW
  5093  0EEA                     u2247:	
  5094  0EEA  0BF4               	decfsz	??_Stepper_CCW,f
  5095  0EEB  2EEA               	goto	u2247
  5096  0EEC  0BF5               	decfsz	??_Stepper_CCW+1,f
  5097  0EED  2EEA               	goto	u2247
  5098  0EEE  2EEF               	nop2
  5099                           
  5100                           ;STEPPER_MITSUMI.c: 138:                     PORTD = 0b1010;
  5101  0EEF  300A               	movlw	10
  5102  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  5103  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  5104  0EF2  0088               	movwf	8	;volatile
  5105                           
  5106                           ;STEPPER_MITSUMI.c: 139:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  5107  0EF3  300D               	movlw	13
  5108  0EF4  00F5               	movwf	??_Stepper_CCW+1
  5109  0EF5  30FB               	movlw	251
  5110  0EF6  00F4               	movwf	??_Stepper_CCW
  5111  0EF7                     u2257:	
  5112  0EF7  0BF4               	decfsz	??_Stepper_CCW,f
  5113  0EF8  2EF7               	goto	u2257
  5114  0EF9  0BF5               	decfsz	??_Stepper_CCW+1,f
  5115  0EFA  2EF7               	goto	u2257
  5116  0EFB  2EFC               	nop2
  5117                           
  5118                           ;STEPPER_MITSUMI.c: 140:                 };
  5119  0EFC  3001               	movlw	1
  5120  0EFD  07F9               	addwf	_i,f
  5121  0EFE  1803               	skipnc
  5122  0EFF  0AFA               	incf	_i+1,f
  5123  0F00  3000               	movlw	0
  5124  0F01  07FA               	addwf	_i+1,f
  5125  0F02  2EBA               	goto	l2801
  5126  0F03                     l2809:	
  5127                           
  5128                           ;STEPPER_MITSUMI.c: 144:             for(i=0; i<3; i++){
  5129  0F03  01F9               	clrf	_i
  5130  0F04  01FA               	clrf	_i+1
  5131  0F05                     l2811:	
  5132  0F05  087A               	movf	_i+1,w
  5133  0F06  3A80               	xorlw	128
  5134  0F07  00FF               	movwf	btemp+1
  5135  0F08  3080               	movlw	128
  5136  0F09  027F               	subwf	btemp+1,w
  5137  0F0A  1D03               	skipz
  5138  0F0B  2F0E               	goto	u865
  5139  0F0C  3003               	movlw	3
  5140  0F0D  0279               	subwf	_i,w
  5141  0F0E                     u865:	
  5142  0F0E  1C03               	skipc
  5143  0F0F  2F11               	goto	u861
  5144  0F10  2F12               	goto	u860
  5145  0F11                     u861:	
  5146  0F11  2F13               	goto	l2815
  5147  0F12                     u860:	
  5148  0F12  2FFF               	goto	l242
  5149  0F13                     l2815:	
  5150                           
  5151                           ;STEPPER_MITSUMI.c: 145:                     PORTD = 0b1001;
  5152  0F13  3009               	movlw	9
  5153  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  5154  0F15  1303               	bcf	3,6	;RP1=0, select bank0
  5155  0F16  0088               	movwf	8	;volatile
  5156                           
  5157                           ;STEPPER_MITSUMI.c: 146:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  5158  0F17  300D               	movlw	13
  5159  0F18  00F5               	movwf	??_Stepper_CCW+1
  5160  0F19  30FB               	movlw	251
  5161  0F1A  00F4               	movwf	??_Stepper_CCW
  5162  0F1B                     u2267:	
  5163  0F1B  0BF4               	decfsz	??_Stepper_CCW,f
  5164  0F1C  2F1B               	goto	u2267
  5165  0F1D  0BF5               	decfsz	??_Stepper_CCW+1,f
  5166  0F1E  2F1B               	goto	u2267
  5167  0F1F  2F20               	nop2
  5168                           
  5169                           ;STEPPER_MITSUMI.c: 147:                     PORTD = 0b0101;
  5170  0F20  3005               	movlw	5
  5171  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  5172  0F22  1303               	bcf	3,6	;RP1=0, select bank0
  5173  0F23  0088               	movwf	8	;volatile
  5174                           
  5175                           ;STEPPER_MITSUMI.c: 148:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  5176  0F24  300D               	movlw	13
  5177  0F25  00F5               	movwf	??_Stepper_CCW+1
  5178  0F26  30FB               	movlw	251
  5179  0F27  00F4               	movwf	??_Stepper_CCW
  5180  0F28                     u2277:	
  5181  0F28  0BF4               	decfsz	??_Stepper_CCW,f
  5182  0F29  2F28               	goto	u2277
  5183  0F2A  0BF5               	decfsz	??_Stepper_CCW+1,f
  5184  0F2B  2F28               	goto	u2277
  5185  0F2C  2F2D               	nop2
  5186                           
  5187                           ;STEPPER_MITSUMI.c: 149:                     PORTD = 0b0110;
  5188  0F2D  3006               	movlw	6
  5189  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  5190  0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  5191  0F30  0088               	movwf	8	;volatile
  5192                           
  5193                           ;STEPPER_MITSUMI.c: 150:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  5194  0F31  300D               	movlw	13
  5195  0F32  00F5               	movwf	??_Stepper_CCW+1
  5196  0F33  30FB               	movlw	251
  5197  0F34  00F4               	movwf	??_Stepper_CCW
  5198  0F35                     u2287:	
  5199  0F35  0BF4               	decfsz	??_Stepper_CCW,f
  5200  0F36  2F35               	goto	u2287
  5201  0F37  0BF5               	decfsz	??_Stepper_CCW+1,f
  5202  0F38  2F35               	goto	u2287
  5203  0F39  2F3A               	nop2
  5204                           
  5205                           ;STEPPER_MITSUMI.c: 151:                     PORTD = 0b1010;
  5206  0F3A  300A               	movlw	10
  5207  0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  5208  0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  5209  0F3D  0088               	movwf	8	;volatile
  5210                           
  5211                           ;STEPPER_MITSUMI.c: 152:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  5212  0F3E  300D               	movlw	13
  5213  0F3F  00F5               	movwf	??_Stepper_CCW+1
  5214  0F40  30FB               	movlw	251
  5215  0F41  00F4               	movwf	??_Stepper_CCW
  5216  0F42                     u2297:	
  5217  0F42  0BF4               	decfsz	??_Stepper_CCW,f
  5218  0F43  2F42               	goto	u2297
  5219  0F44  0BF5               	decfsz	??_Stepper_CCW+1,f
  5220  0F45  2F42               	goto	u2297
  5221  0F46  2F47               	nop2
  5222                           
  5223                           ;STEPPER_MITSUMI.c: 153:                 };
  5224  0F47  3001               	movlw	1
  5225  0F48  07F9               	addwf	_i,f
  5226  0F49  1803               	skipnc
  5227  0F4A  0AFA               	incf	_i+1,f
  5228  0F4B  3000               	movlw	0
  5229  0F4C  07FA               	addwf	_i+1,f
  5230  0F4D  2F05               	goto	l2811
  5231  0F4E                     l2819:	
  5232                           
  5233                           ;STEPPER_MITSUMI.c: 157:             for(i=0; i<1; i++){
  5234  0F4E  01F9               	clrf	_i
  5235  0F4F  01FA               	clrf	_i+1
  5236  0F50                     l2821:	
  5237  0F50  087A               	movf	_i+1,w
  5238  0F51  3A80               	xorlw	128
  5239  0F52  00FF               	movwf	btemp+1
  5240  0F53  3080               	movlw	128
  5241  0F54  027F               	subwf	btemp+1,w
  5242  0F55  1D03               	skipz
  5243  0F56  2F59               	goto	u875
  5244  0F57  3001               	movlw	1
  5245  0F58  0279               	subwf	_i,w
  5246  0F59                     u875:	
  5247  0F59  1C03               	skipc
  5248  0F5A  2F5C               	goto	u871
  5249  0F5B  2F5D               	goto	u870
  5250  0F5C                     u871:	
  5251  0F5C  2F5E               	goto	l2825
  5252  0F5D                     u870:	
  5253  0F5D  2FFF               	goto	l242
  5254  0F5E                     l2825:	
  5255                           
  5256                           ;STEPPER_MITSUMI.c: 158:                     PORTD = 0b1001;
  5257  0F5E  3009               	movlw	9
  5258  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  5259  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  5260  0F61  0088               	movwf	8	;volatile
  5261                           
  5262                           ;STEPPER_MITSUMI.c: 159:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  5263  0F62  300D               	movlw	13
  5264  0F63  00F5               	movwf	??_Stepper_CCW+1
  5265  0F64  30FB               	movlw	251
  5266  0F65  00F4               	movwf	??_Stepper_CCW
  5267  0F66                     u2307:	
  5268  0F66  0BF4               	decfsz	??_Stepper_CCW,f
  5269  0F67  2F66               	goto	u2307
  5270  0F68  0BF5               	decfsz	??_Stepper_CCW+1,f
  5271  0F69  2F66               	goto	u2307
  5272  0F6A  2F6B               	nop2
  5273                           
  5274                           ;STEPPER_MITSUMI.c: 160:                     PORTD = 0b0101;
  5275  0F6B  3005               	movlw	5
  5276  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  5277  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  5278  0F6E  0088               	movwf	8	;volatile
  5279                           
  5280                           ;STEPPER_MITSUMI.c: 161:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  5281  0F6F  300D               	movlw	13
  5282  0F70  00F5               	movwf	??_Stepper_CCW+1
  5283  0F71  30FB               	movlw	251
  5284  0F72  00F4               	movwf	??_Stepper_CCW
  5285  0F73                     u2317:	
  5286  0F73  0BF4               	decfsz	??_Stepper_CCW,f
  5287  0F74  2F73               	goto	u2317
  5288  0F75  0BF5               	decfsz	??_Stepper_CCW+1,f
  5289  0F76  2F73               	goto	u2317
  5290  0F77  2F78               	nop2
  5291                           
  5292                           ;STEPPER_MITSUMI.c: 162:                     PORTD = 0b0110;
  5293  0F78  3006               	movlw	6
  5294  0F79  1283               	bcf	3,5	;RP0=0, select bank0
  5295  0F7A  1303               	bcf	3,6	;RP1=0, select bank0
  5296  0F7B  0088               	movwf	8	;volatile
  5297                           
  5298                           ;STEPPER_MITSUMI.c: 163:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  5299  0F7C  300D               	movlw	13
  5300  0F7D  00F5               	movwf	??_Stepper_CCW+1
  5301  0F7E  30FB               	movlw	251
  5302  0F7F  00F4               	movwf	??_Stepper_CCW
  5303  0F80                     u2327:	
  5304  0F80  0BF4               	decfsz	??_Stepper_CCW,f
  5305  0F81  2F80               	goto	u2327
  5306  0F82  0BF5               	decfsz	??_Stepper_CCW+1,f
  5307  0F83  2F80               	goto	u2327
  5308  0F84  2F85               	nop2
  5309                           
  5310                           ;STEPPER_MITSUMI.c: 164:                     PORTD = 0b1010;
  5311  0F85  300A               	movlw	10
  5312  0F86  1283               	bcf	3,5	;RP0=0, select bank0
  5313  0F87  1303               	bcf	3,6	;RP1=0, select bank0
  5314  0F88  0088               	movwf	8	;volatile
  5315                           
  5316                           ;STEPPER_MITSUMI.c: 165:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  5317  0F89  300D               	movlw	13
  5318  0F8A  00F5               	movwf	??_Stepper_CCW+1
  5319  0F8B  30FB               	movlw	251
  5320  0F8C  00F4               	movwf	??_Stepper_CCW
  5321  0F8D                     u2337:	
  5322  0F8D  0BF4               	decfsz	??_Stepper_CCW,f
  5323  0F8E  2F8D               	goto	u2337
  5324  0F8F  0BF5               	decfsz	??_Stepper_CCW+1,f
  5325  0F90  2F8D               	goto	u2337
  5326  0F91  2F92               	nop2
  5327                           
  5328                           ;STEPPER_MITSUMI.c: 166:                 };
  5329  0F92  3001               	movlw	1
  5330  0F93  07F9               	addwf	_i,f
  5331  0F94  1803               	skipnc
  5332  0F95  0AFA               	incf	_i+1,f
  5333  0F96  3000               	movlw	0
  5334  0F97  07FA               	addwf	_i+1,f
  5335  0F98  2F50               	goto	l2821
  5336  0F99                     l2829:	
  5337                           
  5338                           ;STEPPER_MITSUMI.c: 170:             for(i=0; i<2; i++){
  5339  0F99  01F9               	clrf	_i
  5340  0F9A  01FA               	clrf	_i+1
  5341  0F9B                     l2831:	
  5342  0F9B  087A               	movf	_i+1,w
  5343  0F9C  3A80               	xorlw	128
  5344  0F9D  00FF               	movwf	btemp+1
  5345  0F9E  3080               	movlw	128
  5346  0F9F  027F               	subwf	btemp+1,w
  5347  0FA0  1D03               	skipz
  5348  0FA1  2FA4               	goto	u885
  5349  0FA2  3002               	movlw	2
  5350  0FA3  0279               	subwf	_i,w
  5351  0FA4                     u885:	
  5352  0FA4  1C03               	skipc
  5353  0FA5  2FA7               	goto	u881
  5354  0FA6  2FA8               	goto	u880
  5355  0FA7                     u881:	
  5356  0FA7  2FA9               	goto	l2835
  5357  0FA8                     u880:	
  5358  0FA8  2FFF               	goto	l242
  5359  0FA9                     l2835:	
  5360                           
  5361                           ;STEPPER_MITSUMI.c: 171:                     PORTD = 0b1001;
  5362  0FA9  3009               	movlw	9
  5363  0FAA  1283               	bcf	3,5	;RP0=0, select bank0
  5364  0FAB  1303               	bcf	3,6	;RP1=0, select bank0
  5365  0FAC  0088               	movwf	8	;volatile
  5366                           
  5367                           ;STEPPER_MITSUMI.c: 172:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  5368  0FAD  300D               	movlw	13
  5369  0FAE  00F5               	movwf	??_Stepper_CCW+1
  5370  0FAF  30FB               	movlw	251
  5371  0FB0  00F4               	movwf	??_Stepper_CCW
  5372  0FB1                     u2347:	
  5373  0FB1  0BF4               	decfsz	??_Stepper_CCW,f
  5374  0FB2  2FB1               	goto	u2347
  5375  0FB3  0BF5               	decfsz	??_Stepper_CCW+1,f
  5376  0FB4  2FB1               	goto	u2347
  5377  0FB5  2FB6               	nop2
  5378                           
  5379                           ;STEPPER_MITSUMI.c: 173:                     PORTD = 0b0101;
  5380  0FB6  3005               	movlw	5
  5381  0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  5382  0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  5383  0FB9  0088               	movwf	8	;volatile
  5384                           
  5385                           ;STEPPER_MITSUMI.c: 174:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  5386  0FBA  300D               	movlw	13
  5387  0FBB  00F5               	movwf	??_Stepper_CCW+1
  5388  0FBC  30FB               	movlw	251
  5389  0FBD  00F4               	movwf	??_Stepper_CCW
  5390  0FBE                     u2357:	
  5391  0FBE  0BF4               	decfsz	??_Stepper_CCW,f
  5392  0FBF  2FBE               	goto	u2357
  5393  0FC0  0BF5               	decfsz	??_Stepper_CCW+1,f
  5394  0FC1  2FBE               	goto	u2357
  5395  0FC2  2FC3               	nop2
  5396                           
  5397                           ;STEPPER_MITSUMI.c: 175:                     PORTD = 0b0110;
  5398  0FC3  3006               	movlw	6
  5399  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  5400  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  5401  0FC6  0088               	movwf	8	;volatile
  5402                           
  5403                           ;STEPPER_MITSUMI.c: 176:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  5404  0FC7  300D               	movlw	13
  5405  0FC8  00F5               	movwf	??_Stepper_CCW+1
  5406  0FC9  30FB               	movlw	251
  5407  0FCA  00F4               	movwf	??_Stepper_CCW
  5408  0FCB                     u2367:	
  5409  0FCB  0BF4               	decfsz	??_Stepper_CCW,f
  5410  0FCC  2FCB               	goto	u2367
  5411  0FCD  0BF5               	decfsz	??_Stepper_CCW+1,f
  5412  0FCE  2FCB               	goto	u2367
  5413  0FCF  2FD0               	nop2
  5414                           
  5415                           ;STEPPER_MITSUMI.c: 177:                     PORTD = 0b1010;
  5416  0FD0  300A               	movlw	10
  5417  0FD1  1283               	bcf	3,5	;RP0=0, select bank0
  5418  0FD2  1303               	bcf	3,6	;RP1=0, select bank0
  5419  0FD3  0088               	movwf	8	;volatile
  5420                           
  5421                           ;STEPPER_MITSUMI.c: 178:                     _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  5422  0FD4  300D               	movlw	13
  5423  0FD5  00F5               	movwf	??_Stepper_CCW+1
  5424  0FD6  30FB               	movlw	251
  5425  0FD7  00F4               	movwf	??_Stepper_CCW
  5426  0FD8                     u2377:	
  5427  0FD8  0BF4               	decfsz	??_Stepper_CCW,f
  5428  0FD9  2FD8               	goto	u2377
  5429  0FDA  0BF5               	decfsz	??_Stepper_CCW+1,f
  5430  0FDB  2FD8               	goto	u2377
  5431  0FDC  2FDD               	nop2
  5432                           
  5433                           ;STEPPER_MITSUMI.c: 179:                 };
  5434  0FDD  3001               	movlw	1
  5435  0FDE  07F9               	addwf	_i,f
  5436  0FDF  1803               	skipnc
  5437  0FE0  0AFA               	incf	_i+1,f
  5438  0FE1  3000               	movlw	0
  5439  0FE2  07FA               	addwf	_i+1,f
  5440  0FE3  2F9B               	goto	l2831
  5441  0FE4                     l2839:	
  5442                           
  5443                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  5444                           ; Switch size 1, requested type "simple"
  5445                           ; Number of cases is 2, Range of values is 0 to 1
  5446                           ; switch strategies available:
  5447                           ; Name         Instructions Cycles
  5448                           ; simple_byte            7     4 (average)
  5449                           ; direct_byte           14     8 (fixed)
  5450                           ; jumptable            260     6 (fixed)
  5451                           ;	Chosen strategy is simple_byte
  5452  0FE4  0873               	movf	Stepper_CCW@Step_grados_ccw+1,w
  5453  0FE5  3A00               	xorlw	0	; case 0
  5454  0FE6  1903               	skipnz
  5455  0FE7  2FEC               	goto	l4425
  5456  0FE8  3A01               	xorlw	1	; case 1
  5457  0FE9  1903               	skipnz
  5458  0FEA  2FFA               	goto	l4427
  5459  0FEB  2F99               	goto	l2829
  5460  0FEC                     l4425:	
  5461                           
  5462                           ; Switch size 1, requested type "simple"
  5463                           ; Number of cases is 4, Range of values is 15 to 180
  5464                           ; switch strategies available:
  5465                           ; Name         Instructions Cycles
  5466                           ; simple_byte           13     7 (average)
  5467                           ; jumptable            263     9 (fixed)
  5468                           ;	Chosen strategy is simple_byte
  5469  0FEC  0872               	movf	Stepper_CCW@Step_grados_ccw,w
  5470  0FED  3A0F               	xorlw	15	; case 15
  5471  0FEE  1903               	skipnz
  5472  0FEF  2F4E               	goto	l2819
  5473  0FF0  3A22               	xorlw	34	; case 45
  5474  0FF1  1903               	skipnz
  5475  0FF2  2F03               	goto	l2809
  5476  0FF3  3A77               	xorlw	119	; case 90
  5477  0FF4  1903               	skipnz
  5478  0FF5  2EB8               	goto	l2799
  5479  0FF6  3AEE               	xorlw	238	; case 180
  5480  0FF7  1903               	skipnz
  5481  0FF8  2E6D               	goto	l2789
  5482  0FF9  2F99               	goto	l2829
  5483  0FFA                     l4427:	
  5484                           
  5485                           ; Switch size 1, requested type "simple"
  5486                           ; Number of cases is 1, Range of values is 104 to 104
  5487                           ; switch strategies available:
  5488                           ; Name         Instructions Cycles
  5489                           ; simple_byte            4     3 (average)
  5490                           ; direct_byte           14    11 (fixed)
  5491                           ; jumptable            263     9 (fixed)
  5492                           ;	Chosen strategy is simple_byte
  5493  0FFA  0872               	movf	Stepper_CCW@Step_grados_ccw,w
  5494  0FFB  3A68               	xorlw	104	; case 104
  5495  0FFC  1903               	skipnz
  5496  0FFD  2E22               	goto	l2779
  5497  0FFE  2F99               	goto	l2829
  5498  0FFF                     l242:	
  5499  0FFF  0008               	return
  5500  1000                     __end_of_Stepper_CCW:	
  5501                           
  5502                           	psect	text11
  5503  0C95                     __ptext11:	
  5504 ;; *************** function _Servo2_grados *****************
  5505 ;; Defined at:
  5506 ;;		line 117 in file "PWMs.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;  Servo2_grado    1    wreg     unsigned char 
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;  Servo2_grado    1    4[COMMON] unsigned char 
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  1    wreg      void 
  5513 ;; Registers used:
  5514 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5520 ;;      Params:         0       0       0       0       0
  5521 ;;      Locals:         1       0       0       0       0
  5522 ;;      Temps:          2       0       0       0       0
  5523 ;;      Totals:         3       0       0       0       0
  5524 ;;Total ram usage:        3 bytes
  5525 ;; Hardware stack levels used:    1
  5526 ;; Hardware stack levels required when called:    1
  5527 ;; This function calls:
  5528 ;;		Nothing
  5529 ;; This function is called by:
  5530 ;;		_main
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           
  5535                           ;psect for function _Servo2_grados
  5536  0C95                     _Servo2_grados:	
  5537                           
  5538                           ;incstack = 0
  5539                           ; Regs used in _Servo2_grados: [wreg-fsr0h+status,2+status,0]
  5540                           ;Servo2_grados@Servo2_grados stored from wreg
  5541  0C95  00F4               	movwf	Servo2_grados@Servo2_grados
  5542  0C96                     l2677:	
  5543                           
  5544                           ;PWMs.c: 118:     switch(Servo2_grados){
  5545  0C96  2CC4               	goto	l2699
  5546  0C97                     l2679:	
  5547                           
  5548                           ;PWMs.c: 120:             CCPR1L = 10;
  5549  0C97  300A               	movlw	10
  5550  0C98  1283               	bcf	3,5	;RP0=0, select bank0
  5551  0C99  1303               	bcf	3,6	;RP1=0, select bank0
  5552  0C9A  0095               	movwf	21	;volatile
  5553                           
  5554                           ;PWMs.c: 121:             break;
  5555  0C9B  2CE9               	goto	l355
  5556  0C9C                     l2681:	
  5557                           
  5558                           ;PWMs.c: 124:             CCPR1L = 12;
  5559  0C9C  300C               	movlw	12
  5560  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  5561  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  5562  0C9F  0095               	movwf	21	;volatile
  5563                           
  5564                           ;PWMs.c: 125:             break;
  5565  0CA0  2CE9               	goto	l355
  5566  0CA1                     l2683:	
  5567                           
  5568                           ;PWMs.c: 128:             CCPR1L = 14;
  5569  0CA1  300E               	movlw	14
  5570  0CA2  1283               	bcf	3,5	;RP0=0, select bank0
  5571  0CA3  1303               	bcf	3,6	;RP1=0, select bank0
  5572  0CA4  0095               	movwf	21	;volatile
  5573                           
  5574                           ;PWMs.c: 129:             break;
  5575  0CA5  2CE9               	goto	l355
  5576  0CA6                     l2685:	
  5577                           
  5578                           ;PWMs.c: 132:             CCPR1L = 18;
  5579  0CA6  3012               	movlw	18
  5580  0CA7  1283               	bcf	3,5	;RP0=0, select bank0
  5581  0CA8  1303               	bcf	3,6	;RP1=0, select bank0
  5582  0CA9  0095               	movwf	21	;volatile
  5583                           
  5584                           ;PWMs.c: 133:             break;
  5585  0CAA  2CE9               	goto	l355
  5586  0CAB                     l2687:	
  5587                           
  5588                           ;PWMs.c: 136:             CCPR1L = 25;
  5589  0CAB  3019               	movlw	25
  5590  0CAC  1283               	bcf	3,5	;RP0=0, select bank0
  5591  0CAD  1303               	bcf	3,6	;RP1=0, select bank0
  5592  0CAE  0095               	movwf	21	;volatile
  5593                           
  5594                           ;PWMs.c: 137:             break;
  5595  0CAF  2CE9               	goto	l355
  5596  0CB0                     l2689:	
  5597                           
  5598                           ;PWMs.c: 140:             CCPR1L = 30;
  5599  0CB0  301E               	movlw	30
  5600  0CB1  1283               	bcf	3,5	;RP0=0, select bank0
  5601  0CB2  1303               	bcf	3,6	;RP1=0, select bank0
  5602  0CB3  0095               	movwf	21	;volatile
  5603                           
  5604                           ;PWMs.c: 141:             break;
  5605  0CB4  2CE9               	goto	l355
  5606  0CB5                     l2691:	
  5607                           
  5608                           ;PWMs.c: 144:             CCPR1L = 33;
  5609  0CB5  3021               	movlw	33
  5610  0CB6  1283               	bcf	3,5	;RP0=0, select bank0
  5611  0CB7  1303               	bcf	3,6	;RP1=0, select bank0
  5612  0CB8  0095               	movwf	21	;volatile
  5613                           
  5614                           ;PWMs.c: 145:             break;
  5615  0CB9  2CE9               	goto	l355
  5616  0CBA                     l2693:	
  5617                           
  5618                           ;PWMs.c: 148:             CCPR1L = 37;
  5619  0CBA  3025               	movlw	37
  5620  0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  5621  0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  5622  0CBD  0095               	movwf	21	;volatile
  5623                           
  5624                           ;PWMs.c: 149:             break;
  5625  0CBE  2CE9               	goto	l355
  5626  0CBF                     l2695:	
  5627                           
  5628                           ;PWMs.c: 152:             CCPR1L = 40;
  5629  0CBF  3028               	movlw	40
  5630  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  5631  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  5632  0CC2  0095               	movwf	21	;volatile
  5633                           
  5634                           ;PWMs.c: 153:             break;
  5635  0CC3  2CE9               	goto	l355
  5636  0CC4                     l2699:	
  5637  0CC4  0874               	movf	Servo2_grados@Servo2_grados,w
  5638  0CC5  00F2               	movwf	??_Servo2_grados
  5639  0CC6  01F3               	clrf	??_Servo2_grados+1
  5640                           
  5641                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5642                           ; Switch size 1, requested type "simple"
  5643                           ; Number of cases is 1, Range of values is 0 to 0
  5644                           ; switch strategies available:
  5645                           ; Name         Instructions Cycles
  5646                           ; simple_byte            4     3 (average)
  5647                           ; direct_byte           11     8 (fixed)
  5648                           ; jumptable            260     6 (fixed)
  5649                           ;	Chosen strategy is simple_byte
  5650  0CC7  0873               	movf	??_Servo2_grados+1,w
  5651  0CC8  3A00               	xorlw	0	; case 0
  5652  0CC9  1903               	skipnz
  5653  0CCA  2CCC               	goto	l4429
  5654  0CCB  2C97               	goto	l2679
  5655  0CCC                     l4429:	
  5656                           
  5657                           ; Switch size 1, requested type "simple"
  5658                           ; Number of cases is 9, Range of values is 0 to 180
  5659                           ; switch strategies available:
  5660                           ; Name         Instructions Cycles
  5661                           ; simple_byte           28    15 (average)
  5662                           ; jumptable            260     6 (fixed)
  5663                           ;	Chosen strategy is simple_byte
  5664  0CCC  0872               	movf	??_Servo2_grados,w
  5665  0CCD  3A00               	xorlw	0	; case 0
  5666  0CCE  1903               	skipnz
  5667  0CCF  2C97               	goto	l2679
  5668  0CD0  3A0A               	xorlw	10	; case 10
  5669  0CD1  1903               	skipnz
  5670  0CD2  2C9C               	goto	l2681
  5671  0CD3  3A14               	xorlw	20	; case 30
  5672  0CD4  1903               	skipnz
  5673  0CD5  2CA1               	goto	l2683
  5674  0CD6  3A33               	xorlw	51	; case 45
  5675  0CD7  1903               	skipnz
  5676  0CD8  2CA6               	goto	l2685
  5677  0CD9  3A77               	xorlw	119	; case 90
  5678  0CDA  1903               	skipnz
  5679  0CDB  2CAB               	goto	l2687
  5680  0CDC  3A22               	xorlw	34	; case 120
  5681  0CDD  1903               	skipnz
  5682  0CDE  2CB0               	goto	l2689
  5683  0CDF  3AFF               	xorlw	255	; case 135
  5684  0CE0  1903               	skipnz
  5685  0CE1  2CB5               	goto	l2691
  5686  0CE2  3A11               	xorlw	17	; case 150
  5687  0CE3  1903               	skipnz
  5688  0CE4  2CBA               	goto	l2693
  5689  0CE5  3A22               	xorlw	34	; case 180
  5690  0CE6  1903               	skipnz
  5691  0CE7  2CBF               	goto	l2695
  5692  0CE8  2C97               	goto	l2679
  5693  0CE9                     l355:	
  5694  0CE9  0008               	return
  5695  0CEA                     __end_of_Servo2_grados:	
  5696                           
  5697                           	psect	text12
  5698  0C40                     __ptext12:	
  5699 ;; *************** function _Servo1_grados *****************
  5700 ;; Defined at:
  5701 ;;		line 73 in file "PWMs.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;  Servo1_grado    1    wreg     unsigned char 
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;  Servo1_grado    1    4[COMMON] unsigned char 
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  1    wreg      void 
  5708 ;; Registers used:
  5709 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5715 ;;      Params:         0       0       0       0       0
  5716 ;;      Locals:         1       0       0       0       0
  5717 ;;      Temps:          2       0       0       0       0
  5718 ;;      Totals:         3       0       0       0       0
  5719 ;;Total ram usage:        3 bytes
  5720 ;; Hardware stack levels used:    1
  5721 ;; Hardware stack levels required when called:    1
  5722 ;; This function calls:
  5723 ;;		Nothing
  5724 ;; This function is called by:
  5725 ;;		_main
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           
  5730                           ;psect for function _Servo1_grados
  5731  0C40                     _Servo1_grados:	
  5732                           
  5733                           ;incstack = 0
  5734                           ; Regs used in _Servo1_grados: [wreg-fsr0h+status,2+status,0]
  5735                           ;Servo1_grados@Servo1_grados stored from wreg
  5736  0C40  00F4               	movwf	Servo1_grados@Servo1_grados
  5737  0C41                     l2649:	
  5738                           
  5739                           ;PWMs.c: 74:     switch(Servo1_grados){
  5740  0C41  2C6F               	goto	l2671
  5741  0C42                     l2651:	
  5742                           
  5743                           ;PWMs.c: 76:             CCPR2L = 10;
  5744  0C42  300A               	movlw	10
  5745  0C43  1283               	bcf	3,5	;RP0=0, select bank0
  5746  0C44  1303               	bcf	3,6	;RP1=0, select bank0
  5747  0C45  009B               	movwf	27	;volatile
  5748                           
  5749                           ;PWMs.c: 77:             break;
  5750  0C46  2C94               	goto	l340
  5751  0C47                     l2653:	
  5752                           
  5753                           ;PWMs.c: 80:             CCPR2L = 12;
  5754  0C47  300C               	movlw	12
  5755  0C48  1283               	bcf	3,5	;RP0=0, select bank0
  5756  0C49  1303               	bcf	3,6	;RP1=0, select bank0
  5757  0C4A  009B               	movwf	27	;volatile
  5758                           
  5759                           ;PWMs.c: 81:             break;
  5760  0C4B  2C94               	goto	l340
  5761  0C4C                     l2655:	
  5762                           
  5763                           ;PWMs.c: 84:             CCPR2L = 14;
  5764  0C4C  300E               	movlw	14
  5765  0C4D  1283               	bcf	3,5	;RP0=0, select bank0
  5766  0C4E  1303               	bcf	3,6	;RP1=0, select bank0
  5767  0C4F  009B               	movwf	27	;volatile
  5768                           
  5769                           ;PWMs.c: 85:             break;
  5770  0C50  2C94               	goto	l340
  5771  0C51                     l2657:	
  5772                           
  5773                           ;PWMs.c: 88:             CCPR2L = 18;
  5774  0C51  3012               	movlw	18
  5775  0C52  1283               	bcf	3,5	;RP0=0, select bank0
  5776  0C53  1303               	bcf	3,6	;RP1=0, select bank0
  5777  0C54  009B               	movwf	27	;volatile
  5778                           
  5779                           ;PWMs.c: 89:             break;
  5780  0C55  2C94               	goto	l340
  5781  0C56                     l2659:	
  5782                           
  5783                           ;PWMs.c: 92:             CCPR2L = 25;
  5784  0C56  3019               	movlw	25
  5785  0C57  1283               	bcf	3,5	;RP0=0, select bank0
  5786  0C58  1303               	bcf	3,6	;RP1=0, select bank0
  5787  0C59  009B               	movwf	27	;volatile
  5788                           
  5789                           ;PWMs.c: 93:             break;
  5790  0C5A  2C94               	goto	l340
  5791  0C5B                     l2661:	
  5792                           
  5793                           ;PWMs.c: 96:             CCPR2L = 30;
  5794  0C5B  301E               	movlw	30
  5795  0C5C  1283               	bcf	3,5	;RP0=0, select bank0
  5796  0C5D  1303               	bcf	3,6	;RP1=0, select bank0
  5797  0C5E  009B               	movwf	27	;volatile
  5798                           
  5799                           ;PWMs.c: 97:             break;
  5800  0C5F  2C94               	goto	l340
  5801  0C60                     l2663:	
  5802                           
  5803                           ;PWMs.c: 100:             CCPR2L = 33;
  5804  0C60  3021               	movlw	33
  5805  0C61  1283               	bcf	3,5	;RP0=0, select bank0
  5806  0C62  1303               	bcf	3,6	;RP1=0, select bank0
  5807  0C63  009B               	movwf	27	;volatile
  5808                           
  5809                           ;PWMs.c: 101:             break;
  5810  0C64  2C94               	goto	l340
  5811  0C65                     l2665:	
  5812                           
  5813                           ;PWMs.c: 104:             CCPR2L = 37;
  5814  0C65  3025               	movlw	37
  5815  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  5816  0C67  1303               	bcf	3,6	;RP1=0, select bank0
  5817  0C68  009B               	movwf	27	;volatile
  5818                           
  5819                           ;PWMs.c: 105:             break;
  5820  0C69  2C94               	goto	l340
  5821  0C6A                     l2667:	
  5822                           
  5823                           ;PWMs.c: 108:             CCPR2L = 40;
  5824  0C6A  3028               	movlw	40
  5825  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  5826  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  5827  0C6D  009B               	movwf	27	;volatile
  5828                           
  5829                           ;PWMs.c: 109:             break;
  5830  0C6E  2C94               	goto	l340
  5831  0C6F                     l2671:	
  5832  0C6F  0874               	movf	Servo1_grados@Servo1_grados,w
  5833  0C70  00F2               	movwf	??_Servo1_grados
  5834  0C71  01F3               	clrf	??_Servo1_grados+1
  5835                           
  5836                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5837                           ; Switch size 1, requested type "simple"
  5838                           ; Number of cases is 1, Range of values is 0 to 0
  5839                           ; switch strategies available:
  5840                           ; Name         Instructions Cycles
  5841                           ; simple_byte            4     3 (average)
  5842                           ; direct_byte           11     8 (fixed)
  5843                           ; jumptable            260     6 (fixed)
  5844                           ;	Chosen strategy is simple_byte
  5845  0C72  0873               	movf	??_Servo1_grados+1,w
  5846  0C73  3A00               	xorlw	0	; case 0
  5847  0C74  1903               	skipnz
  5848  0C75  2C77               	goto	l4431
  5849  0C76  2C42               	goto	l2651
  5850  0C77                     l4431:	
  5851                           
  5852                           ; Switch size 1, requested type "simple"
  5853                           ; Number of cases is 9, Range of values is 0 to 180
  5854                           ; switch strategies available:
  5855                           ; Name         Instructions Cycles
  5856                           ; simple_byte           28    15 (average)
  5857                           ; jumptable            260     6 (fixed)
  5858                           ;	Chosen strategy is simple_byte
  5859  0C77  0872               	movf	??_Servo1_grados,w
  5860  0C78  3A00               	xorlw	0	; case 0
  5861  0C79  1903               	skipnz
  5862  0C7A  2C42               	goto	l2651
  5863  0C7B  3A0A               	xorlw	10	; case 10
  5864  0C7C  1903               	skipnz
  5865  0C7D  2C47               	goto	l2653
  5866  0C7E  3A14               	xorlw	20	; case 30
  5867  0C7F  1903               	skipnz
  5868  0C80  2C4C               	goto	l2655
  5869  0C81  3A33               	xorlw	51	; case 45
  5870  0C82  1903               	skipnz
  5871  0C83  2C51               	goto	l2657
  5872  0C84  3A77               	xorlw	119	; case 90
  5873  0C85  1903               	skipnz
  5874  0C86  2C56               	goto	l2659
  5875  0C87  3A22               	xorlw	34	; case 120
  5876  0C88  1903               	skipnz
  5877  0C89  2C5B               	goto	l2661
  5878  0C8A  3AFF               	xorlw	255	; case 135
  5879  0C8B  1903               	skipnz
  5880  0C8C  2C60               	goto	l2663
  5881  0C8D  3A11               	xorlw	17	; case 150
  5882  0C8E  1903               	skipnz
  5883  0C8F  2C65               	goto	l2665
  5884  0C90  3A22               	xorlw	34	; case 180
  5885  0C91  1903               	skipnz
  5886  0C92  2C6A               	goto	l2667
  5887  0C93  2C42               	goto	l2651
  5888  0C94                     l340:	
  5889  0C94  0008               	return
  5890  0C95                     __end_of_Servo1_grados:	
  5891                           
  5892                           	psect	text13
  5893  0774                     __ptext13:	
  5894 ;; *************** function _LCD_iniciar *****************
  5895 ;; Defined at:
  5896 ;;		line 26 in file "Lib_LCD.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;		None
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;		None
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      void 
  5903 ;; Registers used:
  5904 ;;		wreg, status,2, status,0, pclath, cstack
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5910 ;;      Params:         0       0       0       0       0
  5911 ;;      Locals:         0       0       0       0       0
  5912 ;;      Temps:          2       0       0       0       0
  5913 ;;      Totals:         2       0       0       0       0
  5914 ;;Total ram usage:        2 bytes
  5915 ;; Hardware stack levels used:    1
  5916 ;; Hardware stack levels required when called:    2
  5917 ;; This function calls:
  5918 ;;		_LCD_DATO
  5919 ;; This function is called by:
  5920 ;;		_main
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           
  5925                           ;psect for function _LCD_iniciar
  5926  0774                     _LCD_iniciar:	
  5927  0774                     l3589:	
  5928                           ;incstack = 0
  5929                           ; Regs used in _LCD_iniciar: [wreg+status,2+status,0+pclath+cstack]
  5930                           
  5931                           
  5932                           ;Lib_LCD.c: 27:     _delay((unsigned long)((20)*(1000000/4000.0)));
  5933  0774  3007               	movlw	7
  5934  0775  00F6               	movwf	??_LCD_iniciar+1
  5935  0776  307D               	movlw	125
  5936  0777  00F5               	movwf	??_LCD_iniciar
  5937  0778                     u2387:	
  5938  0778  0BF5               	decfsz	??_LCD_iniciar,f
  5939  0779  2F78               	goto	u2387
  5940  077A  0BF6               	decfsz	??_LCD_iniciar+1,f
  5941  077B  2F78               	goto	u2387
  5942  077C                     l3591:	
  5943                           
  5944                           ;Lib_LCD.c: 28:     LCD_DATO(0x30);
  5945  077C  3030               	movlw	48
  5946  077D  00F2               	movwf	LCD_DATO@var
  5947  077E  3000               	movlw	0
  5948  077F  00F3               	movwf	LCD_DATO@var+1
  5949  0780  120A  158A  2361  120A  118A  	fcall	_LCD_DATO
  5950  0785                     l3593:	
  5951                           
  5952                           ;Lib_LCD.c: 29:     _delay((unsigned long)((5)*(1000000/4000.0)));
  5953  0785  30F9               	movlw	249
  5954  0786  00F5               	movwf	??_LCD_iniciar
  5955  0787                     u2397:	
  5956  0787  2F88               	nop2
  5957  0788  0BF5               	decfsz	??_LCD_iniciar,f
  5958  0789  2F87               	goto	u2397
  5959  078A  2F8B               	nop2
  5960  078B  2F8C               	nop2
  5961                           
  5962                           ;Lib_LCD.c: 30:     LCD_DATO(0x30);
  5963  078C  3030               	movlw	48
  5964  078D  00F2               	movwf	LCD_DATO@var
  5965  078E  3000               	movlw	0
  5966  078F  00F3               	movwf	LCD_DATO@var+1
  5967  0790  120A  158A  2361  120A  118A  	fcall	_LCD_DATO
  5968  0795                     l3595:	
  5969                           
  5970                           ;Lib_LCD.c: 31:     _delay((unsigned long)((100)*(1000000/4000000.0)));
  5971  0795  3008               	movlw	8
  5972  0796  00F5               	movwf	??_LCD_iniciar
  5973  0797                     u2407:	
  5974  0797  0BF5               	decfsz	??_LCD_iniciar,f
  5975  0798  2F97               	goto	u2407
  5976  0799                     l3597:	
  5977                           
  5978                           ;Lib_LCD.c: 32:     LCD_DATO(0x30);
  5979  0799  3030               	movlw	48
  5980  079A  00F2               	movwf	LCD_DATO@var
  5981  079B  3000               	movlw	0
  5982  079C  00F3               	movwf	LCD_DATO@var+1
  5983  079D  120A  158A  2361  120A  118A  	fcall	_LCD_DATO
  5984                           
  5985                           ;Lib_LCD.c: 33:     _delay((unsigned long)((100)*(1000000/4000000.0)));
  5986  07A2  3008               	movlw	8
  5987  07A3  00F5               	movwf	??_LCD_iniciar
  5988  07A4                     u2417:	
  5989  07A4  0BF5               	decfsz	??_LCD_iniciar,f
  5990  07A5  2FA4               	goto	u2417
  5991  07A6                     l3599:	
  5992                           
  5993                           ;Lib_LCD.c: 34:     LCD_DATO(0x38);
  5994  07A6  3038               	movlw	56
  5995  07A7  00F2               	movwf	LCD_DATO@var
  5996  07A8  3000               	movlw	0
  5997  07A9  00F3               	movwf	LCD_DATO@var+1
  5998  07AA  120A  158A  2361  120A  118A  	fcall	_LCD_DATO
  5999  07AF                     l3601:	
  6000                           
  6001                           ;Lib_LCD.c: 35:     _delay((unsigned long)((53)*(1000000/4000000.0)));
  6002  07AF  3004               	movlw	4
  6003  07B0  00F5               	movwf	??_LCD_iniciar
  6004  07B1                     u2427:	
  6005  07B1  0BF5               	decfsz	??_LCD_iniciar,f
  6006  07B2  2FB1               	goto	u2427
  6007                           
  6008                           ;Lib_LCD.c: 36:     LCD_DATO(0x08);
  6009  07B3  3008               	movlw	8
  6010  07B4  00F2               	movwf	LCD_DATO@var
  6011  07B5  3000               	movlw	0
  6012  07B6  00F3               	movwf	LCD_DATO@var+1
  6013  07B7  120A  158A  2361  120A  118A  	fcall	_LCD_DATO
  6014  07BC                     l3603:	
  6015                           
  6016                           ;Lib_LCD.c: 37:     _delay((unsigned long)((53)*(1000000/4000000.0)));
  6017  07BC  3004               	movlw	4
  6018  07BD  00F5               	movwf	??_LCD_iniciar
  6019  07BE                     u2437:	
  6020  07BE  0BF5               	decfsz	??_LCD_iniciar,f
  6021  07BF  2FBE               	goto	u2437
  6022  07C0                     l3605:	
  6023                           
  6024                           ;Lib_LCD.c: 38:     LCD_DATO(0x01);
  6025  07C0  3001               	movlw	1
  6026  07C1  00F2               	movwf	LCD_DATO@var
  6027  07C2  3000               	movlw	0
  6028  07C3  00F3               	movwf	LCD_DATO@var+1
  6029  07C4  120A  158A  2361  120A  118A  	fcall	_LCD_DATO
  6030                           
  6031                           ;Lib_LCD.c: 39:     _delay((unsigned long)((4)*(1000000/4000.0)));
  6032  07C9  30C7               	movlw	199
  6033  07CA  00F5               	movwf	??_LCD_iniciar
  6034  07CB                     u2447:	
  6035  07CB  2FCC               	nop2
  6036  07CC  0BF5               	decfsz	??_LCD_iniciar,f
  6037  07CD  2FCB               	goto	u2447
  6038  07CE  2FCF               	nop2
  6039  07CF  2FD0               	nop2
  6040  07D0                     l3607:	
  6041                           
  6042                           ;Lib_LCD.c: 40:     LCD_DATO(0x06);
  6043  07D0  3006               	movlw	6
  6044  07D1  00F2               	movwf	LCD_DATO@var
  6045  07D2  3000               	movlw	0
  6046  07D3  00F3               	movwf	LCD_DATO@var+1
  6047  07D4  120A  158A  2361  120A  118A  	fcall	_LCD_DATO
  6048  07D9                     l3609:	
  6049                           
  6050                           ;Lib_LCD.c: 41:     _delay((unsigned long)((53)*(1000000/4000000.0)));
  6051  07D9  3004               	movlw	4
  6052  07DA  00F5               	movwf	??_LCD_iniciar
  6053  07DB                     u2457:	
  6054  07DB  0BF5               	decfsz	??_LCD_iniciar,f
  6055  07DC  2FDB               	goto	u2457
  6056                           
  6057                           ;Lib_LCD.c: 42:     LCD_DATO(0x0C);
  6058  07DD  300C               	movlw	12
  6059  07DE  00F2               	movwf	LCD_DATO@var
  6060  07DF  3000               	movlw	0
  6061  07E0  00F3               	movwf	LCD_DATO@var+1
  6062  07E1  120A  158A  2361  120A  118A  	fcall	_LCD_DATO
  6063  07E6                     l3611:	
  6064                           
  6065                           ;Lib_LCD.c: 43:     _delay((unsigned long)((53)*(1000000/4000000.0)));
  6066  07E6  3004               	movlw	4
  6067  07E7  00F5               	movwf	??_LCD_iniciar
  6068  07E8                     u2467:	
  6069  07E8  0BF5               	decfsz	??_LCD_iniciar,f
  6070  07E9  2FE8               	goto	u2467
  6071  07EA                     l368:	
  6072  07EA  0008               	return
  6073  07EB                     __end_of_LCD_iniciar:	
  6074                           
  6075                           	psect	text14
  6076  0BA3                     __ptext14:	
  6077 ;; *************** function _LCD_STRING *****************
  6078 ;; Defined at:
  6079 ;;		line 90 in file "Lib_LCD.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;  a               1    wreg     PTR unsigned char 
  6082 ;;		 -> STR_15(5), STR_14(5), STR_13(5), STR_12(5), 
  6083 ;;		 -> STR_11(5), STR_10(5), STR_9(5), STR_8(5), 
  6084 ;;		 -> STR_7(5), STR_6(5), STR_5(5), STR_4(5), 
  6085 ;;		 -> STR_3(5), STR_2(17), STR_1(17), 
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;  a               1    6[COMMON] PTR unsigned char 
  6088 ;;		 -> STR_15(5), STR_14(5), STR_13(5), STR_12(5), 
  6089 ;;		 -> STR_11(5), STR_10(5), STR_9(5), STR_8(5), 
  6090 ;;		 -> STR_7(5), STR_6(5), STR_5(5), STR_4(5), 
  6091 ;;		 -> STR_3(5), STR_2(17), STR_1(17), 
  6092 ;;  n               2    4[COMMON] int 
  6093 ;; Return value:  Size  Location     Type
  6094 ;;                  1    wreg      void 
  6095 ;; Registers used:
  6096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6097 ;; Tracked objects:
  6098 ;;		On entry : 0/0
  6099 ;;		On exit  : 0/0
  6100 ;;		Unchanged: 0/0
  6101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6102 ;;      Params:         0       0       0       0       0
  6103 ;;      Locals:         3       0       0       0       0
  6104 ;;      Temps:          0       0       0       0       0
  6105 ;;      Totals:         3       0       0       0       0
  6106 ;;Total ram usage:        3 bytes
  6107 ;; Hardware stack levels used:    1
  6108 ;; Hardware stack levels required when called:    2
  6109 ;; This function calls:
  6110 ;;		_LCD_CHAR
  6111 ;; This function is called by:
  6112 ;;		_main
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           
  6117                           ;psect for function _LCD_STRING
  6118  0BA3                     _LCD_STRING:	
  6119                           
  6120                           ;incstack = 0
  6121                           ; Regs used in _LCD_STRING: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6122                           ;LCD_STRING@a stored from wreg
  6123  0BA3  00F6               	movwf	LCD_STRING@a
  6124  0BA4                     l2571:	
  6125                           
  6126                           ;Lib_LCD.c: 90: void LCD_STRING(char *a);Lib_LCD.c: 91: {;Lib_LCD.c: 92:     int n;;Lib_
      +                          LCD.c: 93:     for(n = 0; a[n] != '\0'; n++){
  6127  0BA4  01F4               	clrf	LCD_STRING@n
  6128  0BA5  01F5               	clrf	LCD_STRING@n+1
  6129  0BA6  2BBA               	goto	l2577
  6130  0BA7                     l2573:	
  6131                           
  6132                           ;Lib_LCD.c: 94:         LCD_CHAR(a[n]);
  6133  0BA7  0874               	movf	LCD_STRING@n,w
  6134  0BA8  0776               	addwf	LCD_STRING@a,w
  6135  0BA9  0084               	movwf	4
  6136  0BAA  120A  158A  2000  120A  158A  	fcall	stringdir
  6137  0BAF  120A  118A  27EB  120A  158A  	fcall	_LCD_CHAR
  6138  0BB4                     l2575:	
  6139                           
  6140                           ;Lib_LCD.c: 95:     }
  6141  0BB4  3001               	movlw	1
  6142  0BB5  07F4               	addwf	LCD_STRING@n,f
  6143  0BB6  1803               	skipnc
  6144  0BB7  0AF5               	incf	LCD_STRING@n+1,f
  6145  0BB8  3000               	movlw	0
  6146  0BB9  07F5               	addwf	LCD_STRING@n+1,f
  6147  0BBA                     l2577:	
  6148  0BBA  0874               	movf	LCD_STRING@n,w
  6149  0BBB  0776               	addwf	LCD_STRING@a,w
  6150  0BBC  0084               	movwf	4
  6151  0BBD  120A  158A  2000  120A  158A  	fcall	stringdir
  6152  0BC2  3A00               	xorlw	0
  6153  0BC3  1D03               	skipz
  6154  0BC4  2BC6               	goto	u721
  6155  0BC5  2BC7               	goto	u720
  6156  0BC6                     u721:	
  6157  0BC6  2BA7               	goto	l2573
  6158  0BC7                     u720:	
  6159  0BC7                     l389:	
  6160  0BC7  0008               	return
  6161  0BC8                     __end_of_LCD_STRING:	
  6162                           
  6163                           	psect	text15
  6164  07EB                     __ptext15:	
  6165 ;; *************** function _LCD_CHAR *****************
  6166 ;; Defined at:
  6167 ;;		line 80 in file "Lib_LCD.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;  a               1    wreg     unsigned char 
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;  a               1    3[COMMON] unsigned char 
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  1    wreg      void 
  6174 ;; Registers used:
  6175 ;;		wreg
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/0
  6178 ;;		On exit  : 0/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6181 ;;      Params:         0       0       0       0       0
  6182 ;;      Locals:         1       0       0       0       0
  6183 ;;      Temps:          1       0       0       0       0
  6184 ;;      Totals:         2       0       0       0       0
  6185 ;;Total ram usage:        2 bytes
  6186 ;; Hardware stack levels used:    1
  6187 ;; Hardware stack levels required when called:    1
  6188 ;; This function calls:
  6189 ;;		Nothing
  6190 ;; This function is called by:
  6191 ;;		_main
  6192 ;;		_LCD_STRING
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           
  6197                           ;psect for function _LCD_CHAR
  6198  07EB                     _LCD_CHAR:	
  6199                           
  6200                           ;incstack = 0
  6201                           ; Regs used in _LCD_CHAR: [wreg]
  6202                           ;LCD_CHAR@a stored from wreg
  6203  07EB  00F3               	movwf	LCD_CHAR@a
  6204  07EC                     l2315:	
  6205                           
  6206                           ;Lib_LCD.c: 80: void LCD_CHAR(char a);Lib_LCD.c: 81: {;Lib_LCD.c: 82:     RA3 = 1;
  6207  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  6208  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  6209  07EE  1585               	bsf	5,3	;volatile
  6210  07EF                     l2317:	
  6211                           
  6212                           ;Lib_LCD.c: 84:     PORTB = a;
  6213  07EF  0873               	movf	LCD_CHAR@a,w
  6214  07F0  0086               	movwf	6	;volatile
  6215  07F1                     l2319:	
  6216                           
  6217                           ;Lib_LCD.c: 85:     RA4 = 1;
  6218  07F1  1605               	bsf	5,4	;volatile
  6219                           
  6220                           ;Lib_LCD.c: 86:     _delay((unsigned long)((40)*(1000000/4000000.0)));
  6221  07F2  3003               	movlw	3
  6222  07F3  00F2               	movwf	??_LCD_CHAR
  6223  07F4                     u2477:	
  6224  07F4  0BF2               	decfsz	??_LCD_CHAR,f
  6225  07F5  2FF4               	goto	u2477
  6226  07F6                     l2321:	
  6227                           
  6228                           ;Lib_LCD.c: 87:     RA4 = 0;
  6229  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  6230  07F7  1303               	bcf	3,6	;RP1=0, select bank0
  6231  07F8  1205               	bcf	5,4	;volatile
  6232  07F9                     l383:	
  6233  07F9  0008               	return
  6234  07FA                     __end_of_LCD_CHAR:	
  6235                           
  6236                           	psect	text16
  6237  0C13                     __ptext16:	
  6238 ;; *************** function _LCD_CURSOR *****************
  6239 ;; Defined at:
  6240 ;;		line 63 in file "Lib_LCD.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;  a               2    5[COMMON] int 
  6243 ;;  b               2    7[COMMON] int 
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;  d               2    0[BANK0 ] int 
  6246 ;; Return value:  Size  Location     Type
  6247 ;;                  1    wreg      void 
  6248 ;; Registers used:
  6249 ;;		wreg, status,2, status,0, pclath, cstack
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 0/0
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6255 ;;      Params:         4       0       0       0       0
  6256 ;;      Locals:         0       2       0       0       0
  6257 ;;      Temps:          0       0       0       0       0
  6258 ;;      Totals:         4       2       0       0       0
  6259 ;;Total ram usage:        6 bytes
  6260 ;; Hardware stack levels used:    1
  6261 ;; Hardware stack levels required when called:    2
  6262 ;; This function calls:
  6263 ;;		_LCD_DATO
  6264 ;; This function is called by:
  6265 ;;		_main
  6266 ;; This function uses a non-reentrant model
  6267 ;;
  6268                           
  6269                           
  6270                           ;psect for function _LCD_CURSOR
  6271  0C13                     _LCD_CURSOR:	
  6272  0C13                     l3617:	
  6273                           ;incstack = 0
  6274                           ; Regs used in _LCD_CURSOR: [wreg+status,2+status,0+pclath+cstack]
  6275                           
  6276                           
  6277                           ;Lib_LCD.c: 63: void LCD_CURSOR(int a, int b);Lib_LCD.c: 64: {;Lib_LCD.c: 65:     int d;
      +                          ;Lib_LCD.c: 66:  if(a == 1)
  6278  0C13  0375               	decf	LCD_CURSOR@a,w
  6279  0C14  0476               	iorwf	LCD_CURSOR@a+1,w
  6280  0C15  1D03               	btfss	3,2
  6281  0C16  2C18               	goto	u1231
  6282  0C17  2C19               	goto	u1230
  6283  0C18                     u1231:	
  6284  0C18  2C2D               	goto	l3623
  6285  0C19                     u1230:	
  6286  0C19                     l3619:	
  6287                           
  6288                           ;Lib_LCD.c: 67:  {;Lib_LCD.c: 68:         d = 0x80 + b - 1;
  6289  0C19  0877               	movf	LCD_CURSOR@b,w
  6290  0C1A  3E7F               	addlw	127
  6291  0C1B  1283               	bcf	3,5	;RP0=0, select bank0
  6292  0C1C  1303               	bcf	3,6	;RP1=0, select bank0
  6293  0C1D  00B8               	movwf	LCD_CURSOR@d
  6294  0C1E  0878               	movf	LCD_CURSOR@b+1,w
  6295  0C1F  1803               	skipnc
  6296  0C20  3E01               	addlw	1
  6297  0C21  3E00               	addlw	0
  6298  0C22  00B9               	movwf	LCD_CURSOR@d+1
  6299  0C23                     l3621:	
  6300                           
  6301                           ;Lib_LCD.c: 69:   LCD_DATO(d);
  6302  0C23  0839               	movf	LCD_CURSOR@d+1,w
  6303  0C24  00F3               	movwf	LCD_DATO@var+1
  6304  0C25  0838               	movf	LCD_CURSOR@d,w
  6305  0C26  00F2               	movwf	LCD_DATO@var
  6306  0C27  120A  158A  2361  120A  158A  	fcall	_LCD_DATO
  6307                           
  6308                           ;Lib_LCD.c: 70:  }
  6309  0C2C  2C3F               	goto	l380
  6310  0C2D                     l3623:	
  6311  0C2D  3002               	movlw	2
  6312  0C2E  0675               	xorwf	LCD_CURSOR@a,w
  6313  0C2F  0476               	iorwf	LCD_CURSOR@a+1,w
  6314  0C30  1D03               	btfss	3,2
  6315  0C31  2C33               	goto	u1241
  6316  0C32  2C34               	goto	u1240
  6317  0C33                     u1241:	
  6318  0C33  2C3F               	goto	l380
  6319  0C34                     u1240:	
  6320  0C34                     l3625:	
  6321                           
  6322                           ;Lib_LCD.c: 72:  {;Lib_LCD.c: 73:   d = 0xC0 + b - 1;
  6323  0C34  0877               	movf	LCD_CURSOR@b,w
  6324  0C35  3EBF               	addlw	191
  6325  0C36  1283               	bcf	3,5	;RP0=0, select bank0
  6326  0C37  1303               	bcf	3,6	;RP1=0, select bank0
  6327  0C38  00B8               	movwf	LCD_CURSOR@d
  6328  0C39  0878               	movf	LCD_CURSOR@b+1,w
  6329  0C3A  1803               	skipnc
  6330  0C3B  3E01               	addlw	1
  6331  0C3C  3E00               	addlw	0
  6332  0C3D  00B9               	movwf	LCD_CURSOR@d+1
  6333  0C3E  2C23               	goto	l3621
  6334  0C3F                     l380:	
  6335  0C3F  0008               	return
  6336  0C40                     __end_of_LCD_CURSOR:	
  6337                           
  6338                           	psect	text17
  6339  0AF2                     __ptext17:	
  6340 ;; *************** function _LCD_CLEAR *****************
  6341 ;; Defined at:
  6342 ;;		line 56 in file "Lib_LCD.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;		None
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;		None
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      void 
  6349 ;; Registers used:
  6350 ;;		wreg, status,2, status,0, pclath, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6356 ;;      Params:         0       0       0       0       0
  6357 ;;      Locals:         0       0       0       0       0
  6358 ;;      Temps:          1       0       0       0       0
  6359 ;;      Totals:         1       0       0       0       0
  6360 ;;Total ram usage:        1 bytes
  6361 ;; Hardware stack levels used:    1
  6362 ;; Hardware stack levels required when called:    2
  6363 ;; This function calls:
  6364 ;;		_LCD_DATO
  6365 ;; This function is called by:
  6366 ;;		_main
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           
  6371                           ;psect for function _LCD_CLEAR
  6372  0AF2                     _LCD_CLEAR:	
  6373  0AF2                     l3613:	
  6374                           ;incstack = 0
  6375                           ; Regs used in _LCD_CLEAR: [wreg+status,2+status,0+pclath+cstack]
  6376                           
  6377                           
  6378                           ;Lib_LCD.c: 57:     LCD_DATO(0x00);
  6379  0AF2  3000               	movlw	0
  6380  0AF3  00F2               	movwf	LCD_DATO@var
  6381  0AF4  00F3               	movwf	LCD_DATO@var+1
  6382  0AF5  120A  158A  2361  120A  158A  	fcall	_LCD_DATO
  6383                           
  6384                           ;Lib_LCD.c: 58:     LCD_DATO(0x01);
  6385  0AFA  3001               	movlw	1
  6386  0AFB  00F2               	movwf	LCD_DATO@var
  6387  0AFC  3000               	movlw	0
  6388  0AFD  00F3               	movwf	LCD_DATO@var+1
  6389  0AFE  120A  158A  2361  120A  158A  	fcall	_LCD_DATO
  6390  0B03                     l3615:	
  6391                           
  6392                           ;Lib_LCD.c: 59:     _delay((unsigned long)((5)*(1000000/4000.0)));
  6393  0B03  30F9               	movlw	249
  6394  0B04  00F5               	movwf	??_LCD_CLEAR
  6395  0B05                     u2487:	
  6396  0B05  2B06               	nop2
  6397  0B06  0BF5               	decfsz	??_LCD_CLEAR,f
  6398  0B07  2B05               	goto	u2487
  6399  0B08  2B09               	nop2
  6400  0B09  2B0A               	nop2
  6401  0B0A                     l374:	
  6402  0B0A  0008               	return
  6403  0B0B                     __end_of_LCD_CLEAR:	
  6404                           
  6405                           	psect	text18
  6406  0B61                     __ptext18:	
  6407 ;; *************** function _LCD_DATO *****************
  6408 ;; Defined at:
  6409 ;;		line 46 in file "Lib_LCD.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;  var             2    2[COMMON] int 
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;		None
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  1    wreg      void 
  6416 ;; Registers used:
  6417 ;;		wreg
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6423 ;;      Params:         2       0       0       0       0
  6424 ;;      Locals:         0       0       0       0       0
  6425 ;;      Temps:          1       0       0       0       0
  6426 ;;      Totals:         3       0       0       0       0
  6427 ;;Total ram usage:        3 bytes
  6428 ;; Hardware stack levels used:    1
  6429 ;; Hardware stack levels required when called:    1
  6430 ;; This function calls:
  6431 ;;		Nothing
  6432 ;; This function is called by:
  6433 ;;		_LCD_iniciar
  6434 ;;		_LCD_CLEAR
  6435 ;;		_LCD_CURSOR
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439                           
  6440                           ;psect for function _LCD_DATO
  6441  0B61                     _LCD_DATO:	
  6442  0B61                     l3581:	
  6443                           ;incstack = 0
  6444                           ; Regs used in _LCD_DATO: [wreg]
  6445                           
  6446                           
  6447                           ;Lib_LCD.c: 47:     RA3 = 0;
  6448  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  6449  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  6450  0B63  1185               	bcf	5,3	;volatile
  6451  0B64                     l3583:	
  6452                           
  6453                           ;Lib_LCD.c: 48:     _delay((unsigned long)((5)*(1000000/4000.0)));
  6454  0B64  30F9               	movlw	249
  6455  0B65  00F4               	movwf	??_LCD_DATO
  6456  0B66                     u2497:	
  6457  0B66  2B67               	nop2
  6458  0B67  0BF4               	decfsz	??_LCD_DATO,f
  6459  0B68  2B66               	goto	u2497
  6460  0B69  2B6A               	nop2
  6461  0B6A  2B6B               	nop2
  6462  0B6B                     l3585:	
  6463                           
  6464                           ;Lib_LCD.c: 49:     RA4 = 1;
  6465  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  6466  0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  6467  0B6D  1605               	bsf	5,4	;volatile
  6468                           
  6469                           ;Lib_LCD.c: 50:     PORTB = var;
  6470  0B6E  0872               	movf	LCD_DATO@var,w
  6471  0B6F  0086               	movwf	6	;volatile
  6472                           
  6473                           ;Lib_LCD.c: 51:     _delay((unsigned long)((5)*(1000000/4000.0)));
  6474  0B70  30F9               	movlw	249
  6475  0B71  00F4               	movwf	??_LCD_DATO
  6476  0B72                     u2507:	
  6477  0B72  2B73               	nop2
  6478  0B73  0BF4               	decfsz	??_LCD_DATO,f
  6479  0B74  2B72               	goto	u2507
  6480  0B75  2B76               	nop2
  6481  0B76  2B77               	nop2
  6482  0B77                     l3587:	
  6483                           
  6484                           ;Lib_LCD.c: 52:     RA4 = 0;
  6485  0B77  1283               	bcf	3,5	;RP0=0, select bank0
  6486  0B78  1303               	bcf	3,6	;RP1=0, select bank0
  6487  0B79  1205               	bcf	5,4	;volatile
  6488                           
  6489                           ;Lib_LCD.c: 53:     _delay((unsigned long)((5)*(1000000/4000.0)));
  6490  0B7A  30F9               	movlw	249
  6491  0B7B  00F4               	movwf	??_LCD_DATO
  6492  0B7C                     u2517:	
  6493  0B7C  2B7D               	nop2
  6494  0B7D  0BF4               	decfsz	??_LCD_DATO,f
  6495  0B7E  2B7C               	goto	u2517
  6496  0B7F  2B80               	nop2
  6497  0B80  2B81               	nop2
  6498  0B81                     l371:	
  6499  0B81  0008               	return
  6500  0B82                     __end_of_LCD_DATO:	
  6501                           
  6502                           	psect	text19
  6503  0B0B                     __ptext19:	
  6504 ;; *************** function _I2C_Slave_Init *****************
  6505 ;; Defined at:
  6506 ;;		line 94 in file "I2C.c"
  6507 ;; Parameters:    Size  Location     Type
  6508 ;;  address         1    wreg     unsigned char 
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;  address         1    2[COMMON] unsigned char 
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  1    wreg      void 
  6513 ;; Registers used:
  6514 ;;		wreg
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6520 ;;      Params:         0       0       0       0       0
  6521 ;;      Locals:         1       0       0       0       0
  6522 ;;      Temps:          0       0       0       0       0
  6523 ;;      Totals:         1       0       0       0       0
  6524 ;;Total ram usage:        1 bytes
  6525 ;; Hardware stack levels used:    1
  6526 ;; Hardware stack levels required when called:    1
  6527 ;; This function calls:
  6528 ;;		Nothing
  6529 ;; This function is called by:
  6530 ;;		_main
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534                           
  6535                           ;psect for function _I2C_Slave_Init
  6536  0B0B                     _I2C_Slave_Init:	
  6537                           
  6538                           ;incstack = 0
  6539                           ; Regs used in _I2C_Slave_Init: [wreg]
  6540                           ;I2C_Slave_Init@address stored from wreg
  6541  0B0B  00F2               	movwf	I2C_Slave_Init@address
  6542  0B0C                     l2517:	
  6543                           
  6544                           ;I2C.c: 94: void I2C_Slave_Init(uint8_t address);I2C.c: 95: {;I2C.c: 96:     SSPADD = ad
      +                          dress;
  6545  0B0C  0872               	movf	I2C_Slave_Init@address,w
  6546  0B0D  1683               	bsf	3,5	;RP0=1, select bank1
  6547  0B0E  1303               	bcf	3,6	;RP1=0, select bank1
  6548  0B0F  0093               	movwf	19	;volatile
  6549                           
  6550                           ;I2C.c: 97:     SSPCON = 0x36;
  6551  0B10  3036               	movlw	54
  6552  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  6553  0B12  1303               	bcf	3,6	;RP1=0, select bank0
  6554  0B13  0094               	movwf	20	;volatile
  6555                           
  6556                           ;I2C.c: 98:     SSPSTAT = 0x80;
  6557  0B14  3080               	movlw	128
  6558  0B15  1683               	bsf	3,5	;RP0=1, select bank1
  6559  0B16  1303               	bcf	3,6	;RP1=0, select bank1
  6560  0B17  0094               	movwf	20	;volatile
  6561                           
  6562                           ;I2C.c: 99:     SSPCON2 = 0x01;
  6563  0B18  3001               	movlw	1
  6564  0B19  0091               	movwf	17	;volatile
  6565  0B1A                     l2519:	
  6566                           
  6567                           ;I2C.c: 100:     TRISC3 = 1;
  6568  0B1A  1587               	bsf	7,3	;volatile
  6569  0B1B                     l2521:	
  6570                           
  6571                           ;I2C.c: 101:     TRISC4 = 1;
  6572  0B1B  1607               	bsf	7,4	;volatile
  6573  0B1C                     l2523:	
  6574                           
  6575                           ;I2C.c: 102:     GIE = 1;
  6576  0B1C  178B               	bsf	11,7	;volatile
  6577  0B1D                     l2525:	
  6578                           
  6579                           ;I2C.c: 103:     PEIE = 1;
  6580  0B1D  170B               	bsf	11,6	;volatile
  6581  0B1E                     l2527:	
  6582                           
  6583                           ;I2C.c: 104:     SSPIF = 0;
  6584  0B1E  1283               	bcf	3,5	;RP0=0, select bank0
  6585  0B1F  1303               	bcf	3,6	;RP1=0, select bank0
  6586  0B20  118C               	bcf	12,3	;volatile
  6587  0B21                     l2529:	
  6588                           
  6589                           ;I2C.c: 105:     SSPIE = 1;
  6590  0B21  1683               	bsf	3,5	;RP0=1, select bank1
  6591  0B22  1303               	bcf	3,6	;RP1=0, select bank1
  6592  0B23  158C               	bsf	12,3	;volatile
  6593  0B24                     l297:	
  6594  0B24  0008               	return
  6595  0B25                     __end_of_I2C_Slave_Init:	
  6596                           
  6597                           	psect	text20
  6598  0AE4                     __ptext20:	
  6599 ;; *************** function _ISR *****************
  6600 ;; Defined at:
  6601 ;;		line 81 in file "Slave_Lou.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;		None
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;		None
  6606 ;; Return value:  Size  Location     Type
  6607 ;;                  1    wreg      void 
  6608 ;; Registers used:
  6609 ;;		None
  6610 ;; Tracked objects:
  6611 ;;		On entry : 0/0
  6612 ;;		On exit  : 0/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6615 ;;      Params:         0       0       0       0       0
  6616 ;;      Locals:         0       0       0       0       0
  6617 ;;      Temps:          2       0       0       0       0
  6618 ;;      Totals:         2       0       0       0       0
  6619 ;;Total ram usage:        2 bytes
  6620 ;; Hardware stack levels used:    1
  6621 ;; This function calls:
  6622 ;;		Nothing
  6623 ;; This function is called by:
  6624 ;;		Interrupt level 1
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628                           
  6629                           ;psect for function _ISR
  6630  0AE4                     _ISR:	
  6631  0AE4                     i1l1541:	
  6632                           
  6633                           ;Slave_Lou.c: 82:     if (ADIF) {
  6634  0AE4  1283               	bcf	3,5	;RP0=0, select bank0
  6635  0AE5  1303               	bcf	3,6	;RP1=0, select bank0
  6636  0AE6  1F0C               	btfss	12,6	;volatile
  6637  0AE7  2AE9               	goto	u28_21
  6638  0AE8  2AEA               	goto	u28_20
  6639  0AE9                     u28_21:	
  6640  0AE9  2AEB               	goto	i1l116
  6641  0AEA                     u28_20:	
  6642  0AEA                     i1l1543:	
  6643                           
  6644                           ;Slave_Lou.c: 83:         PIR1bits.ADIF = 0;
  6645  0AEA  130C               	bcf	12,6	;volatile
  6646  0AEB                     i1l116:	
  6647  0AEB  0871               	movf	??_ISR+1,w
  6648  0AEC  008A               	movwf	10
  6649  0AED  0E70               	swapf	??_ISR^(0+4294967168),w
  6650  0AEE  0083               	movwf	3
  6651  0AEF  0EFE               	swapf	btemp,f
  6652  0AF0  0E7E               	swapf	btemp,w
  6653  0AF1  0009               	retfie
  6654  0AF2                     __end_of_ISR:	
  6655  007E                     btemp	set	126	;btemp
  6656  007E                     wtemp0	set	126
  6657                           
  6658                           	psect	intentry
  6659  0004                     __pintentry:	
  6660                           ;incstack = 0
  6661                           ; Regs used in _ISR: []
  6662                           
  6663  0004                     interrupt_function:	
  6664  007E                     saved_w	set	btemp
  6665  0004  00FE               	movwf	btemp
  6666  0005  0E03               	swapf	3,w
  6667  0006  00F0               	movwf	??_ISR
  6668  0007  080A               	movf	10,w
  6669  0008  00F1               	movwf	??_ISR+1
  6670  0009  120A  158A  2AE4   	ljmp	_ISR


Data Sizes:
    Strings     72
    Constant    0
    Data        0
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80     18      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_STRING@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_15(CODE[5]), STR_14(CODE[5]), STR_13(CODE[5]), STR_12(CODE[5]), 
		 -> STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[5]), STR_8(CODE[5]), 
		 -> STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[5]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sp__mapeo	PTR unsigned int  size(1) Largest target is 6
		 -> mapeo@result(BANK0[6]), 

    voltaje_map	PTR unsigned int  size(1) Largest target is 6
		 -> mapeo@result(BANK0[6]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _main->_LCD_CURSOR
    _mapeo->___wmul
    _config_PORTS->_OSC_config
    _LCD_iniciar->_LCD_DATO
    _LCD_STRING->_LCD_CHAR
    _LCD_CURSOR->_LCD_DATO
    _LCD_CLEAR->_LCD_DATO

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_mapeo

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    9525
                                             15 BANK0      3     3      0
                     _I2C_Slave_Init
                           _LCD_CHAR
                          _LCD_CLEAR
                         _LCD_CURSOR
                         _LCD_STRING
                        _LCD_iniciar
                      _Servo1_grados
                      _Servo2_grados
                        _Stepper_CCW
                         _Stepper_CW
                         _config_ADC
                       _config_PORTS
                         _init_PWM_1
                         _init_PWM_2
                              _mapeo
                       _uint_to_char
 ---------------------------------------------------------------------------------
 (1) _uint_to_char                                         4     4      0      62
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _mapeo                                               15    13      2    1461
                                              0 BANK0     15    13      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_PWM_2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_PWM_1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_PORTS                                         0     0      0      98
                         _OSC_config
 ---------------------------------------------------------------------------------
 (2) _OSC_config                                           4     0      4      98
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _config_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Stepper_CW                                           4     2      2     402
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Stepper_CCW                                          4     2      2     402
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Servo2_grados                                        3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Servo1_grados                                        3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_iniciar                                          2     2      0    1111
                                              5 COMMON     2     2      0
                           _LCD_DATO
 ---------------------------------------------------------------------------------
 (1) _LCD_STRING                                           3     3      0     607
                                              4 COMMON     3     3      0
                           _LCD_CHAR
 ---------------------------------------------------------------------------------
 (2) _LCD_CHAR                                             2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_CURSOR                                           6     2      4    4183
                                              5 COMMON     4     0      4
                                              0 BANK0      2     2      0
                           _LCD_DATO
 ---------------------------------------------------------------------------------
 (1) _LCD_CLEAR                                            1     1      0    1111
                                              5 COMMON     1     1      0
                           _LCD_DATO
 ---------------------------------------------------------------------------------
 (2) _LCD_DATO                                             3     1      2    1111
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init
   _LCD_CHAR
   _LCD_CLEAR
     _LCD_DATO
   _LCD_CURSOR
     _LCD_DATO
   _LCD_STRING
     _LCD_CHAR
   _LCD_iniciar
     _LCD_DATO
   _Servo1_grados
   _Servo2_grados
   _Stepper_CCW
   _Stepper_CW
   _config_ADC
   _config_PORTS
     _OSC_config
   _init_PWM_1
   _init_PWM_2
   _mapeo
     ___wmul
   _uint_to_char

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      36       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      2A       5       52.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      36      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri May 01 14:56:47 2020

               LCD_CURSOR@a 0075                 LCD_CURSOR@b 0077                 LCD_CURSOR@d 0038  
Stepper_CCW@Step_grados_ccw 0072                           _i 0079                           _z 0036  
                         pc 0002                 __CFG_CP$OFF 0000                          fsr 0004  
       ___wmul@multiplicand 0074                         l242 0FFF                         l322 0B59  
                       l219 06C7                         l323 0B58                         l411 0D7C  
                       l340 0C94                         l316 0B3A                         l324 0B5D  
                       l173 0773                         l317 0B39                         l325 0B60  
                       l318 0B3E                         l190 0E20                         l159 0C12  
                       l319 0B41                         l176 0BA2                         l371 0B81  
                       l355 0CE9                         l380 0C3F                         l374 0B0A  
                       l383 07F9                         l368 07EA                         l297 0B24  
                       l389 0BC7                         l497 0BD4                         l499 0BEC  
                       _GIE 005F                         _RA3 002B                         _RA4 002C  
                       _PR2 0092                __CFG_CPD$OFF 0000                         _ISR 0AE4  
                       u720 0BC7                         u800 05DA                         u640 0BCE  
                       u721 0BC6                         u801 05D9                         u641 0BCD  
                       u810 0625                         u811 0624                         u820 0670  
                       u821 066F                         u805 05D6                         u830 0E31  
                       u670 0BE8                         u831 0E30                         u815 0621  
                       u671 0BE7                         u655 0BD5                         u840 0E7C  
                       u680 0B3E                         u841 0E7B                         u825 066C  
                       u681 0B3D                         u665 0BDC                         u850 0EC7  
                       u770 04F9                         u690 0B5D                         u851 0EC6  
                       u835 0E2D                         u771 04F8                         u691 0B5C  
                       u860 0F12                         u780 0544                         u861 0F11  
                       u845 0E78                         u781 0543                         u870 0F5D  
                       u790 058F                         u871 0F5C                         u855 0EC3  
                       u791 058E                         u775 04F5                         u880 0FA8  
                       u881 0FA7                         u865 0F0E                         u785 0540  
                       u875 0F59                         u795 058B                         u885 0FA4  
                       _dec 0035                         _cen 0034                _uint_to_char 0CEA  
                       fsr0 0004                         _uni 007B                         indf 0000  
               LCD_STRING@a 0076                 LCD_STRING@n 0074                __CFG_LVP$OFF 0000  
                      ?_ISR 0070                        l2321 07F6                        l2315 07EC  
                      l2331 06DC                        l2323 06C8                        l2317 07EF  
                      l2341 06FD                        l2333 06E3                        l2325 06C9  
                      l2501 0B4E                        l2421 0BC8                        l2319 07F1  
                      l2335 06EA                        l2327 06CE                        l2343 0704  
                      l2511 0B55                        l2503 0B51                        l2431 0BE8  
                      l2423 0BCA                        l2521 0B1B                        l2337 06F1  
                      l2329 06D5                        l2441 0C02                        l2513 0B56  
                      l2505 0B52                        l2425 0BCE                        l2523 0B1C  
                      l2515 0B82                        l2339 06F8                        l2451 0C09  
                      l2443 0C05                        l2435 0BED                        l2507 0B53  
                      l2427 0BDB                        l2611 0CFB                        l2603 0CEB  
                      l2525 0B1D                        l2517 0B0C                        l2461 0C11  
                      l2453 0C0B                        l2445 0C06                        l2437 0BFA  
                      l2509 0B54                        l2429 0BE2                        l2621 0D14  
                      l2613 0D00                        l2605 0CEC                        l2527 0B1E  
                      l2519 0B1A                        l2455 0C0E                        l2447 0C07  
                      l2439 0BFE                        l2471 0B2E                        l2463 0B25  
                      l2631 0D2D                        l2623 0D19                        l2615 0D05  
                      l2607 0CF1                        l2529 0B21                        l3601 07AF  
                      l2801 0EBA                        l2713 04FA                        l2705 04E9  
                      l4401 074F                        l2457 0C0F                        l2449 0C08  
                      l2481 0B35                        l2473 0B2F                        l2465 0B28  
                      l2633 0D32                        l2625 0D1E                        l2617 0D0A  
                      l2609 0CF6                        l2641 0D7B                        l2571 0BA4  
                      l3611 07E6                        l3603 07BC                        l2651 0C42  
                      l2811 0F05                        l2723 0545                        l2707 04EA  
                      l4411 072C                        l4403 0759                        l2459 0C10  
                      l2483 0B36                        l2475 0B32                        l2467 0B2A  
                      l2491 0B47                        l2635 0D37                        l2627 0D23  
                      l2619 0D0F                        l3613 0AF2                        l3621 0C23  
                      l2573 0BA7                        l3605 07C0                        l2661 0C5B  
                      l2653 0C47                        l2821 0F50                        l2805 0EC8  
                      l4421 06B4                        l2733 0590                        l2717 0535  
                      l2709 04EC                        l4413 0736                        l4405 070E  
                      l2485 0B37                        l2477 0B33                        l2469 0B2D  
                      l2493 0B4A                        l2637 0D3C                        l2629 0D28  
                      l3701 00DF                        l3615 0B03                        l3623 0C2D  
                      l2575 0BB4                        l3607 07D0                        l4431 0C77  
                      l2663 0C60                        l2655 0C4C                        l2671 0C6F  
                      l2831 0F9B                        l2815 0F13                        l4423 06C2  
                      l2743 05DB                        l2727 0580                        l2719 0537  
                      l4415 0740                        l4407 0718                        l2479 0B34  
                      l2495 0B4B                        l2487 0B42                        l3631 0D89  
                      l2639 0D41                        l3711 00FB                        l3703 00E5  
                      l3625 0C34                        l3617 0C13                        l2577 0BBA  
                      l3609 07D9                        l2665 0C65                        l2657 0C51  
                      l2649 0C41                        l2681 0C9C                        l4425 0FEC  
                      l2825 0F5E                        l2809 0F03                        l2753 0626  
                      l2737 05CB                        l2729 0582                        l4417 074A  
                      l4409 0722                        l2497 0B4C                        l2489 0B45  
                      l3641 0DE2                        l3633 0DA3                        l3801 0348  
                      l3721 012D                        l3713 00FF                        l3705 00EB  
                      l3619 0C19                        l2667 0C6A                        l2659 0C56  
                      l2691 0CB5                        l2683 0CA1                        l4427 0FFA  
                      l2835 0FA9                        l2819 0F4E                        l2763 0671  
                      l2747 0616                        l2739 05CD                        l4419 0754  
                      l2499 0B4D                        l3643 0DEF                        l3635 0DB2  
                      l3811 0366                        l3803 034E                        l3731 017D  
                      l3723 0141                        l3715 0105                        l3707 00ED  
                      l3581 0B61                        l4429 0CCC                        l2693 0CBA  
                      l2685 0CA6                        l2677 0C96                        l2829 0F99  
                      l2781 0E24                        l2757 0661                        l2749 0618  
                      l3645 0E03                        l3637 0DBF                        l3629 0D80  
                      l3901 04D2                        l3821 0394                        l3813 0373  
                      l3805 0356                        l3741 01C7                        l3733 018B  
                      l3725 014F                        l3717 0113                        l3709 00F4  
                      l3661 0033                        l3653 001F                        l3583 0B64  
                      l3591 077C                        l2695 0CBF                        l2687 0CAB  
                      l2679 0C97                        l2791 0E6F                        l2839 0FE4  
                      l2759 0663                        l2767 06AC                        l4391 071D  
                      l3647 0E12                        l3639 0DD3                        l3903 04DF  
                      l3831 03BB                        l3823 039A                        l3815 0379  
                      l3807 035B                        l3751 0217                        l3743 01DB  
                      l3735 019F                        l3727 0163                        l3719 0127  
                      l3671 0056                        l3663 0039                        l3655 0024  
                      l3585 0B6B                        l3593 0785                        l2689 0CB0  
                      l2785 0E32                        l2777 0E21                        l4393 0727  
                      l3649 0E1F                        l4385 0D49                        l3841 03E4  
                      l3833 03C3                        l3825 03A2                        l3817 0381  
                      l3809 0361                        l3761 023A                        l3753 021D  
                      l3745 01E1                        l3737 01A5                        l3729 0169  
                      l3681 0084                        l3673 0063                        l3665 003E  
                      l3657 0029                        l3587 0B77                        l3595 0795  
                      l2699 0CC4                        l2795 0E7D                        l2779 0E22  
                      l4395 0731                        l4387 0709                        l3851 040B  
                      l3843 03EA                        l3835 03C9                        l3827 03A8  
                      l3819 0387                        l3771 0263                        l3763 0241  
                      l3747 01F5                        l3739 01B9                        l3755 0231  
                      l3691 00AF                        l3683 008B                        l3675 0069  
                      l3667 0043                        l3659 002E                        l3597 0799  
                      l3589 0774                        l2789 0E6D                        l4397 073B  
                      l4389 0713                        l3861 0439                        l3853 0418  
                      l3845 03F7                        l3837 03D6                        l3829 03B5  
                      l3781 02BF                        l3773 027A                        l3765 0248  
                      l3749 0203                        l3757 0234                        l3693 00BA  
                      l3685 0092                        l3677 006C                        l3669 0050  
                      l3599 07A6                        l2799 0EB8                        l4399 0745  
                      l3871 0460                        l3863 043F                        l3855 041E  
                      l3847 03FD                        l3839 03DC                        l3791 030D  
                      l3783 02C8                        l3775 0283                        l3767 024C  
                      l3759 0238                        l3695 00C7                        l3687 0099  
                      l3679 0073                        l3881 0488                        l3873 0468  
                      l3865 0447                        l3857 0426                        l3849 0405  
                      l3793 0324                        l3785 02DF                        l3777 029A  
                      l3769 0255                        l3697 00CF                        l3689 00A4  
                      l3891 04AE                        l3883 048E                        l3875 046E  
                      l3867 044D                        l3859 042C                        l3787 02ED  
                      l3779 02A8                        l3795 0332                        l3699 00D7  
                      l3893 04BB                        l3885 049B                        l3877 047B  
                      l3869 045A                        l3789 0304                        l3797 0335  
                      l3895 04C1                        l3887 04A1                        l3879 0481  
                      l3799 033B                        _ADIF 0066                        l3897 04C8  
                      l3889 04A8                        l3899 04CD                        STR_1 0806  
                      STR_2 0806                        STR_3 0817                        STR_4 0817  
                      STR_5 0821                        STR_6 0826                        STR_7 082B  
                      STR_8 0830                        STR_9 0835              ??_config_PORTS 0076  
                      u1300 00FB                        u1301 00FA                        u1230 0C19  
                      u1310 00FF                        u1231 0C18                        u2007 05B2  
                      u1311 00FE                        u1240 0C34                        u1400 0381  
                      u1320 0238                        u1241 0C33                        u2017 05BF  
                      u1401 0380                        u1321 0237                        u1250 0D84  
                      u1410 0387                        u1330 0248                        u2107 0679  
                      u2027 05E3                        u1411 0386                        u1331 0247  
                      u1260 0DBF                        u1500 0426                        u1420 03A2  
                      u1340 024C                        u2117 0686                        u2037 05F0  
                      u1261 0DBE                        u1501 0425                        u1421 03A1  
                      u1341 024B                        u1270 0DEF                        u1510 042C  
                      u1430 03A8                        u1350 033B                        u2207 0E9F  
                      u2127 0693                        u2047 05FD                        u1271 0DEE  
                      u1511 042B                        u1431 03A7                        u1351 033A  
                      u1280 0E1F                        u1600 04C8                        u1520 0447  
                      u1440 03C3                        u1360 0356                        u2217 0EAC  
                      u2137 06A0                        u2057 060A                        u1281 0E1E  
                      u1265 0DBB                        u1601 04C7                        u1521 0446  
                      u1441 03C2                        u1361 0355                        u1610 04CD  
                      u1530 044D                        u1450 03C9                        u1370 035B  
                      u1290 00EB                        u2307 0F66                        u2227 0ED0  
                      u2147 0E3A                        u2067 062E                        u1275 0DEB  
                      u1611 04CC                        u1531 044C                        u1451 03C8  
                      u1371 035A                        u1291 00EA                        u1620 04D2  
                      u1540 0468                        u1460 03E4                        u1380 0361  
                      u2317 0F73                        u2237 0EDD                        u2157 0E47  
                      u2077 063B                        u1285 0E1B                        u1621 04D1  
                      u1541 0467                        u1461 03E3                        u1381 0360  
                      u1550 046E                        u1470 03EA                        u1390 0366  
                      u2407 0797                        u2327 0F80                        u2247 0EEA  
                      u2167 0E54                        u2087 0648                        u1551 046D  
                      u1471 03E9                        u1391 0365                        u1560 0488  
                      u1480 0405                        u2417 07A4                        u2337 0F8D  
                      u2257 0EF7                        u2177 0E61                        u2097 0655  
                      u1561 0487                        u1481 0404                        u1570 048E  
                      u1490 040B                        u2507 0B72                        u2427 07B1  
                      u2347 0FB1                        u2267 0F1B                        u2187 0E85  
                      u1571 048D                        u1491 040A                        u1707 0185  
                      u1580 04A8                        u2517 0B7C                        u2437 07BE  
                      u2357 0FBE                        u2277 0F28                        u2197 0E92  
                      u1581 04A7                        u1717 0199                        u1637 00F1  
                      u1590 04AE                        u2447 07CB                        u2367 0FCB  
                      u2287 0F35                        u1591 04AD                        u1807 025D  
                      u1727 01AD                        u1647 010D                        u2457 07DB  
                      u2377 0FD8                        u2297 0F42                        u1817 0274  
                      u1737 01C1                        u1657 0121                        u2467 07E8  
                      u2387 0778                        u1907 0502                        u1827 028B  
                      u1747 01D5                        u1667 0135                        u2477 07F4  
                      u2397 0787                        u1917 050F                        u1837 02A2  
                      u1757 01E9                        u1677 0149                        u2487 0B05  
                      u1927 051C                        u1847 02B9                        u1767 01FD  
                      u1687 015D                        u2497 0B66                        u1937 0529  
                      u1857 02D0                        u1777 0211                        u1697 0171  
                      u1947 054D                        u1867 02E7                        u1787 0225  
                      _PEIE 005E                        u1957 055A                        u1877 02FE  
                      u1797 023E                        u1967 0567                        u1887 0315  
                      u1977 0574                        u1897 032C                        u1987 0598  
                      u1997 05A5          __size_of_LCD_CLEAR 0019                ?_LCD_iniciar 0070  
              __CFG_WRT$OFF 0000                        _main 001F                        btemp 007E  
                      start 000C               __CFG_IESO$OFF 0000                 _voltaje_map 0037  
                     ??_ISR 0070            __end_of_LCD_CHAR 07FA            __end_of_LCD_DATO 0B82  
                     ?_main 0070                       STR_10 083A                       STR_11 083F  
                     STR_12 0844                       STR_13 0849                       STR_14 081C  
                     STR_15 081C               __CFG_WDTE$OFF 0000          uint_to_char@numChr 0075  
                     _ANSEL 0188                       i1l116 0AEB          uint_to_char@numero 0074  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       _PORTE 0009                       u28_20 0AEA  
                     u28_21 0AE9                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _SSPIE 0463  
                     _TRISE 0089                       _SSPIF 0063         __size_of_LCD_CURSOR 002D  
            __CFG_FCMEN$OFF 0000         __size_of_LCD_STRING 0025                       _mapeo 0D7D  
            __CFG_BOREN$OFF 0000                 ?_OSC_config 0072                       pclath 000A  
                     status 0003                 mapeo@limPIC 0038                       wtemp0 007E  
               mapeo@result 003F              __CFG_MCLRE$OFF 0000             __initialization 000F  
              __end_of_main 04E9       __end_of_Servo1_grados 0C95           __end_of_LCD_CLEAR 0B0B  
Servo1_grados@Servo1_grados 0074       __end_of_Servo2_grados 0CEA                      ??_main 0047  
                    ?_mapeo 0038                      _ADRESH 001E                      _CCPR1L 0015  
                    _CCPR2L 001B                      _ESTADO 0030                      i1l1541 0AE4  
                    i1l1543 0AEA                      _SSPADD 0093                      _TRISC3 043B  
                    _TRISC4 043C                      _SSPCON 0014                      _SSPBUF 0013  
            __CFG_PWRTE$OFF 0000                      ___wmul 0BC8                      _decena 0032  
      __end_of_config_PORTS 0C13         __size_of_OSC_config 00AC                      _unidad 0031  
                    saved_w 007E                   LCD_CHAR@a 0073                  _Stepper_CW 04E9  
                 ?_LCD_CHAR 0070                   ?_LCD_DATO 0072     __end_of__initialization 001B  
      __size_of_LCD_iniciar 0077                ??_LCD_CURSOR 0079                ??_LCD_STRING 0074  
            __pcstackCOMMON 0070     __size_of_I2C_Slave_Init 001A               __end_of_mapeo 0E21  
             ??_Stepper_CCW 0074          __end_of_LCD_CURSOR 0C40                     ??_mapeo 003A  
        __end_of_LCD_STRING 0BC8       I2C_Slave_Init@address 0072                  __pbssBANK0 0020  
                ??_LCD_CHAR 0072                  ??_LCD_DATO 0074                  __pmaintext 001F  
                   ?___wmul 0072                  __pintentry 0004        OSC_config@frecuencia 0072  
                   _ESTADO2 002F                     _ESTADO3 002E                  _config_ADC 0B82  
                   _SSPCON2 0091         __end_of_Stepper_CCW 1000                     _SSPSTAT 0094  
                __stringtab 0800                ??_OSC_config 0076                 ?_Stepper_CW 0072  
     __size_of_config_PORTS 0026                  _init_PWM_1 0B25                  _init_PWM_2 0B42  
           __size_of___wmul 0025                   _ANSELbits 0188                     _centena 0033  
                   __ptext1 0CEA                     __ptext2 0D7D                     __ptext3 0BC8  
                   __ptext4 0B42                     __ptext5 0B25                     __ptext6 0BED  
                   __ptext7 06C8                     __ptext8 0B82                     __ptext9 04E9  
        __end_of_OSC_config 0774                __size_of_ISR 000E                   _T2CONbits 0012  
                 _LCD_CLEAR 0AF2                     clrloop0 0ADD        end_of_initialization 001B  
              _config_PORTS 0BED              _I2C_Slave_Init 0B0B         __size_of_Stepper_CW 01DF  
                 _PORTEbits 0009                 _Stepper_CCW 0E21                  ?_LCD_CLEAR 0070  
               ?_config_ADC 0070                   _TRISAbits 0085                   _TRISCbits 0087  
    __size_of_Servo1_grados 0055                 _CCP1CONbits 0017      __size_of_Servo2_grados 0055  
               _CCP2CONbits 001D           __size_of_LCD_CHAR 000F           __size_of_LCD_DATO 0021  
    __end_of_I2C_Slave_Init 0B25                 ?_init_PWM_1 0070                 ?_init_PWM_2 0070  
                mapeo@F1417 0020              __end_of___wmul 0BED    Stepper_CW@Step_grados_cw 0072  
             ?_uint_to_char 0070         start_initialization 000F                  mapeo@valor 003E  
               __end_of_ISR 0AF2                   _Humedad_H 002C                   _Humedad_L 002A  
             ??_LCD_iniciar 0075             ?_I2C_Slave_Init 0070         __size_of_config_ADC 0021  
                  ??___wmul 0076               _Servo1_grados 0C40               _Servo2_grados 0C95  
            ??_uint_to_char 0072                 ??_LCD_CLEAR 0075                 __pbssCOMMON 0079  
                 ___latbits 0002               __pcstackBANK0 0038         __size_of_init_PWM_1 001D  
       __size_of_init_PWM_2 001F      __CFG_FOSC$INTRC_CLKOUT 0000                ??_Stepper_CW 0074  
       __end_of_LCD_iniciar 07EB              ?_Servo1_grados 0070              ?_Servo2_grados 0070  
                 __pstrings 0800          __end_of_Stepper_CW 06C8              __size_of_mapeo 00A4  
                  _LCD_CHAR 07EB                    _LCD_DATO 0B61           interrupt_function 0004  
            ___wmul@product 0076                   clear_ram0 0ADC                    _PIE1bits 008C  
                  _PIR1bits 000C                 _LCD_Humedad 0026                  _ADCON0bits 001F  
               __stringbase 0805                  _ADCON1bits 009F           ___wmul@multiplier 0072  
              ?_Stepper_CCW 0072                ??_config_ADC 0072                _Sens_Humedad 0028  
               _LCD_iniciar 0774        __end_of_uint_to_char 0D7D                ??_init_PWM_1 0072  
              ??_init_PWM_2 0072          __end_of_config_ADC 0BA3             ??_Servo1_grados 0072  
           ??_Servo2_grados 0072  Servo2_grados@Servo2_grados 0074          __end_of__stringtab 0806  
                  __ptext10 0E21                    __ptext11 0C95                    __ptext20 0AE4  
                  __ptext12 0C40                    __ptext13 0774                    __ptext14 0BA3  
                  __ptext15 07EB                    __ptext16 0C13                    __ptext17 0AF2  
                  __ptext18 0B61                    __ptext19 0B0B           __CFG_BOR4V$BOR40V 0000  
        __end_of_init_PWM_1 0B42          __end_of_init_PWM_2 0B61            ??_I2C_Slave_Init 0072  
             __size_of_main 04CA                  _LCD_CURSOR 0C13                  _LCD_STRING 0BA3  
                _INTCONbits 000B                    intlevel1 0000                   stringcode 0800  
                _OSCCONbits 008F              mapeo@dividendo 0045                    stringdir 0800  
                  stringtab 0800        __size_of_Stepper_CCW 01DF              mapeo@limFisico 0039  
               _SSPCON2bits 0091       __size_of_uint_to_char 0093                  _OSC_config 06C8  
             ?_config_PORTS 0070                 LCD_DATO@var 0072                 ?_LCD_CURSOR 0075  
               ?_LCD_STRING 0070  

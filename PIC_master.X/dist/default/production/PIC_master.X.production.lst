

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat May 02 00:15:08 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.05
    50                           ; Generated 20/12/2018 GMT
    51                           ; 
    52                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F887 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  0081                     	;# 
   119  0085                     	;# 
   120  0086                     	;# 
   121  0087                     	;# 
   122  0088                     	;# 
   123  0089                     	;# 
   124  008C                     	;# 
   125  008D                     	;# 
   126  008E                     	;# 
   127  008F                     	;# 
   128  0090                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0093                     	;# 
   133  0093                     	;# 
   134  0094                     	;# 
   135  0095                     	;# 
   136  0096                     	;# 
   137  0097                     	;# 
   138  0098                     	;# 
   139  0099                     	;# 
   140  009A                     	;# 
   141  009B                     	;# 
   142  009C                     	;# 
   143  009D                     	;# 
   144  009E                     	;# 
   145  009F                     	;# 
   146  0105                     	;# 
   147  0107                     	;# 
   148  0108                     	;# 
   149  0109                     	;# 
   150  010C                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  010F                     	;# 
   155  0185                     	;# 
   156  0187                     	;# 
   157  0188                     	;# 
   158  0189                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  0000                     	;# 
   162  0001                     	;# 
   163  0002                     	;# 
   164  0003                     	;# 
   165  0004                     	;# 
   166  0005                     	;# 
   167  0006                     	;# 
   168  0007                     	;# 
   169  0008                     	;# 
   170  0009                     	;# 
   171  000A                     	;# 
   172  000B                     	;# 
   173  000C                     	;# 
   174  000D                     	;# 
   175  000E                     	;# 
   176  000E                     	;# 
   177  000F                     	;# 
   178  0010                     	;# 
   179  0011                     	;# 
   180  0012                     	;# 
   181  0013                     	;# 
   182  0014                     	;# 
   183  0015                     	;# 
   184  0015                     	;# 
   185  0016                     	;# 
   186  0017                     	;# 
   187  0018                     	;# 
   188  0019                     	;# 
   189  001A                     	;# 
   190  001B                     	;# 
   191  001B                     	;# 
   192  001C                     	;# 
   193  001D                     	;# 
   194  001E                     	;# 
   195  001F                     	;# 
   196  0081                     	;# 
   197  0085                     	;# 
   198  0086                     	;# 
   199  0087                     	;# 
   200  0088                     	;# 
   201  0089                     	;# 
   202  008C                     	;# 
   203  008D                     	;# 
   204  008E                     	;# 
   205  008F                     	;# 
   206  0090                     	;# 
   207  0091                     	;# 
   208  0092                     	;# 
   209  0093                     	;# 
   210  0093                     	;# 
   211  0093                     	;# 
   212  0094                     	;# 
   213  0095                     	;# 
   214  0096                     	;# 
   215  0097                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009A                     	;# 
   219  009B                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  009F                     	;# 
   224  0105                     	;# 
   225  0107                     	;# 
   226  0108                     	;# 
   227  0109                     	;# 
   228  010C                     	;# 
   229  010C                     	;# 
   230  010D                     	;# 
   231  010E                     	;# 
   232  010F                     	;# 
   233  0185                     	;# 
   234  0187                     	;# 
   235  0188                     	;# 
   236  0189                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000E                     	;# 
   255  000F                     	;# 
   256  0010                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001D                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  0087                     	;# 
   278  0088                     	;# 
   279  0089                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  008F                     	;# 
   284  0090                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0093                     	;# 
   289  0093                     	;# 
   290  0094                     	;# 
   291  0095                     	;# 
   292  0096                     	;# 
   293  0097                     	;# 
   294  0098                     	;# 
   295  0099                     	;# 
   296  009A                     	;# 
   297  009B                     	;# 
   298  009C                     	;# 
   299  009D                     	;# 
   300  009E                     	;# 
   301  009F                     	;# 
   302  0105                     	;# 
   303  0107                     	;# 
   304  0108                     	;# 
   305  0109                     	;# 
   306  010C                     	;# 
   307  010C                     	;# 
   308  010D                     	;# 
   309  010E                     	;# 
   310  010F                     	;# 
   311  0185                     	;# 
   312  0187                     	;# 
   313  0188                     	;# 
   314  0189                     	;# 
   315  018C                     	;# 
   316  018D                     	;# 
   317  0000                     	;# 
   318  0001                     	;# 
   319  0002                     	;# 
   320  0003                     	;# 
   321  0004                     	;# 
   322  0005                     	;# 
   323  0006                     	;# 
   324  0007                     	;# 
   325  0008                     	;# 
   326  0009                     	;# 
   327  000A                     	;# 
   328  000B                     	;# 
   329  000C                     	;# 
   330  000D                     	;# 
   331  000E                     	;# 
   332  000E                     	;# 
   333  000F                     	;# 
   334  0010                     	;# 
   335  0011                     	;# 
   336  0012                     	;# 
   337  0013                     	;# 
   338  0014                     	;# 
   339  0015                     	;# 
   340  0015                     	;# 
   341  0016                     	;# 
   342  0017                     	;# 
   343  0018                     	;# 
   344  0019                     	;# 
   345  001A                     	;# 
   346  001B                     	;# 
   347  001B                     	;# 
   348  001C                     	;# 
   349  001D                     	;# 
   350  001E                     	;# 
   351  001F                     	;# 
   352  0081                     	;# 
   353  0085                     	;# 
   354  0086                     	;# 
   355  0087                     	;# 
   356  0088                     	;# 
   357  0089                     	;# 
   358  008C                     	;# 
   359  008D                     	;# 
   360  008E                     	;# 
   361  008F                     	;# 
   362  0090                     	;# 
   363  0091                     	;# 
   364  0092                     	;# 
   365  0093                     	;# 
   366  0093                     	;# 
   367  0093                     	;# 
   368  0094                     	;# 
   369  0095                     	;# 
   370  0096                     	;# 
   371  0097                     	;# 
   372  0098                     	;# 
   373  0099                     	;# 
   374  009A                     	;# 
   375  009B                     	;# 
   376  009C                     	;# 
   377  009D                     	;# 
   378  009E                     	;# 
   379  009F                     	;# 
   380  0105                     	;# 
   381  0107                     	;# 
   382  0108                     	;# 
   383  0109                     	;# 
   384  010C                     	;# 
   385  010C                     	;# 
   386  010D                     	;# 
   387  010E                     	;# 
   388  010F                     	;# 
   389  0185                     	;# 
   390  0187                     	;# 
   391  0188                     	;# 
   392  0189                     	;# 
   393  018C                     	;# 
   394  018D                     	;# 
   395  0000                     	;# 
   396  0001                     	;# 
   397  0002                     	;# 
   398  0003                     	;# 
   399  0004                     	;# 
   400  0005                     	;# 
   401  0006                     	;# 
   402  0007                     	;# 
   403  0008                     	;# 
   404  0009                     	;# 
   405  000A                     	;# 
   406  000B                     	;# 
   407  000C                     	;# 
   408  000D                     	;# 
   409  000E                     	;# 
   410  000E                     	;# 
   411  000F                     	;# 
   412  0010                     	;# 
   413  0011                     	;# 
   414  0012                     	;# 
   415  0013                     	;# 
   416  0014                     	;# 
   417  0015                     	;# 
   418  0015                     	;# 
   419  0016                     	;# 
   420  0017                     	;# 
   421  0018                     	;# 
   422  0019                     	;# 
   423  001A                     	;# 
   424  001B                     	;# 
   425  001B                     	;# 
   426  001C                     	;# 
   427  001D                     	;# 
   428  001E                     	;# 
   429  001F                     	;# 
   430  0081                     	;# 
   431  0085                     	;# 
   432  0086                     	;# 
   433  0087                     	;# 
   434  0088                     	;# 
   435  0089                     	;# 
   436  008C                     	;# 
   437  008D                     	;# 
   438  008E                     	;# 
   439  008F                     	;# 
   440  0090                     	;# 
   441  0091                     	;# 
   442  0092                     	;# 
   443  0093                     	;# 
   444  0093                     	;# 
   445  0093                     	;# 
   446  0094                     	;# 
   447  0095                     	;# 
   448  0096                     	;# 
   449  0097                     	;# 
   450  0098                     	;# 
   451  0099                     	;# 
   452  009A                     	;# 
   453  009B                     	;# 
   454  009C                     	;# 
   455  009D                     	;# 
   456  009E                     	;# 
   457  009F                     	;# 
   458  0105                     	;# 
   459  0107                     	;# 
   460  0108                     	;# 
   461  0109                     	;# 
   462  010C                     	;# 
   463  010C                     	;# 
   464  010D                     	;# 
   465  010E                     	;# 
   466  010F                     	;# 
   467  0185                     	;# 
   468  0187                     	;# 
   469  0188                     	;# 
   470  0189                     	;# 
   471  018C                     	;# 
   472  018D                     	;# 
   473  0000                     	;# 
   474  0001                     	;# 
   475  0002                     	;# 
   476  0003                     	;# 
   477  0004                     	;# 
   478  0005                     	;# 
   479  0006                     	;# 
   480  0007                     	;# 
   481  0008                     	;# 
   482  0009                     	;# 
   483  000A                     	;# 
   484  000B                     	;# 
   485  000C                     	;# 
   486  000D                     	;# 
   487  000E                     	;# 
   488  000E                     	;# 
   489  000F                     	;# 
   490  0010                     	;# 
   491  0011                     	;# 
   492  0012                     	;# 
   493  0013                     	;# 
   494  0014                     	;# 
   495  0015                     	;# 
   496  0015                     	;# 
   497  0016                     	;# 
   498  0017                     	;# 
   499  0018                     	;# 
   500  0019                     	;# 
   501  001A                     	;# 
   502  001B                     	;# 
   503  001B                     	;# 
   504  001C                     	;# 
   505  001D                     	;# 
   506  001E                     	;# 
   507  001F                     	;# 
   508  0081                     	;# 
   509  0085                     	;# 
   510  0086                     	;# 
   511  0087                     	;# 
   512  0088                     	;# 
   513  0089                     	;# 
   514  008C                     	;# 
   515  008D                     	;# 
   516  008E                     	;# 
   517  008F                     	;# 
   518  0090                     	;# 
   519  0091                     	;# 
   520  0092                     	;# 
   521  0093                     	;# 
   522  0093                     	;# 
   523  0093                     	;# 
   524  0094                     	;# 
   525  0095                     	;# 
   526  0096                     	;# 
   527  0097                     	;# 
   528  0098                     	;# 
   529  0099                     	;# 
   530  009A                     	;# 
   531  009B                     	;# 
   532  009C                     	;# 
   533  009D                     	;# 
   534  009E                     	;# 
   535  009F                     	;# 
   536  0105                     	;# 
   537  0107                     	;# 
   538  0108                     	;# 
   539  0109                     	;# 
   540  010C                     	;# 
   541  010C                     	;# 
   542  010D                     	;# 
   543  010E                     	;# 
   544  010F                     	;# 
   545  0185                     	;# 
   546  0187                     	;# 
   547  0188                     	;# 
   548  0189                     	;# 
   549  018C                     	;# 
   550  018D                     	;# 
   551  0000                     	;# 
   552  0001                     	;# 
   553  0002                     	;# 
   554  0003                     	;# 
   555  0004                     	;# 
   556  0005                     	;# 
   557  0006                     	;# 
   558  0007                     	;# 
   559  0008                     	;# 
   560  0009                     	;# 
   561  000A                     	;# 
   562  000B                     	;# 
   563  000C                     	;# 
   564  000D                     	;# 
   565  000E                     	;# 
   566  000E                     	;# 
   567  000F                     	;# 
   568  0010                     	;# 
   569  0011                     	;# 
   570  0012                     	;# 
   571  0013                     	;# 
   572  0014                     	;# 
   573  0015                     	;# 
   574  0015                     	;# 
   575  0016                     	;# 
   576  0017                     	;# 
   577  0018                     	;# 
   578  0019                     	;# 
   579  001A                     	;# 
   580  001B                     	;# 
   581  001B                     	;# 
   582  001C                     	;# 
   583  001D                     	;# 
   584  001E                     	;# 
   585  001F                     	;# 
   586  0081                     	;# 
   587  0085                     	;# 
   588  0086                     	;# 
   589  0087                     	;# 
   590  0088                     	;# 
   591  0089                     	;# 
   592  008C                     	;# 
   593  008D                     	;# 
   594  008E                     	;# 
   595  008F                     	;# 
   596  0090                     	;# 
   597  0091                     	;# 
   598  0092                     	;# 
   599  0093                     	;# 
   600  0093                     	;# 
   601  0093                     	;# 
   602  0094                     	;# 
   603  0095                     	;# 
   604  0096                     	;# 
   605  0097                     	;# 
   606  0098                     	;# 
   607  0099                     	;# 
   608  009A                     	;# 
   609  009B                     	;# 
   610  009C                     	;# 
   611  009D                     	;# 
   612  009E                     	;# 
   613  009F                     	;# 
   614  0105                     	;# 
   615  0107                     	;# 
   616  0108                     	;# 
   617  0109                     	;# 
   618  010C                     	;# 
   619  010C                     	;# 
   620  010D                     	;# 
   621  010E                     	;# 
   622  010F                     	;# 
   623  0185                     	;# 
   624  0187                     	;# 
   625  0188                     	;# 
   626  0189                     	;# 
   627  018C                     	;# 
   628  018D                     	;# 
   629  0000                     	;# 
   630  0001                     	;# 
   631  0002                     	;# 
   632  0003                     	;# 
   633  0004                     	;# 
   634  0005                     	;# 
   635  0006                     	;# 
   636  0007                     	;# 
   637  0008                     	;# 
   638  0009                     	;# 
   639  000A                     	;# 
   640  000B                     	;# 
   641  000C                     	;# 
   642  000D                     	;# 
   643  000E                     	;# 
   644  000E                     	;# 
   645  000F                     	;# 
   646  0010                     	;# 
   647  0011                     	;# 
   648  0012                     	;# 
   649  0013                     	;# 
   650  0014                     	;# 
   651  0015                     	;# 
   652  0015                     	;# 
   653  0016                     	;# 
   654  0017                     	;# 
   655  0018                     	;# 
   656  0019                     	;# 
   657  001A                     	;# 
   658  001B                     	;# 
   659  001B                     	;# 
   660  001C                     	;# 
   661  001D                     	;# 
   662  001E                     	;# 
   663  001F                     	;# 
   664  0081                     	;# 
   665  0085                     	;# 
   666  0086                     	;# 
   667  0087                     	;# 
   668  0088                     	;# 
   669  0089                     	;# 
   670  008C                     	;# 
   671  008D                     	;# 
   672  008E                     	;# 
   673  008F                     	;# 
   674  0090                     	;# 
   675  0091                     	;# 
   676  0092                     	;# 
   677  0093                     	;# 
   678  0093                     	;# 
   679  0093                     	;# 
   680  0094                     	;# 
   681  0095                     	;# 
   682  0096                     	;# 
   683  0097                     	;# 
   684  0098                     	;# 
   685  0099                     	;# 
   686  009A                     	;# 
   687  009B                     	;# 
   688  009C                     	;# 
   689  009D                     	;# 
   690  009E                     	;# 
   691  009F                     	;# 
   692  0105                     	;# 
   693  0107                     	;# 
   694  0108                     	;# 
   695  0109                     	;# 
   696  010C                     	;# 
   697  010C                     	;# 
   698  010D                     	;# 
   699  010E                     	;# 
   700  010F                     	;# 
   701  0185                     	;# 
   702  0187                     	;# 
   703  0188                     	;# 
   704  0189                     	;# 
   705  018C                     	;# 
   706  018D                     	;# 
   707                           
   708                           	psect	idataBANK0
   709  07F2                     __pidataBANK0:	
   710                           
   711                           ;initializer for _d_atras
   712  07F2  3466               	retlw	102
   713                           
   714                           ;initializer for _d_frente
   715  07F3  3466               	retlw	102
   716                           
   717                           ;initializer for _inclinacion
   718  07F4  3404               	retlw	4
   719                           
   720                           ;initializer for _humedad
   721  07F5  3405               	retlw	5
   722                           
   723                           ;initializer for _jahr
   724  07F6  3414               	retlw	20
   725                           
   726                           ;initializer for _mes
   727  07F7  3403               	retlw	3
   728                           
   729                           ;initializer for _datum
   730  07F8  3406               	retlw	6
   731                           
   732                           ;initializer for _dia
   733  07F9  3405               	retlw	5
   734                           
   735                           ;initializer for _hora
   736  07FA  3410               	retlw	16
   737                           
   738                           ;initializer for _min
   739  07FB  3415               	retlw	21
   740                           
   741                           	psect	strings
   742  0700                     __pstrings:	
   743  0700                     stringtab:	
   744  0700                     __stringtab:	
   745  0700                     stringcode:	
   746                           ;	String table - string pointers are 1 byte each
   747                           
   748  0700                     stringdir:	
   749  0700  3007               	movlw	high stringdir
   750  0701  008A               	movwf	10
   751  0702  0804               	movf	4,w
   752  0703  0A84               	incf	4,f
   753  0704  0782               	addwf	2,f
   754  0705                     __stringbase:	
   755  0705  3400               	retlw	0
   756  0706                     __end_of__stringtab:	
   757  0706                     _gota:	
   758  0706  3404               	retlw	4
   759  0707  340A               	retlw	10
   760  0708  340A               	retlw	10
   761  0709  3411               	retlw	17
   762  070A  3411               	retlw	17
   763  070B  3411               	retlw	17
   764  070C  340E               	retlw	14
   765  070D  3400               	retlw	0
   766  070E                     __end_of_gota:	
   767  070E                     _termometro:	
   768  070E  3404               	retlw	4
   769  070F  340A               	retlw	10
   770  0710  340A               	retlw	10
   771  0711  340E               	retlw	14
   772  0712  340E               	retlw	14
   773  0713  341F               	retlw	31
   774  0714  341F               	retlw	31
   775  0715  340E               	retlw	14
   776  0716                     __end_of_termometro:	
   777  0716                     _atilde:	
   778  0716  3402               	retlw	2
   779  0717  3404               	retlw	4
   780  0718  3400               	retlw	0
   781  0719  340E               	retlw	14
   782  071A  3401               	retlw	1
   783  071B  340F               	retlw	15
   784  071C  3411               	retlw	17
   785  071D  340F               	retlw	15
   786  071E                     __end_of_atilde:	
   787  071E                     _arrowr_vacio:	
   788  071E  3400               	retlw	0
   789  071F  3408               	retlw	8
   790  0720  340C               	retlw	12
   791  0721  340A               	retlw	10
   792  0722  3409               	retlw	9
   793  0723  340A               	retlw	10
   794  0724  340C               	retlw	12
   795  0725  3408               	retlw	8
   796  0726                     __end_of_arrowr_vacio:	
   797  0726                     _arrowr:	
   798  0726  3400               	retlw	0
   799  0727  3408               	retlw	8
   800  0728  340C               	retlw	12
   801  0729  340E               	retlw	14
   802  072A  340F               	retlw	15
   803  072B  340E               	retlw	14
   804  072C  340C               	retlw	12
   805  072D  3408               	retlw	8
   806  072E                     __end_of_arrowr:	
   807  0019                     _TXREG	set	25
   808  001A                     _RCREG	set	26
   809  0018                     _RCSTAbits	set	24
   810  0008                     _PORTD	set	8
   811  0007                     _PORTCbits	set	7
   812  0013                     _SSPBUF	set	19
   813  0014                     _SSPCON	set	20
   814  0006                     _PORTBbits	set	6
   815  0007                     _PORTC	set	7
   816  000B                     _INTCONbits	set	11
   817  0063                     _SSPIF	set	99
   818  005E                     _PEIE	set	94
   819  005F                     _GIE	set	95
   820  009A                     _SPBRGH	set	154
   821  0099                     _SPBRG	set	153
   822  0098                     _TXSTAbits	set	152
   823  0091                     _SSPCON2bits	set	145
   824  0087                     _TRISCbits	set	135
   825  0094                     _SSPSTAT	set	148
   826  0093                     _SSPADD	set	147
   827  0091                     _SSPCON2	set	145
   828  008F                     _OSCCONbits	set	143
   829  0088                     _TRISD	set	136
   830  0096                     _IOCB	set	150
   831  0081                     _OPTION_REGbits	set	129
   832  0095                     _WPUB	set	149
   833  0086                     _TRISB	set	134
   834  0087                     _TRISC	set	135
   835  04C1                     _TRMT	set	1217
   836  0463                     _SSPIE	set	1123
   837  043C                     _TRISC4	set	1084
   838  043B                     _TRISC3	set	1083
   839  0439                     _TRISC1	set	1081
   840  0438                     _TRISC0	set	1080
   841  0187                     _BAUDCTLbits	set	391
   842  0189                     _ANSELH	set	393
   843  072E                     STR_2:	
   844  072E  3441               	retlw	65	;'A'
   845  072F  346D               	retlw	109	;'m'
   846  0730  3462               	retlw	98	;'b'
   847  0731  3469               	retlw	105	;'i'
   848  0732  3465               	retlw	101	;'e'
   849  0733  346E               	retlw	110	;'n'
   850  0734  3474               	retlw	116	;'t'
   851  0735  3465               	retlw	101	;'e'
   852  0736  343A               	retlw	58	;':'
   853  0737  3420               	retlw	32	;' '
   854  0738  3453               	retlw	83	;'S'
   855  0739  3475               	retlw	117	;'u'
   856  073A  3465               	retlw	101	;'e'
   857  073B  346C               	retlw	108	;'l'
   858  073C  346F               	retlw	111	;'o'
   859  073D  343A               	retlw	58	;':'
   860  073E  3400               	retlw	0
   861  073F                     STR_16:	
   862  073F  3456               	retlw	86	;'V'
   863  0740  3461               	retlw	97	;'a'
   864  0741  346D               	retlw	109	;'m'
   865  0742  346F               	retlw	111	;'o'
   866  0743  346E               	retlw	110	;'n'
   867  0744  346F               	retlw	111	;'o'
   868  0745  3473               	retlw	115	;'s'
   869  0746  3420               	retlw	32	;' '
   870  0747  3450               	retlw	80	;'P'
   871  0748  3465               	retlw	101	;'e'
   872  0749  3472               	retlw	114	;'r'
   873  074A  3472               	retlw	114	;'r'
   874  074B  346F               	retlw	111	;'o'
   875  074C  3473               	retlw	115	;'s'
   876  074D  3421               	retlw	33	;'!'
   877  074E  3400               	retlw	0
   878  074F                     STR_6:	
   879  074F  3445               	retlw	69	;'E'
   880  0750  344D               	retlw	77	;'M'
   881  0751  3445               	retlw	69	;'E'
   882  0752  3452               	retlw	82	;'R'
   883  0753  3447               	retlw	71	;'G'
   884  0754  3445               	retlw	69	;'E'
   885  0755  344E               	retlw	78	;'N'
   886  0756  3443               	retlw	67	;'C'
   887  0757  3449               	retlw	73	;'I'
   888  0758  3441               	retlw	65	;'A'
   889  0759  3421               	retlw	33	;'!'
   890  075A  3420               	retlw	32	;' '
   891  075B  3420               	retlw	32	;' '
   892  075C  3400               	retlw	0
   893  075D                     STR_9:	
   894  075D  3473               	retlw	115	;'s'
   895  075E  343A               	retlw	58	;':'
   896  075F  3420               	retlw	32	;' '
   897  0760  347C               	retlw	124	;'|'
   898  0761  3420               	retlw	32	;' '
   899  0762  3446               	retlw	70	;'F'
   900  0763  3472               	retlw	114	;'r'
   901  0764  3465               	retlw	101	;'e'
   902  0765  346E               	retlw	110	;'n'
   903  0766  3474               	retlw	116	;'t'
   904  0767  3465               	retlw	101	;'e'
   905  0768  343A               	retlw	58	;':'
   906  0769  3400               	retlw	0
   907  076A                     STR_3:	
   908  076A  3449               	retlw	73	;'I'
   909  076B  346E               	retlw	110	;'n'
   910  076C  3463               	retlw	99	;'c'
   911  076D  346C               	retlw	108	;'l'
   912  076E  3469               	retlw	105	;'i'
   913  076F  346E               	retlw	110	;'n'
   914  0770  3461               	retlw	97	;'a'
   915  0771  3463               	retlw	99	;'c'
   916  0772  3469               	retlw	105	;'i'
   917  0773  346F               	retlw	111	;'o'
   918  0774  346E               	retlw	110	;'n'
   919  0775  343A               	retlw	58	;':'
   920  0776  3400               	retlw	0
   921  0777                     STR_14:	
   922  0777  3454               	retlw	84	;'T'
   923  0778  346F               	retlw	111	;'o'
   924  0779  346D               	retlw	109	;'m'
   925  077A  3461               	retlw	97	;'a'
   926  077B  3472               	retlw	114	;'r'
   927  077C  3420               	retlw	32	;' '
   928  077D  3464               	retlw	100	;'d'
   929  077E  3461               	retlw	97	;'a'
   930  077F  3474               	retlw	116	;'t'
   931  0780  346F               	retlw	111	;'o'
   932  0781  3473               	retlw	115	;'s'
   933  0782  343A               	retlw	58	;':'
   934  0783  3400               	retlw	0
   935  0784                     STR_5:	
   936  0784  3450               	retlw	80	;'P'
   937  0785  3465               	retlw	101	;'e'
   938  0786  346C               	retlw	108	;'l'
   939  0787  3469               	retlw	105	;'i'
   940  0788  3467               	retlw	103	;'g'
   941  0789  3472               	retlw	114	;'r'
   942  078A  346F               	retlw	111	;'o'
   943  078B  3421               	retlw	33	;'!'
   944  078C  3420               	retlw	32	;' '
   945  078D  3420               	retlw	32	;' '
   946  078E  3420               	retlw	32	;' '
   947  078F  3400               	retlw	0
   948  0790                     STR_4:	
   949  0790  3445               	retlw	69	;'E'
   950  0791  3473               	retlw	115	;'s'
   951  0792  3474               	retlw	116	;'t'
   952  0793  3461               	retlw	97	;'a'
   953  0794  3462               	retlw	98	;'b'
   954  0795  346C               	retlw	108	;'l'
   955  0796  3465               	retlw	101	;'e'
   956  0797  3420               	retlw	32	;' '
   957  0798  3420               	retlw	32	;' '
   958  0799  3420               	retlw	32	;' '
   959  079A  3400               	retlw	0
   960  079B                     STR_7:	
   961  079B  3448               	retlw	72	;'H'
   962  079C  3475               	retlw	117	;'u'
   963  079D  346D               	retlw	109	;'m'
   964  079E  3465               	retlw	101	;'e'
   965  079F  3464               	retlw	100	;'d'
   966  07A0  3461               	retlw	97	;'a'
   967  07A1  3464               	retlw	100	;'d'
   968  07A2  343A               	retlw	58	;':'
   969  07A3  3400               	retlw	0
   970  07A4                     STR_17:	
   971  07A4  3445               	retlw	69	;'E'
   972  07A5  3452               	retlw	82	;'R'
   973  07A6  3452               	retlw	82	;'R'
   974  07A7  344F               	retlw	79	;'O'
   975  07A8  3452               	retlw	82	;'R'
   976  07A9  3400               	retlw	0
   977  07AA                     STR_11:	
   978  07AA  342D               	retlw	45	;'-'
   979  07AB  342D               	retlw	45	;'-'
   980  07AC  342D               	retlw	45	;'-'
   981  07AD  342D               	retlw	45	;'-'
   982  07AE  3400               	retlw	0
   983  07AF                     STR_8:	
   984  07AF  3441               	retlw	65	;'A'
   985  07B0  3474               	retlw	116	;'t'
   986  07B1  3472               	retlw	114	;'r'
   987  07B2  3400               	retlw	0
   988  07B3                     STR_15:	
   989  07B3  3478               	retlw	120	;'x'
   990  07B4  3420               	retlw	32	;' '
   991  07B5  3400               	retlw	0
   992  07B6                     STR_1:	
   993  07B6  3432               	retlw	50	;'2'
   994  07B7  3430               	retlw	48	;'0'
   995  07B8  3400               	retlw	0
   996  07B9                     STR_10:	
   997  07B9  3463               	retlw	99	;'c'
   998  07BA  346D               	retlw	109	;'m'
   999  07BB  3400               	retlw	0
  1000  07AA                     
  1001                           ; #config settings
  1002  0000                     
  1003                           	psect	cinit
  1004  000F                     start_initialization:	
  1005  000F                     __initialization:	
  1006                           
  1007                           ; Initialize objects allocated to BANK0
  1008  000F  1383               	bcf	3,7	;select IRP bank0
  1009  0010  3057               	movlw	low (__pdataBANK0+10)
  1010  0011  00FD               	movwf	btemp+-1
  1011  0012  3007               	movlw	high __pidataBANK0
  1012  0013  00FE               	movwf	btemp
  1013  0014  30F2               	movlw	low __pidataBANK0
  1014  0015  00FF               	movwf	btemp+1
  1015  0016  304D               	movlw	low __pdataBANK0
  1016  0017  0084               	movwf	4
  1017  0018  120A  158A  227C  120A  118A  	fcall	init_ram0
  1018                           
  1019                           ; Clear objects allocated to BANK0
  1020  001D  303B               	movlw	low __pbssBANK0
  1021  001E  0084               	movwf	4
  1022  001F  304D               	movlw	low (__pbssBANK0+18)
  1023  0020  120A  158A  222C   	fcall	clear_ram0
  1024                           
  1025                           ; Clear objects allocated to COMMON
  1026  0023  01FA               	clrf	__pbssCOMMON& (0+127)
  1027  0024  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1028  0025                     end_of_initialization:	
  1029                           ;End of C runtime variable initialization code
  1030                           
  1031  0025                     __end_of__initialization:	
  1032  0025  0183               	clrf	3
  1033  0026  120A  158A  2C0B   	ljmp	_main	;jump to C main() function
  1034                           
  1035                           	psect	bssCOMMON
  1036  007A                     __pbssCOMMON:	
  1037  007A                     _banderaPUSH1:	
  1038  007A                     	ds	1
  1039  007B                     _banderaBoton:	
  1040  007B                     	ds	1
  1041                           
  1042                           	psect	bssBANK0
  1043  003B                     __pbssBANK0:	
  1044  003B                     uint_to_array@F1343:	
  1045  003B                     	ds	6
  1046  0041                     _accZ:	
  1047  0041                     	ds	2
  1048  0043                     _sprintbuffer:	
  1049  0043                     	ds	1
  1050  0044                     _ancho:	
  1051  0044                     	ds	1
  1052  0045                     _largo:	
  1053  0045                     	ds	1
  1054  0046                     _banderaPUSH2:	
  1055  0046                     	ds	1
  1056  0047                     _obj_array:	
  1057  0047                     	ds	1
  1058  0048                     _temperatura_obj:	
  1059  0048                     	ds	1
  1060  0049                     _temperatura:	
  1061  0049                     	ds	1
  1062  004A                     _velocidad:	
  1063  004A                     	ds	1
  1064  004B                     _seg:	
  1065  004B                     	ds	1
  1066  004C                     _estado:	
  1067  004C                     	ds	1
  1068                           
  1069                           	psect	dataBANK0
  1070  004D                     __pdataBANK0:	
  1071  004D                     _d_atras:	
  1072  004D                     	ds	1
  1073  004E                     _d_frente:	
  1074  004E                     	ds	1
  1075  004F                     _inclinacion:	
  1076  004F                     	ds	1
  1077  0050                     _humedad:	
  1078  0050                     	ds	1
  1079  0051                     _jahr:	
  1080  0051                     	ds	1
  1081  0052                     _mes:	
  1082  0052                     	ds	1
  1083  0053                     _datum:	
  1084  0053                     	ds	1
  1085  0054                     _dia:	
  1086  0054                     	ds	1
  1087  0055                     _hora:	
  1088  0055                     	ds	1
  1089  0056                     _min:	
  1090  0056                     	ds	1
  1091                           
  1092                           	psect	inittext
  1093  0A78                     init_fetch0:	
  1094                           ;	Called with low address in FSR and high address in W
  1095                           
  1096  0A78  087E               	movf	126,w
  1097  0A79  008A               	movwf	10
  1098  0A7A  087F               	movf	127,w
  1099  0A7B  0082               	movwf	2
  1100  0A7C                     init_ram0:	
  1101                           ;Called with:
  1102                           ;	high address of idata address in btemp 
  1103                           ;	low address of idata address in btemp+1 
  1104                           ;	low address of data in FSR
  1105                           ;	high address + 1 of data in btemp-1
  1106                           
  1107  0A7C  2278  120A  158A   	fcall	init_fetch0
  1108  0A7F  0080               	movwf	0
  1109  0A80  0A84               	incf	4,f
  1110  0A81  0804               	movf	4,w
  1111  0A82  067D               	xorwf	125,w
  1112  0A83  1903               	btfsc	3,2
  1113  0A84  3400               	retlw	0
  1114  0A85  0AFF               	incf	127,f
  1115  0A86  1903               	btfsc	3,2
  1116  0A87  0AFE               	incf	126,f
  1117  0A88  2A7C               	goto	init_ram0
  1118                           
  1119                           	psect	clrtext
  1120  0A2C                     clear_ram0:	
  1121                           ;	Called with FSR containing the base address, and
  1122                           ;	W with the last address+1
  1123                           
  1124  0A2C  0064               	clrwdt	;clear the watchdog before getting into this loop
  1125  0A2D                     clrloop0:	
  1126  0A2D  0180               	clrf	0	;clear RAM location pointed to by FSR
  1127  0A2E  0A84               	incf	4,f	;increment pointer
  1128  0A2F  0604               	xorwf	4,w	;XOR with final address
  1129  0A30  1903               	btfsc	3,2	;have we reached the end yet?
  1130  0A31  3400               	retlw	0	;all done for this memory range, return
  1131  0A32  0604               	xorwf	4,w	;XOR again to restore value
  1132  0A33  2A2D               	goto	clrloop0	;do the next byte
  1133                           
  1134                           	psect	cstackCOMMON
  1135  0070                     __pcstackCOMMON:	
  1136  0070                     ?_SetUp:	
  1137  0070                     ?_get_Time:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0070                     ?_mostrarLCD:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0070                     ?_pressBoton1:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ?_pressBoton2:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ?_uartTX_Write:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ?_LCD_init:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ?_LCD_clear:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ?_LCD_Write_Character:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_LCD_Write_String:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ?_uint_to_array:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_I2C_Master_Start:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ?_I2C_Master_Stop:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_ISR:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ??_ISR:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_main:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ?_BCD_a_DEC:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_I2C_Master_Wait:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ?_LCD_Cmd:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191                           
  1192                           ; 1 bytes @ 0x0
  1193  0070                     	ds	2
  1194  0072                     ??_uartTX_Write:	
  1195  0072                     ?_OSC_config:	
  1196                           ; 1 bytes @ 0x2
  1197                           
  1198  0072                     ?_uart_init:	
  1199                           ; 1 bytes @ 0x2
  1200                           
  1201  0072                     ??_LCD_Write_Character:	
  1202                           ; 1 bytes @ 0x2
  1203                           
  1204  0072                     ??_I2C_Master_Start:	
  1205                           ; 1 bytes @ 0x2
  1206                           
  1207  0072                     ?_I2C_Master_Write:	
  1208                           ; 1 bytes @ 0x2
  1209                           
  1210  0072                     ??_I2C_Master_Stop:	
  1211                           ; 1 bytes @ 0x2
  1212                           
  1213  0072                     ??_I2C_Master_Wait:	
  1214                           ; 1 bytes @ 0x2
  1215                           
  1216  0072                     ??_LCD_Cmd:	
  1217                           ; 1 bytes @ 0x2
  1218                           
  1219  0072                     ?___bmul:	
  1220                           ; 1 bytes @ 0x2
  1221                           
  1222  0072                     ?_I2C_Master_Read:	
  1223                           ; 1 bytes @ 0x2
  1224                           
  1225  0072                     ?___wmul:	
  1226                           ; 2 bytes @ 0x2
  1227                           
  1228  0072                     ?___awmod:	
  1229                           ; 2 bytes @ 0x2
  1230                           
  1231  0072                     ?___lldiv:	
  1232                           ; 2 bytes @ 0x2
  1233                           
  1234  0072                     uartTX_Write@dato:	
  1235                           ; 4 bytes @ 0x2
  1236                           
  1237  0072                     ___bmul@multiplicand:	
  1238                           ; 1 bytes @ 0x2
  1239                           
  1240  0072                     I2C_Master_Write@d:	
  1241                           ; 1 bytes @ 0x2
  1242                           
  1243  0072                     I2C_Master_Read@a:	
  1244                           ; 2 bytes @ 0x2
  1245                           
  1246  0072                     ___wmul@multiplier:	
  1247                           ; 2 bytes @ 0x2
  1248                           
  1249  0072                     ___awmod@divisor:	
  1250                           ; 2 bytes @ 0x2
  1251                           
  1252  0072                     OSC_config@frecuencia:	
  1253                           ; 2 bytes @ 0x2
  1254                           
  1255  0072                     ___lldiv@divisor:	
  1256                           ; 4 bytes @ 0x2
  1257                           
  1258                           
  1259                           ; 4 bytes @ 0x2
  1260  0072                     	ds	1
  1261  0073                     ??___bmul:	
  1262  0073                     LCD_Write_Character@caracter:	
  1263                           ; 1 bytes @ 0x3
  1264                           
  1265                           
  1266                           ; 1 bytes @ 0x3
  1267  0073                     	ds	1
  1268  0074                     ??_uart_init:	
  1269  0074                     ??_LCD_Write_String:	
  1270                           ; 1 bytes @ 0x4
  1271                           
  1272  0074                     ??_I2C_Master_Write:	
  1273                           ; 1 bytes @ 0x4
  1274                           
  1275  0074                     ??_I2C_Master_Read:	
  1276                           ; 1 bytes @ 0x4
  1277                           
  1278  0074                     LCD_Cmd@comando:	
  1279                           ; 1 bytes @ 0x4
  1280                           
  1281  0074                     ___bmul@product:	
  1282                           ; 1 bytes @ 0x4
  1283                           
  1284  0074                     LCD_Write_String@n:	
  1285                           ; 1 bytes @ 0x4
  1286                           
  1287  0074                     ___wmul@multiplicand:	
  1288                           ; 2 bytes @ 0x4
  1289                           
  1290  0074                     ___awmod@dividend:	
  1291                           ; 2 bytes @ 0x4
  1292                           
  1293                           
  1294                           ; 2 bytes @ 0x4
  1295  0074                     	ds	1
  1296  0075                     ??_LCD_init:	
  1297  0075                     ?_LCD_Create_Char:	
  1298                           ; 1 bytes @ 0x5
  1299                           
  1300  0075                     ??_LCD_clear:	
  1301                           ; 1 bytes @ 0x5
  1302                           
  1303  0075                     ?_LCD_Set_Cursor:	
  1304                           ; 1 bytes @ 0x5
  1305                           
  1306  0075                     LCD_Set_Cursor@columna:	
  1307                           ; 1 bytes @ 0x5
  1308                           
  1309  0075                     LCD_Create_Char@chardata:	
  1310                           ; 1 bytes @ 0x5
  1311                           
  1312  0075                     ___bmul@multiplier:	
  1313                           ; 1 bytes @ 0x5
  1314                           
  1315                           
  1316                           ; 1 bytes @ 0x5
  1317  0075                     	ds	1
  1318  0076                     ??_OSC_config:	
  1319  0076                     ??_LCD_Create_Char:	
  1320                           ; 1 bytes @ 0x6
  1321                           
  1322  0076                     ??_LCD_Set_Cursor:	
  1323                           ; 1 bytes @ 0x6
  1324                           
  1325  0076                     ??_BCD_a_DEC:	
  1326                           ; 1 bytes @ 0x6
  1327                           
  1328  0076                     ??___wmul:	
  1329                           ; 1 bytes @ 0x6
  1330                           
  1331  0076                     ??___awmod:	
  1332                           ; 1 bytes @ 0x6
  1333                           
  1334  0076                     LCD_Write_String@a:	
  1335                           ; 1 bytes @ 0x6
  1336                           
  1337  0076                     I2C_Master_Read@temp:	
  1338                           ; 1 bytes @ 0x6
  1339                           
  1340  0076                     ___wmul@product:	
  1341                           ; 2 bytes @ 0x6
  1342                           
  1343  0076                     ___lldiv@dividend:	
  1344                           ; 2 bytes @ 0x6
  1345                           
  1346                           
  1347                           ; 4 bytes @ 0x6
  1348  0076                     	ds	1
  1349  0077                     ??_pressBoton1:	
  1350  0077                     LCD_Create_Char@charnum:	
  1351                           ; 1 bytes @ 0x7
  1352                           
  1353  0077                     ___awmod@counter:	
  1354                           ; 1 bytes @ 0x7
  1355                           
  1356                           
  1357                           ; 1 bytes @ 0x7
  1358  0077                     	ds	1
  1359  0078                     ??___awdiv:	
  1360  0078                     LCD_Set_Cursor@linea:	
  1361                           ; 1 bytes @ 0x8
  1362                           
  1363  0078                     LCD_Create_Char@n:	
  1364                           ; 1 bytes @ 0x8
  1365                           
  1366  0078                     ___awmod@sign:	
  1367                           ; 1 bytes @ 0x8
  1368                           
  1369                           
  1370                           ; 1 bytes @ 0x8
  1371  0078                     	ds	1
  1372  0079                     BCD_a_DEC@numBCD:	
  1373  0079                     LCD_Set_Cursor@corrimiento:	
  1374                           ; 1 bytes @ 0x9
  1375                           
  1376                           
  1377                           ; 1 bytes @ 0x9
  1378  0079                     	ds	1
  1379  007A                     ??_main:	
  1380                           
  1381                           	psect	cstackBANK0
  1382  0020                     __pcstackBANK0:	
  1383                           ; 1 bytes @ 0xA
  1384                           
  1385  0020                     ??_get_Time:	
  1386  0020                     ??_pressBoton2:	
  1387                           ; 1 bytes @ 0x0
  1388                           
  1389  0020                     ??___lldiv:	
  1390                           ; 1 bytes @ 0x0
  1391                           
  1392  0020                     ?___awdiv:	
  1393                           ; 1 bytes @ 0x0
  1394                           
  1395  0020                     ___awdiv@divisor:	
  1396                           ; 2 bytes @ 0x0
  1397                           
  1398                           
  1399                           ; 2 bytes @ 0x0
  1400  0020                     	ds	1
  1401  0021                     ___lldiv@quotient:	
  1402                           
  1403                           ; 4 bytes @ 0x1
  1404  0021                     	ds	1
  1405  0022                     ___awdiv@dividend:	
  1406                           
  1407                           ; 2 bytes @ 0x2
  1408  0022                     	ds	2
  1409  0024                     ___awdiv@counter:	
  1410                           
  1411                           ; 1 bytes @ 0x4
  1412  0024                     	ds	1
  1413  0025                     ___lldiv@counter:	
  1414  0025                     ___awdiv@sign:	
  1415                           ; 1 bytes @ 0x5
  1416                           
  1417                           
  1418                           ; 1 bytes @ 0x5
  1419  0025                     	ds	1
  1420  0026                     ?_I2C_Master_Init:	
  1421  0026                     ___awdiv@quotient:	
  1422                           ; 1 bytes @ 0x6
  1423                           
  1424  0026                     I2C_Master_Init@c:	
  1425                           ; 2 bytes @ 0x6
  1426                           
  1427                           
  1428                           ; 4 bytes @ 0x6
  1429  0026                     	ds	2
  1430  0028                     ??_uint_to_array:	
  1431  0028                     ?_display_Uhrzeit:	
  1432                           ; 1 bytes @ 0x8
  1433                           
  1434  0028                     ?_display_Datum:	
  1435                           ; 1 bytes @ 0x8
  1436                           
  1437  0028                     display_Uhrzeit@columna:	
  1438                           ; 1 bytes @ 0x8
  1439                           
  1440  0028                     display_Datum@columna:	
  1441                           ; 1 bytes @ 0x8
  1442                           
  1443                           
  1444                           ; 1 bytes @ 0x8
  1445  0028                     	ds	1
  1446  0029                     ??_display_Uhrzeit:	
  1447  0029                     ??_display_Datum:	
  1448                           ; 1 bytes @ 0x9
  1449                           
  1450                           
  1451                           ; 1 bytes @ 0x9
  1452  0029                     	ds	1
  1453  002A                     ??_I2C_Master_Init:	
  1454                           
  1455                           ; 1 bytes @ 0xA
  1456  002A                     	ds	2
  1457  002C                     display_Uhrzeit@fila:	
  1458  002C                     display_Datum@fila:	
  1459                           ; 1 bytes @ 0xC
  1460                           
  1461                           
  1462                           ; 1 bytes @ 0xC
  1463  002C                     	ds	1
  1464  002D                     display_Uhrzeit@seg_u:	
  1465  002D                     display_Datum@dia_u:	
  1466                           ; 1 bytes @ 0xD
  1467                           
  1468                           
  1469                           ; 1 bytes @ 0xD
  1470  002D                     	ds	1
  1471  002E                     ??_SetUp:	
  1472  002E                     display_Uhrzeit@seg_d:	
  1473                           ; 1 bytes @ 0xE
  1474                           
  1475  002E                     display_Datum@dia_d:	
  1476                           ; 1 bytes @ 0xE
  1477                           
  1478  002E                     uint_to_array@decenas:	
  1479                           ; 1 bytes @ 0xE
  1480                           
  1481                           
  1482                           ; 1 bytes @ 0xE
  1483  002E                     	ds	1
  1484  002F                     display_Uhrzeit@min_u:	
  1485  002F                     display_Datum@mes_u:	
  1486                           ; 1 bytes @ 0xF
  1487                           
  1488  002F                     uint_to_array@centenas:	
  1489                           ; 1 bytes @ 0xF
  1490                           
  1491                           
  1492                           ; 1 bytes @ 0xF
  1493  002F                     	ds	1
  1494  0030                     display_Uhrzeit@min_d:	
  1495  0030                     display_Datum@mes_d:	
  1496                           ; 1 bytes @ 0x10
  1497                           
  1498  0030                     uint_to_array@resultado:	
  1499                           ; 1 bytes @ 0x10
  1500                           
  1501                           
  1502                           ; 6 bytes @ 0x10
  1503  0030                     	ds	1
  1504  0031                     display_Uhrzeit@Uhr_u:	
  1505  0031                     display_Datum@jahr_u:	
  1506                           ; 1 bytes @ 0x11
  1507                           
  1508                           
  1509                           ; 1 bytes @ 0x11
  1510  0031                     	ds	1
  1511  0032                     display_Uhrzeit@Uhr_d:	
  1512  0032                     display_Datum@jahr_d:	
  1513                           ; 1 bytes @ 0x12
  1514                           
  1515                           
  1516                           ; 1 bytes @ 0x12
  1517  0032                     	ds	4
  1518  0036                     uint_to_array@numero:	
  1519                           
  1520                           ; 1 bytes @ 0x16
  1521  0036                     	ds	1
  1522  0037                     ??_mostrarLCD:	
  1523                           
  1524                           ; 1 bytes @ 0x17
  1525  0037                     	ds	3
  1526  003A                     mostrarLCD@pantalla:	
  1527                           
  1528                           ; 1 bytes @ 0x1A
  1529  003A                     	ds	1
  1530                           
  1531                           	psect	maintext
  1532  0C0B                     __pmaintext:	
  1533 ;;
  1534 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1535 ;;
  1536 ;; *************** function _main *****************
  1537 ;; Defined at:
  1538 ;;		line 140 in file "main_Master.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : B00/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1552 ;;      Params:         0       0       0       0       0
  1553 ;;      Locals:         0       0       0       0       0
  1554 ;;      Temps:          0       0       0       0       0
  1555 ;;      Totals:         0       0       0       0       0
  1556 ;;Total ram usage:        0 bytes
  1557 ;; Hardware stack levels required when called:    5
  1558 ;; This function calls:
  1559 ;;		_SetUp
  1560 ;;		_get_Time
  1561 ;;		_mostrarLCD
  1562 ;;		_pressBoton1
  1563 ;;		_pressBoton2
  1564 ;;		_uartTX_Write
  1565 ;; This function is called by:
  1566 ;;		Startup code after reset
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           
  1571                           ;psect for function _main
  1572  0C0B                     _main:	
  1573                           
  1574                           ;main_Master.c: 141:     SetUp();
  1575                           
  1576                           ;incstack = 0
  1577                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1578  0C0B  120A  158A  2625  120A  158A  	fcall	_SetUp
  1579  0C10                     l4270:	
  1580                           
  1581                           ;main_Master.c: 144:         get_Time();
  1582  0C10  120A  118A  232E  120A  158A  	fcall	_get_Time
  1583                           
  1584                           ;main_Master.c: 150:         mostrarLCD(estado);
  1585  0C15  1283               	bcf	3,5	;RP0=0, select bank0
  1586  0C16  1303               	bcf	3,6	;RP1=0, select bank0
  1587  0C17  084C               	movf	_estado,w
  1588  0C18  120A  118A  2029  120A  158A  	fcall	_mostrarLCD
  1589                           
  1590                           ;main_Master.c: 151:         pressBoton1();
  1591  0C1D  120A  158A  2531  120A  158A  	fcall	_pressBoton1
  1592                           
  1593                           ;main_Master.c: 152:         pressBoton2();
  1594  0C22  120A  158A  26AB  120A  158A  	fcall	_pressBoton2
  1595                           
  1596                           ;main_Master.c: 154:         uartTX_Write(125);
  1597  0C27  307D               	movlw	125
  1598  0C28  120A  158A  223D  120A  158A  	fcall	_uartTX_Write
  1599                           
  1600                           ;main_Master.c: 155:         uartTX_Write(hora);
  1601  0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  1602  0C2E  1303               	bcf	3,6	;RP1=0, select bank0
  1603  0C2F  0855               	movf	_hora,w
  1604  0C30  120A  158A  223D  120A  158A  	fcall	_uartTX_Write
  1605                           
  1606                           ;main_Master.c: 156:         uartTX_Write(min);
  1607  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  1608  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  1609  0C37  0856               	movf	_min,w
  1610  0C38  120A  158A  223D  120A  158A  	fcall	_uartTX_Write
  1611                           
  1612                           ;main_Master.c: 157:         uartTX_Write(seg);
  1613  0C3D  1283               	bcf	3,5	;RP0=0, select bank0
  1614  0C3E  1303               	bcf	3,6	;RP1=0, select bank0
  1615  0C3F  084B               	movf	_seg,w
  1616  0C40  120A  158A  223D  120A  158A  	fcall	_uartTX_Write
  1617                           
  1618                           ;main_Master.c: 158:         uartTX_Write(temperatura);
  1619  0C45  3000               	movlw	0
  1620  0C46  120A  158A  223D  120A  158A  	fcall	_uartTX_Write
  1621                           
  1622                           ;main_Master.c: 159:         uartTX_Write(temperatura_obj);
  1623  0C4B  3000               	movlw	0
  1624  0C4C  120A  158A  223D  120A  158A  	fcall	_uartTX_Write
  1625                           
  1626                           ;main_Master.c: 160:         uartTX_Write(inclinacion);
  1627  0C51  3004               	movlw	4
  1628  0C52  120A  158A  223D  120A  158A  	fcall	_uartTX_Write
  1629                           
  1630                           ;main_Master.c: 161:         uartTX_Write(humedad);
  1631  0C57  3005               	movlw	5
  1632  0C58  120A  158A  223D  120A  158A  	fcall	_uartTX_Write
  1633                           
  1634                           ;main_Master.c: 162:         uartTX_Write(d_frente);
  1635  0C5D  3066               	movlw	102
  1636  0C5E  120A  158A  223D  120A  158A  	fcall	_uartTX_Write
  1637                           
  1638                           ;main_Master.c: 163:         uartTX_Write(d_atras);
  1639  0C63  3066               	movlw	102
  1640  0C64  120A  158A  223D  120A  158A  	fcall	_uartTX_Write
  1641  0C69  2C10               	goto	l4270
  1642  0C6A                     __end_of_main:	
  1643                           
  1644                           	psect	text1
  1645  0A3D                     __ptext1:	
  1646 ;; *************** function _uartTX_Write *****************
  1647 ;; Defined at:
  1648 ;;		line 33 in file "UART.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  dato            1    wreg     unsigned char 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  dato            1    2[COMMON] unsigned char 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		wreg
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1662 ;;      Params:         0       0       0       0       0
  1663 ;;      Locals:         1       0       0       0       0
  1664 ;;      Temps:          0       0       0       0       0
  1665 ;;      Totals:         1       0       0       0       0
  1666 ;;Total ram usage:        1 bytes
  1667 ;; Hardware stack levels used:    1
  1668 ;; Hardware stack levels required when called:    1
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		_main
  1673 ;;		_uartTX_Write_Str
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           
  1678                           ;psect for function _uartTX_Write
  1679  0A3D                     _uartTX_Write:	
  1680                           
  1681                           ;incstack = 0
  1682                           ; Regs used in _uartTX_Write: [wreg]
  1683                           ;uartTX_Write@dato stored from wreg
  1684  0A3D  00F2               	movwf	uartTX_Write@dato
  1685  0A3E                     l436:	
  1686                           ;UART.c: 34:     while(!TRMT);
  1687                           
  1688  0A3E  1683               	bsf	3,5	;RP0=1, select bank1
  1689  0A3F  1303               	bcf	3,6	;RP1=0, select bank1
  1690  0A40  1C98               	btfss	24,1	;volatile
  1691  0A41  2A3E               	goto	l436
  1692                           
  1693                           ;UART.c: 35:     TXREG = dato;
  1694  0A42  0872               	movf	uartTX_Write@dato,w
  1695  0A43  1283               	bcf	3,5	;RP0=0, select bank0
  1696  0A44  1303               	bcf	3,6	;RP1=0, select bank0
  1697  0A45  0099               	movwf	25	;volatile
  1698  0A46  0008               	return
  1699  0A47                     __end_of_uartTX_Write:	
  1700                           
  1701                           	psect	text2
  1702  0EAB                     __ptext2:	
  1703 ;; *************** function _pressBoton2 *****************
  1704 ;; Defined at:
  1705 ;;		line 492 in file "main_Master.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;		None
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;		None
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      void 
  1712 ;; Registers used:
  1713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1719 ;;      Params:         0       0       0       0       0
  1720 ;;      Locals:         0       0       0       0       0
  1721 ;;      Temps:          0       2       0       0       0
  1722 ;;      Totals:         0       2       0       0       0
  1723 ;;Total ram usage:        2 bytes
  1724 ;; Hardware stack levels used:    1
  1725 ;; Hardware stack levels required when called:    3
  1726 ;; This function calls:
  1727 ;;		_LCD_Set_Cursor
  1728 ;;		_LCD_Write_Character
  1729 ;;		_LCD_clear
  1730 ;; This function is called by:
  1731 ;;		_main
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           
  1736                           ;psect for function _pressBoton2
  1737  0EAB                     _pressBoton2:	
  1738                           
  1739                           ;main_Master.c: 493:     if (banderaBoton == 1){
  1740                           
  1741                           ;incstack = 0
  1742                           ; Regs used in _pressBoton2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1743  0EAB  037B               	decf	_banderaBoton,w
  1744  0EAC  1D03               	btfss	3,2
  1745  0EAD  2F3F               	goto	l4252
  1746                           
  1747                           ;main_Master.c: 494:         if (banderaPUSH2 == 0){
  1748  0EAE  1283               	bcf	3,5	;RP0=0, select bank0
  1749  0EAF  1303               	bcf	3,6	;RP1=0, select bank0
  1750  0EB0  0846               	movf	_banderaPUSH2,w
  1751  0EB1  1D03               	btfss	3,2
  1752  0EB2  2F3F               	goto	l4252
  1753                           
  1754                           ;main_Master.c: 495:             if (PORTBbits.RB2 == 0){
  1755  0EB3  1D06               	btfss	6,2	;volatile
  1756  0EB4  2F20               	goto	l4244
  1757  0EB5  2F39               	goto	l4246
  1758  0EB6                     l4212:	
  1759                           
  1760                           ;main_Master.c: 498:                         estado = 6;
  1761  0EB6  3006               	movlw	6
  1762  0EB7  2F11               	goto	L5
  1763  0EB8                     l4214:	
  1764                           ;main_Master.c: 499:                         break;
  1765                           
  1766                           
  1767                           ;main_Master.c: 501:                         LCD_Set_Cursor(2,0);
  1768  0EB8  01F5               	clrf	LCD_Set_Cursor@columna
  1769  0EB9  3002               	movlw	2
  1770  0EBA  120A  158A  2365  120A  158A  	fcall	_LCD_Set_Cursor
  1771                           
  1772                           ;main_Master.c: 502:                         LCD_Write_Character(1);
  1773  0EBF  3001               	movlw	1
  1774  0EC0  120A  158A  2247  120A  158A  	fcall	_LCD_Write_Character
  1775                           
  1776                           ;main_Master.c: 503:                         _delay((unsigned long)((100)*(4000000/4000.
      +                          0)));
  1777  0EC5  3082               	movlw	130
  1778  0EC6  1283               	bcf	3,5	;RP0=0, select bank0
  1779  0EC7  1303               	bcf	3,6	;RP1=0, select bank0
  1780  0EC8  00A1               	movwf	??_pressBoton2+1
  1781  0EC9  30DD               	movlw	221
  1782  0ECA  00A0               	movwf	??_pressBoton2
  1783  0ECB                     u1657:	
  1784  0ECB  0BA0               	decfsz	??_pressBoton2,f
  1785  0ECC  2ECB               	goto	u1657
  1786  0ECD  0BA1               	decfsz	??_pressBoton2+1,f
  1787  0ECE  2ECB               	goto	u1657
  1788                           
  1789                           ;main_Master.c: 504:                         estado = 7;
  1790  0ECF  3007               	movlw	7
  1791  0ED0  2F0F               	goto	L6
  1792  0ED1                     l4222:	
  1793                           ;main_Master.c: 505:                         break;
  1794                           
  1795                           
  1796                           ;main_Master.c: 507:                         LCD_Set_Cursor(2,7);
  1797  0ED1  3007               	movlw	7
  1798  0ED2  00A0               	movwf	??_pressBoton2
  1799  0ED3  0820               	movf	??_pressBoton2,w
  1800  0ED4  00F5               	movwf	LCD_Set_Cursor@columna
  1801  0ED5  3002               	movlw	2
  1802  0ED6  120A  158A  2365  120A  158A  	fcall	_LCD_Set_Cursor
  1803                           
  1804                           ;main_Master.c: 508:                         LCD_Write_Character(1);
  1805  0EDB  3001               	movlw	1
  1806  0EDC  120A  158A  2247  120A  158A  	fcall	_LCD_Write_Character
  1807                           
  1808                           ;main_Master.c: 509:                         _delay((unsigned long)((100)*(4000000/4000.
      +                          0)));
  1809  0EE1  3082               	movlw	130
  1810  0EE2  1283               	bcf	3,5	;RP0=0, select bank0
  1811  0EE3  1303               	bcf	3,6	;RP1=0, select bank0
  1812  0EE4  00A1               	movwf	??_pressBoton2+1
  1813  0EE5  30DD               	movlw	221
  1814  0EE6  00A0               	movwf	??_pressBoton2
  1815  0EE7                     u1667:	
  1816  0EE7  0BA0               	decfsz	??_pressBoton2,f
  1817  0EE8  2EE7               	goto	u1667
  1818  0EE9  0BA1               	decfsz	??_pressBoton2+1,f
  1819  0EEA  2EE7               	goto	u1667
  1820                           
  1821                           ;main_Master.c: 510:                         estado = 8;
  1822  0EEB  3008               	movlw	8
  1823  0EEC  2F0F               	goto	L6
  1824  0EED                     l4230:	
  1825                           ;main_Master.c: 511:                         break;
  1826                           
  1827                           
  1828                           ;main_Master.c: 513:                         LCD_Set_Cursor(2,10);
  1829  0EED  300A               	movlw	10
  1830  0EEE  00A0               	movwf	??_pressBoton2
  1831  0EEF  0820               	movf	??_pressBoton2,w
  1832  0EF0  00F5               	movwf	LCD_Set_Cursor@columna
  1833  0EF1  3002               	movlw	2
  1834  0EF2  120A  158A  2365  120A  158A  	fcall	_LCD_Set_Cursor
  1835                           
  1836                           ;main_Master.c: 514:                         LCD_Write_Character(1);
  1837  0EF7  3001               	movlw	1
  1838  0EF8  120A  158A  2247  120A  158A  	fcall	_LCD_Write_Character
  1839                           
  1840                           ;main_Master.c: 515:                         _delay((unsigned long)((100)*(4000000/4000.
      +                          0)));
  1841  0EFD  3082               	movlw	130
  1842  0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  1843  0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  1844  0F00  00A1               	movwf	??_pressBoton2+1
  1845  0F01  30DD               	movlw	221
  1846  0F02  00A0               	movwf	??_pressBoton2
  1847  0F03                     u1677:	
  1848  0F03  0BA0               	decfsz	??_pressBoton2,f
  1849  0F04  2F03               	goto	u1677
  1850  0F05  0BA1               	decfsz	??_pressBoton2+1,f
  1851  0F06  2F03               	goto	u1677
  1852                           
  1853                           ;main_Master.c: 516:                         estado = 9;
  1854  0F07  3009               	movlw	9
  1855  0F08  2F0F               	goto	L6
  1856  0F09                     l4238:	
  1857                           ;main_Master.c: 517:                         break;
  1858                           
  1859                           
  1860                           ;main_Master.c: 519:                         LCD_clear();
  1861  0F09  120A  158A  229E  120A  158A  	fcall	_LCD_clear
  1862                           
  1863                           ;main_Master.c: 520:                         estado = 10;
  1864  0F0E  300A               	movlw	10
  1865  0F0F                     L6:	
  1866  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  1867  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  1868  0F11                     L5:	
  1869  0F11  00A0               	movwf	??_pressBoton2
  1870  0F12  0820               	movf	??_pressBoton2,w
  1871  0F13  00CC               	movwf	_estado
  1872                           
  1873                           ;main_Master.c: 521:                         break;
  1874  0F14  2F39               	goto	l4246
  1875  0F15                     l4242:	
  1876                           
  1877                           ;main_Master.c: 523:                         _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  1878  0F15  300D               	movlw	13
  1879  0F16  1283               	bcf	3,5	;RP0=0, select bank0
  1880  0F17  1303               	bcf	3,6	;RP1=0, select bank0
  1881  0F18  00A1               	movwf	??_pressBoton2+1
  1882  0F19  30FB               	movlw	251
  1883  0F1A  00A0               	movwf	??_pressBoton2
  1884  0F1B                     u1687:	
  1885  0F1B  0BA0               	decfsz	??_pressBoton2,f
  1886  0F1C  2F1B               	goto	u1687
  1887  0F1D  0BA1               	decfsz	??_pressBoton2+1,f
  1888  0F1E  2F1B               	goto	u1687
  1889                           
  1890                           ;main_Master.c: 524:                 }
  1891  0F1F  2F39               	goto	l4246
  1892  0F20                     l4244:	
  1893  0F20  084C               	movf	_estado,w
  1894  0F21  00A0               	movwf	??_pressBoton2
  1895  0F22  01A1               	clrf	??_pressBoton2+1
  1896                           
  1897                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1898                           ; Switch size 1, requested type "simple"
  1899                           ; Number of cases is 1, Range of values is 0 to 0
  1900                           ; switch strategies available:
  1901                           ; Name         Instructions Cycles
  1902                           ; simple_byte            4     3 (average)
  1903                           ; direct_byte           11     8 (fixed)
  1904                           ; jumptable            260     6 (fixed)
  1905                           ;	Chosen strategy is simple_byte
  1906  0F23  0821               	movf	??_pressBoton2+1,w
  1907  0F24  3A00               	xorlw	0	; case 0
  1908  0F25  1903               	skipnz
  1909  0F26  2F28               	goto	l4730
  1910  0F27  2F15               	goto	l4242
  1911  0F28                     l4730:	
  1912                           
  1913                           ; Switch size 1, requested type "simple"
  1914                           ; Number of cases is 5, Range of values is 5 to 9
  1915                           ; switch strategies available:
  1916                           ; Name         Instructions Cycles
  1917                           ; simple_byte           16     9 (average)
  1918                           ; direct_byte           26    11 (fixed)
  1919                           ; jumptable            263     9 (fixed)
  1920                           ;	Chosen strategy is simple_byte
  1921  0F28  0820               	movf	??_pressBoton2,w
  1922  0F29  3A05               	xorlw	5	; case 5
  1923  0F2A  1903               	skipnz
  1924  0F2B  2EB6               	goto	l4212
  1925  0F2C  3A03               	xorlw	3	; case 6
  1926  0F2D  1903               	skipnz
  1927  0F2E  2EB8               	goto	l4214
  1928  0F2F  3A01               	xorlw	1	; case 7
  1929  0F30  1903               	skipnz
  1930  0F31  2ED1               	goto	l4222
  1931  0F32  3A0F               	xorlw	15	; case 8
  1932  0F33  1903               	skipnz
  1933  0F34  2EED               	goto	l4230
  1934  0F35  3A01               	xorlw	1	; case 9
  1935  0F36  1903               	skipnz
  1936  0F37  2F09               	goto	l4238
  1937  0F38  2F15               	goto	l4242
  1938  0F39                     l4246:	
  1939                           
  1940                           ;main_Master.c: 526:                 banderaBoton = 0;
  1941  0F39  01FB               	clrf	_banderaBoton
  1942                           
  1943                           ;main_Master.c: 527:                 banderaPUSH2 = 1;
  1944  0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  1945  0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  1946  0F3C  01C6               	clrf	_banderaPUSH2
  1947  0F3D  0AC6               	incf	_banderaPUSH2,f
  1948                           
  1949                           ;main_Master.c: 528:                 INTCONbits.RBIE = 1;
  1950  0F3E  158B               	bsf	11,3	;volatile
  1951  0F3F                     l4252:	
  1952                           
  1953                           ;main_Master.c: 531:     if (banderaPUSH2 == 1){
  1954  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  1955  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  1956  0F41  0346               	decf	_banderaPUSH2,w
  1957  0F42  1D03               	btfss	3,2
  1958  0F43  0008               	return
  1959                           
  1960                           ;main_Master.c: 532:         if (PORTBbits.RB2 == 1){
  1961  0F44  1D06               	btfss	6,2	;volatile
  1962  0F45  0008               	return
  1963                           
  1964                           ;main_Master.c: 533:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1965  0F46  300D               	movlw	13
  1966  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  1967  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  1968  0F49  00A1               	movwf	??_pressBoton2+1
  1969  0F4A  30FB               	movlw	251
  1970  0F4B  00A0               	movwf	??_pressBoton2
  1971  0F4C                     u1697:	
  1972  0F4C  0BA0               	decfsz	??_pressBoton2,f
  1973  0F4D  2F4C               	goto	u1697
  1974  0F4E  0BA1               	decfsz	??_pressBoton2+1,f
  1975  0F4F  2F4C               	goto	u1697
  1976                           
  1977                           ;main_Master.c: 534:         banderaPUSH2 = 0;
  1978  0F50  1283               	bcf	3,5	;RP0=0, select bank0
  1979  0F51  1303               	bcf	3,6	;RP1=0, select bank0
  1980  0F52  01C6               	clrf	_banderaPUSH2
  1981  0F53  0008               	return
  1982  0F54                     __end_of_pressBoton2:	
  1983                           
  1984                           	psect	text3
  1985  0D31                     __ptext3:	
  1986 ;; *************** function _pressBoton1 *****************
  1987 ;; Defined at:
  1988 ;;		line 447 in file "main_Master.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;		None
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;		None
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  1    wreg      void 
  1995 ;; Registers used:
  1996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2002 ;;      Params:         0       0       0       0       0
  2003 ;;      Locals:         0       0       0       0       0
  2004 ;;      Temps:          2       0       0       0       0
  2005 ;;      Totals:         2       0       0       0       0
  2006 ;;Total ram usage:        2 bytes
  2007 ;; Hardware stack levels used:    1
  2008 ;; Hardware stack levels required when called:    3
  2009 ;; This function calls:
  2010 ;;		_LCD_clear
  2011 ;; This function is called by:
  2012 ;;		_main
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           
  2017                           ;psect for function _pressBoton1
  2018  0D31                     _pressBoton1:	
  2019                           
  2020                           ;main_Master.c: 448:     if (banderaBoton == 1){
  2021                           
  2022                           ;incstack = 0
  2023                           ; Regs used in _pressBoton1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2024  0D31  037B               	decf	_banderaBoton,w
  2025  0D32  1D03               	btfss	3,2
  2026  0D33  2D8E               	goto	l3180
  2027                           
  2028                           ;main_Master.c: 449:         if (banderaPUSH1 == 0){
  2029  0D34  087A               	movf	_banderaPUSH1,w
  2030  0D35  1D03               	btfss	3,2
  2031  0D36  2D8E               	goto	l3180
  2032                           
  2033                           ;main_Master.c: 450:             if (PORTBbits.RB1 == 0){
  2034  0D37  1283               	bcf	3,5	;RP0=0, select bank0
  2035  0D38  1303               	bcf	3,6	;RP1=0, select bank0
  2036  0D39  1C86               	btfss	6,1	;volatile
  2037  0D3A  2D77               	goto	l3172
  2038  0D3B  2D8E               	goto	l3180
  2039  0D3C                     l3144:	
  2040                           
  2041                           ;main_Master.c: 453:                         velocidad ++;
  2042  0D3C  3001               	movlw	1
  2043  0D3D  00F7               	movwf	??_pressBoton1
  2044  0D3E  0877               	movf	??_pressBoton1,w
  2045  0D3F  07CA               	addwf	_velocidad,f
  2046                           
  2047                           ;main_Master.c: 454:                         if (velocidad > 3){
  2048  0D40  3004               	movlw	4
  2049  0D41  024A               	subwf	_velocidad,w
  2050  0D42  1C03               	skipc
  2051  0D43  2D8A               	goto	l3174
  2052                           
  2053                           ;main_Master.c: 455:                             velocidad = 1;
  2054  0D44  01CA               	clrf	_velocidad
  2055  0D45  0ACA               	incf	_velocidad,f
  2056  0D46  2D8A               	goto	l3174
  2057  0D47                     l3150:	
  2058                           
  2059                           ;main_Master.c: 459:                         largo ++;
  2060  0D47  3001               	movlw	1
  2061  0D48  00F7               	movwf	??_pressBoton1
  2062  0D49  0877               	movf	??_pressBoton1,w
  2063  0D4A  07C5               	addwf	_largo,f
  2064                           
  2065                           ;main_Master.c: 460:                         if (largo > 8){
  2066  0D4B  3009               	movlw	9
  2067  0D4C  0245               	subwf	_largo,w
  2068  0D4D  1C03               	skipc
  2069  0D4E  2D8A               	goto	l3174
  2070                           
  2071                           ;main_Master.c: 461:                             largo = 1;
  2072  0D4F  01C5               	clrf	_largo
  2073  0D50  0AC5               	incf	_largo,f
  2074  0D51  2D8A               	goto	l3174
  2075  0D52                     l3156:	
  2076                           
  2077                           ;main_Master.c: 465:                         ancho ++;
  2078  0D52  3001               	movlw	1
  2079  0D53  00F7               	movwf	??_pressBoton1
  2080  0D54  0877               	movf	??_pressBoton1,w
  2081  0D55  07C4               	addwf	_ancho,f
  2082                           
  2083                           ;main_Master.c: 466:                         if (ancho > 8){
  2084  0D56  3009               	movlw	9
  2085  0D57  0244               	subwf	_ancho,w
  2086  0D58  1C03               	skipc
  2087  0D59  2D8A               	goto	l3174
  2088                           
  2089                           ;main_Master.c: 467:                             ancho = 1;
  2090  0D5A  01C4               	clrf	_ancho
  2091  0D5B  0AC4               	incf	_ancho,f
  2092  0D5C  2D8A               	goto	l3174
  2093  0D5D                     l3162:	
  2094                           
  2095                           ;main_Master.c: 471:                         LCD_clear();
  2096  0D5D  120A  158A  229E  120A  158A  	fcall	_LCD_clear
  2097                           
  2098                           ;main_Master.c: 472:                     _delay((unsigned long)((10)*(4000000/4000.0)));
  2099  0D62  300D               	movlw	13
  2100  0D63  00F8               	movwf	??_pressBoton1+1
  2101  0D64  30FB               	movlw	251
  2102  0D65  00F7               	movwf	??_pressBoton1
  2103  0D66                     u1707:	
  2104  0D66  0BF7               	decfsz	??_pressBoton1,f
  2105  0D67  2D66               	goto	u1707
  2106  0D68  0BF8               	decfsz	??_pressBoton1+1,f
  2107  0D69  2D66               	goto	u1707
  2108  0D6A  2D6B               	nop2
  2109                           
  2110                           ;main_Master.c: 473:                     estado ++;
  2111  0D6B  3001               	movlw	1
  2112  0D6C  00F7               	movwf	??_pressBoton1
  2113  0D6D  0877               	movf	??_pressBoton1,w
  2114  0D6E  1283               	bcf	3,5	;RP0=0, select bank0
  2115  0D6F  1303               	bcf	3,6	;RP1=0, select bank0
  2116  0D70  07CC               	addwf	_estado,f
  2117                           
  2118                           ;main_Master.c: 474:                     if (estado > 5){
  2119  0D71  3006               	movlw	6
  2120  0D72  024C               	subwf	_estado,w
  2121  0D73  1C03               	skipc
  2122  0D74  2D8A               	goto	l3174
  2123                           
  2124                           ;main_Master.c: 475:                         estado = 0;
  2125  0D75  01CC               	clrf	_estado
  2126  0D76  2D8A               	goto	l3174
  2127  0D77                     l3172:	
  2128  0D77  084C               	movf	_estado,w
  2129  0D78  00F7               	movwf	??_pressBoton1
  2130  0D79  01F8               	clrf	??_pressBoton1+1
  2131                           
  2132                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2133                           ; Switch size 1, requested type "simple"
  2134                           ; Number of cases is 1, Range of values is 0 to 0
  2135                           ; switch strategies available:
  2136                           ; Name         Instructions Cycles
  2137                           ; simple_byte            4     3 (average)
  2138                           ; direct_byte           11     8 (fixed)
  2139                           ; jumptable            260     6 (fixed)
  2140                           ;	Chosen strategy is simple_byte
  2141  0D7A  0878               	movf	??_pressBoton1+1,w
  2142  0D7B  3A00               	xorlw	0	; case 0
  2143  0D7C  1903               	skipnz
  2144  0D7D  2D7F               	goto	l4732
  2145  0D7E  2D5D               	goto	l3162
  2146  0D7F                     l4732:	
  2147                           
  2148                           ; Switch size 1, requested type "simple"
  2149                           ; Number of cases is 3, Range of values is 6 to 8
  2150                           ; switch strategies available:
  2151                           ; Name         Instructions Cycles
  2152                           ; simple_byte           10     6 (average)
  2153                           ; direct_byte           20    11 (fixed)
  2154                           ; jumptable            263     9 (fixed)
  2155                           ;	Chosen strategy is simple_byte
  2156  0D7F  0877               	movf	??_pressBoton1,w
  2157  0D80  3A06               	xorlw	6	; case 6
  2158  0D81  1903               	skipnz
  2159  0D82  2D3C               	goto	l3144
  2160  0D83  3A01               	xorlw	1	; case 7
  2161  0D84  1903               	skipnz
  2162  0D85  2D47               	goto	l3150
  2163  0D86  3A0F               	xorlw	15	; case 8
  2164  0D87  1903               	skipnz
  2165  0D88  2D52               	goto	l3156
  2166  0D89  2D5D               	goto	l3162
  2167  0D8A                     l3174:	
  2168                           
  2169                           ;main_Master.c: 478:                 banderaBoton = 0;
  2170  0D8A  01FB               	clrf	_banderaBoton
  2171                           
  2172                           ;main_Master.c: 479:                 banderaPUSH1 = 1;
  2173  0D8B  01FA               	clrf	_banderaPUSH1
  2174  0D8C  0AFA               	incf	_banderaPUSH1,f
  2175                           
  2176                           ;main_Master.c: 480:                 INTCONbits.RBIE = 1;
  2177  0D8D  158B               	bsf	11,3	;volatile
  2178  0D8E                     l3180:	
  2179                           
  2180                           ;main_Master.c: 484:     if (banderaPUSH1 == 1){
  2181  0D8E  037A               	decf	_banderaPUSH1,w
  2182  0D8F  1D03               	btfss	3,2
  2183  0D90  0008               	return
  2184                           
  2185                           ;main_Master.c: 485:         if (PORTBbits.RB1 == 1){
  2186  0D91  1283               	bcf	3,5	;RP0=0, select bank0
  2187  0D92  1303               	bcf	3,6	;RP1=0, select bank0
  2188  0D93  1C86               	btfss	6,1	;volatile
  2189  0D94  0008               	return
  2190                           
  2191                           ;main_Master.c: 486:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2192  0D95  300D               	movlw	13
  2193  0D96  00F8               	movwf	??_pressBoton1+1
  2194  0D97  30FB               	movlw	251
  2195  0D98  00F7               	movwf	??_pressBoton1
  2196  0D99                     u1717:	
  2197  0D99  0BF7               	decfsz	??_pressBoton1,f
  2198  0D9A  2D99               	goto	u1717
  2199  0D9B  0BF8               	decfsz	??_pressBoton1+1,f
  2200  0D9C  2D99               	goto	u1717
  2201  0D9D  2D9E               	nop2
  2202                           
  2203                           ;main_Master.c: 487:         banderaPUSH1 = 0;
  2204  0D9E  01FA               	clrf	_banderaPUSH1
  2205  0D9F  0008               	return
  2206  0DA0                     __end_of_pressBoton1:	
  2207                           
  2208                           	psect	text4
  2209  0029                     __ptext4:	
  2210 ;; *************** function _mostrarLCD *****************
  2211 ;; Defined at:
  2212 ;;		line 270 in file "main_Master.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;  pantalla        1    wreg     unsigned char 
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;  pantalla        1   26[BANK0 ] unsigned char 
  2217 ;;  dec_atras       1    0        unsigned char 
  2218 ;;  uni_atras       1    0        unsigned char 
  2219 ;;  dec_frente      1    0        unsigned char 
  2220 ;;  uni_frente      1    0        unsigned char 
  2221 ;;  decenas_hume    1    0        unsigned char 
  2222 ;;  unidades_hum    1    0        unsigned char 
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2232 ;;      Params:         0       0       0       0       0
  2233 ;;      Locals:         0       7       0       0       0
  2234 ;;      Temps:          0       3       0       0       0
  2235 ;;      Totals:         0      10       0       0       0
  2236 ;;Total ram usage:       10 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    4
  2239 ;; This function calls:
  2240 ;;		_I2C_Master_Start
  2241 ;;		_I2C_Master_Stop
  2242 ;;		_I2C_Master_Write
  2243 ;;		_LCD_Set_Cursor
  2244 ;;		_LCD_Write_Character
  2245 ;;		_LCD_Write_String
  2246 ;;		_LCD_clear
  2247 ;;		_display_Datum
  2248 ;;		_display_Uhrzeit
  2249 ;;		_uint_to_array
  2250 ;; This function is called by:
  2251 ;;		_main
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           
  2256                           ;psect for function _mostrarLCD
  2257  0029                     _mostrarLCD:	
  2258                           
  2259                           ;incstack = 0
  2260                           ; Regs used in _mostrarLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2261                           ;mostrarLCD@pantalla stored from wreg
  2262  0029  1283               	bcf	3,5	;RP0=0, select bank0
  2263  002A  1303               	bcf	3,6	;RP1=0, select bank0
  2264  002B  00BA               	movwf	mostrarLCD@pantalla
  2265                           
  2266                           ;main_Master.c: 271:     switch(pantalla){
  2267  002C  2B02               	goto	l4196
  2268  002D                     l4038:	
  2269                           
  2270                           ;main_Master.c: 273:             display_Uhrzeit(2,4);
  2271  002D  3004               	movlw	4
  2272  002E  00B7               	movwf	??_mostrarLCD
  2273  002F  0837               	movf	??_mostrarLCD,w
  2274  0030  00A8               	movwf	display_Uhrzeit@columna
  2275  0031  3002               	movlw	2
  2276  0032  120A  118A  25D2  120A  118A  	fcall	_display_Uhrzeit
  2277                           
  2278                           ;main_Master.c: 274:             display_Datum(1,3);
  2279  0037  3003               	movlw	3
  2280  0038  1283               	bcf	3,5	;RP0=0, select bank0
  2281  0039  1303               	bcf	3,6	;RP1=0, select bank0
  2282  003A  00B7               	movwf	??_mostrarLCD
  2283  003B  0837               	movf	??_mostrarLCD,w
  2284  003C  00A8               	movwf	display_Datum@columna
  2285  003D  3001               	movlw	1
  2286  003E  120A  118A  24FA   	fcall	_display_Datum
  2287                           
  2288                           ;main_Master.c: 275:             break;
  2289  0041  0008               	return
  2290  0042                     l4040:	
  2291                           
  2292                           ;main_Master.c: 277:             LCD_Set_Cursor(1,0);
  2293  0042  01F5               	clrf	LCD_Set_Cursor@columna
  2294  0043  3001               	movlw	1
  2295  0044  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2296                           
  2297                           ;main_Master.c: 278:             LCD_Write_String("Ambiente: Suelo:");
  2298  0049  3029               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2299  004A  120A  158A  22EB  120A  118A  	fcall	_LCD_Write_String
  2300                           
  2301                           ;main_Master.c: 279:             LCD_Set_Cursor(2,2);
  2302  004F  3002               	movlw	2
  2303  0050  1283               	bcf	3,5	;RP0=0, select bank0
  2304  0051  1303               	bcf	3,6	;RP1=0, select bank0
  2305  0052  00B7               	movwf	??_mostrarLCD
  2306  0053  0837               	movf	??_mostrarLCD,w
  2307  0054  00F5               	movwf	LCD_Set_Cursor@columna
  2308  0055  3002               	movlw	2
  2309  0056  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2310                           
  2311                           ;main_Master.c: 280:             LCD_Write_Character(2);
  2312  005B  3002               	movlw	2
  2313  005C  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2314                           
  2315                           ;main_Master.c: 281:             obj_array = uint_to_array(temperatura);
  2316  0061  3000               	movlw	0
  2317  0062  120A  158A  25A0  120A  118A  	fcall	_uint_to_array
  2318  0067  1283               	bcf	3,5	;RP0=0, select bank0
  2319  0068  1303               	bcf	3,6	;RP1=0, select bank0
  2320  0069  00B7               	movwf	??_mostrarLCD
  2321  006A  0837               	movf	??_mostrarLCD,w
  2322  006B  00C7               	movwf	_obj_array
  2323                           
  2324                           ;main_Master.c: 282:             if (obj_array[0] == 0){
  2325  006C  0847               	movf	_obj_array,w
  2326  006D  0084               	movwf	4
  2327  006E  1383               	bcf	3,7	;select IRP bank0
  2328  006F  0800               	movf	0,w
  2329  0070  00B7               	movwf	??_mostrarLCD
  2330  0071  0A84               	incf	4,f
  2331  0072  0800               	movf	0,w
  2332  0073  00B8               	movwf	??_mostrarLCD+1
  2333  0074  0837               	movf	??_mostrarLCD,w
  2334  0075  0438               	iorwf	??_mostrarLCD+1,w
  2335  0076  1D03               	btfss	3,2
  2336  0077  287A               	goto	l4050
  2337                           
  2338                           ;main_Master.c: 283:                 LCD_Write_Character(' ');
  2339  0078  3020               	movlw	32
  2340  0079  287E               	goto	L7
  2341  007A                     l4050:	
  2342                           ;main_Master.c: 284:             }
  2343                           
  2344                           
  2345                           ;main_Master.c: 286:                 LCD_Write_Character('0' + obj_array[0]);
  2346  007A  0847               	movf	_obj_array,w
  2347  007B  0084               	movwf	4
  2348  007C  0800               	movf	0,w
  2349  007D  3E30               	addlw	48
  2350  007E                     L7:	
  2351  007E  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2352                           
  2353                           ;main_Master.c: 288:             LCD_Write_Character('0' + obj_array[1]);
  2354                           
  2355                           ;main_Master.c: 287:             }
  2356  0083  1283               	bcf	3,5	;RP0=0, select bank0
  2357  0084  1303               	bcf	3,6	;RP1=0, select bank0
  2358  0085  0847               	movf	_obj_array,w
  2359  0086  3E02               	addlw	2
  2360  0087  0084               	movwf	4
  2361  0088  1383               	bcf	3,7	;select IRP bank0
  2362  0089  0800               	movf	0,w
  2363  008A  3E30               	addlw	48
  2364  008B  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2365                           
  2366                           ;main_Master.c: 289:             LCD_Write_Character('0' + obj_array[2]);
  2367  0090  1283               	bcf	3,5	;RP0=0, select bank0
  2368  0091  1303               	bcf	3,6	;RP1=0, select bank0
  2369  0092  0847               	movf	_obj_array,w
  2370  0093  3E04               	addlw	4
  2371  0094  0084               	movwf	4
  2372  0095  1383               	bcf	3,7	;select IRP bank0
  2373  0096  0800               	movf	0,w
  2374  0097  3E30               	addlw	48
  2375  0098  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2376                           
  2377                           ;main_Master.c: 290:             LCD_Write_Character(223);
  2378  009D  30DF               	movlw	223
  2379  009E  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2380                           
  2381                           ;main_Master.c: 291:             LCD_Write_Character('C');
  2382  00A3  3043               	movlw	67
  2383  00A4  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2384                           
  2385                           ;main_Master.c: 293:             LCD_Set_Cursor(2,10);
  2386  00A9  300A               	movlw	10
  2387  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  2388  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  2389  00AC  00B7               	movwf	??_mostrarLCD
  2390  00AD  0837               	movf	??_mostrarLCD,w
  2391  00AE  00F5               	movwf	LCD_Set_Cursor@columna
  2392  00AF  3002               	movlw	2
  2393  00B0  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2394                           
  2395                           ;main_Master.c: 294:             LCD_Write_Character(2);
  2396  00B5  3002               	movlw	2
  2397  00B6  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2398                           
  2399                           ;main_Master.c: 295:             obj_array = uint_to_array(temperatura_obj);
  2400  00BB  3000               	movlw	0
  2401  00BC  120A  158A  25A0  120A  118A  	fcall	_uint_to_array
  2402  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  2403  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  2404  00C3  00B7               	movwf	??_mostrarLCD
  2405  00C4  0837               	movf	??_mostrarLCD,w
  2406  00C5  00C7               	movwf	_obj_array
  2407                           
  2408                           ;main_Master.c: 296:             if (obj_array[0] == 0){
  2409  00C6  0847               	movf	_obj_array,w
  2410  00C7  0084               	movwf	4
  2411  00C8  1383               	bcf	3,7	;select IRP bank0
  2412  00C9  0800               	movf	0,w
  2413  00CA  00B7               	movwf	??_mostrarLCD
  2414  00CB  0A84               	incf	4,f
  2415  00CC  0800               	movf	0,w
  2416  00CD  00B8               	movwf	??_mostrarLCD+1
  2417  00CE  0837               	movf	??_mostrarLCD,w
  2418  00CF  0438               	iorwf	??_mostrarLCD+1,w
  2419  00D0  1D03               	btfss	3,2
  2420  00D1  28D4               	goto	l4064
  2421                           
  2422                           ;main_Master.c: 297:                 LCD_Write_Character(' ');
  2423  00D2  3020               	movlw	32
  2424  00D3  28D8               	goto	L8
  2425  00D4                     l4064:	
  2426                           ;main_Master.c: 298:             }
  2427                           
  2428                           
  2429                           ;main_Master.c: 300:                 LCD_Write_Character('0' + obj_array[0]);
  2430  00D4  0847               	movf	_obj_array,w
  2431  00D5  0084               	movwf	4
  2432  00D6  0800               	movf	0,w
  2433  00D7  3E30               	addlw	48
  2434  00D8                     L8:	
  2435  00D8  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2436                           
  2437                           ;main_Master.c: 303:             if (obj_array[1] == 0 && obj_array[0] == 0){
  2438  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  2439  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  2440  00DF  0847               	movf	_obj_array,w
  2441  00E0  3E02               	addlw	2
  2442  00E1  0084               	movwf	4
  2443  00E2  1383               	bcf	3,7	;select IRP bank0
  2444  00E3  0800               	movf	0,w
  2445  00E4  00B7               	movwf	??_mostrarLCD
  2446  00E5  0A84               	incf	4,f
  2447  00E6  0800               	movf	0,w
  2448  00E7  00B8               	movwf	??_mostrarLCD+1
  2449  00E8  0837               	movf	??_mostrarLCD,w
  2450  00E9  0438               	iorwf	??_mostrarLCD+1,w
  2451  00EA  1D03               	btfss	3,2
  2452  00EB  28F9               	goto	l4072
  2453  00EC  0847               	movf	_obj_array,w
  2454  00ED  0084               	movwf	4
  2455  00EE  0800               	movf	0,w
  2456  00EF  00B7               	movwf	??_mostrarLCD
  2457  00F0  0A84               	incf	4,f
  2458  00F1  0800               	movf	0,w
  2459  00F2  00B8               	movwf	??_mostrarLCD+1
  2460  00F3  0837               	movf	??_mostrarLCD,w
  2461  00F4  0438               	iorwf	??_mostrarLCD+1,w
  2462  00F5  1D03               	btfss	3,2
  2463  00F6  28F9               	goto	l4072
  2464                           
  2465                           ;main_Master.c: 304:                 LCD_Write_Character(' ');
  2466  00F7  3020               	movlw	32
  2467  00F8  28FE               	goto	L9
  2468  00F9                     l4072:	
  2469                           ;main_Master.c: 305:             }
  2470                           
  2471                           
  2472                           ;main_Master.c: 307:                 LCD_Write_Character('0' + obj_array[1]);
  2473  00F9  0847               	movf	_obj_array,w
  2474  00FA  3E02               	addlw	2
  2475  00FB  0084               	movwf	4
  2476  00FC  0800               	movf	0,w
  2477  00FD  3E30               	addlw	48
  2478  00FE                     L9:	
  2479  00FE  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2480                           
  2481                           ;main_Master.c: 309:             LCD_Write_Character('0' + obj_array[2]);
  2482                           
  2483                           ;main_Master.c: 308:             }
  2484  0103  1283               	bcf	3,5	;RP0=0, select bank0
  2485  0104  1303               	bcf	3,6	;RP1=0, select bank0
  2486  0105  0847               	movf	_obj_array,w
  2487  0106  3E04               	addlw	4
  2488  0107  0084               	movwf	4
  2489  0108  1383               	bcf	3,7	;select IRP bank0
  2490  0109  0800               	movf	0,w
  2491  010A  3E30               	addlw	48
  2492  010B  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2493                           
  2494                           ;main_Master.c: 310:             LCD_Write_Character(223);
  2495  0110  30DF               	movlw	223
  2496  0111  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2497                           
  2498                           ;main_Master.c: 311:             LCD_Write_Character('C');
  2499  0116  3043               	movlw	67
  2500  0117  120A  158A  2247   	fcall	_LCD_Write_Character
  2501                           
  2502                           ;main_Master.c: 312:             break;
  2503  011A  0008               	return
  2504  011B                     l4078:	
  2505                           
  2506                           ;main_Master.c: 314:             LCD_Set_Cursor(1,0);
  2507  011B  01F5               	clrf	LCD_Set_Cursor@columna
  2508  011C  3001               	movlw	1
  2509  011D  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2510                           
  2511                           ;main_Master.c: 315:             LCD_Write_String("Inclinacion:");
  2512  0122  3065               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2513  0123  120A  158A  22EB  120A  118A  	fcall	_LCD_Write_String
  2514                           
  2515                           ;main_Master.c: 316:             LCD_Set_Cursor(2, 5);
  2516  0128  3005               	movlw	5
  2517  0129  1283               	bcf	3,5	;RP0=0, select bank0
  2518  012A  1303               	bcf	3,6	;RP1=0, select bank0
  2519  012B  00B7               	movwf	??_mostrarLCD
  2520  012C  0837               	movf	??_mostrarLCD,w
  2521  012D  00F5               	movwf	LCD_Set_Cursor@columna
  2522  012E  3002               	movlw	2
  2523  012F  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2524                           
  2525                           ;main_Master.c: 320:             LCD_Set_Cursor(2, 5);
  2526  0134  3005               	movlw	5
  2527  0135  1283               	bcf	3,5	;RP0=0, select bank0
  2528  0136  1303               	bcf	3,6	;RP1=0, select bank0
  2529  0137  00B7               	movwf	??_mostrarLCD
  2530  0138  0837               	movf	??_mostrarLCD,w
  2531  0139  00F5               	movwf	LCD_Set_Cursor@columna
  2532  013A  3002               	movlw	2
  2533  013B  120A  158A  2365   	fcall	_LCD_Set_Cursor
  2534                           
  2535                           ;main_Master.c: 321:             if(inclinacion == 0){
  2536  013E  0008               	return
  2537  013F                     l4086:	
  2538                           
  2539                           ;main_Master.c: 333:             LCD_Set_Cursor(1,0);
  2540  013F  01F5               	clrf	LCD_Set_Cursor@columna
  2541  0140  3001               	movlw	1
  2542  0141  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2543                           
  2544                           ;main_Master.c: 334:             LCD_Write_String("Humedad:");
  2545  0146  3096               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2546  0147  120A  158A  22EB  120A  118A  	fcall	_LCD_Write_String
  2547                           
  2548                           ;main_Master.c: 335:             LCD_Set_Cursor(2,4);
  2549  014C  3004               	movlw	4
  2550  014D  1283               	bcf	3,5	;RP0=0, select bank0
  2551  014E  1303               	bcf	3,6	;RP1=0, select bank0
  2552  014F  00B7               	movwf	??_mostrarLCD
  2553  0150  0837               	movf	??_mostrarLCD,w
  2554  0151  00F5               	movwf	LCD_Set_Cursor@columna
  2555  0152  3002               	movlw	2
  2556  0153  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2557                           
  2558                           ;main_Master.c: 336:             LCD_Write_Character(3);
  2559  0158  3003               	movlw	3
  2560  0159  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2561                           
  2562                           ;main_Master.c: 337:             LCD_Write_Character(' ');
  2563  015E  3020               	movlw	32
  2564  015F  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2565                           
  2566                           ;main_Master.c: 341:                 LCD_Write_Character(' ');
  2567                           
  2568                           ;main_Master.c: 340:             if(decenas_humedad == 0){
  2569  0164  3020               	movlw	32
  2570  0165  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2571                           
  2572                           ;main_Master.c: 346:             LCD_Write_Character('0'+unidades_humedad);
  2573                           
  2574                           ;main_Master.c: 345:             }
  2575  016A  3035               	movlw	53
  2576  016B  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2577                           
  2578                           ;main_Master.c: 347:             LCD_Write_Character('%');
  2579  0170  3025               	movlw	37
  2580  0171  120A  158A  2247   	fcall	_LCD_Write_Character
  2581                           
  2582                           ;main_Master.c: 348:             break;
  2583  0174  0008               	return
  2584  0175                     l4102:	
  2585                           
  2586                           ;main_Master.c: 350:             LCD_Set_Cursor(1,0);
  2587  0175  01F5               	clrf	LCD_Set_Cursor@columna
  2588  0176  3001               	movlw	1
  2589  0177  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2590                           
  2591                           ;main_Master.c: 351:             LCD_Write_String("Atr");
  2592  017C  30AA               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2593  017D  120A  158A  22EB  120A  118A  	fcall	_LCD_Write_String
  2594                           
  2595                           ;main_Master.c: 352:             LCD_Write_Character(0);
  2596  0182  3000               	movlw	0
  2597  0183  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2598                           
  2599                           ;main_Master.c: 353:             LCD_Write_String("s: | Frente:");
  2600  0188  3058               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2601  0189  120A  158A  22EB  120A  118A  	fcall	_LCD_Write_String
  2602                           
  2603                           ;main_Master.c: 354:             LCD_Set_Cursor(2,2);
  2604  018E  3002               	movlw	2
  2605  018F  1283               	bcf	3,5	;RP0=0, select bank0
  2606  0190  1303               	bcf	3,6	;RP1=0, select bank0
  2607  0191  00B7               	movwf	??_mostrarLCD
  2608  0192  0837               	movf	??_mostrarLCD,w
  2609  0193  00F5               	movwf	LCD_Set_Cursor@columna
  2610  0194  3002               	movlw	2
  2611  0195  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2612                           
  2613                           ;main_Master.c: 368:                 LCD_Write_String("----");
  2614                           
  2615                           ;main_Master.c: 355:             if(d_frente < 100){
  2616  019A  30A5               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2617  019B  120A  158A  22EB  120A  118A  	fcall	_LCD_Write_String
  2618                           
  2619                           ;main_Master.c: 371:             LCD_Set_Cursor(2,7);
  2620                           
  2621                           ;main_Master.c: 369:             }
  2622  01A0  3007               	movlw	7
  2623  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  2624  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  2625  01A3  00B7               	movwf	??_mostrarLCD
  2626  01A4  0837               	movf	??_mostrarLCD,w
  2627  01A5  00F5               	movwf	LCD_Set_Cursor@columna
  2628  01A6  3002               	movlw	2
  2629  01A7  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2630                           
  2631                           ;main_Master.c: 372:             LCD_Write_Character('|');
  2632  01AC  307C               	movlw	124
  2633  01AD  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2634                           
  2635                           ;main_Master.c: 373:             LCD_Set_Cursor(2,11);
  2636  01B2  300B               	movlw	11
  2637  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  2638  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  2639  01B5  00B7               	movwf	??_mostrarLCD
  2640  01B6  0837               	movf	??_mostrarLCD,w
  2641  01B7  00F5               	movwf	LCD_Set_Cursor@columna
  2642  01B8  3002               	movlw	2
  2643  01B9  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2644                           
  2645                           ;main_Master.c: 387:                 LCD_Write_String("----");
  2646                           
  2647                           ;main_Master.c: 374:             if(d_atras < 100){
  2648  01BE  30A5               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2649  01BF  120A  158A  22EB   	fcall	_LCD_Write_String
  2650  01C2  0008               	return
  2651  01C3                     l4138:	
  2652                           
  2653                           ;main_Master.c: 391:             LCD_Set_Cursor(1, 0);
  2654  01C3  01F5               	clrf	LCD_Set_Cursor@columna
  2655  01C4  3001               	movlw	1
  2656  01C5  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2657                           
  2658                           ;main_Master.c: 392:             LCD_Write_String("Tomar datos:");
  2659  01CA  3072               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2660  01CB  120A  158A  22EB  120A  118A  	fcall	_LCD_Write_String
  2661                           
  2662                           ;main_Master.c: 393:             LCD_Set_Cursor(2,1);
  2663  01D0  01F5               	clrf	LCD_Set_Cursor@columna
  2664  01D1  0AF5               	incf	LCD_Set_Cursor@columna,f
  2665  01D2  3002               	movlw	2
  2666  01D3  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2667                           
  2668                           ;main_Master.c: 394:             LCD_Write_Character(velocidad + '0');
  2669  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  2670  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  2671  01DA  084A               	movf	_velocidad,w
  2672  01DB  3E30               	addlw	48
  2673  01DC  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2674                           
  2675                           ;main_Master.c: 395:             LCD_Set_Cursor(2,8);
  2676  01E1  3008               	movlw	8
  2677  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2678  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2679  01E4  00B7               	movwf	??_mostrarLCD
  2680  01E5  0837               	movf	??_mostrarLCD,w
  2681  01E6  00F5               	movwf	LCD_Set_Cursor@columna
  2682  01E7  3002               	movlw	2
  2683  01E8  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2684                           
  2685                           ;main_Master.c: 396:             LCD_Write_Character('0' + largo);
  2686  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  2687  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  2688  01EF  0845               	movf	_largo,w
  2689  01F0  3E30               	addlw	48
  2690  01F1  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2691                           
  2692                           ;main_Master.c: 397:             LCD_Write_String("x ");
  2693  01F6  30AE               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2694  01F7  120A  158A  22EB  120A  118A  	fcall	_LCD_Write_String
  2695                           
  2696                           ;main_Master.c: 398:             LCD_Write_Character('0' + ancho);
  2697  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  2698  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  2699  01FE  0844               	movf	_ancho,w
  2700  01FF  3E30               	addlw	48
  2701  0200  120A  158A  2247   	fcall	_LCD_Write_Character
  2702                           
  2703                           ;main_Master.c: 399:             break;
  2704  0203  0008               	return
  2705  0204                     l4148:	
  2706                           
  2707                           ;main_Master.c: 401:             LCD_Set_Cursor(2,0);
  2708  0204  01F5               	clrf	LCD_Set_Cursor@columna
  2709  0205  3002               	movlw	2
  2710  0206  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2711                           
  2712                           ;main_Master.c: 402:             LCD_Write_Character(4);
  2713  020B  3004               	movlw	4
  2714  020C  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2715                           
  2716                           ;main_Master.c: 403:             LCD_Write_Character(velocidad + '0');
  2717  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0212  1303               	bcf	3,6	;RP1=0, select bank0
  2719  0213  084A               	movf	_velocidad,w
  2720  0214  3E30               	addlw	48
  2721  0215  120A  158A  2247   	fcall	_LCD_Write_Character
  2722                           
  2723                           ;main_Master.c: 404:             break;
  2724  0218  0008               	return
  2725  0219                     l4154:	
  2726                           
  2727                           ;main_Master.c: 406:             LCD_Set_Cursor(2,0);
  2728  0219  01F5               	clrf	LCD_Set_Cursor@columna
  2729  021A  3002               	movlw	2
  2730  021B  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2731                           
  2732                           ;main_Master.c: 407:             LCD_Write_Character(' ');
  2733  0220  3020               	movlw	32
  2734  0221  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2735                           
  2736                           ;main_Master.c: 408:             LCD_Set_Cursor(2,7);
  2737  0226  3007               	movlw	7
  2738  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2739  0228  1303               	bcf	3,6	;RP1=0, select bank0
  2740  0229  00B7               	movwf	??_mostrarLCD
  2741  022A  0837               	movf	??_mostrarLCD,w
  2742  022B  00F5               	movwf	LCD_Set_Cursor@columna
  2743  022C  3002               	movlw	2
  2744  022D  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2745                           
  2746                           ;main_Master.c: 409:             LCD_Write_Character(4);
  2747  0232  3004               	movlw	4
  2748  0233  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2749                           
  2750                           ;main_Master.c: 410:             LCD_Write_Character('0' + largo);
  2751  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2752  0239  1303               	bcf	3,6	;RP1=0, select bank0
  2753  023A  0845               	movf	_largo,w
  2754  023B  3E30               	addlw	48
  2755  023C  120A  158A  2247   	fcall	_LCD_Write_Character
  2756                           
  2757                           ;main_Master.c: 411:             break;
  2758  023F  0008               	return
  2759  0240                     l4160:	
  2760                           
  2761                           ;main_Master.c: 413:             LCD_Set_Cursor(2,7);
  2762  0240  3007               	movlw	7
  2763  0241  00B7               	movwf	??_mostrarLCD
  2764  0242  0837               	movf	??_mostrarLCD,w
  2765  0243  00F5               	movwf	LCD_Set_Cursor@columna
  2766  0244  3002               	movlw	2
  2767  0245  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2768                           
  2769                           ;main_Master.c: 414:             LCD_Write_Character(' ');
  2770  024A  3020               	movlw	32
  2771  024B  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2772                           
  2773                           ;main_Master.c: 415:             LCD_Set_Cursor(2,10);
  2774  0250  300A               	movlw	10
  2775  0251  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0252  1303               	bcf	3,6	;RP1=0, select bank0
  2777  0253  00B7               	movwf	??_mostrarLCD
  2778  0254  0837               	movf	??_mostrarLCD,w
  2779  0255  00F5               	movwf	LCD_Set_Cursor@columna
  2780  0256  3002               	movlw	2
  2781  0257  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2782                           
  2783                           ;main_Master.c: 416:             LCD_Write_Character(4);
  2784  025C  3004               	movlw	4
  2785  025D  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2786                           
  2787                           ;main_Master.c: 417:             LCD_Write_Character('0' + ancho);
  2788  0262  1283               	bcf	3,5	;RP0=0, select bank0
  2789  0263  1303               	bcf	3,6	;RP1=0, select bank0
  2790  0264  0844               	movf	_ancho,w
  2791  0265  3E30               	addlw	48
  2792  0266  120A  158A  2247   	fcall	_LCD_Write_Character
  2793                           
  2794                           ;main_Master.c: 418:             break;
  2795  0269  0008               	return
  2796  026A                     l4166:	
  2797                           
  2798                           ;main_Master.c: 420:             LCD_Set_Cursor(2,10);
  2799  026A  300A               	movlw	10
  2800  026B  00B7               	movwf	??_mostrarLCD
  2801  026C  0837               	movf	??_mostrarLCD,w
  2802  026D  00F5               	movwf	LCD_Set_Cursor@columna
  2803  026E  3002               	movlw	2
  2804  026F  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2805                           
  2806                           ;main_Master.c: 421:             LCD_Write_Character(' ');
  2807  0274  3020               	movlw	32
  2808  0275  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  2809                           
  2810                           ;main_Master.c: 422:             LCD_Set_Cursor(2,15);
  2811  027A  300F               	movlw	15
  2812  027B  1283               	bcf	3,5	;RP0=0, select bank0
  2813  027C  1303               	bcf	3,6	;RP1=0, select bank0
  2814  027D  00B7               	movwf	??_mostrarLCD
  2815  027E  0837               	movf	??_mostrarLCD,w
  2816  027F  00F5               	movwf	LCD_Set_Cursor@columna
  2817  0280  3002               	movlw	2
  2818  0281  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2819                           
  2820                           ;main_Master.c: 423:             LCD_Write_Character(1);
  2821  0286  3001               	movlw	1
  2822  0287  120A  158A  2247   	fcall	_LCD_Write_Character
  2823                           
  2824                           ;main_Master.c: 424:             break;
  2825  028A  0008               	return
  2826  028B                     l4172:	
  2827                           
  2828                           ;main_Master.c: 426:             LCD_Set_Cursor(1,0);
  2829  028B  01F5               	clrf	LCD_Set_Cursor@columna
  2830  028C  3001               	movlw	1
  2831  028D  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2832                           
  2833                           ;main_Master.c: 427:             LCD_Write_String("Vamonos Perros!");
  2834  0292  303A               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2835  0293  120A  158A  22EB  120A  118A  	fcall	_LCD_Write_String
  2836                           
  2837                           ;main_Master.c: 429:             I2C_Master_Start();
  2838  0298  120A  158A  2216  120A  118A  	fcall	_I2C_Master_Start
  2839                           
  2840                           ;main_Master.c: 430:             I2C_Master_Write(0x30);
  2841  029D  3030               	movlw	48
  2842  029E  00F2               	movwf	I2C_Master_Write@d
  2843  029F  3000               	movlw	0
  2844  02A0  00F3               	movwf	I2C_Master_Write@d+1
  2845  02A1  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  2846                           
  2847                           ;main_Master.c: 431:             I2C_Master_Write(0x69);
  2848  02A6  3069               	movlw	105
  2849  02A7  00F2               	movwf	I2C_Master_Write@d
  2850  02A8  3000               	movlw	0
  2851  02A9  00F3               	movwf	I2C_Master_Write@d+1
  2852  02AA  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  2853                           
  2854                           ;main_Master.c: 432:             I2C_Master_Write(largo);
  2855  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2856  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2857  02B1  0845               	movf	_largo,w
  2858  02B2  00B7               	movwf	??_mostrarLCD
  2859  02B3  01B8               	clrf	??_mostrarLCD+1
  2860  02B4  0837               	movf	??_mostrarLCD,w
  2861  02B5  00F2               	movwf	I2C_Master_Write@d
  2862  02B6  0838               	movf	??_mostrarLCD+1,w
  2863  02B7  00F3               	movwf	I2C_Master_Write@d+1
  2864  02B8  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  2865                           
  2866                           ;main_Master.c: 433:             I2C_Master_Write(ancho);
  2867  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  2868  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  2869  02BF  0844               	movf	_ancho,w
  2870  02C0  00B7               	movwf	??_mostrarLCD
  2871  02C1  01B8               	clrf	??_mostrarLCD+1
  2872  02C2  0837               	movf	??_mostrarLCD,w
  2873  02C3  00F2               	movwf	I2C_Master_Write@d
  2874  02C4  0838               	movf	??_mostrarLCD+1,w
  2875  02C5  00F3               	movwf	I2C_Master_Write@d+1
  2876  02C6  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  2877                           
  2878                           ;main_Master.c: 434:             I2C_Master_Write(velocidad);
  2879  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  2880  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  2881  02CD  084A               	movf	_velocidad,w
  2882  02CE  00B7               	movwf	??_mostrarLCD
  2883  02CF  01B8               	clrf	??_mostrarLCD+1
  2884  02D0  0837               	movf	??_mostrarLCD,w
  2885  02D1  00F2               	movwf	I2C_Master_Write@d
  2886  02D2  0838               	movf	??_mostrarLCD+1,w
  2887  02D3  00F3               	movwf	I2C_Master_Write@d+1
  2888  02D4  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  2889                           
  2890                           ;main_Master.c: 435:             I2C_Master_Stop();
  2891  02D9  120A  158A  221D  120A  118A  	fcall	_I2C_Master_Stop
  2892                           
  2893                           ;main_Master.c: 437:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2894  02DE  3003               	movlw	3
  2895  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2896  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  2897  02E1  00B9               	movwf	??_mostrarLCD+2
  2898  02E2  308A               	movlw	138
  2899  02E3  00B8               	movwf	??_mostrarLCD+1
  2900  02E4  3055               	movlw	85
  2901  02E5  00B7               	movwf	??_mostrarLCD
  2902  02E6                     u1727:	
  2903  02E6  0BB7               	decfsz	??_mostrarLCD,f
  2904  02E7  2AE6               	goto	u1727
  2905  02E8  0BB8               	decfsz	??_mostrarLCD+1,f
  2906  02E9  2AE6               	goto	u1727
  2907  02EA  0BB9               	decfsz	??_mostrarLCD+2,f
  2908  02EB  2AE6               	goto	u1727
  2909                           
  2910                           ;main_Master.c: 438:             LCD_clear();
  2911  02EC  120A  158A  229E   	fcall	_LCD_clear
  2912                           
  2913                           ;main_Master.c: 439:             estado = 0;
  2914  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2915  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2916  02F1  01CC               	clrf	_estado
  2917                           
  2918                           ;main_Master.c: 440:             break;
  2919  02F2  0008               	return
  2920  02F3                     l4194:	
  2921                           
  2922                           ;main_Master.c: 442:             LCD_Set_Cursor(1,9);
  2923  02F3  3009               	movlw	9
  2924  02F4  00B7               	movwf	??_mostrarLCD
  2925  02F5  0837               	movf	??_mostrarLCD,w
  2926  02F6  00F5               	movwf	LCD_Set_Cursor@columna
  2927  02F7  3001               	movlw	1
  2928  02F8  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  2929                           
  2930                           ;main_Master.c: 443:             LCD_Write_String("ERROR");
  2931  02FD  309F               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2932  02FE  120A  158A  22EB   	fcall	_LCD_Write_String
  2933                           
  2934                           ;main_Master.c: 444:     }
  2935  0301  0008               	return
  2936  0302                     l4196:	
  2937  0302  083A               	movf	mostrarLCD@pantalla,w
  2938  0303  00B7               	movwf	??_mostrarLCD
  2939  0304  01B8               	clrf	??_mostrarLCD+1
  2940                           
  2941                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2942                           ; Switch size 1, requested type "simple"
  2943                           ; Number of cases is 1, Range of values is 0 to 0
  2944                           ; switch strategies available:
  2945                           ; Name         Instructions Cycles
  2946                           ; simple_byte            4     3 (average)
  2947                           ; direct_byte           11     8 (fixed)
  2948                           ; jumptable            260     6 (fixed)
  2949                           ;	Chosen strategy is simple_byte
  2950  0305  0838               	movf	??_mostrarLCD+1,w
  2951  0306  3A00               	xorlw	0	; case 0
  2952  0307  1903               	skipnz
  2953  0308  2B0A               	goto	l4734
  2954  0309  2AF3               	goto	l4194
  2955  030A                     l4734:	
  2956                           
  2957                           ; Switch size 1, requested type "simple"
  2958                           ; Number of cases is 11, Range of values is 0 to 10
  2959                           ; switch strategies available:
  2960                           ; Name         Instructions Cycles
  2961                           ; simple_byte           34    18 (average)
  2962                           ; direct_byte           41     8 (fixed)
  2963                           ; jumptable            260     6 (fixed)
  2964                           ;	Chosen strategy is simple_byte
  2965  030A  0837               	movf	??_mostrarLCD,w
  2966  030B  3A00               	xorlw	0	; case 0
  2967  030C  1903               	skipnz
  2968  030D  282D               	goto	l4038
  2969  030E  3A01               	xorlw	1	; case 1
  2970  030F  1903               	skipnz
  2971  0310  2842               	goto	l4040
  2972  0311  3A03               	xorlw	3	; case 2
  2973  0312  1903               	skipnz
  2974  0313  291B               	goto	l4078
  2975  0314  3A01               	xorlw	1	; case 3
  2976  0315  1903               	skipnz
  2977  0316  293F               	goto	l4086
  2978  0317  3A07               	xorlw	7	; case 4
  2979  0318  1903               	skipnz
  2980  0319  2975               	goto	l4102
  2981  031A  3A01               	xorlw	1	; case 5
  2982  031B  1903               	skipnz
  2983  031C  29C3               	goto	l4138
  2984  031D  3A03               	xorlw	3	; case 6
  2985  031E  1903               	skipnz
  2986  031F  2A04               	goto	l4148
  2987  0320  3A01               	xorlw	1	; case 7
  2988  0321  1903               	skipnz
  2989  0322  2A19               	goto	l4154
  2990  0323  3A0F               	xorlw	15	; case 8
  2991  0324  1903               	skipnz
  2992  0325  2A40               	goto	l4160
  2993  0326  3A01               	xorlw	1	; case 9
  2994  0327  1903               	skipnz
  2995  0328  2A6A               	goto	l4166
  2996  0329  3A03               	xorlw	3	; case 10
  2997  032A  1903               	skipnz
  2998  032B  2A8B               	goto	l4172
  2999  032C  2AF3               	goto	l4194
  3000  032D  0008               	return
  3001  032E                     __end_of_mostrarLCD:	
  3002                           
  3003                           	psect	text5
  3004  0DA0                     __ptext5:	
  3005 ;; *************** function _uint_to_array *****************
  3006 ;; Defined at:
  3007 ;;		line 181 in file "LCD_8bits.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;  numero          1    wreg     unsigned char 
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;  numero          1   22[BANK0 ] unsigned char 
  3012 ;;  resultado       6   16[BANK0 ] unsigned int [3]
  3013 ;;  centenas        1   15[BANK0 ] unsigned char 
  3014 ;;  decenas         1   14[BANK0 ] unsigned char 
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      PTR unsigned int 
  3017 ;; Registers used:
  3018 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3024 ;;      Params:         0       0       0       0       0
  3025 ;;      Locals:         0       9       0       0       0
  3026 ;;      Temps:          0       6       0       0       0
  3027 ;;      Totals:         0      15       0       0       0
  3028 ;;Total ram usage:       15 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    2
  3031 ;; This function calls:
  3032 ;;		___awdiv
  3033 ;;		___wmul
  3034 ;; This function is called by:
  3035 ;;		_mostrarLCD
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           
  3040                           ;psect for function _uint_to_array
  3041  0DA0                     _uint_to_array:	
  3042                           
  3043                           ;incstack = 0
  3044                           ; Regs used in _uint_to_array: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3045                           ;uint_to_array@numero stored from wreg
  3046  0DA0  1283               	bcf	3,5	;RP0=0, select bank0
  3047  0DA1  1303               	bcf	3,6	;RP1=0, select bank0
  3048  0DA2  00B6               	movwf	uint_to_array@numero
  3049                           
  3050                           ;LCD_8bits.c: 182:     uint16_t resultado[3] = {0,0,0};
  3051  0DA3  3030               	movlw	uint_to_array@resultado& (0+255)
  3052  0DA4  0084               	movwf	4
  3053  0DA5  3006               	movlw	6
  3054  0DA6  00FF               	movwf	127
  3055  0DA7                     u1540:	
  3056  0DA7  1383               	bcf	3,7	;select IRP bank0
  3057  0DA8  0180               	clrf	0
  3058  0DA9  0A84               	incf	4,f
  3059  0DAA  0BFF               	decfsz	127,f
  3060  0DAB  2DA7               	goto	u1540
  3061                           
  3062                           ;LCD_8bits.c: 183:     resultado[0] = numero/100;
  3063  0DAC  3064               	movlw	100
  3064  0DAD  00A0               	movwf	___awdiv@divisor
  3065  0DAE  3000               	movlw	0
  3066  0DAF  00A1               	movwf	___awdiv@divisor+1
  3067  0DB0  0836               	movf	uint_to_array@numero,w
  3068  0DB1  00A8               	movwf	??_uint_to_array
  3069  0DB2  01A9               	clrf	??_uint_to_array+1
  3070  0DB3  0828               	movf	??_uint_to_array,w
  3071  0DB4  00A2               	movwf	___awdiv@dividend
  3072  0DB5  0829               	movf	??_uint_to_array+1,w
  3073  0DB6  00A3               	movwf	___awdiv@dividend+1
  3074  0DB7  120A  118A  26A4  120A  158A  	fcall	___awdiv
  3075  0DBC  1283               	bcf	3,5	;RP0=0, select bank0
  3076  0DBD  1303               	bcf	3,6	;RP1=0, select bank0
  3077  0DBE  0821               	movf	?___awdiv+1,w
  3078  0DBF  00B1               	movwf	uint_to_array@resultado+1
  3079  0DC0  0820               	movf	?___awdiv,w
  3080  0DC1  00B0               	movwf	uint_to_array@resultado
  3081                           
  3082                           ;LCD_8bits.c: 184:     uint8_t centenas = resultado[0];
  3083  0DC2  0830               	movf	uint_to_array@resultado,w
  3084  0DC3  00A8               	movwf	??_uint_to_array
  3085  0DC4  0828               	movf	??_uint_to_array,w
  3086  0DC5  00AF               	movwf	uint_to_array@centenas
  3087                           
  3088                           ;LCD_8bits.c: 185:     resultado[1] = (numero - (centenas *100))/10;
  3089  0DC6  300A               	movlw	10
  3090  0DC7  00A0               	movwf	___awdiv@divisor
  3091  0DC8  3000               	movlw	0
  3092  0DC9  00A1               	movwf	___awdiv@divisor+1
  3093  0DCA  082F               	movf	uint_to_array@centenas,w
  3094  0DCB  00A8               	movwf	??_uint_to_array
  3095  0DCC  01A9               	clrf	??_uint_to_array+1
  3096  0DCD  0828               	movf	??_uint_to_array,w
  3097  0DCE  00F2               	movwf	___wmul@multiplier
  3098  0DCF  0829               	movf	??_uint_to_array+1,w
  3099  0DD0  00F3               	movwf	___wmul@multiplier+1
  3100  0DD1  309C               	movlw	156
  3101  0DD2  00F4               	movwf	___wmul@multiplicand
  3102  0DD3  30FF               	movlw	255
  3103  0DD4  00F5               	movwf	___wmul@multiplicand+1
  3104  0DD5  120A  158A  22CA  120A  158A  	fcall	___wmul
  3105  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  3106  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  3107  0DDC  0836               	movf	uint_to_array@numero,w
  3108  0DDD  0772               	addwf	?___wmul,w
  3109  0DDE  00A2               	movwf	___awdiv@dividend
  3110  0DDF  0873               	movf	?___wmul+1,w
  3111  0DE0  1803               	skipnc
  3112  0DE1  0A73               	incf	?___wmul+1,w
  3113  0DE2  00A3               	movwf	___awdiv@dividend+1
  3114  0DE3  120A  118A  26A4  120A  158A  	fcall	___awdiv
  3115  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3116  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3117  0DEA  0821               	movf	?___awdiv+1,w
  3118  0DEB  00B3               	movwf	uint_to_array@resultado+3
  3119  0DEC  0820               	movf	?___awdiv,w
  3120  0DED  00B2               	movwf	uint_to_array@resultado+2
  3121                           
  3122                           ;LCD_8bits.c: 186:     uint8_t decenas = resultado[1];
  3123  0DEE  0832               	movf	uint_to_array@resultado+2,w
  3124  0DEF  00A8               	movwf	??_uint_to_array
  3125  0DF0  0828               	movf	??_uint_to_array,w
  3126  0DF1  00AE               	movwf	uint_to_array@decenas
  3127                           
  3128                           ;LCD_8bits.c: 187:     resultado[2] = numero -(centenas*100+decenas*10);
  3129  0DF2  082F               	movf	uint_to_array@centenas,w
  3130  0DF3  00A8               	movwf	??_uint_to_array
  3131  0DF4  01A9               	clrf	??_uint_to_array+1
  3132  0DF5  0828               	movf	??_uint_to_array,w
  3133  0DF6  00F2               	movwf	___wmul@multiplier
  3134  0DF7  0829               	movf	??_uint_to_array+1,w
  3135  0DF8  00F3               	movwf	___wmul@multiplier+1
  3136  0DF9  309C               	movlw	156
  3137  0DFA  00F4               	movwf	___wmul@multiplicand
  3138  0DFB  30FF               	movlw	255
  3139  0DFC  00F5               	movwf	___wmul@multiplicand+1
  3140  0DFD  120A  158A  22CA  120A  158A  	fcall	___wmul
  3141  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  3142  0E03  1303               	bcf	3,6	;RP1=0, select bank0
  3143  0E04  0836               	movf	uint_to_array@numero,w
  3144  0E05  0772               	addwf	?___wmul,w
  3145  0E06  00AA               	movwf	??_uint_to_array+2
  3146  0E07  0873               	movf	?___wmul+1,w
  3147  0E08  1803               	skipnc
  3148  0E09  0A73               	incf	?___wmul+1,w
  3149  0E0A  00AB               	movwf	??_uint_to_array+3
  3150  0E0B  082E               	movf	uint_to_array@decenas,w
  3151  0E0C  00AC               	movwf	??_uint_to_array+4
  3152  0E0D  01AD               	clrf	??_uint_to_array+5
  3153  0E0E  082C               	movf	??_uint_to_array+4,w
  3154  0E0F  00F2               	movwf	___wmul@multiplier
  3155  0E10  082D               	movf	??_uint_to_array+5,w
  3156  0E11  00F3               	movwf	___wmul@multiplier+1
  3157  0E12  30F6               	movlw	246
  3158  0E13  00F4               	movwf	___wmul@multiplicand
  3159  0E14  30FF               	movlw	255
  3160  0E15  00F5               	movwf	___wmul@multiplicand+1
  3161  0E16  120A  158A  22CA   	fcall	___wmul
  3162  0E19  0872               	movf	?___wmul,w
  3163  0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  3164  0E1B  1303               	bcf	3,6	;RP1=0, select bank0
  3165  0E1C  072A               	addwf	??_uint_to_array+2,w
  3166  0E1D  00B4               	movwf	uint_to_array@resultado+4
  3167  0E1E  0873               	movf	?___wmul+1,w
  3168  0E1F  1803               	skipnc
  3169  0E20  0A73               	incf	?___wmul+1,w
  3170  0E21  072B               	addwf	??_uint_to_array+3,w
  3171  0E22  00B5               	movwf	uint_to_array@resultado+5
  3172                           
  3173                           ;LCD_8bits.c: 188:     return(resultado);
  3174  0E23  3030               	movlw	(low (uint_to_array@resultado| 0))& (0+255)
  3175  0E24  0008               	return
  3176  0E25                     __end_of_uint_to_array:	
  3177                           
  3178                           	psect	text6
  3179  0ACA                     __ptext6:	
  3180 ;; *************** function ___wmul *****************
  3181 ;; Defined at:
  3182 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;  multiplier      2    2[COMMON] unsigned int 
  3185 ;;  multiplicand    2    4[COMMON] unsigned int 
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;  product         2    6[COMMON] unsigned int 
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  2    2[COMMON] unsigned int 
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, status,0
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3197 ;;      Params:         4       0       0       0       0
  3198 ;;      Locals:         2       0       0       0       0
  3199 ;;      Temps:          0       0       0       0       0
  3200 ;;      Totals:         6       0       0       0       0
  3201 ;;Total ram usage:        6 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; Hardware stack levels required when called:    1
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_uint_to_array
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           
  3212                           ;psect for function ___wmul
  3213  0ACA                     ___wmul:	
  3214                           
  3215                           ;incstack = 0
  3216                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3217  0ACA  01F6               	clrf	___wmul@product
  3218  0ACB  01F7               	clrf	___wmul@product+1
  3219  0ACC                     l2546:	
  3220  0ACC  1C72               	btfss	___wmul@multiplier,0
  3221  0ACD  2AD4               	goto	l562
  3222  0ACE  0874               	movf	___wmul@multiplicand,w
  3223  0ACF  07F6               	addwf	___wmul@product,f
  3224  0AD0  1803               	skipnc
  3225  0AD1  0AF7               	incf	___wmul@product+1,f
  3226  0AD2  0875               	movf	___wmul@multiplicand+1,w
  3227  0AD3  07F7               	addwf	___wmul@product+1,f
  3228  0AD4                     l562:	
  3229  0AD4  3001               	movlw	1
  3230  0AD5                     u765:	
  3231  0AD5  1003               	clrc
  3232  0AD6  0DF4               	rlf	___wmul@multiplicand,f
  3233  0AD7  0DF5               	rlf	___wmul@multiplicand+1,f
  3234  0AD8  3EFF               	addlw	-1
  3235  0AD9  1D03               	skipz
  3236  0ADA  2AD5               	goto	u765
  3237  0ADB  3001               	movlw	1
  3238  0ADC                     u775:	
  3239  0ADC  1003               	clrc
  3240  0ADD  0CF3               	rrf	___wmul@multiplier+1,f
  3241  0ADE  0CF2               	rrf	___wmul@multiplier,f
  3242  0ADF  3EFF               	addlw	-1
  3243  0AE0  1D03               	skipz
  3244  0AE1  2ADC               	goto	u775
  3245  0AE2  0872               	movf	___wmul@multiplier,w
  3246  0AE3  0473               	iorwf	___wmul@multiplier+1,w
  3247  0AE4  1D03               	btfss	3,2
  3248  0AE5  2ACC               	goto	l2546
  3249  0AE6  0877               	movf	___wmul@product+1,w
  3250  0AE7  00F3               	movwf	?___wmul+1
  3251  0AE8  0876               	movf	___wmul@product,w
  3252  0AE9  00F2               	movwf	?___wmul
  3253  0AEA  0008               	return
  3254  0AEB                     __end_of___wmul:	
  3255                           
  3256                           	psect	text7
  3257  05D2                     __ptext7:	
  3258 ;; *************** function _display_Uhrzeit *****************
  3259 ;; Defined at:
  3260 ;;		line 229 in file "main_Master.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  fila            1    wreg     unsigned char 
  3263 ;;  columna         1    8[BANK0 ] unsigned char 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  fila            1   12[BANK0 ] unsigned char 
  3266 ;;  Uhr_d           1   18[BANK0 ] unsigned char 
  3267 ;;  Uhr_u           1   17[BANK0 ] unsigned char 
  3268 ;;  min_d           1   16[BANK0 ] unsigned char 
  3269 ;;  min_u           1   15[BANK0 ] unsigned char 
  3270 ;;  seg_d           1   14[BANK0 ] unsigned char 
  3271 ;;  seg_u           1   13[BANK0 ] unsigned char 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  1    wreg      void 
  3274 ;; Registers used:
  3275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3281 ;;      Params:         0       1       0       0       0
  3282 ;;      Locals:         0       7       0       0       0
  3283 ;;      Temps:          0       3       0       0       0
  3284 ;;      Totals:         0      11       0       0       0
  3285 ;;Total ram usage:       11 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    3
  3288 ;; This function calls:
  3289 ;;		_LCD_Set_Cursor
  3290 ;;		_LCD_Write_Character
  3291 ;;		___awdiv
  3292 ;;		___awmod
  3293 ;; This function is called by:
  3294 ;;		_mostrarLCD
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           
  3299                           ;psect for function _display_Uhrzeit
  3300  05D2                     _display_Uhrzeit:	
  3301                           
  3302                           ;incstack = 0
  3303                           ; Regs used in _display_Uhrzeit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3304                           ;display_Uhrzeit@fila stored from wreg
  3305  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  3306  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  3307  05D4  00AC               	movwf	display_Uhrzeit@fila
  3308                           
  3309                           ;main_Master.c: 230:     char seg_u = seg%10;
  3310  05D5  300A               	movlw	10
  3311  05D6  00F2               	movwf	___awmod@divisor
  3312  05D7  3000               	movlw	0
  3313  05D8  00F3               	movwf	___awmod@divisor+1
  3314  05D9  084B               	movf	_seg,w
  3315  05DA  00A9               	movwf	??_display_Uhrzeit
  3316  05DB  01AA               	clrf	??_display_Uhrzeit+1
  3317  05DC  0829               	movf	??_display_Uhrzeit,w
  3318  05DD  00F4               	movwf	___awmod@dividend
  3319  05DE  082A               	movf	??_display_Uhrzeit+1,w
  3320  05DF  00F5               	movwf	___awmod@dividend+1
  3321  05E0  120A  158A  23C0  120A  118A  	fcall	___awmod
  3322  05E5  0872               	movf	?___awmod,w
  3323  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  3324  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  3325  05E8  00AB               	movwf	??_display_Uhrzeit+2
  3326  05E9  082B               	movf	??_display_Uhrzeit+2,w
  3327  05EA  00AD               	movwf	display_Uhrzeit@seg_u
  3328                           
  3329                           ;main_Master.c: 231:     char seg_d = seg/10;
  3330  05EB  300A               	movlw	10
  3331  05EC  00A0               	movwf	___awdiv@divisor
  3332  05ED  3000               	movlw	0
  3333  05EE  00A1               	movwf	___awdiv@divisor+1
  3334  05EF  084B               	movf	_seg,w
  3335  05F0  00A9               	movwf	??_display_Uhrzeit
  3336  05F1  01AA               	clrf	??_display_Uhrzeit+1
  3337  05F2  0829               	movf	??_display_Uhrzeit,w
  3338  05F3  00A2               	movwf	___awdiv@dividend
  3339  05F4  082A               	movf	??_display_Uhrzeit+1,w
  3340  05F5  00A3               	movwf	___awdiv@dividend+1
  3341  05F6  120A  118A  26A4  120A  118A  	fcall	___awdiv
  3342  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  3343  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  3344  05FD  0820               	movf	?___awdiv,w
  3345  05FE  00AB               	movwf	??_display_Uhrzeit+2
  3346  05FF  082B               	movf	??_display_Uhrzeit+2,w
  3347  0600  00AE               	movwf	display_Uhrzeit@seg_d
  3348                           
  3349                           ;main_Master.c: 232:     char min_u = min%10;
  3350  0601  300A               	movlw	10
  3351  0602  00F2               	movwf	___awmod@divisor
  3352  0603  3000               	movlw	0
  3353  0604  00F3               	movwf	___awmod@divisor+1
  3354  0605  0856               	movf	_min,w
  3355  0606  00A9               	movwf	??_display_Uhrzeit
  3356  0607  01AA               	clrf	??_display_Uhrzeit+1
  3357  0608  0829               	movf	??_display_Uhrzeit,w
  3358  0609  00F4               	movwf	___awmod@dividend
  3359  060A  082A               	movf	??_display_Uhrzeit+1,w
  3360  060B  00F5               	movwf	___awmod@dividend+1
  3361  060C  120A  158A  23C0  120A  118A  	fcall	___awmod
  3362  0611  0872               	movf	?___awmod,w
  3363  0612  1283               	bcf	3,5	;RP0=0, select bank0
  3364  0613  1303               	bcf	3,6	;RP1=0, select bank0
  3365  0614  00AB               	movwf	??_display_Uhrzeit+2
  3366  0615  082B               	movf	??_display_Uhrzeit+2,w
  3367  0616  00AF               	movwf	display_Uhrzeit@min_u
  3368                           
  3369                           ;main_Master.c: 233:     char min_d = min/10;
  3370  0617  300A               	movlw	10
  3371  0618  00A0               	movwf	___awdiv@divisor
  3372  0619  3000               	movlw	0
  3373  061A  00A1               	movwf	___awdiv@divisor+1
  3374  061B  0856               	movf	_min,w
  3375  061C  00A9               	movwf	??_display_Uhrzeit
  3376  061D  01AA               	clrf	??_display_Uhrzeit+1
  3377  061E  0829               	movf	??_display_Uhrzeit,w
  3378  061F  00A2               	movwf	___awdiv@dividend
  3379  0620  082A               	movf	??_display_Uhrzeit+1,w
  3380  0621  00A3               	movwf	___awdiv@dividend+1
  3381  0622  120A  118A  26A4  120A  118A  	fcall	___awdiv
  3382  0627  1283               	bcf	3,5	;RP0=0, select bank0
  3383  0628  1303               	bcf	3,6	;RP1=0, select bank0
  3384  0629  0820               	movf	?___awdiv,w
  3385  062A  00AB               	movwf	??_display_Uhrzeit+2
  3386  062B  082B               	movf	??_display_Uhrzeit+2,w
  3387  062C  00B0               	movwf	display_Uhrzeit@min_d
  3388                           
  3389                           ;main_Master.c: 234:     char Uhr_u = hora%10;
  3390  062D  300A               	movlw	10
  3391  062E  00F2               	movwf	___awmod@divisor
  3392  062F  3000               	movlw	0
  3393  0630  00F3               	movwf	___awmod@divisor+1
  3394  0631  0855               	movf	_hora,w
  3395  0632  00A9               	movwf	??_display_Uhrzeit
  3396  0633  01AA               	clrf	??_display_Uhrzeit+1
  3397  0634  0829               	movf	??_display_Uhrzeit,w
  3398  0635  00F4               	movwf	___awmod@dividend
  3399  0636  082A               	movf	??_display_Uhrzeit+1,w
  3400  0637  00F5               	movwf	___awmod@dividend+1
  3401  0638  120A  158A  23C0  120A  118A  	fcall	___awmod
  3402  063D  0872               	movf	?___awmod,w
  3403  063E  1283               	bcf	3,5	;RP0=0, select bank0
  3404  063F  1303               	bcf	3,6	;RP1=0, select bank0
  3405  0640  00AB               	movwf	??_display_Uhrzeit+2
  3406  0641  082B               	movf	??_display_Uhrzeit+2,w
  3407  0642  00B1               	movwf	display_Uhrzeit@Uhr_u
  3408                           
  3409                           ;main_Master.c: 235:     char Uhr_d = hora/10;
  3410  0643  300A               	movlw	10
  3411  0644  00A0               	movwf	___awdiv@divisor
  3412  0645  3000               	movlw	0
  3413  0646  00A1               	movwf	___awdiv@divisor+1
  3414  0647  0855               	movf	_hora,w
  3415  0648  00A9               	movwf	??_display_Uhrzeit
  3416  0649  01AA               	clrf	??_display_Uhrzeit+1
  3417  064A  0829               	movf	??_display_Uhrzeit,w
  3418  064B  00A2               	movwf	___awdiv@dividend
  3419  064C  082A               	movf	??_display_Uhrzeit+1,w
  3420  064D  00A3               	movwf	___awdiv@dividend+1
  3421  064E  120A  118A  26A4  120A  118A  	fcall	___awdiv
  3422  0653  1283               	bcf	3,5	;RP0=0, select bank0
  3423  0654  1303               	bcf	3,6	;RP1=0, select bank0
  3424  0655  0820               	movf	?___awdiv,w
  3425  0656  00AB               	movwf	??_display_Uhrzeit+2
  3426  0657  082B               	movf	??_display_Uhrzeit+2,w
  3427  0658  00B2               	movwf	display_Uhrzeit@Uhr_d
  3428                           
  3429                           ;main_Master.c: 237:     LCD_Set_Cursor(fila, columna);
  3430  0659  0828               	movf	display_Uhrzeit@columna,w
  3431  065A  00A9               	movwf	??_display_Uhrzeit
  3432  065B  0829               	movf	??_display_Uhrzeit,w
  3433  065C  00F5               	movwf	LCD_Set_Cursor@columna
  3434  065D  082C               	movf	display_Uhrzeit@fila,w
  3435  065E  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  3436                           
  3437                           ;main_Master.c: 238:     LCD_Write_Character(Uhr_d + '0');
  3438  0663  1283               	bcf	3,5	;RP0=0, select bank0
  3439  0664  1303               	bcf	3,6	;RP1=0, select bank0
  3440  0665  0832               	movf	display_Uhrzeit@Uhr_d,w
  3441  0666  3E30               	addlw	48
  3442  0667  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  3443                           
  3444                           ;main_Master.c: 239:     LCD_Write_Character(Uhr_u + '0');
  3445  066C  1283               	bcf	3,5	;RP0=0, select bank0
  3446  066D  1303               	bcf	3,6	;RP1=0, select bank0
  3447  066E  0831               	movf	display_Uhrzeit@Uhr_u,w
  3448  066F  3E30               	addlw	48
  3449  0670  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  3450                           
  3451                           ;main_Master.c: 240:     LCD_Write_Character(':');
  3452  0675  303A               	movlw	58
  3453  0676  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  3454                           
  3455                           ;main_Master.c: 241:     LCD_Write_Character(min_d + '0');
  3456  067B  1283               	bcf	3,5	;RP0=0, select bank0
  3457  067C  1303               	bcf	3,6	;RP1=0, select bank0
  3458  067D  0830               	movf	display_Uhrzeit@min_d,w
  3459  067E  3E30               	addlw	48
  3460  067F  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  3461                           
  3462                           ;main_Master.c: 242:     LCD_Write_Character(min_u + '0');
  3463  0684  1283               	bcf	3,5	;RP0=0, select bank0
  3464  0685  1303               	bcf	3,6	;RP1=0, select bank0
  3465  0686  082F               	movf	display_Uhrzeit@min_u,w
  3466  0687  3E30               	addlw	48
  3467  0688  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  3468                           
  3469                           ;main_Master.c: 243:     LCD_Write_Character(':');
  3470  068D  303A               	movlw	58
  3471  068E  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  3472                           
  3473                           ;main_Master.c: 244:     LCD_Write_Character(seg_d + '0');
  3474  0693  1283               	bcf	3,5	;RP0=0, select bank0
  3475  0694  1303               	bcf	3,6	;RP1=0, select bank0
  3476  0695  082E               	movf	display_Uhrzeit@seg_d,w
  3477  0696  3E30               	addlw	48
  3478  0697  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  3479                           
  3480                           ;main_Master.c: 245:     LCD_Write_Character(seg_u + '0');
  3481  069C  1283               	bcf	3,5	;RP0=0, select bank0
  3482  069D  1303               	bcf	3,6	;RP1=0, select bank0
  3483  069E  082D               	movf	display_Uhrzeit@seg_u,w
  3484  069F  3E30               	addlw	48
  3485  06A0  120A  158A  2247   	fcall	_LCD_Write_Character
  3486  06A3  0008               	return
  3487  06A4                     __end_of_display_Uhrzeit:	
  3488                           
  3489                           	psect	text8
  3490  04FA                     __ptext8:	
  3491 ;; *************** function _display_Datum *****************
  3492 ;; Defined at:
  3493 ;;		line 249 in file "main_Master.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  fila            1    wreg     unsigned char 
  3496 ;;  columna         1    8[BANK0 ] unsigned char 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  fila            1   12[BANK0 ] unsigned char 
  3499 ;;  jahr_d          1   18[BANK0 ] unsigned char 
  3500 ;;  jahr_u          1   17[BANK0 ] unsigned char 
  3501 ;;  mes_d           1   16[BANK0 ] unsigned char 
  3502 ;;  mes_u           1   15[BANK0 ] unsigned char 
  3503 ;;  dia_d           1   14[BANK0 ] unsigned char 
  3504 ;;  dia_u           1   13[BANK0 ] unsigned char 
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  1    wreg      void 
  3507 ;; Registers used:
  3508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3514 ;;      Params:         0       1       0       0       0
  3515 ;;      Locals:         0       7       0       0       0
  3516 ;;      Temps:          0       3       0       0       0
  3517 ;;      Totals:         0      11       0       0       0
  3518 ;;Total ram usage:       11 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; Hardware stack levels required when called:    3
  3521 ;; This function calls:
  3522 ;;		_LCD_Set_Cursor
  3523 ;;		_LCD_Write_Character
  3524 ;;		_LCD_Write_String
  3525 ;;		___awdiv
  3526 ;;		___awmod
  3527 ;; This function is called by:
  3528 ;;		_mostrarLCD
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           
  3533                           ;psect for function _display_Datum
  3534  04FA                     _display_Datum:	
  3535                           
  3536                           ;incstack = 0
  3537                           ; Regs used in _display_Datum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3538                           ;display_Datum@fila stored from wreg
  3539  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  3540  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  3541  04FC  00AC               	movwf	display_Datum@fila
  3542                           
  3543                           ;main_Master.c: 250:     char dia_u = datum%10;
  3544  04FD  300A               	movlw	10
  3545  04FE  00F2               	movwf	___awmod@divisor
  3546  04FF  3000               	movlw	0
  3547  0500  00F3               	movwf	___awmod@divisor+1
  3548  0501  0853               	movf	_datum,w
  3549  0502  00A9               	movwf	??_display_Datum
  3550  0503  01AA               	clrf	??_display_Datum+1
  3551  0504  0829               	movf	??_display_Datum,w
  3552  0505  00F4               	movwf	___awmod@dividend
  3553  0506  082A               	movf	??_display_Datum+1,w
  3554  0507  00F5               	movwf	___awmod@dividend+1
  3555  0508  120A  158A  23C0  120A  118A  	fcall	___awmod
  3556  050D  0872               	movf	?___awmod,w
  3557  050E  1283               	bcf	3,5	;RP0=0, select bank0
  3558  050F  1303               	bcf	3,6	;RP1=0, select bank0
  3559  0510  00AB               	movwf	??_display_Datum+2
  3560  0511  082B               	movf	??_display_Datum+2,w
  3561  0512  00AD               	movwf	display_Datum@dia_u
  3562                           
  3563                           ;main_Master.c: 251:     char dia_d = datum/10;
  3564  0513  300A               	movlw	10
  3565  0514  00A0               	movwf	___awdiv@divisor
  3566  0515  3000               	movlw	0
  3567  0516  00A1               	movwf	___awdiv@divisor+1
  3568  0517  0853               	movf	_datum,w
  3569  0518  00A9               	movwf	??_display_Datum
  3570  0519  01AA               	clrf	??_display_Datum+1
  3571  051A  0829               	movf	??_display_Datum,w
  3572  051B  00A2               	movwf	___awdiv@dividend
  3573  051C  082A               	movf	??_display_Datum+1,w
  3574  051D  00A3               	movwf	___awdiv@dividend+1
  3575  051E  120A  118A  26A4  120A  118A  	fcall	___awdiv
  3576  0523  1283               	bcf	3,5	;RP0=0, select bank0
  3577  0524  1303               	bcf	3,6	;RP1=0, select bank0
  3578  0525  0820               	movf	?___awdiv,w
  3579  0526  00AB               	movwf	??_display_Datum+2
  3580  0527  082B               	movf	??_display_Datum+2,w
  3581  0528  00AE               	movwf	display_Datum@dia_d
  3582                           
  3583                           ;main_Master.c: 252:     char mes_u = mes%10;
  3584  0529  300A               	movlw	10
  3585  052A  00F2               	movwf	___awmod@divisor
  3586  052B  3000               	movlw	0
  3587  052C  00F3               	movwf	___awmod@divisor+1
  3588  052D  0852               	movf	_mes,w
  3589  052E  00A9               	movwf	??_display_Datum
  3590  052F  01AA               	clrf	??_display_Datum+1
  3591  0530  0829               	movf	??_display_Datum,w
  3592  0531  00F4               	movwf	___awmod@dividend
  3593  0532  082A               	movf	??_display_Datum+1,w
  3594  0533  00F5               	movwf	___awmod@dividend+1
  3595  0534  120A  158A  23C0  120A  118A  	fcall	___awmod
  3596  0539  0872               	movf	?___awmod,w
  3597  053A  1283               	bcf	3,5	;RP0=0, select bank0
  3598  053B  1303               	bcf	3,6	;RP1=0, select bank0
  3599  053C  00AB               	movwf	??_display_Datum+2
  3600  053D  082B               	movf	??_display_Datum+2,w
  3601  053E  00AF               	movwf	display_Datum@mes_u
  3602                           
  3603                           ;main_Master.c: 253:     char mes_d = mes/10;
  3604  053F  300A               	movlw	10
  3605  0540  00A0               	movwf	___awdiv@divisor
  3606  0541  3000               	movlw	0
  3607  0542  00A1               	movwf	___awdiv@divisor+1
  3608  0543  0852               	movf	_mes,w
  3609  0544  00A9               	movwf	??_display_Datum
  3610  0545  01AA               	clrf	??_display_Datum+1
  3611  0546  0829               	movf	??_display_Datum,w
  3612  0547  00A2               	movwf	___awdiv@dividend
  3613  0548  082A               	movf	??_display_Datum+1,w
  3614  0549  00A3               	movwf	___awdiv@dividend+1
  3615  054A  120A  118A  26A4  120A  118A  	fcall	___awdiv
  3616  054F  1283               	bcf	3,5	;RP0=0, select bank0
  3617  0550  1303               	bcf	3,6	;RP1=0, select bank0
  3618  0551  0820               	movf	?___awdiv,w
  3619  0552  00AB               	movwf	??_display_Datum+2
  3620  0553  082B               	movf	??_display_Datum+2,w
  3621  0554  00B0               	movwf	display_Datum@mes_d
  3622                           
  3623                           ;main_Master.c: 254:     char jahr_u = jahr%10;
  3624  0555  300A               	movlw	10
  3625  0556  00F2               	movwf	___awmod@divisor
  3626  0557  3000               	movlw	0
  3627  0558  00F3               	movwf	___awmod@divisor+1
  3628  0559  0851               	movf	_jahr,w
  3629  055A  00A9               	movwf	??_display_Datum
  3630  055B  01AA               	clrf	??_display_Datum+1
  3631  055C  0829               	movf	??_display_Datum,w
  3632  055D  00F4               	movwf	___awmod@dividend
  3633  055E  082A               	movf	??_display_Datum+1,w
  3634  055F  00F5               	movwf	___awmod@dividend+1
  3635  0560  120A  158A  23C0  120A  118A  	fcall	___awmod
  3636  0565  0872               	movf	?___awmod,w
  3637  0566  1283               	bcf	3,5	;RP0=0, select bank0
  3638  0567  1303               	bcf	3,6	;RP1=0, select bank0
  3639  0568  00AB               	movwf	??_display_Datum+2
  3640  0569  082B               	movf	??_display_Datum+2,w
  3641  056A  00B1               	movwf	display_Datum@jahr_u
  3642                           
  3643                           ;main_Master.c: 255:     char jahr_d = jahr/10;
  3644  056B  300A               	movlw	10
  3645  056C  00A0               	movwf	___awdiv@divisor
  3646  056D  3000               	movlw	0
  3647  056E  00A1               	movwf	___awdiv@divisor+1
  3648  056F  0851               	movf	_jahr,w
  3649  0570  00A9               	movwf	??_display_Datum
  3650  0571  01AA               	clrf	??_display_Datum+1
  3651  0572  0829               	movf	??_display_Datum,w
  3652  0573  00A2               	movwf	___awdiv@dividend
  3653  0574  082A               	movf	??_display_Datum+1,w
  3654  0575  00A3               	movwf	___awdiv@dividend+1
  3655  0576  120A  118A  26A4  120A  118A  	fcall	___awdiv
  3656  057B  1283               	bcf	3,5	;RP0=0, select bank0
  3657  057C  1303               	bcf	3,6	;RP1=0, select bank0
  3658  057D  0820               	movf	?___awdiv,w
  3659  057E  00AB               	movwf	??_display_Datum+2
  3660  057F  082B               	movf	??_display_Datum+2,w
  3661  0580  00B2               	movwf	display_Datum@jahr_d
  3662                           
  3663                           ;main_Master.c: 257:     LCD_Set_Cursor(fila, columna);
  3664  0581  0828               	movf	display_Datum@columna,w
  3665  0582  00A9               	movwf	??_display_Datum
  3666  0583  0829               	movf	??_display_Datum,w
  3667  0584  00F5               	movwf	LCD_Set_Cursor@columna
  3668  0585  082C               	movf	display_Datum@fila,w
  3669  0586  120A  158A  2365  120A  118A  	fcall	_LCD_Set_Cursor
  3670                           
  3671                           ;main_Master.c: 258:     LCD_Write_Character(dia_d + '0');
  3672  058B  1283               	bcf	3,5	;RP0=0, select bank0
  3673  058C  1303               	bcf	3,6	;RP1=0, select bank0
  3674  058D  082E               	movf	display_Datum@dia_d,w
  3675  058E  3E30               	addlw	48
  3676  058F  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  3677                           
  3678                           ;main_Master.c: 259:     LCD_Write_Character(dia_u + '0');
  3679  0594  1283               	bcf	3,5	;RP0=0, select bank0
  3680  0595  1303               	bcf	3,6	;RP1=0, select bank0
  3681  0596  082D               	movf	display_Datum@dia_u,w
  3682  0597  3E30               	addlw	48
  3683  0598  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  3684                           
  3685                           ;main_Master.c: 260:     LCD_Write_Character('/');
  3686  059D  302F               	movlw	47
  3687  059E  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  3688                           
  3689                           ;main_Master.c: 261:     LCD_Write_Character(mes_d + '0');
  3690  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  3691  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  3692  05A5  0830               	movf	display_Datum@mes_d,w
  3693  05A6  3E30               	addlw	48
  3694  05A7  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  3695                           
  3696                           ;main_Master.c: 262:     LCD_Write_Character(mes_u + '0');
  3697  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  3698  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  3699  05AE  082F               	movf	display_Datum@mes_u,w
  3700  05AF  3E30               	addlw	48
  3701  05B0  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  3702                           
  3703                           ;main_Master.c: 263:     LCD_Write_Character('/');
  3704  05B5  302F               	movlw	47
  3705  05B6  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  3706                           
  3707                           ;main_Master.c: 264:     LCD_Write_String("20");
  3708  05BB  30B1               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3709  05BC  120A  158A  22EB  120A  118A  	fcall	_LCD_Write_String
  3710                           
  3711                           ;main_Master.c: 265:     LCD_Write_Character(jahr_d + '0');
  3712  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  3713  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  3714  05C3  0832               	movf	display_Datum@jahr_d,w
  3715  05C4  3E30               	addlw	48
  3716  05C5  120A  158A  2247  120A  118A  	fcall	_LCD_Write_Character
  3717                           
  3718                           ;main_Master.c: 266:     LCD_Write_Character(jahr_u + '0');
  3719  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  3720  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  3721  05CC  0831               	movf	display_Datum@jahr_u,w
  3722  05CD  3E30               	addlw	48
  3723  05CE  120A  158A  2247   	fcall	_LCD_Write_Character
  3724  05D1  0008               	return
  3725  05D2                     __end_of_display_Datum:	
  3726                           
  3727                           	psect	text9
  3728  0BC0                     __ptext9:	
  3729 ;; *************** function ___awmod *****************
  3730 ;; Defined at:
  3731 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  divisor         2    2[COMMON] int 
  3734 ;;  dividend        2    4[COMMON] int 
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;  sign            1    8[COMMON] unsigned char 
  3737 ;;  counter         1    7[COMMON] unsigned char 
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  2    2[COMMON] int 
  3740 ;; Registers used:
  3741 ;;		wreg, status,2, status,0
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3747 ;;      Params:         4       0       0       0       0
  3748 ;;      Locals:         2       0       0       0       0
  3749 ;;      Temps:          1       0       0       0       0
  3750 ;;      Totals:         7       0       0       0       0
  3751 ;;Total ram usage:        7 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; Hardware stack levels required when called:    1
  3754 ;; This function calls:
  3755 ;;		Nothing
  3756 ;; This function is called by:
  3757 ;;		_display_Uhrzeit
  3758 ;;		_display_Datum
  3759 ;;		_mostrarLCD
  3760 ;;		_DEC_a_BCD
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           
  3765                           ;psect for function ___awmod
  3766  0BC0                     ___awmod:	
  3767                           
  3768                           ;incstack = 0
  3769                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3770  0BC0  01F8               	clrf	___awmod@sign
  3771  0BC1  1FF5               	btfss	___awmod@dividend+1,7
  3772  0BC2  2BCA               	goto	l2648
  3773  0BC3  09F4               	comf	___awmod@dividend,f
  3774  0BC4  09F5               	comf	___awmod@dividend+1,f
  3775  0BC5  0AF4               	incf	___awmod@dividend,f
  3776  0BC6  1903               	skipnz
  3777  0BC7  0AF5               	incf	___awmod@dividend+1,f
  3778  0BC8  01F8               	clrf	___awmod@sign
  3779  0BC9  0AF8               	incf	___awmod@sign,f
  3780  0BCA                     l2648:	
  3781  0BCA  1FF3               	btfss	___awmod@divisor+1,7
  3782  0BCB  2BD1               	goto	l2652
  3783  0BCC  09F2               	comf	___awmod@divisor,f
  3784  0BCD  09F3               	comf	___awmod@divisor+1,f
  3785  0BCE  0AF2               	incf	___awmod@divisor,f
  3786  0BCF  1903               	skipnz
  3787  0BD0  0AF3               	incf	___awmod@divisor+1,f
  3788  0BD1                     l2652:	
  3789  0BD1  0872               	movf	___awmod@divisor,w
  3790  0BD2  0473               	iorwf	___awmod@divisor+1,w
  3791  0BD3  1903               	btfsc	3,2
  3792  0BD4  2BFE               	goto	l2670
  3793  0BD5  01F7               	clrf	___awmod@counter
  3794  0BD6  0AF7               	incf	___awmod@counter,f
  3795  0BD7                     l2660:	
  3796  0BD7  1BF3               	btfsc	___awmod@divisor+1,7
  3797  0BD8  2BE5               	goto	l2662
  3798  0BD9  3001               	movlw	1
  3799  0BDA                     u1015:	
  3800  0BDA  1003               	clrc
  3801  0BDB  0DF2               	rlf	___awmod@divisor,f
  3802  0BDC  0DF3               	rlf	___awmod@divisor+1,f
  3803  0BDD  3EFF               	addlw	-1
  3804  0BDE  1D03               	skipz
  3805  0BDF  2BDA               	goto	u1015
  3806  0BE0  3001               	movlw	1
  3807  0BE1  00F6               	movwf	??___awmod
  3808  0BE2  0876               	movf	??___awmod,w
  3809  0BE3  07F7               	addwf	___awmod@counter,f
  3810  0BE4  2BD7               	goto	l2660
  3811  0BE5                     l2662:	
  3812  0BE5  0873               	movf	___awmod@divisor+1,w
  3813  0BE6  0275               	subwf	___awmod@dividend+1,w
  3814  0BE7  1D03               	skipz
  3815  0BE8  2BEB               	goto	u1035
  3816  0BE9  0872               	movf	___awmod@divisor,w
  3817  0BEA  0274               	subwf	___awmod@dividend,w
  3818  0BEB                     u1035:	
  3819  0BEB  1C03               	skipc
  3820  0BEC  2BF3               	goto	l2666
  3821  0BED  0872               	movf	___awmod@divisor,w
  3822  0BEE  02F4               	subwf	___awmod@dividend,f
  3823  0BEF  0873               	movf	___awmod@divisor+1,w
  3824  0BF0  1C03               	skipc
  3825  0BF1  03F5               	decf	___awmod@dividend+1,f
  3826  0BF2  02F5               	subwf	___awmod@dividend+1,f
  3827  0BF3                     l2666:	
  3828  0BF3  3001               	movlw	1
  3829  0BF4                     u1045:	
  3830  0BF4  1003               	clrc
  3831  0BF5  0CF3               	rrf	___awmod@divisor+1,f
  3832  0BF6  0CF2               	rrf	___awmod@divisor,f
  3833  0BF7  3EFF               	addlw	-1
  3834  0BF8  1D03               	skipz
  3835  0BF9  2BF4               	goto	u1045
  3836  0BFA  3001               	movlw	1
  3837  0BFB  02F7               	subwf	___awmod@counter,f
  3838  0BFC  1D03               	btfss	3,2
  3839  0BFD  2BE5               	goto	l2662
  3840  0BFE                     l2670:	
  3841  0BFE  0878               	movf	___awmod@sign,w
  3842  0BFF  1903               	btfsc	3,2
  3843  0C00  2C06               	goto	l2674
  3844  0C01  09F4               	comf	___awmod@dividend,f
  3845  0C02  09F5               	comf	___awmod@dividend+1,f
  3846  0C03  0AF4               	incf	___awmod@dividend,f
  3847  0C04  1903               	skipnz
  3848  0C05  0AF5               	incf	___awmod@dividend+1,f
  3849  0C06                     l2674:	
  3850  0C06  0875               	movf	___awmod@dividend+1,w
  3851  0C07  00F3               	movwf	?___awmod+1
  3852  0C08  0874               	movf	___awmod@dividend,w
  3853  0C09  00F2               	movwf	?___awmod
  3854  0C0A  0008               	return
  3855  0C0B                     __end_of___awmod:	
  3856                           
  3857                           	psect	text10
  3858  06A4                     __ptext10:	
  3859 ;; *************** function ___awdiv *****************
  3860 ;; Defined at:
  3861 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;  divisor         2    0[BANK0 ] int 
  3864 ;;  dividend        2    2[BANK0 ] int 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  quotient        2    6[BANK0 ] int 
  3867 ;;  sign            1    5[BANK0 ] unsigned char 
  3868 ;;  counter         1    4[BANK0 ] unsigned char 
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  2    0[BANK0 ] int 
  3871 ;; Registers used:
  3872 ;;		wreg, status,2, status,0
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3878 ;;      Params:         0       4       0       0       0
  3879 ;;      Locals:         0       4       0       0       0
  3880 ;;      Temps:          1       0       0       0       0
  3881 ;;      Totals:         1       8       0       0       0
  3882 ;;Total ram usage:        9 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; Hardware stack levels required when called:    1
  3885 ;; This function calls:
  3886 ;;		Nothing
  3887 ;; This function is called by:
  3888 ;;		_display_Uhrzeit
  3889 ;;		_display_Datum
  3890 ;;		_mostrarLCD
  3891 ;;		_uint_to_array
  3892 ;;		_DEC_a_BCD
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           
  3897                           ;psect for function ___awdiv
  3898  06A4                     ___awdiv:	
  3899                           
  3900                           ;incstack = 0
  3901                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3902  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  3903  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  3904  06A6  01A5               	clrf	___awdiv@sign
  3905  06A7  1FA1               	btfss	___awdiv@divisor+1,7
  3906  06A8  2EB0               	goto	l3890
  3907  06A9  09A0               	comf	___awdiv@divisor,f
  3908  06AA  09A1               	comf	___awdiv@divisor+1,f
  3909  06AB  0AA0               	incf	___awdiv@divisor,f
  3910  06AC  1903               	skipnz
  3911  06AD  0AA1               	incf	___awdiv@divisor+1,f
  3912  06AE  01A5               	clrf	___awdiv@sign
  3913  06AF  0AA5               	incf	___awdiv@sign,f
  3914  06B0                     l3890:	
  3915  06B0  1FA3               	btfss	___awdiv@dividend+1,7
  3916  06B1  2EBB               	goto	l3896
  3917  06B2  09A2               	comf	___awdiv@dividend,f
  3918  06B3  09A3               	comf	___awdiv@dividend+1,f
  3919  06B4  0AA2               	incf	___awdiv@dividend,f
  3920  06B5  1903               	skipnz
  3921  06B6  0AA3               	incf	___awdiv@dividend+1,f
  3922  06B7  3001               	movlw	1
  3923  06B8  00F8               	movwf	??___awdiv
  3924  06B9  0878               	movf	??___awdiv,w
  3925  06BA  06A5               	xorwf	___awdiv@sign,f
  3926  06BB                     l3896:	
  3927  06BB  01A6               	clrf	___awdiv@quotient
  3928  06BC  01A7               	clrf	___awdiv@quotient+1
  3929  06BD  0820               	movf	___awdiv@divisor,w
  3930  06BE  0421               	iorwf	___awdiv@divisor+1,w
  3931  06BF  1903               	btfsc	3,2
  3932  06C0  2EF2               	goto	l3918
  3933  06C1  01A4               	clrf	___awdiv@counter
  3934  06C2  0AA4               	incf	___awdiv@counter,f
  3935  06C3                     l3906:	
  3936  06C3  1BA1               	btfsc	___awdiv@divisor+1,7
  3937  06C4  2ED1               	goto	l3908
  3938  06C5  3001               	movlw	1
  3939  06C6                     u1465:	
  3940  06C6  1003               	clrc
  3941  06C7  0DA0               	rlf	___awdiv@divisor,f
  3942  06C8  0DA1               	rlf	___awdiv@divisor+1,f
  3943  06C9  3EFF               	addlw	-1
  3944  06CA  1D03               	skipz
  3945  06CB  2EC6               	goto	u1465
  3946  06CC  3001               	movlw	1
  3947  06CD  00F8               	movwf	??___awdiv
  3948  06CE  0878               	movf	??___awdiv,w
  3949  06CF  07A4               	addwf	___awdiv@counter,f
  3950  06D0  2EC3               	goto	l3906
  3951  06D1                     l3908:	
  3952  06D1  3001               	movlw	1
  3953  06D2                     u1485:	
  3954  06D2  1003               	clrc
  3955  06D3  0DA6               	rlf	___awdiv@quotient,f
  3956  06D4  0DA7               	rlf	___awdiv@quotient+1,f
  3957  06D5  3EFF               	addlw	-1
  3958  06D6  1D03               	skipz
  3959  06D7  2ED2               	goto	u1485
  3960  06D8  0821               	movf	___awdiv@divisor+1,w
  3961  06D9  0223               	subwf	___awdiv@dividend+1,w
  3962  06DA  1D03               	skipz
  3963  06DB  2EDE               	goto	u1495
  3964  06DC  0820               	movf	___awdiv@divisor,w
  3965  06DD  0222               	subwf	___awdiv@dividend,w
  3966  06DE                     u1495:	
  3967  06DE  1C03               	skipc
  3968  06DF  2EE7               	goto	l3914
  3969  06E0  0820               	movf	___awdiv@divisor,w
  3970  06E1  02A2               	subwf	___awdiv@dividend,f
  3971  06E2  0821               	movf	___awdiv@divisor+1,w
  3972  06E3  1C03               	skipc
  3973  06E4  03A3               	decf	___awdiv@dividend+1,f
  3974  06E5  02A3               	subwf	___awdiv@dividend+1,f
  3975  06E6  1426               	bsf	___awdiv@quotient,0
  3976  06E7                     l3914:	
  3977  06E7  3001               	movlw	1
  3978  06E8                     u1505:	
  3979  06E8  1003               	clrc
  3980  06E9  0CA1               	rrf	___awdiv@divisor+1,f
  3981  06EA  0CA0               	rrf	___awdiv@divisor,f
  3982  06EB  3EFF               	addlw	-1
  3983  06EC  1D03               	skipz
  3984  06ED  2EE8               	goto	u1505
  3985  06EE  3001               	movlw	1
  3986  06EF  02A4               	subwf	___awdiv@counter,f
  3987  06F0  1D03               	btfss	3,2
  3988  06F1  2ED1               	goto	l3908
  3989  06F2                     l3918:	
  3990  06F2  0825               	movf	___awdiv@sign,w
  3991  06F3  1903               	btfsc	3,2
  3992  06F4  2EFA               	goto	l3922
  3993  06F5  09A6               	comf	___awdiv@quotient,f
  3994  06F6  09A7               	comf	___awdiv@quotient+1,f
  3995  06F7  0AA6               	incf	___awdiv@quotient,f
  3996  06F8  1903               	skipnz
  3997  06F9  0AA7               	incf	___awdiv@quotient+1,f
  3998  06FA                     l3922:	
  3999  06FA  0827               	movf	___awdiv@quotient+1,w
  4000  06FB  00A1               	movwf	?___awdiv+1
  4001  06FC  0826               	movf	___awdiv@quotient,w
  4002  06FD  00A0               	movwf	?___awdiv
  4003  06FE  0008               	return
  4004  06FF                     __end_of___awdiv:	
  4005                           
  4006                           	psect	text11
  4007  0AEB                     __ptext11:	
  4008 ;; *************** function _LCD_Write_String *****************
  4009 ;; Defined at:
  4010 ;;		line 73 in file "LCD_8bits.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;  a               1    wreg     PTR unsigned char 
  4013 ;;		 -> STR_17(6), STR_16(16), STR_15(3), STR_14(13), 
  4014 ;;		 -> STR_13(5), STR_12(3), STR_11(5), STR_10(3), 
  4015 ;;		 -> STR_9(13), STR_8(4), STR_7(9), STR_6(14), 
  4016 ;;		 -> STR_5(12), STR_4(11), STR_3(13), STR_2(17), 
  4017 ;;		 -> STR_1(3), 
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;  a               1    6[COMMON] PTR unsigned char 
  4020 ;;		 -> STR_17(6), STR_16(16), STR_15(3), STR_14(13), 
  4021 ;;		 -> STR_13(5), STR_12(3), STR_11(5), STR_10(3), 
  4022 ;;		 -> STR_9(13), STR_8(4), STR_7(9), STR_6(14), 
  4023 ;;		 -> STR_5(12), STR_4(11), STR_3(13), STR_2(17), 
  4024 ;;		 -> STR_1(3), 
  4025 ;;  n               2    4[COMMON] int 
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  1    wreg      void 
  4028 ;; Registers used:
  4029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4035 ;;      Params:         0       0       0       0       0
  4036 ;;      Locals:         3       0       0       0       0
  4037 ;;      Temps:          0       0       0       0       0
  4038 ;;      Totals:         3       0       0       0       0
  4039 ;;Total ram usage:        3 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:    2
  4042 ;; This function calls:
  4043 ;;		_LCD_Write_Character
  4044 ;; This function is called by:
  4045 ;;		_display_Datum
  4046 ;;		_mostrarLCD
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           
  4051                           ;psect for function _LCD_Write_String
  4052  0AEB                     _LCD_Write_String:	
  4053                           
  4054                           ;incstack = 0
  4055                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4056                           ;LCD_Write_String@a stored from wreg
  4057  0AEB  00F6               	movwf	LCD_Write_String@a
  4058                           
  4059                           ;LCD_8bits.c: 74:     int n;;LCD_8bits.c: 75:     for(n = 0; a[n] != '\0'; n++){
  4060  0AEC  01F4               	clrf	LCD_Write_String@n
  4061  0AED  01F5               	clrf	LCD_Write_String@n+1
  4062  0AEE                     l2538:	
  4063  0AEE  0874               	movf	LCD_Write_String@n,w
  4064  0AEF  0776               	addwf	LCD_Write_String@a,w
  4065  0AF0  0084               	movwf	4
  4066  0AF1  120A  118A  2700  120A  158A  	fcall	stringdir
  4067  0AF6  3A00               	xorlw	0
  4068  0AF7  1903               	btfsc	3,2
  4069  0AF8  0008               	return
  4070                           
  4071                           ;LCD_8bits.c: 76:         LCD_Write_Character(a[n]);
  4072  0AF9  0874               	movf	LCD_Write_String@n,w
  4073  0AFA  0776               	addwf	LCD_Write_String@a,w
  4074  0AFB  0084               	movwf	4
  4075  0AFC  120A  118A  2700  120A  158A  	fcall	stringdir
  4076  0B01  120A  158A  2247  120A  158A  	fcall	_LCD_Write_Character
  4077                           
  4078                           ;LCD_8bits.c: 77:     }
  4079  0B06  3001               	movlw	1
  4080  0B07  07F4               	addwf	LCD_Write_String@n,f
  4081  0B08  1803               	skipnc
  4082  0B09  0AF5               	incf	LCD_Write_String@n+1,f
  4083  0B0A  3000               	movlw	0
  4084  0B0B  07F5               	addwf	LCD_Write_String@n+1,f
  4085  0B0C  2AEE               	goto	l2538
  4086  0B0D                     __end_of_LCD_Write_String:	
  4087                           
  4088                           	psect	text12
  4089  0B65                     __ptext12:	
  4090 ;; *************** function _LCD_Set_Cursor *****************
  4091 ;; Defined at:
  4092 ;;		line 80 in file "LCD_8bits.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;  linea           1    wreg     unsigned char 
  4095 ;;  columna         1    5[COMMON] unsigned char 
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;  linea           1    8[COMMON] unsigned char 
  4098 ;;  corrimiento     1    9[COMMON] unsigned char 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  1    wreg      void 
  4101 ;; Registers used:
  4102 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4108 ;;      Params:         1       0       0       0       0
  4109 ;;      Locals:         2       0       0       0       0
  4110 ;;      Temps:          2       0       0       0       0
  4111 ;;      Totals:         5       0       0       0       0
  4112 ;;Total ram usage:        5 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; Hardware stack levels required when called:    2
  4115 ;; This function calls:
  4116 ;;		_LCD_Cmd
  4117 ;; This function is called by:
  4118 ;;		_display_Uhrzeit
  4119 ;;		_display_Datum
  4120 ;;		_mostrarLCD
  4121 ;;		_pressBoton2
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           
  4126                           ;psect for function _LCD_Set_Cursor
  4127  0B65                     _LCD_Set_Cursor:	
  4128                           
  4129                           ;incstack = 0
  4130                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4131                           ;LCD_Set_Cursor@linea stored from wreg
  4132  0B65  00F8               	movwf	LCD_Set_Cursor@linea
  4133                           
  4134                           ;LCD_8bits.c: 82:     switch (linea){
  4135  0B66  2B80               	goto	l2526
  4136  0B67                     l2516:	
  4137                           
  4138                           ;LCD_8bits.c: 84:             corrimiento = 0x80 + columna;
  4139  0B67  0875               	movf	LCD_Set_Cursor@columna,w
  4140  0B68  3E80               	addlw	128
  4141  0B69  00F6               	movwf	??_LCD_Set_Cursor
  4142  0B6A  0876               	movf	??_LCD_Set_Cursor,w
  4143  0B6B  00F9               	movwf	LCD_Set_Cursor@corrimiento
  4144                           
  4145                           ;LCD_8bits.c: 85:             LCD_Cmd(corrimiento);
  4146  0B6C  0879               	movf	LCD_Set_Cursor@corrimiento,w
  4147  0B6D  120A  158A  2391   	fcall	_LCD_Cmd
  4148                           
  4149                           ;LCD_8bits.c: 86:             break;
  4150  0B70  0008               	return
  4151  0B71                     l2520:	
  4152                           
  4153                           ;LCD_8bits.c: 88:             corrimiento = 0x80 + 0x40 + columna;
  4154  0B71  0875               	movf	LCD_Set_Cursor@columna,w
  4155  0B72  3EC0               	addlw	192
  4156  0B73  00F6               	movwf	??_LCD_Set_Cursor
  4157  0B74  0876               	movf	??_LCD_Set_Cursor,w
  4158  0B75  00F9               	movwf	LCD_Set_Cursor@corrimiento
  4159                           
  4160                           ;LCD_8bits.c: 89:             LCD_Cmd(corrimiento);
  4161  0B76  0879               	movf	LCD_Set_Cursor@corrimiento,w
  4162  0B77  120A  158A  2391   	fcall	_LCD_Cmd
  4163                           
  4164                           ;LCD_8bits.c: 90:             break;
  4165  0B7A  0008               	return
  4166  0B7B                     l2524:	
  4167                           
  4168                           ;LCD_8bits.c: 92:             LCD_Cmd(0x80);
  4169  0B7B  3080               	movlw	128
  4170  0B7C  120A  158A  2391   	fcall	_LCD_Cmd
  4171                           
  4172                           ;LCD_8bits.c: 93:     }
  4173  0B7F  0008               	return
  4174  0B80                     l2526:	
  4175  0B80  0878               	movf	LCD_Set_Cursor@linea,w
  4176  0B81  00F6               	movwf	??_LCD_Set_Cursor
  4177  0B82  01F7               	clrf	??_LCD_Set_Cursor+1
  4178                           
  4179                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4180                           ; Switch size 1, requested type "simple"
  4181                           ; Number of cases is 1, Range of values is 0 to 0
  4182                           ; switch strategies available:
  4183                           ; Name         Instructions Cycles
  4184                           ; simple_byte            4     3 (average)
  4185                           ; direct_byte           11     8 (fixed)
  4186                           ; jumptable            260     6 (fixed)
  4187                           ;	Chosen strategy is simple_byte
  4188  0B83  0877               	movf	??_LCD_Set_Cursor+1,w
  4189  0B84  3A00               	xorlw	0	; case 0
  4190  0B85  1903               	skipnz
  4191  0B86  2B88               	goto	l4736
  4192  0B87  2B7B               	goto	l2524
  4193  0B88                     l4736:	
  4194                           
  4195                           ; Switch size 1, requested type "simple"
  4196                           ; Number of cases is 2, Range of values is 1 to 2
  4197                           ; switch strategies available:
  4198                           ; Name         Instructions Cycles
  4199                           ; simple_byte            7     4 (average)
  4200                           ; direct_byte           17    11 (fixed)
  4201                           ; jumptable            263     9 (fixed)
  4202                           ;	Chosen strategy is simple_byte
  4203  0B88  0876               	movf	??_LCD_Set_Cursor,w
  4204  0B89  3A01               	xorlw	1	; case 1
  4205  0B8A  1903               	skipnz
  4206  0B8B  2B67               	goto	l2516
  4207  0B8C  3A03               	xorlw	3	; case 2
  4208  0B8D  1903               	skipnz
  4209  0B8E  2B71               	goto	l2520
  4210  0B8F  2B7B               	goto	l2524
  4211  0B90  0008               	return
  4212  0B91                     __end_of_LCD_Set_Cursor:	
  4213                           
  4214                           	psect	text13
  4215  032E                     __ptext13:	
  4216 ;; *************** function _get_Time *****************
  4217 ;; Defined at:
  4218 ;;		line 78 in file "RTC.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;		None
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;		None
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      void 
  4225 ;; Registers used:
  4226 ;;		wreg, status,2, status,0, pclath, cstack
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4232 ;;      Params:         0       0       0       0       0
  4233 ;;      Locals:         0       0       0       0       0
  4234 ;;      Temps:          0       1       0       0       0
  4235 ;;      Totals:         0       1       0       0       0
  4236 ;;Total ram usage:        1 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; Hardware stack levels required when called:    3
  4239 ;; This function calls:
  4240 ;;		_BCD_a_DEC
  4241 ;;		_I2C_Master_Read
  4242 ;;		_I2C_Master_Start
  4243 ;;		_I2C_Master_Stop
  4244 ;;		_I2C_Master_Write
  4245 ;; This function is called by:
  4246 ;;		_main
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           
  4251                           ;psect for function _get_Time
  4252  032E                     _get_Time:	
  4253                           
  4254                           ;RTC.c: 79:     I2C_Master_Start();
  4255                           
  4256                           ;incstack = 0
  4257                           ; Regs used in _get_Time: [wreg+status,2+status,0+pclath+cstack]
  4258  032E  120A  158A  2216  120A  118A  	fcall	_I2C_Master_Start
  4259                           
  4260                           ;RTC.c: 80:     I2C_Master_Write(0xD0);
  4261  0333  30D0               	movlw	208
  4262  0334  00F2               	movwf	I2C_Master_Write@d
  4263  0335  3000               	movlw	0
  4264  0336  00F3               	movwf	I2C_Master_Write@d+1
  4265  0337  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  4266                           
  4267                           ;RTC.c: 81:     I2C_Master_Write(0);
  4268  033C  3000               	movlw	0
  4269  033D  00F2               	movwf	I2C_Master_Write@d
  4270  033E  00F3               	movwf	I2C_Master_Write@d+1
  4271  033F  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  4272                           
  4273                           ;RTC.c: 82:     I2C_Master_Stop();
  4274  0344  120A  158A  221D  120A  118A  	fcall	_I2C_Master_Stop
  4275                           
  4276                           ;RTC.c: 83:     I2C_Master_Start();
  4277  0349  120A  158A  2216  120A  118A  	fcall	_I2C_Master_Start
  4278                           
  4279                           ;RTC.c: 84:     I2C_Master_Write(0xD1);
  4280  034E  30D1               	movlw	209
  4281  034F  00F2               	movwf	I2C_Master_Write@d
  4282  0350  3000               	movlw	0
  4283  0351  00F3               	movwf	I2C_Master_Write@d+1
  4284  0352  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  4285                           
  4286                           ;RTC.c: 85:     seg = BCD_a_DEC(I2C_Master_Read(0));
  4287  0357  3000               	movlw	0
  4288  0358  00F2               	movwf	I2C_Master_Read@a
  4289  0359  00F3               	movwf	I2C_Master_Read@a+1
  4290  035A  120A  158A  2339  120A  118A  	fcall	_I2C_Master_Read
  4291  035F  0872               	movf	?_I2C_Master_Read,w
  4292  0360  120A  158A  22B4  120A  118A  	fcall	_BCD_a_DEC
  4293  0365  1283               	bcf	3,5	;RP0=0, select bank0
  4294  0366  1303               	bcf	3,6	;RP1=0, select bank0
  4295  0367  00A0               	movwf	??_get_Time
  4296  0368  0820               	movf	??_get_Time,w
  4297  0369  00CB               	movwf	_seg
  4298                           
  4299                           ;RTC.c: 86:     I2C_Master_Stop();
  4300  036A  120A  158A  221D  120A  118A  	fcall	_I2C_Master_Stop
  4301                           
  4302                           ;RTC.c: 88:     I2C_Master_Start();
  4303  036F  120A  158A  2216  120A  118A  	fcall	_I2C_Master_Start
  4304                           
  4305                           ;RTC.c: 89:     I2C_Master_Write(0xD0);
  4306  0374  30D0               	movlw	208
  4307  0375  00F2               	movwf	I2C_Master_Write@d
  4308  0376  3000               	movlw	0
  4309  0377  00F3               	movwf	I2C_Master_Write@d+1
  4310  0378  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  4311                           
  4312                           ;RTC.c: 90:     I2C_Master_Write(1);
  4313  037D  3001               	movlw	1
  4314  037E  00F2               	movwf	I2C_Master_Write@d
  4315  037F  3000               	movlw	0
  4316  0380  00F3               	movwf	I2C_Master_Write@d+1
  4317  0381  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  4318                           
  4319                           ;RTC.c: 91:     I2C_Master_Stop();
  4320  0386  120A  158A  221D  120A  118A  	fcall	_I2C_Master_Stop
  4321                           
  4322                           ;RTC.c: 92:     I2C_Master_Start();
  4323  038B  120A  158A  2216  120A  118A  	fcall	_I2C_Master_Start
  4324                           
  4325                           ;RTC.c: 93:     I2C_Master_Write(0xD1);
  4326  0390  30D1               	movlw	209
  4327  0391  00F2               	movwf	I2C_Master_Write@d
  4328  0392  3000               	movlw	0
  4329  0393  00F3               	movwf	I2C_Master_Write@d+1
  4330  0394  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  4331                           
  4332                           ;RTC.c: 94:     min = BCD_a_DEC(I2C_Master_Read(0));
  4333  0399  3000               	movlw	0
  4334  039A  00F2               	movwf	I2C_Master_Read@a
  4335  039B  00F3               	movwf	I2C_Master_Read@a+1
  4336  039C  120A  158A  2339  120A  118A  	fcall	_I2C_Master_Read
  4337  03A1  0872               	movf	?_I2C_Master_Read,w
  4338  03A2  120A  158A  22B4  120A  118A  	fcall	_BCD_a_DEC
  4339  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  4340  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  4341  03A9  00A0               	movwf	??_get_Time
  4342  03AA  0820               	movf	??_get_Time,w
  4343  03AB  00D6               	movwf	_min
  4344                           
  4345                           ;RTC.c: 95:     I2C_Master_Stop();
  4346  03AC  120A  158A  221D  120A  118A  	fcall	_I2C_Master_Stop
  4347                           
  4348                           ;RTC.c: 97:     I2C_Master_Start();
  4349  03B1  120A  158A  2216  120A  118A  	fcall	_I2C_Master_Start
  4350                           
  4351                           ;RTC.c: 98:     I2C_Master_Write(0xD0);
  4352  03B6  30D0               	movlw	208
  4353  03B7  00F2               	movwf	I2C_Master_Write@d
  4354  03B8  3000               	movlw	0
  4355  03B9  00F3               	movwf	I2C_Master_Write@d+1
  4356  03BA  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  4357                           
  4358                           ;RTC.c: 99:     I2C_Master_Write(2);
  4359  03BF  3002               	movlw	2
  4360  03C0  00F2               	movwf	I2C_Master_Write@d
  4361  03C1  3000               	movlw	0
  4362  03C2  00F3               	movwf	I2C_Master_Write@d+1
  4363  03C3  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  4364                           
  4365                           ;RTC.c: 100:     I2C_Master_Stop();
  4366  03C8  120A  158A  221D  120A  118A  	fcall	_I2C_Master_Stop
  4367                           
  4368                           ;RTC.c: 101:     I2C_Master_Start();
  4369  03CD  120A  158A  2216  120A  118A  	fcall	_I2C_Master_Start
  4370                           
  4371                           ;RTC.c: 102:     I2C_Master_Write(0xD1);
  4372  03D2  30D1               	movlw	209
  4373  03D3  00F2               	movwf	I2C_Master_Write@d
  4374  03D4  3000               	movlw	0
  4375  03D5  00F3               	movwf	I2C_Master_Write@d+1
  4376  03D6  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  4377                           
  4378                           ;RTC.c: 103:     hora = BCD_a_DEC(I2C_Master_Read(0));
  4379  03DB  3000               	movlw	0
  4380  03DC  00F2               	movwf	I2C_Master_Read@a
  4381  03DD  00F3               	movwf	I2C_Master_Read@a+1
  4382  03DE  120A  158A  2339  120A  118A  	fcall	_I2C_Master_Read
  4383  03E3  0872               	movf	?_I2C_Master_Read,w
  4384  03E4  120A  158A  22B4  120A  118A  	fcall	_BCD_a_DEC
  4385  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  4386  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  4387  03EB  00A0               	movwf	??_get_Time
  4388  03EC  0820               	movf	??_get_Time,w
  4389  03ED  00D5               	movwf	_hora
  4390                           
  4391                           ;RTC.c: 104:     I2C_Master_Stop();
  4392  03EE  120A  158A  221D  120A  118A  	fcall	_I2C_Master_Stop
  4393                           
  4394                           ;RTC.c: 107:     I2C_Master_Start();
  4395  03F3  120A  158A  2216  120A  118A  	fcall	_I2C_Master_Start
  4396                           
  4397                           ;RTC.c: 108:     I2C_Master_Write(0xD0);
  4398  03F8  30D0               	movlw	208
  4399  03F9  00F2               	movwf	I2C_Master_Write@d
  4400  03FA  3000               	movlw	0
  4401  03FB  00F3               	movwf	I2C_Master_Write@d+1
  4402  03FC  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  4403                           
  4404                           ;RTC.c: 109:     I2C_Master_Write(3);
  4405  0401  3003               	movlw	3
  4406  0402  00F2               	movwf	I2C_Master_Write@d
  4407  0403  3000               	movlw	0
  4408  0404  00F3               	movwf	I2C_Master_Write@d+1
  4409  0405  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  4410                           
  4411                           ;RTC.c: 110:     I2C_Master_Stop();
  4412  040A  120A  158A  221D  120A  118A  	fcall	_I2C_Master_Stop
  4413                           
  4414                           ;RTC.c: 111:     I2C_Master_Start();
  4415  040F  120A  158A  2216  120A  118A  	fcall	_I2C_Master_Start
  4416                           
  4417                           ;RTC.c: 112:     I2C_Master_Write(0xD1);
  4418  0414  30D1               	movlw	209
  4419  0415  00F2               	movwf	I2C_Master_Write@d
  4420  0416  3000               	movlw	0
  4421  0417  00F3               	movwf	I2C_Master_Write@d+1
  4422  0418  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  4423                           
  4424                           ;RTC.c: 113:     dia = BCD_a_DEC(I2C_Master_Read(0));
  4425  041D  3000               	movlw	0
  4426  041E  00F2               	movwf	I2C_Master_Read@a
  4427  041F  00F3               	movwf	I2C_Master_Read@a+1
  4428  0420  120A  158A  2339  120A  118A  	fcall	_I2C_Master_Read
  4429  0425  0872               	movf	?_I2C_Master_Read,w
  4430  0426  120A  158A  22B4  120A  118A  	fcall	_BCD_a_DEC
  4431  042B  1283               	bcf	3,5	;RP0=0, select bank0
  4432  042C  1303               	bcf	3,6	;RP1=0, select bank0
  4433  042D  00A0               	movwf	??_get_Time
  4434  042E  0820               	movf	??_get_Time,w
  4435  042F  00D4               	movwf	_dia
  4436                           
  4437                           ;RTC.c: 114:     I2C_Master_Stop();
  4438  0430  120A  158A  221D  120A  118A  	fcall	_I2C_Master_Stop
  4439                           
  4440                           ;RTC.c: 116:     I2C_Master_Start();
  4441  0435  120A  158A  2216  120A  118A  	fcall	_I2C_Master_Start
  4442                           
  4443                           ;RTC.c: 117:     I2C_Master_Write(0xD0);
  4444  043A  30D0               	movlw	208
  4445  043B  00F2               	movwf	I2C_Master_Write@d
  4446  043C  3000               	movlw	0
  4447  043D  00F3               	movwf	I2C_Master_Write@d+1
  4448  043E  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  4449                           
  4450                           ;RTC.c: 118:     I2C_Master_Write(4);
  4451  0443  3004               	movlw	4
  4452  0444  00F2               	movwf	I2C_Master_Write@d
  4453  0445  3000               	movlw	0
  4454  0446  00F3               	movwf	I2C_Master_Write@d+1
  4455  0447  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  4456                           
  4457                           ;RTC.c: 119:     I2C_Master_Stop();
  4458  044C  120A  158A  221D  120A  118A  	fcall	_I2C_Master_Stop
  4459                           
  4460                           ;RTC.c: 120:     I2C_Master_Start();
  4461  0451  120A  158A  2216  120A  118A  	fcall	_I2C_Master_Start
  4462                           
  4463                           ;RTC.c: 121:     I2C_Master_Write(0xD1);
  4464  0456  30D1               	movlw	209
  4465  0457  00F2               	movwf	I2C_Master_Write@d
  4466  0458  3000               	movlw	0
  4467  0459  00F3               	movwf	I2C_Master_Write@d+1
  4468  045A  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  4469                           
  4470                           ;RTC.c: 122:     datum = BCD_a_DEC(I2C_Master_Read(0));
  4471  045F  3000               	movlw	0
  4472  0460  00F2               	movwf	I2C_Master_Read@a
  4473  0461  00F3               	movwf	I2C_Master_Read@a+1
  4474  0462  120A  158A  2339  120A  118A  	fcall	_I2C_Master_Read
  4475  0467  0872               	movf	?_I2C_Master_Read,w
  4476  0468  120A  158A  22B4  120A  118A  	fcall	_BCD_a_DEC
  4477  046D  1283               	bcf	3,5	;RP0=0, select bank0
  4478  046E  1303               	bcf	3,6	;RP1=0, select bank0
  4479  046F  00A0               	movwf	??_get_Time
  4480  0470  0820               	movf	??_get_Time,w
  4481  0471  00D3               	movwf	_datum
  4482                           
  4483                           ;RTC.c: 123:     I2C_Master_Stop();
  4484  0472  120A  158A  221D  120A  118A  	fcall	_I2C_Master_Stop
  4485                           
  4486                           ;RTC.c: 125:     I2C_Master_Start();
  4487  0477  120A  158A  2216  120A  118A  	fcall	_I2C_Master_Start
  4488                           
  4489                           ;RTC.c: 126:     I2C_Master_Write(0xD0);
  4490  047C  30D0               	movlw	208
  4491  047D  00F2               	movwf	I2C_Master_Write@d
  4492  047E  3000               	movlw	0
  4493  047F  00F3               	movwf	I2C_Master_Write@d+1
  4494  0480  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  4495                           
  4496                           ;RTC.c: 127:     I2C_Master_Write(5);
  4497  0485  3005               	movlw	5
  4498  0486  00F2               	movwf	I2C_Master_Write@d
  4499  0487  3000               	movlw	0
  4500  0488  00F3               	movwf	I2C_Master_Write@d+1
  4501  0489  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  4502                           
  4503                           ;RTC.c: 128:     I2C_Master_Stop();
  4504  048E  120A  158A  221D  120A  118A  	fcall	_I2C_Master_Stop
  4505                           
  4506                           ;RTC.c: 129:     I2C_Master_Start();
  4507  0493  120A  158A  2216  120A  118A  	fcall	_I2C_Master_Start
  4508                           
  4509                           ;RTC.c: 130:     I2C_Master_Write(0xD1);
  4510  0498  30D1               	movlw	209
  4511  0499  00F2               	movwf	I2C_Master_Write@d
  4512  049A  3000               	movlw	0
  4513  049B  00F3               	movwf	I2C_Master_Write@d+1
  4514  049C  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  4515                           
  4516                           ;RTC.c: 131:     mes = BCD_a_DEC(I2C_Master_Read(0));
  4517  04A1  3000               	movlw	0
  4518  04A2  00F2               	movwf	I2C_Master_Read@a
  4519  04A3  00F3               	movwf	I2C_Master_Read@a+1
  4520  04A4  120A  158A  2339  120A  118A  	fcall	_I2C_Master_Read
  4521  04A9  0872               	movf	?_I2C_Master_Read,w
  4522  04AA  120A  158A  22B4  120A  118A  	fcall	_BCD_a_DEC
  4523  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  4524  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  4525  04B1  00A0               	movwf	??_get_Time
  4526  04B2  0820               	movf	??_get_Time,w
  4527  04B3  00D2               	movwf	_mes
  4528                           
  4529                           ;RTC.c: 132:     I2C_Master_Stop();
  4530  04B4  120A  158A  221D  120A  118A  	fcall	_I2C_Master_Stop
  4531                           
  4532                           ;RTC.c: 134:     I2C_Master_Start();
  4533  04B9  120A  158A  2216  120A  118A  	fcall	_I2C_Master_Start
  4534                           
  4535                           ;RTC.c: 135:     I2C_Master_Write(0xD0);
  4536  04BE  30D0               	movlw	208
  4537  04BF  00F2               	movwf	I2C_Master_Write@d
  4538  04C0  3000               	movlw	0
  4539  04C1  00F3               	movwf	I2C_Master_Write@d+1
  4540  04C2  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  4541                           
  4542                           ;RTC.c: 136:     I2C_Master_Write(6);
  4543  04C7  3006               	movlw	6
  4544  04C8  00F2               	movwf	I2C_Master_Write@d
  4545  04C9  3000               	movlw	0
  4546  04CA  00F3               	movwf	I2C_Master_Write@d+1
  4547  04CB  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  4548                           
  4549                           ;RTC.c: 137:     I2C_Master_Stop();
  4550  04D0  120A  158A  221D  120A  118A  	fcall	_I2C_Master_Stop
  4551                           
  4552                           ;RTC.c: 138:     I2C_Master_Start();
  4553  04D5  120A  158A  2216  120A  118A  	fcall	_I2C_Master_Start
  4554                           
  4555                           ;RTC.c: 139:     I2C_Master_Write(0xD1);
  4556  04DA  30D1               	movlw	209
  4557  04DB  00F2               	movwf	I2C_Master_Write@d
  4558  04DC  3000               	movlw	0
  4559  04DD  00F3               	movwf	I2C_Master_Write@d+1
  4560  04DE  120A  158A  2224  120A  118A  	fcall	_I2C_Master_Write
  4561                           
  4562                           ;RTC.c: 140:     jahr = BCD_a_DEC(I2C_Master_Read(0));
  4563  04E3  3000               	movlw	0
  4564  04E4  00F2               	movwf	I2C_Master_Read@a
  4565  04E5  00F3               	movwf	I2C_Master_Read@a+1
  4566  04E6  120A  158A  2339  120A  118A  	fcall	_I2C_Master_Read
  4567  04EB  0872               	movf	?_I2C_Master_Read,w
  4568  04EC  120A  158A  22B4  120A  118A  	fcall	_BCD_a_DEC
  4569  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  4570  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  4571  04F3  00A0               	movwf	??_get_Time
  4572  04F4  0820               	movf	??_get_Time,w
  4573  04F5  00D1               	movwf	_jahr
  4574                           
  4575                           ;RTC.c: 141:     I2C_Master_Stop();
  4576  04F6  120A  158A  221D   	fcall	_I2C_Master_Stop
  4577  04F9  0008               	return
  4578  04FA                     __end_of_get_Time:	
  4579                           
  4580                           	psect	text14
  4581  0A24                     __ptext14:	
  4582 ;; *************** function _I2C_Master_Write *****************
  4583 ;; Defined at:
  4584 ;;		line 65 in file "I2C.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;  d               2    2[COMMON] unsigned int 
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;		None
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  1    wreg      void 
  4591 ;; Registers used:
  4592 ;;		wreg, status,2, status,0, pclath, cstack
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4598 ;;      Params:         2       0       0       0       0
  4599 ;;      Locals:         0       0       0       0       0
  4600 ;;      Temps:          0       0       0       0       0
  4601 ;;      Totals:         2       0       0       0       0
  4602 ;;Total ram usage:        2 bytes
  4603 ;; Hardware stack levels used:    1
  4604 ;; Hardware stack levels required when called:    2
  4605 ;; This function calls:
  4606 ;;		_I2C_Master_Wait
  4607 ;; This function is called by:
  4608 ;;		_mostrarLCD
  4609 ;;		_get_Time
  4610 ;;		_get_hora
  4611 ;;		_Zeit_Datum_Set
  4612 ;;		_temp_objeto
  4613 ;;		_temp_ambiente
  4614 ;;		_IMU_init
  4615 ;;		_Acc_X
  4616 ;;		_Acc_Y
  4617 ;;		_Acc_Z
  4618 ;;		_Gy_X
  4619 ;;		_Gy_Y
  4620 ;;		_Gy_Z
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           
  4625                           ;psect for function _I2C_Master_Write
  4626  0A24                     _I2C_Master_Write:	
  4627                           
  4628                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  4629                           
  4630                           ;incstack = 0
  4631                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4632  0A24  120A  158A  2234   	fcall	_I2C_Master_Wait
  4633                           
  4634                           ;I2C.c: 68:     SSPBUF = d;
  4635  0A27  0872               	movf	I2C_Master_Write@d,w
  4636  0A28  1283               	bcf	3,5	;RP0=0, select bank0
  4637  0A29  1303               	bcf	3,6	;RP1=0, select bank0
  4638  0A2A  0093               	movwf	19	;volatile
  4639  0A2B  0008               	return
  4640  0A2C                     __end_of_I2C_Master_Write:	
  4641                           
  4642                           	psect	text15
  4643  0A1D                     __ptext15:	
  4644 ;; *************** function _I2C_Master_Stop *****************
  4645 ;; Defined at:
  4646 ;;		line 55 in file "I2C.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;		None
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;		None
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		wreg, status,2, status,0, pclath, cstack
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4660 ;;      Params:         0       0       0       0       0
  4661 ;;      Locals:         0       0       0       0       0
  4662 ;;      Temps:          0       0       0       0       0
  4663 ;;      Totals:         0       0       0       0       0
  4664 ;;Total ram usage:        0 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; Hardware stack levels required when called:    2
  4667 ;; This function calls:
  4668 ;;		_I2C_Master_Wait
  4669 ;; This function is called by:
  4670 ;;		_mostrarLCD
  4671 ;;		_get_Time
  4672 ;;		_get_hora
  4673 ;;		_Zeit_Datum_Set
  4674 ;;		_temp_objeto
  4675 ;;		_temp_ambiente
  4676 ;;		_IMU_init
  4677 ;;		_Acc_X
  4678 ;;		_Acc_Y
  4679 ;;		_Acc_Z
  4680 ;;		_Gy_X
  4681 ;;		_Gy_Y
  4682 ;;		_Gy_Z
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           
  4687                           ;psect for function _I2C_Master_Stop
  4688  0A1D                     _I2C_Master_Stop:	
  4689                           
  4690                           ;I2C.c: 57:     I2C_Master_Wait();
  4691                           
  4692                           ;incstack = 0
  4693                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4694  0A1D  120A  158A  2234   	fcall	_I2C_Master_Wait
  4695                           
  4696                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  4697  0A20  1683               	bsf	3,5	;RP0=1, select bank1
  4698  0A21  1303               	bcf	3,6	;RP1=0, select bank1
  4699  0A22  1511               	bsf	17,2	;volatile
  4700  0A23  0008               	return
  4701  0A24                     __end_of_I2C_Master_Stop:	
  4702                           
  4703                           	psect	text16
  4704  0A16                     __ptext16:	
  4705 ;; *************** function _I2C_Master_Start *****************
  4706 ;; Defined at:
  4707 ;;		line 39 in file "I2C.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;		None
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;		None
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0, pclath, cstack
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4721 ;;      Params:         0       0       0       0       0
  4722 ;;      Locals:         0       0       0       0       0
  4723 ;;      Temps:          0       0       0       0       0
  4724 ;;      Totals:         0       0       0       0       0
  4725 ;;Total ram usage:        0 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    2
  4728 ;; This function calls:
  4729 ;;		_I2C_Master_Wait
  4730 ;; This function is called by:
  4731 ;;		_mostrarLCD
  4732 ;;		_get_Time
  4733 ;;		_get_hora
  4734 ;;		_Zeit_Datum_Set
  4735 ;;		_temp_objeto
  4736 ;;		_temp_ambiente
  4737 ;;		_IMU_init
  4738 ;;		_Acc_X
  4739 ;;		_Acc_Y
  4740 ;;		_Acc_Z
  4741 ;;		_Gy_X
  4742 ;;		_Gy_Y
  4743 ;;		_Gy_Z
  4744 ;; This function uses a non-reentrant model
  4745 ;;
  4746                           
  4747                           
  4748                           ;psect for function _I2C_Master_Start
  4749  0A16                     _I2C_Master_Start:	
  4750                           
  4751                           ;I2C.c: 41:     I2C_Master_Wait();
  4752                           
  4753                           ;incstack = 0
  4754                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4755  0A16  120A  158A  2234   	fcall	_I2C_Master_Wait
  4756                           
  4757                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  4758  0A19  1683               	bsf	3,5	;RP0=1, select bank1
  4759  0A1A  1303               	bcf	3,6	;RP1=0, select bank1
  4760  0A1B  1411               	bsf	17,0	;volatile
  4761  0A1C  0008               	return
  4762  0A1D                     __end_of_I2C_Master_Start:	
  4763                           
  4764                           	psect	text17
  4765  0B39                     __ptext17:	
  4766 ;; *************** function _I2C_Master_Read *****************
  4767 ;; Defined at:
  4768 ;;		line 74 in file "I2C.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  a               2    2[COMMON] unsigned short 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  temp            2    6[COMMON] unsigned short 
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  2    2[COMMON] unsigned short 
  4775 ;; Registers used:
  4776 ;;		wreg, status,2, status,0, pclath, cstack
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4782 ;;      Params:         2       0       0       0       0
  4783 ;;      Locals:         2       0       0       0       0
  4784 ;;      Temps:          2       0       0       0       0
  4785 ;;      Totals:         6       0       0       0       0
  4786 ;;Total ram usage:        6 bytes
  4787 ;; Hardware stack levels used:    1
  4788 ;; Hardware stack levels required when called:    2
  4789 ;; This function calls:
  4790 ;;		_I2C_Master_Wait
  4791 ;; This function is called by:
  4792 ;;		_get_Time
  4793 ;;		_get_hora
  4794 ;;		_temp_objeto
  4795 ;;		_temp_ambiente
  4796 ;;		_Acc_X
  4797 ;;		_Acc_Y
  4798 ;;		_Acc_Z
  4799 ;;		_Gy_X
  4800 ;;		_Gy_Y
  4801 ;;		_Gy_Z
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           
  4806                           ;psect for function _I2C_Master_Read
  4807  0B39                     _I2C_Master_Read:	
  4808                           
  4809                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  4810                           
  4811                           ;incstack = 0
  4812                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4813  0B39  120A  158A  2234  120A  158A  	fcall	_I2C_Master_Wait
  4814                           
  4815                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  4816  0B3E  1683               	bsf	3,5	;RP0=1, select bank1
  4817  0B3F  1303               	bcf	3,6	;RP1=0, select bank1
  4818  0B40  1591               	bsf	17,3	;volatile
  4819                           
  4820                           ;I2C.c: 79:     I2C_Master_Wait();
  4821  0B41  120A  158A  2234  120A  158A  	fcall	_I2C_Master_Wait
  4822                           
  4823                           ;I2C.c: 80:     temp = SSPBUF;
  4824  0B46  1283               	bcf	3,5	;RP0=0, select bank0
  4825  0B47  1303               	bcf	3,6	;RP1=0, select bank0
  4826  0B48  0813               	movf	19,w	;volatile
  4827  0B49  00F4               	movwf	??_I2C_Master_Read
  4828  0B4A  01F5               	clrf	??_I2C_Master_Read+1
  4829  0B4B  0874               	movf	??_I2C_Master_Read,w
  4830  0B4C  00F6               	movwf	I2C_Master_Read@temp
  4831  0B4D  0875               	movf	??_I2C_Master_Read+1,w
  4832  0B4E  00F7               	movwf	I2C_Master_Read@temp+1
  4833                           
  4834                           ;I2C.c: 81:     I2C_Master_Wait();
  4835  0B4F  120A  158A  2234  120A  158A  	fcall	_I2C_Master_Wait
  4836                           
  4837                           ;I2C.c: 82:     if(a == 1){
  4838  0B54  0372               	decf	I2C_Master_Read@a,w
  4839  0B55  0473               	iorwf	I2C_Master_Read@a+1,w
  4840  0B56  1D03               	btfss	3,2
  4841  0B57  2B5C               	goto	l327
  4842                           
  4843                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  4844  0B58  1683               	bsf	3,5	;RP0=1, select bank1
  4845  0B59  1303               	bcf	3,6	;RP1=0, select bank1
  4846  0B5A  1291               	bcf	17,5	;volatile
  4847                           
  4848                           ;I2C.c: 84:     }else{
  4849  0B5B  2B5F               	goto	l328
  4850  0B5C                     l327:	
  4851                           
  4852                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  4853  0B5C  1683               	bsf	3,5	;RP0=1, select bank1
  4854  0B5D  1303               	bcf	3,6	;RP1=0, select bank1
  4855  0B5E  1691               	bsf	17,5	;volatile
  4856  0B5F                     l328:	
  4857                           ;I2C.c: 86:     }
  4858                           
  4859                           
  4860                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  4861  0B5F  1611               	bsf	17,4	;volatile
  4862                           
  4863                           ;I2C.c: 88:     return temp;
  4864  0B60  0877               	movf	I2C_Master_Read@temp+1,w
  4865  0B61  00F3               	movwf	?_I2C_Master_Read+1
  4866  0B62  0876               	movf	I2C_Master_Read@temp,w
  4867  0B63  00F2               	movwf	?_I2C_Master_Read
  4868  0B64  0008               	return
  4869  0B65                     __end_of_I2C_Master_Read:	
  4870                           
  4871                           	psect	text18
  4872  0A34                     __ptext18:	
  4873 ;; *************** function _I2C_Master_Wait *****************
  4874 ;; Defined at:
  4875 ;;		line 32 in file "I2C.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;		None
  4878 ;; Auto vars:     Size  Location     Type
  4879 ;;		None
  4880 ;; Return value:  Size  Location     Type
  4881 ;;                  1    wreg      void 
  4882 ;; Registers used:
  4883 ;;		wreg, status,2
  4884 ;; Tracked objects:
  4885 ;;		On entry : 0/0
  4886 ;;		On exit  : 0/0
  4887 ;;		Unchanged: 0/0
  4888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4889 ;;      Params:         0       0       0       0       0
  4890 ;;      Locals:         0       0       0       0       0
  4891 ;;      Temps:          0       0       0       0       0
  4892 ;;      Totals:         0       0       0       0       0
  4893 ;;Total ram usage:        0 bytes
  4894 ;; Hardware stack levels used:    1
  4895 ;; Hardware stack levels required when called:    1
  4896 ;; This function calls:
  4897 ;;		Nothing
  4898 ;; This function is called by:
  4899 ;;		_I2C_Master_Start
  4900 ;;		_I2C_Master_Stop
  4901 ;;		_I2C_Master_Write
  4902 ;;		_I2C_Master_Read
  4903 ;;		_I2C_Master_RepeatedStart
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           
  4908                           ;psect for function _I2C_Master_Wait
  4909  0A34                     _I2C_Master_Wait:	
  4910  0A34                     l309:	
  4911                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4912                           
  4913                           ;incstack = 0
  4914                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4915                           
  4916  0A34  1683               	bsf	3,5	;RP0=1, select bank1
  4917  0A35  1303               	bcf	3,6	;RP1=0, select bank1
  4918  0A36  1914               	btfsc	20,2	;volatile
  4919  0A37  2A34               	goto	l309
  4920  0A38  0811               	movf	17,w	;volatile
  4921  0A39  391F               	andlw	31
  4922  0A3A  1903               	btfsc	3,2
  4923  0A3B  0008               	return
  4924  0A3C  2A34               	goto	l309
  4925  0A3D                     __end_of_I2C_Master_Wait:	
  4926                           
  4927                           	psect	text19
  4928  0AB4                     __ptext19:	
  4929 ;; *************** function _BCD_a_DEC *****************
  4930 ;; Defined at:
  4931 ;;		line 27 in file "RTC.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  numBCD          1    wreg     unsigned char 
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;  numBCD          1    9[COMMON] unsigned char 
  4936 ;; Return value:  Size  Location     Type
  4937 ;;                  1    wreg      unsigned char 
  4938 ;; Registers used:
  4939 ;;		wreg, status,2, status,0, pclath, cstack
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/0
  4942 ;;		On exit  : 0/0
  4943 ;;		Unchanged: 0/0
  4944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4945 ;;      Params:         0       0       0       0       0
  4946 ;;      Locals:         1       0       0       0       0
  4947 ;;      Temps:          3       0       0       0       0
  4948 ;;      Totals:         4       0       0       0       0
  4949 ;;Total ram usage:        4 bytes
  4950 ;; Hardware stack levels used:    1
  4951 ;; Hardware stack levels required when called:    2
  4952 ;; This function calls:
  4953 ;;		___bmul
  4954 ;; This function is called by:
  4955 ;;		_get_Time
  4956 ;;		_get_hora
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           
  4961                           ;psect for function _BCD_a_DEC
  4962  0AB4                     _BCD_a_DEC:	
  4963                           
  4964                           ;incstack = 0
  4965                           ; Regs used in _BCD_a_DEC: [wreg+status,2+status,0+pclath+cstack]
  4966                           ;BCD_a_DEC@numBCD stored from wreg
  4967  0AB4  00F9               	movwf	BCD_a_DEC@numBCD
  4968                           
  4969                           ;RTC.c: 28:     return (numBCD >> 4) * 10 + (numBCD & 0x0F);
  4970  0AB5  300F               	movlw	15
  4971  0AB6  0579               	andwf	BCD_a_DEC@numBCD,w
  4972  0AB7  00F6               	movwf	??_BCD_a_DEC
  4973  0AB8  300A               	movlw	10
  4974  0AB9  00F7               	movwf	??_BCD_a_DEC+1
  4975  0ABA  0877               	movf	??_BCD_a_DEC+1,w
  4976  0ABB  00F2               	movwf	___bmul@multiplicand
  4977  0ABC  0879               	movf	BCD_a_DEC@numBCD,w
  4978  0ABD  00F8               	movwf	??_BCD_a_DEC+2
  4979  0ABE  3004               	movlw	4
  4980  0ABF                     u1115:	
  4981  0ABF  1003               	clrc
  4982  0AC0  0CF8               	rrf	??_BCD_a_DEC+2,f
  4983  0AC1  3EFF               	addlw	-1
  4984  0AC2  1D03               	skipz
  4985  0AC3  2ABF               	goto	u1115
  4986  0AC4  0878               	movf	??_BCD_a_DEC+2,w
  4987  0AC5  120A  158A  2267   	fcall	___bmul
  4988  0AC8  0776               	addwf	??_BCD_a_DEC,w
  4989  0AC9  0008               	return
  4990  0ACA                     __end_of_BCD_a_DEC:	
  4991                           
  4992                           	psect	text20
  4993  0A67                     __ptext20:	
  4994 ;; *************** function ___bmul *****************
  4995 ;; Defined at:
  4996 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;  multiplier      1    wreg     unsigned char 
  4999 ;;  multiplicand    1    2[COMMON] unsigned char 
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;  multiplier      1    5[COMMON] unsigned char 
  5002 ;;  product         1    4[COMMON] unsigned char 
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      unsigned char 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2, status,0
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5012 ;;      Params:         1       0       0       0       0
  5013 ;;      Locals:         2       0       0       0       0
  5014 ;;      Temps:          1       0       0       0       0
  5015 ;;      Totals:         4       0       0       0       0
  5016 ;;Total ram usage:        4 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:    1
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_BCD_a_DEC
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           
  5027                           ;psect for function ___bmul
  5028  0A67                     ___bmul:	
  5029                           
  5030                           ;incstack = 0
  5031                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5032                           ;___bmul@multiplier stored from wreg
  5033  0A67  00F5               	movwf	___bmul@multiplier
  5034  0A68  01F4               	clrf	___bmul@product
  5035  0A69                     l2560:	
  5036  0A69  1C75               	btfss	___bmul@multiplier,0
  5037  0A6A  2A6F               	goto	l2564
  5038  0A6B  0872               	movf	___bmul@multiplicand,w
  5039  0A6C  00F3               	movwf	??___bmul
  5040  0A6D  0873               	movf	??___bmul,w
  5041  0A6E  07F4               	addwf	___bmul@product,f
  5042  0A6F                     l2564:	
  5043  0A6F  1003               	clrc
  5044  0A70  0DF2               	rlf	___bmul@multiplicand,f
  5045  0A71  1003               	clrc
  5046  0A72  0CF5               	rrf	___bmul@multiplier,f
  5047  0A73  0875               	movf	___bmul@multiplier,w
  5048  0A74  1D03               	btfss	3,2
  5049  0A75  2A69               	goto	l2560
  5050  0A76  0874               	movf	___bmul@product,w
  5051  0A77  0008               	return
  5052  0A78                     __end_of___bmul:	
  5053                           
  5054                           	psect	text21
  5055  0E25                     __ptext21:	
  5056 ;; *************** function _SetUp *****************
  5057 ;; Defined at:
  5058 ;;		line 168 in file "main_Master.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;		None
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;		None
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  1    wreg      void 
  5065 ;; Registers used:
  5066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5072 ;;      Params:         0       0       0       0       0
  5073 ;;      Locals:         0       0       0       0       0
  5074 ;;      Temps:          0       1       0       0       0
  5075 ;;      Totals:         0       1       0       0       0
  5076 ;;Total ram usage:        1 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; Hardware stack levels required when called:    3
  5079 ;; This function calls:
  5080 ;;		_I2C_Master_Init
  5081 ;;		_LCD_Create_Char
  5082 ;;		_LCD_clear
  5083 ;;		_LCD_init
  5084 ;;		_OSC_config
  5085 ;;		_uart_init
  5086 ;; This function is called by:
  5087 ;;		_main
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091                           
  5092                           ;psect for function _SetUp
  5093  0E25                     _SetUp:	
  5094                           
  5095                           ;main_Master.c: 169:     TRISC = 0;
  5096                           
  5097                           ;incstack = 0
  5098                           ; Regs used in _SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5099  0E25  1683               	bsf	3,5	;RP0=1, select bank1
  5100  0E26  1303               	bcf	3,6	;RP1=0, select bank1
  5101  0E27  0187               	clrf	7	;volatile
  5102                           
  5103                           ;main_Master.c: 170:     PORTC = 0;
  5104  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  5105  0E29  1303               	bcf	3,6	;RP1=0, select bank0
  5106  0E2A  0187               	clrf	7	;volatile
  5107                           
  5108                           ;main_Master.c: 171:     TRISB = 0;
  5109  0E2B  1683               	bsf	3,5	;RP0=1, select bank1
  5110  0E2C  1303               	bcf	3,6	;RP1=0, select bank1
  5111  0E2D  0186               	clrf	6	;volatile
  5112                           
  5113                           ;main_Master.c: 172:     OSC_config(4000000);
  5114  0E2E  3000               	movlw	0
  5115  0E2F  00F5               	movwf	OSC_config@frecuencia+3
  5116  0E30  303D               	movlw	61
  5117  0E31  00F4               	movwf	OSC_config@frecuencia+2
  5118  0E32  3009               	movlw	9
  5119  0E33  00F3               	movwf	OSC_config@frecuencia+1
  5120  0E34  3000               	movlw	0
  5121  0E35  00F2               	movwf	OSC_config@frecuencia
  5122  0E36  120A  158A  2754  120A  158A  	fcall	_OSC_config
  5123                           
  5124                           ;main_Master.c: 173:     TRISB = 0b00000110;
  5125  0E3B  3006               	movlw	6
  5126  0E3C  1683               	bsf	3,5	;RP0=1, select bank1
  5127  0E3D  1303               	bcf	3,6	;RP1=0, select bank1
  5128  0E3E  0086               	movwf	6	;volatile
  5129                           
  5130                           ;main_Master.c: 174:     ANSELH = 0;
  5131  0E3F  1683               	bsf	3,5	;RP0=1, select bank3
  5132  0E40  1703               	bsf	3,6	;RP1=1, select bank3
  5133  0E41  0189               	clrf	9	;volatile
  5134                           
  5135                           ;main_Master.c: 175:     WPUB = 0b00000110;
  5136  0E42  3006               	movlw	6
  5137  0E43  1683               	bsf	3,5	;RP0=1, select bank1
  5138  0E44  1303               	bcf	3,6	;RP1=0, select bank1
  5139  0E45  0095               	movwf	21	;volatile
  5140                           
  5141                           ;main_Master.c: 176:     OPTION_REGbits.nRBPU = 0;
  5142  0E46  1381               	bcf	1,7	;volatile
  5143                           
  5144                           ;main_Master.c: 177:     IOCB = 0b00000110;
  5145  0E47  3006               	movlw	6
  5146  0E48  0096               	movwf	22	;volatile
  5147                           
  5148                           ;main_Master.c: 178:     INTCONbits.RBIE = 1;
  5149  0E49  158B               	bsf	11,3	;volatile
  5150                           
  5151                           ;main_Master.c: 179:     INTCONbits.GIE = 1;
  5152  0E4A  178B               	bsf	11,7	;volatile
  5153                           
  5154                           ;main_Master.c: 180:     TRISD = 0;
  5155  0E4B  0188               	clrf	8	;volatile
  5156                           
  5157                           ;main_Master.c: 181:     TRISC0 = 0;
  5158  0E4C  1007               	bcf	7,0	;volatile
  5159                           
  5160                           ;main_Master.c: 182:     TRISC1 = 0;
  5161  0E4D  1087               	bcf	7,1	;volatile
  5162                           
  5163                           ;main_Master.c: 183:     LCD_init();
  5164  0E4E  120A  158A  24CA  120A  158A  	fcall	_LCD_init
  5165                           
  5166                           ;main_Master.c: 184:     LCD_Create_Char(0, atilde);
  5167  0E53  3011               	movlw	(low ((_atilde-__stringbase)| (0+32768)))& (0+255)
  5168  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  5169  0E55  1303               	bcf	3,6	;RP1=0, select bank0
  5170  0E56  00AE               	movwf	??_SetUp
  5171  0E57  082E               	movf	??_SetUp,w
  5172  0E58  00F5               	movwf	LCD_Create_Char@chardata
  5173  0E59  3000               	movlw	0
  5174  0E5A  120A  158A  230D  120A  158A  	fcall	_LCD_Create_Char
  5175                           
  5176                           ;main_Master.c: 185:     LCD_Create_Char(1, arrowr);
  5177  0E5F  3021               	movlw	(low ((_arrowr-__stringbase)| (0+32768)))& (0+255)
  5178  0E60  1283               	bcf	3,5	;RP0=0, select bank0
  5179  0E61  1303               	bcf	3,6	;RP1=0, select bank0
  5180  0E62  00AE               	movwf	??_SetUp
  5181  0E63  082E               	movf	??_SetUp,w
  5182  0E64  00F5               	movwf	LCD_Create_Char@chardata
  5183  0E65  3001               	movlw	1
  5184  0E66  120A  158A  230D  120A  158A  	fcall	_LCD_Create_Char
  5185                           
  5186                           ;main_Master.c: 186:     LCD_Create_Char(2, termometro);
  5187  0E6B  3009               	movlw	(low ((_termometro-__stringbase)| (0+32768)))& (0+255)
  5188  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  5189  0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  5190  0E6E  00AE               	movwf	??_SetUp
  5191  0E6F  082E               	movf	??_SetUp,w
  5192  0E70  00F5               	movwf	LCD_Create_Char@chardata
  5193  0E71  3002               	movlw	2
  5194  0E72  120A  158A  230D  120A  158A  	fcall	_LCD_Create_Char
  5195                           
  5196                           ;main_Master.c: 187:     LCD_Create_Char(3, gota);
  5197  0E77  3001               	movlw	(low ((_gota-__stringbase)| (0+32768)))& (0+255)
  5198  0E78  1283               	bcf	3,5	;RP0=0, select bank0
  5199  0E79  1303               	bcf	3,6	;RP1=0, select bank0
  5200  0E7A  00AE               	movwf	??_SetUp
  5201  0E7B  082E               	movf	??_SetUp,w
  5202  0E7C  00F5               	movwf	LCD_Create_Char@chardata
  5203  0E7D  3003               	movlw	3
  5204  0E7E  120A  158A  230D  120A  158A  	fcall	_LCD_Create_Char
  5205                           
  5206                           ;main_Master.c: 188:     LCD_Create_Char(4, arrowr_vacio);
  5207  0E83  3019               	movlw	(low ((_arrowr_vacio-__stringbase)| (0+32768)))& (0+255)
  5208  0E84  1283               	bcf	3,5	;RP0=0, select bank0
  5209  0E85  1303               	bcf	3,6	;RP1=0, select bank0
  5210  0E86  00AE               	movwf	??_SetUp
  5211  0E87  082E               	movf	??_SetUp,w
  5212  0E88  00F5               	movwf	LCD_Create_Char@chardata
  5213  0E89  3004               	movlw	4
  5214  0E8A  120A  158A  230D  120A  158A  	fcall	_LCD_Create_Char
  5215                           
  5216                           ;main_Master.c: 189:     LCD_clear();
  5217  0E8F  120A  158A  229E  120A  158A  	fcall	_LCD_clear
  5218                           
  5219                           ;main_Master.c: 190:     uart_init(9600);
  5220  0E94  3080               	movlw	128
  5221  0E95  00F2               	movwf	?_uart_init
  5222  0E96  3025               	movlw	37
  5223  0E97  00F3               	movwf	?_uart_init+1
  5224  0E98  120A  158A  2289  120A  158A  	fcall	_uart_init
  5225                           
  5226                           ;main_Master.c: 191:     I2C_Master_Init(100000);
  5227  0E9D  3000               	movlw	0
  5228  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  5229  0E9F  1303               	bcf	3,6	;RP1=0, select bank0
  5230  0EA0  00A9               	movwf	I2C_Master_Init@c+3
  5231  0EA1  3001               	movlw	1
  5232  0EA2  00A8               	movwf	I2C_Master_Init@c+2
  5233  0EA3  3086               	movlw	134
  5234  0EA4  00A7               	movwf	I2C_Master_Init@c+1
  5235  0EA5  30A0               	movlw	160
  5236  0EA6  00A6               	movwf	I2C_Master_Init@c
  5237  0EA7  120A  118A  27BC   	fcall	_I2C_Master_Init
  5238  0EAA  0008               	return
  5239  0EAB                     __end_of_SetUp:	
  5240                           
  5241                           	psect	text22
  5242  0A89                     __ptext22:	
  5243 ;; *************** function _uart_init *****************
  5244 ;; Defined at:
  5245 ;;		line 13 in file "UART.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;		None
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;		None
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  1    wreg      void 
  5252 ;; Registers used:
  5253 ;;		wreg, status,2
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5259 ;;      Params:         2       0       0       0       0
  5260 ;;      Locals:         0       0       0       0       0
  5261 ;;      Temps:          0       0       0       0       0
  5262 ;;      Totals:         2       0       0       0       0
  5263 ;;Total ram usage:        2 bytes
  5264 ;; Hardware stack levels used:    1
  5265 ;; Hardware stack levels required when called:    1
  5266 ;; This function calls:
  5267 ;;		Nothing
  5268 ;; This function is called by:
  5269 ;;		_SetUp
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           
  5274                           ;psect for function _uart_init
  5275  0A89                     _uart_init:	
  5276                           
  5277                           ;UART.c: 14:     TXSTAbits.SYNC = 0;
  5278                           
  5279                           ;incstack = 0
  5280                           ; Regs used in _uart_init: [wreg+status,2]
  5281  0A89  1683               	bsf	3,5	;RP0=1, select bank1
  5282  0A8A  1303               	bcf	3,6	;RP1=0, select bank1
  5283  0A8B  1218               	bcf	24,4	;volatile
  5284                           
  5285                           ;UART.c: 15:     TXSTAbits.BRGH = 1;
  5286  0A8C  1518               	bsf	24,2	;volatile
  5287                           
  5288                           ;UART.c: 16:     BAUDCTLbits.BRG16 = 1;
  5289  0A8D  1683               	bsf	3,5	;RP0=1, select bank3
  5290  0A8E  1703               	bsf	3,6	;RP1=1, select bank3
  5291  0A8F  1587               	bsf	7,3	;volatile
  5292                           
  5293                           ;UART.c: 17:     SPBRG = 103;
  5294  0A90  3067               	movlw	103
  5295  0A91  1683               	bsf	3,5	;RP0=1, select bank1
  5296  0A92  1303               	bcf	3,6	;RP1=0, select bank1
  5297  0A93  0099               	movwf	25	;volatile
  5298                           
  5299                           ;UART.c: 18:     SPBRGH = 0;
  5300  0A94  019A               	clrf	26	;volatile
  5301                           
  5302                           ;UART.c: 20:     RCSTAbits.SPEN = 1;
  5303  0A95  1283               	bcf	3,5	;RP0=0, select bank0
  5304  0A96  1303               	bcf	3,6	;RP1=0, select bank0
  5305  0A97  1798               	bsf	24,7	;volatile
  5306                           
  5307                           ;UART.c: 21:     RCSTAbits.RX9 = 0;
  5308  0A98  1318               	bcf	24,6	;volatile
  5309                           
  5310                           ;UART.c: 22:     RCSTAbits.CREN = 1;
  5311  0A99  1618               	bsf	24,4	;volatile
  5312                           
  5313                           ;UART.c: 24:     TXSTAbits.TXEN = 1;
  5314  0A9A  1683               	bsf	3,5	;RP0=1, select bank1
  5315  0A9B  1303               	bcf	3,6	;RP1=0, select bank1
  5316  0A9C  1698               	bsf	24,5	;volatile
  5317  0A9D  0008               	return
  5318  0A9E                     __end_of_uart_init:	
  5319                           
  5320                           	psect	text23
  5321  0F54                     __ptext23:	
  5322 ;; *************** function _OSC_config *****************
  5323 ;; Defined at:
  5324 ;;		line 197 in file "main_Master.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;  frecuencia      4    2[COMMON] unsigned long 
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;		None
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  1    wreg      void 
  5331 ;; Registers used:
  5332 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5338 ;;      Params:         4       0       0       0       0
  5339 ;;      Locals:         0       0       0       0       0
  5340 ;;      Temps:          0       0       0       0       0
  5341 ;;      Totals:         4       0       0       0       0
  5342 ;;Total ram usage:        4 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; Hardware stack levels required when called:    1
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_SetUp
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           
  5353                           ;psect for function _OSC_config
  5354  0F54                     _OSC_config:	
  5355                           
  5356                           ;main_Master.c: 198:     switch(frecuencia){
  5357                           
  5358                           ;incstack = 0
  5359                           ; Regs used in _OSC_config: [wreg-fsr0h+status,2+status,0]
  5360  0F54  2F90               	goto	l2698
  5361  0F55                     l2680:	
  5362                           
  5363                           ;main_Master.c: 200:             OSCCONbits.IRCF = 0b111;
  5364  0F55  3070               	movlw	112
  5365  0F56  1683               	bsf	3,5	;RP0=1, select bank1
  5366  0F57  1303               	bcf	3,6	;RP1=0, select bank1
  5367  0F58  048F               	iorwf	15,f	;volatile
  5368                           
  5369                           ;main_Master.c: 201:             break;
  5370  0F59  0008               	return
  5371  0F5A                     l2682:	
  5372                           
  5373                           ;main_Master.c: 203:             OSCCONbits.IRCF = 0b110;
  5374  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  5375  0F5B  1303               	bcf	3,6	;RP1=0, select bank1
  5376  0F5C  080F               	movf	15,w	;volatile
  5377  0F5D  398F               	andlw	-113
  5378  0F5E  3860               	iorlw	96
  5379  0F5F  008F               	movwf	15	;volatile
  5380                           
  5381                           ;main_Master.c: 204:             break;
  5382  0F60  0008               	return
  5383  0F61                     l2684:	
  5384                           
  5385                           ;main_Master.c: 206:             OSCCONbits.IRCF = 0b101;
  5386  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  5387  0F62  1303               	bcf	3,6	;RP1=0, select bank1
  5388  0F63  080F               	movf	15,w	;volatile
  5389  0F64  398F               	andlw	-113
  5390  0F65  3850               	iorlw	80
  5391  0F66  008F               	movwf	15	;volatile
  5392                           
  5393                           ;main_Master.c: 207:             break;
  5394  0F67  0008               	return
  5395  0F68                     l2686:	
  5396                           
  5397                           ;main_Master.c: 209:             OSCCONbits.IRCF = 0b100;
  5398  0F68  1683               	bsf	3,5	;RP0=1, select bank1
  5399  0F69  1303               	bcf	3,6	;RP1=0, select bank1
  5400  0F6A  080F               	movf	15,w	;volatile
  5401  0F6B  398F               	andlw	-113
  5402  0F6C  3840               	iorlw	64
  5403  0F6D  008F               	movwf	15	;volatile
  5404                           
  5405                           ;main_Master.c: 210:             break;
  5406  0F6E  0008               	return
  5407  0F6F                     l2688:	
  5408                           
  5409                           ;main_Master.c: 212:             OSCCONbits.IRCF = 0b011;
  5410  0F6F  1683               	bsf	3,5	;RP0=1, select bank1
  5411  0F70  1303               	bcf	3,6	;RP1=0, select bank1
  5412  0F71  080F               	movf	15,w	;volatile
  5413  0F72  398F               	andlw	-113
  5414  0F73  3830               	iorlw	48
  5415  0F74  008F               	movwf	15	;volatile
  5416                           
  5417                           ;main_Master.c: 213:             break;
  5418  0F75  0008               	return
  5419  0F76                     l2690:	
  5420                           
  5421                           ;main_Master.c: 215:             OSCCONbits.IRCF = 0b010;
  5422  0F76  1683               	bsf	3,5	;RP0=1, select bank1
  5423  0F77  1303               	bcf	3,6	;RP1=0, select bank1
  5424  0F78  080F               	movf	15,w	;volatile
  5425  0F79  398F               	andlw	-113
  5426  0F7A  3820               	iorlw	32
  5427  0F7B  008F               	movwf	15	;volatile
  5428                           
  5429                           ;main_Master.c: 216:             break;
  5430  0F7C  0008               	return
  5431  0F7D                     l2692:	
  5432                           
  5433                           ;main_Master.c: 218:             OSCCONbits.IRCF = 0b001;
  5434  0F7D  1683               	bsf	3,5	;RP0=1, select bank1
  5435  0F7E  1303               	bcf	3,6	;RP1=0, select bank1
  5436  0F7F  080F               	movf	15,w	;volatile
  5437  0F80  398F               	andlw	-113
  5438  0F81  3810               	iorlw	16
  5439  0F82  008F               	movwf	15	;volatile
  5440                           
  5441                           ;main_Master.c: 219:             break;
  5442  0F83  0008               	return
  5443  0F84                     l2694:	
  5444                           
  5445                           ;main_Master.c: 221:             OSCCONbits.IRCF = 0b000;
  5446  0F84  308F               	movlw	-113
  5447  0F85  1683               	bsf	3,5	;RP0=1, select bank1
  5448  0F86  1303               	bcf	3,6	;RP1=0, select bank1
  5449  0F87  058F               	andwf	15,f	;volatile
  5450                           
  5451                           ;main_Master.c: 222:             break;
  5452  0F88  0008               	return
  5453  0F89                     l2696:	
  5454                           
  5455                           ;main_Master.c: 224:             OSCCONbits.IRCF = 0b110;
  5456  0F89  1683               	bsf	3,5	;RP0=1, select bank1
  5457  0F8A  1303               	bcf	3,6	;RP1=0, select bank1
  5458  0F8B  080F               	movf	15,w	;volatile
  5459  0F8C  398F               	andlw	-113
  5460  0F8D  3860               	iorlw	96
  5461  0F8E  008F               	movwf	15	;volatile
  5462                           
  5463                           ;main_Master.c: 225:     }
  5464  0F8F  0008               	return
  5465  0F90                     l2698:	
  5466                           
  5467                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 9 sub-sw
      +                          itches
  5468                           ; Switch size 1, requested type "simple"
  5469                           ; Number of cases is 1, Range of values is 0 to 0
  5470                           ; switch strategies available:
  5471                           ; Name         Instructions Cycles
  5472                           ; simple_byte            4     3 (average)
  5473                           ; direct_byte           11     8 (fixed)
  5474                           ; jumptable            260     6 (fixed)
  5475                           ;	Chosen strategy is simple_byte
  5476  0F90  0875               	movf	OSC_config@frecuencia+3,w
  5477  0F91  3A00               	xorlw	0	; case 0
  5478  0F92  1903               	skipnz
  5479  0F93  2FE5               	goto	l4754
  5480  0F94  2F89               	goto	l2696
  5481  0F95                     l4738:	
  5482                           
  5483                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5484                           ; Switch size 1, requested type "simple"
  5485                           ; Number of cases is 1, Range of values is 125 to 125
  5486                           ; switch strategies available:
  5487                           ; Name         Instructions Cycles
  5488                           ; simple_byte            4     3 (average)
  5489                           ; direct_byte           14    11 (fixed)
  5490                           ; jumptable            263     9 (fixed)
  5491                           ;	Chosen strategy is simple_byte
  5492  0F95  0873               	movf	OSC_config@frecuencia+1,w
  5493  0F96  3A7D               	xorlw	125	; case 125
  5494  0F97  1903               	skipnz
  5495  0F98  2F9A               	goto	l4756
  5496  0F99  2F89               	goto	l2696
  5497  0F9A                     l4756:	
  5498                           
  5499                           ; Switch size 1, requested type "simple"
  5500                           ; Number of cases is 1, Range of values is 0 to 0
  5501                           ; switch strategies available:
  5502                           ; Name         Instructions Cycles
  5503                           ; simple_byte            4     3 (average)
  5504                           ; direct_byte           11     8 (fixed)
  5505                           ; jumptable            260     6 (fixed)
  5506                           ;	Chosen strategy is simple_byte
  5507  0F9A  0872               	movf	OSC_config@frecuencia,w
  5508  0F9B  3A00               	xorlw	0	; case 0
  5509  0F9C  1903               	skipnz
  5510  0F9D  2F84               	goto	l2694
  5511  0F9E  2F89               	goto	l2696
  5512  0F9F                     l4740:	
  5513                           
  5514                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5515                           ; Switch size 1, requested type "simple"
  5516                           ; Number of cases is 1, Range of values is 232 to 232
  5517                           ; switch strategies available:
  5518                           ; Name         Instructions Cycles
  5519                           ; simple_byte            4     3 (average)
  5520                           ; direct_byte           14    11 (fixed)
  5521                           ; jumptable            263     9 (fixed)
  5522                           ;	Chosen strategy is simple_byte
  5523  0F9F  0873               	movf	OSC_config@frecuencia+1,w
  5524  0FA0  3AE8               	xorlw	232	; case 232
  5525  0FA1  1903               	skipnz
  5526  0FA2  2FA4               	goto	l4758
  5527  0FA3  2F89               	goto	l2696
  5528  0FA4                     l4758:	
  5529                           
  5530                           ; Switch size 1, requested type "simple"
  5531                           ; Number of cases is 1, Range of values is 72 to 72
  5532                           ; switch strategies available:
  5533                           ; Name         Instructions Cycles
  5534                           ; simple_byte            4     3 (average)
  5535                           ; direct_byte           14    11 (fixed)
  5536                           ; jumptable            263     9 (fixed)
  5537                           ;	Chosen strategy is simple_byte
  5538  0FA4  0872               	movf	OSC_config@frecuencia,w
  5539  0FA5  3A48               	xorlw	72	; case 72
  5540  0FA6  1903               	skipnz
  5541  0FA7  2F7D               	goto	l2692
  5542  0FA8  2F89               	goto	l2696
  5543  0FA9                     l4742:	
  5544                           
  5545                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5546                           ; Switch size 1, requested type "simple"
  5547                           ; Number of cases is 1, Range of values is 208 to 208
  5548                           ; switch strategies available:
  5549                           ; Name         Instructions Cycles
  5550                           ; simple_byte            4     3 (average)
  5551                           ; direct_byte           14    11 (fixed)
  5552                           ; jumptable            263     9 (fixed)
  5553                           ;	Chosen strategy is simple_byte
  5554  0FA9  0873               	movf	OSC_config@frecuencia+1,w
  5555  0FAA  3AD0               	xorlw	208	; case 208
  5556  0FAB  1903               	skipnz
  5557  0FAC  2FAE               	goto	l4760
  5558  0FAD  2F89               	goto	l2696
  5559  0FAE                     l4760:	
  5560                           
  5561                           ; Switch size 1, requested type "simple"
  5562                           ; Number of cases is 1, Range of values is 144 to 144
  5563                           ; switch strategies available:
  5564                           ; Name         Instructions Cycles
  5565                           ; simple_byte            4     3 (average)
  5566                           ; direct_byte           14    11 (fixed)
  5567                           ; jumptable            263     9 (fixed)
  5568                           ;	Chosen strategy is simple_byte
  5569  0FAE  0872               	movf	OSC_config@frecuencia,w
  5570  0FAF  3A90               	xorlw	144	; case 144
  5571  0FB0  1903               	skipnz
  5572  0FB1  2F76               	goto	l2690
  5573  0FB2  2F89               	goto	l2696
  5574  0FB3                     l4744:	
  5575                           
  5576                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5577                           ; Switch size 1, requested type "simple"
  5578                           ; Number of cases is 1, Range of values is 161 to 161
  5579                           ; switch strategies available:
  5580                           ; Name         Instructions Cycles
  5581                           ; simple_byte            4     3 (average)
  5582                           ; direct_byte           14    11 (fixed)
  5583                           ; jumptable            263     9 (fixed)
  5584                           ;	Chosen strategy is simple_byte
  5585  0FB3  0873               	movf	OSC_config@frecuencia+1,w
  5586  0FB4  3AA1               	xorlw	161	; case 161
  5587  0FB5  1903               	skipnz
  5588  0FB6  2FB8               	goto	l4762
  5589  0FB7  2F89               	goto	l2696
  5590  0FB8                     l4762:	
  5591                           
  5592                           ; Switch size 1, requested type "simple"
  5593                           ; Number of cases is 1, Range of values is 32 to 32
  5594                           ; switch strategies available:
  5595                           ; Name         Instructions Cycles
  5596                           ; simple_byte            4     3 (average)
  5597                           ; direct_byte           14    11 (fixed)
  5598                           ; jumptable            263     9 (fixed)
  5599                           ;	Chosen strategy is simple_byte
  5600  0FB8  0872               	movf	OSC_config@frecuencia,w
  5601  0FB9  3A20               	xorlw	32	; case 32
  5602  0FBA  1903               	skipnz
  5603  0FBB  2F6F               	goto	l2688
  5604  0FBC  2F89               	goto	l2696
  5605  0FBD                     l4746:	
  5606                           
  5607                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5608                           ; Switch size 1, requested type "simple"
  5609                           ; Number of cases is 1, Range of values is 66 to 66
  5610                           ; switch strategies available:
  5611                           ; Name         Instructions Cycles
  5612                           ; simple_byte            4     3 (average)
  5613                           ; direct_byte           14    11 (fixed)
  5614                           ; jumptable            263     9 (fixed)
  5615                           ;	Chosen strategy is simple_byte
  5616  0FBD  0873               	movf	OSC_config@frecuencia+1,w
  5617  0FBE  3A42               	xorlw	66	; case 66
  5618  0FBF  1903               	skipnz
  5619  0FC0  2FC2               	goto	l4764
  5620  0FC1  2F89               	goto	l2696
  5621  0FC2                     l4764:	
  5622                           
  5623                           ; Switch size 1, requested type "simple"
  5624                           ; Number of cases is 1, Range of values is 64 to 64
  5625                           ; switch strategies available:
  5626                           ; Name         Instructions Cycles
  5627                           ; simple_byte            4     3 (average)
  5628                           ; direct_byte           14    11 (fixed)
  5629                           ; jumptable            263     9 (fixed)
  5630                           ;	Chosen strategy is simple_byte
  5631  0FC2  0872               	movf	OSC_config@frecuencia,w
  5632  0FC3  3A40               	xorlw	64	; case 64
  5633  0FC4  1903               	skipnz
  5634  0FC5  2F68               	goto	l2686
  5635  0FC6  2F89               	goto	l2696
  5636  0FC7                     l4748:	
  5637                           
  5638                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5639                           ; Switch size 1, requested type "simple"
  5640                           ; Number of cases is 1, Range of values is 132 to 132
  5641                           ; switch strategies available:
  5642                           ; Name         Instructions Cycles
  5643                           ; simple_byte            4     3 (average)
  5644                           ; direct_byte           14    11 (fixed)
  5645                           ; jumptable            263     9 (fixed)
  5646                           ;	Chosen strategy is simple_byte
  5647  0FC7  0873               	movf	OSC_config@frecuencia+1,w
  5648  0FC8  3A84               	xorlw	132	; case 132
  5649  0FC9  1903               	skipnz
  5650  0FCA  2FCC               	goto	l4766
  5651  0FCB  2F89               	goto	l2696
  5652  0FCC                     l4766:	
  5653                           
  5654                           ; Switch size 1, requested type "simple"
  5655                           ; Number of cases is 1, Range of values is 128 to 128
  5656                           ; switch strategies available:
  5657                           ; Name         Instructions Cycles
  5658                           ; simple_byte            4     3 (average)
  5659                           ; direct_byte           14    11 (fixed)
  5660                           ; jumptable            263     9 (fixed)
  5661                           ;	Chosen strategy is simple_byte
  5662  0FCC  0872               	movf	OSC_config@frecuencia,w
  5663  0FCD  3A80               	xorlw	128	; case 128
  5664  0FCE  1903               	skipnz
  5665  0FCF  2F61               	goto	l2684
  5666  0FD0  2F89               	goto	l2696
  5667  0FD1                     l4750:	
  5668                           
  5669                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5670                           ; Switch size 1, requested type "simple"
  5671                           ; Number of cases is 1, Range of values is 9 to 9
  5672                           ; switch strategies available:
  5673                           ; Name         Instructions Cycles
  5674                           ; simple_byte            4     3 (average)
  5675                           ; direct_byte           14    11 (fixed)
  5676                           ; jumptable            263     9 (fixed)
  5677                           ;	Chosen strategy is simple_byte
  5678  0FD1  0873               	movf	OSC_config@frecuencia+1,w
  5679  0FD2  3A09               	xorlw	9	; case 9
  5680  0FD3  1903               	skipnz
  5681  0FD4  2FD6               	goto	l4768
  5682  0FD5  2F89               	goto	l2696
  5683  0FD6                     l4768:	
  5684                           
  5685                           ; Switch size 1, requested type "simple"
  5686                           ; Number of cases is 1, Range of values is 0 to 0
  5687                           ; switch strategies available:
  5688                           ; Name         Instructions Cycles
  5689                           ; simple_byte            4     3 (average)
  5690                           ; direct_byte           11     8 (fixed)
  5691                           ; jumptable            260     6 (fixed)
  5692                           ;	Chosen strategy is simple_byte
  5693  0FD6  0872               	movf	OSC_config@frecuencia,w
  5694  0FD7  3A00               	xorlw	0	; case 0
  5695  0FD8  1903               	skipnz
  5696  0FD9  2F5A               	goto	l2682
  5697  0FDA  2F89               	goto	l2696
  5698  0FDB                     l4752:	
  5699                           
  5700                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5701                           ; Switch size 1, requested type "simple"
  5702                           ; Number of cases is 1, Range of values is 18 to 18
  5703                           ; switch strategies available:
  5704                           ; Name         Instructions Cycles
  5705                           ; simple_byte            4     3 (average)
  5706                           ; direct_byte           14    11 (fixed)
  5707                           ; jumptable            263     9 (fixed)
  5708                           ;	Chosen strategy is simple_byte
  5709  0FDB  0873               	movf	OSC_config@frecuencia+1,w
  5710  0FDC  3A12               	xorlw	18	; case 18
  5711  0FDD  1903               	skipnz
  5712  0FDE  2FE0               	goto	l4770
  5713  0FDF  2F89               	goto	l2696
  5714  0FE0                     l4770:	
  5715                           
  5716                           ; Switch size 1, requested type "simple"
  5717                           ; Number of cases is 1, Range of values is 0 to 0
  5718                           ; switch strategies available:
  5719                           ; Name         Instructions Cycles
  5720                           ; simple_byte            4     3 (average)
  5721                           ; direct_byte           11     8 (fixed)
  5722                           ; jumptable            260     6 (fixed)
  5723                           ;	Chosen strategy is simple_byte
  5724  0FE0  0872               	movf	OSC_config@frecuencia,w
  5725  0FE1  3A00               	xorlw	0	; case 0
  5726  0FE2  1903               	skipnz
  5727  0FE3  2F55               	goto	l2680
  5728  0FE4  2F89               	goto	l2696
  5729  0FE5                     l4754:	
  5730                           
  5731                           ; Switch size 1, requested type "simple"
  5732                           ; Number of cases is 8, Range of values is 0 to 122
  5733                           ; switch strategies available:
  5734                           ; Name         Instructions Cycles
  5735                           ; simple_byte           25    13 (average)
  5736                           ; jumptable            260     6 (fixed)
  5737                           ;	Chosen strategy is simple_byte
  5738  0FE5  0874               	movf	OSC_config@frecuencia+2,w
  5739  0FE6  3A00               	xorlw	0	; case 0
  5740  0FE7  1903               	skipnz
  5741  0FE8  2F95               	goto	l4738
  5742  0FE9  3A01               	xorlw	1	; case 1
  5743  0FEA  1903               	skipnz
  5744  0FEB  2F9F               	goto	l4740
  5745  0FEC  3A02               	xorlw	2	; case 3
  5746  0FED  1903               	skipnz
  5747  0FEE  2FA9               	goto	l4742
  5748  0FEF  3A04               	xorlw	4	; case 7
  5749  0FF0  1903               	skipnz
  5750  0FF1  2FB3               	goto	l4744
  5751  0FF2  3A08               	xorlw	8	; case 15
  5752  0FF3  1903               	skipnz
  5753  0FF4  2FBD               	goto	l4746
  5754  0FF5  3A11               	xorlw	17	; case 30
  5755  0FF6  1903               	skipnz
  5756  0FF7  2FC7               	goto	l4748
  5757  0FF8  3A23               	xorlw	35	; case 61
  5758  0FF9  1903               	skipnz
  5759  0FFA  2FD1               	goto	l4750
  5760  0FFB  3A47               	xorlw	71	; case 122
  5761  0FFC  1903               	skipnz
  5762  0FFD  2FDB               	goto	l4752
  5763  0FFE  2F89               	goto	l2696
  5764  0FFF  0008               	return
  5765  1000                     __end_of_OSC_config:	
  5766                           
  5767                           	psect	text24
  5768  0CCA                     __ptext24:	
  5769 ;; *************** function _LCD_init *****************
  5770 ;; Defined at:
  5771 ;;		line 44 in file "LCD_8bits.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;		None
  5774 ;; Auto vars:     Size  Location     Type
  5775 ;;		None
  5776 ;; Return value:  Size  Location     Type
  5777 ;;                  1    wreg      void 
  5778 ;; Registers used:
  5779 ;;		wreg, status,2, status,0, pclath, cstack
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5785 ;;      Params:         0       0       0       0       0
  5786 ;;      Locals:         0       0       0       0       0
  5787 ;;      Temps:          2       0       0       0       0
  5788 ;;      Totals:         2       0       0       0       0
  5789 ;;Total ram usage:        2 bytes
  5790 ;; Hardware stack levels used:    1
  5791 ;; Hardware stack levels required when called:    2
  5792 ;; This function calls:
  5793 ;;		_LCD_Cmd
  5794 ;; This function is called by:
  5795 ;;		_SetUp
  5796 ;; This function uses a non-reentrant model
  5797 ;;
  5798                           
  5799                           
  5800                           ;psect for function _LCD_init
  5801  0CCA                     _LCD_init:	
  5802                           
  5803                           ;LCD_8bits.c: 45:     _delay((unsigned long)((20)*(4000000/4000.0)));
  5804                           
  5805                           ;incstack = 0
  5806                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  5807  0CCA  301A               	movlw	26
  5808  0CCB  00F6               	movwf	??_LCD_init+1
  5809  0CCC  30F8               	movlw	248
  5810  0CCD  00F5               	movwf	??_LCD_init
  5811  0CCE                     u1737:	
  5812  0CCE  0BF5               	decfsz	??_LCD_init,f
  5813  0CCF  2CCE               	goto	u1737
  5814  0CD0  0BF6               	decfsz	??_LCD_init+1,f
  5815  0CD1  2CCE               	goto	u1737
  5816  0CD2  0000               	nop
  5817                           
  5818                           ;LCD_8bits.c: 46:     LCD_Cmd(0x30);
  5819  0CD3  3030               	movlw	48
  5820  0CD4  120A  158A  2391  120A  158A  	fcall	_LCD_Cmd
  5821                           
  5822                           ;LCD_8bits.c: 47:     _delay((unsigned long)((5)*(4000000/4000.0)));
  5823  0CD9  3007               	movlw	7
  5824  0CDA  00F6               	movwf	??_LCD_init+1
  5825  0CDB  307D               	movlw	125
  5826  0CDC  00F5               	movwf	??_LCD_init
  5827  0CDD                     u1747:	
  5828  0CDD  0BF5               	decfsz	??_LCD_init,f
  5829  0CDE  2CDD               	goto	u1747
  5830  0CDF  0BF6               	decfsz	??_LCD_init+1,f
  5831  0CE0  2CDD               	goto	u1747
  5832                           
  5833                           ;LCD_8bits.c: 48:     LCD_Cmd(0x30);
  5834  0CE1  3030               	movlw	48
  5835  0CE2  120A  158A  2391  120A  158A  	fcall	_LCD_Cmd
  5836                           
  5837                           ;LCD_8bits.c: 49:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  5838  0CE7  3021               	movlw	33
  5839  0CE8  00F5               	movwf	??_LCD_init
  5840  0CE9                     u1757:	
  5841  0CE9  0BF5               	decfsz	??_LCD_init,f
  5842  0CEA  2CE9               	goto	u1757
  5843                           
  5844                           ;LCD_8bits.c: 50:     LCD_Cmd(0x30);
  5845  0CEB  3030               	movlw	48
  5846  0CEC  120A  158A  2391  120A  158A  	fcall	_LCD_Cmd
  5847                           
  5848                           ;LCD_8bits.c: 51:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  5849  0CF1  3021               	movlw	33
  5850  0CF2  00F5               	movwf	??_LCD_init
  5851  0CF3                     u1767:	
  5852  0CF3  0BF5               	decfsz	??_LCD_init,f
  5853  0CF4  2CF3               	goto	u1767
  5854                           
  5855                           ;LCD_8bits.c: 52:     LCD_Cmd(0x38);
  5856  0CF5  3038               	movlw	56
  5857  0CF6  120A  158A  2391  120A  158A  	fcall	_LCD_Cmd
  5858                           
  5859                           ;LCD_8bits.c: 53:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  5860  0CFB  3011               	movlw	17
  5861  0CFC  00F5               	movwf	??_LCD_init
  5862  0CFD                     u1777:	
  5863  0CFD  0BF5               	decfsz	??_LCD_init,f
  5864  0CFE  2CFD               	goto	u1777
  5865  0CFF  0000               	nop
  5866                           
  5867                           ;LCD_8bits.c: 54:     LCD_Cmd(0x08);
  5868  0D00  3008               	movlw	8
  5869  0D01  120A  158A  2391  120A  158A  	fcall	_LCD_Cmd
  5870                           
  5871                           ;LCD_8bits.c: 55:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  5872  0D06  3011               	movlw	17
  5873  0D07  00F5               	movwf	??_LCD_init
  5874  0D08                     u1787:	
  5875  0D08  0BF5               	decfsz	??_LCD_init,f
  5876  0D09  2D08               	goto	u1787
  5877  0D0A  0000               	nop
  5878                           
  5879                           ;LCD_8bits.c: 56:     LCD_Cmd(0x01);
  5880  0D0B  3001               	movlw	1
  5881  0D0C  120A  158A  2391  120A  158A  	fcall	_LCD_Cmd
  5882                           
  5883                           ;LCD_8bits.c: 57:     _delay((unsigned long)((3)*(4000000/4000.0)));
  5884  0D11  3004               	movlw	4
  5885  0D12  00F6               	movwf	??_LCD_init+1
  5886  0D13  30E4               	movlw	228
  5887  0D14  00F5               	movwf	??_LCD_init
  5888  0D15                     u1797:	
  5889  0D15  0BF5               	decfsz	??_LCD_init,f
  5890  0D16  2D15               	goto	u1797
  5891  0D17  0BF6               	decfsz	??_LCD_init+1,f
  5892  0D18  2D15               	goto	u1797
  5893  0D19  0000               	nop
  5894                           
  5895                           ;LCD_8bits.c: 58:     LCD_Cmd(0x06);
  5896  0D1A  3006               	movlw	6
  5897  0D1B  120A  158A  2391  120A  158A  	fcall	_LCD_Cmd
  5898                           
  5899                           ;LCD_8bits.c: 59:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  5900  0D20  3011               	movlw	17
  5901  0D21  00F5               	movwf	??_LCD_init
  5902  0D22                     u1807:	
  5903  0D22  0BF5               	decfsz	??_LCD_init,f
  5904  0D23  2D22               	goto	u1807
  5905  0D24  0000               	nop
  5906                           
  5907                           ;LCD_8bits.c: 60:     LCD_Cmd(0x0C);
  5908  0D25  300C               	movlw	12
  5909  0D26  120A  158A  2391  120A  158A  	fcall	_LCD_Cmd
  5910                           
  5911                           ;LCD_8bits.c: 61:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  5912  0D2B  3011               	movlw	17
  5913  0D2C  00F5               	movwf	??_LCD_init
  5914  0D2D                     u1817:	
  5915  0D2D  0BF5               	decfsz	??_LCD_init,f
  5916  0D2E  2D2D               	goto	u1817
  5917  0D2F  0000               	nop
  5918  0D30  0008               	return
  5919  0D31                     __end_of_LCD_init:	
  5920                           
  5921                           	psect	text25
  5922  0A9E                     __ptext25:	
  5923 ;; *************** function _LCD_clear *****************
  5924 ;; Defined at:
  5925 ;;		line 32 in file "LCD_8bits.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;		None
  5928 ;; Auto vars:     Size  Location     Type
  5929 ;;		None
  5930 ;; Return value:  Size  Location     Type
  5931 ;;                  1    wreg      void 
  5932 ;; Registers used:
  5933 ;;		wreg, status,2, status,0, pclath, cstack
  5934 ;; Tracked objects:
  5935 ;;		On entry : 0/0
  5936 ;;		On exit  : 0/0
  5937 ;;		Unchanged: 0/0
  5938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5939 ;;      Params:         0       0       0       0       0
  5940 ;;      Locals:         0       0       0       0       0
  5941 ;;      Temps:          2       0       0       0       0
  5942 ;;      Totals:         2       0       0       0       0
  5943 ;;Total ram usage:        2 bytes
  5944 ;; Hardware stack levels used:    1
  5945 ;; Hardware stack levels required when called:    2
  5946 ;; This function calls:
  5947 ;;		_LCD_Cmd
  5948 ;; This function is called by:
  5949 ;;		_SetUp
  5950 ;;		_mostrarLCD
  5951 ;;		_pressBoton1
  5952 ;;		_pressBoton2
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           
  5957                           ;psect for function _LCD_clear
  5958  0A9E                     _LCD_clear:	
  5959                           
  5960                           ;LCD_8bits.c: 33:     LCD_Cmd(0x00);
  5961                           
  5962                           ;incstack = 0
  5963                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  5964  0A9E  3000               	movlw	0
  5965  0A9F  120A  158A  2391  120A  158A  	fcall	_LCD_Cmd
  5966                           
  5967                           ;LCD_8bits.c: 34:     LCD_Cmd(0x01);
  5968  0AA4  3001               	movlw	1
  5969  0AA5  120A  158A  2391  120A  158A  	fcall	_LCD_Cmd
  5970                           
  5971                           ;LCD_8bits.c: 35:     _delay((unsigned long)((4)*(4000000/4000.0)));
  5972  0AAA  3006               	movlw	6
  5973  0AAB  00F6               	movwf	??_LCD_clear+1
  5974  0AAC  3030               	movlw	48
  5975  0AAD  00F5               	movwf	??_LCD_clear
  5976  0AAE                     u1827:	
  5977  0AAE  0BF5               	decfsz	??_LCD_clear,f
  5978  0AAF  2AAE               	goto	u1827
  5979  0AB0  0BF6               	decfsz	??_LCD_clear+1,f
  5980  0AB1  2AAE               	goto	u1827
  5981  0AB2  0000               	nop
  5982  0AB3  0008               	return
  5983  0AB4                     __end_of_LCD_clear:	
  5984                           
  5985                           	psect	text26
  5986  0B0D                     __ptext26:	
  5987 ;; *************** function _LCD_Create_Char *****************
  5988 ;; Defined at:
  5989 ;;		line 116 in file "LCD_8bits.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;  charnum         1    wreg     unsigned char 
  5992 ;;  chardata        1    5[COMMON] PTR const unsigned char 
  5993 ;;		 -> arrowr_vacio(8), gota(8), termometro(8), arrowr(8), 
  5994 ;;		 -> atilde(8), 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;  charnum         1    7[COMMON] unsigned char 
  5997 ;;  n               1    8[COMMON] unsigned char 
  5998 ;; Return value:  Size  Location     Type
  5999 ;;                  1    wreg      void 
  6000 ;; Registers used:
  6001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6002 ;; Tracked objects:
  6003 ;;		On entry : 0/0
  6004 ;;		On exit  : 0/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6007 ;;      Params:         1       0       0       0       0
  6008 ;;      Locals:         2       0       0       0       0
  6009 ;;      Temps:          1       0       0       0       0
  6010 ;;      Totals:         4       0       0       0       0
  6011 ;;Total ram usage:        4 bytes
  6012 ;; Hardware stack levels used:    1
  6013 ;; Hardware stack levels required when called:    2
  6014 ;; This function calls:
  6015 ;;		_LCD_Cmd
  6016 ;;		_LCD_Write_Character
  6017 ;; This function is called by:
  6018 ;;		_SetUp
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           
  6022                           
  6023                           ;psect for function _LCD_Create_Char
  6024  0B0D                     _LCD_Create_Char:	
  6025                           
  6026                           ;incstack = 0
  6027                           ; Regs used in _LCD_Create_Char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6028                           ;LCD_Create_Char@charnum stored from wreg
  6029  0B0D  00F7               	movwf	LCD_Create_Char@charnum
  6030                           
  6031                           ;LCD_8bits.c: 117:  uint8_t n;;LCD_8bits.c: 118:  charnum &= 0x07;
  6032  0B0E  3007               	movlw	7
  6033  0B0F  00F6               	movwf	??_LCD_Create_Char
  6034  0B10  0876               	movf	??_LCD_Create_Char,w
  6035  0B11  05F7               	andwf	LCD_Create_Char@charnum,f
  6036                           
  6037                           ;LCD_8bits.c: 119:  LCD_Cmd(0x40 | (charnum << 3));
  6038  0B12  0877               	movf	LCD_Create_Char@charnum,w
  6039  0B13  00F6               	movwf	??_LCD_Create_Char
  6040  0B14  3002               	movlw	2
  6041  0B15                     u1075:	
  6042  0B15  1003               	clrc
  6043  0B16  0DF6               	rlf	??_LCD_Create_Char,f
  6044  0B17  3EFF               	addlw	-1
  6045  0B18  1D03               	skipz
  6046  0B19  2B15               	goto	u1075
  6047  0B1A  1003               	clrc
  6048  0B1B  0D76               	rlf	??_LCD_Create_Char,w
  6049  0B1C  3840               	iorlw	64
  6050  0B1D  120A  158A  2391  120A  158A  	fcall	_LCD_Cmd
  6051                           
  6052                           ;LCD_8bits.c: 120:  for (n = 0; n < 8; n++)
  6053  0B22  01F8               	clrf	LCD_Create_Char@n
  6054  0B23                     l2802:	
  6055                           
  6056                           ;LCD_8bits.c: 121:   LCD_Write_Character(chardata[n]);
  6057  0B23  0878               	movf	LCD_Create_Char@n,w
  6058  0B24  0775               	addwf	LCD_Create_Char@chardata,w
  6059  0B25  0084               	movwf	4
  6060  0B26  120A  118A  2700  120A  158A  	fcall	stringdir
  6061  0B2B  120A  158A  2247  120A  158A  	fcall	_LCD_Write_Character
  6062  0B30  3001               	movlw	1
  6063  0B31  00F6               	movwf	??_LCD_Create_Char
  6064  0B32  0876               	movf	??_LCD_Create_Char,w
  6065  0B33  07F8               	addwf	LCD_Create_Char@n,f
  6066  0B34  3008               	movlw	8
  6067  0B35  0278               	subwf	LCD_Create_Char@n,w
  6068  0B36  1803               	btfsc	3,0
  6069  0B37  0008               	return
  6070  0B38  2B23               	goto	l2802
  6071  0B39                     __end_of_LCD_Create_Char:	
  6072                           
  6073                           	psect	text27
  6074  0A47                     __ptext27:	
  6075 ;; *************** function _LCD_Write_Character *****************
  6076 ;; Defined at:
  6077 ;;		line 64 in file "LCD_8bits.c"
  6078 ;; Parameters:    Size  Location     Type
  6079 ;;  caracter        1    wreg     unsigned char 
  6080 ;; Auto vars:     Size  Location     Type
  6081 ;;  caracter        1    3[COMMON] unsigned char 
  6082 ;; Return value:  Size  Location     Type
  6083 ;;                  1    wreg      void 
  6084 ;; Registers used:
  6085 ;;		wreg
  6086 ;; Tracked objects:
  6087 ;;		On entry : 0/0
  6088 ;;		On exit  : 0/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6091 ;;      Params:         0       0       0       0       0
  6092 ;;      Locals:         1       0       0       0       0
  6093 ;;      Temps:          1       0       0       0       0
  6094 ;;      Totals:         2       0       0       0       0
  6095 ;;Total ram usage:        2 bytes
  6096 ;; Hardware stack levels used:    1
  6097 ;; Hardware stack levels required when called:    1
  6098 ;; This function calls:
  6099 ;;		Nothing
  6100 ;; This function is called by:
  6101 ;;		_display_Uhrzeit
  6102 ;;		_display_Datum
  6103 ;;		_mostrarLCD
  6104 ;;		_pressBoton2
  6105 ;;		_LCD_Write_String
  6106 ;;		_LCD_Create_Char
  6107 ;; This function uses a non-reentrant model
  6108 ;;
  6109                           
  6110                           
  6111                           ;psect for function _LCD_Write_Character
  6112  0A47                     _LCD_Write_Character:	
  6113                           
  6114                           ;incstack = 0
  6115                           ; Regs used in _LCD_Write_Character: [wreg]
  6116                           ;LCD_Write_Character@caracter stored from wreg
  6117  0A47  00F3               	movwf	LCD_Write_Character@caracter
  6118                           
  6119                           ;LCD_8bits.c: 65:     PORTCbits.RC0 = 1;
  6120  0A48  1283               	bcf	3,5	;RP0=0, select bank0
  6121  0A49  1303               	bcf	3,6	;RP1=0, select bank0
  6122  0A4A  1407               	bsf	7,0	;volatile
  6123                           
  6124                           ;LCD_8bits.c: 67:     PORTD = caracter;
  6125  0A4B  0873               	movf	LCD_Write_Character@caracter,w
  6126  0A4C  0088               	movwf	8	;volatile
  6127                           
  6128                           ;LCD_8bits.c: 68:     PORTCbits.RC1 = 1;
  6129  0A4D  1487               	bsf	7,1	;volatile
  6130                           
  6131                           ;LCD_8bits.c: 69:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  6132  0A4E  300D               	movlw	13
  6133  0A4F  00F2               	movwf	??_LCD_Write_Character
  6134  0A50                     u1837:	
  6135  0A50  0BF2               	decfsz	??_LCD_Write_Character,f
  6136  0A51  2A50               	goto	u1837
  6137                           
  6138                           ;LCD_8bits.c: 70:     PORTCbits.RC1 = 0;
  6139  0A52  1283               	bcf	3,5	;RP0=0, select bank0
  6140  0A53  1303               	bcf	3,6	;RP1=0, select bank0
  6141  0A54  1087               	bcf	7,1	;volatile
  6142  0A55  0008               	return
  6143  0A56                     __end_of_LCD_Write_Character:	
  6144                           
  6145                           	psect	text28
  6146  0B91                     __ptext28:	
  6147 ;; *************** function _LCD_Cmd *****************
  6148 ;; Defined at:
  6149 ;;		line 21 in file "LCD_8bits.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;  comando         1    wreg     unsigned char 
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;  comando         1    4[COMMON] unsigned char 
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  1    wreg      void 
  6156 ;; Registers used:
  6157 ;;		wreg
  6158 ;; Tracked objects:
  6159 ;;		On entry : 0/0
  6160 ;;		On exit  : 0/0
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6163 ;;      Params:         0       0       0       0       0
  6164 ;;      Locals:         1       0       0       0       0
  6165 ;;      Temps:          2       0       0       0       0
  6166 ;;      Totals:         3       0       0       0       0
  6167 ;;Total ram usage:        3 bytes
  6168 ;; Hardware stack levels used:    1
  6169 ;; Hardware stack levels required when called:    1
  6170 ;; This function calls:
  6171 ;;		Nothing
  6172 ;; This function is called by:
  6173 ;;		_LCD_clear
  6174 ;;		_LCD_init
  6175 ;;		_LCD_Set_Cursor
  6176 ;;		_LCD_Create_Char
  6177 ;;		_LCD_home
  6178 ;;		_LCD_Shift_links
  6179 ;;		_LCD_Shift_rechts
  6180 ;;		_LCD_Cursor_rechts
  6181 ;;		_LCD_Cursor_links
  6182 ;; This function uses a non-reentrant model
  6183 ;;
  6184                           
  6185                           
  6186                           ;psect for function _LCD_Cmd
  6187  0B91                     _LCD_Cmd:	
  6188                           
  6189                           ;incstack = 0
  6190                           ; Regs used in _LCD_Cmd: [wreg]
  6191                           ;LCD_Cmd@comando stored from wreg
  6192  0B91  00F4               	movwf	LCD_Cmd@comando
  6193                           
  6194                           ;LCD_8bits.c: 22:     PORTCbits.RC0 = 0;
  6195  0B92  1283               	bcf	3,5	;RP0=0, select bank0
  6196  0B93  1303               	bcf	3,6	;RP1=0, select bank0
  6197  0B94  1007               	bcf	7,0	;volatile
  6198                           
  6199                           ;LCD_8bits.c: 23:     _delay((unsigned long)((5)*(4000000/4000.0)));
  6200  0B95  3007               	movlw	7
  6201  0B96  00F3               	movwf	??_LCD_Cmd+1
  6202  0B97  307D               	movlw	125
  6203  0B98  00F2               	movwf	??_LCD_Cmd
  6204  0B99                     u1847:	
  6205  0B99  0BF2               	decfsz	??_LCD_Cmd,f
  6206  0B9A  2B99               	goto	u1847
  6207  0B9B  0BF3               	decfsz	??_LCD_Cmd+1,f
  6208  0B9C  2B99               	goto	u1847
  6209                           
  6210                           ;LCD_8bits.c: 24:     PORTCbits.RC1 = 1;
  6211  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  6212  0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  6213  0B9F  1487               	bsf	7,1	;volatile
  6214                           
  6215                           ;LCD_8bits.c: 25:     _delay((unsigned long)((5)*(4000000/4000.0)));
  6216  0BA0  3007               	movlw	7
  6217  0BA1  00F3               	movwf	??_LCD_Cmd+1
  6218  0BA2  307D               	movlw	125
  6219  0BA3  00F2               	movwf	??_LCD_Cmd
  6220  0BA4                     u1857:	
  6221  0BA4  0BF2               	decfsz	??_LCD_Cmd,f
  6222  0BA5  2BA4               	goto	u1857
  6223  0BA6  0BF3               	decfsz	??_LCD_Cmd+1,f
  6224  0BA7  2BA4               	goto	u1857
  6225                           
  6226                           ;LCD_8bits.c: 26:     PORTD = comando;
  6227  0BA8  0874               	movf	LCD_Cmd@comando,w
  6228  0BA9  1283               	bcf	3,5	;RP0=0, select bank0
  6229  0BAA  1303               	bcf	3,6	;RP1=0, select bank0
  6230  0BAB  0088               	movwf	8	;volatile
  6231                           
  6232                           ;LCD_8bits.c: 27:     _delay((unsigned long)((5)*(4000000/4000.0)));
  6233  0BAC  3007               	movlw	7
  6234  0BAD  00F3               	movwf	??_LCD_Cmd+1
  6235  0BAE  307D               	movlw	125
  6236  0BAF  00F2               	movwf	??_LCD_Cmd
  6237  0BB0                     u1867:	
  6238  0BB0  0BF2               	decfsz	??_LCD_Cmd,f
  6239  0BB1  2BB0               	goto	u1867
  6240  0BB2  0BF3               	decfsz	??_LCD_Cmd+1,f
  6241  0BB3  2BB0               	goto	u1867
  6242                           
  6243                           ;LCD_8bits.c: 28:     PORTCbits.RC1 = 0;
  6244  0BB4  1283               	bcf	3,5	;RP0=0, select bank0
  6245  0BB5  1303               	bcf	3,6	;RP1=0, select bank0
  6246  0BB6  1087               	bcf	7,1	;volatile
  6247                           
  6248                           ;LCD_8bits.c: 29:     _delay((unsigned long)((5)*(4000000/4000.0)));
  6249  0BB7  3007               	movlw	7
  6250  0BB8  00F3               	movwf	??_LCD_Cmd+1
  6251  0BB9  307D               	movlw	125
  6252  0BBA  00F2               	movwf	??_LCD_Cmd
  6253  0BBB                     u1877:	
  6254  0BBB  0BF2               	decfsz	??_LCD_Cmd,f
  6255  0BBC  2BBB               	goto	u1877
  6256  0BBD  0BF3               	decfsz	??_LCD_Cmd+1,f
  6257  0BBE  2BBB               	goto	u1877
  6258  0BBF  0008               	return
  6259  0BC0                     __end_of_LCD_Cmd:	
  6260                           
  6261                           	psect	text29
  6262  07BC                     __ptext29:	
  6263 ;; *************** function _I2C_Master_Init *****************
  6264 ;; Defined at:
  6265 ;;		line 16 in file "I2C.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;  c               4    6[BANK0 ] const unsigned long 
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;		None
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      void 
  6272 ;; Registers used:
  6273 ;;		wreg, status,2, status,0, pclath, cstack
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6279 ;;      Params:         0       4       0       0       0
  6280 ;;      Locals:         0       0       0       0       0
  6281 ;;      Temps:          0       4       0       0       0
  6282 ;;      Totals:         0       8       0       0       0
  6283 ;;Total ram usage:        8 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; Hardware stack levels required when called:    2
  6286 ;; This function calls:
  6287 ;;		___lldiv
  6288 ;; This function is called by:
  6289 ;;		_SetUp
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           
  6294                           ;psect for function _I2C_Master_Init
  6295  07BC                     _I2C_Master_Init:	
  6296                           
  6297                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  6298                           
  6299                           ;incstack = 0
  6300                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  6301  07BC  3028               	movlw	40
  6302  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  6303  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  6304  07BF  0094               	movwf	20	;volatile
  6305                           
  6306                           ;I2C.c: 19:     SSPCON2 = 0;
  6307  07C0  1683               	bsf	3,5	;RP0=1, select bank1
  6308  07C1  1303               	bcf	3,6	;RP1=0, select bank1
  6309  07C2  0191               	clrf	17	;volatile
  6310                           
  6311                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  6312  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  6313  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  6314  07C5  0826               	movf	I2C_Master_Init@c,w
  6315  07C6  00AA               	movwf	??_I2C_Master_Init
  6316  07C7  0827               	movf	I2C_Master_Init@c+1,w
  6317  07C8  00AB               	movwf	??_I2C_Master_Init+1
  6318  07C9  0828               	movf	I2C_Master_Init@c+2,w
  6319  07CA  00AC               	movwf	??_I2C_Master_Init+2
  6320  07CB  0829               	movf	I2C_Master_Init@c+3,w
  6321  07CC  00AD               	movwf	??_I2C_Master_Init+3
  6322  07CD  3002               	movlw	2
  6323  07CE                     u1535:	
  6324  07CE  1003               	clrc
  6325  07CF  0DAA               	rlf	??_I2C_Master_Init,f
  6326  07D0  0DAB               	rlf	??_I2C_Master_Init+1,f
  6327  07D1  0DAC               	rlf	??_I2C_Master_Init+2,f
  6328  07D2  0DAD               	rlf	??_I2C_Master_Init+3,f
  6329  07D3  3EFF               	addlw	-1
  6330  07D4  1D03               	skipz
  6331  07D5  2FCE               	goto	u1535
  6332  07D6  082D               	movf	??_I2C_Master_Init+3,w
  6333  07D7  00F5               	movwf	___lldiv@divisor+3
  6334  07D8  082C               	movf	??_I2C_Master_Init+2,w
  6335  07D9  00F4               	movwf	___lldiv@divisor+2
  6336  07DA  082B               	movf	??_I2C_Master_Init+1,w
  6337  07DB  00F3               	movwf	___lldiv@divisor+1
  6338  07DC  082A               	movf	??_I2C_Master_Init,w
  6339  07DD  00F2               	movwf	___lldiv@divisor
  6340  07DE  3000               	movlw	0
  6341  07DF  00F9               	movwf	___lldiv@dividend+3
  6342  07E0  303D               	movlw	61
  6343  07E1  00F8               	movwf	___lldiv@dividend+2
  6344  07E2  3009               	movlw	9
  6345  07E3  00F7               	movwf	___lldiv@dividend+1
  6346  07E4  3000               	movlw	0
  6347  07E5  00F6               	movwf	___lldiv@dividend
  6348  07E6  120A  158A  246A   	fcall	___lldiv
  6349  07E9  0872               	movf	?___lldiv,w
  6350  07EA  3EFF               	addlw	255
  6351  07EB  1683               	bsf	3,5	;RP0=1, select bank1
  6352  07EC  1303               	bcf	3,6	;RP1=0, select bank1
  6353  07ED  0093               	movwf	19	;volatile
  6354                           
  6355                           ;I2C.c: 21:     SSPSTAT = 0;
  6356  07EE  0194               	clrf	20	;volatile
  6357                           
  6358                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  6359  07EF  1587               	bsf	7,3	;volatile
  6360                           
  6361                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  6362  07F0  1607               	bsf	7,4	;volatile
  6363  07F1  0008               	return
  6364  07F2                     __end_of_I2C_Master_Init:	
  6365                           
  6366                           	psect	text30
  6367  0C6A                     __ptext30:	
  6368 ;; *************** function ___lldiv *****************
  6369 ;; Defined at:
  6370 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;  divisor         4    2[COMMON] unsigned long 
  6373 ;;  dividend        4    6[COMMON] unsigned long 
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;  quotient        4    1[BANK0 ] unsigned long 
  6376 ;;  counter         1    5[BANK0 ] unsigned char 
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  4    2[COMMON] unsigned long 
  6379 ;; Registers used:
  6380 ;;		wreg, status,2, status,0
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6386 ;;      Params:         8       0       0       0       0
  6387 ;;      Locals:         0       5       0       0       0
  6388 ;;      Temps:          0       1       0       0       0
  6389 ;;      Totals:         8       6       0       0       0
  6390 ;;Total ram usage:       14 bytes
  6391 ;; Hardware stack levels used:    1
  6392 ;; Hardware stack levels required when called:    1
  6393 ;; This function calls:
  6394 ;;		Nothing
  6395 ;; This function is called by:
  6396 ;;		_I2C_Master_Init
  6397 ;; This function uses a non-reentrant model
  6398 ;;
  6399                           
  6400                           
  6401                           ;psect for function ___lldiv
  6402  0C6A                     ___lldiv:	
  6403                           
  6404                           ;incstack = 0
  6405                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6406  0C6A  3000               	movlw	0
  6407  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  6408  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  6409  0C6D  00A4               	movwf	___lldiv@quotient+3
  6410  0C6E  3000               	movlw	0
  6411  0C6F  00A3               	movwf	___lldiv@quotient+2
  6412  0C70  3000               	movlw	0
  6413  0C71  00A2               	movwf	___lldiv@quotient+1
  6414  0C72  3000               	movlw	0
  6415  0C73  00A1               	movwf	___lldiv@quotient
  6416  0C74  0875               	movf	___lldiv@divisor+3,w
  6417  0C75  0474               	iorwf	___lldiv@divisor+2,w
  6418  0C76  0473               	iorwf	___lldiv@divisor+1,w
  6419  0C77  0472               	iorwf	___lldiv@divisor,w
  6420  0C78  1903               	skipnz
  6421  0C79  2CC1               	goto	l3878
  6422  0C7A  01A5               	clrf	___lldiv@counter
  6423  0C7B  0AA5               	incf	___lldiv@counter,f
  6424  0C7C                     l3864:	
  6425  0C7C  1BF5               	btfsc	___lldiv@divisor+3,7
  6426  0C7D  2C8C               	goto	l3866
  6427  0C7E  3001               	movlw	1
  6428  0C7F  00A0               	movwf	??___lldiv
  6429  0C80                     u1375:	
  6430  0C80  1003               	clrc
  6431  0C81  0DF2               	rlf	___lldiv@divisor,f
  6432  0C82  0DF3               	rlf	___lldiv@divisor+1,f
  6433  0C83  0DF4               	rlf	___lldiv@divisor+2,f
  6434  0C84  0DF5               	rlf	___lldiv@divisor+3,f
  6435  0C85  0BA0               	decfsz	??___lldiv,f
  6436  0C86  2C80               	goto	u1375
  6437  0C87  3001               	movlw	1
  6438  0C88  00A0               	movwf	??___lldiv
  6439  0C89  0820               	movf	??___lldiv,w
  6440  0C8A  07A5               	addwf	___lldiv@counter,f
  6441  0C8B  2C7C               	goto	l3864
  6442  0C8C                     l3866:	
  6443  0C8C  3001               	movlw	1
  6444  0C8D  00A0               	movwf	??___lldiv
  6445  0C8E                     u1395:	
  6446  0C8E  1003               	clrc
  6447  0C8F  0DA1               	rlf	___lldiv@quotient,f
  6448  0C90  0DA2               	rlf	___lldiv@quotient+1,f
  6449  0C91  0DA3               	rlf	___lldiv@quotient+2,f
  6450  0C92  0DA4               	rlf	___lldiv@quotient+3,f
  6451  0C93  0BA0               	decfsz	??___lldiv,f
  6452  0C94  2C8E               	goto	u1395
  6453  0C95  0875               	movf	___lldiv@divisor+3,w
  6454  0C96  0279               	subwf	___lldiv@dividend+3,w
  6455  0C97  1D03               	skipz
  6456  0C98  2CA3               	goto	u1405
  6457  0C99  0874               	movf	___lldiv@divisor+2,w
  6458  0C9A  0278               	subwf	___lldiv@dividend+2,w
  6459  0C9B  1D03               	skipz
  6460  0C9C  2CA3               	goto	u1405
  6461  0C9D  0873               	movf	___lldiv@divisor+1,w
  6462  0C9E  0277               	subwf	___lldiv@dividend+1,w
  6463  0C9F  1D03               	skipz
  6464  0CA0  2CA3               	goto	u1405
  6465  0CA1  0872               	movf	___lldiv@divisor,w
  6466  0CA2  0276               	subwf	___lldiv@dividend,w
  6467  0CA3                     u1405:	
  6468  0CA3  1C03               	skipc
  6469  0CA4  2CB4               	goto	l3874
  6470  0CA5  0872               	movf	___lldiv@divisor,w
  6471  0CA6  02F6               	subwf	___lldiv@dividend,f
  6472  0CA7  0873               	movf	___lldiv@divisor+1,w
  6473  0CA8  1C03               	skipc
  6474  0CA9  0F73               	incfsz	___lldiv@divisor+1,w
  6475  0CAA  02F7               	subwf	___lldiv@dividend+1,f
  6476  0CAB  0874               	movf	___lldiv@divisor+2,w
  6477  0CAC  1C03               	skipc
  6478  0CAD  0F74               	incfsz	___lldiv@divisor+2,w
  6479  0CAE  02F8               	subwf	___lldiv@dividend+2,f
  6480  0CAF  0875               	movf	___lldiv@divisor+3,w
  6481  0CB0  1C03               	skipc
  6482  0CB1  0F75               	incfsz	___lldiv@divisor+3,w
  6483  0CB2  02F9               	subwf	___lldiv@dividend+3,f
  6484  0CB3  1421               	bsf	___lldiv@quotient,0
  6485  0CB4                     l3874:	
  6486  0CB4  3001               	movlw	1
  6487  0CB5                     u1415:	
  6488  0CB5  1003               	clrc
  6489  0CB6  0CF5               	rrf	___lldiv@divisor+3,f
  6490  0CB7  0CF4               	rrf	___lldiv@divisor+2,f
  6491  0CB8  0CF3               	rrf	___lldiv@divisor+1,f
  6492  0CB9  0CF2               	rrf	___lldiv@divisor,f
  6493  0CBA  3EFF               	addlw	-1
  6494  0CBB  1D03               	skipz
  6495  0CBC  2CB5               	goto	u1415
  6496  0CBD  3001               	movlw	1
  6497  0CBE  02A5               	subwf	___lldiv@counter,f
  6498  0CBF  1D03               	btfss	3,2
  6499  0CC0  2C8C               	goto	l3866
  6500  0CC1                     l3878:	
  6501  0CC1  0824               	movf	___lldiv@quotient+3,w
  6502  0CC2  00F5               	movwf	?___lldiv+3
  6503  0CC3  0823               	movf	___lldiv@quotient+2,w
  6504  0CC4  00F4               	movwf	?___lldiv+2
  6505  0CC5  0822               	movf	___lldiv@quotient+1,w
  6506  0CC6  00F3               	movwf	?___lldiv+1
  6507  0CC7  0821               	movf	___lldiv@quotient,w
  6508  0CC8  00F2               	movwf	?___lldiv
  6509  0CC9  0008               	return
  6510  0CCA                     __end_of___lldiv:	
  6511                           
  6512                           	psect	text31
  6513  0A56                     __ptext31:	
  6514 ;; *************** function _ISR *****************
  6515 ;; Defined at:
  6516 ;;		line 130 in file "main_Master.c"
  6517 ;; Parameters:    Size  Location     Type
  6518 ;;		None
  6519 ;; Auto vars:     Size  Location     Type
  6520 ;;		None
  6521 ;; Return value:  Size  Location     Type
  6522 ;;                  1    wreg      void 
  6523 ;; Registers used:
  6524 ;;		wreg, status,2, status,0
  6525 ;; Tracked objects:
  6526 ;;		On entry : 0/0
  6527 ;;		On exit  : 0/0
  6528 ;;		Unchanged: 0/0
  6529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6530 ;;      Params:         0       0       0       0       0
  6531 ;;      Locals:         0       0       0       0       0
  6532 ;;      Temps:          2       0       0       0       0
  6533 ;;      Totals:         2       0       0       0       0
  6534 ;;Total ram usage:        2 bytes
  6535 ;; Hardware stack levels used:    1
  6536 ;; This function calls:
  6537 ;;		Nothing
  6538 ;; This function is called by:
  6539 ;;		Interrupt level 1
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543                           
  6544                           ;psect for function _ISR
  6545  0A56                     _ISR:	
  6546                           
  6547                           ;main_Master.c: 131:     if (INTCONbits.RBIF == 1 && INTCONbits.RBIE == 1){
  6548  0A56  180B               	btfsc	11,0	;volatile
  6549  0A57  1D8B               	btfss	11,3	;volatile
  6550  0A58  2A60               	goto	i1l129
  6551                           
  6552                           ;main_Master.c: 132:         INTCONbits.RBIF = 0;
  6553  0A59  100B               	bcf	11,0	;volatile
  6554                           
  6555                           ;main_Master.c: 133:         if (banderaBoton == 0){
  6556  0A5A  087B               	movf	_banderaBoton,w
  6557  0A5B  1D03               	btfss	3,2
  6558  0A5C  2A60               	goto	i1l129
  6559                           
  6560                           ;main_Master.c: 134:             banderaBoton = 1;
  6561  0A5D  01FB               	clrf	_banderaBoton
  6562  0A5E  0AFB               	incf	_banderaBoton,f
  6563                           
  6564                           ;main_Master.c: 135:             INTCONbits.RBIE = 0;
  6565  0A5F  118B               	bcf	11,3	;volatile
  6566  0A60                     i1l129:	
  6567  0A60  0871               	movf	??_ISR+1,w
  6568  0A61  008A               	movwf	10
  6569  0A62  0E70               	swapf	??_ISR^(0+4294967168),w
  6570  0A63  0083               	movwf	3
  6571  0A64  0EFE               	swapf	126,f
  6572  0A65  0E7E               	swapf	126,w
  6573  0A66  0009               	retfie
  6574  0A67                     __end_of_ISR:	
  6575  007E                     btemp	set	126	;btemp
  6576  007E                     wtemp0	set	126
  6577                           
  6578                           	psect	intentry
  6579  0004                     __pintentry:	
  6580                           ;incstack = 0
  6581                           ; Regs used in _ISR: [wreg+status,2+status,0]
  6582                           
  6583  0004                     interrupt_function:	
  6584  007E                     saved_w	set	btemp
  6585  0004  00FE               	movwf	btemp
  6586  0005  0E03               	swapf	3,w
  6587  0006  00F0               	movwf	??_ISR
  6588  0007  080A               	movf	10,w
  6589  0008  00F1               	movwf	??_ISR+1
  6590  0009  120A  158A  2A56   	ljmp	_ISR


Data Sizes:
    Strings     142
    Constant    40
    Data        10
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     33      61
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Create_Char@chardata	PTR const unsigned char  size(1) Largest target is 8
		 -> arrowr_vacio(CODE[8]), gota(CODE[8]), termometro(CODE[8]), arrowr(CODE[8]), 
		 -> atilde(CODE[8]), 

    LCD_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_17(CODE[6]), STR_16(CODE[16]), STR_15(CODE[3]), STR_14(CODE[13]), 
		 -> STR_13(CODE[5]), STR_12(CODE[3]), STR_11(CODE[5]), STR_10(CODE[3]), 
		 -> STR_9(CODE[13]), STR_8(CODE[4]), STR_7(CODE[9]), STR_6(CODE[14]), 
		 -> STR_5(CODE[12]), STR_4(CODE[11]), STR_3(CODE[13]), STR_2(CODE[17]), 
		 -> STR_1(CODE[3]), 

    sp__uint_to_array	PTR unsigned int  size(1) Largest target is 6
		 -> uint_to_array@resultado(BANK0[6]), 

    obj_array	PTR unsigned int  size(1) Largest target is 6
		 -> NULL(NULL[0]), uint_to_array@resultado(BANK0[6]), 


Critical Paths under _main in COMMON

    _pressBoton2->_LCD_Set_Cursor
    _pressBoton1->_LCD_clear
    _mostrarLCD->_LCD_Set_Cursor
    _uint_to_array->___awdiv
    _display_Uhrzeit->_LCD_Set_Cursor
    _display_Datum->_LCD_Set_Cursor
    ___awdiv->___wmul
    _LCD_Write_String->_LCD_Write_Character
    _LCD_Set_Cursor->_LCD_Cmd
    _get_Time->_BCD_a_DEC
    _BCD_a_DEC->___bmul
    _LCD_init->_LCD_Cmd
    _LCD_clear->_LCD_Cmd
    _LCD_Create_Char->_LCD_Cmd
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_mostrarLCD
    _mostrarLCD->_uint_to_array
    _uint_to_array->___awdiv
    _display_Uhrzeit->___awdiv
    _display_Datum->___awdiv
    _SetUp->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   42965
                              _SetUp
                           _get_Time
                         _mostrarLCD
                        _pressBoton1
                        _pressBoton2
                       _uartTX_Write
 ---------------------------------------------------------------------------------
 (1) _uartTX_Write                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pressBoton2                                          2     2      0    2383
                                              0 BANK0      2     2      0
                     _LCD_Set_Cursor
                _LCD_Write_Character
                          _LCD_clear
 ---------------------------------------------------------------------------------
 (1) _pressBoton1                                          2     2      0      22
                                              7 COMMON     2     2      0
                          _LCD_clear
 ---------------------------------------------------------------------------------
 (1) _mostrarLCD                                          10    10      0   29234
                                             23 BANK0     10    10      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                          _LCD_clear
                      _display_Datum
                    _display_Uhrzeit
                      _uint_to_array
 ---------------------------------------------------------------------------------
 (2) _uint_to_array                                       15    15      0    3467
                                              8 BANK0     15    15      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _display_Uhrzeit                                     11    10      1    7006
                                              8 BANK0     11    10      1
                     _LCD_Set_Cursor
                _LCD_Write_Character
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _display_Datum                                       11    10      1    7679
                                              8 BANK0     11    10      1
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1768
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    2521
                                              8 COMMON     1     1      0
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     3     3      0     673
                                              4 COMMON     3     3      0
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       5     4      1    2339
                                              5 COMMON     5     4      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _get_Time                                             1     1      0   10083
                                              0 BANK0      1     1      0
                          _BCD_a_DEC
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    7698
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2    2173
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BCD_a_DEC                                            4     4      0     212
                                              6 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SetUp                                                1     1      0    1221
                                             14 BANK0      1     1      0
                    _I2C_Master_Init
                    _LCD_Create_Char
                          _LCD_clear
                           _LCD_init
                         _OSC_config
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSC_config                                           4     0      4      98
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             2     2      0      22
                                              5 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            2     2      0      22
                                              5 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Create_Char                                      4     3      1     537
                                              5 COMMON     4     3      1
                            _LCD_Cmd
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Character                                  2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetUp
     _I2C_Master_Init
       ___lldiv
     _LCD_Create_Char
       _LCD_Cmd
       _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
     _LCD_init
       _LCD_Cmd
     _OSC_config
     _uart_init
   _get_Time
     _BCD_a_DEC
       ___bmul
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _mostrarLCD
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     _LCD_Write_String
       _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
     _display_Datum
       _LCD_Set_Cursor
         _LCD_Cmd
       _LCD_Write_Character
       _LCD_Write_String
         _LCD_Write_Character
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _display_Uhrzeit
       _LCD_Set_Cursor
         _LCD_Cmd
       _LCD_Write_Character
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _uint_to_array
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _pressBoton1
     _LCD_clear
       _LCD_Cmd
   _pressBoton2
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
   _uartTX_Write

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      3D       5       76.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      49      12        0.0%
ABS                  0      0      49       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat May 02 00:15:08 2020

                           pc 0002                ___bmul@product 0074       __end_of_LCD_Create_Char 0B39  
                 __CFG_CP$OFF 0000                  ___awdiv@sign 0025            __size_of_BCD_a_DEC 0016  
                          fsr 0004           ___wmul@multiplicand 0074            mostrarLCD@pantalla 003A  
                         l309 0A34                           l327 0B5C                           l328 0B5F  
                         l436 0A3E                           l562 0AD4                           _GIE 005F  
                __CFG_CPD$OFF 0000                           _ISR 0A56                           u765 0AD5  
                         u775 0ADC       __end_of_display_Uhrzeit 06A4                           _dia 0054  
                         _mes 0052                           _min 0056                           _seg 004B  
                         fsr0 0004                           indf 0000                  ___awmod@sign 0078  
              ?_display_Datum 0028  __size_of_LCD_Write_Character 000F               __end_of_LCD_Cmd 0BC0  
                __CFG_LVP$OFF 0000                          ?_ISR 0070                _LCD_Set_Cursor 0B65  
                        l4102 0175                          l3150 0D47                          l2520 0B71  
                        l4040 0042                          l3144 0D3C                          l4050 007A  
                        l3162 0D5D                          l2524 0B7B                          l2516 0B67  
                        l3156 0D52                          l3172 0D77                          l3180 0D8E  
                        l4212 0EB6                          l2526 0B80                          l4038 002D  
                        l3174 0D8A                          l4230 0EED                          l4222 0ED1  
                        l4214 0EB8                          l2560 0A69                          l4160 0240  
                        l4072 00F9                          l4064 00D4                          l2802 0B23  
                        l2538 0AEE                          l2546 0ACC                          l4154 0219  
                        l4138 01C3                          l4242 0F15                          l2564 0A6F  
                        l2660 0BD7                          l2652 0BD1                          l4172 028B  
                        l4148 0204                          l4244 0F20                          l4252 0F3F  
                        l2662 0BE5                          l2670 0BFE                          l4166 026A  
                        l4086 013F                          l4078 011B                          l4238 0F09  
                        l4246 0F39                          l4270 0C10                          l2680 0F55  
                        l2648 0BCA                          l2690 0F76                          l2682 0F5A  
                        l2674 0C06                          l2666 0BF3                          l4194 02F3  
                        l2692 0F7D                          l2684 0F61                          l4196 0302  
                        l2694 0F84                          l2686 0F68                          l2696 0F89  
                        l2688 0F6F                          l2698 0F90                          l3922 06FA  
                        l3914 06E7                          l3906 06C3                          l4730 0F28  
                        l4740 0F9F                          l3908 06D1                          l4732 0D7F  
                        l4750 0FD1                          l4742 0FA9                          l3918 06F2  
                        l4734 030A                          l3864 0C7C                          l4752 0FDB  
                        l4744 0FB3                          l4760 0FAE                          l4736 0B88  
                        l3874 0CB4                          l3866 0C8C                          l4770 0FE0  
                        l4746 0FBD                          l4762 0FB8                          l4738 0F95  
                        l4754 0FE5                          l3890 06B0                          l4748 0FC7  
                        l4764 0FC2                          l4756 0F9A                          l3878 0CC1  
                        l4766 0FCC                          l4758 0FA4                          l4768 0FD6  
                        l3896 06BB                          STR_1 07B6                          STR_2 072E  
                        STR_3 076A                          STR_4 0790                          STR_5 0784  
                        STR_6 074F                          STR_7 079B                          STR_8 07AF  
                        STR_9 075D                          u1015 0BDA                          u1115 0ABF  
                        u1035 0BEB                          u1045 0BF4                          u1075 0B15  
                        _IOCB 0096                          u1405 0CA3                          u1415 0CB5  
                        u1505 06E8                          u1540 0DA7                          u1375 0C80  
                        u1535 07CE                          u1465 06C6                          u1395 0C8E  
                        u1707 0D66                          u1485 06D2                          u1717 0D99  
                        u1807 0D22                          u1495 06DE                          u1727 02E6  
                        u1817 0D2D                          u1737 0CCE                          u1657 0ECB  
                        u1827 0AAE                          u1747 0CDD                          u1667 0EE7  
                        u1837 0A50                          u1757 0CE9                          u1677 0F03  
                        u1847 0B99                          u1767 0CF3                          u1687 0F1B  
                        u1857 0BA4                          u1777 0CFD                          u1697 0F4C  
                        u1867 0BB0                          u1787 0D08                          _PEIE 005E  
                        u1877 0BBB                          u1797 0D15                          _TRMT 04C1  
                        _WPUB 0095                  __CFG_WRT$OFF 0000                          _accZ 0041  
           ?_LCD_Write_String 0070                          _jahr 0051                          _main 0C0B  
                        _gota 0706                          _hora 0055                          btemp 007E  
               _uint_to_array 0DA0                          start 000C            ??_LCD_Write_String 0074  
               __CFG_IESO$OFF 0000            __size_of_LCD_clear 0016             ___bmul@multiplier 0075  
                       ??_ISR 0070              ?_I2C_Master_Init 0026              ?_I2C_Master_Read 0072  
            ?_I2C_Master_Wait 0070              ?_I2C_Master_Stop 0070              __end_of_LCD_init 0D31  
                       ?_main 0070               __end_of___awdiv 06FF                         STR_10 07B9  
                       STR_11 07AA                         STR_13 07AA                         STR_14 0777  
                       STR_15 07B3                         STR_16 073F                         STR_17 07A4  
               __CFG_WDTE$OFF 0000               __end_of___awmod 0C0B               __end_of___lldiv 0CCA  
             ___awdiv@divisor 0020                         i1l129 0A60               ___awdiv@counter 0024  
                       _RCREG 001A                         _SPBRG 0099                         _PORTC 0007  
                       _PORTD 0008                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _SSPIE 0463                         _SSPIF 0063  
                       _TXREG 0019                  _sprintbuffer 0043                __CFG_FCMEN$OFF 0000  
      __end_of_LCD_Set_Cursor 0B91                         _SetUp 0E25                         _ancho 0044  
                       _datum 0053                         _largo 0045                __CFG_BOREN$OFF 0000  
                 ?_OSC_config 0072                         pclath 000A             __end_of_BCD_a_DEC 0ACA  
              ?_uint_to_array 0070                         status 0003                         wtemp0 007E  
              __CFG_MCLRE$OFF 0000               __initialization 000F                  __end_of_main 0C6A  
                __end_of_gota 070E              ?_LCD_Create_Char 0075                        ??_main 007A  
                   ??_LCD_Cmd 0072               ??_display_Datum 0029              ?_display_Uhrzeit 0028  
           ?_I2C_Master_Start 0070             ?_I2C_Master_Write 0072             __end_of_LCD_clear 0AB4  
                      ?_SetUp 0070               ?_LCD_Set_Cursor 0075            ??_I2C_Master_Start 0072  
          ??_I2C_Master_Write 0074                  _banderaPUSH1 007A                  _banderaPUSH2 0046  
            ___awdiv@dividend 0022                        _ANSELH 0189                  _banderaBoton 007B  
                      _SPBRGH 009A                        _SSPADD 0093                        _TRISC0 0438  
                      _TRISC1 0439                        _TRISC3 043B                        _TRISC4 043C  
          uint_to_array@F1343 003B                        _SSPCON 0014                        _SSPBUF 0013  
 LCD_Write_Character@caracter 0073                __CFG_PWRTE$OFF 0000              __end_of_get_Time 04FA  
                      ___bmul 0A67                        ___wmul 0ACA                     ??___awdiv 0078  
                   ??___awmod 0076                     ??___lldiv 0020                        _atilde 0716  
                      _arrowr 0726                        _estado 004C              ___awdiv@quotient 0026  
             ___awmod@divisor 0072           __size_of_OSC_config 00AC               ___awmod@counter 0077  
                ?_pressBoton1 0070                  ?_pressBoton2 0070                        saved_w 007E  
             ??_uint_to_array 0028       __end_of__initialization 0025                     ?_LCD_init 0070  
         ___bmul@multiplicand 0072                __pcstackCOMMON 0070                 __end_of_SetUp 0EAB  
         _LCD_Write_Character 0A47                  __pidataBANK0 07F2          display_Datum@columna 0028  
              _OPTION_REGbits 0081               _temperatura_obj 0048                       ??_SetUp 002E  
        ?_LCD_Write_Character 0070                LCD_Cmd@comando 0074                    __pbssBANK0 003B  
   LCD_Set_Cursor@corrimiento 0079                    ??_LCD_init 0075          __end_of_arrowr_vacio 0726  
                  __pmaintext 0C0B                       ?___bmul 0072                       ?___wmul 0072  
                  __pintentry 0004     __size_of_LCD_Write_String 0022          OSC_config@frecuencia 0072  
         display_Uhrzeit@fila 002C            __size_of_uart_init 0015                       _LCD_Cmd 0B91  
       ??_LCD_Write_Character 0072                     ?_get_Time 0070                       _SSPCON2 0091  
                     _SSPSTAT 0094                    __stringtab 0700                  ??_OSC_config 0076  
                   _BCD_a_DEC 0AB4                 ?_uartTX_Write 0070        uint_to_array@resultado 0030  
             __size_of___bmul 0011                       ___awdiv 06A4                       ___awmod 0BC0  
                     ___lldiv 0C6A               __size_of___wmul 0021             display_Datum@fila 002C  
                     _d_atras 004D              ??_LCD_Set_Cursor 0076                       __ptext1 0A3D  
                     __ptext2 0EAB                       __ptext3 0D31                       __ptext4 0029  
                     __ptext5 0DA0                       __ptext6 0ACA                       __ptext7 05D2  
                     __ptext8 04FA                       __ptext9 0BC0            __end_of_OSC_config 1000  
                __size_of_ISR 0011           uint_to_array@numero 0036                       _humedad 0050  
            ___awmod@dividend 0074      __size_of_I2C_Master_Init 0036      __size_of_I2C_Master_Read 002C  
    __size_of_I2C_Master_Wait 0009      __size_of_I2C_Master_Stop 0007          __size_of_pressBoton1 006F  
        __size_of_pressBoton2 00A9                    ??_get_Time 0020                       clrloop0 0A2D  
                   _LCD_clear 0A9E          end_of_initialization 0025                ??_uartTX_Write 0072  
   __size_of_I2C_Master_Start 0007             __end_of_uart_init 0A9E     __size_of_I2C_Master_Write 0008  
             ___lldiv@divisor 0072                    ?_BCD_a_DEC 0070               ___lldiv@counter 0025  
                   _RCSTAbits 0018              I2C_Master_Init@c 0026              I2C_Master_Read@a 0072  
                  _mostrarLCD 0029                     _PORTBbits 0006                     _PORTCbits 0007  
                  _termometro 070E      __size_of_LCD_Create_Char 002C                     _TRISCbits 0087  
       __end_of_display_Datum 05D2                    ?_LCD_clear 0070             LCD_Write_String@a 0076  
           LCD_Write_String@n 0074      __size_of_display_Uhrzeit 00D2                     _TXSTAbits 0098  
           __size_of_LCD_init 0067                __end_of___bmul 0A78         LCD_Set_Cursor@columna 0075  
              __end_of___wmul 0AEB              _LCD_Write_String 0AEB                   _BAUDCTLbits 0187  
              __end_of_atilde 071E                __end_of_arrowr 072E                  _arrowr_vacio 071E  
         start_initialization 000F                   __end_of_ISR 0A67             ??_I2C_Master_Init 002A  
           ??_I2C_Master_Read 0074             ??_I2C_Master_Wait 0072         __end_of_uint_to_array 0E25  
           ??_I2C_Master_Stop 0072      __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??_BCD_a_DEC 0076  
                    ??___bmul 0073       LCD_Create_Char@chardata 0075                      ??___wmul 0076  
                  init_fetch0 0A78                   ?_mostrarLCD 0070                   __pdataBANK0 004D  
             BCD_a_DEC@numBCD 0079                      ?_LCD_Cmd 0070          __end_of_uartTX_Write 0A47  
                 __pbssCOMMON 007A                     ___latbits 0002                 __pcstackBANK0 0020  
         display_Datum@jahr_d 0032           display_Datum@jahr_u 0031                   ??_LCD_clear 0075  
           __size_of_get_Time 01CC             ??_LCD_Create_Char 0076              _I2C_Master_Start 0A16  
            _I2C_Master_Write 0A24         uint_to_array@centenas 002F             ??_display_Uhrzeit 0029  
                    ?___awdiv 0020                      ?___awmod 0072                      ?___lldiv 0072  
                   __pstrings 0700   __end_of_LCD_Write_Character 0A56                     _obj_array 0047  
              __size_of_SetUp 0086          display_Uhrzeit@Uhr_d 0032          display_Uhrzeit@Uhr_u 0031  
         __size_of_mostrarLCD 0305          display_Uhrzeit@min_d 0030          display_Uhrzeit@min_u 002F  
        display_Uhrzeit@seg_d 002E          display_Uhrzeit@seg_u 002D             interrupt_function 0004  
              ___wmul@product 0076                      _LCD_init 0CCA                     clear_ram0 0A2C  
            LCD_Create_Char@n 0078                     _uart_init 0A89                     _velocidad 004A  
                 __stringbase 0705             ___wmul@multiplier 0072                 ??_pressBoton1 0077  
               ??_pressBoton2 0020              __size_of_LCD_Cmd 002F           I2C_Master_Read@temp 0076  
    __end_of_LCD_Write_String 0B0D                   _inclinacion 004F        LCD_Create_Char@charnum 0077  
                  ?_uart_init 0072              __size_of___awdiv 005B              __size_of___awmod 004B  
            __size_of___lldiv 0060         __size_of_uartTX_Write 000A            display_Datum@dia_d 002E  
          display_Datum@dia_u 002D              uartTX_Write@dato 0072            __end_of__stringtab 0706  
          display_Datum@mes_d 0030            display_Datum@mes_u 002F                      _d_frente 004E  
             _I2C_Master_Init 07BC               _I2C_Master_Read 0B39          uint_to_array@decenas 002E  
             _I2C_Master_Wait 0A34               _I2C_Master_Stop 0A1D                      __ptext10 06A4  
                    __ptext11 0AEB                      __ptext20 0A67                      __ptext12 0B65  
                    __ptext21 0E25                      __ptext13 032E                      __ptext30 0C6A  
                    __ptext22 0A89                      __ptext14 0A24                      __ptext31 0A56  
                    __ptext23 0F54                      __ptext15 0A1D                      __ptext24 0CCA  
                    __ptext16 0A16                      __ptext25 0A9E                      __ptext17 0B39  
                    __ptext26 0B0D                      __ptext18 0A34                      __ptext27 0A47  
                    __ptext19 0AB4                      __ptext28 0B91                      __ptext29 07BC  
                    _get_Time 032E             __CFG_BOR4V$BOR40V 0000       __size_of_LCD_Set_Cursor 002C  
         __end_of_pressBoton1 0DA0           __end_of_pressBoton2 0F54                 __size_of_main 005F  
      display_Uhrzeit@columna 0028                  _uartTX_Write 0A3D        __size_of_display_Datum 00D8  
                ??_mostrarLCD 0037           LCD_Set_Cursor@linea 0078               _LCD_Create_Char 0B0D  
    __end_of_I2C_Master_Start 0A1D      __end_of_I2C_Master_Write 0A2C                    _INTCONbits 000B  
                    init_ram0 0A7C               _display_Uhrzeit 05D2                      intlevel1 0000  
          __end_of_mostrarLCD 032E              ___lldiv@dividend 0076                     stringcode 0700  
                  _OSCCONbits 008F            __end_of_termometro 0716                   ??_uart_init 0074  
     __end_of_I2C_Master_Init 07F2       __end_of_I2C_Master_Read 0B65       __end_of_I2C_Master_Wait 0A3D  
     __end_of_I2C_Master_Stop 0A24                   _temperatura 0049        __size_of_uint_to_array 0085  
            ___lldiv@quotient 0021             I2C_Master_Write@d 0072                   _pressBoton1 0D31  
                 _pressBoton2 0EAB                      stringdir 0700                      stringtab 0700  
                 _SSPCON2bits 0091                 _display_Datum 04FA                    _OSC_config 0F54  

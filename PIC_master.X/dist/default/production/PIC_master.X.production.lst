

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Mar 06 16:21:48 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.05
    35                           ; Generated 20/12/2018 GMT
    36                           ; 
    37                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F887 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0088                     	;# 
   108  0089                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  0105                     	;# 
   132  0107                     	;# 
   133  0108                     	;# 
   134  0109                     	;# 
   135  010C                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  0185                     	;# 
   141  0187                     	;# 
   142  0188                     	;# 
   143  0189                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  008F                     	;# 
   191  0090                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0094                     	;# 
   198  0095                     	;# 
   199  0096                     	;# 
   200  0097                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009E                     	;# 
   208  009F                     	;# 
   209  0105                     	;# 
   210  0107                     	;# 
   211  0108                     	;# 
   212  0109                     	;# 
   213  010C                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010F                     	;# 
   218  0185                     	;# 
   219  0187                     	;# 
   220  0188                     	;# 
   221  0189                     	;# 
   222  018C                     	;# 
   223  018D                     	;# 
   224  0000                     	;# 
   225  0001                     	;# 
   226  0002                     	;# 
   227  0003                     	;# 
   228  0004                     	;# 
   229  0005                     	;# 
   230  0006                     	;# 
   231  0007                     	;# 
   232  0008                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  000E                     	;# 
   240  000F                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0015                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001B                     	;# 
   255  001C                     	;# 
   256  001D                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  0081                     	;# 
   260  0085                     	;# 
   261  0086                     	;# 
   262  0087                     	;# 
   263  0088                     	;# 
   264  0089                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  008E                     	;# 
   268  008F                     	;# 
   269  0090                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0105                     	;# 
   288  0107                     	;# 
   289  0108                     	;# 
   290  0109                     	;# 
   291  010C                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  0185                     	;# 
   297  0187                     	;# 
   298  0188                     	;# 
   299  0189                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0008                     	;# 
   311  0009                     	;# 
   312  000A                     	;# 
   313  000B                     	;# 
   314  000C                     	;# 
   315  000D                     	;# 
   316  000E                     	;# 
   317  000E                     	;# 
   318  000F                     	;# 
   319  0010                     	;# 
   320  0011                     	;# 
   321  0012                     	;# 
   322  0013                     	;# 
   323  0014                     	;# 
   324  0015                     	;# 
   325  0015                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001B                     	;# 
   333  001C                     	;# 
   334  001D                     	;# 
   335  001E                     	;# 
   336  001F                     	;# 
   337  0081                     	;# 
   338  0085                     	;# 
   339  0086                     	;# 
   340  0087                     	;# 
   341  0088                     	;# 
   342  0089                     	;# 
   343  008C                     	;# 
   344  008D                     	;# 
   345  008E                     	;# 
   346  008F                     	;# 
   347  0090                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0094                     	;# 
   354  0095                     	;# 
   355  0096                     	;# 
   356  0097                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009A                     	;# 
   360  009B                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  009F                     	;# 
   365  0105                     	;# 
   366  0107                     	;# 
   367  0108                     	;# 
   368  0109                     	;# 
   369  010C                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010E                     	;# 
   373  010F                     	;# 
   374  0185                     	;# 
   375  0187                     	;# 
   376  0188                     	;# 
   377  0189                     	;# 
   378  018C                     	;# 
   379  018D                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  000D                     	;# 
   394  000E                     	;# 
   395  000E                     	;# 
   396  000F                     	;# 
   397  0010                     	;# 
   398  0011                     	;# 
   399  0012                     	;# 
   400  0013                     	;# 
   401  0014                     	;# 
   402  0015                     	;# 
   403  0015                     	;# 
   404  0016                     	;# 
   405  0017                     	;# 
   406  0018                     	;# 
   407  0019                     	;# 
   408  001A                     	;# 
   409  001B                     	;# 
   410  001B                     	;# 
   411  001C                     	;# 
   412  001D                     	;# 
   413  001E                     	;# 
   414  001F                     	;# 
   415  0081                     	;# 
   416  0085                     	;# 
   417  0086                     	;# 
   418  0087                     	;# 
   419  0088                     	;# 
   420  0089                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  008F                     	;# 
   425  0090                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009A                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  0105                     	;# 
   444  0107                     	;# 
   445  0108                     	;# 
   446  0109                     	;# 
   447  010C                     	;# 
   448  010C                     	;# 
   449  010D                     	;# 
   450  010E                     	;# 
   451  010F                     	;# 
   452  0185                     	;# 
   453  0187                     	;# 
   454  0188                     	;# 
   455  0189                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458                           
   459                           	psect	idataBANK0
   460  0068                     __pidataBANK0:	
   461                           
   462                           ;initializer for _jahr
   463  0068  3414               	retlw	20
   464                           
   465                           ;initializer for _mes
   466  0069  3403               	retlw	3
   467                           
   468                           ;initializer for _datum
   469  006A  3406               	retlw	6
   470                           
   471                           ;initializer for _dia
   472  006B  3405               	retlw	5
   473                           
   474                           ;initializer for _hora
   475  006C  3410               	retlw	16
   476                           
   477                           ;initializer for _min
   478  006D  3415               	retlw	21
   479  0008                     _PORTD	set	8
   480  0007                     _PORTCbits	set	7
   481  0013                     _SSPBUF	set	19
   482  0014                     _SSPCON	set	20
   483  0063                     _SSPIF	set	99
   484  005E                     _PEIE	set	94
   485  005F                     _GIE	set	95
   486  0091                     _SSPCON2bits	set	145
   487  0087                     _TRISCbits	set	135
   488  0094                     _SSPSTAT	set	148
   489  0093                     _SSPADD	set	147
   490  0091                     _SSPCON2	set	145
   491  0088                     _TRISD	set	136
   492  0463                     _SSPIE	set	1123
   493  043C                     _TRISC4	set	1084
   494  043B                     _TRISC3	set	1083
   495  0439                     _TRISC1	set	1081
   496  0438                     _TRISC0	set	1080
   497                           
   498                           	psect	strings
   499  0003                     __pstrings:	
   500  0003                     stringtab:	
   501  0003                     __stringtab:	
   502  0003                     stringcode:	
   503                           ;	String table - string pointers are 1 byte each
   504                           
   505  0003                     stringdir:	
   506  0003  3000               	movlw	high stringdir
   507  0004  008A               	movwf	10
   508  0005  0804               	movf	4,w
   509  0006  0A84               	incf	4,f
   510  0007  0782               	addwf	2,f
   511  0008                     __stringbase:	
   512  0008  3400               	retlw	0
   513  0009                     __end_of__stringtab:	
   514  0009                     STR_1:	
   515  0009  3454               	retlw	84	;'T'
   516  000A  3465               	retlw	101	;'e'
   517  000B  346D               	retlw	109	;'m'
   518  000C  3470               	retlw	112	;'p'
   519  000D  342E               	retlw	46	;'.'
   520  000E  3420               	retlw	32	;' '
   521  000F  3448               	retlw	72	;'H'
   522  0010  3461               	retlw	97	;'a'
   523  0011  346D               	retlw	109	;'m'
   524  0012  3462               	retlw	98	;'b'
   525  0013  3469               	retlw	105	;'i'
   526  0014  3465               	retlw	101	;'e'
   527  0015  346E               	retlw	110	;'n'
   528  0016  3474               	retlw	116	;'t'
   529  0017  3465               	retlw	101	;'e'
   530  0018  343A               	retlw	58	;':'
   531  0019  3400               	retlw	0
   532  001A                     STR_7:	
   533  001A  3441               	retlw	65	;'A'
   534  001B  3474               	retlw	116	;'t'
   535  001C  3472               	retlw	114	;'r'
   536  001D  3461               	retlw	97	;'a'
   537  001E  3473               	retlw	115	;'s'
   538  001F  343A               	retlw	58	;':'
   539  0020  3420               	retlw	32	;' '
   540  0021  347C               	retlw	124	;'|'
   541  0022  3420               	retlw	32	;' '
   542  0023  3446               	retlw	70	;'F'
   543  0024  3472               	retlw	114	;'r'
   544  0025  3465               	retlw	101	;'e'
   545  0026  346E               	retlw	110	;'n'
   546  0027  3474               	retlw	116	;'t'
   547  0028  3465               	retlw	101	;'e'
   548  0029  343A               	retlw	58	;':'
   549  002A  3400               	retlw	0
   550  002B                     STR_3:	
   551  002B  3454               	retlw	84	;'T'
   552  002C  3465               	retlw	101	;'e'
   553  002D  346D               	retlw	109	;'m'
   554  002E  3470               	retlw	112	;'p'
   555  002F  342E               	retlw	46	;'.'
   556  0030  3420               	retlw	32	;' '
   557  0031  3464               	retlw	100	;'d'
   558  0032  3465               	retlw	101	;'e'
   559  0033  346C               	retlw	108	;'l'
   560  0034  3420               	retlw	32	;' '
   561  0035  3453               	retlw	83	;'S'
   562  0036  3475               	retlw	117	;'u'
   563  0037  3465               	retlw	101	;'e'
   564  0038  346C               	retlw	108	;'l'
   565  0039  346F               	retlw	111	;'o'
   566  003A  343A               	retlw	58	;':'
   567  003B  3400               	retlw	0
   568  003C                     STR_5:	
   569  003C  3448               	retlw	72	;'H'
   570  003D  3475               	retlw	117	;'u'
   571  003E  346D               	retlw	109	;'m'
   572  003F  3465               	retlw	101	;'e'
   573  0040  3464               	retlw	100	;'d'
   574  0041  3461               	retlw	97	;'a'
   575  0042  3464               	retlw	100	;'d'
   576  0043  343A               	retlw	58	;':'
   577  0044  3400               	retlw	0
   578  0045                     STR_10:	
   579  0045  3445               	retlw	69	;'E'
   580  0046  3452               	retlw	82	;'R'
   581  0047  3452               	retlw	82	;'R'
   582  0048  344F               	retlw	79	;'O'
   583  0049  3452               	retlw	82	;'R'
   584  004A  3400               	retlw	0
   585  004B                     STR_4:	
   586  004B  3432               	retlw	50	;'2'
   587  004C  3430               	retlw	48	;'0'
   588  004D  3400               	retlw	0
   589  004E                     STR_6:	
   590  004E  3438               	retlw	56	;'8'
   591  004F  3430               	retlw	48	;'0'
   592  0050  3400               	retlw	0
   593  0051                     STR_2:	
   594  0051  3436               	retlw	54	;'6'
   595  0052  3439               	retlw	57	;'9'
   596  0053  3400               	retlw	0
   597  0054                     STR_8:	
   598  0054  3433               	retlw	51	;'3'
   599  0055  3400               	retlw	0
   600  0056                     STR_9:	
   601  0056  3434               	retlw	52	;'4'
   602  0057  3400               	retlw	0
   603  004B                     
   604                           ; #config settings
   605  0000                     
   606                           	psect	cinit
   607  07D2                     start_initialization:	
   608  07D2                     __initialization:	
   609                           
   610                           ; Initialize objects allocated to BANK0
   611  07D2  120A  118A  2068  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   612  07D7  00B1               	movwf	__pdataBANK0& (0+127)
   613  07D8  120A  118A  2069  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   614  07DD  00B2               	movwf	(__pdataBANK0+1)& (0+127)
   615  07DE  120A  118A  206A  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   616  07E3  00B3               	movwf	(__pdataBANK0+2)& (0+127)
   617  07E4  120A  118A  206B  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   618  07E9  00B4               	movwf	(__pdataBANK0+3)& (0+127)
   619  07EA  120A  118A  206C  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   620  07EF  00B5               	movwf	(__pdataBANK0+4)& (0+127)
   621  07F0  120A  118A  206D   	fcall	__pidataBANK0+5	;fetch initializer
   622  07F3  00B6               	movwf	(__pdataBANK0+5)& (0+127)
   623                           
   624                           ; Clear objects allocated to BANK0
   625  07F4  01A9               	clrf	__pbssBANK0& (0+127)
   626  07F5  01AA               	clrf	(__pbssBANK0+1)& (0+127)
   627  07F6  01AB               	clrf	(__pbssBANK0+2)& (0+127)
   628  07F7  01AC               	clrf	(__pbssBANK0+3)& (0+127)
   629  07F8  01AD               	clrf	(__pbssBANK0+4)& (0+127)
   630  07F9  01AE               	clrf	(__pbssBANK0+5)& (0+127)
   631  07FA  01AF               	clrf	(__pbssBANK0+6)& (0+127)
   632  07FB  01B0               	clrf	(__pbssBANK0+7)& (0+127)
   633  07FC                     end_of_initialization:	
   634                           ;End of C runtime variable initialization code
   635                           
   636  07FC                     __end_of__initialization:	
   637  07FC  0183               	clrf	3
   638  07FD  120A  118A  2CCB   	ljmp	_main	;jump to C main() function
   639                           
   640                           	psect	bssBANK0
   641  0029                     __pbssBANK0:	
   642  0029                     uint_to_array@F1341:	
   643  0029                     	ds	6
   644  002F                     _seg:	
   645  002F                     	ds	1
   646  0030                     _estado:	
   647  0030                     	ds	1
   648                           
   649                           	psect	dataBANK0
   650  0031                     __pdataBANK0:	
   651  0031                     _jahr:	
   652  0031                     	ds	1
   653  0032                     _mes:	
   654  0032                     	ds	1
   655  0033                     _datum:	
   656  0033                     	ds	1
   657  0034                     _dia:	
   658  0034                     	ds	1
   659  0035                     _hora:	
   660  0035                     	ds	1
   661  0036                     _min:	
   662  0036                     	ds	1
   663                           
   664                           	psect	cstackCOMMON
   665  0070                     __pcstackCOMMON:	
   666  0070                     ?_LCD_init:	
   667  0070                     ?_LCD_clear:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_get_Time:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_LCD_Write_String:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_LCD_Write_Character:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ??_LCD_Write_Character:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_I2C_Master_Start:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ??_I2C_Master_Start:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_I2C_Master_Write:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_I2C_Master_Stop:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ??_I2C_Master_Stop:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_main:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_BCD_a_DEC:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_I2C_Master_Wait:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ??_I2C_Master_Wait:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_LCD_Cmd:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ??_LCD_Cmd:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?___bmul:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?_I2C_Master_Read:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?___awdiv:	
   722                           ; 2 bytes @ 0x0
   723                           
   724  0070                     ?___awmod:	
   725                           ; 2 bytes @ 0x0
   726                           
   727  0070                     ?___lldiv:	
   728                           ; 2 bytes @ 0x0
   729                           
   730  0070                     ___bmul@multiplicand:	
   731                           ; 4 bytes @ 0x0
   732                           
   733  0070                     I2C_Master_Write@d:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     I2C_Master_Read@a:	
   737                           ; 2 bytes @ 0x0
   738                           
   739  0070                     ___awdiv@divisor:	
   740                           ; 2 bytes @ 0x0
   741                           
   742  0070                     ___awmod@divisor:	
   743                           ; 2 bytes @ 0x0
   744                           
   745  0070                     ___lldiv@divisor:	
   746                           ; 2 bytes @ 0x0
   747                           
   748                           
   749                           ; 4 bytes @ 0x0
   750  0070                     	ds	1
   751  0071                     ??___bmul:	
   752  0071                     LCD_Write_Character@caracter:	
   753                           ; 1 bytes @ 0x1
   754                           
   755                           
   756                           ; 1 bytes @ 0x1
   757  0071                     	ds	1
   758  0072                     ??_LCD_Write_String:	
   759  0072                     ??_I2C_Master_Write:	
   760                           ; 1 bytes @ 0x2
   761                           
   762  0072                     ??_I2C_Master_Read:	
   763                           ; 1 bytes @ 0x2
   764                           
   765  0072                     LCD_Cmd@comando:	
   766                           ; 1 bytes @ 0x2
   767                           
   768  0072                     ___bmul@product:	
   769                           ; 1 bytes @ 0x2
   770                           
   771  0072                     LCD_Write_String@n:	
   772                           ; 1 bytes @ 0x2
   773                           
   774  0072                     ___awdiv@dividend:	
   775                           ; 2 bytes @ 0x2
   776                           
   777  0072                     ___awmod@dividend:	
   778                           ; 2 bytes @ 0x2
   779                           
   780                           
   781                           ; 2 bytes @ 0x2
   782  0072                     	ds	1
   783  0073                     ??_LCD_init:	
   784  0073                     ??_LCD_clear:	
   785                           ; 1 bytes @ 0x3
   786                           
   787  0073                     ?_LCD_Set_Cursor:	
   788                           ; 1 bytes @ 0x3
   789                           
   790  0073                     LCD_Set_Cursor@columna:	
   791                           ; 1 bytes @ 0x3
   792                           
   793  0073                     ___bmul@multiplier:	
   794                           ; 1 bytes @ 0x3
   795                           
   796                           
   797                           ; 1 bytes @ 0x3
   798  0073                     	ds	1
   799  0074                     ??_LCD_Set_Cursor:	
   800  0074                     ??_BCD_a_DEC:	
   801                           ; 1 bytes @ 0x4
   802                           
   803  0074                     ??___awdiv:	
   804                           ; 1 bytes @ 0x4
   805                           
   806  0074                     ??___awmod:	
   807                           ; 1 bytes @ 0x4
   808                           
   809  0074                     LCD_Write_String@a:	
   810                           ; 1 bytes @ 0x4
   811                           
   812  0074                     I2C_Master_Read@temp:	
   813                           ; 1 bytes @ 0x4
   814                           
   815  0074                     ___lldiv@dividend:	
   816                           ; 2 bytes @ 0x4
   817                           
   818                           
   819                           ; 4 bytes @ 0x4
   820  0074                     	ds	1
   821  0075                     ___awdiv@counter:	
   822  0075                     ___awmod@counter:	
   823                           ; 1 bytes @ 0x5
   824                           
   825                           
   826                           ; 1 bytes @ 0x5
   827  0075                     	ds	1
   828  0076                     LCD_Set_Cursor@linea:	
   829  0076                     ___awdiv@sign:	
   830                           ; 1 bytes @ 0x6
   831                           
   832  0076                     ___awmod@sign:	
   833                           ; 1 bytes @ 0x6
   834                           
   835                           
   836                           ; 1 bytes @ 0x6
   837  0076                     	ds	1
   838  0077                     BCD_a_DEC@numBCD:	
   839  0077                     LCD_Set_Cursor@corrimiento:	
   840                           ; 1 bytes @ 0x7
   841                           
   842  0077                     ___awdiv@quotient:	
   843                           ; 1 bytes @ 0x7
   844                           
   845                           
   846                           ; 2 bytes @ 0x7
   847  0077                     	ds	1
   848  0078                     ??_get_Time:	
   849  0078                     ??___lldiv:	
   850                           ; 1 bytes @ 0x8
   851                           
   852                           
   853                           ; 1 bytes @ 0x8
   854  0078                     	ds	1
   855  0079                     ?_display_Uhrzeit:	
   856  0079                     ?_display_Datum:	
   857                           ; 1 bytes @ 0x9
   858                           
   859  0079                     display_Uhrzeit@columna:	
   860                           ; 1 bytes @ 0x9
   861                           
   862  0079                     display_Datum@columna:	
   863                           ; 1 bytes @ 0x9
   864                           
   865  0079                     ___lldiv@quotient:	
   866                           ; 1 bytes @ 0x9
   867                           
   868                           
   869                           ; 4 bytes @ 0x9
   870  0079                     	ds	1
   871  007A                     ??_display_Uhrzeit:	
   872  007A                     ??_display_Datum:	
   873                           ; 1 bytes @ 0xA
   874                           
   875                           
   876                           ; 1 bytes @ 0xA
   877  007A                     	ds	3
   878  007D                     ___lldiv@counter:	
   879                           
   880                           ; 1 bytes @ 0xD
   881  007D                     	ds	1
   882                           
   883                           	psect	cstackBANK0
   884  0020                     __pcstackBANK0:	
   885  0020                     ?_I2C_Master_Init:	
   886  0020                     display_Uhrzeit@fila:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0020                     display_Datum@fila:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0020                     I2C_Master_Init@c:	
   893                           ; 1 bytes @ 0x0
   894                           
   895                           
   896                           ; 4 bytes @ 0x0
   897  0020                     	ds	1
   898  0021                     display_Uhrzeit@seg_u:	
   899  0021                     display_Datum@dia_u:	
   900                           ; 1 bytes @ 0x1
   901                           
   902                           
   903                           ; 1 bytes @ 0x1
   904  0021                     	ds	1
   905  0022                     display_Uhrzeit@seg_d:	
   906  0022                     display_Datum@dia_d:	
   907                           ; 1 bytes @ 0x2
   908                           
   909                           
   910                           ; 1 bytes @ 0x2
   911  0022                     	ds	1
   912  0023                     display_Uhrzeit@min_u:	
   913  0023                     display_Datum@mes_u:	
   914                           ; 1 bytes @ 0x3
   915                           
   916                           
   917                           ; 1 bytes @ 0x3
   918  0023                     	ds	1
   919  0024                     ??_I2C_Master_Init:	
   920  0024                     display_Uhrzeit@min_d:	
   921                           ; 1 bytes @ 0x4
   922                           
   923  0024                     display_Datum@mes_d:	
   924                           ; 1 bytes @ 0x4
   925                           
   926                           
   927                           ; 1 bytes @ 0x4
   928  0024                     	ds	1
   929  0025                     display_Uhrzeit@Uhr_u:	
   930  0025                     display_Datum@jahr_u:	
   931                           ; 1 bytes @ 0x5
   932                           
   933                           
   934                           ; 1 bytes @ 0x5
   935  0025                     	ds	1
   936  0026                     display_Uhrzeit@Uhr_d:	
   937  0026                     display_Datum@jahr_d:	
   938                           ; 1 bytes @ 0x6
   939                           
   940                           
   941                           ; 1 bytes @ 0x6
   942  0026                     	ds	2
   943  0028                     ??_main:	
   944                           
   945                           ; 1 bytes @ 0x8
   946  0028                     	ds	1
   947                           
   948                           	psect	maintext
   949  04CB                     __pmaintext:	
   950 ;;
   951 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   952 ;;
   953 ;; *************** function _main *****************
   954 ;; Defined at:
   955 ;;		line 43 in file "main_Master.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;		None
   958 ;; Auto vars:     Size  Location     Type
   959 ;;		None
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   964 ;; Tracked objects:
   965 ;;		On entry : B00/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   969 ;;      Params:         0       0       0       0       0
   970 ;;      Locals:         0       0       0       0       0
   971 ;;      Temps:          0       1       0       0       0
   972 ;;      Totals:         0       1       0       0       0
   973 ;;Total ram usage:        1 bytes
   974 ;; Hardware stack levels required when called:    3
   975 ;; This function calls:
   976 ;;		_I2C_Master_Init
   977 ;;		_LCD_Set_Cursor
   978 ;;		_LCD_Write_Character
   979 ;;		_LCD_Write_String
   980 ;;		_LCD_clear
   981 ;;		_LCD_init
   982 ;;		_display_Datum
   983 ;;		_display_Uhrzeit
   984 ;;		_get_Time
   985 ;; This function is called by:
   986 ;;		Startup code after reset
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           
   991                           ;psect for function _main
   992  04CB                     _main:	
   993                           
   994                           ;main_Master.c: 44:     TRISD = 0;
   995                           
   996                           ;incstack = 0
   997                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   998  04CB  1683               	bsf	3,5	;RP0=1, select bank1
   999  04CC  1303               	bcf	3,6	;RP1=0, select bank1
  1000  04CD  0188               	clrf	8	;volatile
  1001                           
  1002                           ;main_Master.c: 45:     TRISC0 = 0;
  1003  04CE  1007               	bcf	7,0	;volatile
  1004                           
  1005                           ;main_Master.c: 46:     TRISC1 = 0;
  1006  04CF  1087               	bcf	7,1	;volatile
  1007                           
  1008                           ;main_Master.c: 47:     LCD_init();
  1009  04D0  120A  118A  22BA  120A  118A  	fcall	_LCD_init
  1010                           
  1011                           ;main_Master.c: 48:     LCD_clear();
  1012  04D5  120A  118A  20AD  120A  118A  	fcall	_LCD_clear
  1013                           
  1014                           ;main_Master.c: 49:     I2C_Master_Init(100000);
  1015  04DA  3000               	movlw	0
  1016  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  1017  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  1018  04DD  00A3               	movwf	I2C_Master_Init@c+3
  1019  04DE  3001               	movlw	1
  1020  04DF  00A2               	movwf	I2C_Master_Init@c+2
  1021  04E0  3086               	movlw	134
  1022  04E1  00A1               	movwf	I2C_Master_Init@c+1
  1023  04E2  30A0               	movlw	160
  1024  04E3  00A0               	movwf	I2C_Master_Init@c
  1025  04E4  120A  118A  2182  120A  118A  	fcall	_I2C_Master_Init
  1026                           
  1027                           ;main_Master.c: 51:     get_Time();
  1028  04E9  120A  118A  2606  120A  118A  	fcall	_get_Time
  1029  04EE  2DED               	goto	l1653
  1030  04EF                     l1619:	
  1031                           
  1032                           ;main_Master.c: 55:                 get_Time();
  1033  04EF  120A  118A  2606  120A  118A  	fcall	_get_Time
  1034                           
  1035                           ;main_Master.c: 56:                 display_Uhrzeit(2,4);
  1036  04F4  3004               	movlw	4
  1037  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  1038  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  1039  04F7  00A8               	movwf	??_main
  1040  04F8  0828               	movf	??_main,w
  1041  04F9  00F9               	movwf	display_Uhrzeit@columna
  1042  04FA  3002               	movlw	2
  1043  04FB  120A  118A  2321  120A  118A  	fcall	_display_Uhrzeit
  1044                           
  1045                           ;main_Master.c: 57:                 display_Datum(1,3);
  1046  0500  3003               	movlw	3
  1047  0501  1283               	bcf	3,5	;RP0=0, select bank0
  1048  0502  1303               	bcf	3,6	;RP1=0, select bank0
  1049  0503  00A8               	movwf	??_main
  1050  0504  0828               	movf	??_main,w
  1051  0505  00F9               	movwf	display_Datum@columna
  1052  0506  3001               	movlw	1
  1053  0507  120A  118A  23F3  120A  118A  	fcall	_display_Datum
  1054                           
  1055                           ;main_Master.c: 58:                 break;
  1056  050C  2DED               	goto	l1653
  1057  050D                     l1625:	
  1058                           
  1059                           ;main_Master.c: 60:                 LCD_Set_Cursor(1,0);
  1060  050D  01F3               	clrf	LCD_Set_Cursor@columna
  1061  050E  3001               	movlw	1
  1062  050F  120A  118A  20FB  120A  118A  	fcall	_LCD_Set_Cursor
  1063                           
  1064                           ;main_Master.c: 61:                 LCD_Write_String("Temp. Hambiente:");
  1065  0514  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1066  0515  120A  118A  20D9  120A  118A  	fcall	_LCD_Write_String
  1067                           
  1068                           ;main_Master.c: 62:                 LCD_Set_Cursor(2,6);
  1069  051A  3006               	movlw	6
  1070  051B  1283               	bcf	3,5	;RP0=0, select bank0
  1071  051C  1303               	bcf	3,6	;RP1=0, select bank0
  1072  051D  00A8               	movwf	??_main
  1073  051E  0828               	movf	??_main,w
  1074  051F  00F3               	movwf	LCD_Set_Cursor@columna
  1075  0520  3002               	movlw	2
  1076  0521  120A  118A  20FB  120A  118A  	fcall	_LCD_Set_Cursor
  1077                           
  1078                           ;main_Master.c: 63:                 LCD_Write_String("69");
  1079  0526  3049               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1080  0527  120A  118A  20D9  120A  118A  	fcall	_LCD_Write_String
  1081                           
  1082                           ;main_Master.c: 64:                 LCD_Write_Character(223);
  1083  052C  30DF               	movlw	223
  1084  052D  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  1085                           
  1086                           ;main_Master.c: 65:                 LCD_Write_Character('C');
  1087  0532  3043               	movlw	67
  1088  0533  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  1089                           
  1090                           ;main_Master.c: 66:                 break;
  1091  0538  2DED               	goto	l1653
  1092  0539                     l1631:	
  1093                           
  1094                           ;main_Master.c: 68:                 LCD_Set_Cursor(1,0);
  1095  0539  01F3               	clrf	LCD_Set_Cursor@columna
  1096  053A  3001               	movlw	1
  1097  053B  120A  118A  20FB  120A  118A  	fcall	_LCD_Set_Cursor
  1098                           
  1099                           ;main_Master.c: 69:                 LCD_Write_String("Temp. del Suelo:");
  1100  0540  3023               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1101  0541  120A  118A  20D9  120A  118A  	fcall	_LCD_Write_String
  1102                           
  1103                           ;main_Master.c: 70:                 LCD_Set_Cursor(2,6);
  1104  0546  3006               	movlw	6
  1105  0547  1283               	bcf	3,5	;RP0=0, select bank0
  1106  0548  1303               	bcf	3,6	;RP1=0, select bank0
  1107  0549  00A8               	movwf	??_main
  1108  054A  0828               	movf	??_main,w
  1109  054B  00F3               	movwf	LCD_Set_Cursor@columna
  1110  054C  3002               	movlw	2
  1111  054D  120A  118A  20FB  120A  118A  	fcall	_LCD_Set_Cursor
  1112                           
  1113                           ;main_Master.c: 71:                 LCD_Write_String("20");
  1114  0552  3043               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1115  0553  120A  118A  20D9  120A  118A  	fcall	_LCD_Write_String
  1116                           
  1117                           ;main_Master.c: 72:                 LCD_Write_Character(223);
  1118  0558  30DF               	movlw	223
  1119  0559  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  1120                           
  1121                           ;main_Master.c: 73:                 LCD_Write_Character('C');
  1122  055E  3043               	movlw	67
  1123  055F  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  1124                           
  1125                           ;main_Master.c: 74:                 break;
  1126  0564  2DED               	goto	l1653
  1127  0565                     l1637:	
  1128                           
  1129                           ;main_Master.c: 76:                 LCD_Set_Cursor(1,0);
  1130  0565  01F3               	clrf	LCD_Set_Cursor@columna
  1131  0566  3001               	movlw	1
  1132  0567  120A  118A  20FB  120A  118A  	fcall	_LCD_Set_Cursor
  1133                           
  1134                           ;main_Master.c: 77:                 LCD_Write_String("Humedad:");
  1135  056C  3034               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1136  056D  120A  118A  20D9  120A  118A  	fcall	_LCD_Write_String
  1137                           
  1138                           ;main_Master.c: 78:                 LCD_Set_Cursor(2,6);
  1139  0572  3006               	movlw	6
  1140  0573  1283               	bcf	3,5	;RP0=0, select bank0
  1141  0574  1303               	bcf	3,6	;RP1=0, select bank0
  1142  0575  00A8               	movwf	??_main
  1143  0576  0828               	movf	??_main,w
  1144  0577  00F3               	movwf	LCD_Set_Cursor@columna
  1145  0578  3002               	movlw	2
  1146  0579  120A  118A  20FB  120A  118A  	fcall	_LCD_Set_Cursor
  1147                           
  1148                           ;main_Master.c: 79:                 LCD_Write_String("80");
  1149  057E  3046               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1150  057F  120A  118A  20D9  120A  118A  	fcall	_LCD_Write_String
  1151                           
  1152                           ;main_Master.c: 80:                 LCD_Write_Character('%');
  1153  0584  3025               	movlw	37
  1154  0585  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  1155                           
  1156                           ;main_Master.c: 81:                 break;
  1157  058A  2DED               	goto	l1653
  1158  058B                     l1641:	
  1159                           
  1160                           ;main_Master.c: 83:                 LCD_Set_Cursor(1,0);
  1161  058B  01F3               	clrf	LCD_Set_Cursor@columna
  1162  058C  3001               	movlw	1
  1163  058D  120A  118A  20FB  120A  118A  	fcall	_LCD_Set_Cursor
  1164                           
  1165                           ;main_Master.c: 84:                 LCD_Write_String("Atras: | Frente:");
  1166  0592  3012               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1167  0593  120A  118A  20D9  120A  118A  	fcall	_LCD_Write_String
  1168                           
  1169                           ;main_Master.c: 85:                 LCD_Set_Cursor(2,2);
  1170  0598  3002               	movlw	2
  1171  0599  1283               	bcf	3,5	;RP0=0, select bank0
  1172  059A  1303               	bcf	3,6	;RP1=0, select bank0
  1173  059B  00A8               	movwf	??_main
  1174  059C  0828               	movf	??_main,w
  1175  059D  00F3               	movwf	LCD_Set_Cursor@columna
  1176  059E  3002               	movlw	2
  1177  059F  120A  118A  20FB  120A  118A  	fcall	_LCD_Set_Cursor
  1178                           
  1179                           ;main_Master.c: 86:                 LCD_Write_String("3");
  1180  05A4  304C               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1181  05A5  120A  118A  20D9  120A  118A  	fcall	_LCD_Write_String
  1182                           
  1183                           ;main_Master.c: 87:                 LCD_Write_Character('m');
  1184  05AA  306D               	movlw	109
  1185  05AB  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  1186                           
  1187                           ;main_Master.c: 88:                 LCD_Set_Cursor(2,7);
  1188  05B0  3007               	movlw	7
  1189  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  1190  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  1191  05B3  00A8               	movwf	??_main
  1192  05B4  0828               	movf	??_main,w
  1193  05B5  00F3               	movwf	LCD_Set_Cursor@columna
  1194  05B6  3002               	movlw	2
  1195  05B7  120A  118A  20FB  120A  118A  	fcall	_LCD_Set_Cursor
  1196                           
  1197                           ;main_Master.c: 89:                 LCD_Write_Character('|');
  1198  05BC  307C               	movlw	124
  1199  05BD  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  1200                           
  1201                           ;main_Master.c: 90:                 LCD_Set_Cursor(2,11);
  1202  05C2  300B               	movlw	11
  1203  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1204  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1205  05C5  00A8               	movwf	??_main
  1206  05C6  0828               	movf	??_main,w
  1207  05C7  00F3               	movwf	LCD_Set_Cursor@columna
  1208  05C8  3002               	movlw	2
  1209  05C9  120A  118A  20FB  120A  118A  	fcall	_LCD_Set_Cursor
  1210                           
  1211                           ;main_Master.c: 91:                 LCD_Write_String("4");
  1212  05CE  304E               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1213  05CF  120A  118A  20D9  120A  118A  	fcall	_LCD_Write_String
  1214                           
  1215                           ;main_Master.c: 92:                 LCD_Write_Character('m');
  1216  05D4  306D               	movlw	109
  1217  05D5  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  1218                           
  1219                           ;main_Master.c: 93:                 break;
  1220  05DA  2DED               	goto	l1653
  1221  05DB                     l1651:	
  1222                           
  1223                           ;main_Master.c: 95:                 LCD_Set_Cursor(1,9);
  1224  05DB  3009               	movlw	9
  1225  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1226  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1227  05DE  00A8               	movwf	??_main
  1228  05DF  0828               	movf	??_main,w
  1229  05E0  00F3               	movwf	LCD_Set_Cursor@columna
  1230  05E1  3001               	movlw	1
  1231  05E2  120A  118A  20FB  120A  118A  	fcall	_LCD_Set_Cursor
  1232                           
  1233                           ;main_Master.c: 96:                 LCD_Write_String("ERROR");
  1234  05E7  303D               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1235  05E8  120A  118A  20D9  120A  118A  	fcall	_LCD_Write_String
  1236  05ED                     l1653:	
  1237                           ;main_Master.c: 97:         }
  1238                           
  1239                           
  1240                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1241                           ; Switch size 1, requested type "simple"
  1242                           ; Number of cases is 1, Range of values is 0 to 0
  1243                           ; switch strategies available:
  1244                           ; Name         Instructions Cycles
  1245                           ; simple_byte            4     3 (average)
  1246                           ; direct_byte           11     8 (fixed)
  1247                           ; jumptable            260     6 (fixed)
  1248                           ;	Chosen strategy is simple_byte
  1249  05ED  3000               	movlw	0
  1250  05EE  3A00               	xorlw	0	; case 0
  1251  05EF  1903               	skipnz
  1252  05F0  2DF2               	goto	l1775
  1253  05F1  2DDB               	goto	l1651
  1254  05F2                     l1775:	
  1255                           
  1256                           ; Switch size 1, requested type "simple"
  1257                           ; Number of cases is 5, Range of values is 0 to 4
  1258                           ; switch strategies available:
  1259                           ; Name         Instructions Cycles
  1260                           ; simple_byte           16     9 (average)
  1261                           ; direct_byte           23     8 (fixed)
  1262                           ; jumptable            260     6 (fixed)
  1263                           ;	Chosen strategy is simple_byte
  1264  05F2  3000               	movlw	0
  1265  05F3  3A00               	xorlw	0	; case 0
  1266  05F4  1903               	skipnz
  1267  05F5  2CEF               	goto	l1619
  1268  05F6  3A01               	xorlw	1	; case 1
  1269  05F7  1903               	skipnz
  1270  05F8  2D0D               	goto	l1625
  1271  05F9  3A03               	xorlw	3	; case 2
  1272  05FA  1903               	skipnz
  1273  05FB  2D39               	goto	l1631
  1274  05FC  3A01               	xorlw	1	; case 3
  1275  05FD  1903               	skipnz
  1276  05FE  2D65               	goto	l1637
  1277  05FF  3A07               	xorlw	7	; case 4
  1278  0600  1903               	skipnz
  1279  0601  2D8B               	goto	l1641
  1280  0602  2DDB               	goto	l1651
  1281  0603  120A  118A  2800   	ljmp	start
  1282  0606                     __end_of_main:	
  1283                           
  1284                           	psect	text1
  1285  0606                     __ptext1:	
  1286 ;; *************** function _get_Time *****************
  1287 ;; Defined at:
  1288 ;;		line 78 in file "RTC.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;		None
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;		None
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		wreg, status,2, status,0, pclath, cstack
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1302 ;;      Params:         0       0       0       0       0
  1303 ;;      Locals:         0       0       0       0       0
  1304 ;;      Temps:          1       0       0       0       0
  1305 ;;      Totals:         1       0       0       0       0
  1306 ;;Total ram usage:        1 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; Hardware stack levels required when called:    2
  1309 ;; This function calls:
  1310 ;;		_BCD_a_DEC
  1311 ;;		_I2C_Master_Read
  1312 ;;		_I2C_Master_Start
  1313 ;;		_I2C_Master_Stop
  1314 ;;		_I2C_Master_Write
  1315 ;; This function is called by:
  1316 ;;		_main
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           
  1321                           ;psect for function _get_Time
  1322  0606                     _get_Time:	
  1323                           
  1324                           ;RTC.c: 79:     I2C_Master_Start();
  1325                           
  1326                           ;incstack = 0
  1327                           ; Regs used in _get_Time: [wreg+status,2+status,0+pclath+cstack]
  1328  0606  120A  118A  206E  120A  118A  	fcall	_I2C_Master_Start
  1329                           
  1330                           ;RTC.c: 80:     I2C_Master_Write(0xD0);
  1331  060B  30D0               	movlw	208
  1332  060C  00F0               	movwf	I2C_Master_Write@d
  1333  060D  3000               	movlw	0
  1334  060E  00F1               	movwf	I2C_Master_Write@d+1
  1335  060F  120A  118A  207C  120A  118A  	fcall	_I2C_Master_Write
  1336                           
  1337                           ;RTC.c: 81:     I2C_Master_Write(0);
  1338  0614  3000               	movlw	0
  1339  0615  00F0               	movwf	I2C_Master_Write@d
  1340  0616  00F1               	movwf	I2C_Master_Write@d+1
  1341  0617  120A  118A  207C  120A  118A  	fcall	_I2C_Master_Write
  1342                           
  1343                           ;RTC.c: 82:     I2C_Master_Stop();
  1344  061C  120A  118A  2075  120A  118A  	fcall	_I2C_Master_Stop
  1345                           
  1346                           ;RTC.c: 83:     I2C_Master_Start();
  1347  0621  120A  118A  206E  120A  118A  	fcall	_I2C_Master_Start
  1348                           
  1349                           ;RTC.c: 84:     I2C_Master_Write(0xD1);
  1350  0626  30D1               	movlw	209
  1351  0627  00F0               	movwf	I2C_Master_Write@d
  1352  0628  3000               	movlw	0
  1353  0629  00F1               	movwf	I2C_Master_Write@d+1
  1354  062A  120A  118A  207C  120A  118A  	fcall	_I2C_Master_Write
  1355                           
  1356                           ;RTC.c: 85:     seg = BCD_a_DEC(I2C_Master_Read(0));
  1357  062F  3000               	movlw	0
  1358  0630  00F0               	movwf	I2C_Master_Read@a
  1359  0631  00F1               	movwf	I2C_Master_Read@a+1
  1360  0632  120A  118A  2127  120A  118A  	fcall	_I2C_Master_Read
  1361  0637  0870               	movf	?_I2C_Master_Read,w
  1362  0638  120A  118A  20C3  120A  118A  	fcall	_BCD_a_DEC
  1363  063D  00F8               	movwf	??_get_Time
  1364  063E  0878               	movf	??_get_Time,w
  1365  063F  1283               	bcf	3,5	;RP0=0, select bank0
  1366  0640  1303               	bcf	3,6	;RP1=0, select bank0
  1367  0641  00AF               	movwf	_seg
  1368                           
  1369                           ;RTC.c: 86:     I2C_Master_Stop();
  1370  0642  120A  118A  2075  120A  118A  	fcall	_I2C_Master_Stop
  1371                           
  1372                           ;RTC.c: 88:     I2C_Master_Start();
  1373  0647  120A  118A  206E  120A  118A  	fcall	_I2C_Master_Start
  1374                           
  1375                           ;RTC.c: 89:     I2C_Master_Write(0xD0);
  1376  064C  30D0               	movlw	208
  1377  064D  00F0               	movwf	I2C_Master_Write@d
  1378  064E  3000               	movlw	0
  1379  064F  00F1               	movwf	I2C_Master_Write@d+1
  1380  0650  120A  118A  207C  120A  118A  	fcall	_I2C_Master_Write
  1381                           
  1382                           ;RTC.c: 90:     I2C_Master_Write(1);
  1383  0655  3001               	movlw	1
  1384  0656  00F0               	movwf	I2C_Master_Write@d
  1385  0657  3000               	movlw	0
  1386  0658  00F1               	movwf	I2C_Master_Write@d+1
  1387  0659  120A  118A  207C  120A  118A  	fcall	_I2C_Master_Write
  1388                           
  1389                           ;RTC.c: 91:     I2C_Master_Stop();
  1390  065E  120A  118A  2075  120A  118A  	fcall	_I2C_Master_Stop
  1391                           
  1392                           ;RTC.c: 92:     I2C_Master_Start();
  1393  0663  120A  118A  206E  120A  118A  	fcall	_I2C_Master_Start
  1394                           
  1395                           ;RTC.c: 93:     I2C_Master_Write(0xD1);
  1396  0668  30D1               	movlw	209
  1397  0669  00F0               	movwf	I2C_Master_Write@d
  1398  066A  3000               	movlw	0
  1399  066B  00F1               	movwf	I2C_Master_Write@d+1
  1400  066C  120A  118A  207C  120A  118A  	fcall	_I2C_Master_Write
  1401                           
  1402                           ;RTC.c: 94:     min = BCD_a_DEC(I2C_Master_Read(0));
  1403  0671  3000               	movlw	0
  1404  0672  00F0               	movwf	I2C_Master_Read@a
  1405  0673  00F1               	movwf	I2C_Master_Read@a+1
  1406  0674  120A  118A  2127  120A  118A  	fcall	_I2C_Master_Read
  1407  0679  0870               	movf	?_I2C_Master_Read,w
  1408  067A  120A  118A  20C3  120A  118A  	fcall	_BCD_a_DEC
  1409  067F  00F8               	movwf	??_get_Time
  1410  0680  0878               	movf	??_get_Time,w
  1411  0681  1283               	bcf	3,5	;RP0=0, select bank0
  1412  0682  1303               	bcf	3,6	;RP1=0, select bank0
  1413  0683  00B6               	movwf	_min
  1414                           
  1415                           ;RTC.c: 95:     I2C_Master_Stop();
  1416  0684  120A  118A  2075  120A  118A  	fcall	_I2C_Master_Stop
  1417                           
  1418                           ;RTC.c: 97:     I2C_Master_Start();
  1419  0689  120A  118A  206E  120A  118A  	fcall	_I2C_Master_Start
  1420                           
  1421                           ;RTC.c: 98:     I2C_Master_Write(0xD0);
  1422  068E  30D0               	movlw	208
  1423  068F  00F0               	movwf	I2C_Master_Write@d
  1424  0690  3000               	movlw	0
  1425  0691  00F1               	movwf	I2C_Master_Write@d+1
  1426  0692  120A  118A  207C  120A  118A  	fcall	_I2C_Master_Write
  1427                           
  1428                           ;RTC.c: 99:     I2C_Master_Write(2);
  1429  0697  3002               	movlw	2
  1430  0698  00F0               	movwf	I2C_Master_Write@d
  1431  0699  3000               	movlw	0
  1432  069A  00F1               	movwf	I2C_Master_Write@d+1
  1433  069B  120A  118A  207C  120A  118A  	fcall	_I2C_Master_Write
  1434                           
  1435                           ;RTC.c: 100:     I2C_Master_Stop();
  1436  06A0  120A  118A  2075  120A  118A  	fcall	_I2C_Master_Stop
  1437                           
  1438                           ;RTC.c: 101:     I2C_Master_Start();
  1439  06A5  120A  118A  206E  120A  118A  	fcall	_I2C_Master_Start
  1440                           
  1441                           ;RTC.c: 102:     I2C_Master_Write(0xD1);
  1442  06AA  30D1               	movlw	209
  1443  06AB  00F0               	movwf	I2C_Master_Write@d
  1444  06AC  3000               	movlw	0
  1445  06AD  00F1               	movwf	I2C_Master_Write@d+1
  1446  06AE  120A  118A  207C  120A  118A  	fcall	_I2C_Master_Write
  1447                           
  1448                           ;RTC.c: 103:     hora = BCD_a_DEC(I2C_Master_Read(0));
  1449  06B3  3000               	movlw	0
  1450  06B4  00F0               	movwf	I2C_Master_Read@a
  1451  06B5  00F1               	movwf	I2C_Master_Read@a+1
  1452  06B6  120A  118A  2127  120A  118A  	fcall	_I2C_Master_Read
  1453  06BB  0870               	movf	?_I2C_Master_Read,w
  1454  06BC  120A  118A  20C3  120A  118A  	fcall	_BCD_a_DEC
  1455  06C1  00F8               	movwf	??_get_Time
  1456  06C2  0878               	movf	??_get_Time,w
  1457  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  1458  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  1459  06C5  00B5               	movwf	_hora
  1460                           
  1461                           ;RTC.c: 104:     I2C_Master_Stop();
  1462  06C6  120A  118A  2075  120A  118A  	fcall	_I2C_Master_Stop
  1463                           
  1464                           ;RTC.c: 107:     I2C_Master_Start();
  1465  06CB  120A  118A  206E  120A  118A  	fcall	_I2C_Master_Start
  1466                           
  1467                           ;RTC.c: 108:     I2C_Master_Write(0xD0);
  1468  06D0  30D0               	movlw	208
  1469  06D1  00F0               	movwf	I2C_Master_Write@d
  1470  06D2  3000               	movlw	0
  1471  06D3  00F1               	movwf	I2C_Master_Write@d+1
  1472  06D4  120A  118A  207C  120A  118A  	fcall	_I2C_Master_Write
  1473                           
  1474                           ;RTC.c: 109:     I2C_Master_Write(3);
  1475  06D9  3003               	movlw	3
  1476  06DA  00F0               	movwf	I2C_Master_Write@d
  1477  06DB  3000               	movlw	0
  1478  06DC  00F1               	movwf	I2C_Master_Write@d+1
  1479  06DD  120A  118A  207C  120A  118A  	fcall	_I2C_Master_Write
  1480                           
  1481                           ;RTC.c: 110:     I2C_Master_Stop();
  1482  06E2  120A  118A  2075  120A  118A  	fcall	_I2C_Master_Stop
  1483                           
  1484                           ;RTC.c: 111:     I2C_Master_Start();
  1485  06E7  120A  118A  206E  120A  118A  	fcall	_I2C_Master_Start
  1486                           
  1487                           ;RTC.c: 112:     I2C_Master_Write(0xD1);
  1488  06EC  30D1               	movlw	209
  1489  06ED  00F0               	movwf	I2C_Master_Write@d
  1490  06EE  3000               	movlw	0
  1491  06EF  00F1               	movwf	I2C_Master_Write@d+1
  1492  06F0  120A  118A  207C  120A  118A  	fcall	_I2C_Master_Write
  1493                           
  1494                           ;RTC.c: 113:     dia = BCD_a_DEC(I2C_Master_Read(0));
  1495  06F5  3000               	movlw	0
  1496  06F6  00F0               	movwf	I2C_Master_Read@a
  1497  06F7  00F1               	movwf	I2C_Master_Read@a+1
  1498  06F8  120A  118A  2127  120A  118A  	fcall	_I2C_Master_Read
  1499  06FD  0870               	movf	?_I2C_Master_Read,w
  1500  06FE  120A  118A  20C3  120A  118A  	fcall	_BCD_a_DEC
  1501  0703  00F8               	movwf	??_get_Time
  1502  0704  0878               	movf	??_get_Time,w
  1503  0705  1283               	bcf	3,5	;RP0=0, select bank0
  1504  0706  1303               	bcf	3,6	;RP1=0, select bank0
  1505  0707  00B4               	movwf	_dia
  1506                           
  1507                           ;RTC.c: 114:     I2C_Master_Stop();
  1508  0708  120A  118A  2075  120A  118A  	fcall	_I2C_Master_Stop
  1509                           
  1510                           ;RTC.c: 116:     I2C_Master_Start();
  1511  070D  120A  118A  206E  120A  118A  	fcall	_I2C_Master_Start
  1512                           
  1513                           ;RTC.c: 117:     I2C_Master_Write(0xD0);
  1514  0712  30D0               	movlw	208
  1515  0713  00F0               	movwf	I2C_Master_Write@d
  1516  0714  3000               	movlw	0
  1517  0715  00F1               	movwf	I2C_Master_Write@d+1
  1518  0716  120A  118A  207C  120A  118A  	fcall	_I2C_Master_Write
  1519                           
  1520                           ;RTC.c: 118:     I2C_Master_Write(4);
  1521  071B  3004               	movlw	4
  1522  071C  00F0               	movwf	I2C_Master_Write@d
  1523  071D  3000               	movlw	0
  1524  071E  00F1               	movwf	I2C_Master_Write@d+1
  1525  071F  120A  118A  207C  120A  118A  	fcall	_I2C_Master_Write
  1526                           
  1527                           ;RTC.c: 119:     I2C_Master_Stop();
  1528  0724  120A  118A  2075  120A  118A  	fcall	_I2C_Master_Stop
  1529                           
  1530                           ;RTC.c: 120:     I2C_Master_Start();
  1531  0729  120A  118A  206E  120A  118A  	fcall	_I2C_Master_Start
  1532                           
  1533                           ;RTC.c: 121:     I2C_Master_Write(0xD1);
  1534  072E  30D1               	movlw	209
  1535  072F  00F0               	movwf	I2C_Master_Write@d
  1536  0730  3000               	movlw	0
  1537  0731  00F1               	movwf	I2C_Master_Write@d+1
  1538  0732  120A  118A  207C  120A  118A  	fcall	_I2C_Master_Write
  1539                           
  1540                           ;RTC.c: 122:     datum = BCD_a_DEC(I2C_Master_Read(0));
  1541  0737  3000               	movlw	0
  1542  0738  00F0               	movwf	I2C_Master_Read@a
  1543  0739  00F1               	movwf	I2C_Master_Read@a+1
  1544  073A  120A  118A  2127  120A  118A  	fcall	_I2C_Master_Read
  1545  073F  0870               	movf	?_I2C_Master_Read,w
  1546  0740  120A  118A  20C3  120A  118A  	fcall	_BCD_a_DEC
  1547  0745  00F8               	movwf	??_get_Time
  1548  0746  0878               	movf	??_get_Time,w
  1549  0747  1283               	bcf	3,5	;RP0=0, select bank0
  1550  0748  1303               	bcf	3,6	;RP1=0, select bank0
  1551  0749  00B3               	movwf	_datum
  1552                           
  1553                           ;RTC.c: 123:     I2C_Master_Stop();
  1554  074A  120A  118A  2075  120A  118A  	fcall	_I2C_Master_Stop
  1555                           
  1556                           ;RTC.c: 125:     I2C_Master_Start();
  1557  074F  120A  118A  206E  120A  118A  	fcall	_I2C_Master_Start
  1558                           
  1559                           ;RTC.c: 126:     I2C_Master_Write(0xD0);
  1560  0754  30D0               	movlw	208
  1561  0755  00F0               	movwf	I2C_Master_Write@d
  1562  0756  3000               	movlw	0
  1563  0757  00F1               	movwf	I2C_Master_Write@d+1
  1564  0758  120A  118A  207C  120A  118A  	fcall	_I2C_Master_Write
  1565                           
  1566                           ;RTC.c: 127:     I2C_Master_Write(5);
  1567  075D  3005               	movlw	5
  1568  075E  00F0               	movwf	I2C_Master_Write@d
  1569  075F  3000               	movlw	0
  1570  0760  00F1               	movwf	I2C_Master_Write@d+1
  1571  0761  120A  118A  207C  120A  118A  	fcall	_I2C_Master_Write
  1572                           
  1573                           ;RTC.c: 128:     I2C_Master_Stop();
  1574  0766  120A  118A  2075  120A  118A  	fcall	_I2C_Master_Stop
  1575                           
  1576                           ;RTC.c: 129:     I2C_Master_Start();
  1577  076B  120A  118A  206E  120A  118A  	fcall	_I2C_Master_Start
  1578                           
  1579                           ;RTC.c: 130:     I2C_Master_Write(0xD1);
  1580  0770  30D1               	movlw	209
  1581  0771  00F0               	movwf	I2C_Master_Write@d
  1582  0772  3000               	movlw	0
  1583  0773  00F1               	movwf	I2C_Master_Write@d+1
  1584  0774  120A  118A  207C  120A  118A  	fcall	_I2C_Master_Write
  1585                           
  1586                           ;RTC.c: 131:     mes = BCD_a_DEC(I2C_Master_Read(0));
  1587  0779  3000               	movlw	0
  1588  077A  00F0               	movwf	I2C_Master_Read@a
  1589  077B  00F1               	movwf	I2C_Master_Read@a+1
  1590  077C  120A  118A  2127  120A  118A  	fcall	_I2C_Master_Read
  1591  0781  0870               	movf	?_I2C_Master_Read,w
  1592  0782  120A  118A  20C3  120A  118A  	fcall	_BCD_a_DEC
  1593  0787  00F8               	movwf	??_get_Time
  1594  0788  0878               	movf	??_get_Time,w
  1595  0789  1283               	bcf	3,5	;RP0=0, select bank0
  1596  078A  1303               	bcf	3,6	;RP1=0, select bank0
  1597  078B  00B2               	movwf	_mes
  1598                           
  1599                           ;RTC.c: 132:     I2C_Master_Stop();
  1600  078C  120A  118A  2075  120A  118A  	fcall	_I2C_Master_Stop
  1601                           
  1602                           ;RTC.c: 134:     I2C_Master_Start();
  1603  0791  120A  118A  206E  120A  118A  	fcall	_I2C_Master_Start
  1604                           
  1605                           ;RTC.c: 135:     I2C_Master_Write(0xD0);
  1606  0796  30D0               	movlw	208
  1607  0797  00F0               	movwf	I2C_Master_Write@d
  1608  0798  3000               	movlw	0
  1609  0799  00F1               	movwf	I2C_Master_Write@d+1
  1610  079A  120A  118A  207C  120A  118A  	fcall	_I2C_Master_Write
  1611                           
  1612                           ;RTC.c: 136:     I2C_Master_Write(6);
  1613  079F  3006               	movlw	6
  1614  07A0  00F0               	movwf	I2C_Master_Write@d
  1615  07A1  3000               	movlw	0
  1616  07A2  00F1               	movwf	I2C_Master_Write@d+1
  1617  07A3  120A  118A  207C  120A  118A  	fcall	_I2C_Master_Write
  1618                           
  1619                           ;RTC.c: 137:     I2C_Master_Stop();
  1620  07A8  120A  118A  2075  120A  118A  	fcall	_I2C_Master_Stop
  1621                           
  1622                           ;RTC.c: 138:     I2C_Master_Start();
  1623  07AD  120A  118A  206E  120A  118A  	fcall	_I2C_Master_Start
  1624                           
  1625                           ;RTC.c: 139:     I2C_Master_Write(0xD1);
  1626  07B2  30D1               	movlw	209
  1627  07B3  00F0               	movwf	I2C_Master_Write@d
  1628  07B4  3000               	movlw	0
  1629  07B5  00F1               	movwf	I2C_Master_Write@d+1
  1630  07B6  120A  118A  207C  120A  118A  	fcall	_I2C_Master_Write
  1631                           
  1632                           ;RTC.c: 140:     jahr = BCD_a_DEC(I2C_Master_Read(0));
  1633  07BB  3000               	movlw	0
  1634  07BC  00F0               	movwf	I2C_Master_Read@a
  1635  07BD  00F1               	movwf	I2C_Master_Read@a+1
  1636  07BE  120A  118A  2127  120A  118A  	fcall	_I2C_Master_Read
  1637  07C3  0870               	movf	?_I2C_Master_Read,w
  1638  07C4  120A  118A  20C3  120A  118A  	fcall	_BCD_a_DEC
  1639  07C9  00F8               	movwf	??_get_Time
  1640  07CA  0878               	movf	??_get_Time,w
  1641  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  1642  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  1643  07CD  00B1               	movwf	_jahr
  1644                           
  1645                           ;RTC.c: 141:     I2C_Master_Stop();
  1646  07CE  120A  118A  2075   	fcall	_I2C_Master_Stop
  1647  07D1  0008               	return
  1648  07D2                     __end_of_get_Time:	
  1649                           
  1650                           	psect	text2
  1651  007C                     __ptext2:	
  1652 ;; *************** function _I2C_Master_Write *****************
  1653 ;; Defined at:
  1654 ;;		line 65 in file "I2C.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  d               2    0[COMMON] unsigned int 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0, pclath, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1668 ;;      Params:         2       0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0
  1671 ;;      Totals:         2       0       0       0       0
  1672 ;;Total ram usage:        2 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    1
  1675 ;; This function calls:
  1676 ;;		_I2C_Master_Wait
  1677 ;; This function is called by:
  1678 ;;		_get_Time
  1679 ;;		_get_hora
  1680 ;;		_Zeit_Datum_Set
  1681 ;;		_get_Temp
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           
  1686                           ;psect for function _I2C_Master_Write
  1687  007C                     _I2C_Master_Write:	
  1688                           
  1689                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  1690                           
  1691                           ;incstack = 0
  1692                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1693  007C  120A  118A  2084   	fcall	_I2C_Master_Wait
  1694                           
  1695                           ;I2C.c: 68:     SSPBUF = d;
  1696  007F  0870               	movf	I2C_Master_Write@d,w
  1697  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1698  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1699  0082  0093               	movwf	19	;volatile
  1700  0083  0008               	return
  1701  0084                     __end_of_I2C_Master_Write:	
  1702                           
  1703                           	psect	text3
  1704  0075                     __ptext3:	
  1705 ;; *************** function _I2C_Master_Stop *****************
  1706 ;; Defined at:
  1707 ;;		line 55 in file "I2C.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;		None
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;		None
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      void 
  1714 ;; Registers used:
  1715 ;;		wreg, status,2, status,0, pclath, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1721 ;;      Params:         0       0       0       0       0
  1722 ;;      Locals:         0       0       0       0       0
  1723 ;;      Temps:          0       0       0       0       0
  1724 ;;      Totals:         0       0       0       0       0
  1725 ;;Total ram usage:        0 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    1
  1728 ;; This function calls:
  1729 ;;		_I2C_Master_Wait
  1730 ;; This function is called by:
  1731 ;;		_get_Time
  1732 ;;		_get_hora
  1733 ;;		_Zeit_Datum_Set
  1734 ;;		_get_Temp
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           
  1739                           ;psect for function _I2C_Master_Stop
  1740  0075                     _I2C_Master_Stop:	
  1741                           
  1742                           ;I2C.c: 57:     I2C_Master_Wait();
  1743                           
  1744                           ;incstack = 0
  1745                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1746  0075  120A  118A  2084   	fcall	_I2C_Master_Wait
  1747                           
  1748                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  1749  0078  1683               	bsf	3,5	;RP0=1, select bank1
  1750  0079  1303               	bcf	3,6	;RP1=0, select bank1
  1751  007A  1511               	bsf	17,2	;volatile
  1752  007B  0008               	return
  1753  007C                     __end_of_I2C_Master_Stop:	
  1754                           
  1755                           	psect	text4
  1756  006E                     __ptext4:	
  1757 ;; *************** function _I2C_Master_Start *****************
  1758 ;; Defined at:
  1759 ;;		line 39 in file "I2C.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;		None
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;		None
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  1    wreg      void 
  1766 ;; Registers used:
  1767 ;;		wreg, status,2, status,0, pclath, cstack
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1773 ;;      Params:         0       0       0       0       0
  1774 ;;      Locals:         0       0       0       0       0
  1775 ;;      Temps:          0       0       0       0       0
  1776 ;;      Totals:         0       0       0       0       0
  1777 ;;Total ram usage:        0 bytes
  1778 ;; Hardware stack levels used:    1
  1779 ;; Hardware stack levels required when called:    1
  1780 ;; This function calls:
  1781 ;;		_I2C_Master_Wait
  1782 ;; This function is called by:
  1783 ;;		_get_Time
  1784 ;;		_get_hora
  1785 ;;		_Zeit_Datum_Set
  1786 ;;		_get_Temp
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           
  1791                           ;psect for function _I2C_Master_Start
  1792  006E                     _I2C_Master_Start:	
  1793                           
  1794                           ;I2C.c: 41:     I2C_Master_Wait();
  1795                           
  1796                           ;incstack = 0
  1797                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1798  006E  120A  118A  2084   	fcall	_I2C_Master_Wait
  1799                           
  1800                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  1801  0071  1683               	bsf	3,5	;RP0=1, select bank1
  1802  0072  1303               	bcf	3,6	;RP1=0, select bank1
  1803  0073  1411               	bsf	17,0	;volatile
  1804  0074  0008               	return
  1805  0075                     __end_of_I2C_Master_Start:	
  1806                           
  1807                           	psect	text5
  1808  0127                     __ptext5:	
  1809 ;; *************** function _I2C_Master_Read *****************
  1810 ;; Defined at:
  1811 ;;		line 74 in file "I2C.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;  a               2    0[COMMON] unsigned short 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  temp            2    4[COMMON] unsigned short 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  2    0[COMMON] unsigned short 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0, pclath, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1825 ;;      Params:         2       0       0       0       0
  1826 ;;      Locals:         2       0       0       0       0
  1827 ;;      Temps:          2       0       0       0       0
  1828 ;;      Totals:         6       0       0       0       0
  1829 ;;Total ram usage:        6 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    1
  1832 ;; This function calls:
  1833 ;;		_I2C_Master_Wait
  1834 ;; This function is called by:
  1835 ;;		_get_Time
  1836 ;;		_get_hora
  1837 ;;		_get_Temp
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           
  1842                           ;psect for function _I2C_Master_Read
  1843  0127                     _I2C_Master_Read:	
  1844                           
  1845                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  1846                           
  1847                           ;incstack = 0
  1848                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  1849  0127  120A  118A  2084  120A  118A  	fcall	_I2C_Master_Wait
  1850                           
  1851                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  1852  012C  1683               	bsf	3,5	;RP0=1, select bank1
  1853  012D  1303               	bcf	3,6	;RP1=0, select bank1
  1854  012E  1591               	bsf	17,3	;volatile
  1855                           
  1856                           ;I2C.c: 79:     I2C_Master_Wait();
  1857  012F  120A  118A  2084  120A  118A  	fcall	_I2C_Master_Wait
  1858                           
  1859                           ;I2C.c: 80:     temp = SSPBUF;
  1860  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1861  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1862  0136  0813               	movf	19,w	;volatile
  1863  0137  00F2               	movwf	??_I2C_Master_Read
  1864  0138  01F3               	clrf	??_I2C_Master_Read+1
  1865  0139  0872               	movf	??_I2C_Master_Read,w
  1866  013A  00F4               	movwf	I2C_Master_Read@temp
  1867  013B  0873               	movf	??_I2C_Master_Read+1,w
  1868  013C  00F5               	movwf	I2C_Master_Read@temp+1
  1869                           
  1870                           ;I2C.c: 81:     I2C_Master_Wait();
  1871  013D  120A  118A  2084  120A  118A  	fcall	_I2C_Master_Wait
  1872                           
  1873                           ;I2C.c: 82:     if(a == 1){
  1874  0142  0370               	decf	I2C_Master_Read@a,w
  1875  0143  0471               	iorwf	I2C_Master_Read@a+1,w
  1876  0144  1D03               	btfss	3,2
  1877  0145  294A               	goto	l152
  1878                           
  1879                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  1880  0146  1683               	bsf	3,5	;RP0=1, select bank1
  1881  0147  1303               	bcf	3,6	;RP1=0, select bank1
  1882  0148  1291               	bcf	17,5	;volatile
  1883                           
  1884                           ;I2C.c: 84:     }else{
  1885  0149  294D               	goto	l153
  1886  014A                     l152:	
  1887                           
  1888                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  1889  014A  1683               	bsf	3,5	;RP0=1, select bank1
  1890  014B  1303               	bcf	3,6	;RP1=0, select bank1
  1891  014C  1691               	bsf	17,5	;volatile
  1892  014D                     l153:	
  1893                           ;I2C.c: 86:     }
  1894                           
  1895                           
  1896                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  1897  014D  1611               	bsf	17,4	;volatile
  1898                           
  1899                           ;I2C.c: 88:     return temp;
  1900  014E  0875               	movf	I2C_Master_Read@temp+1,w
  1901  014F  00F1               	movwf	?_I2C_Master_Read+1
  1902  0150  0874               	movf	I2C_Master_Read@temp,w
  1903  0151  00F0               	movwf	?_I2C_Master_Read
  1904  0152  0008               	return
  1905  0153                     __end_of_I2C_Master_Read:	
  1906                           
  1907                           	psect	text6
  1908  0084                     __ptext6:	
  1909 ;; *************** function _I2C_Master_Wait *****************
  1910 ;; Defined at:
  1911 ;;		line 32 in file "I2C.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;		None
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;		None
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, status,2
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1925 ;;      Params:         0       0       0       0       0
  1926 ;;      Locals:         0       0       0       0       0
  1927 ;;      Temps:          0       0       0       0       0
  1928 ;;      Totals:         0       0       0       0       0
  1929 ;;Total ram usage:        0 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; This function calls:
  1932 ;;		Nothing
  1933 ;; This function is called by:
  1934 ;;		_I2C_Master_Start
  1935 ;;		_I2C_Master_Stop
  1936 ;;		_I2C_Master_Write
  1937 ;;		_I2C_Master_Read
  1938 ;;		_I2C_Master_RepeatedStart
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           
  1943                           ;psect for function _I2C_Master_Wait
  1944  0084                     _I2C_Master_Wait:	
  1945  0084                     l134:	
  1946                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1947                           
  1948                           ;incstack = 0
  1949                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1950                           
  1951  0084  1683               	bsf	3,5	;RP0=1, select bank1
  1952  0085  1303               	bcf	3,6	;RP1=0, select bank1
  1953  0086  1914               	btfsc	20,2	;volatile
  1954  0087  2884               	goto	l134
  1955  0088  0811               	movf	17,w	;volatile
  1956  0089  391F               	andlw	31
  1957  008A  1903               	btfsc	3,2
  1958  008B  0008               	return
  1959  008C  2884               	goto	l134
  1960  008D                     __end_of_I2C_Master_Wait:	
  1961                           
  1962                           	psect	text7
  1963  00C3                     __ptext7:	
  1964 ;; *************** function _BCD_a_DEC *****************
  1965 ;; Defined at:
  1966 ;;		line 27 in file "RTC.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  numBCD          1    wreg     unsigned char 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  numBCD          1    7[COMMON] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      unsigned char 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0, pclath, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1980 ;;      Params:         0       0       0       0       0
  1981 ;;      Locals:         1       0       0       0       0
  1982 ;;      Temps:          3       0       0       0       0
  1983 ;;      Totals:         4       0       0       0       0
  1984 ;;Total ram usage:        4 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    1
  1987 ;; This function calls:
  1988 ;;		___bmul
  1989 ;; This function is called by:
  1990 ;;		_get_Time
  1991 ;;		_get_hora
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           
  1996                           ;psect for function _BCD_a_DEC
  1997  00C3                     _BCD_a_DEC:	
  1998                           
  1999                           ;incstack = 0
  2000                           ; Regs used in _BCD_a_DEC: [wreg+status,2+status,0+pclath+cstack]
  2001                           ;BCD_a_DEC@numBCD stored from wreg
  2002  00C3  00F7               	movwf	BCD_a_DEC@numBCD
  2003                           
  2004                           ;RTC.c: 28:     return (numBCD >> 4) * 10 + (numBCD & 0x0F);
  2005  00C4  300F               	movlw	15
  2006  00C5  0577               	andwf	BCD_a_DEC@numBCD,w
  2007  00C6  00F4               	movwf	??_BCD_a_DEC
  2008  00C7  300A               	movlw	10
  2009  00C8  00F5               	movwf	??_BCD_a_DEC+1
  2010  00C9  0875               	movf	??_BCD_a_DEC+1,w
  2011  00CA  00F0               	movwf	___bmul@multiplicand
  2012  00CB  0877               	movf	BCD_a_DEC@numBCD,w
  2013  00CC  00F6               	movwf	??_BCD_a_DEC+2
  2014  00CD  3004               	movlw	4
  2015  00CE                     u445:	
  2016  00CE  1003               	clrc
  2017  00CF  0CF6               	rrf	??_BCD_a_DEC+2,f
  2018  00D0  3EFF               	addlw	-1
  2019  00D1  1D03               	skipz
  2020  00D2  28CE               	goto	u445
  2021  00D3  0876               	movf	??_BCD_a_DEC+2,w
  2022  00D4  120A  118A  209C   	fcall	___bmul
  2023  00D7  0774               	addwf	??_BCD_a_DEC,w
  2024  00D8  0008               	return
  2025  00D9                     __end_of_BCD_a_DEC:	
  2026                           
  2027                           	psect	text8
  2028  009C                     __ptext8:	
  2029 ;; *************** function ___bmul *****************
  2030 ;; Defined at:
  2031 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  multiplier      1    wreg     unsigned char 
  2034 ;;  multiplicand    1    0[COMMON] unsigned char 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  multiplier      1    3[COMMON] unsigned char 
  2037 ;;  product         1    2[COMMON] unsigned char 
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      unsigned char 
  2040 ;; Registers used:
  2041 ;;		wreg, status,2, status,0
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2047 ;;      Params:         1       0       0       0       0
  2048 ;;      Locals:         2       0       0       0       0
  2049 ;;      Temps:          1       0       0       0       0
  2050 ;;      Totals:         4       0       0       0       0
  2051 ;;Total ram usage:        4 bytes
  2052 ;; Hardware stack levels used:    1
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_BCD_a_DEC
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           
  2061                           ;psect for function ___bmul
  2062  009C                     ___bmul:	
  2063                           
  2064                           ;incstack = 0
  2065                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2066                           ;___bmul@multiplier stored from wreg
  2067  009C  00F3               	movwf	___bmul@multiplier
  2068  009D  01F2               	clrf	___bmul@product
  2069  009E                     l1345:	
  2070  009E  1C73               	btfss	___bmul@multiplier,0
  2071  009F  28A4               	goto	l1349
  2072  00A0  0870               	movf	___bmul@multiplicand,w
  2073  00A1  00F1               	movwf	??___bmul
  2074  00A2  0871               	movf	??___bmul,w
  2075  00A3  07F2               	addwf	___bmul@product,f
  2076  00A4                     l1349:	
  2077  00A4  1003               	clrc
  2078  00A5  0DF0               	rlf	___bmul@multiplicand,f
  2079  00A6  1003               	clrc
  2080  00A7  0CF3               	rrf	___bmul@multiplier,f
  2081  00A8  0873               	movf	___bmul@multiplier,w
  2082  00A9  1D03               	btfss	3,2
  2083  00AA  289E               	goto	l1345
  2084  00AB  0872               	movf	___bmul@product,w
  2085  00AC  0008               	return
  2086  00AD                     __end_of___bmul:	
  2087                           
  2088                           	psect	text9
  2089  0321                     __ptext9:	
  2090 ;; *************** function _display_Uhrzeit *****************
  2091 ;; Defined at:
  2092 ;;		line 103 in file "main_Master.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  fila            1    wreg     unsigned char 
  2095 ;;  columna         1    9[COMMON] unsigned char 
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;  fila            1    0[BANK0 ] unsigned char 
  2098 ;;  Uhr_d           1    6[BANK0 ] unsigned char 
  2099 ;;  Uhr_u           1    5[BANK0 ] unsigned char 
  2100 ;;  min_d           1    4[BANK0 ] unsigned char 
  2101 ;;  min_u           1    3[BANK0 ] unsigned char 
  2102 ;;  seg_d           1    2[BANK0 ] unsigned char 
  2103 ;;  seg_u           1    1[BANK0 ] unsigned char 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2113 ;;      Params:         1       0       0       0       0
  2114 ;;      Locals:         0       7       0       0       0
  2115 ;;      Temps:          3       0       0       0       0
  2116 ;;      Totals:         4       7       0       0       0
  2117 ;;Total ram usage:       11 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    2
  2120 ;; This function calls:
  2121 ;;		_LCD_Set_Cursor
  2122 ;;		_LCD_Write_Character
  2123 ;;		___awdiv
  2124 ;;		___awmod
  2125 ;; This function is called by:
  2126 ;;		_main
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           
  2131                           ;psect for function _display_Uhrzeit
  2132  0321                     _display_Uhrzeit:	
  2133                           
  2134                           ;incstack = 0
  2135                           ; Regs used in _display_Uhrzeit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2136                           ;display_Uhrzeit@fila stored from wreg
  2137  0321  1283               	bcf	3,5	;RP0=0, select bank0
  2138  0322  1303               	bcf	3,6	;RP1=0, select bank0
  2139  0323  00A0               	movwf	display_Uhrzeit@fila
  2140                           
  2141                           ;main_Master.c: 104:     char seg_u = seg%10;
  2142  0324  300A               	movlw	10
  2143  0325  00F0               	movwf	___awmod@divisor
  2144  0326  3000               	movlw	0
  2145  0327  00F1               	movwf	___awmod@divisor+1
  2146  0328  082F               	movf	_seg,w
  2147  0329  00FA               	movwf	??_display_Uhrzeit
  2148  032A  01FB               	clrf	??_display_Uhrzeit+1
  2149  032B  087A               	movf	??_display_Uhrzeit,w
  2150  032C  00F2               	movwf	___awmod@dividend
  2151  032D  087B               	movf	??_display_Uhrzeit+1,w
  2152  032E  00F3               	movwf	___awmod@dividend+1
  2153  032F  120A  118A  21B8  120A  118A  	fcall	___awmod
  2154  0334  0870               	movf	?___awmod,w
  2155  0335  00FC               	movwf	??_display_Uhrzeit+2
  2156  0336  087C               	movf	??_display_Uhrzeit+2,w
  2157  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2158  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2159  0339  00A1               	movwf	display_Uhrzeit@seg_u
  2160                           
  2161                           ;main_Master.c: 105:     char seg_d = seg/10;
  2162  033A  300A               	movlw	10
  2163  033B  00F0               	movwf	___awdiv@divisor
  2164  033C  3000               	movlw	0
  2165  033D  00F1               	movwf	___awdiv@divisor+1
  2166  033E  082F               	movf	_seg,w
  2167  033F  00FA               	movwf	??_display_Uhrzeit
  2168  0340  01FB               	clrf	??_display_Uhrzeit+1
  2169  0341  087A               	movf	??_display_Uhrzeit,w
  2170  0342  00F2               	movwf	___awdiv@dividend
  2171  0343  087B               	movf	??_display_Uhrzeit+1,w
  2172  0344  00F3               	movwf	___awdiv@dividend+1
  2173  0345  120A  118A  2203  120A  118A  	fcall	___awdiv
  2174  034A  0870               	movf	?___awdiv,w
  2175  034B  00FC               	movwf	??_display_Uhrzeit+2
  2176  034C  087C               	movf	??_display_Uhrzeit+2,w
  2177  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2178  034E  1303               	bcf	3,6	;RP1=0, select bank0
  2179  034F  00A2               	movwf	display_Uhrzeit@seg_d
  2180                           
  2181                           ;main_Master.c: 106:     char min_u = min%10;
  2182  0350  300A               	movlw	10
  2183  0351  00F0               	movwf	___awmod@divisor
  2184  0352  3000               	movlw	0
  2185  0353  00F1               	movwf	___awmod@divisor+1
  2186  0354  0836               	movf	_min,w
  2187  0355  00FA               	movwf	??_display_Uhrzeit
  2188  0356  01FB               	clrf	??_display_Uhrzeit+1
  2189  0357  087A               	movf	??_display_Uhrzeit,w
  2190  0358  00F2               	movwf	___awmod@dividend
  2191  0359  087B               	movf	??_display_Uhrzeit+1,w
  2192  035A  00F3               	movwf	___awmod@dividend+1
  2193  035B  120A  118A  21B8  120A  118A  	fcall	___awmod
  2194  0360  0870               	movf	?___awmod,w
  2195  0361  00FC               	movwf	??_display_Uhrzeit+2
  2196  0362  087C               	movf	??_display_Uhrzeit+2,w
  2197  0363  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0364  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0365  00A3               	movwf	display_Uhrzeit@min_u
  2200                           
  2201                           ;main_Master.c: 107:     char min_d = min/10;
  2202  0366  300A               	movlw	10
  2203  0367  00F0               	movwf	___awdiv@divisor
  2204  0368  3000               	movlw	0
  2205  0369  00F1               	movwf	___awdiv@divisor+1
  2206  036A  0836               	movf	_min,w
  2207  036B  00FA               	movwf	??_display_Uhrzeit
  2208  036C  01FB               	clrf	??_display_Uhrzeit+1
  2209  036D  087A               	movf	??_display_Uhrzeit,w
  2210  036E  00F2               	movwf	___awdiv@dividend
  2211  036F  087B               	movf	??_display_Uhrzeit+1,w
  2212  0370  00F3               	movwf	___awdiv@dividend+1
  2213  0371  120A  118A  2203  120A  118A  	fcall	___awdiv
  2214  0376  0870               	movf	?___awdiv,w
  2215  0377  00FC               	movwf	??_display_Uhrzeit+2
  2216  0378  087C               	movf	??_display_Uhrzeit+2,w
  2217  0379  1283               	bcf	3,5	;RP0=0, select bank0
  2218  037A  1303               	bcf	3,6	;RP1=0, select bank0
  2219  037B  00A4               	movwf	display_Uhrzeit@min_d
  2220                           
  2221                           ;main_Master.c: 108:     char Uhr_u = hora%10;
  2222  037C  300A               	movlw	10
  2223  037D  00F0               	movwf	___awmod@divisor
  2224  037E  3000               	movlw	0
  2225  037F  00F1               	movwf	___awmod@divisor+1
  2226  0380  0835               	movf	_hora,w
  2227  0381  00FA               	movwf	??_display_Uhrzeit
  2228  0382  01FB               	clrf	??_display_Uhrzeit+1
  2229  0383  087A               	movf	??_display_Uhrzeit,w
  2230  0384  00F2               	movwf	___awmod@dividend
  2231  0385  087B               	movf	??_display_Uhrzeit+1,w
  2232  0386  00F3               	movwf	___awmod@dividend+1
  2233  0387  120A  118A  21B8  120A  118A  	fcall	___awmod
  2234  038C  0870               	movf	?___awmod,w
  2235  038D  00FC               	movwf	??_display_Uhrzeit+2
  2236  038E  087C               	movf	??_display_Uhrzeit+2,w
  2237  038F  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0390  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0391  00A5               	movwf	display_Uhrzeit@Uhr_u
  2240                           
  2241                           ;main_Master.c: 109:     char Uhr_d = hora/10;
  2242  0392  300A               	movlw	10
  2243  0393  00F0               	movwf	___awdiv@divisor
  2244  0394  3000               	movlw	0
  2245  0395  00F1               	movwf	___awdiv@divisor+1
  2246  0396  0835               	movf	_hora,w
  2247  0397  00FA               	movwf	??_display_Uhrzeit
  2248  0398  01FB               	clrf	??_display_Uhrzeit+1
  2249  0399  087A               	movf	??_display_Uhrzeit,w
  2250  039A  00F2               	movwf	___awdiv@dividend
  2251  039B  087B               	movf	??_display_Uhrzeit+1,w
  2252  039C  00F3               	movwf	___awdiv@dividend+1
  2253  039D  120A  118A  2203  120A  118A  	fcall	___awdiv
  2254  03A2  0870               	movf	?___awdiv,w
  2255  03A3  00FC               	movwf	??_display_Uhrzeit+2
  2256  03A4  087C               	movf	??_display_Uhrzeit+2,w
  2257  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2258  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2259  03A7  00A6               	movwf	display_Uhrzeit@Uhr_d
  2260                           
  2261                           ;main_Master.c: 111:     LCD_Set_Cursor(fila, columna);
  2262  03A8  0879               	movf	display_Uhrzeit@columna,w
  2263  03A9  00FA               	movwf	??_display_Uhrzeit
  2264  03AA  087A               	movf	??_display_Uhrzeit,w
  2265  03AB  00F3               	movwf	LCD_Set_Cursor@columna
  2266  03AC  0820               	movf	display_Uhrzeit@fila,w
  2267  03AD  120A  118A  20FB  120A  118A  	fcall	_LCD_Set_Cursor
  2268                           
  2269                           ;main_Master.c: 112:     LCD_Write_Character(Uhr_d + '0');
  2270  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2271  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2272  03B4  0826               	movf	display_Uhrzeit@Uhr_d,w
  2273  03B5  3E30               	addlw	48
  2274  03B6  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  2275                           
  2276                           ;main_Master.c: 113:     LCD_Write_Character(Uhr_u + '0');
  2277  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2278  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  2279  03BD  0825               	movf	display_Uhrzeit@Uhr_u,w
  2280  03BE  3E30               	addlw	48
  2281  03BF  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  2282                           
  2283                           ;main_Master.c: 114:     LCD_Write_Character(':');
  2284  03C4  303A               	movlw	58
  2285  03C5  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  2286                           
  2287                           ;main_Master.c: 115:     LCD_Write_Character(min_d + '0');
  2288  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2289  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2290  03CC  0824               	movf	display_Uhrzeit@min_d,w
  2291  03CD  3E30               	addlw	48
  2292  03CE  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  2293                           
  2294                           ;main_Master.c: 116:     LCD_Write_Character(min_u + '0');
  2295  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2296  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2297  03D5  0823               	movf	display_Uhrzeit@min_u,w
  2298  03D6  3E30               	addlw	48
  2299  03D7  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  2300                           
  2301                           ;main_Master.c: 117:     LCD_Write_Character(':');
  2302  03DC  303A               	movlw	58
  2303  03DD  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  2304                           
  2305                           ;main_Master.c: 118:     LCD_Write_Character(seg_d + '0');
  2306  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2307  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  2308  03E4  0822               	movf	display_Uhrzeit@seg_d,w
  2309  03E5  3E30               	addlw	48
  2310  03E6  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  2311                           
  2312                           ;main_Master.c: 119:     LCD_Write_Character(seg_u + '0');
  2313  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2314  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2315  03ED  0821               	movf	display_Uhrzeit@seg_u,w
  2316  03EE  3E30               	addlw	48
  2317  03EF  120A  118A  208D   	fcall	_LCD_Write_Character
  2318  03F2  0008               	return
  2319  03F3                     __end_of_display_Uhrzeit:	
  2320                           
  2321                           	psect	text10
  2322  03F3                     __ptext10:	
  2323 ;; *************** function _display_Datum *****************
  2324 ;; Defined at:
  2325 ;;		line 123 in file "main_Master.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  fila            1    wreg     unsigned char 
  2328 ;;  columna         1    9[COMMON] unsigned char 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  fila            1    0[BANK0 ] unsigned char 
  2331 ;;  jahr_d          1    6[BANK0 ] unsigned char 
  2332 ;;  jahr_u          1    5[BANK0 ] unsigned char 
  2333 ;;  mes_d           1    4[BANK0 ] unsigned char 
  2334 ;;  mes_u           1    3[BANK0 ] unsigned char 
  2335 ;;  dia_d           1    2[BANK0 ] unsigned char 
  2336 ;;  dia_u           1    1[BANK0 ] unsigned char 
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  1    wreg      void 
  2339 ;; Registers used:
  2340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2346 ;;      Params:         1       0       0       0       0
  2347 ;;      Locals:         0       7       0       0       0
  2348 ;;      Temps:          3       0       0       0       0
  2349 ;;      Totals:         4       7       0       0       0
  2350 ;;Total ram usage:       11 bytes
  2351 ;; Hardware stack levels used:    1
  2352 ;; Hardware stack levels required when called:    2
  2353 ;; This function calls:
  2354 ;;		_LCD_Set_Cursor
  2355 ;;		_LCD_Write_Character
  2356 ;;		_LCD_Write_String
  2357 ;;		___awdiv
  2358 ;;		___awmod
  2359 ;; This function is called by:
  2360 ;;		_main
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           
  2365                           ;psect for function _display_Datum
  2366  03F3                     _display_Datum:	
  2367                           
  2368                           ;incstack = 0
  2369                           ; Regs used in _display_Datum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2370                           ;display_Datum@fila stored from wreg
  2371  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  2372  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  2373  03F5  00A0               	movwf	display_Datum@fila
  2374                           
  2375                           ;main_Master.c: 124:     char dia_u = datum%10;
  2376  03F6  300A               	movlw	10
  2377  03F7  00F0               	movwf	___awmod@divisor
  2378  03F8  3000               	movlw	0
  2379  03F9  00F1               	movwf	___awmod@divisor+1
  2380  03FA  0833               	movf	_datum,w
  2381  03FB  00FA               	movwf	??_display_Datum
  2382  03FC  01FB               	clrf	??_display_Datum+1
  2383  03FD  087A               	movf	??_display_Datum,w
  2384  03FE  00F2               	movwf	___awmod@dividend
  2385  03FF  087B               	movf	??_display_Datum+1,w
  2386  0400  00F3               	movwf	___awmod@dividend+1
  2387  0401  120A  118A  21B8  120A  118A  	fcall	___awmod
  2388  0406  0870               	movf	?___awmod,w
  2389  0407  00FC               	movwf	??_display_Datum+2
  2390  0408  087C               	movf	??_display_Datum+2,w
  2391  0409  1283               	bcf	3,5	;RP0=0, select bank0
  2392  040A  1303               	bcf	3,6	;RP1=0, select bank0
  2393  040B  00A1               	movwf	display_Datum@dia_u
  2394                           
  2395                           ;main_Master.c: 125:     char dia_d = datum/10;
  2396  040C  300A               	movlw	10
  2397  040D  00F0               	movwf	___awdiv@divisor
  2398  040E  3000               	movlw	0
  2399  040F  00F1               	movwf	___awdiv@divisor+1
  2400  0410  0833               	movf	_datum,w
  2401  0411  00FA               	movwf	??_display_Datum
  2402  0412  01FB               	clrf	??_display_Datum+1
  2403  0413  087A               	movf	??_display_Datum,w
  2404  0414  00F2               	movwf	___awdiv@dividend
  2405  0415  087B               	movf	??_display_Datum+1,w
  2406  0416  00F3               	movwf	___awdiv@dividend+1
  2407  0417  120A  118A  2203  120A  118A  	fcall	___awdiv
  2408  041C  0870               	movf	?___awdiv,w
  2409  041D  00FC               	movwf	??_display_Datum+2
  2410  041E  087C               	movf	??_display_Datum+2,w
  2411  041F  1283               	bcf	3,5	;RP0=0, select bank0
  2412  0420  1303               	bcf	3,6	;RP1=0, select bank0
  2413  0421  00A2               	movwf	display_Datum@dia_d
  2414                           
  2415                           ;main_Master.c: 126:     char mes_u = mes%10;
  2416  0422  300A               	movlw	10
  2417  0423  00F0               	movwf	___awmod@divisor
  2418  0424  3000               	movlw	0
  2419  0425  00F1               	movwf	___awmod@divisor+1
  2420  0426  0832               	movf	_mes,w
  2421  0427  00FA               	movwf	??_display_Datum
  2422  0428  01FB               	clrf	??_display_Datum+1
  2423  0429  087A               	movf	??_display_Datum,w
  2424  042A  00F2               	movwf	___awmod@dividend
  2425  042B  087B               	movf	??_display_Datum+1,w
  2426  042C  00F3               	movwf	___awmod@dividend+1
  2427  042D  120A  118A  21B8  120A  118A  	fcall	___awmod
  2428  0432  0870               	movf	?___awmod,w
  2429  0433  00FC               	movwf	??_display_Datum+2
  2430  0434  087C               	movf	??_display_Datum+2,w
  2431  0435  1283               	bcf	3,5	;RP0=0, select bank0
  2432  0436  1303               	bcf	3,6	;RP1=0, select bank0
  2433  0437  00A3               	movwf	display_Datum@mes_u
  2434                           
  2435                           ;main_Master.c: 127:     char mes_d = mes/10;
  2436  0438  300A               	movlw	10
  2437  0439  00F0               	movwf	___awdiv@divisor
  2438  043A  3000               	movlw	0
  2439  043B  00F1               	movwf	___awdiv@divisor+1
  2440  043C  0832               	movf	_mes,w
  2441  043D  00FA               	movwf	??_display_Datum
  2442  043E  01FB               	clrf	??_display_Datum+1
  2443  043F  087A               	movf	??_display_Datum,w
  2444  0440  00F2               	movwf	___awdiv@dividend
  2445  0441  087B               	movf	??_display_Datum+1,w
  2446  0442  00F3               	movwf	___awdiv@dividend+1
  2447  0443  120A  118A  2203  120A  118A  	fcall	___awdiv
  2448  0448  0870               	movf	?___awdiv,w
  2449  0449  00FC               	movwf	??_display_Datum+2
  2450  044A  087C               	movf	??_display_Datum+2,w
  2451  044B  1283               	bcf	3,5	;RP0=0, select bank0
  2452  044C  1303               	bcf	3,6	;RP1=0, select bank0
  2453  044D  00A4               	movwf	display_Datum@mes_d
  2454                           
  2455                           ;main_Master.c: 128:     char jahr_u = jahr%10;
  2456  044E  300A               	movlw	10
  2457  044F  00F0               	movwf	___awmod@divisor
  2458  0450  3000               	movlw	0
  2459  0451  00F1               	movwf	___awmod@divisor+1
  2460  0452  0831               	movf	_jahr,w
  2461  0453  00FA               	movwf	??_display_Datum
  2462  0454  01FB               	clrf	??_display_Datum+1
  2463  0455  087A               	movf	??_display_Datum,w
  2464  0456  00F2               	movwf	___awmod@dividend
  2465  0457  087B               	movf	??_display_Datum+1,w
  2466  0458  00F3               	movwf	___awmod@dividend+1
  2467  0459  120A  118A  21B8  120A  118A  	fcall	___awmod
  2468  045E  0870               	movf	?___awmod,w
  2469  045F  00FC               	movwf	??_display_Datum+2
  2470  0460  087C               	movf	??_display_Datum+2,w
  2471  0461  1283               	bcf	3,5	;RP0=0, select bank0
  2472  0462  1303               	bcf	3,6	;RP1=0, select bank0
  2473  0463  00A5               	movwf	display_Datum@jahr_u
  2474                           
  2475                           ;main_Master.c: 129:     char jahr_d = jahr/10;
  2476  0464  300A               	movlw	10
  2477  0465  00F0               	movwf	___awdiv@divisor
  2478  0466  3000               	movlw	0
  2479  0467  00F1               	movwf	___awdiv@divisor+1
  2480  0468  0831               	movf	_jahr,w
  2481  0469  00FA               	movwf	??_display_Datum
  2482  046A  01FB               	clrf	??_display_Datum+1
  2483  046B  087A               	movf	??_display_Datum,w
  2484  046C  00F2               	movwf	___awdiv@dividend
  2485  046D  087B               	movf	??_display_Datum+1,w
  2486  046E  00F3               	movwf	___awdiv@dividend+1
  2487  046F  120A  118A  2203  120A  118A  	fcall	___awdiv
  2488  0474  0870               	movf	?___awdiv,w
  2489  0475  00FC               	movwf	??_display_Datum+2
  2490  0476  087C               	movf	??_display_Datum+2,w
  2491  0477  1283               	bcf	3,5	;RP0=0, select bank0
  2492  0478  1303               	bcf	3,6	;RP1=0, select bank0
  2493  0479  00A6               	movwf	display_Datum@jahr_d
  2494                           
  2495                           ;main_Master.c: 131:     LCD_Set_Cursor(fila, columna);
  2496  047A  0879               	movf	display_Datum@columna,w
  2497  047B  00FA               	movwf	??_display_Datum
  2498  047C  087A               	movf	??_display_Datum,w
  2499  047D  00F3               	movwf	LCD_Set_Cursor@columna
  2500  047E  0820               	movf	display_Datum@fila,w
  2501  047F  120A  118A  20FB  120A  118A  	fcall	_LCD_Set_Cursor
  2502                           
  2503                           ;main_Master.c: 132:     LCD_Write_Character(dia_d + '0');
  2504  0484  1283               	bcf	3,5	;RP0=0, select bank0
  2505  0485  1303               	bcf	3,6	;RP1=0, select bank0
  2506  0486  0822               	movf	display_Datum@dia_d,w
  2507  0487  3E30               	addlw	48
  2508  0488  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  2509                           
  2510                           ;main_Master.c: 133:     LCD_Write_Character(dia_u + '0');
  2511  048D  1283               	bcf	3,5	;RP0=0, select bank0
  2512  048E  1303               	bcf	3,6	;RP1=0, select bank0
  2513  048F  0821               	movf	display_Datum@dia_u,w
  2514  0490  3E30               	addlw	48
  2515  0491  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  2516                           
  2517                           ;main_Master.c: 134:     LCD_Write_Character('/');
  2518  0496  302F               	movlw	47
  2519  0497  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  2520                           
  2521                           ;main_Master.c: 135:     LCD_Write_Character(mes_d + '0');
  2522  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2523  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2524  049E  0824               	movf	display_Datum@mes_d,w
  2525  049F  3E30               	addlw	48
  2526  04A0  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  2527                           
  2528                           ;main_Master.c: 136:     LCD_Write_Character(mes_u + '0');
  2529  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2530  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  2531  04A7  0823               	movf	display_Datum@mes_u,w
  2532  04A8  3E30               	addlw	48
  2533  04A9  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  2534                           
  2535                           ;main_Master.c: 137:     LCD_Write_Character('/');
  2536  04AE  302F               	movlw	47
  2537  04AF  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  2538                           
  2539                           ;main_Master.c: 138:     LCD_Write_String("20");
  2540  04B4  3043               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2541  04B5  120A  118A  20D9  120A  118A  	fcall	_LCD_Write_String
  2542                           
  2543                           ;main_Master.c: 139:     LCD_Write_Character(jahr_d + '0');
  2544  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2545  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2546  04BC  0826               	movf	display_Datum@jahr_d,w
  2547  04BD  3E30               	addlw	48
  2548  04BE  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  2549                           
  2550                           ;main_Master.c: 140:     LCD_Write_Character(jahr_u + '0');
  2551  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2552  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  2553  04C5  0825               	movf	display_Datum@jahr_u,w
  2554  04C6  3E30               	addlw	48
  2555  04C7  120A  118A  208D   	fcall	_LCD_Write_Character
  2556  04CA  0008               	return
  2557  04CB                     __end_of_display_Datum:	
  2558                           
  2559                           	psect	text11
  2560  01B8                     __ptext11:	
  2561 ;; *************** function ___awmod *****************
  2562 ;; Defined at:
  2563 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  divisor         2    0[COMMON] int 
  2566 ;;  dividend        2    2[COMMON] int 
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;  sign            1    6[COMMON] unsigned char 
  2569 ;;  counter         1    5[COMMON] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  2    0[COMMON] int 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2, status,0
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2579 ;;      Params:         4       0       0       0       0
  2580 ;;      Locals:         2       0       0       0       0
  2581 ;;      Temps:          1       0       0       0       0
  2582 ;;      Totals:         7       0       0       0       0
  2583 ;;Total ram usage:        7 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; This function calls:
  2586 ;;		Nothing
  2587 ;; This function is called by:
  2588 ;;		_display_Uhrzeit
  2589 ;;		_display_Datum
  2590 ;;		_DEC_a_BCD
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           
  2595                           ;psect for function ___awmod
  2596  01B8                     ___awmod:	
  2597                           
  2598                           ;incstack = 0
  2599                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2600  01B8  01F6               	clrf	___awmod@sign
  2601  01B9  1FF3               	btfss	___awmod@dividend+1,7
  2602  01BA  29C2               	goto	l1491
  2603  01BB  09F2               	comf	___awmod@dividend,f
  2604  01BC  09F3               	comf	___awmod@dividend+1,f
  2605  01BD  0AF2               	incf	___awmod@dividend,f
  2606  01BE  1903               	skipnz
  2607  01BF  0AF3               	incf	___awmod@dividend+1,f
  2608  01C0  01F6               	clrf	___awmod@sign
  2609  01C1  0AF6               	incf	___awmod@sign,f
  2610  01C2                     l1491:	
  2611  01C2  1FF1               	btfss	___awmod@divisor+1,7
  2612  01C3  29C9               	goto	l1495
  2613  01C4  09F0               	comf	___awmod@divisor,f
  2614  01C5  09F1               	comf	___awmod@divisor+1,f
  2615  01C6  0AF0               	incf	___awmod@divisor,f
  2616  01C7  1903               	skipnz
  2617  01C8  0AF1               	incf	___awmod@divisor+1,f
  2618  01C9                     l1495:	
  2619  01C9  0870               	movf	___awmod@divisor,w
  2620  01CA  0471               	iorwf	___awmod@divisor+1,w
  2621  01CB  1903               	btfsc	3,2
  2622  01CC  29F6               	goto	l1513
  2623  01CD  01F5               	clrf	___awmod@counter
  2624  01CE  0AF5               	incf	___awmod@counter,f
  2625  01CF                     l1503:	
  2626  01CF  1BF1               	btfsc	___awmod@divisor+1,7
  2627  01D0  29DD               	goto	l1505
  2628  01D1  3001               	movlw	1
  2629  01D2                     u665:	
  2630  01D2  1003               	clrc
  2631  01D3  0DF0               	rlf	___awmod@divisor,f
  2632  01D4  0DF1               	rlf	___awmod@divisor+1,f
  2633  01D5  3EFF               	addlw	-1
  2634  01D6  1D03               	skipz
  2635  01D7  29D2               	goto	u665
  2636  01D8  3001               	movlw	1
  2637  01D9  00F4               	movwf	??___awmod
  2638  01DA  0874               	movf	??___awmod,w
  2639  01DB  07F5               	addwf	___awmod@counter,f
  2640  01DC  29CF               	goto	l1503
  2641  01DD                     l1505:	
  2642  01DD  0871               	movf	___awmod@divisor+1,w
  2643  01DE  0273               	subwf	___awmod@dividend+1,w
  2644  01DF  1D03               	skipz
  2645  01E0  29E3               	goto	u685
  2646  01E1  0870               	movf	___awmod@divisor,w
  2647  01E2  0272               	subwf	___awmod@dividend,w
  2648  01E3                     u685:	
  2649  01E3  1C03               	skipc
  2650  01E4  29EB               	goto	l1509
  2651  01E5  0870               	movf	___awmod@divisor,w
  2652  01E6  02F2               	subwf	___awmod@dividend,f
  2653  01E7  0871               	movf	___awmod@divisor+1,w
  2654  01E8  1C03               	skipc
  2655  01E9  03F3               	decf	___awmod@dividend+1,f
  2656  01EA  02F3               	subwf	___awmod@dividend+1,f
  2657  01EB                     l1509:	
  2658  01EB  3001               	movlw	1
  2659  01EC                     u695:	
  2660  01EC  1003               	clrc
  2661  01ED  0CF1               	rrf	___awmod@divisor+1,f
  2662  01EE  0CF0               	rrf	___awmod@divisor,f
  2663  01EF  3EFF               	addlw	-1
  2664  01F0  1D03               	skipz
  2665  01F1  29EC               	goto	u695
  2666  01F2  3001               	movlw	1
  2667  01F3  02F5               	subwf	___awmod@counter,f
  2668  01F4  1D03               	btfss	3,2
  2669  01F5  29DD               	goto	l1505
  2670  01F6                     l1513:	
  2671  01F6  0876               	movf	___awmod@sign,w
  2672  01F7  1903               	btfsc	3,2
  2673  01F8  29FE               	goto	l1517
  2674  01F9  09F2               	comf	___awmod@dividend,f
  2675  01FA  09F3               	comf	___awmod@dividend+1,f
  2676  01FB  0AF2               	incf	___awmod@dividend,f
  2677  01FC  1903               	skipnz
  2678  01FD  0AF3               	incf	___awmod@dividend+1,f
  2679  01FE                     l1517:	
  2680  01FE  0873               	movf	___awmod@dividend+1,w
  2681  01FF  00F1               	movwf	?___awmod+1
  2682  0200  0872               	movf	___awmod@dividend,w
  2683  0201  00F0               	movwf	?___awmod
  2684  0202  0008               	return
  2685  0203                     __end_of___awmod:	
  2686                           
  2687                           	psect	text12
  2688  0203                     __ptext12:	
  2689 ;; *************** function ___awdiv *****************
  2690 ;; Defined at:
  2691 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  divisor         2    0[COMMON] int 
  2694 ;;  dividend        2    2[COMMON] int 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  quotient        2    7[COMMON] int 
  2697 ;;  sign            1    6[COMMON] unsigned char 
  2698 ;;  counter         1    5[COMMON] unsigned char 
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  2    0[COMMON] int 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2708 ;;      Params:         4       0       0       0       0
  2709 ;;      Locals:         4       0       0       0       0
  2710 ;;      Temps:          1       0       0       0       0
  2711 ;;      Totals:         9       0       0       0       0
  2712 ;;Total ram usage:        9 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_display_Uhrzeit
  2718 ;;		_display_Datum
  2719 ;;		_DEC_a_BCD
  2720 ;;		_uint_to_array
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           
  2725                           ;psect for function ___awdiv
  2726  0203                     ___awdiv:	
  2727                           
  2728                           ;incstack = 0
  2729                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2730  0203  01F6               	clrf	___awdiv@sign
  2731  0204  1FF1               	btfss	___awdiv@divisor+1,7
  2732  0205  2A0D               	goto	l1447
  2733  0206  09F0               	comf	___awdiv@divisor,f
  2734  0207  09F1               	comf	___awdiv@divisor+1,f
  2735  0208  0AF0               	incf	___awdiv@divisor,f
  2736  0209  1903               	skipnz
  2737  020A  0AF1               	incf	___awdiv@divisor+1,f
  2738  020B  01F6               	clrf	___awdiv@sign
  2739  020C  0AF6               	incf	___awdiv@sign,f
  2740  020D                     l1447:	
  2741  020D  1FF3               	btfss	___awdiv@dividend+1,7
  2742  020E  2A18               	goto	l1453
  2743  020F  09F2               	comf	___awdiv@dividend,f
  2744  0210  09F3               	comf	___awdiv@dividend+1,f
  2745  0211  0AF2               	incf	___awdiv@dividend,f
  2746  0212  1903               	skipnz
  2747  0213  0AF3               	incf	___awdiv@dividend+1,f
  2748  0214  3001               	movlw	1
  2749  0215  00F4               	movwf	??___awdiv
  2750  0216  0874               	movf	??___awdiv,w
  2751  0217  06F6               	xorwf	___awdiv@sign,f
  2752  0218                     l1453:	
  2753  0218  01F7               	clrf	___awdiv@quotient
  2754  0219  01F8               	clrf	___awdiv@quotient+1
  2755  021A  0870               	movf	___awdiv@divisor,w
  2756  021B  0471               	iorwf	___awdiv@divisor+1,w
  2757  021C  1903               	btfsc	3,2
  2758  021D  2A4F               	goto	l1475
  2759  021E  01F5               	clrf	___awdiv@counter
  2760  021F  0AF5               	incf	___awdiv@counter,f
  2761  0220                     l1463:	
  2762  0220  1BF1               	btfsc	___awdiv@divisor+1,7
  2763  0221  2A2E               	goto	l1465
  2764  0222  3001               	movlw	1
  2765  0223                     u565:	
  2766  0223  1003               	clrc
  2767  0224  0DF0               	rlf	___awdiv@divisor,f
  2768  0225  0DF1               	rlf	___awdiv@divisor+1,f
  2769  0226  3EFF               	addlw	-1
  2770  0227  1D03               	skipz
  2771  0228  2A23               	goto	u565
  2772  0229  3001               	movlw	1
  2773  022A  00F4               	movwf	??___awdiv
  2774  022B  0874               	movf	??___awdiv,w
  2775  022C  07F5               	addwf	___awdiv@counter,f
  2776  022D  2A20               	goto	l1463
  2777  022E                     l1465:	
  2778  022E  3001               	movlw	1
  2779  022F                     u585:	
  2780  022F  1003               	clrc
  2781  0230  0DF7               	rlf	___awdiv@quotient,f
  2782  0231  0DF8               	rlf	___awdiv@quotient+1,f
  2783  0232  3EFF               	addlw	-1
  2784  0233  1D03               	skipz
  2785  0234  2A2F               	goto	u585
  2786  0235  0871               	movf	___awdiv@divisor+1,w
  2787  0236  0273               	subwf	___awdiv@dividend+1,w
  2788  0237  1D03               	skipz
  2789  0238  2A3B               	goto	u595
  2790  0239  0870               	movf	___awdiv@divisor,w
  2791  023A  0272               	subwf	___awdiv@dividend,w
  2792  023B                     u595:	
  2793  023B  1C03               	skipc
  2794  023C  2A44               	goto	l1471
  2795  023D  0870               	movf	___awdiv@divisor,w
  2796  023E  02F2               	subwf	___awdiv@dividend,f
  2797  023F  0871               	movf	___awdiv@divisor+1,w
  2798  0240  1C03               	skipc
  2799  0241  03F3               	decf	___awdiv@dividend+1,f
  2800  0242  02F3               	subwf	___awdiv@dividend+1,f
  2801  0243  1477               	bsf	___awdiv@quotient,0
  2802  0244                     l1471:	
  2803  0244  3001               	movlw	1
  2804  0245                     u605:	
  2805  0245  1003               	clrc
  2806  0246  0CF1               	rrf	___awdiv@divisor+1,f
  2807  0247  0CF0               	rrf	___awdiv@divisor,f
  2808  0248  3EFF               	addlw	-1
  2809  0249  1D03               	skipz
  2810  024A  2A45               	goto	u605
  2811  024B  3001               	movlw	1
  2812  024C  02F5               	subwf	___awdiv@counter,f
  2813  024D  1D03               	btfss	3,2
  2814  024E  2A2E               	goto	l1465
  2815  024F                     l1475:	
  2816  024F  0876               	movf	___awdiv@sign,w
  2817  0250  1903               	btfsc	3,2
  2818  0251  2A57               	goto	l1479
  2819  0252  09F7               	comf	___awdiv@quotient,f
  2820  0253  09F8               	comf	___awdiv@quotient+1,f
  2821  0254  0AF7               	incf	___awdiv@quotient,f
  2822  0255  1903               	skipnz
  2823  0256  0AF8               	incf	___awdiv@quotient+1,f
  2824  0257                     l1479:	
  2825  0257  0878               	movf	___awdiv@quotient+1,w
  2826  0258  00F1               	movwf	?___awdiv+1
  2827  0259  0877               	movf	___awdiv@quotient,w
  2828  025A  00F0               	movwf	?___awdiv
  2829  025B  0008               	return
  2830  025C                     __end_of___awdiv:	
  2831                           
  2832                           	psect	text13
  2833  00D9                     __ptext13:	
  2834 ;; *************** function _LCD_Write_String *****************
  2835 ;; Defined at:
  2836 ;;		line 73 in file "LCD_8bits.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  a               1    wreg     PTR unsigned char 
  2839 ;;		 -> STR_11(3), STR_10(6), STR_9(2), STR_8(2), 
  2840 ;;		 -> STR_7(17), STR_6(3), STR_5(9), STR_4(3), 
  2841 ;;		 -> STR_3(17), STR_2(3), STR_1(17), 
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;  a               1    4[COMMON] PTR unsigned char 
  2844 ;;		 -> STR_11(3), STR_10(6), STR_9(2), STR_8(2), 
  2845 ;;		 -> STR_7(17), STR_6(3), STR_5(9), STR_4(3), 
  2846 ;;		 -> STR_3(17), STR_2(3), STR_1(17), 
  2847 ;;  n               2    2[COMMON] int 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2857 ;;      Params:         0       0       0       0       0
  2858 ;;      Locals:         3       0       0       0       0
  2859 ;;      Temps:          0       0       0       0       0
  2860 ;;      Totals:         3       0       0       0       0
  2861 ;;Total ram usage:        3 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    1
  2864 ;; This function calls:
  2865 ;;		_LCD_Write_Character
  2866 ;; This function is called by:
  2867 ;;		_main
  2868 ;;		_display_Datum
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function _LCD_Write_String
  2874  00D9                     _LCD_Write_String:	
  2875                           
  2876                           ;incstack = 0
  2877                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2878                           ;LCD_Write_String@a stored from wreg
  2879  00D9  00F4               	movwf	LCD_Write_String@a
  2880                           
  2881                           ;LCD_8bits.c: 74:     int n;;LCD_8bits.c: 75:     for(n = 0; a[n] != '\0'; n++){
  2882  00DA  01F2               	clrf	LCD_Write_String@n
  2883  00DB  01F3               	clrf	LCD_Write_String@n+1
  2884  00DC                     l1381:	
  2885  00DC  0872               	movf	LCD_Write_String@n,w
  2886  00DD  0774               	addwf	LCD_Write_String@a,w
  2887  00DE  0084               	movwf	4
  2888  00DF  120A  118A  2003  120A  118A  	fcall	stringdir
  2889  00E4  3A00               	xorlw	0
  2890  00E5  1903               	btfsc	3,2
  2891  00E6  0008               	return
  2892                           
  2893                           ;LCD_8bits.c: 76:         LCD_Write_Character(a[n]);
  2894  00E7  0872               	movf	LCD_Write_String@n,w
  2895  00E8  0774               	addwf	LCD_Write_String@a,w
  2896  00E9  0084               	movwf	4
  2897  00EA  120A  118A  2003  120A  118A  	fcall	stringdir
  2898  00EF  120A  118A  208D  120A  118A  	fcall	_LCD_Write_Character
  2899                           
  2900                           ;LCD_8bits.c: 77:     }
  2901  00F4  3001               	movlw	1
  2902  00F5  07F2               	addwf	LCD_Write_String@n,f
  2903  00F6  1803               	skipnc
  2904  00F7  0AF3               	incf	LCD_Write_String@n+1,f
  2905  00F8  3000               	movlw	0
  2906  00F9  07F3               	addwf	LCD_Write_String@n+1,f
  2907  00FA  28DC               	goto	l1381
  2908  00FB                     __end_of_LCD_Write_String:	
  2909                           
  2910                           	psect	text14
  2911  008D                     __ptext14:	
  2912 ;; *************** function _LCD_Write_Character *****************
  2913 ;; Defined at:
  2914 ;;		line 64 in file "LCD_8bits.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  caracter        1    wreg     unsigned char 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  caracter        1    1[COMMON] unsigned char 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2928 ;;      Params:         0       0       0       0       0
  2929 ;;      Locals:         1       0       0       0       0
  2930 ;;      Temps:          1       0       0       0       0
  2931 ;;      Totals:         2       0       0       0       0
  2932 ;;Total ram usage:        2 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; This function calls:
  2935 ;;		Nothing
  2936 ;; This function is called by:
  2937 ;;		_main
  2938 ;;		_display_Uhrzeit
  2939 ;;		_display_Datum
  2940 ;;		_LCD_Write_String
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           
  2945                           ;psect for function _LCD_Write_Character
  2946  008D                     _LCD_Write_Character:	
  2947                           
  2948                           ;incstack = 0
  2949                           ; Regs used in _LCD_Write_Character: [wreg]
  2950                           ;LCD_Write_Character@caracter stored from wreg
  2951  008D  00F1               	movwf	LCD_Write_Character@caracter
  2952                           
  2953                           ;LCD_8bits.c: 65:     PORTCbits.RC0 = 1;
  2954  008E  1283               	bcf	3,5	;RP0=0, select bank0
  2955  008F  1303               	bcf	3,6	;RP1=0, select bank0
  2956  0090  1407               	bsf	7,0	;volatile
  2957                           
  2958                           ;LCD_8bits.c: 67:     PORTD = caracter;
  2959  0091  0871               	movf	LCD_Write_Character@caracter,w
  2960  0092  0088               	movwf	8	;volatile
  2961                           
  2962                           ;LCD_8bits.c: 68:     PORTCbits.RC1 = 1;
  2963  0093  1487               	bsf	7,1	;volatile
  2964                           
  2965                           ;LCD_8bits.c: 69:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2966  0094  300D               	movlw	13
  2967  0095  00F0               	movwf	??_LCD_Write_Character
  2968  0096                     u817:	
  2969  0096  0BF0               	decfsz	??_LCD_Write_Character,f
  2970  0097  2896               	goto	u817
  2971                           
  2972                           ;LCD_8bits.c: 70:     PORTCbits.RC1 = 0;
  2973  0098  1283               	bcf	3,5	;RP0=0, select bank0
  2974  0099  1303               	bcf	3,6	;RP1=0, select bank0
  2975  009A  1087               	bcf	7,1	;volatile
  2976  009B  0008               	return
  2977  009C                     __end_of_LCD_Write_Character:	
  2978                           
  2979                           	psect	text15
  2980  00FB                     __ptext15:	
  2981 ;; *************** function _LCD_Set_Cursor *****************
  2982 ;; Defined at:
  2983 ;;		line 80 in file "LCD_8bits.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  linea           1    wreg     unsigned char 
  2986 ;;  columna         1    3[COMMON] unsigned char 
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;  linea           1    6[COMMON] unsigned char 
  2989 ;;  corrimiento     1    7[COMMON] unsigned char 
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2999 ;;      Params:         1       0       0       0       0
  3000 ;;      Locals:         2       0       0       0       0
  3001 ;;      Temps:          2       0       0       0       0
  3002 ;;      Totals:         5       0       0       0       0
  3003 ;;Total ram usage:        5 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; Hardware stack levels required when called:    1
  3006 ;; This function calls:
  3007 ;;		_LCD_Cmd
  3008 ;; This function is called by:
  3009 ;;		_main
  3010 ;;		_display_Uhrzeit
  3011 ;;		_display_Datum
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015                           
  3016                           ;psect for function _LCD_Set_Cursor
  3017  00FB                     _LCD_Set_Cursor:	
  3018                           
  3019                           ;incstack = 0
  3020                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3021                           ;LCD_Set_Cursor@linea stored from wreg
  3022  00FB  00F6               	movwf	LCD_Set_Cursor@linea
  3023                           
  3024                           ;LCD_8bits.c: 82:     switch (linea){
  3025  00FC  2916               	goto	l1369
  3026  00FD                     l1359:	
  3027                           
  3028                           ;LCD_8bits.c: 84:             corrimiento = 0x80 + columna;
  3029  00FD  0873               	movf	LCD_Set_Cursor@columna,w
  3030  00FE  3E80               	addlw	128
  3031  00FF  00F4               	movwf	??_LCD_Set_Cursor
  3032  0100  0874               	movf	??_LCD_Set_Cursor,w
  3033  0101  00F7               	movwf	LCD_Set_Cursor@corrimiento
  3034                           
  3035                           ;LCD_8bits.c: 85:             LCD_Cmd(corrimiento);
  3036  0102  0877               	movf	LCD_Set_Cursor@corrimiento,w
  3037  0103  120A  118A  2153   	fcall	_LCD_Cmd
  3038                           
  3039                           ;LCD_8bits.c: 86:             break;
  3040  0106  0008               	return
  3041  0107                     l1363:	
  3042                           
  3043                           ;LCD_8bits.c: 88:             corrimiento = 0x80 + 0x40 + columna;
  3044  0107  0873               	movf	LCD_Set_Cursor@columna,w
  3045  0108  3EC0               	addlw	192
  3046  0109  00F4               	movwf	??_LCD_Set_Cursor
  3047  010A  0874               	movf	??_LCD_Set_Cursor,w
  3048  010B  00F7               	movwf	LCD_Set_Cursor@corrimiento
  3049                           
  3050                           ;LCD_8bits.c: 89:             LCD_Cmd(corrimiento);
  3051  010C  0877               	movf	LCD_Set_Cursor@corrimiento,w
  3052  010D  120A  118A  2153   	fcall	_LCD_Cmd
  3053                           
  3054                           ;LCD_8bits.c: 90:             break;
  3055  0110  0008               	return
  3056  0111                     l1367:	
  3057                           
  3058                           ;LCD_8bits.c: 92:             LCD_Cmd(0x80);
  3059  0111  3080               	movlw	128
  3060  0112  120A  118A  2153   	fcall	_LCD_Cmd
  3061                           
  3062                           ;LCD_8bits.c: 93:     }
  3063  0115  0008               	return
  3064  0116                     l1369:	
  3065  0116  0876               	movf	LCD_Set_Cursor@linea,w
  3066  0117  00F4               	movwf	??_LCD_Set_Cursor
  3067  0118  01F5               	clrf	??_LCD_Set_Cursor+1
  3068                           
  3069                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3070                           ; Switch size 1, requested type "simple"
  3071                           ; Number of cases is 1, Range of values is 0 to 0
  3072                           ; switch strategies available:
  3073                           ; Name         Instructions Cycles
  3074                           ; simple_byte            4     3 (average)
  3075                           ; direct_byte           11     8 (fixed)
  3076                           ; jumptable            260     6 (fixed)
  3077                           ;	Chosen strategy is simple_byte
  3078  0119  0875               	movf	??_LCD_Set_Cursor+1,w
  3079  011A  3A00               	xorlw	0	; case 0
  3080  011B  1903               	skipnz
  3081  011C  291E               	goto	l1777
  3082  011D  2911               	goto	l1367
  3083  011E                     l1777:	
  3084                           
  3085                           ; Switch size 1, requested type "simple"
  3086                           ; Number of cases is 2, Range of values is 1 to 2
  3087                           ; switch strategies available:
  3088                           ; Name         Instructions Cycles
  3089                           ; simple_byte            7     4 (average)
  3090                           ; direct_byte           17    11 (fixed)
  3091                           ; jumptable            263     9 (fixed)
  3092                           ;	Chosen strategy is simple_byte
  3093  011E  0874               	movf	??_LCD_Set_Cursor,w
  3094  011F  3A01               	xorlw	1	; case 1
  3095  0120  1903               	skipnz
  3096  0121  28FD               	goto	l1359
  3097  0122  3A03               	xorlw	3	; case 2
  3098  0123  1903               	skipnz
  3099  0124  2907               	goto	l1363
  3100  0125  2911               	goto	l1367
  3101  0126  0008               	return
  3102  0127                     __end_of_LCD_Set_Cursor:	
  3103                           
  3104                           	psect	text16
  3105  02BA                     __ptext16:	
  3106 ;; *************** function _LCD_init *****************
  3107 ;; Defined at:
  3108 ;;		line 44 in file "LCD_8bits.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;		None
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;		None
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      void 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0, pclath, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3122 ;;      Params:         0       0       0       0       0
  3123 ;;      Locals:         0       0       0       0       0
  3124 ;;      Temps:          2       0       0       0       0
  3125 ;;      Totals:         2       0       0       0       0
  3126 ;;Total ram usage:        2 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    1
  3129 ;; This function calls:
  3130 ;;		_LCD_Cmd
  3131 ;; This function is called by:
  3132 ;;		_main
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           
  3137                           ;psect for function _LCD_init
  3138  02BA                     _LCD_init:	
  3139                           
  3140                           ;LCD_8bits.c: 45:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3141                           
  3142                           ;incstack = 0
  3143                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  3144  02BA  301A               	movlw	26
  3145  02BB  00F4               	movwf	??_LCD_init+1
  3146  02BC  30F8               	movlw	248
  3147  02BD  00F3               	movwf	??_LCD_init
  3148  02BE                     u827:	
  3149  02BE  0BF3               	decfsz	??_LCD_init,f
  3150  02BF  2ABE               	goto	u827
  3151  02C0  0BF4               	decfsz	??_LCD_init+1,f
  3152  02C1  2ABE               	goto	u827
  3153  02C2  0000               	nop
  3154                           
  3155                           ;LCD_8bits.c: 46:     LCD_Cmd(0x30);
  3156  02C3  3030               	movlw	48
  3157  02C4  120A  118A  2153  120A  118A  	fcall	_LCD_Cmd
  3158                           
  3159                           ;LCD_8bits.c: 47:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3160  02C9  3007               	movlw	7
  3161  02CA  00F4               	movwf	??_LCD_init+1
  3162  02CB  307D               	movlw	125
  3163  02CC  00F3               	movwf	??_LCD_init
  3164  02CD                     u837:	
  3165  02CD  0BF3               	decfsz	??_LCD_init,f
  3166  02CE  2ACD               	goto	u837
  3167  02CF  0BF4               	decfsz	??_LCD_init+1,f
  3168  02D0  2ACD               	goto	u837
  3169                           
  3170                           ;LCD_8bits.c: 48:     LCD_Cmd(0x30);
  3171  02D1  3030               	movlw	48
  3172  02D2  120A  118A  2153  120A  118A  	fcall	_LCD_Cmd
  3173                           
  3174                           ;LCD_8bits.c: 49:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  3175  02D7  3021               	movlw	33
  3176  02D8  00F3               	movwf	??_LCD_init
  3177  02D9                     u847:	
  3178  02D9  0BF3               	decfsz	??_LCD_init,f
  3179  02DA  2AD9               	goto	u847
  3180                           
  3181                           ;LCD_8bits.c: 50:     LCD_Cmd(0x30);
  3182  02DB  3030               	movlw	48
  3183  02DC  120A  118A  2153  120A  118A  	fcall	_LCD_Cmd
  3184                           
  3185                           ;LCD_8bits.c: 51:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  3186  02E1  3021               	movlw	33
  3187  02E2  00F3               	movwf	??_LCD_init
  3188  02E3                     u857:	
  3189  02E3  0BF3               	decfsz	??_LCD_init,f
  3190  02E4  2AE3               	goto	u857
  3191                           
  3192                           ;LCD_8bits.c: 52:     LCD_Cmd(0x38);
  3193  02E5  3038               	movlw	56
  3194  02E6  120A  118A  2153  120A  118A  	fcall	_LCD_Cmd
  3195                           
  3196                           ;LCD_8bits.c: 53:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  3197  02EB  3011               	movlw	17
  3198  02EC  00F3               	movwf	??_LCD_init
  3199  02ED                     u867:	
  3200  02ED  0BF3               	decfsz	??_LCD_init,f
  3201  02EE  2AED               	goto	u867
  3202  02EF  0000               	nop
  3203                           
  3204                           ;LCD_8bits.c: 54:     LCD_Cmd(0x08);
  3205  02F0  3008               	movlw	8
  3206  02F1  120A  118A  2153  120A  118A  	fcall	_LCD_Cmd
  3207                           
  3208                           ;LCD_8bits.c: 55:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  3209  02F6  3011               	movlw	17
  3210  02F7  00F3               	movwf	??_LCD_init
  3211  02F8                     u877:	
  3212  02F8  0BF3               	decfsz	??_LCD_init,f
  3213  02F9  2AF8               	goto	u877
  3214  02FA  0000               	nop
  3215                           
  3216                           ;LCD_8bits.c: 56:     LCD_Cmd(0x01);
  3217  02FB  3001               	movlw	1
  3218  02FC  120A  118A  2153  120A  118A  	fcall	_LCD_Cmd
  3219                           
  3220                           ;LCD_8bits.c: 57:     _delay((unsigned long)((3)*(4000000/4000.0)));
  3221  0301  3004               	movlw	4
  3222  0302  00F4               	movwf	??_LCD_init+1
  3223  0303  30E4               	movlw	228
  3224  0304  00F3               	movwf	??_LCD_init
  3225  0305                     u887:	
  3226  0305  0BF3               	decfsz	??_LCD_init,f
  3227  0306  2B05               	goto	u887
  3228  0307  0BF4               	decfsz	??_LCD_init+1,f
  3229  0308  2B05               	goto	u887
  3230  0309  0000               	nop
  3231                           
  3232                           ;LCD_8bits.c: 58:     LCD_Cmd(0x06);
  3233  030A  3006               	movlw	6
  3234  030B  120A  118A  2153  120A  118A  	fcall	_LCD_Cmd
  3235                           
  3236                           ;LCD_8bits.c: 59:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  3237  0310  3011               	movlw	17
  3238  0311  00F3               	movwf	??_LCD_init
  3239  0312                     u897:	
  3240  0312  0BF3               	decfsz	??_LCD_init,f
  3241  0313  2B12               	goto	u897
  3242  0314  0000               	nop
  3243                           
  3244                           ;LCD_8bits.c: 60:     LCD_Cmd(0x0C);
  3245  0315  300C               	movlw	12
  3246  0316  120A  118A  2153  120A  118A  	fcall	_LCD_Cmd
  3247                           
  3248                           ;LCD_8bits.c: 61:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  3249  031B  3011               	movlw	17
  3250  031C  00F3               	movwf	??_LCD_init
  3251  031D                     u907:	
  3252  031D  0BF3               	decfsz	??_LCD_init,f
  3253  031E  2B1D               	goto	u907
  3254  031F  0000               	nop
  3255  0320  0008               	return
  3256  0321                     __end_of_LCD_init:	
  3257                           
  3258                           	psect	text17
  3259  00AD                     __ptext17:	
  3260 ;; *************** function _LCD_clear *****************
  3261 ;; Defined at:
  3262 ;;		line 32 in file "LCD_8bits.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;		None
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;		None
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      void 
  3269 ;; Registers used:
  3270 ;;		wreg, status,2, status,0, pclath, cstack
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3276 ;;      Params:         0       0       0       0       0
  3277 ;;      Locals:         0       0       0       0       0
  3278 ;;      Temps:          2       0       0       0       0
  3279 ;;      Totals:         2       0       0       0       0
  3280 ;;Total ram usage:        2 bytes
  3281 ;; Hardware stack levels used:    1
  3282 ;; Hardware stack levels required when called:    1
  3283 ;; This function calls:
  3284 ;;		_LCD_Cmd
  3285 ;; This function is called by:
  3286 ;;		_main
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           
  3291                           ;psect for function _LCD_clear
  3292  00AD                     _LCD_clear:	
  3293                           
  3294                           ;LCD_8bits.c: 33:     LCD_Cmd(0x00);
  3295                           
  3296                           ;incstack = 0
  3297                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  3298  00AD  3000               	movlw	0
  3299  00AE  120A  118A  2153  120A  118A  	fcall	_LCD_Cmd
  3300                           
  3301                           ;LCD_8bits.c: 34:     LCD_Cmd(0x01);
  3302  00B3  3001               	movlw	1
  3303  00B4  120A  118A  2153  120A  118A  	fcall	_LCD_Cmd
  3304                           
  3305                           ;LCD_8bits.c: 35:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3306  00B9  3006               	movlw	6
  3307  00BA  00F4               	movwf	??_LCD_clear+1
  3308  00BB  3030               	movlw	48
  3309  00BC  00F3               	movwf	??_LCD_clear
  3310  00BD                     u917:	
  3311  00BD  0BF3               	decfsz	??_LCD_clear,f
  3312  00BE  28BD               	goto	u917
  3313  00BF  0BF4               	decfsz	??_LCD_clear+1,f
  3314  00C0  28BD               	goto	u917
  3315  00C1  0000               	nop
  3316  00C2  0008               	return
  3317  00C3                     __end_of_LCD_clear:	
  3318                           
  3319                           	psect	text18
  3320  0153                     __ptext18:	
  3321 ;; *************** function _LCD_Cmd *****************
  3322 ;; Defined at:
  3323 ;;		line 21 in file "LCD_8bits.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;  comando         1    wreg     unsigned char 
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;  comando         1    2[COMMON] unsigned char 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      void 
  3330 ;; Registers used:
  3331 ;;		wreg
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3337 ;;      Params:         0       0       0       0       0
  3338 ;;      Locals:         1       0       0       0       0
  3339 ;;      Temps:          2       0       0       0       0
  3340 ;;      Totals:         3       0       0       0       0
  3341 ;;Total ram usage:        3 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; This function calls:
  3344 ;;		Nothing
  3345 ;; This function is called by:
  3346 ;;		_LCD_clear
  3347 ;;		_LCD_init
  3348 ;;		_LCD_Set_Cursor
  3349 ;;		_LCD_home
  3350 ;;		_LCD_Shift_links
  3351 ;;		_LCD_Shift_rechts
  3352 ;;		_LCD_Cursor_rechts
  3353 ;;		_LCD_Cursor_links
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           
  3358                           ;psect for function _LCD_Cmd
  3359  0153                     _LCD_Cmd:	
  3360                           
  3361                           ;incstack = 0
  3362                           ; Regs used in _LCD_Cmd: [wreg]
  3363                           ;LCD_Cmd@comando stored from wreg
  3364  0153  00F2               	movwf	LCD_Cmd@comando
  3365                           
  3366                           ;LCD_8bits.c: 22:     PORTCbits.RC0 = 0;
  3367  0154  1283               	bcf	3,5	;RP0=0, select bank0
  3368  0155  1303               	bcf	3,6	;RP1=0, select bank0
  3369  0156  1007               	bcf	7,0	;volatile
  3370                           
  3371                           ;LCD_8bits.c: 23:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3372  0157  3007               	movlw	7
  3373  0158  00F1               	movwf	??_LCD_Cmd+1
  3374  0159  307D               	movlw	125
  3375  015A  00F0               	movwf	??_LCD_Cmd
  3376  015B                     u927:	
  3377  015B  0BF0               	decfsz	??_LCD_Cmd,f
  3378  015C  295B               	goto	u927
  3379  015D  0BF1               	decfsz	??_LCD_Cmd+1,f
  3380  015E  295B               	goto	u927
  3381                           
  3382                           ;LCD_8bits.c: 24:     PORTCbits.RC1 = 1;
  3383  015F  1283               	bcf	3,5	;RP0=0, select bank0
  3384  0160  1303               	bcf	3,6	;RP1=0, select bank0
  3385  0161  1487               	bsf	7,1	;volatile
  3386                           
  3387                           ;LCD_8bits.c: 25:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3388  0162  3007               	movlw	7
  3389  0163  00F1               	movwf	??_LCD_Cmd+1
  3390  0164  307D               	movlw	125
  3391  0165  00F0               	movwf	??_LCD_Cmd
  3392  0166                     u937:	
  3393  0166  0BF0               	decfsz	??_LCD_Cmd,f
  3394  0167  2966               	goto	u937
  3395  0168  0BF1               	decfsz	??_LCD_Cmd+1,f
  3396  0169  2966               	goto	u937
  3397                           
  3398                           ;LCD_8bits.c: 26:     PORTD = comando;
  3399  016A  0872               	movf	LCD_Cmd@comando,w
  3400  016B  1283               	bcf	3,5	;RP0=0, select bank0
  3401  016C  1303               	bcf	3,6	;RP1=0, select bank0
  3402  016D  0088               	movwf	8	;volatile
  3403                           
  3404                           ;LCD_8bits.c: 27:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3405  016E  3007               	movlw	7
  3406  016F  00F1               	movwf	??_LCD_Cmd+1
  3407  0170  307D               	movlw	125
  3408  0171  00F0               	movwf	??_LCD_Cmd
  3409  0172                     u947:	
  3410  0172  0BF0               	decfsz	??_LCD_Cmd,f
  3411  0173  2972               	goto	u947
  3412  0174  0BF1               	decfsz	??_LCD_Cmd+1,f
  3413  0175  2972               	goto	u947
  3414                           
  3415                           ;LCD_8bits.c: 28:     PORTCbits.RC1 = 0;
  3416  0176  1283               	bcf	3,5	;RP0=0, select bank0
  3417  0177  1303               	bcf	3,6	;RP1=0, select bank0
  3418  0178  1087               	bcf	7,1	;volatile
  3419                           
  3420                           ;LCD_8bits.c: 29:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3421  0179  3007               	movlw	7
  3422  017A  00F1               	movwf	??_LCD_Cmd+1
  3423  017B  307D               	movlw	125
  3424  017C  00F0               	movwf	??_LCD_Cmd
  3425  017D                     u957:	
  3426  017D  0BF0               	decfsz	??_LCD_Cmd,f
  3427  017E  297D               	goto	u957
  3428  017F  0BF1               	decfsz	??_LCD_Cmd+1,f
  3429  0180  297D               	goto	u957
  3430  0181  0008               	return
  3431  0182                     __end_of_LCD_Cmd:	
  3432                           
  3433                           	psect	text19
  3434  0182                     __ptext19:	
  3435 ;; *************** function _I2C_Master_Init *****************
  3436 ;; Defined at:
  3437 ;;		line 16 in file "I2C.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;  c               4    0[BANK0 ] const unsigned long 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      void 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0, pclath, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3451 ;;      Params:         0       4       0       0       0
  3452 ;;      Locals:         0       0       0       0       0
  3453 ;;      Temps:          0       4       0       0       0
  3454 ;;      Totals:         0       8       0       0       0
  3455 ;;Total ram usage:        8 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:    1
  3458 ;; This function calls:
  3459 ;;		___lldiv
  3460 ;; This function is called by:
  3461 ;;		_main
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           
  3466                           ;psect for function _I2C_Master_Init
  3467  0182                     _I2C_Master_Init:	
  3468                           
  3469                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  3470                           
  3471                           ;incstack = 0
  3472                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3473  0182  3028               	movlw	40
  3474  0183  1283               	bcf	3,5	;RP0=0, select bank0
  3475  0184  1303               	bcf	3,6	;RP1=0, select bank0
  3476  0185  0094               	movwf	20	;volatile
  3477                           
  3478                           ;I2C.c: 19:     SSPCON2 = 0;
  3479  0186  1683               	bsf	3,5	;RP0=1, select bank1
  3480  0187  1303               	bcf	3,6	;RP1=0, select bank1
  3481  0188  0191               	clrf	17	;volatile
  3482                           
  3483                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  3484  0189  1283               	bcf	3,5	;RP0=0, select bank0
  3485  018A  1303               	bcf	3,6	;RP1=0, select bank0
  3486  018B  0820               	movf	I2C_Master_Init@c,w
  3487  018C  00A4               	movwf	??_I2C_Master_Init
  3488  018D  0821               	movf	I2C_Master_Init@c+1,w
  3489  018E  00A5               	movwf	??_I2C_Master_Init+1
  3490  018F  0822               	movf	I2C_Master_Init@c+2,w
  3491  0190  00A6               	movwf	??_I2C_Master_Init+2
  3492  0191  0823               	movf	I2C_Master_Init@c+3,w
  3493  0192  00A7               	movwf	??_I2C_Master_Init+3
  3494  0193  3002               	movlw	2
  3495  0194                     u725:	
  3496  0194  1003               	clrc
  3497  0195  0DA4               	rlf	??_I2C_Master_Init,f
  3498  0196  0DA5               	rlf	??_I2C_Master_Init+1,f
  3499  0197  0DA6               	rlf	??_I2C_Master_Init+2,f
  3500  0198  0DA7               	rlf	??_I2C_Master_Init+3,f
  3501  0199  3EFF               	addlw	-1
  3502  019A  1D03               	skipz
  3503  019B  2994               	goto	u725
  3504  019C  0827               	movf	??_I2C_Master_Init+3,w
  3505  019D  00F3               	movwf	___lldiv@divisor+3
  3506  019E  0826               	movf	??_I2C_Master_Init+2,w
  3507  019F  00F2               	movwf	___lldiv@divisor+2
  3508  01A0  0825               	movf	??_I2C_Master_Init+1,w
  3509  01A1  00F1               	movwf	___lldiv@divisor+1
  3510  01A2  0824               	movf	??_I2C_Master_Init,w
  3511  01A3  00F0               	movwf	___lldiv@divisor
  3512  01A4  3000               	movlw	0
  3513  01A5  00F7               	movwf	___lldiv@dividend+3
  3514  01A6  303D               	movlw	61
  3515  01A7  00F6               	movwf	___lldiv@dividend+2
  3516  01A8  3009               	movlw	9
  3517  01A9  00F5               	movwf	___lldiv@dividend+1
  3518  01AA  3000               	movlw	0
  3519  01AB  00F4               	movwf	___lldiv@dividend
  3520  01AC  120A  118A  225C   	fcall	___lldiv
  3521  01AF  0870               	movf	?___lldiv,w
  3522  01B0  3EFF               	addlw	255
  3523  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  3524  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  3525  01B3  0093               	movwf	19	;volatile
  3526                           
  3527                           ;I2C.c: 21:     SSPSTAT = 0;
  3528  01B4  0194               	clrf	20	;volatile
  3529                           
  3530                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  3531  01B5  1587               	bsf	7,3	;volatile
  3532                           
  3533                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  3534  01B6  1607               	bsf	7,4	;volatile
  3535  01B7  0008               	return
  3536  01B8                     __end_of_I2C_Master_Init:	
  3537                           
  3538                           	psect	text20
  3539  025C                     __ptext20:	
  3540 ;; *************** function ___lldiv *****************
  3541 ;; Defined at:
  3542 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;  divisor         4    0[COMMON] unsigned long 
  3545 ;;  dividend        4    4[COMMON] unsigned long 
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;  quotient        4    9[COMMON] unsigned long 
  3548 ;;  counter         1   13[COMMON] unsigned char 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  4    0[COMMON] unsigned long 
  3551 ;; Registers used:
  3552 ;;		wreg, status,2, status,0
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3558 ;;      Params:         8       0       0       0       0
  3559 ;;      Locals:         5       0       0       0       0
  3560 ;;      Temps:          1       0       0       0       0
  3561 ;;      Totals:        14       0       0       0       0
  3562 ;;Total ram usage:       14 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_I2C_Master_Init
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           
  3572                           ;psect for function ___lldiv
  3573  025C                     ___lldiv:	
  3574                           
  3575                           ;incstack = 0
  3576                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3577  025C  3000               	movlw	0
  3578  025D  00FC               	movwf	___lldiv@quotient+3
  3579  025E  3000               	movlw	0
  3580  025F  00FB               	movwf	___lldiv@quotient+2
  3581  0260  3000               	movlw	0
  3582  0261  00FA               	movwf	___lldiv@quotient+1
  3583  0262  3000               	movlw	0
  3584  0263  00F9               	movwf	___lldiv@quotient
  3585  0264  0873               	movf	___lldiv@divisor+3,w
  3586  0265  0472               	iorwf	___lldiv@divisor+2,w
  3587  0266  0471               	iorwf	___lldiv@divisor+1,w
  3588  0267  0470               	iorwf	___lldiv@divisor,w
  3589  0268  1903               	skipnz
  3590  0269  2AB1               	goto	l1435
  3591  026A  01FD               	clrf	___lldiv@counter
  3592  026B  0AFD               	incf	___lldiv@counter,f
  3593  026C                     l1421:	
  3594  026C  1BF3               	btfsc	___lldiv@divisor+3,7
  3595  026D  2A7C               	goto	l1423
  3596  026E  3001               	movlw	1
  3597  026F  00F8               	movwf	??___lldiv
  3598  0270                     u475:	
  3599  0270  1003               	clrc
  3600  0271  0DF0               	rlf	___lldiv@divisor,f
  3601  0272  0DF1               	rlf	___lldiv@divisor+1,f
  3602  0273  0DF2               	rlf	___lldiv@divisor+2,f
  3603  0274  0DF3               	rlf	___lldiv@divisor+3,f
  3604  0275  0BF8               	decfsz	??___lldiv,f
  3605  0276  2A70               	goto	u475
  3606  0277  3001               	movlw	1
  3607  0278  00F8               	movwf	??___lldiv
  3608  0279  0878               	movf	??___lldiv,w
  3609  027A  07FD               	addwf	___lldiv@counter,f
  3610  027B  2A6C               	goto	l1421
  3611  027C                     l1423:	
  3612  027C  3001               	movlw	1
  3613  027D  00F8               	movwf	??___lldiv
  3614  027E                     u495:	
  3615  027E  1003               	clrc
  3616  027F  0DF9               	rlf	___lldiv@quotient,f
  3617  0280  0DFA               	rlf	___lldiv@quotient+1,f
  3618  0281  0DFB               	rlf	___lldiv@quotient+2,f
  3619  0282  0DFC               	rlf	___lldiv@quotient+3,f
  3620  0283  0BF8               	decfsz	??___lldiv,f
  3621  0284  2A7E               	goto	u495
  3622  0285  0873               	movf	___lldiv@divisor+3,w
  3623  0286  0277               	subwf	___lldiv@dividend+3,w
  3624  0287  1D03               	skipz
  3625  0288  2A93               	goto	u505
  3626  0289  0872               	movf	___lldiv@divisor+2,w
  3627  028A  0276               	subwf	___lldiv@dividend+2,w
  3628  028B  1D03               	skipz
  3629  028C  2A93               	goto	u505
  3630  028D  0871               	movf	___lldiv@divisor+1,w
  3631  028E  0275               	subwf	___lldiv@dividend+1,w
  3632  028F  1D03               	skipz
  3633  0290  2A93               	goto	u505
  3634  0291  0870               	movf	___lldiv@divisor,w
  3635  0292  0274               	subwf	___lldiv@dividend,w
  3636  0293                     u505:	
  3637  0293  1C03               	skipc
  3638  0294  2AA4               	goto	l1431
  3639  0295  0870               	movf	___lldiv@divisor,w
  3640  0296  02F4               	subwf	___lldiv@dividend,f
  3641  0297  0871               	movf	___lldiv@divisor+1,w
  3642  0298  1C03               	skipc
  3643  0299  0F71               	incfsz	___lldiv@divisor+1,w
  3644  029A  02F5               	subwf	___lldiv@dividend+1,f
  3645  029B  0872               	movf	___lldiv@divisor+2,w
  3646  029C  1C03               	skipc
  3647  029D  0F72               	incfsz	___lldiv@divisor+2,w
  3648  029E  02F6               	subwf	___lldiv@dividend+2,f
  3649  029F  0873               	movf	___lldiv@divisor+3,w
  3650  02A0  1C03               	skipc
  3651  02A1  0F73               	incfsz	___lldiv@divisor+3,w
  3652  02A2  02F7               	subwf	___lldiv@dividend+3,f
  3653  02A3  1479               	bsf	___lldiv@quotient,0
  3654  02A4                     l1431:	
  3655  02A4  3001               	movlw	1
  3656  02A5                     u515:	
  3657  02A5  1003               	clrc
  3658  02A6  0CF3               	rrf	___lldiv@divisor+3,f
  3659  02A7  0CF2               	rrf	___lldiv@divisor+2,f
  3660  02A8  0CF1               	rrf	___lldiv@divisor+1,f
  3661  02A9  0CF0               	rrf	___lldiv@divisor,f
  3662  02AA  3EFF               	addlw	-1
  3663  02AB  1D03               	skipz
  3664  02AC  2AA5               	goto	u515
  3665  02AD  3001               	movlw	1
  3666  02AE  02FD               	subwf	___lldiv@counter,f
  3667  02AF  1D03               	btfss	3,2
  3668  02B0  2A7C               	goto	l1423
  3669  02B1                     l1435:	
  3670  02B1  087C               	movf	___lldiv@quotient+3,w
  3671  02B2  00F3               	movwf	?___lldiv+3
  3672  02B3  087B               	movf	___lldiv@quotient+2,w
  3673  02B4  00F2               	movwf	?___lldiv+2
  3674  02B5  087A               	movf	___lldiv@quotient+1,w
  3675  02B6  00F1               	movwf	?___lldiv+1
  3676  02B7  0879               	movf	___lldiv@quotient,w
  3677  02B8  00F0               	movwf	?___lldiv
  3678  02B9  0008               	return
  3679  02BA                     __end_of___lldiv:	
  3680  007E                     btemp	set	126	;btemp
  3681  007E                     wtemp0	set	126


Data Sizes:
    Strings     79
    Constant    0
    Data        6
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      9      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sp__uint_to_array	PTR unsigned int  size(1) Largest target is 6
		 -> uint_to_array@resultado(COMMON[6]), 

    LCD_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_11(CODE[3]), STR_10(CODE[6]), STR_9(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[17]), STR_6(CODE[3]), STR_5(CODE[9]), STR_4(CODE[3]), 
		 -> STR_3(CODE[17]), STR_2(CODE[3]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _get_Time->_BCD_a_DEC
    _BCD_a_DEC->___bmul
    _display_Uhrzeit->___awdiv
    _display_Datum->___awdiv
    _LCD_Write_String->_LCD_Write_Character
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_init->_LCD_Cmd
    _LCD_clear->_LCD_Cmd
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   15796
                                              8 BANK0      1     1      0
                    _I2C_Master_Init
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                          _LCD_clear
                           _LCD_init
                      _display_Datum
                    _display_Uhrzeit
                           _get_Time
 ---------------------------------------------------------------------------------
 (1) _get_Time                                             1     1      0    4383
                                              8 COMMON     1     1      0
                          _BCD_a_DEC
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    3214
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     957
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BCD_a_DEC                                            4     4      0     212
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _display_Uhrzeit                                     11    10      1    4431
                                              9 COMMON     4     3      1
                                              0 BANK0      7     7      0
                     _LCD_Set_Cursor
                _LCD_Write_Character
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _display_Datum                                       11    10      1    4906
                                              9 COMMON     4     3      1
                                              0 BANK0      7     7      0
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1360
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1668
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     3     3      0     475
                                              2 COMMON     3     3      0
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Character                                  2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       5     4      1    1123
                                              3 COMMON     5     4      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      22
                                              3 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            2     2      0      22
                                              3 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _LCD_Set_Cursor
     _LCD_Cmd
   _LCD_Write_Character
   _LCD_Write_String
     _LCD_Write_Character
   _LCD_clear
     _LCD_Cmd
   _LCD_init
     _LCD_Cmd
   _display_Datum
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     _LCD_Write_String
       _LCD_Write_Character
     ___awdiv
     ___awmod
   _display_Uhrzeit
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     ___awdiv
     ___awmod
   _get_Time
     _BCD_a_DEC
       ___bmul
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      9      17       5       28.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      25      12        0.0%
ABS                  0      0      25       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Mar 06 16:21:48 2020

                           pc 0002                ___bmul@product 0072                   __CFG_CP$OFF 0000  
                ___awdiv@sign 0076            __size_of_BCD_a_DEC 0016                            fsr 0004  
                         l134 0084                           l152 014A                           l153 014D  
                         _GIE 005F                           u505 0293                  __CFG_CPD$OFF 0000  
                         u515 02A5                           u605 0245                           u445 00CE  
                         u475 0270                           u725 0194                           u565 0223  
                         u495 027E                           u817 0096                           u585 022F  
                         u665 01D2                           u907 031D                           u827 02BE  
                         u595 023B                           u917 00BD                           u837 02CD  
                         u685 01E3                           u927 015B                           u847 02D9  
                         u695 01EC                           u937 0166                           u857 02E3  
                         u947 0172                           u867 02ED                           u957 017D  
                         u877 02F8                           u887 0305                           u897 0312  
     __end_of_display_Uhrzeit 03F3                           _dia 0034                           _mes 0032  
                         _min 0036                           _seg 002F                           fsr0 0004  
                ___awmod@sign 0076                ?_display_Datum 0079  __size_of_LCD_Write_Character 000F  
             __end_of_LCD_Cmd 0182                  __CFG_LVP$OFF 0000                _LCD_Set_Cursor 00FB  
                        l1421 026C                          l1431 02A4                          l1423 027C  
                        l1503 01CF                          l1505 01DD                          l1513 01F6  
                        l1345 009E                          l1435 02B1                          l1363 0107  
                        l1381 00DC                          l1453 0218                          l1517 01FE  
                        l1509 01EB                          l1349 00A4                          l1367 0111  
                        l1359 00FD                          l1471 0244                          l1463 0220  
                        l1447 020D                          l1631 0539                          l1369 0116  
                        l1465 022E                          l1641 058B                          l1625 050D  
                        l1475 024F                          l1491 01C2                          l1651 05DB  
                        l1619 04EF                          l1637 0565                          l1653 05ED  
                        l1479 0257                          l1495 01C9                          l1775 05F2  
                        l1777 011E                          STR_1 0009                          STR_2 0051  
                        STR_3 002B                          STR_4 004B                          STR_5 003C  
                        STR_6 004E                          STR_7 001A                          STR_8 0054  
                        STR_9 0056                          _PEIE 005E                  __CFG_WRT$OFF 0000  
           ?_LCD_Write_String 0070                          _jahr 0031                          _main 04CB  
                        _hora 0035                          btemp 007E                          start 0000  
          ??_LCD_Write_String 0072                 __CFG_IESO$OFF 0000            __size_of_LCD_clear 0016  
           ___bmul@multiplier 0073              ?_I2C_Master_Init 0020              ?_I2C_Master_Read 0070  
            ?_I2C_Master_Wait 0070              ?_I2C_Master_Stop 0070              __end_of_LCD_init 0321  
                       ?_main 0070               __end_of___awdiv 025C                         STR_10 0045  
                       STR_11 004B                 __CFG_WDTE$OFF 0000               __end_of___awmod 0203  
             __end_of___lldiv 02BA               ___awdiv@divisor 0070               ___awdiv@counter 0075  
                       _PORTD 0008                         _TRISD 0088                         _SSPIE 0463  
                       _SSPIF 0063                __CFG_FCMEN$OFF 0000        __end_of_LCD_Set_Cursor 0127  
                       _datum 0033                __CFG_BOREN$OFF 0000                         pclath 000A  
           __end_of_BCD_a_DEC 00D9                         status 0003                         wtemp0 007E  
              __CFG_MCLRE$OFF 0000               __initialization 07D2                  __end_of_main 0606  
                      ??_main 0028                     ??_LCD_Cmd 0070               ??_display_Datum 007A  
            ?_display_Uhrzeit 0079             ?_I2C_Master_Start 0070             ?_I2C_Master_Write 0070  
           __end_of_LCD_clear 00C3               ?_LCD_Set_Cursor 0073            ??_I2C_Master_Start 0070  
          ??_I2C_Master_Write 0072              ___awdiv@dividend 0072                        _SSPADD 0093  
                      _TRISC0 0438                        _TRISC1 0439                        _TRISC3 043B  
                      _TRISC4 043C            uint_to_array@F1341 0029                        _SSPCON 0014  
                      _SSPBUF 0013   LCD_Write_Character@caracter 0071                __CFG_PWRTE$OFF 0000  
            __end_of_get_Time 07D2                        ___bmul 009C                     ??___awdiv 0074  
                   ??___awmod 0074                     ??___lldiv 0078                        _estado 0030  
            ___awdiv@quotient 0077               ___awmod@divisor 0070               ___awmod@counter 0075  
     __end_of__initialization 07FC                     ?_LCD_init 0070           ___bmul@multiplicand 0070  
              __pcstackCOMMON 0070           _LCD_Write_Character 008D                  __pidataBANK0 0068  
        display_Datum@columna 0079          ?_LCD_Write_Character 0070                LCD_Cmd@comando 0072  
                  __pbssBANK0 0029     LCD_Set_Cursor@corrimiento 0077                    ??_LCD_init 0073  
                  __pmaintext 04CB                       ?___bmul 0070     __size_of_LCD_Write_String 0022  
         display_Uhrzeit@fila 0020                       _LCD_Cmd 0153         ??_LCD_Write_Character 0070  
                   ?_get_Time 0070                       _SSPCON2 0091                       _SSPSTAT 0094  
                  __stringtab 0003                     _BCD_a_DEC 00C3               __size_of___bmul 0011  
                     ___awdiv 0203                       ___awmod 01B8                       ___lldiv 025C  
           display_Datum@fila 0020              ??_LCD_Set_Cursor 0074                       __ptext1 0606  
                     __ptext2 007C                       __ptext3 0075                       __ptext4 006E  
                     __ptext5 0127                       __ptext6 0084                       __ptext7 00C3  
                     __ptext8 009C                       __ptext9 0321              ___awmod@dividend 0072  
    __size_of_I2C_Master_Init 0036      __size_of_I2C_Master_Read 002C      __size_of_I2C_Master_Wait 0009  
    __size_of_I2C_Master_Stop 0007                    ??_get_Time 0078                     _LCD_clear 00AD  
        end_of_initialization 07FC     __size_of_I2C_Master_Start 0007     __size_of_I2C_Master_Write 0008  
             ___lldiv@divisor 0070                    ?_BCD_a_DEC 0070               ___lldiv@counter 007D  
            I2C_Master_Init@c 0020              I2C_Master_Read@a 0070                     _PORTCbits 0007  
                   _TRISCbits 0087         __end_of_display_Datum 04CB                    ?_LCD_clear 0070  
           LCD_Write_String@a 0074             LCD_Write_String@n 0072      __size_of_display_Uhrzeit 00D2  
           __size_of_LCD_init 0067                __end_of___bmul 00AD         LCD_Set_Cursor@columna 0073  
            _LCD_Write_String 00D9           start_initialization 07D2             ??_I2C_Master_Init 0024  
           ??_I2C_Master_Read 0072             ??_I2C_Master_Wait 0070             ??_I2C_Master_Stop 0070  
    __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??_BCD_a_DEC 0074                      ??___bmul 0071  
                 __pdataBANK0 0031               BCD_a_DEC@numBCD 0077                      ?_LCD_Cmd 0070  
                   ___latbits 0002                 __pcstackBANK0 0020           display_Datum@jahr_d 0026  
         display_Datum@jahr_u 0025                   ??_LCD_clear 0073             __size_of_get_Time 01CC  
            _I2C_Master_Start 006E              _I2C_Master_Write 007C             ??_display_Uhrzeit 007A  
                    ?___awdiv 0070                      ?___awmod 0070                      ?___lldiv 0070  
                   __pstrings 0003   __end_of_LCD_Write_Character 009C          display_Uhrzeit@Uhr_d 0026  
        display_Uhrzeit@Uhr_u 0025          display_Uhrzeit@min_d 0024          display_Uhrzeit@min_u 0023  
        display_Uhrzeit@seg_d 0022          display_Uhrzeit@seg_u 0021                      _LCD_init 02BA  
                 __stringbase 0008              __size_of_LCD_Cmd 002F           I2C_Master_Read@temp 0074  
    __end_of_LCD_Write_String 00FB              __size_of___awdiv 0059              __size_of___awmod 004B  
            __size_of___lldiv 005E            display_Datum@dia_d 0022            display_Datum@dia_u 0021  
          __end_of__stringtab 0009            display_Datum@mes_d 0024            display_Datum@mes_u 0023  
             _I2C_Master_Init 0182               _I2C_Master_Read 0127               _I2C_Master_Wait 0084  
             _I2C_Master_Stop 0075                      __ptext10 03F3                      __ptext11 01B8  
                    __ptext20 025C                      __ptext12 0203                      __ptext13 00D9  
                    __ptext14 008D                      __ptext15 00FB                      __ptext16 02BA  
                    __ptext17 00AD                      __ptext18 0153                      __ptext19 0182  
                    _get_Time 0606             __CFG_BOR4V$BOR40V 0000       __size_of_LCD_Set_Cursor 002C  
               __size_of_main 013B        display_Uhrzeit@columna 0079        __size_of_display_Datum 00D8  
         LCD_Set_Cursor@linea 0076      __end_of_I2C_Master_Start 0075      __end_of_I2C_Master_Write 0084  
             _display_Uhrzeit 0321              ___lldiv@dividend 0074                     stringcode 0003  
     __end_of_I2C_Master_Init 01B8       __end_of_I2C_Master_Read 0153       __end_of_I2C_Master_Wait 008D  
     __end_of_I2C_Master_Stop 007C              ___lldiv@quotient 0079             I2C_Master_Write@d 0070  
                    stringdir 0003                      stringtab 0003                   _SSPCON2bits 0091  
               _display_Datum 03F3  



Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Mar 06 11:11:47 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.05
    35                           ; Generated 20/12/2018 GMT
    36                           ; 
    37                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F887 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0088                     	;# 
   108  0089                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  0105                     	;# 
   132  0107                     	;# 
   133  0108                     	;# 
   134  0109                     	;# 
   135  010C                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  0185                     	;# 
   141  0187                     	;# 
   142  0188                     	;# 
   143  0189                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  008F                     	;# 
   191  0090                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0094                     	;# 
   198  0095                     	;# 
   199  0096                     	;# 
   200  0097                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009E                     	;# 
   208  009F                     	;# 
   209  0105                     	;# 
   210  0107                     	;# 
   211  0108                     	;# 
   212  0109                     	;# 
   213  010C                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010F                     	;# 
   218  0185                     	;# 
   219  0187                     	;# 
   220  0188                     	;# 
   221  0189                     	;# 
   222  018C                     	;# 
   223  018D                     	;# 
   224  0000                     	;# 
   225  0001                     	;# 
   226  0002                     	;# 
   227  0003                     	;# 
   228  0004                     	;# 
   229  0005                     	;# 
   230  0006                     	;# 
   231  0007                     	;# 
   232  0008                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  000E                     	;# 
   240  000F                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0015                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001B                     	;# 
   255  001C                     	;# 
   256  001D                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  0081                     	;# 
   260  0085                     	;# 
   261  0086                     	;# 
   262  0087                     	;# 
   263  0088                     	;# 
   264  0089                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  008E                     	;# 
   268  008F                     	;# 
   269  0090                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0105                     	;# 
   288  0107                     	;# 
   289  0108                     	;# 
   290  0109                     	;# 
   291  010C                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  0185                     	;# 
   297  0187                     	;# 
   298  0188                     	;# 
   299  0189                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0008                     	;# 
   311  0009                     	;# 
   312  000A                     	;# 
   313  000B                     	;# 
   314  000C                     	;# 
   315  000D                     	;# 
   316  000E                     	;# 
   317  000E                     	;# 
   318  000F                     	;# 
   319  0010                     	;# 
   320  0011                     	;# 
   321  0012                     	;# 
   322  0013                     	;# 
   323  0014                     	;# 
   324  0015                     	;# 
   325  0015                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001B                     	;# 
   333  001C                     	;# 
   334  001D                     	;# 
   335  001E                     	;# 
   336  001F                     	;# 
   337  0081                     	;# 
   338  0085                     	;# 
   339  0086                     	;# 
   340  0087                     	;# 
   341  0088                     	;# 
   342  0089                     	;# 
   343  008C                     	;# 
   344  008D                     	;# 
   345  008E                     	;# 
   346  008F                     	;# 
   347  0090                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0094                     	;# 
   354  0095                     	;# 
   355  0096                     	;# 
   356  0097                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009A                     	;# 
   360  009B                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  009F                     	;# 
   365  0105                     	;# 
   366  0107                     	;# 
   367  0108                     	;# 
   368  0109                     	;# 
   369  010C                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010E                     	;# 
   373  010F                     	;# 
   374  0185                     	;# 
   375  0187                     	;# 
   376  0188                     	;# 
   377  0189                     	;# 
   378  018C                     	;# 
   379  018D                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  000D                     	;# 
   394  000E                     	;# 
   395  000E                     	;# 
   396  000F                     	;# 
   397  0010                     	;# 
   398  0011                     	;# 
   399  0012                     	;# 
   400  0013                     	;# 
   401  0014                     	;# 
   402  0015                     	;# 
   403  0015                     	;# 
   404  0016                     	;# 
   405  0017                     	;# 
   406  0018                     	;# 
   407  0019                     	;# 
   408  001A                     	;# 
   409  001B                     	;# 
   410  001B                     	;# 
   411  001C                     	;# 
   412  001D                     	;# 
   413  001E                     	;# 
   414  001F                     	;# 
   415  0081                     	;# 
   416  0085                     	;# 
   417  0086                     	;# 
   418  0087                     	;# 
   419  0088                     	;# 
   420  0089                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  008F                     	;# 
   425  0090                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009A                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  0105                     	;# 
   444  0107                     	;# 
   445  0108                     	;# 
   446  0109                     	;# 
   447  010C                     	;# 
   448  010C                     	;# 
   449  010D                     	;# 
   450  010E                     	;# 
   451  010F                     	;# 
   452  0185                     	;# 
   453  0187                     	;# 
   454  0188                     	;# 
   455  0189                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458                           
   459                           	psect	idataBANK0
   460  0238                     __pidataBANK0:	
   461                           
   462                           ;initializer for _jahr
   463  0238  3414               	retlw	20
   464  0239  3400               	retlw	0
   465                           
   466                           ;initializer for _mes
   467  023A  3402               	retlw	2
   468  023B  3400               	retlw	0
   469                           
   470                           ;initializer for _datum
   471  023C  3417               	retlw	23
   472  023D  3400               	retlw	0
   473                           
   474                           ;initializer for _dia
   475  023E  3401               	retlw	1
   476  023F  3400               	retlw	0
   477                           
   478                           ;initializer for _hora
   479  0240  340B               	retlw	11
   480  0241  3400               	retlw	0
   481                           
   482                           ;initializer for _min
   483  0242  340B               	retlw	11
   484  0243  3400               	retlw	0
   485  0008                     _PORTD	set	8
   486  0007                     _PORTCbits	set	7
   487  0013                     _SSPBUF	set	19
   488  0014                     _SSPCON	set	20
   489  0063                     _SSPIF	set	99
   490  005E                     _PEIE	set	94
   491  005F                     _GIE	set	95
   492  0091                     _SSPCON2bits	set	145
   493  0087                     _TRISCbits	set	135
   494  0094                     _SSPSTAT	set	148
   495  0093                     _SSPADD	set	147
   496  0091                     _SSPCON2	set	145
   497  0088                     _TRISD	set	136
   498  0463                     _SSPIE	set	1123
   499  043C                     _TRISC4	set	1084
   500  043B                     _TRISC3	set	1083
   501  0439                     _TRISC1	set	1081
   502  0438                     _TRISC0	set	1080
   503                           
   504                           	psect	strings
   505  0003                     __pstrings:	
   506  0003                     stringtab:	
   507  0003                     __stringtab:	
   508  0003                     stringcode:	
   509                           ;	String table - string pointers are 1 byte each
   510                           
   511  0003                     stringdir:	
   512  0003  3000               	movlw	high stringdir
   513  0004  008A               	movwf	10
   514  0005  0804               	movf	4,w
   515  0006  0A84               	incf	4,f
   516  0007  0782               	addwf	2,f
   517  0008                     __stringbase:	
   518  0008  3400               	retlw	0
   519  0009                     __end_of__stringtab:	
   520  0009                     STR_1:	
   521  0009  3453               	retlw	83	;'S'
   522  000A  3431               	retlw	49	;'1'
   523  000B  343A               	retlw	58	;':'
   524  000C  3420               	retlw	32	;' '
   525  000D  3420               	retlw	32	;' '
   526  000E  3453               	retlw	83	;'S'
   527  000F  3432               	retlw	50	;'2'
   528  0010  343A               	retlw	58	;':'
   529  0011  3420               	retlw	32	;' '
   530  0012  3420               	retlw	32	;' '
   531  0013  3420               	retlw	32	;' '
   532  0014  3453               	retlw	83	;'S'
   533  0015  3433               	retlw	51	;'3'
   534  0016  343A               	retlw	58	;':'
   535  0017  3400               	retlw	0
   536                           
   537                           ; #config settings
   538  0000                     
   539                           	psect	cinit
   540  07E8                     start_initialization:	
   541  07E8                     __initialization:	
   542                           
   543                           ; Initialize objects allocated to BANK0
   544  07E8  1383               	bcf	3,7	;select IRP bank0
   545  07E9  302C               	movlw	low (__pdataBANK0+12)
   546  07EA  00FD               	movwf	btemp+-1
   547  07EB  3002               	movlw	high __pidataBANK0
   548  07EC  00FE               	movwf	btemp
   549  07ED  3038               	movlw	low __pidataBANK0
   550  07EE  00FF               	movwf	btemp+1
   551  07EF  3020               	movlw	low __pdataBANK0
   552  07F0  0084               	movwf	4
   553  07F1  120A  118A  2257   	fcall	init_ram0
   554                           
   555                           ; Clear objects allocated to BANK0
   556  07F4  01AC               	clrf	__pbssBANK0& (0+127)
   557  07F5  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   558  07F6  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   559  07F7  01AF               	clrf	(__pbssBANK0+3)& (0+127)
   560  07F8  01B0               	clrf	(__pbssBANK0+4)& (0+127)
   561  07F9  01B1               	clrf	(__pbssBANK0+5)& (0+127)
   562  07FA  01B2               	clrf	(__pbssBANK0+6)& (0+127)
   563  07FB  01B3               	clrf	(__pbssBANK0+7)& (0+127)
   564  07FC                     end_of_initialization:	
   565                           ;End of C runtime variable initialization code
   566                           
   567  07FC                     __end_of__initialization:	
   568  07FC  0183               	clrf	3
   569  07FD  120A  118A  2B9D   	ljmp	_main	;jump to C main() function
   570                           
   571                           	psect	bssBANK0
   572  002C                     __pbssBANK0:	
   573  002C                     uint_to_array@F1341:	
   574  002C                     	ds	6
   575  0032                     _seg:	
   576  0032                     	ds	2
   577                           
   578                           	psect	dataBANK0
   579  0020                     __pdataBANK0:	
   580  0020                     _jahr:	
   581  0020                     	ds	2
   582  0022                     _mes:	
   583  0022                     	ds	2
   584  0024                     _datum:	
   585  0024                     	ds	2
   586  0026                     _dia:	
   587  0026                     	ds	2
   588  0028                     _hora:	
   589  0028                     	ds	2
   590  002A                     _min:	
   591  002A                     	ds	2
   592                           
   593                           	psect	inittext
   594  0253                     init_fetch0:	
   595                           ;	Called with low address in FSR and high address in W
   596                           
   597  0253  087E               	movf	126,w
   598  0254  008A               	movwf	10
   599  0255  087F               	movf	127,w
   600  0256  0082               	movwf	2
   601  0257                     init_ram0:	
   602                           ;Called with:
   603                           ;	high address of idata address in btemp 
   604                           ;	low address of idata address in btemp+1 
   605                           ;	low address of data in FSR
   606                           ;	high address + 1 of data in btemp-1
   607                           
   608  0257  2253  120A  118A   	fcall	init_fetch0
   609  025A  0080               	movwf	0
   610  025B  0A84               	incf	4,f
   611  025C  0804               	movf	4,w
   612  025D  067D               	xorwf	125,w
   613  025E  1903               	btfsc	3,2
   614  025F  3400               	retlw	0
   615  0260  0AFF               	incf	127,f
   616  0261  1903               	btfsc	3,2
   617  0262  0AFE               	incf	126,f
   618  0263  2A57               	goto	init_ram0
   619                           
   620                           	psect	cstackCOMMON
   621  0070                     __pcstackCOMMON:	
   622  0070                     ?_LCD_init:	
   623  0070                     ?_LCD_clear:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_LCD_Write_String:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_get_Time:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_LCD_Write_Character:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ??_LCD_Write_Character:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_I2C_Master_Start:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ??_I2C_Master_Start:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_I2C_Master_Write:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_I2C_Master_Stop:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ??_I2C_Master_Stop:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_main:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_I2C_Master_Wait:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ??_I2C_Master_Wait:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_LCD_Cmd:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ??_LCD_Cmd:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_I2C_Master_Read:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?___wmul:	
   672                           ; 2 bytes @ 0x0
   673                           
   674  0070                     ?___awdiv:	
   675                           ; 2 bytes @ 0x0
   676                           
   677  0070                     ?___awmod:	
   678                           ; 2 bytes @ 0x0
   679                           
   680  0070                     ?___lldiv:	
   681                           ; 2 bytes @ 0x0
   682                           
   683  0070                     I2C_Master_Write@d:	
   684                           ; 4 bytes @ 0x0
   685                           
   686  0070                     I2C_Master_Read@a:	
   687                           ; 2 bytes @ 0x0
   688                           
   689  0070                     ___wmul@multiplier:	
   690                           ; 2 bytes @ 0x0
   691                           
   692  0070                     ___awdiv@divisor:	
   693                           ; 2 bytes @ 0x0
   694                           
   695  0070                     ___awmod@divisor:	
   696                           ; 2 bytes @ 0x0
   697                           
   698  0070                     ___lldiv@divisor:	
   699                           ; 2 bytes @ 0x0
   700                           
   701                           
   702                           ; 4 bytes @ 0x0
   703  0070                     	ds	1
   704  0071                     LCD_Write_Character@caracter:	
   705                           
   706                           ; 1 bytes @ 0x1
   707  0071                     	ds	1
   708  0072                     ??_LCD_Write_String:	
   709  0072                     ??_I2C_Master_Write:	
   710                           ; 1 bytes @ 0x2
   711                           
   712  0072                     ??_I2C_Master_Read:	
   713                           ; 1 bytes @ 0x2
   714                           
   715  0072                     LCD_Cmd@comando:	
   716                           ; 1 bytes @ 0x2
   717                           
   718  0072                     LCD_Write_String@n:	
   719                           ; 1 bytes @ 0x2
   720                           
   721  0072                     ___wmul@multiplicand:	
   722                           ; 2 bytes @ 0x2
   723                           
   724  0072                     ___awdiv@dividend:	
   725                           ; 2 bytes @ 0x2
   726                           
   727  0072                     ___awmod@dividend:	
   728                           ; 2 bytes @ 0x2
   729                           
   730                           
   731                           ; 2 bytes @ 0x2
   732  0072                     	ds	1
   733  0073                     ??_LCD_init:	
   734  0073                     ??_LCD_clear:	
   735                           ; 1 bytes @ 0x3
   736                           
   737  0073                     ?_LCD_Set_Cursor:	
   738                           ; 1 bytes @ 0x3
   739                           
   740  0073                     LCD_Set_Cursor@columna:	
   741                           ; 1 bytes @ 0x3
   742                           
   743                           
   744                           ; 1 bytes @ 0x3
   745  0073                     	ds	1
   746  0074                     ??_LCD_Set_Cursor:	
   747  0074                     ??___wmul:	
   748                           ; 1 bytes @ 0x4
   749                           
   750  0074                     ??___awdiv:	
   751                           ; 1 bytes @ 0x4
   752                           
   753  0074                     ??___awmod:	
   754                           ; 1 bytes @ 0x4
   755                           
   756  0074                     LCD_Write_String@a:	
   757                           ; 1 bytes @ 0x4
   758                           
   759  0074                     I2C_Master_Read@temp:	
   760                           ; 1 bytes @ 0x4
   761                           
   762  0074                     ___wmul@product:	
   763                           ; 2 bytes @ 0x4
   764                           
   765  0074                     ___lldiv@dividend:	
   766                           ; 2 bytes @ 0x4
   767                           
   768                           
   769                           ; 4 bytes @ 0x4
   770  0074                     	ds	1
   771  0075                     ___awdiv@counter:	
   772  0075                     ___awmod@counter:	
   773                           ; 1 bytes @ 0x5
   774                           
   775                           
   776                           ; 1 bytes @ 0x5
   777  0075                     	ds	1
   778  0076                     ?_BCD_a_DEC:	
   779  0076                     LCD_Set_Cursor@linea:	
   780                           ; 2 bytes @ 0x6
   781                           
   782  0076                     ___awdiv@sign:	
   783                           ; 1 bytes @ 0x6
   784                           
   785  0076                     ___awmod@sign:	
   786                           ; 1 bytes @ 0x6
   787                           
   788  0076                     BCD_a_DEC@numBCD:	
   789                           ; 1 bytes @ 0x6
   790                           
   791                           
   792                           ; 2 bytes @ 0x6
   793  0076                     	ds	1
   794  0077                     LCD_Set_Cursor@corrimiento:	
   795  0077                     ___awdiv@quotient:	
   796                           ; 1 bytes @ 0x7
   797                           
   798                           
   799                           ; 2 bytes @ 0x7
   800  0077                     	ds	1
   801  0078                     ??_BCD_a_DEC:	
   802  0078                     ??___lldiv:	
   803                           ; 1 bytes @ 0x8
   804                           
   805                           
   806                           ; 1 bytes @ 0x8
   807  0078                     	ds	1
   808  0079                     ?_display_Uhrzeit:	
   809  0079                     display_Uhrzeit@columna:	
   810                           ; 1 bytes @ 0x9
   811                           
   812  0079                     ___lldiv@quotient:	
   813                           ; 1 bytes @ 0x9
   814                           
   815                           
   816                           ; 4 bytes @ 0x9
   817  0079                     	ds	1
   818  007A                     ??_get_Time:	
   819  007A                     ??_display_Uhrzeit:	
   820                           ; 1 bytes @ 0xA
   821                           
   822                           
   823                           ; 1 bytes @ 0xA
   824  007A                     	ds	3
   825  007D                     ___lldiv@counter:	
   826                           
   827                           ; 1 bytes @ 0xD
   828  007D                     	ds	1
   829  007E                     ??_main:	
   830                           
   831                           	psect	cstackBANK0
   832  0034                     __pcstackBANK0:	
   833                           ; 1 bytes @ 0xE
   834                           
   835  0034                     ?_I2C_Master_Init:	
   836  0034                     display_Uhrzeit@fila:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0034                     I2C_Master_Init@c:	
   840                           ; 1 bytes @ 0x0
   841                           
   842                           
   843                           ; 4 bytes @ 0x0
   844  0034                     	ds	1
   845  0035                     display_Uhrzeit@seg_u:	
   846                           
   847                           ; 1 bytes @ 0x1
   848  0035                     	ds	1
   849  0036                     display_Uhrzeit@seg_d:	
   850                           
   851                           ; 1 bytes @ 0x2
   852  0036                     	ds	1
   853  0037                     display_Uhrzeit@min_u:	
   854                           
   855                           ; 1 bytes @ 0x3
   856  0037                     	ds	1
   857  0038                     ??_I2C_Master_Init:	
   858  0038                     display_Uhrzeit@min_d:	
   859                           ; 1 bytes @ 0x4
   860                           
   861                           
   862                           ; 1 bytes @ 0x4
   863  0038                     	ds	1
   864  0039                     display_Uhrzeit@Uhr_u:	
   865                           
   866                           ; 1 bytes @ 0x5
   867  0039                     	ds	1
   868  003A                     display_Uhrzeit@Uhr_d:	
   869                           
   870                           ; 1 bytes @ 0x6
   871  003A                     	ds	2
   872                           
   873                           	psect	maintext
   874  039D                     __pmaintext:	
   875 ;;
   876 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   877 ;;
   878 ;; *************** function _main *****************
   879 ;; Defined at:
   880 ;;		line 41 in file "main_Master.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;		None
   883 ;; Auto vars:     Size  Location     Type
   884 ;;		None
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      void 
   887 ;; Registers used:
   888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   889 ;; Tracked objects:
   890 ;;		On entry : B00/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   894 ;;      Params:         0       0       0       0       0
   895 ;;      Locals:         0       0       0       0       0
   896 ;;      Temps:          0       0       0       0       0
   897 ;;      Totals:         0       0       0       0       0
   898 ;;Total ram usage:        0 bytes
   899 ;; Hardware stack levels required when called:    3
   900 ;; This function calls:
   901 ;;		_I2C_Master_Init
   902 ;;		_LCD_Set_Cursor
   903 ;;		_LCD_Write_String
   904 ;;		_LCD_clear
   905 ;;		_LCD_init
   906 ;;		_display_Uhrzeit
   907 ;;		_get_Time
   908 ;; This function is called by:
   909 ;;		Startup code after reset
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           
   914                           ;psect for function _main
   915  039D                     _main:	
   916                           
   917                           ;main_Master.c: 42:     TRISD = 0;
   918                           
   919                           ;incstack = 0
   920                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   921  039D  1683               	bsf	3,5	;RP0=1, select bank1
   922  039E  1303               	bcf	3,6	;RP1=0, select bank1
   923  039F  0188               	clrf	8	;volatile
   924                           
   925                           ;main_Master.c: 43:     TRISC0 = 0;
   926  03A0  1007               	bcf	7,0	;volatile
   927                           
   928                           ;main_Master.c: 44:     TRISC1 = 0;
   929  03A1  1087               	bcf	7,1	;volatile
   930                           
   931                           ;main_Master.c: 45:     LCD_init();
   932  03A2  120A  118A  24D9  120A  118A  	fcall	_LCD_init
   933                           
   934                           ;main_Master.c: 46:     LCD_clear();
   935  03A7  120A  118A  2264  120A  118A  	fcall	_LCD_clear
   936                           
   937                           ;main_Master.c: 47:     LCD_Set_Cursor(1,1);
   938  03AC  01F3               	clrf	LCD_Set_Cursor@columna
   939  03AD  0AF3               	incf	LCD_Set_Cursor@columna,f
   940  03AE  3001               	movlw	1
   941  03AF  120A  118A  22E0  120A  118A  	fcall	_LCD_Set_Cursor
   942                           
   943                           ;main_Master.c: 48:     LCD_Write_String("S1:  S2:   S3:");
   944  03B4  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   945  03B5  120A  118A  229B  120A  118A  	fcall	_LCD_Write_String
   946                           
   947                           ;main_Master.c: 49:     I2C_Master_Init(100000);
   948  03BA  3000               	movlw	0
   949  03BB  1283               	bcf	3,5	;RP0=0, select bank0
   950  03BC  1303               	bcf	3,6	;RP1=0, select bank0
   951  03BD  00B7               	movwf	I2C_Master_Init@c+3
   952  03BE  3001               	movlw	1
   953  03BF  00B6               	movwf	I2C_Master_Init@c+2
   954  03C0  3086               	movlw	134
   955  03C1  00B5               	movwf	I2C_Master_Init@c+1
   956  03C2  30A0               	movlw	160
   957  03C3  00B4               	movwf	I2C_Master_Init@c
   958  03C4  120A  118A  2367  120A  118A  	fcall	_I2C_Master_Init
   959  03C9                     l1499:	
   960                           
   961                           ;main_Master.c: 52:         get_Time();
   962  03C9  120A  118A  2600  120A  118A  	fcall	_get_Time
   963                           
   964                           ;main_Master.c: 53:         display_Uhrzeit(2, 1);
   965  03CE  01F9               	clrf	display_Uhrzeit@columna
   966  03CF  0AF9               	incf	display_Uhrzeit@columna,f
   967  03D0  3002               	movlw	2
   968  03D1  120A  118A  2540  120A  118A  	fcall	_display_Uhrzeit
   969  03D6  2BC9               	goto	l1499
   970  03D7                     __end_of_main:	
   971                           
   972                           	psect	text1
   973  0600                     __ptext1:	
   974 ;; *************** function _get_Time *****************
   975 ;; Defined at:
   976 ;;		line 50 in file "RTC.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;		None
   979 ;; Auto vars:     Size  Location     Type
   980 ;;		None
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, status,2, status,0, pclath, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   990 ;;      Params:         0       0       0       0       0
   991 ;;      Locals:         0       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0
   993 ;;      Totals:         0       0       0       0       0
   994 ;;Total ram usage:        0 bytes
   995 ;; Hardware stack levels used:    1
   996 ;; Hardware stack levels required when called:    2
   997 ;; This function calls:
   998 ;;		_BCD_a_DEC
   999 ;;		_I2C_Master_Read
  1000 ;;		_I2C_Master_Start
  1001 ;;		_I2C_Master_Stop
  1002 ;;		_I2C_Master_Write
  1003 ;; This function is called by:
  1004 ;;		_main
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           
  1009                           ;psect for function _get_Time
  1010  0600                     _get_Time:	
  1011                           
  1012                           ;RTC.c: 51:     I2C_Master_Start();
  1013                           
  1014                           ;incstack = 0
  1015                           ; Regs used in _get_Time: [wreg+status,2+status,0+pclath+cstack]
  1016  0600  120A  118A  2219  120A  118A  	fcall	_I2C_Master_Start
  1017                           
  1018                           ;RTC.c: 52:     I2C_Master_Write(0xD0);
  1019  0605  30D0               	movlw	208
  1020  0606  00F0               	movwf	I2C_Master_Write@d
  1021  0607  3000               	movlw	0
  1022  0608  00F1               	movwf	I2C_Master_Write@d+1
  1023  0609  120A  118A  2227  120A  118A  	fcall	_I2C_Master_Write
  1024                           
  1025                           ;RTC.c: 53:     I2C_Master_Write(0);
  1026  060E  3000               	movlw	0
  1027  060F  00F0               	movwf	I2C_Master_Write@d
  1028  0610  00F1               	movwf	I2C_Master_Write@d+1
  1029  0611  120A  118A  2227  120A  118A  	fcall	_I2C_Master_Write
  1030                           
  1031                           ;RTC.c: 54:     I2C_Master_Stop();
  1032  0616  120A  118A  2220  120A  118A  	fcall	_I2C_Master_Stop
  1033                           
  1034                           ;RTC.c: 55:     I2C_Master_Start();
  1035  061B  120A  118A  2219  120A  118A  	fcall	_I2C_Master_Start
  1036                           
  1037                           ;RTC.c: 56:     I2C_Master_Write(0xD1);
  1038  0620  30D1               	movlw	209
  1039  0621  00F0               	movwf	I2C_Master_Write@d
  1040  0622  3000               	movlw	0
  1041  0623  00F1               	movwf	I2C_Master_Write@d+1
  1042  0624  120A  118A  2227  120A  118A  	fcall	_I2C_Master_Write
  1043                           
  1044                           ;RTC.c: 57:     seg = BCD_a_DEC(I2C_Master_Read(0));
  1045  0629  3000               	movlw	0
  1046  062A  00F0               	movwf	I2C_Master_Read@a
  1047  062B  00F1               	movwf	I2C_Master_Read@a+1
  1048  062C  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Read
  1049  0631  0871               	movf	?_I2C_Master_Read+1,w
  1050  0632  00F7               	movwf	BCD_a_DEC@numBCD+1
  1051  0633  0870               	movf	?_I2C_Master_Read,w
  1052  0634  00F6               	movwf	BCD_a_DEC@numBCD
  1053  0635  120A  118A  22BD  120A  118A  	fcall	_BCD_a_DEC
  1054  063A  0877               	movf	?_BCD_a_DEC+1,w
  1055  063B  1283               	bcf	3,5	;RP0=0, select bank0
  1056  063C  1303               	bcf	3,6	;RP1=0, select bank0
  1057  063D  00B3               	movwf	_seg+1
  1058  063E  0876               	movf	?_BCD_a_DEC,w
  1059  063F  00B2               	movwf	_seg
  1060                           
  1061                           ;RTC.c: 58:     I2C_Master_Stop();
  1062  0640  120A  118A  2220  120A  118A  	fcall	_I2C_Master_Stop
  1063                           
  1064                           ;RTC.c: 60:     I2C_Master_Start();
  1065  0645  120A  118A  2219  120A  118A  	fcall	_I2C_Master_Start
  1066                           
  1067                           ;RTC.c: 61:     I2C_Master_Write(0xD0);
  1068  064A  30D0               	movlw	208
  1069  064B  00F0               	movwf	I2C_Master_Write@d
  1070  064C  3000               	movlw	0
  1071  064D  00F1               	movwf	I2C_Master_Write@d+1
  1072  064E  120A  118A  2227  120A  118A  	fcall	_I2C_Master_Write
  1073                           
  1074                           ;RTC.c: 62:     I2C_Master_Write(1);
  1075  0653  3001               	movlw	1
  1076  0654  00F0               	movwf	I2C_Master_Write@d
  1077  0655  3000               	movlw	0
  1078  0656  00F1               	movwf	I2C_Master_Write@d+1
  1079  0657  120A  118A  2227  120A  118A  	fcall	_I2C_Master_Write
  1080                           
  1081                           ;RTC.c: 63:     I2C_Master_Stop();
  1082  065C  120A  118A  2220  120A  118A  	fcall	_I2C_Master_Stop
  1083                           
  1084                           ;RTC.c: 64:     I2C_Master_Start();
  1085  0661  120A  118A  2219  120A  118A  	fcall	_I2C_Master_Start
  1086                           
  1087                           ;RTC.c: 65:     I2C_Master_Write(0xD1);
  1088  0666  30D1               	movlw	209
  1089  0667  00F0               	movwf	I2C_Master_Write@d
  1090  0668  3000               	movlw	0
  1091  0669  00F1               	movwf	I2C_Master_Write@d+1
  1092  066A  120A  118A  2227  120A  118A  	fcall	_I2C_Master_Write
  1093                           
  1094                           ;RTC.c: 66:     min = BCD_a_DEC(I2C_Master_Read(0));
  1095  066F  3000               	movlw	0
  1096  0670  00F0               	movwf	I2C_Master_Read@a
  1097  0671  00F1               	movwf	I2C_Master_Read@a+1
  1098  0672  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Read
  1099  0677  0871               	movf	?_I2C_Master_Read+1,w
  1100  0678  00F7               	movwf	BCD_a_DEC@numBCD+1
  1101  0679  0870               	movf	?_I2C_Master_Read,w
  1102  067A  00F6               	movwf	BCD_a_DEC@numBCD
  1103  067B  120A  118A  22BD  120A  118A  	fcall	_BCD_a_DEC
  1104  0680  0877               	movf	?_BCD_a_DEC+1,w
  1105  0681  1283               	bcf	3,5	;RP0=0, select bank0
  1106  0682  1303               	bcf	3,6	;RP1=0, select bank0
  1107  0683  00AB               	movwf	_min+1
  1108  0684  0876               	movf	?_BCD_a_DEC,w
  1109  0685  00AA               	movwf	_min
  1110                           
  1111                           ;RTC.c: 67:     I2C_Master_Stop();
  1112  0686  120A  118A  2220  120A  118A  	fcall	_I2C_Master_Stop
  1113                           
  1114                           ;RTC.c: 69:     I2C_Master_Start();
  1115  068B  120A  118A  2219  120A  118A  	fcall	_I2C_Master_Start
  1116                           
  1117                           ;RTC.c: 70:     I2C_Master_Write(0xD0);
  1118  0690  30D0               	movlw	208
  1119  0691  00F0               	movwf	I2C_Master_Write@d
  1120  0692  3000               	movlw	0
  1121  0693  00F1               	movwf	I2C_Master_Write@d+1
  1122  0694  120A  118A  2227  120A  118A  	fcall	_I2C_Master_Write
  1123                           
  1124                           ;RTC.c: 71:     I2C_Master_Write(2);
  1125  0699  3002               	movlw	2
  1126  069A  00F0               	movwf	I2C_Master_Write@d
  1127  069B  3000               	movlw	0
  1128  069C  00F1               	movwf	I2C_Master_Write@d+1
  1129  069D  120A  118A  2227  120A  118A  	fcall	_I2C_Master_Write
  1130                           
  1131                           ;RTC.c: 72:     I2C_Master_Stop();
  1132  06A2  120A  118A  2220  120A  118A  	fcall	_I2C_Master_Stop
  1133                           
  1134                           ;RTC.c: 73:     I2C_Master_Start();
  1135  06A7  120A  118A  2219  120A  118A  	fcall	_I2C_Master_Start
  1136                           
  1137                           ;RTC.c: 74:     I2C_Master_Write(0xD1);
  1138  06AC  30D1               	movlw	209
  1139  06AD  00F0               	movwf	I2C_Master_Write@d
  1140  06AE  3000               	movlw	0
  1141  06AF  00F1               	movwf	I2C_Master_Write@d+1
  1142  06B0  120A  118A  2227  120A  118A  	fcall	_I2C_Master_Write
  1143                           
  1144                           ;RTC.c: 75:     hora = BCD_a_DEC(I2C_Master_Read(0));
  1145  06B5  3000               	movlw	0
  1146  06B6  00F0               	movwf	I2C_Master_Read@a
  1147  06B7  00F1               	movwf	I2C_Master_Read@a+1
  1148  06B8  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Read
  1149  06BD  0871               	movf	?_I2C_Master_Read+1,w
  1150  06BE  00F7               	movwf	BCD_a_DEC@numBCD+1
  1151  06BF  0870               	movf	?_I2C_Master_Read,w
  1152  06C0  00F6               	movwf	BCD_a_DEC@numBCD
  1153  06C1  120A  118A  22BD  120A  118A  	fcall	_BCD_a_DEC
  1154  06C6  0877               	movf	?_BCD_a_DEC+1,w
  1155  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1156  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1157  06C9  00A9               	movwf	_hora+1
  1158  06CA  0876               	movf	?_BCD_a_DEC,w
  1159  06CB  00A8               	movwf	_hora
  1160                           
  1161                           ;RTC.c: 76:     I2C_Master_Stop();
  1162  06CC  120A  118A  2220  120A  118A  	fcall	_I2C_Master_Stop
  1163                           
  1164                           ;RTC.c: 78:     I2C_Master_Start();
  1165  06D1  120A  118A  2219  120A  118A  	fcall	_I2C_Master_Start
  1166                           
  1167                           ;RTC.c: 79:     I2C_Master_Write(0xD0);
  1168  06D6  30D0               	movlw	208
  1169  06D7  00F0               	movwf	I2C_Master_Write@d
  1170  06D8  3000               	movlw	0
  1171  06D9  00F1               	movwf	I2C_Master_Write@d+1
  1172  06DA  120A  118A  2227  120A  118A  	fcall	_I2C_Master_Write
  1173                           
  1174                           ;RTC.c: 80:     I2C_Master_Write(3);
  1175  06DF  3003               	movlw	3
  1176  06E0  00F0               	movwf	I2C_Master_Write@d
  1177  06E1  3000               	movlw	0
  1178  06E2  00F1               	movwf	I2C_Master_Write@d+1
  1179  06E3  120A  118A  2227  120A  118A  	fcall	_I2C_Master_Write
  1180                           
  1181                           ;RTC.c: 81:     I2C_Master_Stop();
  1182  06E8  120A  118A  2220  120A  118A  	fcall	_I2C_Master_Stop
  1183                           
  1184                           ;RTC.c: 82:     I2C_Master_Start();
  1185  06ED  120A  118A  2219  120A  118A  	fcall	_I2C_Master_Start
  1186                           
  1187                           ;RTC.c: 83:     I2C_Master_Write(0xD1);
  1188  06F2  30D1               	movlw	209
  1189  06F3  00F0               	movwf	I2C_Master_Write@d
  1190  06F4  3000               	movlw	0
  1191  06F5  00F1               	movwf	I2C_Master_Write@d+1
  1192  06F6  120A  118A  2227  120A  118A  	fcall	_I2C_Master_Write
  1193                           
  1194                           ;RTC.c: 84:     dia = BCD_a_DEC(I2C_Master_Read(0));
  1195  06FB  3000               	movlw	0
  1196  06FC  00F0               	movwf	I2C_Master_Read@a
  1197  06FD  00F1               	movwf	I2C_Master_Read@a+1
  1198  06FE  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Read
  1199  0703  0871               	movf	?_I2C_Master_Read+1,w
  1200  0704  00F7               	movwf	BCD_a_DEC@numBCD+1
  1201  0705  0870               	movf	?_I2C_Master_Read,w
  1202  0706  00F6               	movwf	BCD_a_DEC@numBCD
  1203  0707  120A  118A  22BD  120A  118A  	fcall	_BCD_a_DEC
  1204  070C  0877               	movf	?_BCD_a_DEC+1,w
  1205  070D  1283               	bcf	3,5	;RP0=0, select bank0
  1206  070E  1303               	bcf	3,6	;RP1=0, select bank0
  1207  070F  00A7               	movwf	_dia+1
  1208  0710  0876               	movf	?_BCD_a_DEC,w
  1209  0711  00A6               	movwf	_dia
  1210                           
  1211                           ;RTC.c: 85:     I2C_Master_Stop();
  1212  0712  120A  118A  2220  120A  118A  	fcall	_I2C_Master_Stop
  1213                           
  1214                           ;RTC.c: 87:     I2C_Master_Start();
  1215  0717  120A  118A  2219  120A  118A  	fcall	_I2C_Master_Start
  1216                           
  1217                           ;RTC.c: 88:     I2C_Master_Write(0xD0);
  1218  071C  30D0               	movlw	208
  1219  071D  00F0               	movwf	I2C_Master_Write@d
  1220  071E  3000               	movlw	0
  1221  071F  00F1               	movwf	I2C_Master_Write@d+1
  1222  0720  120A  118A  2227  120A  118A  	fcall	_I2C_Master_Write
  1223                           
  1224                           ;RTC.c: 89:     I2C_Master_Write(4);
  1225  0725  3004               	movlw	4
  1226  0726  00F0               	movwf	I2C_Master_Write@d
  1227  0727  3000               	movlw	0
  1228  0728  00F1               	movwf	I2C_Master_Write@d+1
  1229  0729  120A  118A  2227  120A  118A  	fcall	_I2C_Master_Write
  1230                           
  1231                           ;RTC.c: 90:     I2C_Master_Stop();
  1232  072E  120A  118A  2220  120A  118A  	fcall	_I2C_Master_Stop
  1233                           
  1234                           ;RTC.c: 91:     I2C_Master_Start();
  1235  0733  120A  118A  2219  120A  118A  	fcall	_I2C_Master_Start
  1236                           
  1237                           ;RTC.c: 92:     I2C_Master_Write(0xD1);
  1238  0738  30D1               	movlw	209
  1239  0739  00F0               	movwf	I2C_Master_Write@d
  1240  073A  3000               	movlw	0
  1241  073B  00F1               	movwf	I2C_Master_Write@d+1
  1242  073C  120A  118A  2227  120A  118A  	fcall	_I2C_Master_Write
  1243                           
  1244                           ;RTC.c: 93:     datum = BCD_a_DEC(I2C_Master_Read(0));
  1245  0741  3000               	movlw	0
  1246  0742  00F0               	movwf	I2C_Master_Read@a
  1247  0743  00F1               	movwf	I2C_Master_Read@a+1
  1248  0744  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Read
  1249  0749  0871               	movf	?_I2C_Master_Read+1,w
  1250  074A  00F7               	movwf	BCD_a_DEC@numBCD+1
  1251  074B  0870               	movf	?_I2C_Master_Read,w
  1252  074C  00F6               	movwf	BCD_a_DEC@numBCD
  1253  074D  120A  118A  22BD  120A  118A  	fcall	_BCD_a_DEC
  1254  0752  0877               	movf	?_BCD_a_DEC+1,w
  1255  0753  1283               	bcf	3,5	;RP0=0, select bank0
  1256  0754  1303               	bcf	3,6	;RP1=0, select bank0
  1257  0755  00A5               	movwf	_datum+1
  1258  0756  0876               	movf	?_BCD_a_DEC,w
  1259  0757  00A4               	movwf	_datum
  1260                           
  1261                           ;RTC.c: 94:     I2C_Master_Stop();
  1262  0758  120A  118A  2220  120A  118A  	fcall	_I2C_Master_Stop
  1263                           
  1264                           ;RTC.c: 96:     I2C_Master_Start();
  1265  075D  120A  118A  2219  120A  118A  	fcall	_I2C_Master_Start
  1266                           
  1267                           ;RTC.c: 97:     I2C_Master_Write(0xD0);
  1268  0762  30D0               	movlw	208
  1269  0763  00F0               	movwf	I2C_Master_Write@d
  1270  0764  3000               	movlw	0
  1271  0765  00F1               	movwf	I2C_Master_Write@d+1
  1272  0766  120A  118A  2227  120A  118A  	fcall	_I2C_Master_Write
  1273                           
  1274                           ;RTC.c: 98:     I2C_Master_Write(5);
  1275  076B  3005               	movlw	5
  1276  076C  00F0               	movwf	I2C_Master_Write@d
  1277  076D  3000               	movlw	0
  1278  076E  00F1               	movwf	I2C_Master_Write@d+1
  1279  076F  120A  118A  2227  120A  118A  	fcall	_I2C_Master_Write
  1280                           
  1281                           ;RTC.c: 99:     I2C_Master_Stop();
  1282  0774  120A  118A  2220  120A  118A  	fcall	_I2C_Master_Stop
  1283                           
  1284                           ;RTC.c: 100:     I2C_Master_Start();
  1285  0779  120A  118A  2219  120A  118A  	fcall	_I2C_Master_Start
  1286                           
  1287                           ;RTC.c: 101:     I2C_Master_Write(0xD1);
  1288  077E  30D1               	movlw	209
  1289  077F  00F0               	movwf	I2C_Master_Write@d
  1290  0780  3000               	movlw	0
  1291  0781  00F1               	movwf	I2C_Master_Write@d+1
  1292  0782  120A  118A  2227  120A  118A  	fcall	_I2C_Master_Write
  1293                           
  1294                           ;RTC.c: 102:     mes = BCD_a_DEC(I2C_Master_Read(0));
  1295  0787  3000               	movlw	0
  1296  0788  00F0               	movwf	I2C_Master_Read@a
  1297  0789  00F1               	movwf	I2C_Master_Read@a+1
  1298  078A  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Read
  1299  078F  0871               	movf	?_I2C_Master_Read+1,w
  1300  0790  00F7               	movwf	BCD_a_DEC@numBCD+1
  1301  0791  0870               	movf	?_I2C_Master_Read,w
  1302  0792  00F6               	movwf	BCD_a_DEC@numBCD
  1303  0793  120A  118A  22BD  120A  118A  	fcall	_BCD_a_DEC
  1304  0798  0877               	movf	?_BCD_a_DEC+1,w
  1305  0799  1283               	bcf	3,5	;RP0=0, select bank0
  1306  079A  1303               	bcf	3,6	;RP1=0, select bank0
  1307  079B  00A3               	movwf	_mes+1
  1308  079C  0876               	movf	?_BCD_a_DEC,w
  1309  079D  00A2               	movwf	_mes
  1310                           
  1311                           ;RTC.c: 103:     I2C_Master_Stop();
  1312  079E  120A  118A  2220  120A  118A  	fcall	_I2C_Master_Stop
  1313                           
  1314                           ;RTC.c: 105:     I2C_Master_Start();
  1315  07A3  120A  118A  2219  120A  118A  	fcall	_I2C_Master_Start
  1316                           
  1317                           ;RTC.c: 106:     I2C_Master_Write(0xD0);
  1318  07A8  30D0               	movlw	208
  1319  07A9  00F0               	movwf	I2C_Master_Write@d
  1320  07AA  3000               	movlw	0
  1321  07AB  00F1               	movwf	I2C_Master_Write@d+1
  1322  07AC  120A  118A  2227  120A  118A  	fcall	_I2C_Master_Write
  1323                           
  1324                           ;RTC.c: 107:     I2C_Master_Write(6);
  1325  07B1  3006               	movlw	6
  1326  07B2  00F0               	movwf	I2C_Master_Write@d
  1327  07B3  3000               	movlw	0
  1328  07B4  00F1               	movwf	I2C_Master_Write@d+1
  1329  07B5  120A  118A  2227  120A  118A  	fcall	_I2C_Master_Write
  1330                           
  1331                           ;RTC.c: 108:     I2C_Master_Stop();
  1332  07BA  120A  118A  2220  120A  118A  	fcall	_I2C_Master_Stop
  1333                           
  1334                           ;RTC.c: 109:     I2C_Master_Start();
  1335  07BF  120A  118A  2219  120A  118A  	fcall	_I2C_Master_Start
  1336                           
  1337                           ;RTC.c: 110:     I2C_Master_Write(0xD1);
  1338  07C4  30D1               	movlw	209
  1339  07C5  00F0               	movwf	I2C_Master_Write@d
  1340  07C6  3000               	movlw	0
  1341  07C7  00F1               	movwf	I2C_Master_Write@d+1
  1342  07C8  120A  118A  2227  120A  118A  	fcall	_I2C_Master_Write
  1343                           
  1344                           ;RTC.c: 111:     jahr = BCD_a_DEC(I2C_Master_Read(0));
  1345  07CD  3000               	movlw	0
  1346  07CE  00F0               	movwf	I2C_Master_Read@a
  1347  07CF  00F1               	movwf	I2C_Master_Read@a+1
  1348  07D0  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Read
  1349  07D5  0871               	movf	?_I2C_Master_Read+1,w
  1350  07D6  00F7               	movwf	BCD_a_DEC@numBCD+1
  1351  07D7  0870               	movf	?_I2C_Master_Read,w
  1352  07D8  00F6               	movwf	BCD_a_DEC@numBCD
  1353  07D9  120A  118A  22BD  120A  118A  	fcall	_BCD_a_DEC
  1354  07DE  0877               	movf	?_BCD_a_DEC+1,w
  1355  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  1356  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  1357  07E1  00A1               	movwf	_jahr+1
  1358  07E2  0876               	movf	?_BCD_a_DEC,w
  1359  07E3  00A0               	movwf	_jahr
  1360                           
  1361                           ;RTC.c: 112:     I2C_Master_Stop();
  1362  07E4  120A  118A  2220   	fcall	_I2C_Master_Stop
  1363  07E7  0008               	return
  1364  07E8                     __end_of_get_Time:	
  1365                           
  1366                           	psect	text2
  1367  0227                     __ptext2:	
  1368 ;; *************** function _I2C_Master_Write *****************
  1369 ;; Defined at:
  1370 ;;		line 65 in file "I2C.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  d               2    0[COMMON] unsigned int 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;		None
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		wreg, status,2, status,0, pclath, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1384 ;;      Params:         2       0       0       0       0
  1385 ;;      Locals:         0       0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0
  1387 ;;      Totals:         2       0       0       0       0
  1388 ;;Total ram usage:        2 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:    1
  1391 ;; This function calls:
  1392 ;;		_I2C_Master_Wait
  1393 ;; This function is called by:
  1394 ;;		_get_Time
  1395 ;;		_Zeit_Datum_Set
  1396 ;;		_get_Temp
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           
  1401                           ;psect for function _I2C_Master_Write
  1402  0227                     _I2C_Master_Write:	
  1403                           
  1404                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  1405                           
  1406                           ;incstack = 0
  1407                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1408  0227  120A  118A  222F   	fcall	_I2C_Master_Wait
  1409                           
  1410                           ;I2C.c: 68:     SSPBUF = d;
  1411  022A  0870               	movf	I2C_Master_Write@d,w
  1412  022B  1283               	bcf	3,5	;RP0=0, select bank0
  1413  022C  1303               	bcf	3,6	;RP1=0, select bank0
  1414  022D  0093               	movwf	19	;volatile
  1415  022E  0008               	return
  1416  022F                     __end_of_I2C_Master_Write:	
  1417                           
  1418                           	psect	text3
  1419  0220                     __ptext3:	
  1420 ;; *************** function _I2C_Master_Stop *****************
  1421 ;; Defined at:
  1422 ;;		line 55 in file "I2C.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, status,2, status,0, pclath, cstack
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1436 ;;      Params:         0       0       0       0       0
  1437 ;;      Locals:         0       0       0       0       0
  1438 ;;      Temps:          0       0       0       0       0
  1439 ;;      Totals:         0       0       0       0       0
  1440 ;;Total ram usage:        0 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:    1
  1443 ;; This function calls:
  1444 ;;		_I2C_Master_Wait
  1445 ;; This function is called by:
  1446 ;;		_get_Time
  1447 ;;		_Zeit_Datum_Set
  1448 ;;		_get_Temp
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           
  1453                           ;psect for function _I2C_Master_Stop
  1454  0220                     _I2C_Master_Stop:	
  1455                           
  1456                           ;I2C.c: 57:     I2C_Master_Wait();
  1457                           
  1458                           ;incstack = 0
  1459                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1460  0220  120A  118A  222F   	fcall	_I2C_Master_Wait
  1461                           
  1462                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  1463  0223  1683               	bsf	3,5	;RP0=1, select bank1
  1464  0224  1303               	bcf	3,6	;RP1=0, select bank1
  1465  0225  1511               	bsf	17,2	;volatile
  1466  0226  0008               	return
  1467  0227                     __end_of_I2C_Master_Stop:	
  1468                           
  1469                           	psect	text4
  1470  0219                     __ptext4:	
  1471 ;; *************** function _I2C_Master_Start *****************
  1472 ;; Defined at:
  1473 ;;		line 39 in file "I2C.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;		None
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;		None
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  1    wreg      void 
  1480 ;; Registers used:
  1481 ;;		wreg, status,2, status,0, pclath, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1487 ;;      Params:         0       0       0       0       0
  1488 ;;      Locals:         0       0       0       0       0
  1489 ;;      Temps:          0       0       0       0       0
  1490 ;;      Totals:         0       0       0       0       0
  1491 ;;Total ram usage:        0 bytes
  1492 ;; Hardware stack levels used:    1
  1493 ;; Hardware stack levels required when called:    1
  1494 ;; This function calls:
  1495 ;;		_I2C_Master_Wait
  1496 ;; This function is called by:
  1497 ;;		_get_Time
  1498 ;;		_Zeit_Datum_Set
  1499 ;;		_get_Temp
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           
  1504                           ;psect for function _I2C_Master_Start
  1505  0219                     _I2C_Master_Start:	
  1506                           
  1507                           ;I2C.c: 41:     I2C_Master_Wait();
  1508                           
  1509                           ;incstack = 0
  1510                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1511  0219  120A  118A  222F   	fcall	_I2C_Master_Wait
  1512                           
  1513                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  1514  021C  1683               	bsf	3,5	;RP0=1, select bank1
  1515  021D  1303               	bcf	3,6	;RP1=0, select bank1
  1516  021E  1411               	bsf	17,0	;volatile
  1517  021F  0008               	return
  1518  0220                     __end_of_I2C_Master_Start:	
  1519                           
  1520                           	psect	text5
  1521  030C                     __ptext5:	
  1522 ;; *************** function _I2C_Master_Read *****************
  1523 ;; Defined at:
  1524 ;;		line 74 in file "I2C.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;  a               2    0[COMMON] unsigned short 
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  temp            2    4[COMMON] unsigned short 
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  2    0[COMMON] unsigned short 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0, pclath, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1538 ;;      Params:         2       0       0       0       0
  1539 ;;      Locals:         2       0       0       0       0
  1540 ;;      Temps:          2       0       0       0       0
  1541 ;;      Totals:         6       0       0       0       0
  1542 ;;Total ram usage:        6 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:    1
  1545 ;; This function calls:
  1546 ;;		_I2C_Master_Wait
  1547 ;; This function is called by:
  1548 ;;		_get_Time
  1549 ;;		_get_Temp
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           
  1554                           ;psect for function _I2C_Master_Read
  1555  030C                     _I2C_Master_Read:	
  1556                           
  1557                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  1558                           
  1559                           ;incstack = 0
  1560                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  1561  030C  120A  118A  222F  120A  118A  	fcall	_I2C_Master_Wait
  1562                           
  1563                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  1564  0311  1683               	bsf	3,5	;RP0=1, select bank1
  1565  0312  1303               	bcf	3,6	;RP1=0, select bank1
  1566  0313  1591               	bsf	17,3	;volatile
  1567                           
  1568                           ;I2C.c: 79:     I2C_Master_Wait();
  1569  0314  120A  118A  222F  120A  118A  	fcall	_I2C_Master_Wait
  1570                           
  1571                           ;I2C.c: 80:     temp = SSPBUF;
  1572  0319  1283               	bcf	3,5	;RP0=0, select bank0
  1573  031A  1303               	bcf	3,6	;RP1=0, select bank0
  1574  031B  0813               	movf	19,w	;volatile
  1575  031C  00F2               	movwf	??_I2C_Master_Read
  1576  031D  01F3               	clrf	??_I2C_Master_Read+1
  1577  031E  0872               	movf	??_I2C_Master_Read,w
  1578  031F  00F4               	movwf	I2C_Master_Read@temp
  1579  0320  0873               	movf	??_I2C_Master_Read+1,w
  1580  0321  00F5               	movwf	I2C_Master_Read@temp+1
  1581                           
  1582                           ;I2C.c: 81:     I2C_Master_Wait();
  1583  0322  120A  118A  222F  120A  118A  	fcall	_I2C_Master_Wait
  1584                           
  1585                           ;I2C.c: 82:     if(a == 1){
  1586  0327  0370               	decf	I2C_Master_Read@a,w
  1587  0328  0471               	iorwf	I2C_Master_Read@a+1,w
  1588  0329  1D03               	btfss	3,2
  1589  032A  2B2F               	goto	l134
  1590                           
  1591                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  1592  032B  1683               	bsf	3,5	;RP0=1, select bank1
  1593  032C  1303               	bcf	3,6	;RP1=0, select bank1
  1594  032D  1291               	bcf	17,5	;volatile
  1595                           
  1596                           ;I2C.c: 84:     }else{
  1597  032E  2B32               	goto	l135
  1598  032F                     l134:	
  1599                           
  1600                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  1601  032F  1683               	bsf	3,5	;RP0=1, select bank1
  1602  0330  1303               	bcf	3,6	;RP1=0, select bank1
  1603  0331  1691               	bsf	17,5	;volatile
  1604  0332                     l135:	
  1605                           ;I2C.c: 86:     }
  1606                           
  1607                           
  1608                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  1609  0332  1611               	bsf	17,4	;volatile
  1610                           
  1611                           ;I2C.c: 88:     return temp;
  1612  0333  0875               	movf	I2C_Master_Read@temp+1,w
  1613  0334  00F1               	movwf	?_I2C_Master_Read+1
  1614  0335  0874               	movf	I2C_Master_Read@temp,w
  1615  0336  00F0               	movwf	?_I2C_Master_Read
  1616  0337  0008               	return
  1617  0338                     __end_of_I2C_Master_Read:	
  1618                           
  1619                           	psect	text6
  1620  022F                     __ptext6:	
  1621 ;; *************** function _I2C_Master_Wait *****************
  1622 ;; Defined at:
  1623 ;;		line 32 in file "I2C.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;		None
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;		None
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg, status,2
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1637 ;;      Params:         0       0       0       0       0
  1638 ;;      Locals:         0       0       0       0       0
  1639 ;;      Temps:          0       0       0       0       0
  1640 ;;      Totals:         0       0       0       0       0
  1641 ;;Total ram usage:        0 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_I2C_Master_Start
  1647 ;;		_I2C_Master_Stop
  1648 ;;		_I2C_Master_Write
  1649 ;;		_I2C_Master_Read
  1650 ;;		_I2C_Master_RepeatedStart
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           
  1655                           ;psect for function _I2C_Master_Wait
  1656  022F                     _I2C_Master_Wait:	
  1657  022F                     l116:	
  1658                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1659                           
  1660                           ;incstack = 0
  1661                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1662                           
  1663  022F  1683               	bsf	3,5	;RP0=1, select bank1
  1664  0230  1303               	bcf	3,6	;RP1=0, select bank1
  1665  0231  1914               	btfsc	20,2	;volatile
  1666  0232  2A2F               	goto	l116
  1667  0233  0811               	movf	17,w	;volatile
  1668  0234  391F               	andlw	31
  1669  0235  1903               	btfsc	3,2
  1670  0236  0008               	return
  1671  0237  2A2F               	goto	l116
  1672  0238                     __end_of_I2C_Master_Wait:	
  1673                           
  1674                           	psect	text7
  1675  02BD                     __ptext7:	
  1676 ;; *************** function _BCD_a_DEC *****************
  1677 ;; Defined at:
  1678 ;;		line 27 in file "RTC.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;  numBCD          2    6[COMMON] int 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  2    6[COMMON] int 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2, status,0, pclath, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1692 ;;      Params:         2       0       0       0       0
  1693 ;;      Locals:         0       0       0       0       0
  1694 ;;      Temps:          2       0       0       0       0
  1695 ;;      Totals:         4       0       0       0       0
  1696 ;;Total ram usage:        4 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    1
  1699 ;; This function calls:
  1700 ;;		___wmul
  1701 ;; This function is called by:
  1702 ;;		_get_Time
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           
  1707                           ;psect for function _BCD_a_DEC
  1708  02BD                     _BCD_a_DEC:	
  1709                           
  1710                           ;RTC.c: 28:     return (numBCD >> 4) * 10 + (numBCD & 0x0F);
  1711                           
  1712                           ;incstack = 0
  1713                           ; Regs used in _BCD_a_DEC: [wreg+status,2+status,0+pclath+cstack]
  1714  02BD  300F               	movlw	15
  1715  02BE  0576               	andwf	BCD_a_DEC@numBCD,w
  1716  02BF  00F8               	movwf	??_BCD_a_DEC
  1717  02C0  3000               	movlw	0
  1718  02C1  0577               	andwf	BCD_a_DEC@numBCD+1,w
  1719  02C2  00F9               	movwf	??_BCD_a_DEC+1
  1720  02C3  0E76               	swapf	BCD_a_DEC@numBCD,w
  1721  02C4  390F               	andlw	15
  1722  02C5  00F0               	movwf	___wmul@multiplier
  1723  02C6  0E77               	swapf	BCD_a_DEC@numBCD+1,w
  1724  02C7  39F0               	andlw	240
  1725  02C8  04F0               	iorwf	___wmul@multiplier,f
  1726  02C9  0E77               	swapf	BCD_a_DEC@numBCD+1,w
  1727  02CA  390F               	andlw	15
  1728  02CB  00F1               	movwf	___wmul@multiplier+1
  1729  02CC  30F0               	movlw	240
  1730  02CD  1DF1               	btfss	___wmul@multiplier+1,3
  1731  02CE  3000               	movlw	0
  1732  02CF  04F1               	iorwf	___wmul@multiplier+1,f
  1733  02D0  300A               	movlw	10
  1734  02D1  00F2               	movwf	___wmul@multiplicand
  1735  02D2  3000               	movlw	0
  1736  02D3  00F3               	movwf	___wmul@multiplicand+1
  1737  02D4  120A  118A  227A   	fcall	___wmul
  1738  02D7  0878               	movf	??_BCD_a_DEC,w
  1739  02D8  0770               	addwf	?___wmul,w
  1740  02D9  00F6               	movwf	?_BCD_a_DEC
  1741  02DA  0879               	movf	??_BCD_a_DEC+1,w
  1742  02DB  1803               	skipnc
  1743  02DC  0A79               	incf	??_BCD_a_DEC+1,w
  1744  02DD  0771               	addwf	?___wmul+1,w
  1745  02DE  00F7               	movwf	?_BCD_a_DEC+1
  1746  02DF  0008               	return
  1747  02E0                     __end_of_BCD_a_DEC:	
  1748                           
  1749                           	psect	text8
  1750  027A                     __ptext8:	
  1751 ;; *************** function ___wmul *****************
  1752 ;; Defined at:
  1753 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  multiplier      2    0[COMMON] unsigned int 
  1756 ;;  multiplicand    2    2[COMMON] unsigned int 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  product         2    4[COMMON] unsigned int 
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  2    0[COMMON] unsigned int 
  1761 ;; Registers used:
  1762 ;;		wreg, status,2, status,0
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1768 ;;      Params:         4       0       0       0       0
  1769 ;;      Locals:         2       0       0       0       0
  1770 ;;      Temps:          0       0       0       0       0
  1771 ;;      Totals:         6       0       0       0       0
  1772 ;;Total ram usage:        6 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_BCD_a_DEC
  1778 ;;		_uint_to_array
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           
  1783                           ;psect for function ___wmul
  1784  027A                     ___wmul:	
  1785                           
  1786                           ;incstack = 0
  1787                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1788  027A  01F4               	clrf	___wmul@product
  1789  027B  01F5               	clrf	___wmul@product+1
  1790  027C                     l1233:	
  1791  027C  1C70               	btfss	___wmul@multiplier,0
  1792  027D  2A84               	goto	l305
  1793  027E  0872               	movf	___wmul@multiplicand,w
  1794  027F  07F4               	addwf	___wmul@product,f
  1795  0280  1803               	skipnc
  1796  0281  0AF5               	incf	___wmul@product+1,f
  1797  0282  0873               	movf	___wmul@multiplicand+1,w
  1798  0283  07F5               	addwf	___wmul@product+1,f
  1799  0284                     l305:	
  1800  0284  3001               	movlw	1
  1801  0285                     u425:	
  1802  0285  1003               	clrc
  1803  0286  0DF2               	rlf	___wmul@multiplicand,f
  1804  0287  0DF3               	rlf	___wmul@multiplicand+1,f
  1805  0288  3EFF               	addlw	-1
  1806  0289  1D03               	skipz
  1807  028A  2A85               	goto	u425
  1808  028B  3001               	movlw	1
  1809  028C                     u435:	
  1810  028C  1003               	clrc
  1811  028D  0CF1               	rrf	___wmul@multiplier+1,f
  1812  028E  0CF0               	rrf	___wmul@multiplier,f
  1813  028F  3EFF               	addlw	-1
  1814  0290  1D03               	skipz
  1815  0291  2A8C               	goto	u435
  1816  0292  0870               	movf	___wmul@multiplier,w
  1817  0293  0471               	iorwf	___wmul@multiplier+1,w
  1818  0294  1D03               	btfss	3,2
  1819  0295  2A7C               	goto	l1233
  1820  0296  0875               	movf	___wmul@product+1,w
  1821  0297  00F1               	movwf	?___wmul+1
  1822  0298  0874               	movf	___wmul@product,w
  1823  0299  00F0               	movwf	?___wmul
  1824  029A  0008               	return
  1825  029B                     __end_of___wmul:	
  1826                           
  1827                           	psect	text9
  1828  0540                     __ptext9:	
  1829 ;; *************** function _display_Uhrzeit *****************
  1830 ;; Defined at:
  1831 ;;		line 59 in file "main_Master.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  fila            1    wreg     unsigned char 
  1834 ;;  columna         1    9[COMMON] unsigned char 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  fila            1    0[BANK0 ] unsigned char 
  1837 ;;  Uhr_d           1    6[BANK0 ] unsigned char 
  1838 ;;  Uhr_u           1    5[BANK0 ] unsigned char 
  1839 ;;  min_d           1    4[BANK0 ] unsigned char 
  1840 ;;  min_u           1    3[BANK0 ] unsigned char 
  1841 ;;  seg_d           1    2[BANK0 ] unsigned char 
  1842 ;;  seg_u           1    1[BANK0 ] unsigned char 
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1852 ;;      Params:         1       0       0       0       0
  1853 ;;      Locals:         0       7       0       0       0
  1854 ;;      Temps:          1       0       0       0       0
  1855 ;;      Totals:         2       7       0       0       0
  1856 ;;Total ram usage:        9 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:    2
  1859 ;; This function calls:
  1860 ;;		_LCD_Set_Cursor
  1861 ;;		_LCD_Write_Character
  1862 ;;		___awdiv
  1863 ;;		___awmod
  1864 ;; This function is called by:
  1865 ;;		_main
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           
  1870                           ;psect for function _display_Uhrzeit
  1871  0540                     _display_Uhrzeit:	
  1872                           
  1873                           ;incstack = 0
  1874                           ; Regs used in _display_Uhrzeit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1875                           ;display_Uhrzeit@fila stored from wreg
  1876  0540  1283               	bcf	3,5	;RP0=0, select bank0
  1877  0541  1303               	bcf	3,6	;RP1=0, select bank0
  1878  0542  00B4               	movwf	display_Uhrzeit@fila
  1879                           
  1880                           ;main_Master.c: 60:     char seg_u = seg%10;
  1881  0543  300A               	movlw	10
  1882  0544  00F0               	movwf	___awmod@divisor
  1883  0545  3000               	movlw	0
  1884  0546  00F1               	movwf	___awmod@divisor+1
  1885  0547  0833               	movf	_seg+1,w
  1886  0548  00F3               	movwf	___awmod@dividend+1
  1887  0549  0832               	movf	_seg,w
  1888  054A  00F2               	movwf	___awmod@dividend
  1889  054B  120A  118A  23D7  120A  118A  	fcall	___awmod
  1890  0550  0870               	movf	?___awmod,w
  1891  0551  00FA               	movwf	??_display_Uhrzeit
  1892  0552  087A               	movf	??_display_Uhrzeit,w
  1893  0553  1283               	bcf	3,5	;RP0=0, select bank0
  1894  0554  1303               	bcf	3,6	;RP1=0, select bank0
  1895  0555  00B5               	movwf	display_Uhrzeit@seg_u
  1896                           
  1897                           ;main_Master.c: 61:     char seg_d = seg/10;
  1898  0556  300A               	movlw	10
  1899  0557  00F0               	movwf	___awdiv@divisor
  1900  0558  3000               	movlw	0
  1901  0559  00F1               	movwf	___awdiv@divisor+1
  1902  055A  0833               	movf	_seg+1,w
  1903  055B  00F3               	movwf	___awdiv@dividend+1
  1904  055C  0832               	movf	_seg,w
  1905  055D  00F2               	movwf	___awdiv@dividend
  1906  055E  120A  118A  2422  120A  118A  	fcall	___awdiv
  1907  0563  0870               	movf	?___awdiv,w
  1908  0564  00FA               	movwf	??_display_Uhrzeit
  1909  0565  087A               	movf	??_display_Uhrzeit,w
  1910  0566  1283               	bcf	3,5	;RP0=0, select bank0
  1911  0567  1303               	bcf	3,6	;RP1=0, select bank0
  1912  0568  00B6               	movwf	display_Uhrzeit@seg_d
  1913                           
  1914                           ;main_Master.c: 62:     char min_u = min%10;
  1915  0569  300A               	movlw	10
  1916  056A  00F0               	movwf	___awmod@divisor
  1917  056B  3000               	movlw	0
  1918  056C  00F1               	movwf	___awmod@divisor+1
  1919  056D  082B               	movf	_min+1,w
  1920  056E  00F3               	movwf	___awmod@dividend+1
  1921  056F  082A               	movf	_min,w
  1922  0570  00F2               	movwf	___awmod@dividend
  1923  0571  120A  118A  23D7  120A  118A  	fcall	___awmod
  1924  0576  0870               	movf	?___awmod,w
  1925  0577  00FA               	movwf	??_display_Uhrzeit
  1926  0578  087A               	movf	??_display_Uhrzeit,w
  1927  0579  1283               	bcf	3,5	;RP0=0, select bank0
  1928  057A  1303               	bcf	3,6	;RP1=0, select bank0
  1929  057B  00B7               	movwf	display_Uhrzeit@min_u
  1930                           
  1931                           ;main_Master.c: 63:     char min_d = min/10;
  1932  057C  300A               	movlw	10
  1933  057D  00F0               	movwf	___awdiv@divisor
  1934  057E  3000               	movlw	0
  1935  057F  00F1               	movwf	___awdiv@divisor+1
  1936  0580  082B               	movf	_min+1,w
  1937  0581  00F3               	movwf	___awdiv@dividend+1
  1938  0582  082A               	movf	_min,w
  1939  0583  00F2               	movwf	___awdiv@dividend
  1940  0584  120A  118A  2422  120A  118A  	fcall	___awdiv
  1941  0589  0870               	movf	?___awdiv,w
  1942  058A  00FA               	movwf	??_display_Uhrzeit
  1943  058B  087A               	movf	??_display_Uhrzeit,w
  1944  058C  1283               	bcf	3,5	;RP0=0, select bank0
  1945  058D  1303               	bcf	3,6	;RP1=0, select bank0
  1946  058E  00B8               	movwf	display_Uhrzeit@min_d
  1947                           
  1948                           ;main_Master.c: 64:     char Uhr_u = hora%10;
  1949  058F  300A               	movlw	10
  1950  0590  00F0               	movwf	___awmod@divisor
  1951  0591  3000               	movlw	0
  1952  0592  00F1               	movwf	___awmod@divisor+1
  1953  0593  0829               	movf	_hora+1,w
  1954  0594  00F3               	movwf	___awmod@dividend+1
  1955  0595  0828               	movf	_hora,w
  1956  0596  00F2               	movwf	___awmod@dividend
  1957  0597  120A  118A  23D7  120A  118A  	fcall	___awmod
  1958  059C  0870               	movf	?___awmod,w
  1959  059D  00FA               	movwf	??_display_Uhrzeit
  1960  059E  087A               	movf	??_display_Uhrzeit,w
  1961  059F  1283               	bcf	3,5	;RP0=0, select bank0
  1962  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  1963  05A1  00B9               	movwf	display_Uhrzeit@Uhr_u
  1964                           
  1965                           ;main_Master.c: 65:     char Uhr_d = hora/10;
  1966  05A2  300A               	movlw	10
  1967  05A3  00F0               	movwf	___awdiv@divisor
  1968  05A4  3000               	movlw	0
  1969  05A5  00F1               	movwf	___awdiv@divisor+1
  1970  05A6  0829               	movf	_hora+1,w
  1971  05A7  00F3               	movwf	___awdiv@dividend+1
  1972  05A8  0828               	movf	_hora,w
  1973  05A9  00F2               	movwf	___awdiv@dividend
  1974  05AA  120A  118A  2422  120A  118A  	fcall	___awdiv
  1975  05AF  0870               	movf	?___awdiv,w
  1976  05B0  00FA               	movwf	??_display_Uhrzeit
  1977  05B1  087A               	movf	??_display_Uhrzeit,w
  1978  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  1979  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  1980  05B4  00BA               	movwf	display_Uhrzeit@Uhr_d
  1981                           
  1982                           ;main_Master.c: 67:     LCD_Set_Cursor(fila, columna);
  1983  05B5  0879               	movf	display_Uhrzeit@columna,w
  1984  05B6  00FA               	movwf	??_display_Uhrzeit
  1985  05B7  087A               	movf	??_display_Uhrzeit,w
  1986  05B8  00F3               	movwf	LCD_Set_Cursor@columna
  1987  05B9  0834               	movf	display_Uhrzeit@fila,w
  1988  05BA  120A  118A  22E0  120A  118A  	fcall	_LCD_Set_Cursor
  1989                           
  1990                           ;main_Master.c: 68:     LCD_Write_Character(Uhr_d + '0');
  1991  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  1992  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  1993  05C1  083A               	movf	display_Uhrzeit@Uhr_d,w
  1994  05C2  3E30               	addlw	48
  1995  05C3  120A  118A  2244  120A  118A  	fcall	_LCD_Write_Character
  1996                           
  1997                           ;main_Master.c: 69:     LCD_Write_Character(Uhr_u + '0');
  1998  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1999  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  2000  05CA  0839               	movf	display_Uhrzeit@Uhr_u,w
  2001  05CB  3E30               	addlw	48
  2002  05CC  120A  118A  2244  120A  118A  	fcall	_LCD_Write_Character
  2003                           
  2004                           ;main_Master.c: 70:     LCD_Write_Character(':');
  2005  05D1  303A               	movlw	58
  2006  05D2  120A  118A  2244  120A  118A  	fcall	_LCD_Write_Character
  2007                           
  2008                           ;main_Master.c: 71:     LCD_Write_Character(min_d + '0');
  2009  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  2010  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  2011  05D9  0838               	movf	display_Uhrzeit@min_d,w
  2012  05DA  3E30               	addlw	48
  2013  05DB  120A  118A  2244  120A  118A  	fcall	_LCD_Write_Character
  2014                           
  2015                           ;main_Master.c: 72:     LCD_Write_Character(min_u + '0');
  2016  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  2017  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  2018  05E2  0837               	movf	display_Uhrzeit@min_u,w
  2019  05E3  3E30               	addlw	48
  2020  05E4  120A  118A  2244  120A  118A  	fcall	_LCD_Write_Character
  2021                           
  2022                           ;main_Master.c: 73:     LCD_Write_Character(':');
  2023  05E9  303A               	movlw	58
  2024  05EA  120A  118A  2244  120A  118A  	fcall	_LCD_Write_Character
  2025                           
  2026                           ;main_Master.c: 74:     LCD_Write_Character(seg_d + '0');
  2027  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  2028  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  2029  05F1  0836               	movf	display_Uhrzeit@seg_d,w
  2030  05F2  3E30               	addlw	48
  2031  05F3  120A  118A  2244  120A  118A  	fcall	_LCD_Write_Character
  2032                           
  2033                           ;main_Master.c: 75:     LCD_Write_Character(seg_u + '0');
  2034  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  2035  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  2036  05FA  0835               	movf	display_Uhrzeit@seg_u,w
  2037  05FB  3E30               	addlw	48
  2038  05FC  120A  118A  2244   	fcall	_LCD_Write_Character
  2039  05FF  0008               	return
  2040  0600                     __end_of_display_Uhrzeit:	
  2041                           
  2042                           	psect	text10
  2043  03D7                     __ptext10:	
  2044 ;; *************** function ___awmod *****************
  2045 ;; Defined at:
  2046 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  divisor         2    0[COMMON] int 
  2049 ;;  dividend        2    2[COMMON] int 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  sign            1    6[COMMON] unsigned char 
  2052 ;;  counter         1    5[COMMON] unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  2    0[COMMON] int 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2062 ;;      Params:         4       0       0       0       0
  2063 ;;      Locals:         2       0       0       0       0
  2064 ;;      Temps:          1       0       0       0       0
  2065 ;;      Totals:         7       0       0       0       0
  2066 ;;Total ram usage:        7 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; This function calls:
  2069 ;;		Nothing
  2070 ;; This function is called by:
  2071 ;;		_display_Uhrzeit
  2072 ;;		_DEC_a_BCD
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           
  2077                           ;psect for function ___awmod
  2078  03D7                     ___awmod:	
  2079                           
  2080                           ;incstack = 0
  2081                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2082  03D7  01F6               	clrf	___awmod@sign
  2083  03D8  1FF3               	btfss	___awmod@dividend+1,7
  2084  03D9  2BE1               	goto	l1379
  2085  03DA  09F2               	comf	___awmod@dividend,f
  2086  03DB  09F3               	comf	___awmod@dividend+1,f
  2087  03DC  0AF2               	incf	___awmod@dividend,f
  2088  03DD  1903               	skipnz
  2089  03DE  0AF3               	incf	___awmod@dividend+1,f
  2090  03DF  01F6               	clrf	___awmod@sign
  2091  03E0  0AF6               	incf	___awmod@sign,f
  2092  03E1                     l1379:	
  2093  03E1  1FF1               	btfss	___awmod@divisor+1,7
  2094  03E2  2BE8               	goto	l1383
  2095  03E3  09F0               	comf	___awmod@divisor,f
  2096  03E4  09F1               	comf	___awmod@divisor+1,f
  2097  03E5  0AF0               	incf	___awmod@divisor,f
  2098  03E6  1903               	skipnz
  2099  03E7  0AF1               	incf	___awmod@divisor+1,f
  2100  03E8                     l1383:	
  2101  03E8  0870               	movf	___awmod@divisor,w
  2102  03E9  0471               	iorwf	___awmod@divisor+1,w
  2103  03EA  1903               	btfsc	3,2
  2104  03EB  2C15               	goto	l1401
  2105  03EC  01F5               	clrf	___awmod@counter
  2106  03ED  0AF5               	incf	___awmod@counter,f
  2107  03EE                     l1391:	
  2108  03EE  1BF1               	btfsc	___awmod@divisor+1,7
  2109  03EF  2BFC               	goto	l1393
  2110  03F0  3001               	movlw	1
  2111  03F1                     u665:	
  2112  03F1  1003               	clrc
  2113  03F2  0DF0               	rlf	___awmod@divisor,f
  2114  03F3  0DF1               	rlf	___awmod@divisor+1,f
  2115  03F4  3EFF               	addlw	-1
  2116  03F5  1D03               	skipz
  2117  03F6  2BF1               	goto	u665
  2118  03F7  3001               	movlw	1
  2119  03F8  00F4               	movwf	??___awmod
  2120  03F9  0874               	movf	??___awmod,w
  2121  03FA  07F5               	addwf	___awmod@counter,f
  2122  03FB  2BEE               	goto	l1391
  2123  03FC                     l1393:	
  2124  03FC  0871               	movf	___awmod@divisor+1,w
  2125  03FD  0273               	subwf	___awmod@dividend+1,w
  2126  03FE  1D03               	skipz
  2127  03FF  2C02               	goto	u685
  2128  0400  0870               	movf	___awmod@divisor,w
  2129  0401  0272               	subwf	___awmod@dividend,w
  2130  0402                     u685:	
  2131  0402  1C03               	skipc
  2132  0403  2C0A               	goto	l1397
  2133  0404  0870               	movf	___awmod@divisor,w
  2134  0405  02F2               	subwf	___awmod@dividend,f
  2135  0406  0871               	movf	___awmod@divisor+1,w
  2136  0407  1C03               	skipc
  2137  0408  03F3               	decf	___awmod@dividend+1,f
  2138  0409  02F3               	subwf	___awmod@dividend+1,f
  2139  040A                     l1397:	
  2140  040A  3001               	movlw	1
  2141  040B                     u695:	
  2142  040B  1003               	clrc
  2143  040C  0CF1               	rrf	___awmod@divisor+1,f
  2144  040D  0CF0               	rrf	___awmod@divisor,f
  2145  040E  3EFF               	addlw	-1
  2146  040F  1D03               	skipz
  2147  0410  2C0B               	goto	u695
  2148  0411  3001               	movlw	1
  2149  0412  02F5               	subwf	___awmod@counter,f
  2150  0413  1D03               	btfss	3,2
  2151  0414  2BFC               	goto	l1393
  2152  0415                     l1401:	
  2153  0415  0876               	movf	___awmod@sign,w
  2154  0416  1903               	btfsc	3,2
  2155  0417  2C1D               	goto	l1405
  2156  0418  09F2               	comf	___awmod@dividend,f
  2157  0419  09F3               	comf	___awmod@dividend+1,f
  2158  041A  0AF2               	incf	___awmod@dividend,f
  2159  041B  1903               	skipnz
  2160  041C  0AF3               	incf	___awmod@dividend+1,f
  2161  041D                     l1405:	
  2162  041D  0873               	movf	___awmod@dividend+1,w
  2163  041E  00F1               	movwf	?___awmod+1
  2164  041F  0872               	movf	___awmod@dividend,w
  2165  0420  00F0               	movwf	?___awmod
  2166  0421  0008               	return
  2167  0422                     __end_of___awmod:	
  2168                           
  2169                           	psect	text11
  2170  0422                     __ptext11:	
  2171 ;; *************** function ___awdiv *****************
  2172 ;; Defined at:
  2173 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  divisor         2    0[COMMON] int 
  2176 ;;  dividend        2    2[COMMON] int 
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;  quotient        2    7[COMMON] int 
  2179 ;;  sign            1    6[COMMON] unsigned char 
  2180 ;;  counter         1    5[COMMON] unsigned char 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  2    0[COMMON] int 
  2183 ;; Registers used:
  2184 ;;		wreg, status,2, status,0
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2190 ;;      Params:         4       0       0       0       0
  2191 ;;      Locals:         4       0       0       0       0
  2192 ;;      Temps:          1       0       0       0       0
  2193 ;;      Totals:         9       0       0       0       0
  2194 ;;Total ram usage:        9 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_display_Uhrzeit
  2200 ;;		_DEC_a_BCD
  2201 ;;		_uint_to_array
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           
  2206                           ;psect for function ___awdiv
  2207  0422                     ___awdiv:	
  2208                           
  2209                           ;incstack = 0
  2210                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2211  0422  01F6               	clrf	___awdiv@sign
  2212  0423  1FF1               	btfss	___awdiv@divisor+1,7
  2213  0424  2C2C               	goto	l1335
  2214  0425  09F0               	comf	___awdiv@divisor,f
  2215  0426  09F1               	comf	___awdiv@divisor+1,f
  2216  0427  0AF0               	incf	___awdiv@divisor,f
  2217  0428  1903               	skipnz
  2218  0429  0AF1               	incf	___awdiv@divisor+1,f
  2219  042A  01F6               	clrf	___awdiv@sign
  2220  042B  0AF6               	incf	___awdiv@sign,f
  2221  042C                     l1335:	
  2222  042C  1FF3               	btfss	___awdiv@dividend+1,7
  2223  042D  2C37               	goto	l1341
  2224  042E  09F2               	comf	___awdiv@dividend,f
  2225  042F  09F3               	comf	___awdiv@dividend+1,f
  2226  0430  0AF2               	incf	___awdiv@dividend,f
  2227  0431  1903               	skipnz
  2228  0432  0AF3               	incf	___awdiv@dividend+1,f
  2229  0433  3001               	movlw	1
  2230  0434  00F4               	movwf	??___awdiv
  2231  0435  0874               	movf	??___awdiv,w
  2232  0436  06F6               	xorwf	___awdiv@sign,f
  2233  0437                     l1341:	
  2234  0437  01F7               	clrf	___awdiv@quotient
  2235  0438  01F8               	clrf	___awdiv@quotient+1
  2236  0439  0870               	movf	___awdiv@divisor,w
  2237  043A  0471               	iorwf	___awdiv@divisor+1,w
  2238  043B  1903               	btfsc	3,2
  2239  043C  2C6E               	goto	l1363
  2240  043D  01F5               	clrf	___awdiv@counter
  2241  043E  0AF5               	incf	___awdiv@counter,f
  2242  043F                     l1351:	
  2243  043F  1BF1               	btfsc	___awdiv@divisor+1,7
  2244  0440  2C4D               	goto	l1353
  2245  0441  3001               	movlw	1
  2246  0442                     u565:	
  2247  0442  1003               	clrc
  2248  0443  0DF0               	rlf	___awdiv@divisor,f
  2249  0444  0DF1               	rlf	___awdiv@divisor+1,f
  2250  0445  3EFF               	addlw	-1
  2251  0446  1D03               	skipz
  2252  0447  2C42               	goto	u565
  2253  0448  3001               	movlw	1
  2254  0449  00F4               	movwf	??___awdiv
  2255  044A  0874               	movf	??___awdiv,w
  2256  044B  07F5               	addwf	___awdiv@counter,f
  2257  044C  2C3F               	goto	l1351
  2258  044D                     l1353:	
  2259  044D  3001               	movlw	1
  2260  044E                     u585:	
  2261  044E  1003               	clrc
  2262  044F  0DF7               	rlf	___awdiv@quotient,f
  2263  0450  0DF8               	rlf	___awdiv@quotient+1,f
  2264  0451  3EFF               	addlw	-1
  2265  0452  1D03               	skipz
  2266  0453  2C4E               	goto	u585
  2267  0454  0871               	movf	___awdiv@divisor+1,w
  2268  0455  0273               	subwf	___awdiv@dividend+1,w
  2269  0456  1D03               	skipz
  2270  0457  2C5A               	goto	u595
  2271  0458  0870               	movf	___awdiv@divisor,w
  2272  0459  0272               	subwf	___awdiv@dividend,w
  2273  045A                     u595:	
  2274  045A  1C03               	skipc
  2275  045B  2C63               	goto	l1359
  2276  045C  0870               	movf	___awdiv@divisor,w
  2277  045D  02F2               	subwf	___awdiv@dividend,f
  2278  045E  0871               	movf	___awdiv@divisor+1,w
  2279  045F  1C03               	skipc
  2280  0460  03F3               	decf	___awdiv@dividend+1,f
  2281  0461  02F3               	subwf	___awdiv@dividend+1,f
  2282  0462  1477               	bsf	___awdiv@quotient,0
  2283  0463                     l1359:	
  2284  0463  3001               	movlw	1
  2285  0464                     u605:	
  2286  0464  1003               	clrc
  2287  0465  0CF1               	rrf	___awdiv@divisor+1,f
  2288  0466  0CF0               	rrf	___awdiv@divisor,f
  2289  0467  3EFF               	addlw	-1
  2290  0468  1D03               	skipz
  2291  0469  2C64               	goto	u605
  2292  046A  3001               	movlw	1
  2293  046B  02F5               	subwf	___awdiv@counter,f
  2294  046C  1D03               	btfss	3,2
  2295  046D  2C4D               	goto	l1353
  2296  046E                     l1363:	
  2297  046E  0876               	movf	___awdiv@sign,w
  2298  046F  1903               	btfsc	3,2
  2299  0470  2C76               	goto	l1367
  2300  0471  09F7               	comf	___awdiv@quotient,f
  2301  0472  09F8               	comf	___awdiv@quotient+1,f
  2302  0473  0AF7               	incf	___awdiv@quotient,f
  2303  0474  1903               	skipnz
  2304  0475  0AF8               	incf	___awdiv@quotient+1,f
  2305  0476                     l1367:	
  2306  0476  0878               	movf	___awdiv@quotient+1,w
  2307  0477  00F1               	movwf	?___awdiv+1
  2308  0478  0877               	movf	___awdiv@quotient,w
  2309  0479  00F0               	movwf	?___awdiv
  2310  047A  0008               	return
  2311  047B                     __end_of___awdiv:	
  2312                           
  2313                           	psect	text12
  2314  02E0                     __ptext12:	
  2315 ;; *************** function _LCD_Set_Cursor *****************
  2316 ;; Defined at:
  2317 ;;		line 80 in file "LCD_8bits.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  linea           1    wreg     unsigned char 
  2320 ;;  columna         1    3[COMMON] unsigned char 
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;  linea           1    6[COMMON] unsigned char 
  2323 ;;  corrimiento     1    7[COMMON] unsigned char 
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  1    wreg      void 
  2326 ;; Registers used:
  2327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2333 ;;      Params:         1       0       0       0       0
  2334 ;;      Locals:         2       0       0       0       0
  2335 ;;      Temps:          2       0       0       0       0
  2336 ;;      Totals:         5       0       0       0       0
  2337 ;;Total ram usage:        5 bytes
  2338 ;; Hardware stack levels used:    1
  2339 ;; Hardware stack levels required when called:    1
  2340 ;; This function calls:
  2341 ;;		_LCD_Cmd
  2342 ;; This function is called by:
  2343 ;;		_main
  2344 ;;		_display_Uhrzeit
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           
  2349                           ;psect for function _LCD_Set_Cursor
  2350  02E0                     _LCD_Set_Cursor:	
  2351                           
  2352                           ;incstack = 0
  2353                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2354                           ;LCD_Set_Cursor@linea stored from wreg
  2355  02E0  00F6               	movwf	LCD_Set_Cursor@linea
  2356                           
  2357                           ;LCD_8bits.c: 82:     switch (linea){
  2358  02E1  2AFB               	goto	l1257
  2359  02E2                     l1247:	
  2360                           
  2361                           ;LCD_8bits.c: 84:             corrimiento = 0x80 + columna;
  2362  02E2  0873               	movf	LCD_Set_Cursor@columna,w
  2363  02E3  3E80               	addlw	128
  2364  02E4  00F4               	movwf	??_LCD_Set_Cursor
  2365  02E5  0874               	movf	??_LCD_Set_Cursor,w
  2366  02E6  00F7               	movwf	LCD_Set_Cursor@corrimiento
  2367                           
  2368                           ;LCD_8bits.c: 85:             LCD_Cmd(corrimiento);
  2369  02E7  0877               	movf	LCD_Set_Cursor@corrimiento,w
  2370  02E8  120A  118A  2338   	fcall	_LCD_Cmd
  2371                           
  2372                           ;LCD_8bits.c: 86:             break;
  2373  02EB  0008               	return
  2374  02EC                     l1251:	
  2375                           
  2376                           ;LCD_8bits.c: 88:             corrimiento = 0x80 + 0x40 + columna;
  2377  02EC  0873               	movf	LCD_Set_Cursor@columna,w
  2378  02ED  3EC0               	addlw	192
  2379  02EE  00F4               	movwf	??_LCD_Set_Cursor
  2380  02EF  0874               	movf	??_LCD_Set_Cursor,w
  2381  02F0  00F7               	movwf	LCD_Set_Cursor@corrimiento
  2382                           
  2383                           ;LCD_8bits.c: 89:             LCD_Cmd(corrimiento);
  2384  02F1  0877               	movf	LCD_Set_Cursor@corrimiento,w
  2385  02F2  120A  118A  2338   	fcall	_LCD_Cmd
  2386                           
  2387                           ;LCD_8bits.c: 90:             break;
  2388  02F5  0008               	return
  2389  02F6                     l1255:	
  2390                           
  2391                           ;LCD_8bits.c: 92:             LCD_Cmd(0x80);
  2392  02F6  3080               	movlw	128
  2393  02F7  120A  118A  2338   	fcall	_LCD_Cmd
  2394                           
  2395                           ;LCD_8bits.c: 93:     }
  2396  02FA  0008               	return
  2397  02FB                     l1257:	
  2398  02FB  0876               	movf	LCD_Set_Cursor@linea,w
  2399  02FC  00F4               	movwf	??_LCD_Set_Cursor
  2400  02FD  01F5               	clrf	??_LCD_Set_Cursor+1
  2401                           
  2402                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2403                           ; Switch size 1, requested type "simple"
  2404                           ; Number of cases is 1, Range of values is 0 to 0
  2405                           ; switch strategies available:
  2406                           ; Name         Instructions Cycles
  2407                           ; simple_byte            4     3 (average)
  2408                           ; direct_byte           11     8 (fixed)
  2409                           ; jumptable            260     6 (fixed)
  2410                           ;	Chosen strategy is simple_byte
  2411  02FE  0875               	movf	??_LCD_Set_Cursor+1,w
  2412  02FF  3A00               	xorlw	0	; case 0
  2413  0300  1903               	skipnz
  2414  0301  2B03               	goto	l1571
  2415  0302  2AF6               	goto	l1255
  2416  0303                     l1571:	
  2417                           
  2418                           ; Switch size 1, requested type "simple"
  2419                           ; Number of cases is 2, Range of values is 1 to 2
  2420                           ; switch strategies available:
  2421                           ; Name         Instructions Cycles
  2422                           ; simple_byte            7     4 (average)
  2423                           ; direct_byte           17    11 (fixed)
  2424                           ; jumptable            263     9 (fixed)
  2425                           ;	Chosen strategy is simple_byte
  2426  0303  0874               	movf	??_LCD_Set_Cursor,w
  2427  0304  3A01               	xorlw	1	; case 1
  2428  0305  1903               	skipnz
  2429  0306  2AE2               	goto	l1247
  2430  0307  3A03               	xorlw	3	; case 2
  2431  0308  1903               	skipnz
  2432  0309  2AEC               	goto	l1251
  2433  030A  2AF6               	goto	l1255
  2434  030B  0008               	return
  2435  030C                     __end_of_LCD_Set_Cursor:	
  2436                           
  2437                           	psect	text13
  2438  04D9                     __ptext13:	
  2439 ;; *************** function _LCD_init *****************
  2440 ;; Defined at:
  2441 ;;		line 44 in file "LCD_8bits.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;		None
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0, pclath, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2455 ;;      Params:         0       0       0       0       0
  2456 ;;      Locals:         0       0       0       0       0
  2457 ;;      Temps:          2       0       0       0       0
  2458 ;;      Totals:         2       0       0       0       0
  2459 ;;Total ram usage:        2 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    1
  2462 ;; This function calls:
  2463 ;;		_LCD_Cmd
  2464 ;; This function is called by:
  2465 ;;		_main
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           
  2470                           ;psect for function _LCD_init
  2471  04D9                     _LCD_init:	
  2472                           
  2473                           ;LCD_8bits.c: 45:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2474                           
  2475                           ;incstack = 0
  2476                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  2477  04D9  301A               	movlw	26
  2478  04DA  00F4               	movwf	??_LCD_init+1
  2479  04DB  30F8               	movlw	248
  2480  04DC  00F3               	movwf	??_LCD_init
  2481  04DD                     u777:	
  2482  04DD  0BF3               	decfsz	??_LCD_init,f
  2483  04DE  2CDD               	goto	u777
  2484  04DF  0BF4               	decfsz	??_LCD_init+1,f
  2485  04E0  2CDD               	goto	u777
  2486  04E1  0000               	nop
  2487                           
  2488                           ;LCD_8bits.c: 46:     LCD_Cmd(0x30);
  2489  04E2  3030               	movlw	48
  2490  04E3  120A  118A  2338  120A  118A  	fcall	_LCD_Cmd
  2491                           
  2492                           ;LCD_8bits.c: 47:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2493  04E8  3007               	movlw	7
  2494  04E9  00F4               	movwf	??_LCD_init+1
  2495  04EA  307D               	movlw	125
  2496  04EB  00F3               	movwf	??_LCD_init
  2497  04EC                     u787:	
  2498  04EC  0BF3               	decfsz	??_LCD_init,f
  2499  04ED  2CEC               	goto	u787
  2500  04EE  0BF4               	decfsz	??_LCD_init+1,f
  2501  04EF  2CEC               	goto	u787
  2502                           
  2503                           ;LCD_8bits.c: 48:     LCD_Cmd(0x30);
  2504  04F0  3030               	movlw	48
  2505  04F1  120A  118A  2338  120A  118A  	fcall	_LCD_Cmd
  2506                           
  2507                           ;LCD_8bits.c: 49:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  2508  04F6  3021               	movlw	33
  2509  04F7  00F3               	movwf	??_LCD_init
  2510  04F8                     u797:	
  2511  04F8  0BF3               	decfsz	??_LCD_init,f
  2512  04F9  2CF8               	goto	u797
  2513                           
  2514                           ;LCD_8bits.c: 50:     LCD_Cmd(0x30);
  2515  04FA  3030               	movlw	48
  2516  04FB  120A  118A  2338  120A  118A  	fcall	_LCD_Cmd
  2517                           
  2518                           ;LCD_8bits.c: 51:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  2519  0500  3021               	movlw	33
  2520  0501  00F3               	movwf	??_LCD_init
  2521  0502                     u807:	
  2522  0502  0BF3               	decfsz	??_LCD_init,f
  2523  0503  2D02               	goto	u807
  2524                           
  2525                           ;LCD_8bits.c: 52:     LCD_Cmd(0x38);
  2526  0504  3038               	movlw	56
  2527  0505  120A  118A  2338  120A  118A  	fcall	_LCD_Cmd
  2528                           
  2529                           ;LCD_8bits.c: 53:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  2530  050A  3011               	movlw	17
  2531  050B  00F3               	movwf	??_LCD_init
  2532  050C                     u817:	
  2533  050C  0BF3               	decfsz	??_LCD_init,f
  2534  050D  2D0C               	goto	u817
  2535  050E  0000               	nop
  2536                           
  2537                           ;LCD_8bits.c: 54:     LCD_Cmd(0x08);
  2538  050F  3008               	movlw	8
  2539  0510  120A  118A  2338  120A  118A  	fcall	_LCD_Cmd
  2540                           
  2541                           ;LCD_8bits.c: 55:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  2542  0515  3011               	movlw	17
  2543  0516  00F3               	movwf	??_LCD_init
  2544  0517                     u827:	
  2545  0517  0BF3               	decfsz	??_LCD_init,f
  2546  0518  2D17               	goto	u827
  2547  0519  0000               	nop
  2548                           
  2549                           ;LCD_8bits.c: 56:     LCD_Cmd(0x01);
  2550  051A  3001               	movlw	1
  2551  051B  120A  118A  2338  120A  118A  	fcall	_LCD_Cmd
  2552                           
  2553                           ;LCD_8bits.c: 57:     _delay((unsigned long)((3)*(4000000/4000.0)));
  2554  0520  3004               	movlw	4
  2555  0521  00F4               	movwf	??_LCD_init+1
  2556  0522  30E4               	movlw	228
  2557  0523  00F3               	movwf	??_LCD_init
  2558  0524                     u837:	
  2559  0524  0BF3               	decfsz	??_LCD_init,f
  2560  0525  2D24               	goto	u837
  2561  0526  0BF4               	decfsz	??_LCD_init+1,f
  2562  0527  2D24               	goto	u837
  2563  0528  0000               	nop
  2564                           
  2565                           ;LCD_8bits.c: 58:     LCD_Cmd(0x06);
  2566  0529  3006               	movlw	6
  2567  052A  120A  118A  2338  120A  118A  	fcall	_LCD_Cmd
  2568                           
  2569                           ;LCD_8bits.c: 59:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  2570  052F  3011               	movlw	17
  2571  0530  00F3               	movwf	??_LCD_init
  2572  0531                     u847:	
  2573  0531  0BF3               	decfsz	??_LCD_init,f
  2574  0532  2D31               	goto	u847
  2575  0533  0000               	nop
  2576                           
  2577                           ;LCD_8bits.c: 60:     LCD_Cmd(0x0C);
  2578  0534  300C               	movlw	12
  2579  0535  120A  118A  2338  120A  118A  	fcall	_LCD_Cmd
  2580                           
  2581                           ;LCD_8bits.c: 61:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  2582  053A  3011               	movlw	17
  2583  053B  00F3               	movwf	??_LCD_init
  2584  053C                     u857:	
  2585  053C  0BF3               	decfsz	??_LCD_init,f
  2586  053D  2D3C               	goto	u857
  2587  053E  0000               	nop
  2588  053F  0008               	return
  2589  0540                     __end_of_LCD_init:	
  2590                           
  2591                           	psect	text14
  2592  0264                     __ptext14:	
  2593 ;; *************** function _LCD_clear *****************
  2594 ;; Defined at:
  2595 ;;		line 32 in file "LCD_8bits.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;		None
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      void 
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0, pclath, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2609 ;;      Params:         0       0       0       0       0
  2610 ;;      Locals:         0       0       0       0       0
  2611 ;;      Temps:          2       0       0       0       0
  2612 ;;      Totals:         2       0       0       0       0
  2613 ;;Total ram usage:        2 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    1
  2616 ;; This function calls:
  2617 ;;		_LCD_Cmd
  2618 ;; This function is called by:
  2619 ;;		_main
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           
  2624                           ;psect for function _LCD_clear
  2625  0264                     _LCD_clear:	
  2626                           
  2627                           ;LCD_8bits.c: 33:     LCD_Cmd(0x00);
  2628                           
  2629                           ;incstack = 0
  2630                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  2631  0264  3000               	movlw	0
  2632  0265  120A  118A  2338  120A  118A  	fcall	_LCD_Cmd
  2633                           
  2634                           ;LCD_8bits.c: 34:     LCD_Cmd(0x01);
  2635  026A  3001               	movlw	1
  2636  026B  120A  118A  2338  120A  118A  	fcall	_LCD_Cmd
  2637                           
  2638                           ;LCD_8bits.c: 35:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2639  0270  3006               	movlw	6
  2640  0271  00F4               	movwf	??_LCD_clear+1
  2641  0272  3030               	movlw	48
  2642  0273  00F3               	movwf	??_LCD_clear
  2643  0274                     u867:	
  2644  0274  0BF3               	decfsz	??_LCD_clear,f
  2645  0275  2A74               	goto	u867
  2646  0276  0BF4               	decfsz	??_LCD_clear+1,f
  2647  0277  2A74               	goto	u867
  2648  0278  0000               	nop
  2649  0279  0008               	return
  2650  027A                     __end_of_LCD_clear:	
  2651                           
  2652                           	psect	text15
  2653  0338                     __ptext15:	
  2654 ;; *************** function _LCD_Cmd *****************
  2655 ;; Defined at:
  2656 ;;		line 21 in file "LCD_8bits.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;  comando         1    wreg     unsigned char 
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;  comando         1    2[COMMON] unsigned char 
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		wreg
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2670 ;;      Params:         0       0       0       0       0
  2671 ;;      Locals:         1       0       0       0       0
  2672 ;;      Temps:          2       0       0       0       0
  2673 ;;      Totals:         3       0       0       0       0
  2674 ;;Total ram usage:        3 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; This function calls:
  2677 ;;		Nothing
  2678 ;; This function is called by:
  2679 ;;		_LCD_clear
  2680 ;;		_LCD_init
  2681 ;;		_LCD_Set_Cursor
  2682 ;;		_LCD_home
  2683 ;;		_LCD_Shift_links
  2684 ;;		_LCD_Shift_rechts
  2685 ;;		_LCD_Cursor_rechts
  2686 ;;		_LCD_Cursor_links
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           
  2691                           ;psect for function _LCD_Cmd
  2692  0338                     _LCD_Cmd:	
  2693                           
  2694                           ;incstack = 0
  2695                           ; Regs used in _LCD_Cmd: [wreg]
  2696                           ;LCD_Cmd@comando stored from wreg
  2697  0338  00F2               	movwf	LCD_Cmd@comando
  2698                           
  2699                           ;LCD_8bits.c: 22:     PORTCbits.RC0 = 0;
  2700  0339  1283               	bcf	3,5	;RP0=0, select bank0
  2701  033A  1303               	bcf	3,6	;RP1=0, select bank0
  2702  033B  1007               	bcf	7,0	;volatile
  2703                           
  2704                           ;LCD_8bits.c: 23:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2705  033C  3007               	movlw	7
  2706  033D  00F1               	movwf	??_LCD_Cmd+1
  2707  033E  307D               	movlw	125
  2708  033F  00F0               	movwf	??_LCD_Cmd
  2709  0340                     u877:	
  2710  0340  0BF0               	decfsz	??_LCD_Cmd,f
  2711  0341  2B40               	goto	u877
  2712  0342  0BF1               	decfsz	??_LCD_Cmd+1,f
  2713  0343  2B40               	goto	u877
  2714                           
  2715                           ;LCD_8bits.c: 24:     PORTCbits.RC1 = 1;
  2716  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2717  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2718  0346  1487               	bsf	7,1	;volatile
  2719                           
  2720                           ;LCD_8bits.c: 25:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2721  0347  3007               	movlw	7
  2722  0348  00F1               	movwf	??_LCD_Cmd+1
  2723  0349  307D               	movlw	125
  2724  034A  00F0               	movwf	??_LCD_Cmd
  2725  034B                     u887:	
  2726  034B  0BF0               	decfsz	??_LCD_Cmd,f
  2727  034C  2B4B               	goto	u887
  2728  034D  0BF1               	decfsz	??_LCD_Cmd+1,f
  2729  034E  2B4B               	goto	u887
  2730                           
  2731                           ;LCD_8bits.c: 26:     PORTD = comando;
  2732  034F  0872               	movf	LCD_Cmd@comando,w
  2733  0350  1283               	bcf	3,5	;RP0=0, select bank0
  2734  0351  1303               	bcf	3,6	;RP1=0, select bank0
  2735  0352  0088               	movwf	8	;volatile
  2736                           
  2737                           ;LCD_8bits.c: 27:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2738  0353  3007               	movlw	7
  2739  0354  00F1               	movwf	??_LCD_Cmd+1
  2740  0355  307D               	movlw	125
  2741  0356  00F0               	movwf	??_LCD_Cmd
  2742  0357                     u897:	
  2743  0357  0BF0               	decfsz	??_LCD_Cmd,f
  2744  0358  2B57               	goto	u897
  2745  0359  0BF1               	decfsz	??_LCD_Cmd+1,f
  2746  035A  2B57               	goto	u897
  2747                           
  2748                           ;LCD_8bits.c: 28:     PORTCbits.RC1 = 0;
  2749  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2750  035C  1303               	bcf	3,6	;RP1=0, select bank0
  2751  035D  1087               	bcf	7,1	;volatile
  2752                           
  2753                           ;LCD_8bits.c: 29:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2754  035E  3007               	movlw	7
  2755  035F  00F1               	movwf	??_LCD_Cmd+1
  2756  0360  307D               	movlw	125
  2757  0361  00F0               	movwf	??_LCD_Cmd
  2758  0362                     u907:	
  2759  0362  0BF0               	decfsz	??_LCD_Cmd,f
  2760  0363  2B62               	goto	u907
  2761  0364  0BF1               	decfsz	??_LCD_Cmd+1,f
  2762  0365  2B62               	goto	u907
  2763  0366  0008               	return
  2764  0367                     __end_of_LCD_Cmd:	
  2765                           
  2766                           	psect	text16
  2767  029B                     __ptext16:	
  2768 ;; *************** function _LCD_Write_String *****************
  2769 ;; Defined at:
  2770 ;;		line 73 in file "LCD_8bits.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  a               1    wreg     PTR unsigned char 
  2773 ;;		 -> STR_1(15), 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  a               1    4[COMMON] PTR unsigned char 
  2776 ;;		 -> STR_1(15), 
  2777 ;;  n               2    2[COMMON] int 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2787 ;;      Params:         0       0       0       0       0
  2788 ;;      Locals:         3       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0
  2790 ;;      Totals:         3       0       0       0       0
  2791 ;;Total ram usage:        3 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    1
  2794 ;; This function calls:
  2795 ;;		_LCD_Write_Character
  2796 ;; This function is called by:
  2797 ;;		_main
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           
  2802                           ;psect for function _LCD_Write_String
  2803  029B                     _LCD_Write_String:	
  2804                           
  2805                           ;incstack = 0
  2806                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2807                           ;LCD_Write_String@a stored from wreg
  2808  029B  00F4               	movwf	LCD_Write_String@a
  2809                           
  2810                           ;LCD_8bits.c: 74:     int n;;LCD_8bits.c: 75:     for(n = 0; a[n] != '\0'; n++){
  2811  029C  01F2               	clrf	LCD_Write_String@n
  2812  029D  01F3               	clrf	LCD_Write_String@n+1
  2813  029E                     l1443:	
  2814  029E  0872               	movf	LCD_Write_String@n,w
  2815  029F  0774               	addwf	LCD_Write_String@a,w
  2816  02A0  0084               	movwf	4
  2817  02A1  120A  118A  2003  120A  118A  	fcall	stringdir
  2818  02A6  3A00               	xorlw	0
  2819  02A7  1903               	btfsc	3,2
  2820  02A8  0008               	return
  2821                           
  2822                           ;LCD_8bits.c: 76:         LCD_Write_Character(a[n]);
  2823  02A9  0872               	movf	LCD_Write_String@n,w
  2824  02AA  0774               	addwf	LCD_Write_String@a,w
  2825  02AB  0084               	movwf	4
  2826  02AC  120A  118A  2003  120A  118A  	fcall	stringdir
  2827  02B1  120A  118A  2244  120A  118A  	fcall	_LCD_Write_Character
  2828                           
  2829                           ;LCD_8bits.c: 77:     }
  2830  02B6  3001               	movlw	1
  2831  02B7  07F2               	addwf	LCD_Write_String@n,f
  2832  02B8  1803               	skipnc
  2833  02B9  0AF3               	incf	LCD_Write_String@n+1,f
  2834  02BA  3000               	movlw	0
  2835  02BB  07F3               	addwf	LCD_Write_String@n+1,f
  2836  02BC  2A9E               	goto	l1443
  2837  02BD                     __end_of_LCD_Write_String:	
  2838                           
  2839                           	psect	text17
  2840  0244                     __ptext17:	
  2841 ;; *************** function _LCD_Write_Character *****************
  2842 ;; Defined at:
  2843 ;;		line 64 in file "LCD_8bits.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  caracter        1    wreg     unsigned char 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  caracter        1    1[COMMON] unsigned char 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2857 ;;      Params:         0       0       0       0       0
  2858 ;;      Locals:         1       0       0       0       0
  2859 ;;      Temps:          1       0       0       0       0
  2860 ;;      Totals:         2       0       0       0       0
  2861 ;;Total ram usage:        2 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; This function calls:
  2864 ;;		Nothing
  2865 ;; This function is called by:
  2866 ;;		_display_Uhrzeit
  2867 ;;		_LCD_Write_String
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           
  2872                           ;psect for function _LCD_Write_Character
  2873  0244                     _LCD_Write_Character:	
  2874                           
  2875                           ;incstack = 0
  2876                           ; Regs used in _LCD_Write_Character: [wreg]
  2877                           ;LCD_Write_Character@caracter stored from wreg
  2878  0244  00F1               	movwf	LCD_Write_Character@caracter
  2879                           
  2880                           ;LCD_8bits.c: 65:     PORTCbits.RC0 = 1;
  2881  0245  1283               	bcf	3,5	;RP0=0, select bank0
  2882  0246  1303               	bcf	3,6	;RP1=0, select bank0
  2883  0247  1407               	bsf	7,0	;volatile
  2884                           
  2885                           ;LCD_8bits.c: 67:     PORTD = caracter;
  2886  0248  0871               	movf	LCD_Write_Character@caracter,w
  2887  0249  0088               	movwf	8	;volatile
  2888                           
  2889                           ;LCD_8bits.c: 68:     PORTCbits.RC1 = 1;
  2890  024A  1487               	bsf	7,1	;volatile
  2891                           
  2892                           ;LCD_8bits.c: 69:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2893  024B  300D               	movlw	13
  2894  024C  00F0               	movwf	??_LCD_Write_Character
  2895  024D                     u917:	
  2896  024D  0BF0               	decfsz	??_LCD_Write_Character,f
  2897  024E  2A4D               	goto	u917
  2898                           
  2899                           ;LCD_8bits.c: 70:     PORTCbits.RC1 = 0;
  2900  024F  1283               	bcf	3,5	;RP0=0, select bank0
  2901  0250  1303               	bcf	3,6	;RP1=0, select bank0
  2902  0251  1087               	bcf	7,1	;volatile
  2903  0252  0008               	return
  2904  0253                     __end_of_LCD_Write_Character:	
  2905                           
  2906                           	psect	text18
  2907  0367                     __ptext18:	
  2908 ;; *************** function _I2C_Master_Init *****************
  2909 ;; Defined at:
  2910 ;;		line 16 in file "I2C.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  c               4    0[BANK0 ] const unsigned long 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;		None
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2, status,0, pclath, cstack
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2924 ;;      Params:         0       4       0       0       0
  2925 ;;      Locals:         0       0       0       0       0
  2926 ;;      Temps:          0       4       0       0       0
  2927 ;;      Totals:         0       8       0       0       0
  2928 ;;Total ram usage:        8 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    1
  2931 ;; This function calls:
  2932 ;;		___lldiv
  2933 ;; This function is called by:
  2934 ;;		_main
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           
  2939                           ;psect for function _I2C_Master_Init
  2940  0367                     _I2C_Master_Init:	
  2941                           
  2942                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2943                           
  2944                           ;incstack = 0
  2945                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2946  0367  3028               	movlw	40
  2947  0368  1283               	bcf	3,5	;RP0=0, select bank0
  2948  0369  1303               	bcf	3,6	;RP1=0, select bank0
  2949  036A  0094               	movwf	20	;volatile
  2950                           
  2951                           ;I2C.c: 19:     SSPCON2 = 0;
  2952  036B  1683               	bsf	3,5	;RP0=1, select bank1
  2953  036C  1303               	bcf	3,6	;RP1=0, select bank1
  2954  036D  0191               	clrf	17	;volatile
  2955                           
  2956                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  2957  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2958  036F  1303               	bcf	3,6	;RP1=0, select bank0
  2959  0370  0834               	movf	I2C_Master_Init@c,w
  2960  0371  00B8               	movwf	??_I2C_Master_Init
  2961  0372  0835               	movf	I2C_Master_Init@c+1,w
  2962  0373  00B9               	movwf	??_I2C_Master_Init+1
  2963  0374  0836               	movf	I2C_Master_Init@c+2,w
  2964  0375  00BA               	movwf	??_I2C_Master_Init+2
  2965  0376  0837               	movf	I2C_Master_Init@c+3,w
  2966  0377  00BB               	movwf	??_I2C_Master_Init+3
  2967  0378  3002               	movlw	2
  2968  0379                     u735:	
  2969  0379  1003               	clrc
  2970  037A  0DB8               	rlf	??_I2C_Master_Init,f
  2971  037B  0DB9               	rlf	??_I2C_Master_Init+1,f
  2972  037C  0DBA               	rlf	??_I2C_Master_Init+2,f
  2973  037D  0DBB               	rlf	??_I2C_Master_Init+3,f
  2974  037E  3EFF               	addlw	-1
  2975  037F  1D03               	skipz
  2976  0380  2B79               	goto	u735
  2977  0381  083B               	movf	??_I2C_Master_Init+3,w
  2978  0382  00F3               	movwf	___lldiv@divisor+3
  2979  0383  083A               	movf	??_I2C_Master_Init+2,w
  2980  0384  00F2               	movwf	___lldiv@divisor+2
  2981  0385  0839               	movf	??_I2C_Master_Init+1,w
  2982  0386  00F1               	movwf	___lldiv@divisor+1
  2983  0387  0838               	movf	??_I2C_Master_Init,w
  2984  0388  00F0               	movwf	___lldiv@divisor
  2985  0389  3000               	movlw	0
  2986  038A  00F7               	movwf	___lldiv@dividend+3
  2987  038B  303D               	movlw	61
  2988  038C  00F6               	movwf	___lldiv@dividend+2
  2989  038D  3009               	movlw	9
  2990  038E  00F5               	movwf	___lldiv@dividend+1
  2991  038F  3000               	movlw	0
  2992  0390  00F4               	movwf	___lldiv@dividend
  2993  0391  120A  118A  247B   	fcall	___lldiv
  2994  0394  0870               	movf	?___lldiv,w
  2995  0395  3EFF               	addlw	255
  2996  0396  1683               	bsf	3,5	;RP0=1, select bank1
  2997  0397  1303               	bcf	3,6	;RP1=0, select bank1
  2998  0398  0093               	movwf	19	;volatile
  2999                           
  3000                           ;I2C.c: 21:     SSPSTAT = 0;
  3001  0399  0194               	clrf	20	;volatile
  3002                           
  3003                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  3004  039A  1587               	bsf	7,3	;volatile
  3005                           
  3006                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  3007  039B  1607               	bsf	7,4	;volatile
  3008  039C  0008               	return
  3009  039D                     __end_of_I2C_Master_Init:	
  3010                           
  3011                           	psect	text19
  3012  047B                     __ptext19:	
  3013 ;; *************** function ___lldiv *****************
  3014 ;; Defined at:
  3015 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  divisor         4    0[COMMON] unsigned long 
  3018 ;;  dividend        4    4[COMMON] unsigned long 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  quotient        4    9[COMMON] unsigned long 
  3021 ;;  counter         1   13[COMMON] unsigned char 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  4    0[COMMON] unsigned long 
  3024 ;; Registers used:
  3025 ;;		wreg, status,2, status,0
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3031 ;;      Params:         8       0       0       0       0
  3032 ;;      Locals:         5       0       0       0       0
  3033 ;;      Temps:          1       0       0       0       0
  3034 ;;      Totals:        14       0       0       0       0
  3035 ;;Total ram usage:       14 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_I2C_Master_Init
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           
  3045                           ;psect for function ___lldiv
  3046  047B                     ___lldiv:	
  3047                           
  3048                           ;incstack = 0
  3049                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3050  047B  3000               	movlw	0
  3051  047C  00FC               	movwf	___lldiv@quotient+3
  3052  047D  3000               	movlw	0
  3053  047E  00FB               	movwf	___lldiv@quotient+2
  3054  047F  3000               	movlw	0
  3055  0480  00FA               	movwf	___lldiv@quotient+1
  3056  0481  3000               	movlw	0
  3057  0482  00F9               	movwf	___lldiv@quotient
  3058  0483  0873               	movf	___lldiv@divisor+3,w
  3059  0484  0472               	iorwf	___lldiv@divisor+2,w
  3060  0485  0471               	iorwf	___lldiv@divisor+1,w
  3061  0486  0470               	iorwf	___lldiv@divisor,w
  3062  0487  1903               	skipnz
  3063  0488  2CD0               	goto	l1323
  3064  0489  01FD               	clrf	___lldiv@counter
  3065  048A  0AFD               	incf	___lldiv@counter,f
  3066  048B                     l1309:	
  3067  048B  1BF3               	btfsc	___lldiv@divisor+3,7
  3068  048C  2C9B               	goto	l1311
  3069  048D  3001               	movlw	1
  3070  048E  00F8               	movwf	??___lldiv
  3071  048F                     u475:	
  3072  048F  1003               	clrc
  3073  0490  0DF0               	rlf	___lldiv@divisor,f
  3074  0491  0DF1               	rlf	___lldiv@divisor+1,f
  3075  0492  0DF2               	rlf	___lldiv@divisor+2,f
  3076  0493  0DF3               	rlf	___lldiv@divisor+3,f
  3077  0494  0BF8               	decfsz	??___lldiv,f
  3078  0495  2C8F               	goto	u475
  3079  0496  3001               	movlw	1
  3080  0497  00F8               	movwf	??___lldiv
  3081  0498  0878               	movf	??___lldiv,w
  3082  0499  07FD               	addwf	___lldiv@counter,f
  3083  049A  2C8B               	goto	l1309
  3084  049B                     l1311:	
  3085  049B  3001               	movlw	1
  3086  049C  00F8               	movwf	??___lldiv
  3087  049D                     u495:	
  3088  049D  1003               	clrc
  3089  049E  0DF9               	rlf	___lldiv@quotient,f
  3090  049F  0DFA               	rlf	___lldiv@quotient+1,f
  3091  04A0  0DFB               	rlf	___lldiv@quotient+2,f
  3092  04A1  0DFC               	rlf	___lldiv@quotient+3,f
  3093  04A2  0BF8               	decfsz	??___lldiv,f
  3094  04A3  2C9D               	goto	u495
  3095  04A4  0873               	movf	___lldiv@divisor+3,w
  3096  04A5  0277               	subwf	___lldiv@dividend+3,w
  3097  04A6  1D03               	skipz
  3098  04A7  2CB2               	goto	u505
  3099  04A8  0872               	movf	___lldiv@divisor+2,w
  3100  04A9  0276               	subwf	___lldiv@dividend+2,w
  3101  04AA  1D03               	skipz
  3102  04AB  2CB2               	goto	u505
  3103  04AC  0871               	movf	___lldiv@divisor+1,w
  3104  04AD  0275               	subwf	___lldiv@dividend+1,w
  3105  04AE  1D03               	skipz
  3106  04AF  2CB2               	goto	u505
  3107  04B0  0870               	movf	___lldiv@divisor,w
  3108  04B1  0274               	subwf	___lldiv@dividend,w
  3109  04B2                     u505:	
  3110  04B2  1C03               	skipc
  3111  04B3  2CC3               	goto	l1319
  3112  04B4  0870               	movf	___lldiv@divisor,w
  3113  04B5  02F4               	subwf	___lldiv@dividend,f
  3114  04B6  0871               	movf	___lldiv@divisor+1,w
  3115  04B7  1C03               	skipc
  3116  04B8  0F71               	incfsz	___lldiv@divisor+1,w
  3117  04B9  02F5               	subwf	___lldiv@dividend+1,f
  3118  04BA  0872               	movf	___lldiv@divisor+2,w
  3119  04BB  1C03               	skipc
  3120  04BC  0F72               	incfsz	___lldiv@divisor+2,w
  3121  04BD  02F6               	subwf	___lldiv@dividend+2,f
  3122  04BE  0873               	movf	___lldiv@divisor+3,w
  3123  04BF  1C03               	skipc
  3124  04C0  0F73               	incfsz	___lldiv@divisor+3,w
  3125  04C1  02F7               	subwf	___lldiv@dividend+3,f
  3126  04C2  1479               	bsf	___lldiv@quotient,0
  3127  04C3                     l1319:	
  3128  04C3  3001               	movlw	1
  3129  04C4                     u515:	
  3130  04C4  1003               	clrc
  3131  04C5  0CF3               	rrf	___lldiv@divisor+3,f
  3132  04C6  0CF2               	rrf	___lldiv@divisor+2,f
  3133  04C7  0CF1               	rrf	___lldiv@divisor+1,f
  3134  04C8  0CF0               	rrf	___lldiv@divisor,f
  3135  04C9  3EFF               	addlw	-1
  3136  04CA  1D03               	skipz
  3137  04CB  2CC4               	goto	u515
  3138  04CC  3001               	movlw	1
  3139  04CD  02FD               	subwf	___lldiv@counter,f
  3140  04CE  1D03               	btfss	3,2
  3141  04CF  2C9B               	goto	l1311
  3142  04D0                     l1323:	
  3143  04D0  087C               	movf	___lldiv@quotient+3,w
  3144  04D1  00F3               	movwf	?___lldiv+3
  3145  04D2  087B               	movf	___lldiv@quotient+2,w
  3146  04D3  00F2               	movwf	?___lldiv+2
  3147  04D4  087A               	movf	___lldiv@quotient+1,w
  3148  04D5  00F1               	movwf	?___lldiv+1
  3149  04D6  0879               	movf	___lldiv@quotient,w
  3150  04D7  00F0               	movwf	?___lldiv
  3151  04D8  0008               	return
  3152  04D9                     __end_of___lldiv:	
  3153  007E                     btemp	set	126	;btemp
  3154  007E                     wtemp0	set	126


Data Sizes:
    Strings     15
    Constant    0
    Data        12
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sp__uint_to_array	PTR unsigned int  size(1) Largest target is 6
		 -> uint_to_array@resultado(COMMON[6]), 

    LCD_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _get_Time->_BCD_a_DEC
    _BCD_a_DEC->_I2C_Master_Read
    _BCD_a_DEC->___wmul
    _display_Uhrzeit->___awdiv
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_init->_LCD_Cmd
    _LCD_clear->_LCD_Cmd
    _LCD_Write_String->_LCD_Write_Character
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8106
                    _I2C_Master_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                          _LCD_clear
                           _LCD_init
                    _display_Uhrzeit
                           _get_Time
 ---------------------------------------------------------------------------------
 (1) _get_Time                                             0     0      0    4535
                          _BCD_a_DEC
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    2530
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     729
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BCD_a_DEC                                            4     2      2    1276
                                              6 COMMON     4     2      2
                    _I2C_Master_Read (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _display_Uhrzeit                                      9     8      1    2683
                                              9 COMMON     2     1      1
                                              0 BANK0      7     7      0
                     _LCD_Set_Cursor
                _LCD_Write_Character
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     904
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1212
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       5     4      1     287
                                              3 COMMON     5     4      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      22
                                              3 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            2     2      0      22
                                              3 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     3     3      0     145
                                              2 COMMON     3     3      0
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Character                                  2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _LCD_Set_Cursor
     _LCD_Cmd
   _LCD_Write_String
     _LCD_Write_Character
   _LCD_clear
     _LCD_Cmd
   _LCD_init
     _LCD_Cmd
   _display_Uhrzeit
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     ___awdiv
     ___awmod
   _get_Time
     _BCD_a_DEC
       _I2C_Master_Read (ARG)
         _I2C_Master_Wait
       ___wmul (ARG)
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      1C       5       35.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2A      12        0.0%
ABS                  0      0      2A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Mar 06 11:11:47 2020

                           pc 0002                   __CFG_CP$OFF 0000                  ___awdiv@sign 0076  
          __size_of_BCD_a_DEC 0023                            fsr 0004           ___wmul@multiplicand 0072  
                         l116 022F                           l134 032F                           l135 0332  
                         l305 0284                           _GIE 005F                           u505 04B2  
                         u425 0285                  __CFG_CPD$OFF 0000                           u515 04C4  
                         u435 028C                           u605 0464                           u475 048F  
                         u565 0442                           u495 049D                           u735 0379  
                         u807 0502                           u817 050C                           u585 044E  
                         u665 03F1                           u907 0362                           u827 0517  
                         u595 045A                           u917 024D                           u837 0524  
                         u685 0402                           u847 0531                           u695 040B  
                         u857 053C                           u777 04DD                           u867 0274  
                         u787 04EC                           u877 0340                           u797 04F8  
                         u887 034B                           u897 0357       __end_of_display_Uhrzeit 0600  
                         _dia 0026                           _mes 0022                           _min 002A  
                         _seg 0032                           fsr0 0004                           indf 0000  
                ___awmod@sign 0076  __size_of_LCD_Write_Character 000F               __end_of_LCD_Cmd 0367  
                __CFG_LVP$OFF 0000                _LCD_Set_Cursor 02E0                          l1311 049B  
                        l1401 0415                          l1233 027C                          l1323 04D0  
                        l1251 02EC                          l1309 048B                          l1341 0437  
                        l1405 041D                          l1319 04C3                          l1255 02F6  
                        l1247 02E2                          l1351 043F                          l1335 042C  
                        l1257 02FB                          l1353 044D                          l1443 029E  
                        l1363 046E                          l1367 0476                          l1359 0463  
                        l1391 03EE                          l1383 03E8                          l1393 03FC  
                        l1571 0303                          l1379 03E1                          l1397 040A  
                        l1499 03C9                          STR_1 0009                          _PEIE 005E  
                __CFG_WRT$OFF 0000             ?_LCD_Write_String 0070                          _jahr 0020  
                        _main 039D                          _hora 0028                          btemp 007E  
                        start 0000            ??_LCD_Write_String 0072                 __CFG_IESO$OFF 0000  
          __size_of_LCD_clear 0016              ?_I2C_Master_Init 0034              ?_I2C_Master_Read 0070  
            ?_I2C_Master_Wait 0070              ?_I2C_Master_Stop 0070              __end_of_LCD_init 0540  
                       ?_main 0070               __end_of___awdiv 047B                 __CFG_WDTE$OFF 0000  
             __end_of___awmod 0422               __end_of___lldiv 04D9               ___awdiv@divisor 0070  
             ___awdiv@counter 0075                         _PORTD 0008                         _TRISD 0088  
                       _SSPIE 0463                         _SSPIF 0063                __CFG_FCMEN$OFF 0000  
      __end_of_LCD_Set_Cursor 030C                         _datum 0024                __CFG_BOREN$OFF 0000  
                       pclath 000A             __end_of_BCD_a_DEC 02E0                         status 0003  
                       wtemp0 007E                __CFG_MCLRE$OFF 0000               __initialization 07E8  
                __end_of_main 03D7                        ??_main 007E                     ??_LCD_Cmd 0070  
            ?_display_Uhrzeit 0079             ?_I2C_Master_Start 0070             ?_I2C_Master_Write 0070  
           __end_of_LCD_clear 027A               ?_LCD_Set_Cursor 0073            ??_I2C_Master_Start 0070  
          ??_I2C_Master_Write 0072              ___awdiv@dividend 0072                        _SSPADD 0093  
                      _TRISC0 0438                        _TRISC1 0439                        _TRISC3 043B  
                      _TRISC4 043C            uint_to_array@F1341 002C                        _SSPCON 0014  
                      _SSPBUF 0013   LCD_Write_Character@caracter 0071                __CFG_PWRTE$OFF 0000  
            __end_of_get_Time 07E8                        ___wmul 027A                     ??___awdiv 0074  
                   ??___awmod 0074                     ??___lldiv 0078              ___awdiv@quotient 0077  
             ___awmod@divisor 0070               ___awmod@counter 0075       __end_of__initialization 07FC  
                   ?_LCD_init 0070                __pcstackCOMMON 0070           _LCD_Write_Character 0244  
                __pidataBANK0 0238          ?_LCD_Write_Character 0070                LCD_Cmd@comando 0072  
                  __pbssBANK0 002C     LCD_Set_Cursor@corrimiento 0077                    ??_LCD_init 0073  
                  __pmaintext 039D                       ?___wmul 0070     __size_of_LCD_Write_String 0022  
         display_Uhrzeit@fila 0034                       _LCD_Cmd 0338         ??_LCD_Write_Character 0070  
                   ?_get_Time 0070                       _SSPCON2 0091                       _SSPSTAT 0094  
                  __stringtab 0003                     _BCD_a_DEC 02BD                       ___awdiv 0422  
                     ___awmod 03D7                       ___lldiv 047B               __size_of___wmul 0021  
            ??_LCD_Set_Cursor 0074                       __ptext1 0600                       __ptext2 0227  
                     __ptext3 0220                       __ptext4 0219                       __ptext5 030C  
                     __ptext6 022F                       __ptext7 02BD                       __ptext8 027A  
                     __ptext9 0540              ___awmod@dividend 0072      __size_of_I2C_Master_Init 0036  
    __size_of_I2C_Master_Read 002C      __size_of_I2C_Master_Wait 0009      __size_of_I2C_Master_Stop 0007  
                  ??_get_Time 007A                     _LCD_clear 0264          end_of_initialization 07FC  
   __size_of_I2C_Master_Start 0007     __size_of_I2C_Master_Write 0008               ___lldiv@divisor 0070  
                  ?_BCD_a_DEC 0076               ___lldiv@counter 007D              I2C_Master_Init@c 0034  
            I2C_Master_Read@a 0070                     _PORTCbits 0007                     _TRISCbits 0087  
                  ?_LCD_clear 0070             LCD_Write_String@a 0074             LCD_Write_String@n 0072  
    __size_of_display_Uhrzeit 00C0             __size_of_LCD_init 0067         LCD_Set_Cursor@columna 0073  
              __end_of___wmul 029B              _LCD_Write_String 029B           start_initialization 07E8  
           ??_I2C_Master_Init 0038             ??_I2C_Master_Read 0072             ??_I2C_Master_Wait 0070  
           ??_I2C_Master_Stop 0070      __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??_BCD_a_DEC 0078  
                    ??___wmul 0074                    init_fetch0 0253                   __pdataBANK0 0020  
             BCD_a_DEC@numBCD 0076                      ?_LCD_Cmd 0070                     ___latbits 0002  
               __pcstackBANK0 0034                   ??_LCD_clear 0073             __size_of_get_Time 01E8  
            _I2C_Master_Start 0219              _I2C_Master_Write 0227             ??_display_Uhrzeit 007A  
                    ?___awdiv 0070                      ?___awmod 0070                      ?___lldiv 0070  
                   __pstrings 0003   __end_of_LCD_Write_Character 0253          display_Uhrzeit@Uhr_d 003A  
        display_Uhrzeit@Uhr_u 0039          display_Uhrzeit@min_d 0038          display_Uhrzeit@min_u 0037  
        display_Uhrzeit@seg_d 0036          display_Uhrzeit@seg_u 0035                ___wmul@product 0074  
                    _LCD_init 04D9                   __stringbase 0008             ___wmul@multiplier 0070  
            __size_of_LCD_Cmd 002F           I2C_Master_Read@temp 0074      __end_of_LCD_Write_String 02BD  
            __size_of___awdiv 0059              __size_of___awmod 004B              __size_of___lldiv 005E  
          __end_of__stringtab 0009               _I2C_Master_Init 0367               _I2C_Master_Read 030C  
             _I2C_Master_Wait 022F               _I2C_Master_Stop 0220                      __ptext10 03D7  
                    __ptext11 0422                      __ptext12 02E0                      __ptext13 04D9  
                    __ptext14 0264                      __ptext15 0338                      __ptext16 029B  
                    __ptext17 0244                      __ptext18 0367                      __ptext19 047B  
                    _get_Time 0600             __CFG_BOR4V$BOR40V 0000       __size_of_LCD_Set_Cursor 002C  
               __size_of_main 003A        display_Uhrzeit@columna 0079           LCD_Set_Cursor@linea 0076  
    __end_of_I2C_Master_Start 0220      __end_of_I2C_Master_Write 022F                      init_ram0 0257  
             _display_Uhrzeit 0540              ___lldiv@dividend 0074                     stringcode 0003  
     __end_of_I2C_Master_Init 039D       __end_of_I2C_Master_Read 0338       __end_of_I2C_Master_Wait 0238  
     __end_of_I2C_Master_Stop 0227              ___lldiv@quotient 0079             I2C_Master_Write@d 0070  
                    stringdir 0003                      stringtab 0003                   _SSPCON2bits 0091  

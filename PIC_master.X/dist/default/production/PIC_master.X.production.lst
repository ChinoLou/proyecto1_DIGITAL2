

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue May 05 00:27:44 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	dabs	1,0x7E,2
    56  0000                     
    57                           ; Version 2.05
    58                           ; Generated 20/12/2018 GMT
    59                           ; 
    60                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F887 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  0007                     	;# 
    99  0008                     	;# 
   100  0009                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000D                     	;# 
   105  000E                     	;# 
   106  000E                     	;# 
   107  000F                     	;# 
   108  0010                     	;# 
   109  0011                     	;# 
   110  0012                     	;# 
   111  0013                     	;# 
   112  0014                     	;# 
   113  0015                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0017                     	;# 
   117  0018                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  001B                     	;# 
   121  001B                     	;# 
   122  001C                     	;# 
   123  001D                     	;# 
   124  001E                     	;# 
   125  001F                     	;# 
   126  0081                     	;# 
   127  0085                     	;# 
   128  0086                     	;# 
   129  0087                     	;# 
   130  0088                     	;# 
   131  0089                     	;# 
   132  008C                     	;# 
   133  008D                     	;# 
   134  008E                     	;# 
   135  008F                     	;# 
   136  0090                     	;# 
   137  0091                     	;# 
   138  0092                     	;# 
   139  0093                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0094                     	;# 
   143  0095                     	;# 
   144  0096                     	;# 
   145  0097                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009A                     	;# 
   149  009B                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  0105                     	;# 
   155  0107                     	;# 
   156  0108                     	;# 
   157  0109                     	;# 
   158  010C                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  0185                     	;# 
   164  0187                     	;# 
   165  0188                     	;# 
   166  0189                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001B                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  0087                     	;# 
   208  0088                     	;# 
   209  0089                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  008F                     	;# 
   214  0090                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0093                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0094                     	;# 
   221  0095                     	;# 
   222  0096                     	;# 
   223  0097                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009A                     	;# 
   227  009B                     	;# 
   228  009C                     	;# 
   229  009D                     	;# 
   230  009E                     	;# 
   231  009F                     	;# 
   232  0105                     	;# 
   233  0107                     	;# 
   234  0108                     	;# 
   235  0109                     	;# 
   236  010C                     	;# 
   237  010C                     	;# 
   238  010D                     	;# 
   239  010E                     	;# 
   240  010F                     	;# 
   241  0185                     	;# 
   242  0187                     	;# 
   243  0188                     	;# 
   244  0189                     	;# 
   245  018C                     	;# 
   246  018D                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  0007                     	;# 
   255  0008                     	;# 
   256  0009                     	;# 
   257  000A                     	;# 
   258  000B                     	;# 
   259  000C                     	;# 
   260  000D                     	;# 
   261  000E                     	;# 
   262  000E                     	;# 
   263  000F                     	;# 
   264  0010                     	;# 
   265  0011                     	;# 
   266  0012                     	;# 
   267  0013                     	;# 
   268  0014                     	;# 
   269  0015                     	;# 
   270  0015                     	;# 
   271  0016                     	;# 
   272  0017                     	;# 
   273  0018                     	;# 
   274  0019                     	;# 
   275  001A                     	;# 
   276  001B                     	;# 
   277  001B                     	;# 
   278  001C                     	;# 
   279  001D                     	;# 
   280  001E                     	;# 
   281  001F                     	;# 
   282  0081                     	;# 
   283  0085                     	;# 
   284  0086                     	;# 
   285  0087                     	;# 
   286  0088                     	;# 
   287  0089                     	;# 
   288  008C                     	;# 
   289  008D                     	;# 
   290  008E                     	;# 
   291  008F                     	;# 
   292  0090                     	;# 
   293  0091                     	;# 
   294  0092                     	;# 
   295  0093                     	;# 
   296  0093                     	;# 
   297  0093                     	;# 
   298  0094                     	;# 
   299  0095                     	;# 
   300  0096                     	;# 
   301  0097                     	;# 
   302  0098                     	;# 
   303  0099                     	;# 
   304  009A                     	;# 
   305  009B                     	;# 
   306  009C                     	;# 
   307  009D                     	;# 
   308  009E                     	;# 
   309  009F                     	;# 
   310  0105                     	;# 
   311  0107                     	;# 
   312  0108                     	;# 
   313  0109                     	;# 
   314  010C                     	;# 
   315  010C                     	;# 
   316  010D                     	;# 
   317  010E                     	;# 
   318  010F                     	;# 
   319  0185                     	;# 
   320  0187                     	;# 
   321  0188                     	;# 
   322  0189                     	;# 
   323  018C                     	;# 
   324  018D                     	;# 
   325  0000                     	;# 
   326  0001                     	;# 
   327  0002                     	;# 
   328  0003                     	;# 
   329  0004                     	;# 
   330  0005                     	;# 
   331  0006                     	;# 
   332  0007                     	;# 
   333  0008                     	;# 
   334  0009                     	;# 
   335  000A                     	;# 
   336  000B                     	;# 
   337  000C                     	;# 
   338  000D                     	;# 
   339  000E                     	;# 
   340  000E                     	;# 
   341  000F                     	;# 
   342  0010                     	;# 
   343  0011                     	;# 
   344  0012                     	;# 
   345  0013                     	;# 
   346  0014                     	;# 
   347  0015                     	;# 
   348  0015                     	;# 
   349  0016                     	;# 
   350  0017                     	;# 
   351  0018                     	;# 
   352  0019                     	;# 
   353  001A                     	;# 
   354  001B                     	;# 
   355  001B                     	;# 
   356  001C                     	;# 
   357  001D                     	;# 
   358  001E                     	;# 
   359  001F                     	;# 
   360  0081                     	;# 
   361  0085                     	;# 
   362  0086                     	;# 
   363  0087                     	;# 
   364  0088                     	;# 
   365  0089                     	;# 
   366  008C                     	;# 
   367  008D                     	;# 
   368  008E                     	;# 
   369  008F                     	;# 
   370  0090                     	;# 
   371  0091                     	;# 
   372  0092                     	;# 
   373  0093                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0094                     	;# 
   377  0095                     	;# 
   378  0096                     	;# 
   379  0097                     	;# 
   380  0098                     	;# 
   381  0099                     	;# 
   382  009A                     	;# 
   383  009B                     	;# 
   384  009C                     	;# 
   385  009D                     	;# 
   386  009E                     	;# 
   387  009F                     	;# 
   388  0105                     	;# 
   389  0107                     	;# 
   390  0108                     	;# 
   391  0109                     	;# 
   392  010C                     	;# 
   393  010C                     	;# 
   394  010D                     	;# 
   395  010E                     	;# 
   396  010F                     	;# 
   397  0185                     	;# 
   398  0187                     	;# 
   399  0188                     	;# 
   400  0189                     	;# 
   401  018C                     	;# 
   402  018D                     	;# 
   403  0000                     	;# 
   404  0001                     	;# 
   405  0002                     	;# 
   406  0003                     	;# 
   407  0004                     	;# 
   408  0005                     	;# 
   409  0006                     	;# 
   410  0007                     	;# 
   411  0008                     	;# 
   412  0009                     	;# 
   413  000A                     	;# 
   414  000B                     	;# 
   415  000C                     	;# 
   416  000D                     	;# 
   417  000E                     	;# 
   418  000E                     	;# 
   419  000F                     	;# 
   420  0010                     	;# 
   421  0011                     	;# 
   422  0012                     	;# 
   423  0013                     	;# 
   424  0014                     	;# 
   425  0015                     	;# 
   426  0015                     	;# 
   427  0016                     	;# 
   428  0017                     	;# 
   429  0018                     	;# 
   430  0019                     	;# 
   431  001A                     	;# 
   432  001B                     	;# 
   433  001B                     	;# 
   434  001C                     	;# 
   435  001D                     	;# 
   436  001E                     	;# 
   437  001F                     	;# 
   438  0081                     	;# 
   439  0085                     	;# 
   440  0086                     	;# 
   441  0087                     	;# 
   442  0088                     	;# 
   443  0089                     	;# 
   444  008C                     	;# 
   445  008D                     	;# 
   446  008E                     	;# 
   447  008F                     	;# 
   448  0090                     	;# 
   449  0091                     	;# 
   450  0092                     	;# 
   451  0093                     	;# 
   452  0093                     	;# 
   453  0093                     	;# 
   454  0094                     	;# 
   455  0095                     	;# 
   456  0096                     	;# 
   457  0097                     	;# 
   458  0098                     	;# 
   459  0099                     	;# 
   460  009A                     	;# 
   461  009B                     	;# 
   462  009C                     	;# 
   463  009D                     	;# 
   464  009E                     	;# 
   465  009F                     	;# 
   466  0105                     	;# 
   467  0107                     	;# 
   468  0108                     	;# 
   469  0109                     	;# 
   470  010C                     	;# 
   471  010C                     	;# 
   472  010D                     	;# 
   473  010E                     	;# 
   474  010F                     	;# 
   475  0185                     	;# 
   476  0187                     	;# 
   477  0188                     	;# 
   478  0189                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0008                     	;# 
   490  0009                     	;# 
   491  000A                     	;# 
   492  000B                     	;# 
   493  000C                     	;# 
   494  000D                     	;# 
   495  000E                     	;# 
   496  000E                     	;# 
   497  000F                     	;# 
   498  0010                     	;# 
   499  0011                     	;# 
   500  0012                     	;# 
   501  0013                     	;# 
   502  0014                     	;# 
   503  0015                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  001D                     	;# 
   514  001E                     	;# 
   515  001F                     	;# 
   516  0081                     	;# 
   517  0085                     	;# 
   518  0086                     	;# 
   519  0087                     	;# 
   520  0088                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  008F                     	;# 
   526  0090                     	;# 
   527  0091                     	;# 
   528  0092                     	;# 
   529  0093                     	;# 
   530  0093                     	;# 
   531  0093                     	;# 
   532  0094                     	;# 
   533  0095                     	;# 
   534  0096                     	;# 
   535  0097                     	;# 
   536  0098                     	;# 
   537  0099                     	;# 
   538  009A                     	;# 
   539  009B                     	;# 
   540  009C                     	;# 
   541  009D                     	;# 
   542  009E                     	;# 
   543  009F                     	;# 
   544  0105                     	;# 
   545  0107                     	;# 
   546  0108                     	;# 
   547  0109                     	;# 
   548  010C                     	;# 
   549  010C                     	;# 
   550  010D                     	;# 
   551  010E                     	;# 
   552  010F                     	;# 
   553  0185                     	;# 
   554  0187                     	;# 
   555  0188                     	;# 
   556  0189                     	;# 
   557  018C                     	;# 
   558  018D                     	;# 
   559  0000                     	;# 
   560  0001                     	;# 
   561  0002                     	;# 
   562  0003                     	;# 
   563  0004                     	;# 
   564  0005                     	;# 
   565  0006                     	;# 
   566  0007                     	;# 
   567  0008                     	;# 
   568  0009                     	;# 
   569  000A                     	;# 
   570  000B                     	;# 
   571  000C                     	;# 
   572  000D                     	;# 
   573  000E                     	;# 
   574  000E                     	;# 
   575  000F                     	;# 
   576  0010                     	;# 
   577  0011                     	;# 
   578  0012                     	;# 
   579  0013                     	;# 
   580  0014                     	;# 
   581  0015                     	;# 
   582  0015                     	;# 
   583  0016                     	;# 
   584  0017                     	;# 
   585  0018                     	;# 
   586  0019                     	;# 
   587  001A                     	;# 
   588  001B                     	;# 
   589  001B                     	;# 
   590  001C                     	;# 
   591  001D                     	;# 
   592  001E                     	;# 
   593  001F                     	;# 
   594  0081                     	;# 
   595  0085                     	;# 
   596  0086                     	;# 
   597  0087                     	;# 
   598  0088                     	;# 
   599  0089                     	;# 
   600  008C                     	;# 
   601  008D                     	;# 
   602  008E                     	;# 
   603  008F                     	;# 
   604  0090                     	;# 
   605  0091                     	;# 
   606  0092                     	;# 
   607  0093                     	;# 
   608  0093                     	;# 
   609  0093                     	;# 
   610  0094                     	;# 
   611  0095                     	;# 
   612  0096                     	;# 
   613  0097                     	;# 
   614  0098                     	;# 
   615  0099                     	;# 
   616  009A                     	;# 
   617  009B                     	;# 
   618  009C                     	;# 
   619  009D                     	;# 
   620  009E                     	;# 
   621  009F                     	;# 
   622  0105                     	;# 
   623  0107                     	;# 
   624  0108                     	;# 
   625  0109                     	;# 
   626  010C                     	;# 
   627  010C                     	;# 
   628  010D                     	;# 
   629  010E                     	;# 
   630  010F                     	;# 
   631  0185                     	;# 
   632  0187                     	;# 
   633  0188                     	;# 
   634  0189                     	;# 
   635  018C                     	;# 
   636  018D                     	;# 
   637  0000                     	;# 
   638  0001                     	;# 
   639  0002                     	;# 
   640  0003                     	;# 
   641  0004                     	;# 
   642  0005                     	;# 
   643  0006                     	;# 
   644  0007                     	;# 
   645  0008                     	;# 
   646  0009                     	;# 
   647  000A                     	;# 
   648  000B                     	;# 
   649  000C                     	;# 
   650  000D                     	;# 
   651  000E                     	;# 
   652  000E                     	;# 
   653  000F                     	;# 
   654  0010                     	;# 
   655  0011                     	;# 
   656  0012                     	;# 
   657  0013                     	;# 
   658  0014                     	;# 
   659  0015                     	;# 
   660  0015                     	;# 
   661  0016                     	;# 
   662  0017                     	;# 
   663  0018                     	;# 
   664  0019                     	;# 
   665  001A                     	;# 
   666  001B                     	;# 
   667  001B                     	;# 
   668  001C                     	;# 
   669  001D                     	;# 
   670  001E                     	;# 
   671  001F                     	;# 
   672  0081                     	;# 
   673  0085                     	;# 
   674  0086                     	;# 
   675  0087                     	;# 
   676  0088                     	;# 
   677  0089                     	;# 
   678  008C                     	;# 
   679  008D                     	;# 
   680  008E                     	;# 
   681  008F                     	;# 
   682  0090                     	;# 
   683  0091                     	;# 
   684  0092                     	;# 
   685  0093                     	;# 
   686  0093                     	;# 
   687  0093                     	;# 
   688  0094                     	;# 
   689  0095                     	;# 
   690  0096                     	;# 
   691  0097                     	;# 
   692  0098                     	;# 
   693  0099                     	;# 
   694  009A                     	;# 
   695  009B                     	;# 
   696  009C                     	;# 
   697  009D                     	;# 
   698  009E                     	;# 
   699  009F                     	;# 
   700  0105                     	;# 
   701  0107                     	;# 
   702  0108                     	;# 
   703  0109                     	;# 
   704  010C                     	;# 
   705  010C                     	;# 
   706  010D                     	;# 
   707  010E                     	;# 
   708  010F                     	;# 
   709  0185                     	;# 
   710  0187                     	;# 
   711  0188                     	;# 
   712  0189                     	;# 
   713  018C                     	;# 
   714  018D                     	;# 
   715                           
   716                           	psect	idataBANK0
   717  07F6                     __pidataBANK0:	
   718                           
   719                           ;initializer for _d_atras
   720  07F6  3466               	retlw	102
   721                           
   722                           ;initializer for _d_frente
   723  07F7  3466               	retlw	102
   724                           
   725                           ;initializer for _inclinacion
   726  07F8  3404               	retlw	4
   727                           
   728                           ;initializer for _humedad
   729  07F9  3405               	retlw	5
   730                           
   731                           ;initializer for _jahr
   732  07FA  3414               	retlw	20
   733                           
   734                           ;initializer for _mes
   735  07FB  3403               	retlw	3
   736                           
   737                           ;initializer for _datum
   738  07FC  3406               	retlw	6
   739                           
   740                           ;initializer for _dia
   741  07FD  3405               	retlw	5
   742                           
   743                           ;initializer for _hora
   744  07FE  3410               	retlw	16
   745                           
   746                           ;initializer for _min
   747  07FF  3415               	retlw	21
   748                           
   749                           	psect	strings
   750  0800                     __pstrings:	
   751  0800                     stringtab:	
   752  0800                     __stringtab:	
   753  0800                     stringcode:	
   754                           ;	String table - string pointers are 1 byte each
   755                           
   756  0800                     stringdir:	
   757  0800  3008               	movlw	high stringdir
   758  0801  008A               	movwf	10
   759  0802  0804               	movf	4,w
   760  0803  0A84               	incf	4,f
   761  0804  0782               	addwf	2,f
   762  0805                     __stringbase:	
   763  0805  3400               	retlw	0
   764  0806                     __end_of__stringtab:	
   765  0806                     _gota:	
   766  0806  3404               	retlw	4
   767  0807  340A               	retlw	10
   768  0808  340A               	retlw	10
   769  0809  3411               	retlw	17
   770  080A  3411               	retlw	17
   771  080B  3411               	retlw	17
   772  080C  340E               	retlw	14
   773  080D  3400               	retlw	0
   774  080E                     __end_of_gota:	
   775  080E                     _termometro:	
   776  080E  3404               	retlw	4
   777  080F  340A               	retlw	10
   778  0810  340A               	retlw	10
   779  0811  340E               	retlw	14
   780  0812  340E               	retlw	14
   781  0813  341F               	retlw	31
   782  0814  341F               	retlw	31
   783  0815  340E               	retlw	14
   784  0816                     __end_of_termometro:	
   785  0816                     _atilde:	
   786  0816  3402               	retlw	2
   787  0817  3404               	retlw	4
   788  0818  3400               	retlw	0
   789  0819  340E               	retlw	14
   790  081A  3401               	retlw	1
   791  081B  340F               	retlw	15
   792  081C  3411               	retlw	17
   793  081D  340F               	retlw	15
   794  081E                     __end_of_atilde:	
   795  081E                     _arrowr_vacio:	
   796  081E  3400               	retlw	0
   797  081F  3408               	retlw	8
   798  0820  340C               	retlw	12
   799  0821  340A               	retlw	10
   800  0822  3409               	retlw	9
   801  0823  340A               	retlw	10
   802  0824  340C               	retlw	12
   803  0825  3408               	retlw	8
   804  0826                     __end_of_arrowr_vacio:	
   805  0826                     _arrowr:	
   806  0826  3400               	retlw	0
   807  0827  3408               	retlw	8
   808  0828  340C               	retlw	12
   809  0829  340E               	retlw	14
   810  082A  340F               	retlw	15
   811  082B  340E               	retlw	14
   812  082C  340C               	retlw	12
   813  082D  3408               	retlw	8
   814  082E                     __end_of_arrowr:	
   815  0019                     _TXREG	set	25
   816  001A                     _RCREG	set	26
   817  0018                     _RCSTAbits	set	24
   818  0008                     _PORTD	set	8
   819  0005                     _PORTAbits	set	5
   820  0013                     _SSPBUF	set	19
   821  0014                     _SSPCON	set	20
   822  0006                     _PORTBbits	set	6
   823  001F                     _ADCON0bits	set	31
   824  001E                     _ADRESH	set	30
   825  000C                     _PIR1bits	set	12
   826  0005                     _PORTA	set	5
   827  000B                     _INTCONbits	set	11
   828  0063                     _SSPIF	set	99
   829  005E                     _PEIE	set	94
   830  005F                     _GIE	set	95
   831  009A                     _SPBRGH	set	154
   832  0099                     _SPBRG	set	153
   833  0098                     _TXSTAbits	set	152
   834  0091                     _SSPCON2bits	set	145
   835  0087                     _TRISCbits	set	135
   836  0094                     _SSPSTAT	set	148
   837  0093                     _SSPADD	set	147
   838  0091                     _SSPCON2	set	145
   839  008F                     _OSCCONbits	set	143
   840  009F                     _ADCON1bits	set	159
   841  0089                     _TRISE	set	137
   842  0085                     _TRISA	set	133
   843  0088                     _TRISD	set	136
   844  0096                     _IOCB	set	150
   845  0081                     _OPTION_REGbits	set	129
   846  0095                     _WPUB	set	149
   847  0086                     _TRISB	set	134
   848  0463                     _SSPIE	set	1123
   849  043C                     _TRISC4	set	1084
   850  043B                     _TRISC3	set	1083
   851  0187                     _BAUDCTLbits	set	391
   852  0188                     _ANSEL	set	392
   853  0189                     _ANSELH	set	393
   854  082E                     STR_2:	
   855  082E  3441               	retlw	65	;'A'
   856  082F  346D               	retlw	109	;'m'
   857  0830  3462               	retlw	98	;'b'
   858  0831  3469               	retlw	105	;'i'
   859  0832  3465               	retlw	101	;'e'
   860  0833  346E               	retlw	110	;'n'
   861  0834  3474               	retlw	116	;'t'
   862  0835  3465               	retlw	101	;'e'
   863  0836  343A               	retlw	58	;':'
   864  0837  3420               	retlw	32	;' '
   865  0838  3453               	retlw	83	;'S'
   866  0839  3475               	retlw	117	;'u'
   867  083A  3465               	retlw	101	;'e'
   868  083B  346C               	retlw	108	;'l'
   869  083C  346F               	retlw	111	;'o'
   870  083D  343A               	retlw	58	;':'
   871  083E  3400               	retlw	0
   872  083F                     STR_6:	
   873  083F  3445               	retlw	69	;'E'
   874  0840  344D               	retlw	77	;'M'
   875  0841  3445               	retlw	69	;'E'
   876  0842  3452               	retlw	82	;'R'
   877  0843  3447               	retlw	71	;'G'
   878  0844  3445               	retlw	69	;'E'
   879  0845  344E               	retlw	78	;'N'
   880  0846  3443               	retlw	67	;'C'
   881  0847  3449               	retlw	73	;'I'
   882  0848  3441               	retlw	65	;'A'
   883  0849  3421               	retlw	33	;'!'
   884  084A  3420               	retlw	32	;' '
   885  084B  3420               	retlw	32	;' '
   886  084C  3400               	retlw	0
   887  084D                     STR_16:	
   888  084D  3449               	retlw	73	;'I'
   889  084E  344E               	retlw	78	;'N'
   890  084F  3449               	retlw	73	;'I'
   891  0850  3443               	retlw	67	;'C'
   892  0851  3449               	retlw	73	;'I'
   893  0852  3441               	retlw	65	;'A'
   894  0853  344E               	retlw	78	;'N'
   895  0854  3444               	retlw	68	;'D'
   896  0855  344F               	retlw	79	;'O'
   897  0856  342E               	retlw	46	;'.'
   898  0857  342E               	retlw	46	;'.'
   899  0858  342E               	retlw	46	;'.'
   900  0859  3400               	retlw	0
   901  085A                     STR_9:	
   902  085A  3473               	retlw	115	;'s'
   903  085B  343A               	retlw	58	;':'
   904  085C  3420               	retlw	32	;' '
   905  085D  347C               	retlw	124	;'|'
   906  085E  3420               	retlw	32	;' '
   907  085F  3446               	retlw	70	;'F'
   908  0860  3472               	retlw	114	;'r'
   909  0861  3465               	retlw	101	;'e'
   910  0862  346E               	retlw	110	;'n'
   911  0863  3474               	retlw	116	;'t'
   912  0864  3465               	retlw	101	;'e'
   913  0865  343A               	retlw	58	;':'
   914  0866  3400               	retlw	0
   915  0867                     STR_3:	
   916  0867  3449               	retlw	73	;'I'
   917  0868  346E               	retlw	110	;'n'
   918  0869  3463               	retlw	99	;'c'
   919  086A  346C               	retlw	108	;'l'
   920  086B  3469               	retlw	105	;'i'
   921  086C  346E               	retlw	110	;'n'
   922  086D  3461               	retlw	97	;'a'
   923  086E  3463               	retlw	99	;'c'
   924  086F  3469               	retlw	105	;'i'
   925  0870  346F               	retlw	111	;'o'
   926  0871  346E               	retlw	110	;'n'
   927  0872  343A               	retlw	58	;':'
   928  0873  3400               	retlw	0
   929  0874                     STR_14:	
   930  0874  3454               	retlw	84	;'T'
   931  0875  346F               	retlw	111	;'o'
   932  0876  346D               	retlw	109	;'m'
   933  0877  3461               	retlw	97	;'a'
   934  0878  3472               	retlw	114	;'r'
   935  0879  3420               	retlw	32	;' '
   936  087A  3464               	retlw	100	;'d'
   937  087B  3461               	retlw	97	;'a'
   938  087C  3474               	retlw	116	;'t'
   939  087D  346F               	retlw	111	;'o'
   940  087E  3473               	retlw	115	;'s'
   941  087F  343A               	retlw	58	;':'
   942  0880  3400               	retlw	0
   943  0881                     STR_5:	
   944  0881  3450               	retlw	80	;'P'
   945  0882  3465               	retlw	101	;'e'
   946  0883  346C               	retlw	108	;'l'
   947  0884  3469               	retlw	105	;'i'
   948  0885  3467               	retlw	103	;'g'
   949  0886  3472               	retlw	114	;'r'
   950  0887  346F               	retlw	111	;'o'
   951  0888  3421               	retlw	33	;'!'
   952  0889  3420               	retlw	32	;' '
   953  088A  3420               	retlw	32	;' '
   954  088B  3420               	retlw	32	;' '
   955  088C  3400               	retlw	0
   956  088D                     STR_4:	
   957  088D  3445               	retlw	69	;'E'
   958  088E  3473               	retlw	115	;'s'
   959  088F  3474               	retlw	116	;'t'
   960  0890  3461               	retlw	97	;'a'
   961  0891  3462               	retlw	98	;'b'
   962  0892  346C               	retlw	108	;'l'
   963  0893  3465               	retlw	101	;'e'
   964  0894  3420               	retlw	32	;' '
   965  0895  3420               	retlw	32	;' '
   966  0896  3420               	retlw	32	;' '
   967  0897  3400               	retlw	0
   968  0898                     STR_7:	
   969  0898  3448               	retlw	72	;'H'
   970  0899  3475               	retlw	117	;'u'
   971  089A  346D               	retlw	109	;'m'
   972  089B  3465               	retlw	101	;'e'
   973  089C  3464               	retlw	100	;'d'
   974  089D  3461               	retlw	97	;'a'
   975  089E  3464               	retlw	100	;'d'
   976  089F  343A               	retlw	58	;':'
   977  08A0  3400               	retlw	0
   978  08A1                     STR_17:	
   979  08A1  3445               	retlw	69	;'E'
   980  08A2  3452               	retlw	82	;'R'
   981  08A3  3452               	retlw	82	;'R'
   982  08A4  344F               	retlw	79	;'O'
   983  08A5  3452               	retlw	82	;'R'
   984  08A6  3400               	retlw	0
   985  08A7                     STR_11:	
   986  08A7  342D               	retlw	45	;'-'
   987  08A8  342D               	retlw	45	;'-'
   988  08A9  342D               	retlw	45	;'-'
   989  08AA  342D               	retlw	45	;'-'
   990  08AB  3400               	retlw	0
   991  08AC                     STR_8:	
   992  08AC  3441               	retlw	65	;'A'
   993  08AD  3474               	retlw	116	;'t'
   994  08AE  3472               	retlw	114	;'r'
   995  08AF  3400               	retlw	0
   996  08B0                     STR_15:	
   997  08B0  3478               	retlw	120	;'x'
   998  08B1  3420               	retlw	32	;' '
   999  08B2  3400               	retlw	0
  1000  08B3                     STR_1:	
  1001  08B3  3432               	retlw	50	;'2'
  1002  08B4  3430               	retlw	48	;'0'
  1003  08B5  3400               	retlw	0
  1004  08B6                     STR_10:	
  1005  08B6  3463               	retlw	99	;'c'
  1006  08B7  346D               	retlw	109	;'m'
  1007  08B8  3400               	retlw	0
  1008  08A7                     
  1009                           ; #config settings
  1010  0000                     
  1011                           	psect	cinit
  1012  000F                     start_initialization:	
  1013  000F                     __initialization:	
  1014                           
  1015                           ; Initialize objects allocated to BANK0
  1016  000F  1383               	bcf	3,7	;select IRP bank0
  1017  0010  3060               	movlw	low (__pdataBANK0+10)
  1018  0011  00FD               	movwf	btemp+-1
  1019  0012  3007               	movlw	high __pidataBANK0
  1020  0013  00FE               	movwf	btemp
  1021  0014  30F6               	movlw	low __pidataBANK0
  1022  0015  00FF               	movwf	btemp+1
  1023  0016  3056               	movlw	low __pdataBANK0
  1024  0017  0084               	movwf	4
  1025  0018  160A  118A  266C  120A  118A  	fcall	init_ram0
  1026                           
  1027                           ; Clear objects allocated to BANK0
  1028  001D  3043               	movlw	low __pbssBANK0
  1029  001E  0084               	movwf	4
  1030  001F  3056               	movlw	low (__pbssBANK0+19)
  1031  0020  160A  118A  2626   	fcall	clear_ram0
  1032                           
  1033                           ; Clear objects allocated to COMMON
  1034  0023  01FA               	clrf	__pbssCOMMON& (0+127)
  1035  0024  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1036  0025                     end_of_initialization:	
  1037                           ;End of C runtime variable initialization code
  1038                           
  1039  0025                     __end_of__initialization:	
  1040  0025  0183               	clrf	3
  1041  0026  120A  158A  2F3B   	ljmp	_main	;jump to C main() function
  1042                           
  1043                           	psect	bssCOMMON
  1044  007A                     __pbssCOMMON:	
  1045  007A                     _banderaPUSH1:	
  1046  007A                     	ds	1
  1047  007B                     _banderaBoton:	
  1048  007B                     	ds	1
  1049                           
  1050                           	psect	bssBANK0
  1051  0043                     __pbssBANK0:	
  1052  0043                     uint_to_array@F1343:	
  1053  0043                     	ds	6
  1054  0049                     _accZ:	
  1055  0049                     	ds	2
  1056  004B                     _sprintbuffer:	
  1057  004B                     	ds	1
  1058  004C                     _ancho:	
  1059  004C                     	ds	1
  1060  004D                     _largo:	
  1061  004D                     	ds	1
  1062  004E                     _bajar:	
  1063  004E                     	ds	1
  1064  004F                     _banderaPUSH2:	
  1065  004F                     	ds	1
  1066  0050                     _obj_array:	
  1067  0050                     	ds	1
  1068  0051                     _temperatura_obj:	
  1069  0051                     	ds	1
  1070  0052                     _temperatura:	
  1071  0052                     	ds	1
  1072  0053                     _velocidad:	
  1073  0053                     	ds	1
  1074  0054                     _seg:	
  1075  0054                     	ds	1
  1076  0055                     _estado:	
  1077  0055                     	ds	1
  1078                           
  1079                           	psect	dataBANK0
  1080  0056                     __pdataBANK0:	
  1081  0056                     _d_atras:	
  1082  0056                     	ds	1
  1083  0057                     _d_frente:	
  1084  0057                     	ds	1
  1085  0058                     _inclinacion:	
  1086  0058                     	ds	1
  1087  0059                     _humedad:	
  1088  0059                     	ds	1
  1089  005A                     _jahr:	
  1090  005A                     	ds	1
  1091  005B                     _mes:	
  1092  005B                     	ds	1
  1093  005C                     _datum:	
  1094  005C                     	ds	1
  1095  005D                     _dia:	
  1096  005D                     	ds	1
  1097  005E                     _hora:	
  1098  005E                     	ds	1
  1099  005F                     _min:	
  1100  005F                     	ds	1
  1101                           
  1102                           	psect	inittext
  1103  1668                     init_fetch0:	
  1104                           ;	Called with low address in FSR and high address in W
  1105                           
  1106  1668  087E               	movf	126,w
  1107  1669  008A               	movwf	10
  1108  166A  087F               	movf	127,w
  1109  166B  0082               	movwf	2
  1110  166C                     init_ram0:	
  1111                           ;Called with:
  1112                           ;	high address of idata address in btemp 
  1113                           ;	low address of idata address in btemp+1 
  1114                           ;	low address of data in FSR
  1115                           ;	high address + 1 of data in btemp-1
  1116                           
  1117  166C  2668  160A  118A   	fcall	init_fetch0
  1118  166F  0080               	movwf	0
  1119  1670  0A84               	incf	4,f
  1120  1671  0804               	movf	4,w
  1121  1672  067D               	xorwf	125,w
  1122  1673  1903               	btfsc	3,2
  1123  1674  3400               	retlw	0
  1124  1675  0AFF               	incf	127,f
  1125  1676  1903               	btfsc	3,2
  1126  1677  0AFE               	incf	126,f
  1127  1678  2E6C               	goto	init_ram0
  1128                           
  1129                           	psect	clrtext
  1130  1626                     clear_ram0:	
  1131                           ;	Called with FSR containing the base address, and
  1132                           ;	W with the last address+1
  1133                           
  1134  1626  0064               	clrwdt	;clear the watchdog before getting into this loop
  1135  1627                     clrloop0:	
  1136  1627  0180               	clrf	0	;clear RAM location pointed to by FSR
  1137  1628  0A84               	incf	4,f	;increment pointer
  1138  1629  0604               	xorwf	4,w	;XOR with final address
  1139  162A  1903               	btfsc	3,2	;have we reached the end yet?
  1140  162B  3400               	retlw	0	;all done for this memory range, return
  1141  162C  0604               	xorwf	4,w	;XOR again to restore value
  1142  162D  2E27               	goto	clrloop0	;do the next byte
  1143                           
  1144                           	psect	cstackCOMMON
  1145  0070                     __pcstackCOMMON:	
  1146  0070                     ?_SetUp:	
  1147  0070                     ?_get_Time:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0070                     ?_get_temperatura:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0070                     ?_get_temperatura_obj:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0070                     ?_inclinacion_:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0070                     ?_get_dis:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0070                     ?_get_hum:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  0070                     ?_mostrarLCD:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  0070                     ?_pressBoton1:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171  0070                     ?_pressBoton2:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174  0070                     ?_uartTX_Write:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177  0070                     ?_LCD_init:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180  0070                     ?_LCD_clear:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183  0070                     ?_Zeit_Datum_Set:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186  0070                     ?_I2C_Master_Start:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189  0070                     ?_I2C_Master_Stop:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192  0070                     ?_init_ADC:	
  1193                           ; 1 bytes @ 0x0
  1194                           
  1195  0070                     ?_LCD_Write_Character:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198  0070                     ?_LCD_Write_String:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201  0070                     ?_uint_to_array:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204  0070                     ?_ISR:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207  0070                     ??_ISR:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210  0070                     ?_main:	
  1211                           ; 1 bytes @ 0x0
  1212                           
  1213  0070                     ?_BCD_a_DEC:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216  0070                     ?_DEC_a_BCD:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219  0070                     ?_I2C_Master_Wait:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222  0070                     ?_LCD_Cmd:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225                           
  1226                           ; 1 bytes @ 0x0
  1227  0070                     	ds	2
  1228  0072                     ??_uartTX_Write:	
  1229  0072                     ?_OSC_config:	
  1230                           ; 1 bytes @ 0x2
  1231                           
  1232  0072                     ?_uart_init:	
  1233                           ; 1 bytes @ 0x2
  1234                           
  1235  0072                     ??_I2C_Master_Start:	
  1236                           ; 1 bytes @ 0x2
  1237                           
  1238  0072                     ??_I2C_Master_Stop:	
  1239                           ; 1 bytes @ 0x2
  1240                           
  1241  0072                     ??_init_ADC:	
  1242                           ; 1 bytes @ 0x2
  1243                           
  1244  0072                     ??_LCD_Write_Character:	
  1245                           ; 1 bytes @ 0x2
  1246                           
  1247  0072                     ??_I2C_Master_Wait:	
  1248                           ; 1 bytes @ 0x2
  1249                           
  1250  0072                     ??_LCD_Cmd:	
  1251                           ; 1 bytes @ 0x2
  1252                           
  1253  0072                     ?___bmul:	
  1254                           ; 1 bytes @ 0x2
  1255                           
  1256  0072                     ?_I2C_Master_Read:	
  1257                           ; 1 bytes @ 0x2
  1258                           
  1259  0072                     ?___wmul:	
  1260                           ; 2 bytes @ 0x2
  1261                           
  1262  0072                     ?___awmod:	
  1263                           ; 2 bytes @ 0x2
  1264                           
  1265  0072                     ?___lldiv:	
  1266                           ; 2 bytes @ 0x2
  1267                           
  1268  0072                     uartTX_Write@dato:	
  1269                           ; 4 bytes @ 0x2
  1270                           
  1271  0072                     ___bmul@multiplicand:	
  1272                           ; 1 bytes @ 0x2
  1273                           
  1274  0072                     I2C_Master_Read@a:	
  1275                           ; 1 bytes @ 0x2
  1276                           
  1277  0072                     ___wmul@multiplier:	
  1278                           ; 2 bytes @ 0x2
  1279                           
  1280  0072                     ___awmod@divisor:	
  1281                           ; 2 bytes @ 0x2
  1282                           
  1283  0072                     OSC_config@frecuencia:	
  1284                           ; 2 bytes @ 0x2
  1285                           
  1286  0072                     ___lldiv@divisor:	
  1287                           ; 4 bytes @ 0x2
  1288                           
  1289                           
  1290                           ; 4 bytes @ 0x2
  1291  0072                     	ds	1
  1292  0073                     ??___bmul:	
  1293  0073                     LCD_Write_Character@caracter:	
  1294                           ; 1 bytes @ 0x3
  1295                           
  1296                           
  1297                           ; 1 bytes @ 0x3
  1298  0073                     	ds	1
  1299  0074                     ??_uart_init:	
  1300  0074                     ??_I2C_Master_Read:	
  1301                           ; 1 bytes @ 0x4
  1302                           
  1303  0074                     ??_LCD_Write_String:	
  1304                           ; 1 bytes @ 0x4
  1305                           
  1306  0074                     init_ADC@channel:	
  1307                           ; 1 bytes @ 0x4
  1308                           
  1309  0074                     LCD_Cmd@comando:	
  1310                           ; 1 bytes @ 0x4
  1311                           
  1312  0074                     ___bmul@product:	
  1313                           ; 1 bytes @ 0x4
  1314                           
  1315  0074                     LCD_Write_String@n:	
  1316                           ; 1 bytes @ 0x4
  1317                           
  1318  0074                     ___wmul@multiplicand:	
  1319                           ; 2 bytes @ 0x4
  1320                           
  1321  0074                     ___awmod@dividend:	
  1322                           ; 2 bytes @ 0x4
  1323                           
  1324                           
  1325                           ; 2 bytes @ 0x4
  1326  0074                     	ds	1
  1327  0075                     ??_get_temperatura:	
  1328  0075                     ??_get_temperatura_obj:	
  1329                           ; 1 bytes @ 0x5
  1330                           
  1331  0075                     ??_inclinacion_:	
  1332                           ; 1 bytes @ 0x5
  1333                           
  1334  0075                     ??_LCD_init:	
  1335                           ; 1 bytes @ 0x5
  1336                           
  1337  0075                     ?_LCD_Create_Char:	
  1338                           ; 1 bytes @ 0x5
  1339                           
  1340  0075                     ??_LCD_clear:	
  1341                           ; 1 bytes @ 0x5
  1342                           
  1343  0075                     ?_LCD_Set_Cursor:	
  1344                           ; 1 bytes @ 0x5
  1345                           
  1346  0075                     LCD_Set_Cursor@columna:	
  1347                           ; 1 bytes @ 0x5
  1348                           
  1349  0075                     LCD_Create_Char@chardata:	
  1350                           ; 1 bytes @ 0x5
  1351                           
  1352  0075                     ___bmul@multiplier:	
  1353                           ; 1 bytes @ 0x5
  1354                           
  1355                           
  1356                           ; 1 bytes @ 0x5
  1357  0075                     	ds	1
  1358  0076                     ??_OSC_config:	
  1359  0076                     ??_LCD_Create_Char:	
  1360                           ; 1 bytes @ 0x6
  1361                           
  1362  0076                     ??_LCD_Set_Cursor:	
  1363                           ; 1 bytes @ 0x6
  1364                           
  1365  0076                     ??_BCD_a_DEC:	
  1366                           ; 1 bytes @ 0x6
  1367                           
  1368  0076                     ??___wmul:	
  1369                           ; 1 bytes @ 0x6
  1370                           
  1371  0076                     ??___awmod:	
  1372                           ; 1 bytes @ 0x6
  1373                           
  1374  0076                     LCD_Write_String@a:	
  1375                           ; 1 bytes @ 0x6
  1376                           
  1377  0076                     I2C_Master_Read@temp:	
  1378                           ; 1 bytes @ 0x6
  1379                           
  1380  0076                     ___wmul@product:	
  1381                           ; 2 bytes @ 0x6
  1382                           
  1383  0076                     ___lldiv@dividend:	
  1384                           ; 2 bytes @ 0x6
  1385                           
  1386                           
  1387                           ; 4 bytes @ 0x6
  1388  0076                     	ds	1
  1389  0077                     ??_pressBoton1:	
  1390  0077                     LCD_Create_Char@charnum:	
  1391                           ; 1 bytes @ 0x7
  1392                           
  1393  0077                     ___awmod@counter:	
  1394                           ; 1 bytes @ 0x7
  1395                           
  1396                           
  1397                           ; 1 bytes @ 0x7
  1398  0077                     	ds	1
  1399  0078                     ??___awdiv:	
  1400  0078                     LCD_Set_Cursor@linea:	
  1401                           ; 1 bytes @ 0x8
  1402                           
  1403  0078                     LCD_Create_Char@n:	
  1404                           ; 1 bytes @ 0x8
  1405                           
  1406  0078                     ___awmod@sign:	
  1407                           ; 1 bytes @ 0x8
  1408                           
  1409                           
  1410                           ; 1 bytes @ 0x8
  1411  0078                     	ds	1
  1412  0079                     BCD_a_DEC@numBCD:	
  1413  0079                     DEC_a_BCD@numDEC:	
  1414                           ; 1 bytes @ 0x9
  1415                           
  1416  0079                     LCD_Set_Cursor@corrimiento:	
  1417                           ; 1 bytes @ 0x9
  1418                           
  1419                           
  1420                           ; 1 bytes @ 0x9
  1421  0079                     	ds	1
  1422  007A                     ??_I2C_Master_Write:	
  1423                           
  1424                           	psect	cstackBANK0
  1425  0020                     __pcstackBANK0:	
  1426                           ; 1 bytes @ 0xA
  1427                           
  1428  0020                     ??_pressBoton2:	
  1429  0020                     ??___lldiv:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432  0020                     ?___awdiv:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435  0020                     ___awdiv@divisor:	
  1436                           ; 2 bytes @ 0x0
  1437                           
  1438                           
  1439                           ; 2 bytes @ 0x0
  1440  0020                     	ds	1
  1441  0021                     ___lldiv@quotient:	
  1442                           
  1443                           ; 4 bytes @ 0x1
  1444  0021                     	ds	1
  1445  0022                     ___awdiv@dividend:	
  1446                           
  1447                           ; 2 bytes @ 0x2
  1448  0022                     	ds	2
  1449  0024                     ___awdiv@counter:	
  1450                           
  1451                           ; 1 bytes @ 0x4
  1452  0024                     	ds	1
  1453  0025                     ___lldiv@counter:	
  1454  0025                     ___awdiv@sign:	
  1455                           ; 1 bytes @ 0x5
  1456                           
  1457                           
  1458                           ; 1 bytes @ 0x5
  1459  0025                     	ds	1
  1460  0026                     ?_I2C_Master_Init:	
  1461  0026                     ___awdiv@quotient:	
  1462                           ; 1 bytes @ 0x6
  1463                           
  1464  0026                     I2C_Master_Init@c:	
  1465                           ; 2 bytes @ 0x6
  1466                           
  1467                           
  1468                           ; 4 bytes @ 0x6
  1469  0026                     	ds	2
  1470  0028                     ??_uint_to_array:	
  1471  0028                     ?_display_Uhrzeit:	
  1472                           ; 1 bytes @ 0x8
  1473                           
  1474  0028                     ?_display_Datum:	
  1475                           ; 1 bytes @ 0x8
  1476                           
  1477  0028                     ??_DEC_a_BCD:	
  1478                           ; 1 bytes @ 0x8
  1479                           
  1480  0028                     display_Uhrzeit@columna:	
  1481                           ; 1 bytes @ 0x8
  1482                           
  1483  0028                     display_Datum@columna:	
  1484                           ; 1 bytes @ 0x8
  1485                           
  1486                           
  1487                           ; 1 bytes @ 0x8
  1488  0028                     	ds	1
  1489  0029                     ??_display_Uhrzeit:	
  1490  0029                     ??_display_Datum:	
  1491                           ; 1 bytes @ 0x9
  1492                           
  1493                           
  1494                           ; 1 bytes @ 0x9
  1495  0029                     	ds	1
  1496  002A                     ??_I2C_Master_Init:	
  1497                           
  1498                           ; 1 bytes @ 0xA
  1499  002A                     	ds	2
  1500  002C                     display_Uhrzeit@fila:	
  1501  002C                     display_Datum@fila:	
  1502                           ; 1 bytes @ 0xC
  1503                           
  1504                           
  1505                           ; 1 bytes @ 0xC
  1506  002C                     	ds	1
  1507  002D                     ?_I2C_Master_Write:	
  1508  002D                     display_Uhrzeit@seg_u:	
  1509                           ; 1 bytes @ 0xD
  1510                           
  1511  002D                     display_Datum@dia_u:	
  1512                           ; 1 bytes @ 0xD
  1513                           
  1514  002D                     I2C_Master_Write@d:	
  1515                           ; 1 bytes @ 0xD
  1516                           
  1517                           
  1518                           ; 2 bytes @ 0xD
  1519  002D                     	ds	1
  1520  002E                     display_Uhrzeit@seg_d:	
  1521  002E                     display_Datum@dia_d:	
  1522                           ; 1 bytes @ 0xE
  1523                           
  1524  002E                     uint_to_array@decenas:	
  1525                           ; 1 bytes @ 0xE
  1526                           
  1527                           
  1528                           ; 1 bytes @ 0xE
  1529  002E                     	ds	1
  1530  002F                     ??_get_Time:	
  1531  002F                     ??_get_dis:	
  1532                           ; 1 bytes @ 0xF
  1533                           
  1534  002F                     ??_get_hum:	
  1535                           ; 1 bytes @ 0xF
  1536                           
  1537  002F                     ??_Zeit_Datum_Set:	
  1538                           ; 1 bytes @ 0xF
  1539                           
  1540  002F                     display_Uhrzeit@min_u:	
  1541                           ; 1 bytes @ 0xF
  1542                           
  1543  002F                     display_Datum@mes_u:	
  1544                           ; 1 bytes @ 0xF
  1545                           
  1546  002F                     uint_to_array@centenas:	
  1547                           ; 1 bytes @ 0xF
  1548                           
  1549                           
  1550                           ; 1 bytes @ 0xF
  1551  002F                     	ds	1
  1552  0030                     display_Uhrzeit@min_d:	
  1553  0030                     display_Datum@mes_d:	
  1554                           ; 1 bytes @ 0x10
  1555                           
  1556  0030                     uint_to_array@resultado:	
  1557                           ; 1 bytes @ 0x10
  1558                           
  1559                           
  1560                           ; 6 bytes @ 0x10
  1561  0030                     	ds	1
  1562  0031                     ??_SetUp:	
  1563  0031                     display_Uhrzeit@Uhr_u:	
  1564                           ; 1 bytes @ 0x11
  1565                           
  1566  0031                     display_Datum@jahr_u:	
  1567                           ; 1 bytes @ 0x11
  1568                           
  1569                           
  1570                           ; 1 bytes @ 0x11
  1571  0031                     	ds	1
  1572  0032                     display_Uhrzeit@Uhr_d:	
  1573  0032                     display_Datum@jahr_d:	
  1574                           ; 1 bytes @ 0x12
  1575                           
  1576                           
  1577                           ; 1 bytes @ 0x12
  1578  0032                     	ds	4
  1579  0036                     uint_to_array@numero:	
  1580                           
  1581                           ; 1 bytes @ 0x16
  1582  0036                     	ds	1
  1583  0037                     ??_mostrarLCD:	
  1584                           
  1585                           ; 1 bytes @ 0x17
  1586  0037                     	ds	3
  1587  003A                     mostrarLCD@pantalla:	
  1588                           
  1589                           ; 1 bytes @ 0x1A
  1590  003A                     	ds	1
  1591  003B                     mostrarLCD@unidades_humedad:	
  1592                           
  1593                           ; 1 bytes @ 0x1B
  1594  003B                     	ds	1
  1595  003C                     mostrarLCD@uni_frente:	
  1596                           
  1597                           ; 1 bytes @ 0x1C
  1598  003C                     	ds	1
  1599  003D                     mostrarLCD@uni_atras:	
  1600                           
  1601                           ; 1 bytes @ 0x1D
  1602  003D                     	ds	1
  1603  003E                     mostrarLCD@decenas_humedad:	
  1604                           
  1605                           ; 1 bytes @ 0x1E
  1606  003E                     	ds	1
  1607  003F                     mostrarLCD@dec_frente:	
  1608                           
  1609                           ; 1 bytes @ 0x1F
  1610  003F                     	ds	1
  1611  0040                     mostrarLCD@dec_atras:	
  1612                           
  1613                           ; 1 bytes @ 0x20
  1614  0040                     	ds	1
  1615  0041                     ??_main:	
  1616                           
  1617                           ; 1 bytes @ 0x21
  1618  0041                     	ds	2
  1619                           
  1620                           	psect	maintext
  1621  0F3B                     __pmaintext:	
  1622 ;;
  1623 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1624 ;;
  1625 ;; *************** function _main *****************
  1626 ;; Defined at:
  1627 ;;		line 147 in file "main_Master.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : B00/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1641 ;;      Params:         0       0       0       0       0
  1642 ;;      Locals:         0       0       0       0       0
  1643 ;;      Temps:          0       2       0       0       0
  1644 ;;      Totals:         0       2       0       0       0
  1645 ;;Total ram usage:        2 bytes
  1646 ;; Hardware stack levels required when called:    5
  1647 ;; This function calls:
  1648 ;;		_SetUp
  1649 ;;		_get_Time
  1650 ;;		_get_dis
  1651 ;;		_get_hum
  1652 ;;		_get_temperatura
  1653 ;;		_get_temperatura_obj
  1654 ;;		_inclinacion_
  1655 ;;		_mostrarLCD
  1656 ;;		_pressBoton1
  1657 ;;		_pressBoton2
  1658 ;;		_uartTX_Write
  1659 ;; This function is called by:
  1660 ;;		Startup code after reset
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           
  1665                           ;psect for function _main
  1666  0F3B                     _main:	
  1667                           
  1668                           ;main_Master.c: 148:     SetUp();
  1669                           
  1670                           ;incstack = 0
  1671                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1672  0F3B  120A  158A  2496  120A  158A  	fcall	_SetUp
  1673  0F40                     l4652:	
  1674                           
  1675                           ;main_Master.c: 152:         _delay((unsigned long)((10)*(1000000/4000.0)));
  1676  0F40  3004               	movlw	4
  1677  0F41  1283               	bcf	3,5	;RP0=0, select bank0
  1678  0F42  1303               	bcf	3,6	;RP1=0, select bank0
  1679  0F43  00C2               	movwf	??_main+1
  1680  0F44  303D               	movlw	61
  1681  0F45  00C1               	movwf	??_main
  1682  0F46                     u2037:	
  1683  0F46  0BC1               	decfsz	??_main,f
  1684  0F47  2F46               	goto	u2037
  1685  0F48  0BC2               	decfsz	??_main+1,f
  1686  0F49  2F46               	goto	u2037
  1687                           
  1688                           ;main_Master.c: 153:         get_Time();
  1689  0F4A  120A  118A  2456  120A  158A  	fcall	_get_Time
  1690                           
  1691                           ;main_Master.c: 154:         _delay((unsigned long)((50)*(1000000/4000.0)));
  1692  0F4F  3011               	movlw	17
  1693  0F50  1283               	bcf	3,5	;RP0=0, select bank0
  1694  0F51  1303               	bcf	3,6	;RP1=0, select bank0
  1695  0F52  00C2               	movwf	??_main+1
  1696  0F53  3039               	movlw	57
  1697  0F54  00C1               	movwf	??_main
  1698  0F55                     u2047:	
  1699  0F55  0BC1               	decfsz	??_main,f
  1700  0F56  2F55               	goto	u2047
  1701  0F57  0BC2               	decfsz	??_main+1,f
  1702  0F58  2F55               	goto	u2047
  1703  0F59  2F5A               	nop2
  1704                           
  1705                           ;main_Master.c: 155:         get_temperatura();
  1706  0F5A  160A  118A  26BA  120A  158A  	fcall	_get_temperatura
  1707                           
  1708                           ;main_Master.c: 156:         _delay((unsigned long)((50)*(1000000/4000.0)));
  1709  0F5F  3011               	movlw	17
  1710  0F60  1283               	bcf	3,5	;RP0=0, select bank0
  1711  0F61  1303               	bcf	3,6	;RP1=0, select bank0
  1712  0F62  00C2               	movwf	??_main+1
  1713  0F63  3039               	movlw	57
  1714  0F64  00C1               	movwf	??_main
  1715  0F65                     u2057:	
  1716  0F65  0BC1               	decfsz	??_main,f
  1717  0F66  2F65               	goto	u2057
  1718  0F67  0BC2               	decfsz	??_main+1,f
  1719  0F68  2F65               	goto	u2057
  1720  0F69  2F6A               	nop2
  1721                           
  1722                           ;main_Master.c: 157:         get_temperatura_obj();
  1723  0F6A  160A  118A  26D1  120A  158A  	fcall	_get_temperatura_obj
  1724                           
  1725                           ;main_Master.c: 158:         _delay((unsigned long)((50)*(1000000/4000.0)));
  1726  0F6F  3011               	movlw	17
  1727  0F70  1283               	bcf	3,5	;RP0=0, select bank0
  1728  0F71  1303               	bcf	3,6	;RP1=0, select bank0
  1729  0F72  00C2               	movwf	??_main+1
  1730  0F73  3039               	movlw	57
  1731  0F74  00C1               	movwf	??_main
  1732  0F75                     u2067:	
  1733  0F75  0BC1               	decfsz	??_main,f
  1734  0F76  2F75               	goto	u2067
  1735  0F77  0BC2               	decfsz	??_main+1,f
  1736  0F78  2F75               	goto	u2067
  1737  0F79  2F7A               	nop2
  1738                           
  1739                           ;main_Master.c: 159:         inclinacion_();
  1740  0F7A  120A  158A  20BE  120A  158A  	fcall	_inclinacion_
  1741                           
  1742                           ;main_Master.c: 160:         _delay((unsigned long)((50)*(1000000/4000.0)));
  1743  0F7F  3011               	movlw	17
  1744  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  1745  0F81  1303               	bcf	3,6	;RP1=0, select bank0
  1746  0F82  00C2               	movwf	??_main+1
  1747  0F83  3039               	movlw	57
  1748  0F84  00C1               	movwf	??_main
  1749  0F85                     u2077:	
  1750  0F85  0BC1               	decfsz	??_main,f
  1751  0F86  2F85               	goto	u2077
  1752  0F87  0BC2               	decfsz	??_main+1,f
  1753  0F88  2F85               	goto	u2077
  1754  0F89  2F8A               	nop2
  1755                           
  1756                           ;main_Master.c: 161:         get_dis();
  1757  0F8A  120A  158A  2393  120A  158A  	fcall	_get_dis
  1758                           
  1759                           ;main_Master.c: 162:         _delay((unsigned long)((50)*(1000000/4000.0)));
  1760  0F8F  3011               	movlw	17
  1761  0F90  1283               	bcf	3,5	;RP0=0, select bank0
  1762  0F91  1303               	bcf	3,6	;RP1=0, select bank0
  1763  0F92  00C2               	movwf	??_main+1
  1764  0F93  3039               	movlw	57
  1765  0F94  00C1               	movwf	??_main
  1766  0F95                     u2087:	
  1767  0F95  0BC1               	decfsz	??_main,f
  1768  0F96  2F95               	goto	u2087
  1769  0F97  0BC2               	decfsz	??_main+1,f
  1770  0F98  2F95               	goto	u2087
  1771  0F99  2F9A               	nop2
  1772                           
  1773                           ;main_Master.c: 163:         get_hum();
  1774  0F9A  160A  118A  2709  120A  158A  	fcall	_get_hum
  1775                           
  1776                           ;main_Master.c: 169:         mostrarLCD(estado);
  1777  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  1778  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  1779  0FA1  0855               	movf	_estado,w
  1780  0FA2  120A  118A  2029  120A  158A  	fcall	_mostrarLCD
  1781                           
  1782                           ;main_Master.c: 170:         pressBoton1();
  1783  0FA7  120A  158A  22A8  120A  158A  	fcall	_pressBoton1
  1784                           
  1785                           ;main_Master.c: 171:         pressBoton2();
  1786  0FAC  120A  158A  25DE  120A  158A  	fcall	_pressBoton2
  1787                           
  1788                           ;main_Master.c: 173:         uartTX_Write(125);
  1789  0FB1  307D               	movlw	125
  1790  0FB2  160A  118A  261E  120A  158A  	fcall	_uartTX_Write
  1791                           
  1792                           ;main_Master.c: 174:         uartTX_Write(hora);
  1793  0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  1794  0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  1795  0FB9  085E               	movf	_hora,w
  1796  0FBA  160A  118A  261E  120A  158A  	fcall	_uartTX_Write
  1797                           
  1798                           ;main_Master.c: 175:         uartTX_Write(min);
  1799  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  1800  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  1801  0FC1  085F               	movf	_min,w
  1802  0FC2  160A  118A  261E  120A  158A  	fcall	_uartTX_Write
  1803                           
  1804                           ;main_Master.c: 176:         uartTX_Write(seg);
  1805  0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  1806  0FC8  1303               	bcf	3,6	;RP1=0, select bank0
  1807  0FC9  0854               	movf	_seg,w
  1808  0FCA  160A  118A  261E  120A  158A  	fcall	_uartTX_Write
  1809                           
  1810                           ;main_Master.c: 177:         uartTX_Write(temperatura);
  1811  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  1812  0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  1813  0FD1  0852               	movf	_temperatura,w
  1814  0FD2  160A  118A  261E  120A  158A  	fcall	_uartTX_Write
  1815                           
  1816                           ;main_Master.c: 178:         uartTX_Write(temperatura_obj);
  1817  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  1818  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  1819  0FD9  0851               	movf	_temperatura_obj,w
  1820  0FDA  160A  118A  261E  120A  158A  	fcall	_uartTX_Write
  1821                           
  1822                           ;main_Master.c: 179:         uartTX_Write(inclinacion);
  1823  0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0FE0  1303               	bcf	3,6	;RP1=0, select bank0
  1825  0FE1  0858               	movf	_inclinacion,w
  1826  0FE2  160A  118A  261E  120A  158A  	fcall	_uartTX_Write
  1827                           
  1828                           ;main_Master.c: 180:         uartTX_Write(humedad);
  1829  0FE7  1283               	bcf	3,5	;RP0=0, select bank0
  1830  0FE8  1303               	bcf	3,6	;RP1=0, select bank0
  1831  0FE9  0859               	movf	_humedad,w
  1832  0FEA  160A  118A  261E  120A  158A  	fcall	_uartTX_Write
  1833                           
  1834                           ;main_Master.c: 181:         uartTX_Write(d_frente);
  1835  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  1836  0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  1837  0FF1  0857               	movf	_d_frente,w
  1838  0FF2  160A  118A  261E  120A  158A  	fcall	_uartTX_Write
  1839                           
  1840                           ;main_Master.c: 182:         uartTX_Write(d_atras);
  1841  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  1842  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  1843  0FF9  0856               	movf	_d_atras,w
  1844  0FFA  160A  118A  261E  120A  158A  	fcall	_uartTX_Write
  1845  0FFF  2F40               	goto	l4652
  1846  1000                     __end_of_main:	
  1847                           
  1848                           	psect	text1
  1849  161E                     __ptext1:	
  1850 ;; *************** function _uartTX_Write *****************
  1851 ;; Defined at:
  1852 ;;		line 34 in file "UART.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  dato            1    wreg     unsigned char 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;  dato            1    2[COMMON] unsigned char 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      void 
  1859 ;; Registers used:
  1860 ;;		wreg
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1866 ;;      Params:         0       0       0       0       0
  1867 ;;      Locals:         1       0       0       0       0
  1868 ;;      Temps:          0       0       0       0       0
  1869 ;;      Totals:         1       0       0       0       0
  1870 ;;Total ram usage:        1 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; Hardware stack levels required when called:    1
  1873 ;; This function calls:
  1874 ;;		Nothing
  1875 ;; This function is called by:
  1876 ;;		_main
  1877 ;;		_uartTX_Write_Str
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           
  1882                           ;psect for function _uartTX_Write
  1883  161E                     _uartTX_Write:	
  1884                           
  1885                           ;incstack = 0
  1886                           ; Regs used in _uartTX_Write: [wreg]
  1887                           ;uartTX_Write@dato stored from wreg
  1888  161E  00F2               	movwf	uartTX_Write@dato
  1889                           
  1890                           ;UART.c: 35:     TXREG = dato;
  1891  161F  0872               	movf	uartTX_Write@dato,w
  1892  1620  1283               	bcf	3,5	;RP0=0, select bank0
  1893  1621  1303               	bcf	3,6	;RP1=0, select bank0
  1894  1622  0099               	movwf	25	;volatile
  1895  1623                     l502:	
  1896                           ;UART.c: 36:     while(PIR1bits.TXIF == 0);
  1897                           
  1898  1623  1A0C               	btfsc	12,4	;volatile
  1899  1624  0008               	return
  1900  1625  2E23               	goto	l502
  1901  1626                     __end_of_uartTX_Write:	
  1902                           
  1903                           	psect	text2
  1904  0DDE                     __ptext2:	
  1905 ;; *************** function _pressBoton2 *****************
  1906 ;; Defined at:
  1907 ;;		line 699 in file "main_Master.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1921 ;;      Params:         0       0       0       0       0
  1922 ;;      Locals:         0       0       0       0       0
  1923 ;;      Temps:          0       2       0       0       0
  1924 ;;      Totals:         0       2       0       0       0
  1925 ;;Total ram usage:        2 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; Hardware stack levels required when called:    3
  1928 ;; This function calls:
  1929 ;;		_LCD_Set_Cursor
  1930 ;;		_LCD_Write_Character
  1931 ;;		_LCD_clear
  1932 ;; This function is called by:
  1933 ;;		_main
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           
  1938                           ;psect for function _pressBoton2
  1939  0DDE                     _pressBoton2:	
  1940                           
  1941                           ;main_Master.c: 700:     if (banderaBoton == 1){
  1942                           
  1943                           ;incstack = 0
  1944                           ; Regs used in _pressBoton2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1945  0DDE  037B               	decf	_banderaBoton,w
  1946  0DDF  1D03               	btfss	3,2
  1947  0DE0  2E75               	goto	l4638
  1948                           
  1949                           ;main_Master.c: 701:         if (banderaPUSH2 == 0){
  1950  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  1952  0DE3  084F               	movf	_banderaPUSH2,w
  1953  0DE4  1D03               	btfss	3,2
  1954  0DE5  2E75               	goto	l4638
  1955                           
  1956                           ;main_Master.c: 702:             if (PORTBbits.RB2 == 0){
  1957  0DE6  1D06               	btfss	6,2	;volatile
  1958  0DE7  2E56               	goto	l4630
  1959  0DE8  2E6F               	goto	l4632
  1960  0DE9                     l4598:	
  1961                           
  1962                           ;main_Master.c: 705:                         estado = 6;
  1963  0DE9  3006               	movlw	6
  1964  0DEA  2E47               	goto	L5
  1965  0DEB                     l4600:	
  1966                           ;main_Master.c: 706:                         break;
  1967                           
  1968                           
  1969                           ;main_Master.c: 708:                         LCD_Set_Cursor(2,0);
  1970  0DEB  01F5               	clrf	LCD_Set_Cursor@columna
  1971  0DEC  3002               	movlw	2
  1972  0DED  160A  118A  27A5  120A  158A  	fcall	_LCD_Set_Cursor
  1973                           
  1974                           ;main_Master.c: 709:                         LCD_Write_Character(1);
  1975  0DF2  3001               	movlw	1
  1976  0DF3  160A  118A  2637  120A  158A  	fcall	_LCD_Write_Character
  1977                           
  1978                           ;main_Master.c: 710:                         _delay((unsigned long)((100)*(1000000/4000.
      +                          0)));
  1979  0DF8  3021               	movlw	33
  1980  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  1981  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  1982  0DFB  00A1               	movwf	??_pressBoton2+1
  1983  0DFC  3075               	movlw	117
  1984  0DFD  00A0               	movwf	??_pressBoton2
  1985  0DFE                     u2097:	
  1986  0DFE  0BA0               	decfsz	??_pressBoton2,f
  1987  0DFF  2DFE               	goto	u2097
  1988  0E00  0BA1               	decfsz	??_pressBoton2+1,f
  1989  0E01  2DFE               	goto	u2097
  1990  0E02  2E03               	nop2
  1991                           
  1992                           ;main_Master.c: 711:                         estado = 7;
  1993  0E03  3007               	movlw	7
  1994  0E04  2E45               	goto	L6
  1995  0E05                     l4608:	
  1996                           ;main_Master.c: 712:                         break;
  1997                           
  1998                           
  1999                           ;main_Master.c: 714:                         LCD_Set_Cursor(2,7);
  2000  0E05  3007               	movlw	7
  2001  0E06  00A0               	movwf	??_pressBoton2
  2002  0E07  0820               	movf	??_pressBoton2,w
  2003  0E08  00F5               	movwf	LCD_Set_Cursor@columna
  2004  0E09  3002               	movlw	2
  2005  0E0A  160A  118A  27A5  120A  158A  	fcall	_LCD_Set_Cursor
  2006                           
  2007                           ;main_Master.c: 715:                         LCD_Write_Character(1);
  2008  0E0F  3001               	movlw	1
  2009  0E10  160A  118A  2637  120A  158A  	fcall	_LCD_Write_Character
  2010                           
  2011                           ;main_Master.c: 716:                         _delay((unsigned long)((100)*(1000000/4000.
      +                          0)));
  2012  0E15  3021               	movlw	33
  2013  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  2014  0E17  1303               	bcf	3,6	;RP1=0, select bank0
  2015  0E18  00A1               	movwf	??_pressBoton2+1
  2016  0E19  3075               	movlw	117
  2017  0E1A  00A0               	movwf	??_pressBoton2
  2018  0E1B                     u2107:	
  2019  0E1B  0BA0               	decfsz	??_pressBoton2,f
  2020  0E1C  2E1B               	goto	u2107
  2021  0E1D  0BA1               	decfsz	??_pressBoton2+1,f
  2022  0E1E  2E1B               	goto	u2107
  2023  0E1F  2E20               	nop2
  2024                           
  2025                           ;main_Master.c: 717:                         estado = 8;
  2026  0E20  3008               	movlw	8
  2027  0E21  2E45               	goto	L6
  2028  0E22                     l4616:	
  2029                           ;main_Master.c: 718:                         break;
  2030                           
  2031                           
  2032                           ;main_Master.c: 720:                         LCD_Set_Cursor(2,10);
  2033  0E22  300A               	movlw	10
  2034  0E23  00A0               	movwf	??_pressBoton2
  2035  0E24  0820               	movf	??_pressBoton2,w
  2036  0E25  00F5               	movwf	LCD_Set_Cursor@columna
  2037  0E26  3002               	movlw	2
  2038  0E27  160A  118A  27A5  120A  158A  	fcall	_LCD_Set_Cursor
  2039                           
  2040                           ;main_Master.c: 721:                         LCD_Write_Character(1);
  2041  0E2C  3001               	movlw	1
  2042  0E2D  160A  118A  2637  120A  158A  	fcall	_LCD_Write_Character
  2043                           
  2044                           ;main_Master.c: 722:                         _delay((unsigned long)((100)*(1000000/4000.
      +                          0)));
  2045  0E32  3021               	movlw	33
  2046  0E33  1283               	bcf	3,5	;RP0=0, select bank0
  2047  0E34  1303               	bcf	3,6	;RP1=0, select bank0
  2048  0E35  00A1               	movwf	??_pressBoton2+1
  2049  0E36  3075               	movlw	117
  2050  0E37  00A0               	movwf	??_pressBoton2
  2051  0E38                     u2117:	
  2052  0E38  0BA0               	decfsz	??_pressBoton2,f
  2053  0E39  2E38               	goto	u2117
  2054  0E3A  0BA1               	decfsz	??_pressBoton2+1,f
  2055  0E3B  2E38               	goto	u2117
  2056  0E3C  2E3D               	nop2
  2057                           
  2058                           ;main_Master.c: 723:                         estado = 9;
  2059  0E3D  3009               	movlw	9
  2060  0E3E  2E45               	goto	L6
  2061  0E3F                     l4624:	
  2062                           ;main_Master.c: 724:                         break;
  2063                           
  2064                           
  2065                           ;main_Master.c: 726:                         LCD_clear();
  2066  0E3F  160A  118A  268E  120A  158A  	fcall	_LCD_clear
  2067                           
  2068                           ;main_Master.c: 727:                         estado = 10;
  2069  0E44  300A               	movlw	10
  2070  0E45                     L6:	
  2071  0E45  1283               	bcf	3,5	;RP0=0, select bank0
  2072  0E46  1303               	bcf	3,6	;RP1=0, select bank0
  2073  0E47                     L5:	
  2074  0E47  00A0               	movwf	??_pressBoton2
  2075  0E48  0820               	movf	??_pressBoton2,w
  2076  0E49  00D5               	movwf	_estado
  2077                           
  2078                           ;main_Master.c: 728:                         break;
  2079  0E4A  2E6F               	goto	l4632
  2080  0E4B                     l4628:	
  2081                           
  2082                           ;main_Master.c: 730:                         _delay((unsigned long)((10)*(1000000/4000.0
      +                          )));
  2083  0E4B  3004               	movlw	4
  2084  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  2086  0E4E  00A1               	movwf	??_pressBoton2+1
  2087  0E4F  303D               	movlw	61
  2088  0E50  00A0               	movwf	??_pressBoton2
  2089  0E51                     u2127:	
  2090  0E51  0BA0               	decfsz	??_pressBoton2,f
  2091  0E52  2E51               	goto	u2127
  2092  0E53  0BA1               	decfsz	??_pressBoton2+1,f
  2093  0E54  2E51               	goto	u2127
  2094                           
  2095                           ;main_Master.c: 731:                 }
  2096  0E55  2E6F               	goto	l4632
  2097  0E56                     l4630:	
  2098  0E56  0855               	movf	_estado,w
  2099  0E57  00A0               	movwf	??_pressBoton2
  2100  0E58  01A1               	clrf	??_pressBoton2+1
  2101                           
  2102                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2103                           ; Switch size 1, requested type "simple"
  2104                           ; Number of cases is 1, Range of values is 0 to 0
  2105                           ; switch strategies available:
  2106                           ; Name         Instructions Cycles
  2107                           ; simple_byte            4     3 (average)
  2108                           ; direct_byte           11     8 (fixed)
  2109                           ; jumptable            260     6 (fixed)
  2110                           ;	Chosen strategy is simple_byte
  2111  0E59  0821               	movf	??_pressBoton2+1,w
  2112  0E5A  3A00               	xorlw	0	; case 0
  2113  0E5B  1903               	skipnz
  2114  0E5C  2E5E               	goto	l5150
  2115  0E5D  2E4B               	goto	l4628
  2116  0E5E                     l5150:	
  2117                           
  2118                           ; Switch size 1, requested type "simple"
  2119                           ; Number of cases is 5, Range of values is 5 to 9
  2120                           ; switch strategies available:
  2121                           ; Name         Instructions Cycles
  2122                           ; simple_byte           16     9 (average)
  2123                           ; direct_byte           26    11 (fixed)
  2124                           ; jumptable            263     9 (fixed)
  2125                           ;	Chosen strategy is simple_byte
  2126  0E5E  0820               	movf	??_pressBoton2,w
  2127  0E5F  3A05               	xorlw	5	; case 5
  2128  0E60  1903               	skipnz
  2129  0E61  2DE9               	goto	l4598
  2130  0E62  3A03               	xorlw	3	; case 6
  2131  0E63  1903               	skipnz
  2132  0E64  2DEB               	goto	l4600
  2133  0E65  3A01               	xorlw	1	; case 7
  2134  0E66  1903               	skipnz
  2135  0E67  2E05               	goto	l4608
  2136  0E68  3A0F               	xorlw	15	; case 8
  2137  0E69  1903               	skipnz
  2138  0E6A  2E22               	goto	l4616
  2139  0E6B  3A01               	xorlw	1	; case 9
  2140  0E6C  1903               	skipnz
  2141  0E6D  2E3F               	goto	l4624
  2142  0E6E  2E4B               	goto	l4628
  2143  0E6F                     l4632:	
  2144                           
  2145                           ;main_Master.c: 733:                 banderaBoton = 0;
  2146  0E6F  01FB               	clrf	_banderaBoton
  2147                           
  2148                           ;main_Master.c: 734:                 banderaPUSH2 = 1;
  2149  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  2150  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  2151  0E72  01CF               	clrf	_banderaPUSH2
  2152  0E73  0ACF               	incf	_banderaPUSH2,f
  2153                           
  2154                           ;main_Master.c: 735:                 INTCONbits.RBIE = 1;
  2155  0E74  158B               	bsf	11,3	;volatile
  2156  0E75                     l4638:	
  2157                           
  2158                           ;main_Master.c: 738:     if (banderaPUSH2 == 1){
  2159  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  2160  0E76  1303               	bcf	3,6	;RP1=0, select bank0
  2161  0E77  034F               	decf	_banderaPUSH2,w
  2162  0E78  1D03               	btfss	3,2
  2163  0E79  0008               	return
  2164                           
  2165                           ;main_Master.c: 739:         if (PORTBbits.RB2 == 1){
  2166  0E7A  1D06               	btfss	6,2	;volatile
  2167  0E7B  0008               	return
  2168                           
  2169                           ;main_Master.c: 740:         _delay((unsigned long)((10)*(1000000/4000.0)));
  2170  0E7C  3004               	movlw	4
  2171  0E7D  1283               	bcf	3,5	;RP0=0, select bank0
  2172  0E7E  1303               	bcf	3,6	;RP1=0, select bank0
  2173  0E7F  00A1               	movwf	??_pressBoton2+1
  2174  0E80  303D               	movlw	61
  2175  0E81  00A0               	movwf	??_pressBoton2
  2176  0E82                     u2137:	
  2177  0E82  0BA0               	decfsz	??_pressBoton2,f
  2178  0E83  2E82               	goto	u2137
  2179  0E84  0BA1               	decfsz	??_pressBoton2+1,f
  2180  0E85  2E82               	goto	u2137
  2181                           
  2182                           ;main_Master.c: 741:         banderaPUSH2 = 0;
  2183  0E86  1283               	bcf	3,5	;RP0=0, select bank0
  2184  0E87  1303               	bcf	3,6	;RP1=0, select bank0
  2185  0E88  01CF               	clrf	_banderaPUSH2
  2186  0E89  0008               	return
  2187  0E8A                     __end_of_pressBoton2:	
  2188                           
  2189                           	psect	text3
  2190  0AA8                     __ptext3:	
  2191 ;; *************** function _pressBoton1 *****************
  2192 ;; Defined at:
  2193 ;;		line 654 in file "main_Master.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;		None
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;		None
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      void 
  2200 ;; Registers used:
  2201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2207 ;;      Params:         0       0       0       0       0
  2208 ;;      Locals:         0       0       0       0       0
  2209 ;;      Temps:          2       0       0       0       0
  2210 ;;      Totals:         2       0       0       0       0
  2211 ;;Total ram usage:        2 bytes
  2212 ;; Hardware stack levels used:    1
  2213 ;; Hardware stack levels required when called:    3
  2214 ;; This function calls:
  2215 ;;		_LCD_clear
  2216 ;; This function is called by:
  2217 ;;		_main
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           
  2222                           ;psect for function _pressBoton1
  2223  0AA8                     _pressBoton1:	
  2224                           
  2225                           ;main_Master.c: 655:     if (banderaBoton == 1){
  2226                           
  2227                           ;incstack = 0
  2228                           ; Regs used in _pressBoton1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2229  0AA8  037B               	decf	_banderaBoton,w
  2230  0AA9  1D03               	btfss	3,2
  2231  0AAA  2B05               	goto	l3458
  2232                           
  2233                           ;main_Master.c: 656:         if (banderaPUSH1 == 0){
  2234  0AAB  087A               	movf	_banderaPUSH1,w
  2235  0AAC  1D03               	btfss	3,2
  2236  0AAD  2B05               	goto	l3458
  2237                           
  2238                           ;main_Master.c: 657:             if (PORTBbits.RB1 == 0){
  2239  0AAE  1283               	bcf	3,5	;RP0=0, select bank0
  2240  0AAF  1303               	bcf	3,6	;RP1=0, select bank0
  2241  0AB0  1C86               	btfss	6,1	;volatile
  2242  0AB1  2AEE               	goto	l3450
  2243  0AB2  2B05               	goto	l3458
  2244  0AB3                     l3422:	
  2245                           
  2246                           ;main_Master.c: 660:                         velocidad ++;
  2247  0AB3  3001               	movlw	1
  2248  0AB4  00F7               	movwf	??_pressBoton1
  2249  0AB5  0877               	movf	??_pressBoton1,w
  2250  0AB6  07D3               	addwf	_velocidad,f
  2251                           
  2252                           ;main_Master.c: 661:                         if (velocidad > 3){
  2253  0AB7  3004               	movlw	4
  2254  0AB8  0253               	subwf	_velocidad,w
  2255  0AB9  1C03               	skipc
  2256  0ABA  2B01               	goto	l3452
  2257                           
  2258                           ;main_Master.c: 662:                             velocidad = 1;
  2259  0ABB  01D3               	clrf	_velocidad
  2260  0ABC  0AD3               	incf	_velocidad,f
  2261  0ABD  2B01               	goto	l3452
  2262  0ABE                     l3428:	
  2263                           
  2264                           ;main_Master.c: 666:                         largo ++;
  2265  0ABE  3001               	movlw	1
  2266  0ABF  00F7               	movwf	??_pressBoton1
  2267  0AC0  0877               	movf	??_pressBoton1,w
  2268  0AC1  07CD               	addwf	_largo,f
  2269                           
  2270                           ;main_Master.c: 667:                         if (largo > 8){
  2271  0AC2  3009               	movlw	9
  2272  0AC3  024D               	subwf	_largo,w
  2273  0AC4  1C03               	skipc
  2274  0AC5  2B01               	goto	l3452
  2275                           
  2276                           ;main_Master.c: 668:                             largo = 1;
  2277  0AC6  01CD               	clrf	_largo
  2278  0AC7  0ACD               	incf	_largo,f
  2279  0AC8  2B01               	goto	l3452
  2280  0AC9                     l3434:	
  2281                           
  2282                           ;main_Master.c: 672:                         ancho ++;
  2283  0AC9  3001               	movlw	1
  2284  0ACA  00F7               	movwf	??_pressBoton1
  2285  0ACB  0877               	movf	??_pressBoton1,w
  2286  0ACC  07CC               	addwf	_ancho,f
  2287                           
  2288                           ;main_Master.c: 673:                         if (ancho > 8){
  2289  0ACD  3009               	movlw	9
  2290  0ACE  024C               	subwf	_ancho,w
  2291  0ACF  1C03               	skipc
  2292  0AD0  2B01               	goto	l3452
  2293                           
  2294                           ;main_Master.c: 674:                             ancho = 1;
  2295  0AD1  01CC               	clrf	_ancho
  2296  0AD2  0ACC               	incf	_ancho,f
  2297  0AD3  2B01               	goto	l3452
  2298  0AD4                     l3440:	
  2299                           
  2300                           ;main_Master.c: 678:                         LCD_clear();
  2301  0AD4  160A  118A  268E  120A  158A  	fcall	_LCD_clear
  2302                           
  2303                           ;main_Master.c: 679:                     _delay((unsigned long)((10)*(1000000/4000.0)));
  2304  0AD9  3004               	movlw	4
  2305  0ADA  00F8               	movwf	??_pressBoton1+1
  2306  0ADB  303D               	movlw	61
  2307  0ADC  00F7               	movwf	??_pressBoton1
  2308  0ADD                     u2147:	
  2309  0ADD  0BF7               	decfsz	??_pressBoton1,f
  2310  0ADE  2ADD               	goto	u2147
  2311  0ADF  0BF8               	decfsz	??_pressBoton1+1,f
  2312  0AE0  2ADD               	goto	u2147
  2313  0AE1  2AE2               	nop2
  2314                           
  2315                           ;main_Master.c: 680:                     estado ++;
  2316  0AE2  3001               	movlw	1
  2317  0AE3  00F7               	movwf	??_pressBoton1
  2318  0AE4  0877               	movf	??_pressBoton1,w
  2319  0AE5  1283               	bcf	3,5	;RP0=0, select bank0
  2320  0AE6  1303               	bcf	3,6	;RP1=0, select bank0
  2321  0AE7  07D5               	addwf	_estado,f
  2322                           
  2323                           ;main_Master.c: 681:                     if (estado > 5){
  2324  0AE8  3006               	movlw	6
  2325  0AE9  0255               	subwf	_estado,w
  2326  0AEA  1C03               	skipc
  2327  0AEB  2B01               	goto	l3452
  2328                           
  2329                           ;main_Master.c: 682:                         estado = 0;
  2330  0AEC  01D5               	clrf	_estado
  2331  0AED  2B01               	goto	l3452
  2332  0AEE                     l3450:	
  2333  0AEE  0855               	movf	_estado,w
  2334  0AEF  00F7               	movwf	??_pressBoton1
  2335  0AF0  01F8               	clrf	??_pressBoton1+1
  2336                           
  2337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2338                           ; Switch size 1, requested type "simple"
  2339                           ; Number of cases is 1, Range of values is 0 to 0
  2340                           ; switch strategies available:
  2341                           ; Name         Instructions Cycles
  2342                           ; simple_byte            4     3 (average)
  2343                           ; direct_byte           11     8 (fixed)
  2344                           ; jumptable            260     6 (fixed)
  2345                           ;	Chosen strategy is simple_byte
  2346  0AF1  0878               	movf	??_pressBoton1+1,w
  2347  0AF2  3A00               	xorlw	0	; case 0
  2348  0AF3  1903               	skipnz
  2349  0AF4  2AF6               	goto	l5152
  2350  0AF5  2AD4               	goto	l3440
  2351  0AF6                     l5152:	
  2352                           
  2353                           ; Switch size 1, requested type "simple"
  2354                           ; Number of cases is 3, Range of values is 6 to 8
  2355                           ; switch strategies available:
  2356                           ; Name         Instructions Cycles
  2357                           ; simple_byte           10     6 (average)
  2358                           ; direct_byte           20    11 (fixed)
  2359                           ; jumptable            263     9 (fixed)
  2360                           ;	Chosen strategy is simple_byte
  2361  0AF6  0877               	movf	??_pressBoton1,w
  2362  0AF7  3A06               	xorlw	6	; case 6
  2363  0AF8  1903               	skipnz
  2364  0AF9  2AB3               	goto	l3422
  2365  0AFA  3A01               	xorlw	1	; case 7
  2366  0AFB  1903               	skipnz
  2367  0AFC  2ABE               	goto	l3428
  2368  0AFD  3A0F               	xorlw	15	; case 8
  2369  0AFE  1903               	skipnz
  2370  0AFF  2AC9               	goto	l3434
  2371  0B00  2AD4               	goto	l3440
  2372  0B01                     l3452:	
  2373                           
  2374                           ;main_Master.c: 685:                 banderaBoton = 0;
  2375  0B01  01FB               	clrf	_banderaBoton
  2376                           
  2377                           ;main_Master.c: 686:                 banderaPUSH1 = 1;
  2378  0B02  01FA               	clrf	_banderaPUSH1
  2379  0B03  0AFA               	incf	_banderaPUSH1,f
  2380                           
  2381                           ;main_Master.c: 687:                 INTCONbits.RBIE = 1;
  2382  0B04  158B               	bsf	11,3	;volatile
  2383  0B05                     l3458:	
  2384                           
  2385                           ;main_Master.c: 691:     if (banderaPUSH1 == 1){
  2386  0B05  037A               	decf	_banderaPUSH1,w
  2387  0B06  1D03               	btfss	3,2
  2388  0B07  0008               	return
  2389                           
  2390                           ;main_Master.c: 692:         if (PORTBbits.RB1 == 1){
  2391  0B08  1283               	bcf	3,5	;RP0=0, select bank0
  2392  0B09  1303               	bcf	3,6	;RP1=0, select bank0
  2393  0B0A  1C86               	btfss	6,1	;volatile
  2394  0B0B  0008               	return
  2395                           
  2396                           ;main_Master.c: 693:         _delay((unsigned long)((10)*(1000000/4000.0)));
  2397  0B0C  3004               	movlw	4
  2398  0B0D  00F8               	movwf	??_pressBoton1+1
  2399  0B0E  303D               	movlw	61
  2400  0B0F  00F7               	movwf	??_pressBoton1
  2401  0B10                     u2157:	
  2402  0B10  0BF7               	decfsz	??_pressBoton1,f
  2403  0B11  2B10               	goto	u2157
  2404  0B12  0BF8               	decfsz	??_pressBoton1+1,f
  2405  0B13  2B10               	goto	u2157
  2406  0B14  2B15               	nop2
  2407                           
  2408                           ;main_Master.c: 694:         banderaPUSH1 = 0;
  2409  0B15  01FA               	clrf	_banderaPUSH1
  2410  0B16  0008               	return
  2411  0B17                     __end_of_pressBoton1:	
  2412                           
  2413                           	psect	text4
  2414  0029                     __ptext4:	
  2415 ;; *************** function _mostrarLCD *****************
  2416 ;; Defined at:
  2417 ;;		line 471 in file "main_Master.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  pantalla        1    wreg     unsigned char 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  pantalla        1   26[BANK0 ] unsigned char 
  2422 ;;  dec_atras       1   32[BANK0 ] unsigned char 
  2423 ;;  uni_atras       1   29[BANK0 ] unsigned char 
  2424 ;;  dec_frente      1   31[BANK0 ] unsigned char 
  2425 ;;  uni_frente      1   28[BANK0 ] unsigned char 
  2426 ;;  decenas_hume    1   30[BANK0 ] unsigned char 
  2427 ;;  unidades_hum    1   27[BANK0 ] unsigned char 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      void 
  2430 ;; Registers used:
  2431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2437 ;;      Params:         0       0       0       0       0
  2438 ;;      Locals:         0       7       0       0       0
  2439 ;;      Temps:          0       3       0       0       0
  2440 ;;      Totals:         0      10       0       0       0
  2441 ;;Total ram usage:       10 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    4
  2444 ;; This function calls:
  2445 ;;		_I2C_Master_Start
  2446 ;;		_I2C_Master_Stop
  2447 ;;		_I2C_Master_Write
  2448 ;;		_LCD_Set_Cursor
  2449 ;;		_LCD_Write_Character
  2450 ;;		_LCD_Write_String
  2451 ;;		_LCD_clear
  2452 ;;		___awdiv
  2453 ;;		___awmod
  2454 ;;		_display_Datum
  2455 ;;		_display_Uhrzeit
  2456 ;;		_uint_to_array
  2457 ;; This function is called by:
  2458 ;;		_main
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           
  2463                           ;psect for function _mostrarLCD
  2464  0029                     _mostrarLCD:	
  2465                           
  2466                           ;incstack = 0
  2467                           ; Regs used in _mostrarLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2468                           ;mostrarLCD@pantalla stored from wreg
  2469  0029  1283               	bcf	3,5	;RP0=0, select bank0
  2470  002A  1303               	bcf	3,6	;RP1=0, select bank0
  2471  002B  00BA               	movwf	mostrarLCD@pantalla
  2472                           
  2473                           ;main_Master.c: 472:     switch(pantalla){
  2474  002C  2C2A               	goto	l4582
  2475  002D                     l4398:	
  2476                           
  2477                           ;main_Master.c: 474:             display_Uhrzeit(2,4);
  2478  002D  3004               	movlw	4
  2479  002E  00B7               	movwf	??_mostrarLCD
  2480  002F  0837               	movf	??_mostrarLCD,w
  2481  0030  00A8               	movwf	display_Uhrzeit@columna
  2482  0031  3002               	movlw	2
  2483  0032  120A  118A  2724  120A  118A  	fcall	_display_Uhrzeit
  2484                           
  2485                           ;main_Master.c: 475:             display_Datum(1,3);
  2486  0037  3003               	movlw	3
  2487  0038  1283               	bcf	3,5	;RP0=0, select bank0
  2488  0039  1303               	bcf	3,6	;RP1=0, select bank0
  2489  003A  00B7               	movwf	??_mostrarLCD
  2490  003B  0837               	movf	??_mostrarLCD,w
  2491  003C  00A8               	movwf	display_Datum@columna
  2492  003D  3001               	movlw	1
  2493  003E  120A  118A  264C   	fcall	_display_Datum
  2494                           
  2495                           ;main_Master.c: 476:             break;
  2496  0041  0008               	return
  2497  0042                     l4400:	
  2498                           
  2499                           ;main_Master.c: 478:             LCD_Set_Cursor(1,0);
  2500  0042  01F5               	clrf	LCD_Set_Cursor@columna
  2501  0043  3001               	movlw	1
  2502  0044  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  2503                           
  2504                           ;main_Master.c: 479:             LCD_Write_String("Ambiente: Suelo:");
  2505  0049  3029               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2506  004A  160A  118A  272B  120A  118A  	fcall	_LCD_Write_String
  2507                           
  2508                           ;main_Master.c: 480:             LCD_Set_Cursor(2,2);
  2509  004F  3002               	movlw	2
  2510  0050  1283               	bcf	3,5	;RP0=0, select bank0
  2511  0051  1303               	bcf	3,6	;RP1=0, select bank0
  2512  0052  00B7               	movwf	??_mostrarLCD
  2513  0053  0837               	movf	??_mostrarLCD,w
  2514  0054  00F5               	movwf	LCD_Set_Cursor@columna
  2515  0055  3002               	movlw	2
  2516  0056  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  2517                           
  2518                           ;main_Master.c: 481:             LCD_Write_Character(2);
  2519  005B  3002               	movlw	2
  2520  005C  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  2521                           
  2522                           ;main_Master.c: 482:             obj_array = uint_to_array(temperatura);
  2523  0061  1283               	bcf	3,5	;RP0=0, select bank0
  2524  0062  1303               	bcf	3,6	;RP1=0, select bank0
  2525  0063  0852               	movf	_temperatura,w
  2526  0064  120A  158A  2411  120A  118A  	fcall	_uint_to_array
  2527  0069  1283               	bcf	3,5	;RP0=0, select bank0
  2528  006A  1303               	bcf	3,6	;RP1=0, select bank0
  2529  006B  00B7               	movwf	??_mostrarLCD
  2530  006C  0837               	movf	??_mostrarLCD,w
  2531  006D  00D0               	movwf	_obj_array
  2532                           
  2533                           ;main_Master.c: 483:             if (obj_array[0] == 0){
  2534  006E  0850               	movf	_obj_array,w
  2535  006F  0084               	movwf	4
  2536  0070  1383               	bcf	3,7	;select IRP bank0
  2537  0071  0800               	movf	0,w
  2538  0072  00B7               	movwf	??_mostrarLCD
  2539  0073  0A84               	incf	4,f
  2540  0074  0800               	movf	0,w
  2541  0075  00B8               	movwf	??_mostrarLCD+1
  2542  0076  0837               	movf	??_mostrarLCD,w
  2543  0077  0438               	iorwf	??_mostrarLCD+1,w
  2544  0078  1D03               	btfss	3,2
  2545  0079  287C               	goto	l4410
  2546                           
  2547                           ;main_Master.c: 484:                 LCD_Write_Character(' ');
  2548  007A  3020               	movlw	32
  2549  007B  2880               	goto	L7
  2550  007C                     l4410:	
  2551                           ;main_Master.c: 485:             }
  2552                           
  2553                           
  2554                           ;main_Master.c: 487:                 LCD_Write_Character('0' + obj_array[0]);
  2555  007C  0850               	movf	_obj_array,w
  2556  007D  0084               	movwf	4
  2557  007E  0800               	movf	0,w
  2558  007F  3E30               	addlw	48
  2559  0080                     L7:	
  2560  0080  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  2561                           
  2562                           ;main_Master.c: 489:             LCD_Write_Character('0' + obj_array[1]);
  2563                           
  2564                           ;main_Master.c: 488:             }
  2565  0085  1283               	bcf	3,5	;RP0=0, select bank0
  2566  0086  1303               	bcf	3,6	;RP1=0, select bank0
  2567  0087  0850               	movf	_obj_array,w
  2568  0088  3E02               	addlw	2
  2569  0089  0084               	movwf	4
  2570  008A  1383               	bcf	3,7	;select IRP bank0
  2571  008B  0800               	movf	0,w
  2572  008C  3E30               	addlw	48
  2573  008D  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  2574                           
  2575                           ;main_Master.c: 490:             LCD_Write_Character('0' + obj_array[2]);
  2576  0092  1283               	bcf	3,5	;RP0=0, select bank0
  2577  0093  1303               	bcf	3,6	;RP1=0, select bank0
  2578  0094  0850               	movf	_obj_array,w
  2579  0095  3E04               	addlw	4
  2580  0096  0084               	movwf	4
  2581  0097  1383               	bcf	3,7	;select IRP bank0
  2582  0098  0800               	movf	0,w
  2583  0099  3E30               	addlw	48
  2584  009A  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  2585                           
  2586                           ;main_Master.c: 491:             LCD_Write_Character(223);
  2587  009F  30DF               	movlw	223
  2588  00A0  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  2589                           
  2590                           ;main_Master.c: 492:             LCD_Write_Character('C');
  2591  00A5  3043               	movlw	67
  2592  00A6  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  2593                           
  2594                           ;main_Master.c: 494:             LCD_Set_Cursor(2,10);
  2595  00AB  300A               	movlw	10
  2596  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  2597  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  2598  00AE  00B7               	movwf	??_mostrarLCD
  2599  00AF  0837               	movf	??_mostrarLCD,w
  2600  00B0  00F5               	movwf	LCD_Set_Cursor@columna
  2601  00B1  3002               	movlw	2
  2602  00B2  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  2603                           
  2604                           ;main_Master.c: 495:             LCD_Write_Character(2);
  2605  00B7  3002               	movlw	2
  2606  00B8  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  2607                           
  2608                           ;main_Master.c: 496:             obj_array = uint_to_array(temperatura_obj);
  2609  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  2610  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  2611  00BF  0851               	movf	_temperatura_obj,w
  2612  00C0  120A  158A  2411  120A  118A  	fcall	_uint_to_array
  2613  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  2614  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  2615  00C7  00B7               	movwf	??_mostrarLCD
  2616  00C8  0837               	movf	??_mostrarLCD,w
  2617  00C9  00D0               	movwf	_obj_array
  2618                           
  2619                           ;main_Master.c: 497:             if (obj_array[0] == 0){
  2620  00CA  0850               	movf	_obj_array,w
  2621  00CB  0084               	movwf	4
  2622  00CC  1383               	bcf	3,7	;select IRP bank0
  2623  00CD  0800               	movf	0,w
  2624  00CE  00B7               	movwf	??_mostrarLCD
  2625  00CF  0A84               	incf	4,f
  2626  00D0  0800               	movf	0,w
  2627  00D1  00B8               	movwf	??_mostrarLCD+1
  2628  00D2  0837               	movf	??_mostrarLCD,w
  2629  00D3  0438               	iorwf	??_mostrarLCD+1,w
  2630  00D4  1D03               	btfss	3,2
  2631  00D5  28D8               	goto	l4424
  2632                           
  2633                           ;main_Master.c: 498:                 LCD_Write_Character(' ');
  2634  00D6  3020               	movlw	32
  2635  00D7  28DC               	goto	L8
  2636  00D8                     l4424:	
  2637                           ;main_Master.c: 499:             }
  2638                           
  2639                           
  2640                           ;main_Master.c: 501:                 LCD_Write_Character('0' + obj_array[0]);
  2641  00D8  0850               	movf	_obj_array,w
  2642  00D9  0084               	movwf	4
  2643  00DA  0800               	movf	0,w
  2644  00DB  3E30               	addlw	48
  2645  00DC                     L8:	
  2646  00DC  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  2647                           
  2648                           ;main_Master.c: 504:             if (obj_array[1] == 0 && obj_array[0] == 0){
  2649  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  2650  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  2651  00E3  0850               	movf	_obj_array,w
  2652  00E4  3E02               	addlw	2
  2653  00E5  0084               	movwf	4
  2654  00E6  1383               	bcf	3,7	;select IRP bank0
  2655  00E7  0800               	movf	0,w
  2656  00E8  00B7               	movwf	??_mostrarLCD
  2657  00E9  0A84               	incf	4,f
  2658  00EA  0800               	movf	0,w
  2659  00EB  00B8               	movwf	??_mostrarLCD+1
  2660  00EC  0837               	movf	??_mostrarLCD,w
  2661  00ED  0438               	iorwf	??_mostrarLCD+1,w
  2662  00EE  1D03               	btfss	3,2
  2663  00EF  28FD               	goto	l4432
  2664  00F0  0850               	movf	_obj_array,w
  2665  00F1  0084               	movwf	4
  2666  00F2  0800               	movf	0,w
  2667  00F3  00B7               	movwf	??_mostrarLCD
  2668  00F4  0A84               	incf	4,f
  2669  00F5  0800               	movf	0,w
  2670  00F6  00B8               	movwf	??_mostrarLCD+1
  2671  00F7  0837               	movf	??_mostrarLCD,w
  2672  00F8  0438               	iorwf	??_mostrarLCD+1,w
  2673  00F9  1D03               	btfss	3,2
  2674  00FA  28FD               	goto	l4432
  2675                           
  2676                           ;main_Master.c: 505:                 LCD_Write_Character(' ');
  2677  00FB  3020               	movlw	32
  2678  00FC  2902               	goto	L9
  2679  00FD                     l4432:	
  2680                           ;main_Master.c: 506:             }
  2681                           
  2682                           
  2683                           ;main_Master.c: 508:                 LCD_Write_Character('0' + obj_array[1]);
  2684  00FD  0850               	movf	_obj_array,w
  2685  00FE  3E02               	addlw	2
  2686  00FF  0084               	movwf	4
  2687  0100  0800               	movf	0,w
  2688  0101  3E30               	addlw	48
  2689  0102                     L9:	
  2690  0102  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  2691                           
  2692                           ;main_Master.c: 510:             LCD_Write_Character('0' + obj_array[2]);
  2693                           
  2694                           ;main_Master.c: 509:             }
  2695  0107  1283               	bcf	3,5	;RP0=0, select bank0
  2696  0108  1303               	bcf	3,6	;RP1=0, select bank0
  2697  0109  0850               	movf	_obj_array,w
  2698  010A  3E04               	addlw	4
  2699  010B  0084               	movwf	4
  2700  010C  1383               	bcf	3,7	;select IRP bank0
  2701  010D  0800               	movf	0,w
  2702  010E  3E30               	addlw	48
  2703  010F  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  2704                           
  2705                           ;main_Master.c: 511:             LCD_Write_Character(223);
  2706  0114  30DF               	movlw	223
  2707  0115  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  2708                           
  2709                           ;main_Master.c: 512:             LCD_Write_Character('C');
  2710  011A  3043               	movlw	67
  2711  011B  160A  118A  2637   	fcall	_LCD_Write_Character
  2712                           
  2713                           ;main_Master.c: 513:             break;
  2714  011E  0008               	return
  2715  011F                     l4438:	
  2716                           
  2717                           ;main_Master.c: 515:             LCD_Set_Cursor(1,0);
  2718  011F  01F5               	clrf	LCD_Set_Cursor@columna
  2719  0120  3001               	movlw	1
  2720  0121  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  2721                           
  2722                           ;main_Master.c: 516:             LCD_Write_String("Inclinacion:");
  2723  0126  3062               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2724  0127  160A  118A  272B  120A  118A  	fcall	_LCD_Write_String
  2725                           
  2726                           ;main_Master.c: 517:             LCD_Set_Cursor(2, 5);
  2727  012C  3005               	movlw	5
  2728  012D  1283               	bcf	3,5	;RP0=0, select bank0
  2729  012E  1303               	bcf	3,6	;RP1=0, select bank0
  2730  012F  00B7               	movwf	??_mostrarLCD
  2731  0130  0837               	movf	??_mostrarLCD,w
  2732  0131  00F5               	movwf	LCD_Set_Cursor@columna
  2733  0132  3002               	movlw	2
  2734  0133  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  2735                           
  2736                           ;main_Master.c: 521:             LCD_Set_Cursor(2, 5);
  2737  0138  3005               	movlw	5
  2738  0139  1283               	bcf	3,5	;RP0=0, select bank0
  2739  013A  1303               	bcf	3,6	;RP1=0, select bank0
  2740  013B  00B7               	movwf	??_mostrarLCD
  2741  013C  0837               	movf	??_mostrarLCD,w
  2742  013D  00F5               	movwf	LCD_Set_Cursor@columna
  2743  013E  3002               	movlw	2
  2744  013F  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  2745                           
  2746                           ;main_Master.c: 522:             if(inclinacion < 40){
  2747  0144  3028               	movlw	40
  2748  0145  1283               	bcf	3,5	;RP0=0, select bank0
  2749  0146  1303               	bcf	3,6	;RP1=0, select bank0
  2750  0147  0258               	subwf	_inclinacion,w
  2751  0148  1803               	skipnc
  2752  0149  294F               	goto	l4444
  2753                           
  2754                           ;main_Master.c: 523:                 LCD_Write_String("Estable   ");
  2755  014A  3088               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2756  014B  160A  118A  272B   	fcall	_LCD_Write_String
  2757                           
  2758                           ;main_Master.c: 524:             }
  2759  014E  0008               	return
  2760  014F                     l4444:	
  2761  014F  305B               	movlw	91
  2762  0150  0258               	subwf	_inclinacion,w
  2763  0151  1C03               	skipc
  2764  0152  295C               	goto	l4450
  2765  0153  3096               	movlw	150
  2766  0154  0258               	subwf	_inclinacion,w
  2767  0155  1803               	skipnc
  2768  0156  295C               	goto	l4450
  2769                           
  2770                           ;main_Master.c: 526:                 LCD_Write_String("Peligro!   ");
  2771  0157  307C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2772  0158  160A  118A  272B   	fcall	_LCD_Write_String
  2773                           
  2774                           ;main_Master.c: 527:             }
  2775  015B  0008               	return
  2776  015C                     l4450:	
  2777  015C  30B5               	movlw	181
  2778  015D  0258               	subwf	_inclinacion,w
  2779  015E  1C03               	skipc
  2780  015F  0008               	return
  2781                           
  2782                           ;main_Master.c: 529:                 LCD_Write_String("EMERGENCIA!  ");
  2783  0160  303A               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2784  0161  160A  118A  272B   	fcall	_LCD_Write_String
  2785                           
  2786                           ;main_Master.c: 532:             break;
  2787  0164  0008               	return
  2788  0165                     l4454:	
  2789                           
  2790                           ;main_Master.c: 534:             LCD_Set_Cursor(1,0);
  2791  0165  01F5               	clrf	LCD_Set_Cursor@columna
  2792  0166  3001               	movlw	1
  2793  0167  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  2794                           
  2795                           ;main_Master.c: 535:             LCD_Write_String("Humedad:");
  2796  016C  3093               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2797  016D  160A  118A  272B  120A  118A  	fcall	_LCD_Write_String
  2798                           
  2799                           ;main_Master.c: 536:             LCD_Set_Cursor(2,4);
  2800  0172  3004               	movlw	4
  2801  0173  1283               	bcf	3,5	;RP0=0, select bank0
  2802  0174  1303               	bcf	3,6	;RP1=0, select bank0
  2803  0175  00B7               	movwf	??_mostrarLCD
  2804  0176  0837               	movf	??_mostrarLCD,w
  2805  0177  00F5               	movwf	LCD_Set_Cursor@columna
  2806  0178  3002               	movlw	2
  2807  0179  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  2808                           
  2809                           ;main_Master.c: 537:             LCD_Write_Character(3);
  2810  017E  3003               	movlw	3
  2811  017F  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  2812                           
  2813                           ;main_Master.c: 538:             LCD_Write_Character(' ');
  2814  0184  3020               	movlw	32
  2815  0185  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  2816                           
  2817                           ;main_Master.c: 539:             uint8_t decenas_humedad = humedad/10;
  2818  018A  300A               	movlw	10
  2819  018B  1283               	bcf	3,5	;RP0=0, select bank0
  2820  018C  1303               	bcf	3,6	;RP1=0, select bank0
  2821  018D  00A0               	movwf	___awdiv@divisor
  2822  018E  3000               	movlw	0
  2823  018F  00A1               	movwf	___awdiv@divisor+1
  2824  0190  0859               	movf	_humedad,w
  2825  0191  00B7               	movwf	??_mostrarLCD
  2826  0192  01B8               	clrf	??_mostrarLCD+1
  2827  0193  0837               	movf	??_mostrarLCD,w
  2828  0194  00A2               	movwf	___awdiv@dividend
  2829  0195  0838               	movf	??_mostrarLCD+1,w
  2830  0196  00A3               	movwf	___awdiv@dividend+1
  2831  0197  120A  158A  2186  120A  118A  	fcall	___awdiv
  2832  019C  1283               	bcf	3,5	;RP0=0, select bank0
  2833  019D  1303               	bcf	3,6	;RP1=0, select bank0
  2834  019E  0820               	movf	?___awdiv,w
  2835  019F  00B9               	movwf	??_mostrarLCD+2
  2836  01A0  0839               	movf	??_mostrarLCD+2,w
  2837  01A1  00BE               	movwf	mostrarLCD@decenas_humedad
  2838                           
  2839                           ;main_Master.c: 540:             uint8_t unidades_humedad = humedad%10;
  2840  01A2  300A               	movlw	10
  2841  01A3  00F2               	movwf	___awmod@divisor
  2842  01A4  3000               	movlw	0
  2843  01A5  00F3               	movwf	___awmod@divisor+1
  2844  01A6  0859               	movf	_humedad,w
  2845  01A7  00B7               	movwf	??_mostrarLCD
  2846  01A8  01B8               	clrf	??_mostrarLCD+1
  2847  01A9  0837               	movf	??_mostrarLCD,w
  2848  01AA  00F4               	movwf	___awmod@dividend
  2849  01AB  0838               	movf	??_mostrarLCD+1,w
  2850  01AC  00F5               	movwf	___awmod@dividend+1
  2851  01AD  120A  158A  213B  120A  118A  	fcall	___awmod
  2852  01B2  0872               	movf	?___awmod,w
  2853  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  2854  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  2855  01B5  00B9               	movwf	??_mostrarLCD+2
  2856  01B6  0839               	movf	??_mostrarLCD+2,w
  2857  01B7  00BB               	movwf	mostrarLCD@unidades_humedad
  2858                           
  2859                           ;main_Master.c: 541:             if(decenas_humedad == 0){
  2860  01B8  083E               	movf	mostrarLCD@decenas_humedad,w
  2861  01B9  1D03               	btfss	3,2
  2862  01BA  29BD               	goto	l4468
  2863                           
  2864                           ;main_Master.c: 542:                 LCD_Write_Character(' ');
  2865  01BB  3020               	movlw	32
  2866  01BC  29BF               	goto	L10
  2867  01BD                     l4468:	
  2868                           ;main_Master.c: 543:             }
  2869                           
  2870                           
  2871                           ;main_Master.c: 545:                 LCD_Write_Character('0'+decenas_humedad);
  2872  01BD  083E               	movf	mostrarLCD@decenas_humedad,w
  2873  01BE  3E30               	addlw	48
  2874  01BF                     L10:	
  2875  01BF  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  2876                           
  2877                           ;main_Master.c: 547:             LCD_Write_Character('0'+unidades_humedad);
  2878                           
  2879                           ;main_Master.c: 546:             }
  2880  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  2881  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  2882  01C6  083B               	movf	mostrarLCD@unidades_humedad,w
  2883  01C7  3E30               	addlw	48
  2884  01C8  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  2885                           
  2886                           ;main_Master.c: 548:             LCD_Write_Character('%');
  2887  01CD  3025               	movlw	37
  2888  01CE  160A  118A  2637   	fcall	_LCD_Write_Character
  2889                           
  2890                           ;main_Master.c: 549:             break;
  2891  01D1  0008               	return
  2892  01D2                     l4470:	
  2893                           
  2894                           ;main_Master.c: 551:             LCD_Set_Cursor(1,0);
  2895  01D2  01F5               	clrf	LCD_Set_Cursor@columna
  2896  01D3  3001               	movlw	1
  2897  01D4  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  2898                           
  2899                           ;main_Master.c: 552:             LCD_Write_String("Atr");
  2900  01D9  30A7               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2901  01DA  160A  118A  272B  120A  118A  	fcall	_LCD_Write_String
  2902                           
  2903                           ;main_Master.c: 553:             LCD_Write_Character(0);
  2904  01DF  3000               	movlw	0
  2905  01E0  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  2906                           
  2907                           ;main_Master.c: 554:             LCD_Write_String("s: | Frente:");
  2908  01E5  3055               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2909  01E6  160A  118A  272B  120A  118A  	fcall	_LCD_Write_String
  2910                           
  2911                           ;main_Master.c: 555:             LCD_Set_Cursor(2,2);
  2912  01EB  3002               	movlw	2
  2913  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2914  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2915  01EE  00B7               	movwf	??_mostrarLCD
  2916  01EF  0837               	movf	??_mostrarLCD,w
  2917  01F0  00F5               	movwf	LCD_Set_Cursor@columna
  2918  01F1  3002               	movlw	2
  2919  01F2  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  2920                           
  2921                           ;main_Master.c: 556:             if(d_frente < 100){
  2922  01F7  3064               	movlw	100
  2923  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  2924  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  2925  01FA  0257               	subwf	_d_frente,w
  2926  01FB  1803               	skipnc
  2927  01FC  2A40               	goto	l4490
  2928                           
  2929                           ;main_Master.c: 557:                 uint8_t dec_frente = d_frente/10;
  2930  01FD  300A               	movlw	10
  2931  01FE  00A0               	movwf	___awdiv@divisor
  2932  01FF  3000               	movlw	0
  2933  0200  00A1               	movwf	___awdiv@divisor+1
  2934  0201  0857               	movf	_d_frente,w
  2935  0202  00B7               	movwf	??_mostrarLCD
  2936  0203  01B8               	clrf	??_mostrarLCD+1
  2937  0204  0837               	movf	??_mostrarLCD,w
  2938  0205  00A2               	movwf	___awdiv@dividend
  2939  0206  0838               	movf	??_mostrarLCD+1,w
  2940  0207  00A3               	movwf	___awdiv@dividend+1
  2941  0208  120A  158A  2186  120A  118A  	fcall	___awdiv
  2942  020D  1283               	bcf	3,5	;RP0=0, select bank0
  2943  020E  1303               	bcf	3,6	;RP1=0, select bank0
  2944  020F  0820               	movf	?___awdiv,w
  2945  0210  00B9               	movwf	??_mostrarLCD+2
  2946  0211  0839               	movf	??_mostrarLCD+2,w
  2947  0212  00BF               	movwf	mostrarLCD@dec_frente
  2948                           
  2949                           ;main_Master.c: 558:                 uint8_t uni_frente = d_frente%10;
  2950  0213  300A               	movlw	10
  2951  0214  00F2               	movwf	___awmod@divisor
  2952  0215  3000               	movlw	0
  2953  0216  00F3               	movwf	___awmod@divisor+1
  2954  0217  0857               	movf	_d_frente,w
  2955  0218  00B7               	movwf	??_mostrarLCD
  2956  0219  01B8               	clrf	??_mostrarLCD+1
  2957  021A  0837               	movf	??_mostrarLCD,w
  2958  021B  00F4               	movwf	___awmod@dividend
  2959  021C  0838               	movf	??_mostrarLCD+1,w
  2960  021D  00F5               	movwf	___awmod@dividend+1
  2961  021E  120A  158A  213B  120A  118A  	fcall	___awmod
  2962  0223  0872               	movf	?___awmod,w
  2963  0224  1283               	bcf	3,5	;RP0=0, select bank0
  2964  0225  1303               	bcf	3,6	;RP1=0, select bank0
  2965  0226  00B9               	movwf	??_mostrarLCD+2
  2966  0227  0839               	movf	??_mostrarLCD+2,w
  2967  0228  00BC               	movwf	mostrarLCD@uni_frente
  2968                           
  2969                           ;main_Master.c: 559:                 if(dec_frente == 0){
  2970  0229  083F               	movf	mostrarLCD@dec_frente,w
  2971  022A  1D03               	btfss	3,2
  2972  022B  2A2E               	goto	l4486
  2973                           
  2974                           ;main_Master.c: 560:                     LCD_Write_Character(' ');
  2975  022C  3020               	movlw	32
  2976  022D  2A30               	goto	L11
  2977  022E                     l4486:	
  2978                           ;main_Master.c: 561:                 }
  2979                           
  2980                           
  2981                           ;main_Master.c: 563:                     LCD_Write_Character('0' + dec_frente);
  2982  022E  083F               	movf	mostrarLCD@dec_frente,w
  2983  022F  3E30               	addlw	48
  2984  0230                     L11:	
  2985  0230  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  2986                           
  2987                           ;main_Master.c: 565:                 LCD_Write_Character('0' + uni_frente);
  2988                           
  2989                           ;main_Master.c: 564:                 }
  2990  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2991  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2992  0237  083C               	movf	mostrarLCD@uni_frente,w
  2993  0238  3E30               	addlw	48
  2994  0239  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  2995                           
  2996                           ;main_Master.c: 566:                 LCD_Write_String("cm");
  2997  023E  30B1               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2998  023F  2A41               	goto	L12
  2999  0240                     l4490:	
  3000                           ;main_Master.c: 567:             }
  3001                           
  3002                           
  3003                           ;main_Master.c: 569:                 LCD_Write_String("----");
  3004  0240  30A2               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3005  0241                     L12:	
  3006  0241  160A  118A  272B  120A  118A  	fcall	_LCD_Write_String
  3007                           
  3008                           ;main_Master.c: 572:             LCD_Set_Cursor(2,7);
  3009                           
  3010                           ;main_Master.c: 570:             }
  3011  0246  3007               	movlw	7
  3012  0247  1283               	bcf	3,5	;RP0=0, select bank0
  3013  0248  1303               	bcf	3,6	;RP1=0, select bank0
  3014  0249  00B7               	movwf	??_mostrarLCD
  3015  024A  0837               	movf	??_mostrarLCD,w
  3016  024B  00F5               	movwf	LCD_Set_Cursor@columna
  3017  024C  3002               	movlw	2
  3018  024D  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  3019                           
  3020                           ;main_Master.c: 573:             LCD_Write_Character('|');
  3021  0252  307C               	movlw	124
  3022  0253  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  3023                           
  3024                           ;main_Master.c: 574:             LCD_Set_Cursor(2,11);
  3025  0258  300B               	movlw	11
  3026  0259  1283               	bcf	3,5	;RP0=0, select bank0
  3027  025A  1303               	bcf	3,6	;RP1=0, select bank0
  3028  025B  00B7               	movwf	??_mostrarLCD
  3029  025C  0837               	movf	??_mostrarLCD,w
  3030  025D  00F5               	movwf	LCD_Set_Cursor@columna
  3031  025E  3002               	movlw	2
  3032  025F  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  3033                           
  3034                           ;main_Master.c: 575:             if(d_atras < 100){
  3035  0264  3064               	movlw	100
  3036  0265  1283               	bcf	3,5	;RP0=0, select bank0
  3037  0266  1303               	bcf	3,6	;RP1=0, select bank0
  3038  0267  0256               	subwf	_d_atras,w
  3039  0268  1803               	skipnc
  3040  0269  2AB0               	goto	l4508
  3041                           
  3042                           ;main_Master.c: 576:                 uint8_t dec_atras = d_atras/10;
  3043  026A  300A               	movlw	10
  3044  026B  00A0               	movwf	___awdiv@divisor
  3045  026C  3000               	movlw	0
  3046  026D  00A1               	movwf	___awdiv@divisor+1
  3047  026E  0856               	movf	_d_atras,w
  3048  026F  00B7               	movwf	??_mostrarLCD
  3049  0270  01B8               	clrf	??_mostrarLCD+1
  3050  0271  0837               	movf	??_mostrarLCD,w
  3051  0272  00A2               	movwf	___awdiv@dividend
  3052  0273  0838               	movf	??_mostrarLCD+1,w
  3053  0274  00A3               	movwf	___awdiv@dividend+1
  3054  0275  120A  158A  2186  120A  118A  	fcall	___awdiv
  3055  027A  1283               	bcf	3,5	;RP0=0, select bank0
  3056  027B  1303               	bcf	3,6	;RP1=0, select bank0
  3057  027C  0820               	movf	?___awdiv,w
  3058  027D  00B9               	movwf	??_mostrarLCD+2
  3059  027E  0839               	movf	??_mostrarLCD+2,w
  3060  027F  00C0               	movwf	mostrarLCD@dec_atras
  3061                           
  3062                           ;main_Master.c: 577:                 uint8_t uni_atras = d_atras%10;
  3063  0280  300A               	movlw	10
  3064  0281  00F2               	movwf	___awmod@divisor
  3065  0282  3000               	movlw	0
  3066  0283  00F3               	movwf	___awmod@divisor+1
  3067  0284  0856               	movf	_d_atras,w
  3068  0285  00B7               	movwf	??_mostrarLCD
  3069  0286  01B8               	clrf	??_mostrarLCD+1
  3070  0287  0837               	movf	??_mostrarLCD,w
  3071  0288  00F4               	movwf	___awmod@dividend
  3072  0289  0838               	movf	??_mostrarLCD+1,w
  3073  028A  00F5               	movwf	___awmod@dividend+1
  3074  028B  120A  158A  213B  120A  118A  	fcall	___awmod
  3075  0290  0872               	movf	?___awmod,w
  3076  0291  1283               	bcf	3,5	;RP0=0, select bank0
  3077  0292  1303               	bcf	3,6	;RP1=0, select bank0
  3078  0293  00B9               	movwf	??_mostrarLCD+2
  3079  0294  0839               	movf	??_mostrarLCD+2,w
  3080  0295  00BD               	movwf	mostrarLCD@uni_atras
  3081                           
  3082                           ;main_Master.c: 578:                 if(dec_atras == 0){
  3083  0296  0840               	movf	mostrarLCD@dec_atras,w
  3084  0297  1D03               	btfss	3,2
  3085  0298  2A9B               	goto	l4504
  3086                           
  3087                           ;main_Master.c: 579:                     LCD_Write_Character(' ');
  3088  0299  3020               	movlw	32
  3089  029A  2A9D               	goto	L13
  3090  029B                     l4504:	
  3091                           ;main_Master.c: 580:                 }
  3092                           
  3093                           
  3094                           ;main_Master.c: 582:                     LCD_Write_Character('0' + dec_atras);
  3095  029B  0840               	movf	mostrarLCD@dec_atras,w
  3096  029C  3E30               	addlw	48
  3097  029D                     L13:	
  3098  029D  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  3099                           
  3100                           ;main_Master.c: 584:                 LCD_Write_Character('0' + uni_atras);
  3101                           
  3102                           ;main_Master.c: 583:                 }
  3103  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  3104  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  3105  02A4  083D               	movf	mostrarLCD@uni_atras,w
  3106  02A5  3E30               	addlw	48
  3107  02A6  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  3108                           
  3109                           ;main_Master.c: 585:                 LCD_Write_String("cm");
  3110  02AB  30B1               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  3111  02AC  160A  118A  272B   	fcall	_LCD_Write_String
  3112                           
  3113                           ;main_Master.c: 586:             }
  3114  02AF  0008               	return
  3115  02B0                     l4508:	
  3116                           
  3117                           ;main_Master.c: 588:                 LCD_Write_String("----");
  3118  02B0  30A2               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3119  02B1  160A  118A  272B   	fcall	_LCD_Write_String
  3120  02B4  0008               	return
  3121  02B5                     l4510:	
  3122                           
  3123                           ;main_Master.c: 592:             LCD_Set_Cursor(1, 0);
  3124  02B5  01F5               	clrf	LCD_Set_Cursor@columna
  3125  02B6  3001               	movlw	1
  3126  02B7  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  3127                           
  3128                           ;main_Master.c: 593:             LCD_Write_String("Tomar datos:");
  3129  02BC  306F               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  3130  02BD  160A  118A  272B  120A  118A  	fcall	_LCD_Write_String
  3131                           
  3132                           ;main_Master.c: 594:             LCD_Set_Cursor(2,1);
  3133  02C2  01F5               	clrf	LCD_Set_Cursor@columna
  3134  02C3  0AF5               	incf	LCD_Set_Cursor@columna,f
  3135  02C4  3002               	movlw	2
  3136  02C5  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  3137                           
  3138                           ;main_Master.c: 595:             LCD_Write_Character(velocidad + '0');
  3139  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  3140  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  3141  02CC  0853               	movf	_velocidad,w
  3142  02CD  3E30               	addlw	48
  3143  02CE  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  3144                           
  3145                           ;main_Master.c: 596:             LCD_Set_Cursor(2,8);
  3146  02D3  3008               	movlw	8
  3147  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  3148  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  3149  02D6  00B7               	movwf	??_mostrarLCD
  3150  02D7  0837               	movf	??_mostrarLCD,w
  3151  02D8  00F5               	movwf	LCD_Set_Cursor@columna
  3152  02D9  3002               	movlw	2
  3153  02DA  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  3154                           
  3155                           ;main_Master.c: 597:             LCD_Write_Character('0' + largo);
  3156  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  3157  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  3158  02E1  084D               	movf	_largo,w
  3159  02E2  3E30               	addlw	48
  3160  02E3  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  3161                           
  3162                           ;main_Master.c: 598:             LCD_Write_String("x ");
  3163  02E8  30AB               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  3164  02E9  160A  118A  272B  120A  118A  	fcall	_LCD_Write_String
  3165                           
  3166                           ;main_Master.c: 599:             LCD_Write_Character('0' + ancho);
  3167  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  3168  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  3169  02F0  084C               	movf	_ancho,w
  3170  02F1  3E30               	addlw	48
  3171  02F2  160A  118A  2637   	fcall	_LCD_Write_Character
  3172                           
  3173                           ;main_Master.c: 600:             break;
  3174  02F5  0008               	return
  3175  02F6                     l4520:	
  3176                           
  3177                           ;main_Master.c: 602:             LCD_Set_Cursor(2,0);
  3178  02F6  01F5               	clrf	LCD_Set_Cursor@columna
  3179  02F7  3002               	movlw	2
  3180  02F8  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  3181                           
  3182                           ;main_Master.c: 603:             LCD_Write_Character(4);
  3183  02FD  3004               	movlw	4
  3184  02FE  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  3185                           
  3186                           ;main_Master.c: 604:             LCD_Write_Character(velocidad + '0');
  3187  0303  1283               	bcf	3,5	;RP0=0, select bank0
  3188  0304  1303               	bcf	3,6	;RP1=0, select bank0
  3189  0305  0853               	movf	_velocidad,w
  3190  0306  3E30               	addlw	48
  3191  0307  160A  118A  2637   	fcall	_LCD_Write_Character
  3192                           
  3193                           ;main_Master.c: 605:             break;
  3194  030A  0008               	return
  3195  030B                     l4526:	
  3196                           
  3197                           ;main_Master.c: 607:             LCD_Set_Cursor(2,0);
  3198  030B  01F5               	clrf	LCD_Set_Cursor@columna
  3199  030C  3002               	movlw	2
  3200  030D  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  3201                           
  3202                           ;main_Master.c: 608:             LCD_Write_Character(' ');
  3203  0312  3020               	movlw	32
  3204  0313  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  3205                           
  3206                           ;main_Master.c: 609:             LCD_Set_Cursor(2,7);
  3207  0318  3007               	movlw	7
  3208  0319  1283               	bcf	3,5	;RP0=0, select bank0
  3209  031A  1303               	bcf	3,6	;RP1=0, select bank0
  3210  031B  00B7               	movwf	??_mostrarLCD
  3211  031C  0837               	movf	??_mostrarLCD,w
  3212  031D  00F5               	movwf	LCD_Set_Cursor@columna
  3213  031E  3002               	movlw	2
  3214  031F  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  3215                           
  3216                           ;main_Master.c: 610:             LCD_Write_Character(4);
  3217  0324  3004               	movlw	4
  3218  0325  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  3219                           
  3220                           ;main_Master.c: 611:             LCD_Write_Character('0' + largo);
  3221  032A  1283               	bcf	3,5	;RP0=0, select bank0
  3222  032B  1303               	bcf	3,6	;RP1=0, select bank0
  3223  032C  084D               	movf	_largo,w
  3224  032D  3E30               	addlw	48
  3225  032E  160A  118A  2637   	fcall	_LCD_Write_Character
  3226                           
  3227                           ;main_Master.c: 612:             break;
  3228  0331  0008               	return
  3229  0332                     l4532:	
  3230                           
  3231                           ;main_Master.c: 614:             LCD_Set_Cursor(2,7);
  3232  0332  3007               	movlw	7
  3233  0333  00B7               	movwf	??_mostrarLCD
  3234  0334  0837               	movf	??_mostrarLCD,w
  3235  0335  00F5               	movwf	LCD_Set_Cursor@columna
  3236  0336  3002               	movlw	2
  3237  0337  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  3238                           
  3239                           ;main_Master.c: 615:             LCD_Write_Character(' ');
  3240  033C  3020               	movlw	32
  3241  033D  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  3242                           
  3243                           ;main_Master.c: 616:             LCD_Set_Cursor(2,10);
  3244  0342  300A               	movlw	10
  3245  0343  1283               	bcf	3,5	;RP0=0, select bank0
  3246  0344  1303               	bcf	3,6	;RP1=0, select bank0
  3247  0345  00B7               	movwf	??_mostrarLCD
  3248  0346  0837               	movf	??_mostrarLCD,w
  3249  0347  00F5               	movwf	LCD_Set_Cursor@columna
  3250  0348  3002               	movlw	2
  3251  0349  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  3252                           
  3253                           ;main_Master.c: 617:             LCD_Write_Character(4);
  3254  034E  3004               	movlw	4
  3255  034F  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  3256                           
  3257                           ;main_Master.c: 618:             LCD_Write_Character('0' + ancho);
  3258  0354  1283               	bcf	3,5	;RP0=0, select bank0
  3259  0355  1303               	bcf	3,6	;RP1=0, select bank0
  3260  0356  084C               	movf	_ancho,w
  3261  0357  3E30               	addlw	48
  3262  0358  160A  118A  2637   	fcall	_LCD_Write_Character
  3263                           
  3264                           ;main_Master.c: 619:             break;
  3265  035B  0008               	return
  3266  035C                     l4538:	
  3267                           
  3268                           ;main_Master.c: 621:             LCD_Set_Cursor(2,10);
  3269  035C  300A               	movlw	10
  3270  035D  00B7               	movwf	??_mostrarLCD
  3271  035E  0837               	movf	??_mostrarLCD,w
  3272  035F  00F5               	movwf	LCD_Set_Cursor@columna
  3273  0360  3002               	movlw	2
  3274  0361  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  3275                           
  3276                           ;main_Master.c: 622:             LCD_Write_Character(' ');
  3277  0366  3020               	movlw	32
  3278  0367  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  3279                           
  3280                           ;main_Master.c: 623:             LCD_Set_Cursor(2,15);
  3281  036C  300F               	movlw	15
  3282  036D  1283               	bcf	3,5	;RP0=0, select bank0
  3283  036E  1303               	bcf	3,6	;RP1=0, select bank0
  3284  036F  00B7               	movwf	??_mostrarLCD
  3285  0370  0837               	movf	??_mostrarLCD,w
  3286  0371  00F5               	movwf	LCD_Set_Cursor@columna
  3287  0372  3002               	movlw	2
  3288  0373  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  3289                           
  3290                           ;main_Master.c: 624:             LCD_Write_Character(1);
  3291  0378  3001               	movlw	1
  3292  0379  160A  118A  2637   	fcall	_LCD_Write_Character
  3293                           
  3294                           ;main_Master.c: 625:             break;
  3295  037C  0008               	return
  3296  037D                     l4544:	
  3297                           
  3298                           ;main_Master.c: 627:             LCD_Set_Cursor(1,0);
  3299  037D  01F5               	clrf	LCD_Set_Cursor@columna
  3300  037E  3001               	movlw	1
  3301  037F  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  3302                           
  3303                           ;main_Master.c: 628:             LCD_Write_String("INICIANDO...");
  3304  0384  3048               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  3305  0385  160A  118A  272B  120A  118A  	fcall	_LCD_Write_String
  3306                           
  3307                           ;main_Master.c: 630:             I2C_Master_Start();
  3308  038A  160A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  3309                           
  3310                           ;main_Master.c: 631:             I2C_Master_Write(0x30);
  3311  038F  3030               	movlw	48
  3312  0390  1283               	bcf	3,5	;RP0=0, select bank0
  3313  0391  1303               	bcf	3,6	;RP1=0, select bank0
  3314  0392  00AD               	movwf	I2C_Master_Write@d
  3315  0393  3000               	movlw	0
  3316  0394  00AE               	movwf	I2C_Master_Write@d+1
  3317  0395  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  3318                           
  3319                           ;main_Master.c: 632:             I2C_Master_Write(velocidad);
  3320  039A  1283               	bcf	3,5	;RP0=0, select bank0
  3321  039B  1303               	bcf	3,6	;RP1=0, select bank0
  3322  039C  0853               	movf	_velocidad,w
  3323  039D  00B7               	movwf	??_mostrarLCD
  3324  039E  01B8               	clrf	??_mostrarLCD+1
  3325  039F  0837               	movf	??_mostrarLCD,w
  3326  03A0  00AD               	movwf	I2C_Master_Write@d
  3327  03A1  0838               	movf	??_mostrarLCD+1,w
  3328  03A2  00AE               	movwf	I2C_Master_Write@d+1
  3329  03A3  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  3330                           
  3331                           ;main_Master.c: 633:             I2C_Master_Stop();
  3332  03A8  160A  118A  260F  120A  118A  	fcall	_I2C_Master_Stop
  3333                           
  3334                           ;main_Master.c: 634:             _delay((unsigned long)((100)*(1000000/4000.0)));
  3335  03AD  3021               	movlw	33
  3336  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  3337  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  3338  03B0  00B8               	movwf	??_mostrarLCD+1
  3339  03B1  3075               	movlw	117
  3340  03B2  00B7               	movwf	??_mostrarLCD
  3341  03B3                     u2167:	
  3342  03B3  0BB7               	decfsz	??_mostrarLCD,f
  3343  03B4  2BB3               	goto	u2167
  3344  03B5  0BB8               	decfsz	??_mostrarLCD+1,f
  3345  03B6  2BB3               	goto	u2167
  3346  03B7  2BB8               	nop2
  3347                           
  3348                           ;main_Master.c: 635:             I2C_Master_Start();
  3349  03B8  160A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  3350                           
  3351                           ;main_Master.c: 636:             I2C_Master_Write(0x30);
  3352  03BD  3030               	movlw	48
  3353  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  3354  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  3355  03C0  00AD               	movwf	I2C_Master_Write@d
  3356  03C1  3000               	movlw	0
  3357  03C2  00AE               	movwf	I2C_Master_Write@d+1
  3358  03C3  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  3359                           
  3360                           ;main_Master.c: 637:             I2C_Master_Write(largo);
  3361  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  3362  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  3363  03CA  084D               	movf	_largo,w
  3364  03CB  00B7               	movwf	??_mostrarLCD
  3365  03CC  01B8               	clrf	??_mostrarLCD+1
  3366  03CD  0837               	movf	??_mostrarLCD,w
  3367  03CE  00AD               	movwf	I2C_Master_Write@d
  3368  03CF  0838               	movf	??_mostrarLCD+1,w
  3369  03D0  00AE               	movwf	I2C_Master_Write@d+1
  3370  03D1  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  3371                           
  3372                           ;main_Master.c: 638:             I2C_Master_Stop();
  3373  03D6  160A  118A  260F  120A  118A  	fcall	_I2C_Master_Stop
  3374                           
  3375                           ;main_Master.c: 639:             _delay((unsigned long)((100)*(1000000/4000.0)));
  3376  03DB  3021               	movlw	33
  3377  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  3378  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  3379  03DE  00B8               	movwf	??_mostrarLCD+1
  3380  03DF  3075               	movlw	117
  3381  03E0  00B7               	movwf	??_mostrarLCD
  3382  03E1                     u2177:	
  3383  03E1  0BB7               	decfsz	??_mostrarLCD,f
  3384  03E2  2BE1               	goto	u2177
  3385  03E3  0BB8               	decfsz	??_mostrarLCD+1,f
  3386  03E4  2BE1               	goto	u2177
  3387  03E5  2BE6               	nop2
  3388                           
  3389                           ;main_Master.c: 640:             I2C_Master_Start();
  3390  03E6  160A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  3391                           
  3392                           ;main_Master.c: 641:             I2C_Master_Write(0x30);
  3393  03EB  3030               	movlw	48
  3394  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  3395  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  3396  03EE  00AD               	movwf	I2C_Master_Write@d
  3397  03EF  3000               	movlw	0
  3398  03F0  00AE               	movwf	I2C_Master_Write@d+1
  3399  03F1  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  3400                           
  3401                           ;main_Master.c: 642:             I2C_Master_Write(ancho);
  3402  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  3403  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  3404  03F8  084C               	movf	_ancho,w
  3405  03F9  00B7               	movwf	??_mostrarLCD
  3406  03FA  01B8               	clrf	??_mostrarLCD+1
  3407  03FB  0837               	movf	??_mostrarLCD,w
  3408  03FC  00AD               	movwf	I2C_Master_Write@d
  3409  03FD  0838               	movf	??_mostrarLCD+1,w
  3410  03FE  00AE               	movwf	I2C_Master_Write@d+1
  3411  03FF  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  3412                           
  3413                           ;main_Master.c: 643:             I2C_Master_Stop();
  3414  0404  160A  118A  260F  120A  118A  	fcall	_I2C_Master_Stop
  3415                           
  3416                           ;main_Master.c: 644:             _delay((unsigned long)((500)*(1000000/4000.0)));
  3417  0409  30A3               	movlw	163
  3418  040A  1283               	bcf	3,5	;RP0=0, select bank0
  3419  040B  1303               	bcf	3,6	;RP1=0, select bank0
  3420  040C  00B8               	movwf	??_mostrarLCD+1
  3421  040D  3054               	movlw	84
  3422  040E  00B7               	movwf	??_mostrarLCD
  3423  040F                     u2187:	
  3424  040F  0BB7               	decfsz	??_mostrarLCD,f
  3425  0410  2C0F               	goto	u2187
  3426  0411  0BB8               	decfsz	??_mostrarLCD+1,f
  3427  0412  2C0F               	goto	u2187
  3428  0413  0000               	nop
  3429                           
  3430                           ;main_Master.c: 645:             LCD_clear();
  3431  0414  160A  118A  268E   	fcall	_LCD_clear
  3432                           
  3433                           ;main_Master.c: 646:             estado = 0;
  3434  0417  1283               	bcf	3,5	;RP0=0, select bank0
  3435  0418  1303               	bcf	3,6	;RP1=0, select bank0
  3436  0419  01D5               	clrf	_estado
  3437                           
  3438                           ;main_Master.c: 647:             break;
  3439  041A  0008               	return
  3440  041B                     l4580:	
  3441                           
  3442                           ;main_Master.c: 649:             LCD_Set_Cursor(1,9);
  3443  041B  3009               	movlw	9
  3444  041C  00B7               	movwf	??_mostrarLCD
  3445  041D  0837               	movf	??_mostrarLCD,w
  3446  041E  00F5               	movwf	LCD_Set_Cursor@columna
  3447  041F  3001               	movlw	1
  3448  0420  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  3449                           
  3450                           ;main_Master.c: 650:             LCD_Write_String("ERROR");
  3451  0425  309C               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  3452  0426  160A  118A  272B   	fcall	_LCD_Write_String
  3453                           
  3454                           ;main_Master.c: 651:     }
  3455  0429  0008               	return
  3456  042A                     l4582:	
  3457  042A  083A               	movf	mostrarLCD@pantalla,w
  3458  042B  00B7               	movwf	??_mostrarLCD
  3459  042C  01B8               	clrf	??_mostrarLCD+1
  3460                           
  3461                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3462                           ; Switch size 1, requested type "simple"
  3463                           ; Number of cases is 1, Range of values is 0 to 0
  3464                           ; switch strategies available:
  3465                           ; Name         Instructions Cycles
  3466                           ; simple_byte            4     3 (average)
  3467                           ; direct_byte           11     8 (fixed)
  3468                           ; jumptable            260     6 (fixed)
  3469                           ;	Chosen strategy is simple_byte
  3470  042D  0838               	movf	??_mostrarLCD+1,w
  3471  042E  3A00               	xorlw	0	; case 0
  3472  042F  1903               	skipnz
  3473  0430  2C32               	goto	l5154
  3474  0431  2C1B               	goto	l4580
  3475  0432                     l5154:	
  3476                           
  3477                           ; Switch size 1, requested type "simple"
  3478                           ; Number of cases is 11, Range of values is 0 to 10
  3479                           ; switch strategies available:
  3480                           ; Name         Instructions Cycles
  3481                           ; simple_byte           34    18 (average)
  3482                           ; direct_byte           41     8 (fixed)
  3483                           ; jumptable            260     6 (fixed)
  3484                           ;	Chosen strategy is simple_byte
  3485  0432  0837               	movf	??_mostrarLCD,w
  3486  0433  3A00               	xorlw	0	; case 0
  3487  0434  1903               	skipnz
  3488  0435  282D               	goto	l4398
  3489  0436  3A01               	xorlw	1	; case 1
  3490  0437  1903               	skipnz
  3491  0438  2842               	goto	l4400
  3492  0439  3A03               	xorlw	3	; case 2
  3493  043A  1903               	skipnz
  3494  043B  291F               	goto	l4438
  3495  043C  3A01               	xorlw	1	; case 3
  3496  043D  1903               	skipnz
  3497  043E  2965               	goto	l4454
  3498  043F  3A07               	xorlw	7	; case 4
  3499  0440  1903               	skipnz
  3500  0441  29D2               	goto	l4470
  3501  0442  3A01               	xorlw	1	; case 5
  3502  0443  1903               	skipnz
  3503  0444  2AB5               	goto	l4510
  3504  0445  3A03               	xorlw	3	; case 6
  3505  0446  1903               	skipnz
  3506  0447  2AF6               	goto	l4520
  3507  0448  3A01               	xorlw	1	; case 7
  3508  0449  1903               	skipnz
  3509  044A  2B0B               	goto	l4526
  3510  044B  3A0F               	xorlw	15	; case 8
  3511  044C  1903               	skipnz
  3512  044D  2B32               	goto	l4532
  3513  044E  3A01               	xorlw	1	; case 9
  3514  044F  1903               	skipnz
  3515  0450  2B5C               	goto	l4538
  3516  0451  3A03               	xorlw	3	; case 10
  3517  0452  1903               	skipnz
  3518  0453  2B7D               	goto	l4544
  3519  0454  2C1B               	goto	l4580
  3520  0455  0008               	return
  3521  0456                     __end_of_mostrarLCD:	
  3522                           
  3523                           	psect	text5
  3524  0C11                     __ptext5:	
  3525 ;; *************** function _uint_to_array *****************
  3526 ;; Defined at:
  3527 ;;		line 181 in file "LCD_8bits.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;  numero          1    wreg     unsigned char 
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;  numero          1   22[BANK0 ] unsigned char 
  3532 ;;  resultado       6   16[BANK0 ] unsigned int [3]
  3533 ;;  centenas        1   15[BANK0 ] unsigned char 
  3534 ;;  decenas         1   14[BANK0 ] unsigned char 
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1    wreg      PTR unsigned int 
  3537 ;; Registers used:
  3538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3544 ;;      Params:         0       0       0       0       0
  3545 ;;      Locals:         0       9       0       0       0
  3546 ;;      Temps:          0       6       0       0       0
  3547 ;;      Totals:         0      15       0       0       0
  3548 ;;Total ram usage:       15 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:    2
  3551 ;; This function calls:
  3552 ;;		___awdiv
  3553 ;;		___wmul
  3554 ;; This function is called by:
  3555 ;;		_mostrarLCD
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           
  3560                           ;psect for function _uint_to_array
  3561  0C11                     _uint_to_array:	
  3562                           
  3563                           ;incstack = 0
  3564                           ; Regs used in _uint_to_array: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3565                           ;uint_to_array@numero stored from wreg
  3566  0C11  1283               	bcf	3,5	;RP0=0, select bank0
  3567  0C12  1303               	bcf	3,6	;RP1=0, select bank0
  3568  0C13  00B6               	movwf	uint_to_array@numero
  3569                           
  3570                           ;LCD_8bits.c: 182:     uint16_t resultado[3] = {0,0,0};
  3571  0C14  3030               	movlw	uint_to_array@resultado& (0+255)
  3572  0C15  0084               	movwf	4
  3573  0C16  3006               	movlw	6
  3574  0C17  00FF               	movwf	127
  3575  0C18                     u1840:	
  3576  0C18  1383               	bcf	3,7	;select IRP bank0
  3577  0C19  0180               	clrf	0
  3578  0C1A  0A84               	incf	4,f
  3579  0C1B  0BFF               	decfsz	127,f
  3580  0C1C  2C18               	goto	u1840
  3581                           
  3582                           ;LCD_8bits.c: 183:     resultado[0] = numero/100;
  3583  0C1D  3064               	movlw	100
  3584  0C1E  00A0               	movwf	___awdiv@divisor
  3585  0C1F  3000               	movlw	0
  3586  0C20  00A1               	movwf	___awdiv@divisor+1
  3587  0C21  0836               	movf	uint_to_array@numero,w
  3588  0C22  00A8               	movwf	??_uint_to_array
  3589  0C23  01A9               	clrf	??_uint_to_array+1
  3590  0C24  0828               	movf	??_uint_to_array,w
  3591  0C25  00A2               	movwf	___awdiv@dividend
  3592  0C26  0829               	movf	??_uint_to_array+1,w
  3593  0C27  00A3               	movwf	___awdiv@dividend+1
  3594  0C28  120A  158A  2186  120A  158A  	fcall	___awdiv
  3595  0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  3596  0C2E  1303               	bcf	3,6	;RP1=0, select bank0
  3597  0C2F  0821               	movf	?___awdiv+1,w
  3598  0C30  00B1               	movwf	uint_to_array@resultado+1
  3599  0C31  0820               	movf	?___awdiv,w
  3600  0C32  00B0               	movwf	uint_to_array@resultado
  3601                           
  3602                           ;LCD_8bits.c: 184:     uint8_t centenas = resultado[0];
  3603  0C33  0830               	movf	uint_to_array@resultado,w
  3604  0C34  00A8               	movwf	??_uint_to_array
  3605  0C35  0828               	movf	??_uint_to_array,w
  3606  0C36  00AF               	movwf	uint_to_array@centenas
  3607                           
  3608                           ;LCD_8bits.c: 185:     resultado[1] = (numero - (centenas *100))/10;
  3609  0C37  300A               	movlw	10
  3610  0C38  00A0               	movwf	___awdiv@divisor
  3611  0C39  3000               	movlw	0
  3612  0C3A  00A1               	movwf	___awdiv@divisor+1
  3613  0C3B  082F               	movf	uint_to_array@centenas,w
  3614  0C3C  00A8               	movwf	??_uint_to_array
  3615  0C3D  01A9               	clrf	??_uint_to_array+1
  3616  0C3E  0828               	movf	??_uint_to_array,w
  3617  0C3F  00F2               	movwf	___wmul@multiplier
  3618  0C40  0829               	movf	??_uint_to_array+1,w
  3619  0C41  00F3               	movwf	___wmul@multiplier+1
  3620  0C42  309C               	movlw	156
  3621  0C43  00F4               	movwf	___wmul@multiplicand
  3622  0C44  30FF               	movlw	255
  3623  0C45  00F5               	movwf	___wmul@multiplicand+1
  3624  0C46  160A  118A  26E8  120A  158A  	fcall	___wmul
  3625  0C4B  1283               	bcf	3,5	;RP0=0, select bank0
  3626  0C4C  1303               	bcf	3,6	;RP1=0, select bank0
  3627  0C4D  0836               	movf	uint_to_array@numero,w
  3628  0C4E  0772               	addwf	?___wmul,w
  3629  0C4F  00A2               	movwf	___awdiv@dividend
  3630  0C50  0873               	movf	?___wmul+1,w
  3631  0C51  1803               	skipnc
  3632  0C52  0A73               	incf	?___wmul+1,w
  3633  0C53  00A3               	movwf	___awdiv@dividend+1
  3634  0C54  120A  158A  2186  120A  158A  	fcall	___awdiv
  3635  0C59  1283               	bcf	3,5	;RP0=0, select bank0
  3636  0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  3637  0C5B  0821               	movf	?___awdiv+1,w
  3638  0C5C  00B3               	movwf	uint_to_array@resultado+3
  3639  0C5D  0820               	movf	?___awdiv,w
  3640  0C5E  00B2               	movwf	uint_to_array@resultado+2
  3641                           
  3642                           ;LCD_8bits.c: 186:     uint8_t decenas = resultado[1];
  3643  0C5F  0832               	movf	uint_to_array@resultado+2,w
  3644  0C60  00A8               	movwf	??_uint_to_array
  3645  0C61  0828               	movf	??_uint_to_array,w
  3646  0C62  00AE               	movwf	uint_to_array@decenas
  3647                           
  3648                           ;LCD_8bits.c: 187:     resultado[2] = numero -(centenas*100+decenas*10);
  3649  0C63  082F               	movf	uint_to_array@centenas,w
  3650  0C64  00A8               	movwf	??_uint_to_array
  3651  0C65  01A9               	clrf	??_uint_to_array+1
  3652  0C66  0828               	movf	??_uint_to_array,w
  3653  0C67  00F2               	movwf	___wmul@multiplier
  3654  0C68  0829               	movf	??_uint_to_array+1,w
  3655  0C69  00F3               	movwf	___wmul@multiplier+1
  3656  0C6A  309C               	movlw	156
  3657  0C6B  00F4               	movwf	___wmul@multiplicand
  3658  0C6C  30FF               	movlw	255
  3659  0C6D  00F5               	movwf	___wmul@multiplicand+1
  3660  0C6E  160A  118A  26E8  120A  158A  	fcall	___wmul
  3661  0C73  1283               	bcf	3,5	;RP0=0, select bank0
  3662  0C74  1303               	bcf	3,6	;RP1=0, select bank0
  3663  0C75  0836               	movf	uint_to_array@numero,w
  3664  0C76  0772               	addwf	?___wmul,w
  3665  0C77  00AA               	movwf	??_uint_to_array+2
  3666  0C78  0873               	movf	?___wmul+1,w
  3667  0C79  1803               	skipnc
  3668  0C7A  0A73               	incf	?___wmul+1,w
  3669  0C7B  00AB               	movwf	??_uint_to_array+3
  3670  0C7C  082E               	movf	uint_to_array@decenas,w
  3671  0C7D  00AC               	movwf	??_uint_to_array+4
  3672  0C7E  01AD               	clrf	??_uint_to_array+5
  3673  0C7F  082C               	movf	??_uint_to_array+4,w
  3674  0C80  00F2               	movwf	___wmul@multiplier
  3675  0C81  082D               	movf	??_uint_to_array+5,w
  3676  0C82  00F3               	movwf	___wmul@multiplier+1
  3677  0C83  30F6               	movlw	246
  3678  0C84  00F4               	movwf	___wmul@multiplicand
  3679  0C85  30FF               	movlw	255
  3680  0C86  00F5               	movwf	___wmul@multiplicand+1
  3681  0C87  160A  118A  26E8   	fcall	___wmul
  3682  0C8A  0872               	movf	?___wmul,w
  3683  0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  3684  0C8C  1303               	bcf	3,6	;RP1=0, select bank0
  3685  0C8D  072A               	addwf	??_uint_to_array+2,w
  3686  0C8E  00B4               	movwf	uint_to_array@resultado+4
  3687  0C8F  0873               	movf	?___wmul+1,w
  3688  0C90  1803               	skipnc
  3689  0C91  0A73               	incf	?___wmul+1,w
  3690  0C92  072B               	addwf	??_uint_to_array+3,w
  3691  0C93  00B5               	movwf	uint_to_array@resultado+5
  3692                           
  3693                           ;LCD_8bits.c: 188:     return(resultado);
  3694  0C94  3030               	movlw	(low (uint_to_array@resultado| 0))& (0+255)
  3695  0C95  0008               	return
  3696  0C96                     __end_of_uint_to_array:	
  3697                           
  3698                           	psect	text6
  3699  16E8                     __ptext6:	
  3700 ;; *************** function ___wmul *****************
  3701 ;; Defined at:
  3702 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;  multiplier      2    2[COMMON] unsigned int 
  3705 ;;  multiplicand    2    4[COMMON] unsigned int 
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;  product         2    6[COMMON] unsigned int 
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  2    2[COMMON] unsigned int 
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, status,0
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3717 ;;      Params:         4       0       0       0       0
  3718 ;;      Locals:         2       0       0       0       0
  3719 ;;      Temps:          0       0       0       0       0
  3720 ;;      Totals:         6       0       0       0       0
  3721 ;;Total ram usage:        6 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:    1
  3724 ;; This function calls:
  3725 ;;		Nothing
  3726 ;; This function is called by:
  3727 ;;		_uint_to_array
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           
  3732                           ;psect for function ___wmul
  3733  16E8                     ___wmul:	
  3734                           
  3735                           ;incstack = 0
  3736                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3737  16E8  01F6               	clrf	___wmul@product
  3738  16E9  01F7               	clrf	___wmul@product+1
  3739  16EA                     l2832:	
  3740  16EA  1C72               	btfss	___wmul@multiplier,0
  3741  16EB  2EF2               	goto	l628
  3742  16EC  0874               	movf	___wmul@multiplicand,w
  3743  16ED  07F6               	addwf	___wmul@product,f
  3744  16EE  1803               	skipnc
  3745  16EF  0AF7               	incf	___wmul@product+1,f
  3746  16F0  0875               	movf	___wmul@multiplicand+1,w
  3747  16F1  07F7               	addwf	___wmul@product+1,f
  3748  16F2                     l628:	
  3749  16F2  3001               	movlw	1
  3750  16F3                     u1065:	
  3751  16F3  1003               	clrc
  3752  16F4  0DF4               	rlf	___wmul@multiplicand,f
  3753  16F5  0DF5               	rlf	___wmul@multiplicand+1,f
  3754  16F6  3EFF               	addlw	-1
  3755  16F7  1D03               	skipz
  3756  16F8  2EF3               	goto	u1065
  3757  16F9  3001               	movlw	1
  3758  16FA                     u1075:	
  3759  16FA  1003               	clrc
  3760  16FB  0CF3               	rrf	___wmul@multiplier+1,f
  3761  16FC  0CF2               	rrf	___wmul@multiplier,f
  3762  16FD  3EFF               	addlw	-1
  3763  16FE  1D03               	skipz
  3764  16FF  2EFA               	goto	u1075
  3765  1700  0872               	movf	___wmul@multiplier,w
  3766  1701  0473               	iorwf	___wmul@multiplier+1,w
  3767  1702  1D03               	btfss	3,2
  3768  1703  2EEA               	goto	l2832
  3769  1704  0877               	movf	___wmul@product+1,w
  3770  1705  00F3               	movwf	?___wmul+1
  3771  1706  0876               	movf	___wmul@product,w
  3772  1707  00F2               	movwf	?___wmul
  3773  1708  0008               	return
  3774  1709                     __end_of___wmul:	
  3775                           
  3776                           	psect	text7
  3777  0724                     __ptext7:	
  3778 ;; *************** function _display_Uhrzeit *****************
  3779 ;; Defined at:
  3780 ;;		line 430 in file "main_Master.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;  fila            1    wreg     unsigned char 
  3783 ;;  columna         1    8[BANK0 ] unsigned char 
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;  fila            1   12[BANK0 ] unsigned char 
  3786 ;;  Uhr_d           1   18[BANK0 ] unsigned char 
  3787 ;;  Uhr_u           1   17[BANK0 ] unsigned char 
  3788 ;;  min_d           1   16[BANK0 ] unsigned char 
  3789 ;;  min_u           1   15[BANK0 ] unsigned char 
  3790 ;;  seg_d           1   14[BANK0 ] unsigned char 
  3791 ;;  seg_u           1   13[BANK0 ] unsigned char 
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1    wreg      void 
  3794 ;; Registers used:
  3795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3801 ;;      Params:         0       1       0       0       0
  3802 ;;      Locals:         0       7       0       0       0
  3803 ;;      Temps:          0       3       0       0       0
  3804 ;;      Totals:         0      11       0       0       0
  3805 ;;Total ram usage:       11 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; Hardware stack levels required when called:    3
  3808 ;; This function calls:
  3809 ;;		_LCD_Set_Cursor
  3810 ;;		_LCD_Write_Character
  3811 ;;		___awdiv
  3812 ;;		___awmod
  3813 ;; This function is called by:
  3814 ;;		_mostrarLCD
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           
  3819                           ;psect for function _display_Uhrzeit
  3820  0724                     _display_Uhrzeit:	
  3821                           
  3822                           ;incstack = 0
  3823                           ; Regs used in _display_Uhrzeit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3824                           ;display_Uhrzeit@fila stored from wreg
  3825  0724  1283               	bcf	3,5	;RP0=0, select bank0
  3826  0725  1303               	bcf	3,6	;RP1=0, select bank0
  3827  0726  00AC               	movwf	display_Uhrzeit@fila
  3828                           
  3829                           ;main_Master.c: 431:     char seg_u = seg%10;
  3830  0727  300A               	movlw	10
  3831  0728  00F2               	movwf	___awmod@divisor
  3832  0729  3000               	movlw	0
  3833  072A  00F3               	movwf	___awmod@divisor+1
  3834  072B  0854               	movf	_seg,w
  3835  072C  00A9               	movwf	??_display_Uhrzeit
  3836  072D  01AA               	clrf	??_display_Uhrzeit+1
  3837  072E  0829               	movf	??_display_Uhrzeit,w
  3838  072F  00F4               	movwf	___awmod@dividend
  3839  0730  082A               	movf	??_display_Uhrzeit+1,w
  3840  0731  00F5               	movwf	___awmod@dividend+1
  3841  0732  120A  158A  213B  120A  118A  	fcall	___awmod
  3842  0737  0872               	movf	?___awmod,w
  3843  0738  1283               	bcf	3,5	;RP0=0, select bank0
  3844  0739  1303               	bcf	3,6	;RP1=0, select bank0
  3845  073A  00AB               	movwf	??_display_Uhrzeit+2
  3846  073B  082B               	movf	??_display_Uhrzeit+2,w
  3847  073C  00AD               	movwf	display_Uhrzeit@seg_u
  3848                           
  3849                           ;main_Master.c: 432:     char seg_d = seg/10;
  3850  073D  300A               	movlw	10
  3851  073E  00A0               	movwf	___awdiv@divisor
  3852  073F  3000               	movlw	0
  3853  0740  00A1               	movwf	___awdiv@divisor+1
  3854  0741  0854               	movf	_seg,w
  3855  0742  00A9               	movwf	??_display_Uhrzeit
  3856  0743  01AA               	clrf	??_display_Uhrzeit+1
  3857  0744  0829               	movf	??_display_Uhrzeit,w
  3858  0745  00A2               	movwf	___awdiv@dividend
  3859  0746  082A               	movf	??_display_Uhrzeit+1,w
  3860  0747  00A3               	movwf	___awdiv@dividend+1
  3861  0748  120A  158A  2186  120A  118A  	fcall	___awdiv
  3862  074D  1283               	bcf	3,5	;RP0=0, select bank0
  3863  074E  1303               	bcf	3,6	;RP1=0, select bank0
  3864  074F  0820               	movf	?___awdiv,w
  3865  0750  00AB               	movwf	??_display_Uhrzeit+2
  3866  0751  082B               	movf	??_display_Uhrzeit+2,w
  3867  0752  00AE               	movwf	display_Uhrzeit@seg_d
  3868                           
  3869                           ;main_Master.c: 433:     char min_u = min%10;
  3870  0753  300A               	movlw	10
  3871  0754  00F2               	movwf	___awmod@divisor
  3872  0755  3000               	movlw	0
  3873  0756  00F3               	movwf	___awmod@divisor+1
  3874  0757  085F               	movf	_min,w
  3875  0758  00A9               	movwf	??_display_Uhrzeit
  3876  0759  01AA               	clrf	??_display_Uhrzeit+1
  3877  075A  0829               	movf	??_display_Uhrzeit,w
  3878  075B  00F4               	movwf	___awmod@dividend
  3879  075C  082A               	movf	??_display_Uhrzeit+1,w
  3880  075D  00F5               	movwf	___awmod@dividend+1
  3881  075E  120A  158A  213B  120A  118A  	fcall	___awmod
  3882  0763  0872               	movf	?___awmod,w
  3883  0764  1283               	bcf	3,5	;RP0=0, select bank0
  3884  0765  1303               	bcf	3,6	;RP1=0, select bank0
  3885  0766  00AB               	movwf	??_display_Uhrzeit+2
  3886  0767  082B               	movf	??_display_Uhrzeit+2,w
  3887  0768  00AF               	movwf	display_Uhrzeit@min_u
  3888                           
  3889                           ;main_Master.c: 434:     char min_d = min/10;
  3890  0769  300A               	movlw	10
  3891  076A  00A0               	movwf	___awdiv@divisor
  3892  076B  3000               	movlw	0
  3893  076C  00A1               	movwf	___awdiv@divisor+1
  3894  076D  085F               	movf	_min,w
  3895  076E  00A9               	movwf	??_display_Uhrzeit
  3896  076F  01AA               	clrf	??_display_Uhrzeit+1
  3897  0770  0829               	movf	??_display_Uhrzeit,w
  3898  0771  00A2               	movwf	___awdiv@dividend
  3899  0772  082A               	movf	??_display_Uhrzeit+1,w
  3900  0773  00A3               	movwf	___awdiv@dividend+1
  3901  0774  120A  158A  2186  120A  118A  	fcall	___awdiv
  3902  0779  1283               	bcf	3,5	;RP0=0, select bank0
  3903  077A  1303               	bcf	3,6	;RP1=0, select bank0
  3904  077B  0820               	movf	?___awdiv,w
  3905  077C  00AB               	movwf	??_display_Uhrzeit+2
  3906  077D  082B               	movf	??_display_Uhrzeit+2,w
  3907  077E  00B0               	movwf	display_Uhrzeit@min_d
  3908                           
  3909                           ;main_Master.c: 435:     char Uhr_u = hora%10;
  3910  077F  300A               	movlw	10
  3911  0780  00F2               	movwf	___awmod@divisor
  3912  0781  3000               	movlw	0
  3913  0782  00F3               	movwf	___awmod@divisor+1
  3914  0783  085E               	movf	_hora,w
  3915  0784  00A9               	movwf	??_display_Uhrzeit
  3916  0785  01AA               	clrf	??_display_Uhrzeit+1
  3917  0786  0829               	movf	??_display_Uhrzeit,w
  3918  0787  00F4               	movwf	___awmod@dividend
  3919  0788  082A               	movf	??_display_Uhrzeit+1,w
  3920  0789  00F5               	movwf	___awmod@dividend+1
  3921  078A  120A  158A  213B  120A  118A  	fcall	___awmod
  3922  078F  0872               	movf	?___awmod,w
  3923  0790  1283               	bcf	3,5	;RP0=0, select bank0
  3924  0791  1303               	bcf	3,6	;RP1=0, select bank0
  3925  0792  00AB               	movwf	??_display_Uhrzeit+2
  3926  0793  082B               	movf	??_display_Uhrzeit+2,w
  3927  0794  00B1               	movwf	display_Uhrzeit@Uhr_u
  3928                           
  3929                           ;main_Master.c: 436:     char Uhr_d = hora/10;
  3930  0795  300A               	movlw	10
  3931  0796  00A0               	movwf	___awdiv@divisor
  3932  0797  3000               	movlw	0
  3933  0798  00A1               	movwf	___awdiv@divisor+1
  3934  0799  085E               	movf	_hora,w
  3935  079A  00A9               	movwf	??_display_Uhrzeit
  3936  079B  01AA               	clrf	??_display_Uhrzeit+1
  3937  079C  0829               	movf	??_display_Uhrzeit,w
  3938  079D  00A2               	movwf	___awdiv@dividend
  3939  079E  082A               	movf	??_display_Uhrzeit+1,w
  3940  079F  00A3               	movwf	___awdiv@dividend+1
  3941  07A0  120A  158A  2186  120A  118A  	fcall	___awdiv
  3942  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  3943  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  3944  07A7  0820               	movf	?___awdiv,w
  3945  07A8  00AB               	movwf	??_display_Uhrzeit+2
  3946  07A9  082B               	movf	??_display_Uhrzeit+2,w
  3947  07AA  00B2               	movwf	display_Uhrzeit@Uhr_d
  3948                           
  3949                           ;main_Master.c: 438:     LCD_Set_Cursor(fila, columna);
  3950  07AB  0828               	movf	display_Uhrzeit@columna,w
  3951  07AC  00A9               	movwf	??_display_Uhrzeit
  3952  07AD  0829               	movf	??_display_Uhrzeit,w
  3953  07AE  00F5               	movwf	LCD_Set_Cursor@columna
  3954  07AF  082C               	movf	display_Uhrzeit@fila,w
  3955  07B0  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  3956                           
  3957                           ;main_Master.c: 439:     LCD_Write_Character(Uhr_d + '0');
  3958  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  3959  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  3960  07B7  0832               	movf	display_Uhrzeit@Uhr_d,w
  3961  07B8  3E30               	addlw	48
  3962  07B9  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  3963                           
  3964                           ;main_Master.c: 440:     LCD_Write_Character(Uhr_u + '0');
  3965  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  3966  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  3967  07C0  0831               	movf	display_Uhrzeit@Uhr_u,w
  3968  07C1  3E30               	addlw	48
  3969  07C2  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  3970                           
  3971                           ;main_Master.c: 441:     LCD_Write_Character(':');
  3972  07C7  303A               	movlw	58
  3973  07C8  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  3974                           
  3975                           ;main_Master.c: 442:     LCD_Write_Character(min_d + '0');
  3976  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  3977  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  3978  07CF  0830               	movf	display_Uhrzeit@min_d,w
  3979  07D0  3E30               	addlw	48
  3980  07D1  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  3981                           
  3982                           ;main_Master.c: 443:     LCD_Write_Character(min_u + '0');
  3983  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  3984  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  3985  07D8  082F               	movf	display_Uhrzeit@min_u,w
  3986  07D9  3E30               	addlw	48
  3987  07DA  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  3988                           
  3989                           ;main_Master.c: 444:     LCD_Write_Character(':');
  3990  07DF  303A               	movlw	58
  3991  07E0  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  3992                           
  3993                           ;main_Master.c: 445:     LCD_Write_Character(seg_d + '0');
  3994  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  3995  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  3996  07E7  082E               	movf	display_Uhrzeit@seg_d,w
  3997  07E8  3E30               	addlw	48
  3998  07E9  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  3999                           
  4000                           ;main_Master.c: 446:     LCD_Write_Character(seg_u + '0');
  4001  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  4002  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  4003  07F0  082D               	movf	display_Uhrzeit@seg_u,w
  4004  07F1  3E30               	addlw	48
  4005  07F2  160A  118A  2637   	fcall	_LCD_Write_Character
  4006  07F5  0008               	return
  4007  07F6                     __end_of_display_Uhrzeit:	
  4008                           
  4009                           	psect	text8
  4010  064C                     __ptext8:	
  4011 ;; *************** function _display_Datum *****************
  4012 ;; Defined at:
  4013 ;;		line 450 in file "main_Master.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  fila            1    wreg     unsigned char 
  4016 ;;  columna         1    8[BANK0 ] unsigned char 
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;  fila            1   12[BANK0 ] unsigned char 
  4019 ;;  jahr_d          1   18[BANK0 ] unsigned char 
  4020 ;;  jahr_u          1   17[BANK0 ] unsigned char 
  4021 ;;  mes_d           1   16[BANK0 ] unsigned char 
  4022 ;;  mes_u           1   15[BANK0 ] unsigned char 
  4023 ;;  dia_d           1   14[BANK0 ] unsigned char 
  4024 ;;  dia_u           1   13[BANK0 ] unsigned char 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      void 
  4027 ;; Registers used:
  4028 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4034 ;;      Params:         0       1       0       0       0
  4035 ;;      Locals:         0       7       0       0       0
  4036 ;;      Temps:          0       3       0       0       0
  4037 ;;      Totals:         0      11       0       0       0
  4038 ;;Total ram usage:       11 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:    3
  4041 ;; This function calls:
  4042 ;;		_LCD_Set_Cursor
  4043 ;;		_LCD_Write_Character
  4044 ;;		_LCD_Write_String
  4045 ;;		___awdiv
  4046 ;;		___awmod
  4047 ;; This function is called by:
  4048 ;;		_mostrarLCD
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           
  4053                           ;psect for function _display_Datum
  4054  064C                     _display_Datum:	
  4055                           
  4056                           ;incstack = 0
  4057                           ; Regs used in _display_Datum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4058                           ;display_Datum@fila stored from wreg
  4059  064C  1283               	bcf	3,5	;RP0=0, select bank0
  4060  064D  1303               	bcf	3,6	;RP1=0, select bank0
  4061  064E  00AC               	movwf	display_Datum@fila
  4062                           
  4063                           ;main_Master.c: 451:     char dia_u = datum%10;
  4064  064F  300A               	movlw	10
  4065  0650  00F2               	movwf	___awmod@divisor
  4066  0651  3000               	movlw	0
  4067  0652  00F3               	movwf	___awmod@divisor+1
  4068  0653  085C               	movf	_datum,w
  4069  0654  00A9               	movwf	??_display_Datum
  4070  0655  01AA               	clrf	??_display_Datum+1
  4071  0656  0829               	movf	??_display_Datum,w
  4072  0657  00F4               	movwf	___awmod@dividend
  4073  0658  082A               	movf	??_display_Datum+1,w
  4074  0659  00F5               	movwf	___awmod@dividend+1
  4075  065A  120A  158A  213B  120A  118A  	fcall	___awmod
  4076  065F  0872               	movf	?___awmod,w
  4077  0660  1283               	bcf	3,5	;RP0=0, select bank0
  4078  0661  1303               	bcf	3,6	;RP1=0, select bank0
  4079  0662  00AB               	movwf	??_display_Datum+2
  4080  0663  082B               	movf	??_display_Datum+2,w
  4081  0664  00AD               	movwf	display_Datum@dia_u
  4082                           
  4083                           ;main_Master.c: 452:     char dia_d = datum/10;
  4084  0665  300A               	movlw	10
  4085  0666  00A0               	movwf	___awdiv@divisor
  4086  0667  3000               	movlw	0
  4087  0668  00A1               	movwf	___awdiv@divisor+1
  4088  0669  085C               	movf	_datum,w
  4089  066A  00A9               	movwf	??_display_Datum
  4090  066B  01AA               	clrf	??_display_Datum+1
  4091  066C  0829               	movf	??_display_Datum,w
  4092  066D  00A2               	movwf	___awdiv@dividend
  4093  066E  082A               	movf	??_display_Datum+1,w
  4094  066F  00A3               	movwf	___awdiv@dividend+1
  4095  0670  120A  158A  2186  120A  118A  	fcall	___awdiv
  4096  0675  1283               	bcf	3,5	;RP0=0, select bank0
  4097  0676  1303               	bcf	3,6	;RP1=0, select bank0
  4098  0677  0820               	movf	?___awdiv,w
  4099  0678  00AB               	movwf	??_display_Datum+2
  4100  0679  082B               	movf	??_display_Datum+2,w
  4101  067A  00AE               	movwf	display_Datum@dia_d
  4102                           
  4103                           ;main_Master.c: 453:     char mes_u = mes%10;
  4104  067B  300A               	movlw	10
  4105  067C  00F2               	movwf	___awmod@divisor
  4106  067D  3000               	movlw	0
  4107  067E  00F3               	movwf	___awmod@divisor+1
  4108  067F  085B               	movf	_mes,w
  4109  0680  00A9               	movwf	??_display_Datum
  4110  0681  01AA               	clrf	??_display_Datum+1
  4111  0682  0829               	movf	??_display_Datum,w
  4112  0683  00F4               	movwf	___awmod@dividend
  4113  0684  082A               	movf	??_display_Datum+1,w
  4114  0685  00F5               	movwf	___awmod@dividend+1
  4115  0686  120A  158A  213B  120A  118A  	fcall	___awmod
  4116  068B  0872               	movf	?___awmod,w
  4117  068C  1283               	bcf	3,5	;RP0=0, select bank0
  4118  068D  1303               	bcf	3,6	;RP1=0, select bank0
  4119  068E  00AB               	movwf	??_display_Datum+2
  4120  068F  082B               	movf	??_display_Datum+2,w
  4121  0690  00AF               	movwf	display_Datum@mes_u
  4122                           
  4123                           ;main_Master.c: 454:     char mes_d = mes/10;
  4124  0691  300A               	movlw	10
  4125  0692  00A0               	movwf	___awdiv@divisor
  4126  0693  3000               	movlw	0
  4127  0694  00A1               	movwf	___awdiv@divisor+1
  4128  0695  085B               	movf	_mes,w
  4129  0696  00A9               	movwf	??_display_Datum
  4130  0697  01AA               	clrf	??_display_Datum+1
  4131  0698  0829               	movf	??_display_Datum,w
  4132  0699  00A2               	movwf	___awdiv@dividend
  4133  069A  082A               	movf	??_display_Datum+1,w
  4134  069B  00A3               	movwf	___awdiv@dividend+1
  4135  069C  120A  158A  2186  120A  118A  	fcall	___awdiv
  4136  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  4137  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  4138  06A3  0820               	movf	?___awdiv,w
  4139  06A4  00AB               	movwf	??_display_Datum+2
  4140  06A5  082B               	movf	??_display_Datum+2,w
  4141  06A6  00B0               	movwf	display_Datum@mes_d
  4142                           
  4143                           ;main_Master.c: 455:     char jahr_u = jahr%10;
  4144  06A7  300A               	movlw	10
  4145  06A8  00F2               	movwf	___awmod@divisor
  4146  06A9  3000               	movlw	0
  4147  06AA  00F3               	movwf	___awmod@divisor+1
  4148  06AB  085A               	movf	_jahr,w
  4149  06AC  00A9               	movwf	??_display_Datum
  4150  06AD  01AA               	clrf	??_display_Datum+1
  4151  06AE  0829               	movf	??_display_Datum,w
  4152  06AF  00F4               	movwf	___awmod@dividend
  4153  06B0  082A               	movf	??_display_Datum+1,w
  4154  06B1  00F5               	movwf	___awmod@dividend+1
  4155  06B2  120A  158A  213B  120A  118A  	fcall	___awmod
  4156  06B7  0872               	movf	?___awmod,w
  4157  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  4158  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  4159  06BA  00AB               	movwf	??_display_Datum+2
  4160  06BB  082B               	movf	??_display_Datum+2,w
  4161  06BC  00B1               	movwf	display_Datum@jahr_u
  4162                           
  4163                           ;main_Master.c: 456:     char jahr_d = jahr/10;
  4164  06BD  300A               	movlw	10
  4165  06BE  00A0               	movwf	___awdiv@divisor
  4166  06BF  3000               	movlw	0
  4167  06C0  00A1               	movwf	___awdiv@divisor+1
  4168  06C1  085A               	movf	_jahr,w
  4169  06C2  00A9               	movwf	??_display_Datum
  4170  06C3  01AA               	clrf	??_display_Datum+1
  4171  06C4  0829               	movf	??_display_Datum,w
  4172  06C5  00A2               	movwf	___awdiv@dividend
  4173  06C6  082A               	movf	??_display_Datum+1,w
  4174  06C7  00A3               	movwf	___awdiv@dividend+1
  4175  06C8  120A  158A  2186  120A  118A  	fcall	___awdiv
  4176  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  4177  06CE  1303               	bcf	3,6	;RP1=0, select bank0
  4178  06CF  0820               	movf	?___awdiv,w
  4179  06D0  00AB               	movwf	??_display_Datum+2
  4180  06D1  082B               	movf	??_display_Datum+2,w
  4181  06D2  00B2               	movwf	display_Datum@jahr_d
  4182                           
  4183                           ;main_Master.c: 458:     LCD_Set_Cursor(fila, columna);
  4184  06D3  0828               	movf	display_Datum@columna,w
  4185  06D4  00A9               	movwf	??_display_Datum
  4186  06D5  0829               	movf	??_display_Datum,w
  4187  06D6  00F5               	movwf	LCD_Set_Cursor@columna
  4188  06D7  082C               	movf	display_Datum@fila,w
  4189  06D8  160A  118A  27A5  120A  118A  	fcall	_LCD_Set_Cursor
  4190                           
  4191                           ;main_Master.c: 459:     LCD_Write_Character(dia_d + '0');
  4192  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  4193  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  4194  06DF  082E               	movf	display_Datum@dia_d,w
  4195  06E0  3E30               	addlw	48
  4196  06E1  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  4197                           
  4198                           ;main_Master.c: 460:     LCD_Write_Character(dia_u + '0');
  4199  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  4200  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  4201  06E8  082D               	movf	display_Datum@dia_u,w
  4202  06E9  3E30               	addlw	48
  4203  06EA  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  4204                           
  4205                           ;main_Master.c: 461:     LCD_Write_Character('/');
  4206  06EF  302F               	movlw	47
  4207  06F0  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  4208                           
  4209                           ;main_Master.c: 462:     LCD_Write_Character(mes_d + '0');
  4210  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  4211  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  4212  06F7  0830               	movf	display_Datum@mes_d,w
  4213  06F8  3E30               	addlw	48
  4214  06F9  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  4215                           
  4216                           ;main_Master.c: 463:     LCD_Write_Character(mes_u + '0');
  4217  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  4218  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  4219  0700  082F               	movf	display_Datum@mes_u,w
  4220  0701  3E30               	addlw	48
  4221  0702  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  4222                           
  4223                           ;main_Master.c: 464:     LCD_Write_Character('/');
  4224  0707  302F               	movlw	47
  4225  0708  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  4226                           
  4227                           ;main_Master.c: 465:     LCD_Write_String("20");
  4228  070D  30AE               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4229  070E  160A  118A  272B  120A  118A  	fcall	_LCD_Write_String
  4230                           
  4231                           ;main_Master.c: 466:     LCD_Write_Character(jahr_d + '0');
  4232  0713  1283               	bcf	3,5	;RP0=0, select bank0
  4233  0714  1303               	bcf	3,6	;RP1=0, select bank0
  4234  0715  0832               	movf	display_Datum@jahr_d,w
  4235  0716  3E30               	addlw	48
  4236  0717  160A  118A  2637  120A  118A  	fcall	_LCD_Write_Character
  4237                           
  4238                           ;main_Master.c: 467:     LCD_Write_Character(jahr_u + '0');
  4239  071C  1283               	bcf	3,5	;RP0=0, select bank0
  4240  071D  1303               	bcf	3,6	;RP1=0, select bank0
  4241  071E  0831               	movf	display_Datum@jahr_u,w
  4242  071F  3E30               	addlw	48
  4243  0720  160A  118A  2637   	fcall	_LCD_Write_Character
  4244  0723  0008               	return
  4245  0724                     __end_of_display_Datum:	
  4246                           
  4247                           	psect	text9
  4248  172B                     __ptext9:	
  4249 ;; *************** function _LCD_Write_String *****************
  4250 ;; Defined at:
  4251 ;;		line 73 in file "LCD_8bits.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  a               1    wreg     PTR unsigned char 
  4254 ;;		 -> STR_17(6), STR_16(13), STR_15(3), STR_14(13), 
  4255 ;;		 -> STR_13(5), STR_12(3), STR_11(5), STR_10(3), 
  4256 ;;		 -> STR_9(13), STR_8(4), STR_7(9), STR_6(14), 
  4257 ;;		 -> STR_5(12), STR_4(11), STR_3(13), STR_2(17), 
  4258 ;;		 -> STR_1(3), 
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;  a               1    6[COMMON] PTR unsigned char 
  4261 ;;		 -> STR_17(6), STR_16(13), STR_15(3), STR_14(13), 
  4262 ;;		 -> STR_13(5), STR_12(3), STR_11(5), STR_10(3), 
  4263 ;;		 -> STR_9(13), STR_8(4), STR_7(9), STR_6(14), 
  4264 ;;		 -> STR_5(12), STR_4(11), STR_3(13), STR_2(17), 
  4265 ;;		 -> STR_1(3), 
  4266 ;;  n               2    4[COMMON] int 
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  1    wreg      void 
  4269 ;; Registers used:
  4270 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4276 ;;      Params:         0       0       0       0       0
  4277 ;;      Locals:         3       0       0       0       0
  4278 ;;      Temps:          0       0       0       0       0
  4279 ;;      Totals:         3       0       0       0       0
  4280 ;;Total ram usage:        3 bytes
  4281 ;; Hardware stack levels used:    1
  4282 ;; Hardware stack levels required when called:    2
  4283 ;; This function calls:
  4284 ;;		_LCD_Write_Character
  4285 ;; This function is called by:
  4286 ;;		_display_Datum
  4287 ;;		_mostrarLCD
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           
  4292                           ;psect for function _LCD_Write_String
  4293  172B                     _LCD_Write_String:	
  4294                           
  4295                           ;incstack = 0
  4296                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4297                           ;LCD_Write_String@a stored from wreg
  4298  172B  00F6               	movwf	LCD_Write_String@a
  4299                           
  4300                           ;LCD_8bits.c: 74:     int n;;LCD_8bits.c: 75:     for(n = 0; a[n] != '\0'; n++){
  4301  172C  01F4               	clrf	LCD_Write_String@n
  4302  172D  01F5               	clrf	LCD_Write_String@n+1
  4303  172E                     l2824:	
  4304  172E  0874               	movf	LCD_Write_String@n,w
  4305  172F  0776               	addwf	LCD_Write_String@a,w
  4306  1730  0084               	movwf	4
  4307  1731  120A  158A  2000  160A  118A  	fcall	stringdir
  4308  1736  3A00               	xorlw	0
  4309  1737  1903               	btfsc	3,2
  4310  1738  0008               	return
  4311                           
  4312                           ;LCD_8bits.c: 76:         LCD_Write_Character(a[n]);
  4313  1739  0874               	movf	LCD_Write_String@n,w
  4314  173A  0776               	addwf	LCD_Write_String@a,w
  4315  173B  0084               	movwf	4
  4316  173C  120A  158A  2000  160A  118A  	fcall	stringdir
  4317  1741  160A  118A  2637  160A  118A  	fcall	_LCD_Write_Character
  4318                           
  4319                           ;LCD_8bits.c: 77:     }
  4320  1746  3001               	movlw	1
  4321  1747  07F4               	addwf	LCD_Write_String@n,f
  4322  1748  1803               	skipnc
  4323  1749  0AF5               	incf	LCD_Write_String@n+1,f
  4324  174A  3000               	movlw	0
  4325  174B  07F5               	addwf	LCD_Write_String@n+1,f
  4326  174C  2F2E               	goto	l2824
  4327  174D                     __end_of_LCD_Write_String:	
  4328                           
  4329                           	psect	text10
  4330  17A5                     __ptext10:	
  4331 ;; *************** function _LCD_Set_Cursor *****************
  4332 ;; Defined at:
  4333 ;;		line 80 in file "LCD_8bits.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;  linea           1    wreg     unsigned char 
  4336 ;;  columna         1    5[COMMON] unsigned char 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  linea           1    8[COMMON] unsigned char 
  4339 ;;  corrimiento     1    9[COMMON] unsigned char 
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      void 
  4342 ;; Registers used:
  4343 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4349 ;;      Params:         1       0       0       0       0
  4350 ;;      Locals:         2       0       0       0       0
  4351 ;;      Temps:          2       0       0       0       0
  4352 ;;      Totals:         5       0       0       0       0
  4353 ;;Total ram usage:        5 bytes
  4354 ;; Hardware stack levels used:    1
  4355 ;; Hardware stack levels required when called:    2
  4356 ;; This function calls:
  4357 ;;		_LCD_Cmd
  4358 ;; This function is called by:
  4359 ;;		_display_Uhrzeit
  4360 ;;		_display_Datum
  4361 ;;		_mostrarLCD
  4362 ;;		_pressBoton2
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366                           
  4367                           ;psect for function _LCD_Set_Cursor
  4368  17A5                     _LCD_Set_Cursor:	
  4369                           
  4370                           ;incstack = 0
  4371                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4372                           ;LCD_Set_Cursor@linea stored from wreg
  4373  17A5  00F8               	movwf	LCD_Set_Cursor@linea
  4374                           
  4375                           ;LCD_8bits.c: 82:     switch (linea){
  4376  17A6  2FC0               	goto	l2812
  4377  17A7                     l2802:	
  4378                           
  4379                           ;LCD_8bits.c: 84:             corrimiento = 0x80 + columna;
  4380  17A7  0875               	movf	LCD_Set_Cursor@columna,w
  4381  17A8  3E80               	addlw	128
  4382  17A9  00F6               	movwf	??_LCD_Set_Cursor
  4383  17AA  0876               	movf	??_LCD_Set_Cursor,w
  4384  17AB  00F9               	movwf	LCD_Set_Cursor@corrimiento
  4385                           
  4386                           ;LCD_8bits.c: 85:             LCD_Cmd(corrimiento);
  4387  17AC  0879               	movf	LCD_Set_Cursor@corrimiento,w
  4388  17AD  160A  118A  27D1   	fcall	_LCD_Cmd
  4389                           
  4390                           ;LCD_8bits.c: 86:             break;
  4391  17B0  0008               	return
  4392  17B1                     l2806:	
  4393                           
  4394                           ;LCD_8bits.c: 88:             corrimiento = 0x80 + 0x40 + columna;
  4395  17B1  0875               	movf	LCD_Set_Cursor@columna,w
  4396  17B2  3EC0               	addlw	192
  4397  17B3  00F6               	movwf	??_LCD_Set_Cursor
  4398  17B4  0876               	movf	??_LCD_Set_Cursor,w
  4399  17B5  00F9               	movwf	LCD_Set_Cursor@corrimiento
  4400                           
  4401                           ;LCD_8bits.c: 89:             LCD_Cmd(corrimiento);
  4402  17B6  0879               	movf	LCD_Set_Cursor@corrimiento,w
  4403  17B7  160A  118A  27D1   	fcall	_LCD_Cmd
  4404                           
  4405                           ;LCD_8bits.c: 90:             break;
  4406  17BA  0008               	return
  4407  17BB                     l2810:	
  4408                           
  4409                           ;LCD_8bits.c: 92:             LCD_Cmd(0x80);
  4410  17BB  3080               	movlw	128
  4411  17BC  160A  118A  27D1   	fcall	_LCD_Cmd
  4412                           
  4413                           ;LCD_8bits.c: 93:     }
  4414  17BF  0008               	return
  4415  17C0                     l2812:	
  4416  17C0  0878               	movf	LCD_Set_Cursor@linea,w
  4417  17C1  00F6               	movwf	??_LCD_Set_Cursor
  4418  17C2  01F7               	clrf	??_LCD_Set_Cursor+1
  4419                           
  4420                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4421                           ; Switch size 1, requested type "simple"
  4422                           ; Number of cases is 1, Range of values is 0 to 0
  4423                           ; switch strategies available:
  4424                           ; Name         Instructions Cycles
  4425                           ; simple_byte            4     3 (average)
  4426                           ; direct_byte           11     8 (fixed)
  4427                           ; jumptable            260     6 (fixed)
  4428                           ;	Chosen strategy is simple_byte
  4429  17C3  0877               	movf	??_LCD_Set_Cursor+1,w
  4430  17C4  3A00               	xorlw	0	; case 0
  4431  17C5  1903               	skipnz
  4432  17C6  2FC8               	goto	l5156
  4433  17C7  2FBB               	goto	l2810
  4434  17C8                     l5156:	
  4435                           
  4436                           ; Switch size 1, requested type "simple"
  4437                           ; Number of cases is 2, Range of values is 1 to 2
  4438                           ; switch strategies available:
  4439                           ; Name         Instructions Cycles
  4440                           ; simple_byte            7     4 (average)
  4441                           ; direct_byte           17    11 (fixed)
  4442                           ; jumptable            263     9 (fixed)
  4443                           ;	Chosen strategy is simple_byte
  4444  17C8  0876               	movf	??_LCD_Set_Cursor,w
  4445  17C9  3A01               	xorlw	1	; case 1
  4446  17CA  1903               	skipnz
  4447  17CB  2FA7               	goto	l2802
  4448  17CC  3A03               	xorlw	3	; case 2
  4449  17CD  1903               	skipnz
  4450  17CE  2FB1               	goto	l2806
  4451  17CF  2FBB               	goto	l2810
  4452  17D0  0008               	return
  4453  17D1                     __end_of_LCD_Set_Cursor:	
  4454                           
  4455                           	psect	text11
  4456  08BE                     __ptext11:	
  4457 ;; *************** function _inclinacion_ *****************
  4458 ;; Defined at:
  4459 ;;		line 268 in file "main_Master.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;		None
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;		None
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  1    wreg      void 
  4466 ;; Registers used:
  4467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4473 ;;      Params:         0       0       0       0       0
  4474 ;;      Locals:         0       0       0       0       0
  4475 ;;      Temps:          2       0       0       0       0
  4476 ;;      Totals:         2       0       0       0       0
  4477 ;;Total ram usage:        2 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; Hardware stack levels required when called:    2
  4480 ;; This function calls:
  4481 ;;		_init_ADC
  4482 ;; This function is called by:
  4483 ;;		_main
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           
  4488                           ;psect for function _inclinacion_
  4489  08BE                     _inclinacion_:	
  4490                           
  4491                           ;main_Master.c: 269:     init_ADC(0x07);
  4492                           
  4493                           ;incstack = 0
  4494                           ; Regs used in _inclinacion_: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4495  08BE  3007               	movlw	7
  4496  08BF  120A  158A  2317  120A  158A  	fcall	_init_ADC
  4497                           
  4498                           ;main_Master.c: 270:     PIR1bits.ADIF = 0;
  4499  08C4  1283               	bcf	3,5	;RP0=0, select bank0
  4500  08C5  1303               	bcf	3,6	;RP1=0, select bank0
  4501  08C6  130C               	bcf	12,6	;volatile
  4502                           
  4503                           ;main_Master.c: 271:     inclinacion = ADRESH;
  4504  08C7  081E               	movf	30,w	;volatile
  4505  08C8  00F5               	movwf	??_inclinacion_
  4506  08C9  0875               	movf	??_inclinacion_,w
  4507  08CA  00D8               	movwf	_inclinacion
  4508                           
  4509                           ;main_Master.c: 272:     _delay((unsigned long)((10)*(1000000/4000.0)));
  4510  08CB  3004               	movlw	4
  4511  08CC  00F6               	movwf	??_inclinacion_+1
  4512  08CD  303D               	movlw	61
  4513  08CE  00F5               	movwf	??_inclinacion_
  4514  08CF                     u2197:	
  4515  08CF  0BF5               	decfsz	??_inclinacion_,f
  4516  08D0  28CF               	goto	u2197
  4517  08D1  0BF6               	decfsz	??_inclinacion_+1,f
  4518  08D2  28CF               	goto	u2197
  4519  08D3  28D4               	nop2
  4520  08D4  0008               	return
  4521  08D5                     __end_of_inclinacion_:	
  4522                           
  4523                           	psect	text12
  4524  16D1                     __ptext12:	
  4525 ;; *************** function _get_temperatura_obj *****************
  4526 ;; Defined at:
  4527 ;;		line 261 in file "main_Master.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;		None
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;		None
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      void 
  4534 ;; Registers used:
  4535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4541 ;;      Params:         0       0       0       0       0
  4542 ;;      Locals:         0       0       0       0       0
  4543 ;;      Temps:          2       0       0       0       0
  4544 ;;      Totals:         2       0       0       0       0
  4545 ;;Total ram usage:        2 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; Hardware stack levels required when called:    2
  4548 ;; This function calls:
  4549 ;;		_init_ADC
  4550 ;; This function is called by:
  4551 ;;		_main
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           
  4556                           ;psect for function _get_temperatura_obj
  4557  16D1                     _get_temperatura_obj:	
  4558                           
  4559                           ;main_Master.c: 262:     init_ADC(0x06);
  4560                           
  4561                           ;incstack = 0
  4562                           ; Regs used in _get_temperatura_obj: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4563  16D1  3006               	movlw	6
  4564  16D2  120A  158A  2317  160A  118A  	fcall	_init_ADC
  4565                           
  4566                           ;main_Master.c: 263:     PIR1bits.ADIF = 0;
  4567  16D7  1283               	bcf	3,5	;RP0=0, select bank0
  4568  16D8  1303               	bcf	3,6	;RP1=0, select bank0
  4569  16D9  130C               	bcf	12,6	;volatile
  4570                           
  4571                           ;main_Master.c: 264:     temperatura_obj = ADRESH;
  4572  16DA  081E               	movf	30,w	;volatile
  4573  16DB  00F5               	movwf	??_get_temperatura_obj
  4574  16DC  0875               	movf	??_get_temperatura_obj,w
  4575  16DD  00D1               	movwf	_temperatura_obj
  4576                           
  4577                           ;main_Master.c: 265:     _delay((unsigned long)((10)*(1000000/4000.0)));
  4578  16DE  3004               	movlw	4
  4579  16DF  00F6               	movwf	??_get_temperatura_obj+1
  4580  16E0  303D               	movlw	61
  4581  16E1  00F5               	movwf	??_get_temperatura_obj
  4582  16E2                     u2207:	
  4583  16E2  0BF5               	decfsz	??_get_temperatura_obj,f
  4584  16E3  2EE2               	goto	u2207
  4585  16E4  0BF6               	decfsz	??_get_temperatura_obj+1,f
  4586  16E5  2EE2               	goto	u2207
  4587  16E6  2EE7               	nop2
  4588  16E7  0008               	return
  4589  16E8                     __end_of_get_temperatura_obj:	
  4590                           
  4591                           	psect	text13
  4592  16BA                     __ptext13:	
  4593 ;; *************** function _get_temperatura *****************
  4594 ;; Defined at:
  4595 ;;		line 254 in file "main_Master.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;		None
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;		None
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  1    wreg      void 
  4602 ;; Registers used:
  4603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4609 ;;      Params:         0       0       0       0       0
  4610 ;;      Locals:         0       0       0       0       0
  4611 ;;      Temps:          2       0       0       0       0
  4612 ;;      Totals:         2       0       0       0       0
  4613 ;;Total ram usage:        2 bytes
  4614 ;; Hardware stack levels used:    1
  4615 ;; Hardware stack levels required when called:    2
  4616 ;; This function calls:
  4617 ;;		_init_ADC
  4618 ;; This function is called by:
  4619 ;;		_main
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           
  4624                           ;psect for function _get_temperatura
  4625  16BA                     _get_temperatura:	
  4626                           
  4627                           ;main_Master.c: 255:     init_ADC(0x05);
  4628                           
  4629                           ;incstack = 0
  4630                           ; Regs used in _get_temperatura: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4631  16BA  3005               	movlw	5
  4632  16BB  120A  158A  2317  160A  118A  	fcall	_init_ADC
  4633                           
  4634                           ;main_Master.c: 256:     PIR1bits.ADIF = 0;
  4635  16C0  1283               	bcf	3,5	;RP0=0, select bank0
  4636  16C1  1303               	bcf	3,6	;RP1=0, select bank0
  4637  16C2  130C               	bcf	12,6	;volatile
  4638                           
  4639                           ;main_Master.c: 257:     temperatura = ADRESH;
  4640  16C3  081E               	movf	30,w	;volatile
  4641  16C4  00F5               	movwf	??_get_temperatura
  4642  16C5  0875               	movf	??_get_temperatura,w
  4643  16C6  00D2               	movwf	_temperatura
  4644                           
  4645                           ;main_Master.c: 258:     _delay((unsigned long)((10)*(1000000/4000.0)));
  4646  16C7  3004               	movlw	4
  4647  16C8  00F6               	movwf	??_get_temperatura+1
  4648  16C9  303D               	movlw	61
  4649  16CA  00F5               	movwf	??_get_temperatura
  4650  16CB                     u2217:	
  4651  16CB  0BF5               	decfsz	??_get_temperatura,f
  4652  16CC  2ECB               	goto	u2217
  4653  16CD  0BF6               	decfsz	??_get_temperatura+1,f
  4654  16CE  2ECB               	goto	u2217
  4655  16CF  2ED0               	nop2
  4656  16D0  0008               	return
  4657  16D1                     __end_of_get_temperatura:	
  4658                           
  4659                           	psect	text14
  4660  0B17                     __ptext14:	
  4661 ;; *************** function _init_ADC *****************
  4662 ;; Defined at:
  4663 ;;		line 275 in file "main_Master.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;  channel         1    wreg     unsigned char 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;  channel         1    4[COMMON] unsigned char 
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  1    wreg      void 
  4670 ;; Registers used:
  4671 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4677 ;;      Params:         0       0       0       0       0
  4678 ;;      Locals:         1       0       0       0       0
  4679 ;;      Temps:          2       0       0       0       0
  4680 ;;      Totals:         3       0       0       0       0
  4681 ;;Total ram usage:        3 bytes
  4682 ;; Hardware stack levels used:    1
  4683 ;; Hardware stack levels required when called:    1
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_get_temperatura
  4688 ;;		_get_temperatura_obj
  4689 ;;		_inclinacion_
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           
  4694                           ;psect for function _init_ADC
  4695  0B17                     _init_ADC:	
  4696                           
  4697                           ;incstack = 0
  4698                           ; Regs used in _init_ADC: [wreg-fsr0h+status,2+status,0]
  4699                           ;init_ADC@channel stored from wreg
  4700  0B17  00F4               	movwf	init_ADC@channel
  4701                           
  4702                           ;main_Master.c: 276:     ADCON0bits.ADCS1 = 0;
  4703  0B18  1283               	bcf	3,5	;RP0=0, select bank0
  4704  0B19  1303               	bcf	3,6	;RP1=0, select bank0
  4705  0B1A  139F               	bcf	31,7	;volatile
  4706                           
  4707                           ;main_Master.c: 277:     ADCON0bits.ADCS0 = 1;
  4708  0B1B  171F               	bsf	31,6	;volatile
  4709                           
  4710                           ;main_Master.c: 280:     switch(channel){
  4711  0B1C  2B4C               	goto	l3064
  4712  0B1D                     l185:	
  4713                           ;main_Master.c: 281:         case 0:
  4714                           
  4715  0B1D  2B47               	goto	l202
  4716  0B1E                     l187:	
  4717                           ;main_Master.c: 287:         case 1:
  4718                           
  4719                           ;main_Master.c: 286:             break;
  4720                           
  4721                           ;main_Master.c: 285:             ADCON0bits.CHS0 = 0;
  4722                           
  4723                           ;main_Master.c: 284:             ADCON0bits.CHS1 = 0;
  4724                           
  4725                           ;main_Master.c: 283:             ADCON0bits.CHS2 = 0;
  4726                           
  4727                           ;main_Master.c: 282:             ADCON0bits.CHS3 = 0;
  4728                           
  4729                           
  4730                           ;main_Master.c: 288:             ADCON0bits.CHS3 = 0;
  4731  0B1E  129F               	bcf	31,5	;volatile
  4732  0B1F  2B2F               	goto	L43
  4733  0B20                     l188:	
  4734                           ;main_Master.c: 293:         case 2:
  4735                           
  4736                           ;main_Master.c: 292:             break;
  4737                           
  4738                           ;main_Master.c: 291:             ADCON0bits.CHS0 = 1;
  4739                           
  4740                           ;main_Master.c: 290:             ADCON0bits.CHS1 = 0;
  4741                           
  4742                           ;main_Master.c: 289:             ADCON0bits.CHS2 = 0;
  4743                           
  4744                           
  4745                           ;main_Master.c: 294:             ADCON0bits.CHS3 = 0;
  4746  0B20  129F               	bcf	31,5	;volatile
  4747  0B21  2B32               	goto	L44
  4748  0B22                     l189:	
  4749                           ;main_Master.c: 299:         case 3:
  4750                           
  4751                           ;main_Master.c: 298:             break;
  4752                           
  4753                           ;main_Master.c: 297:             ADCON0bits.CHS0 = 0;
  4754                           
  4755                           ;main_Master.c: 296:             ADCON0bits.CHS1 = 1;
  4756                           
  4757                           ;main_Master.c: 295:             ADCON0bits.CHS2 = 0;
  4758                           
  4759                           
  4760                           ;main_Master.c: 300:             ADCON0bits.CHS3 = 0;
  4761  0B22  129F               	bcf	31,5	;volatile
  4762  0B23  2B35               	goto	L39
  4763  0B24                     l190:	
  4764                           ;main_Master.c: 305:         case 4:
  4765                           
  4766                           ;main_Master.c: 304:             break;
  4767                           
  4768                           ;main_Master.c: 303:             ADCON0bits.CHS0 = 1;
  4769                           
  4770                           ;main_Master.c: 302:             ADCON0bits.CHS1 = 1;
  4771                           
  4772                           ;main_Master.c: 301:             ADCON0bits.CHS2 = 0;
  4773                           
  4774                           
  4775                           ;main_Master.c: 306:             ADCON0bits.CHS3 = 0;
  4776  0B24  129F               	bcf	31,5	;volatile
  4777  0B25  2B38               	goto	L40
  4778  0B26                     l191:	
  4779                           ;main_Master.c: 311:         case 5:
  4780                           
  4781                           ;main_Master.c: 310:             break;
  4782                           
  4783                           ;main_Master.c: 309:             ADCON0bits.CHS0 = 0;
  4784                           
  4785                           ;main_Master.c: 308:             ADCON0bits.CHS1 = 0;
  4786                           
  4787                           ;main_Master.c: 307:             ADCON0bits.CHS2 = 1;
  4788                           
  4789                           
  4790                           ;main_Master.c: 312:             ADCON0bits.CHS3 = 0;
  4791  0B26  129F               	bcf	31,5	;volatile
  4792  0B27  2B3B               	goto	L41
  4793  0B28                     l192:	
  4794                           ;main_Master.c: 317:         case 6:
  4795                           
  4796                           ;main_Master.c: 316:             break;
  4797                           
  4798                           ;main_Master.c: 315:             ADCON0bits.CHS0 = 1;
  4799                           
  4800                           ;main_Master.c: 314:             ADCON0bits.CHS1 = 0;
  4801                           
  4802                           ;main_Master.c: 313:             ADCON0bits.CHS2 = 1;
  4803                           
  4804                           
  4805                           ;main_Master.c: 318:             ADCON0bits.CHS3 = 0;
  4806  0B28  129F               	bcf	31,5	;volatile
  4807  0B29  2B3F               	goto	L42
  4808  0B2A                     l193:	
  4809                           ;main_Master.c: 323:         case 7:
  4810                           
  4811                           ;main_Master.c: 322:             break;
  4812                           
  4813                           ;main_Master.c: 321:             ADCON0bits.CHS0 = 0;
  4814                           
  4815                           ;main_Master.c: 320:             ADCON0bits.CHS1 = 1;
  4816                           
  4817                           ;main_Master.c: 319:             ADCON0bits.CHS2 = 1;
  4818                           
  4819                           
  4820                           ;main_Master.c: 324:             ADCON0bits.CHS3 = 0;
  4821  0B2A  129F               	bcf	31,5	;volatile
  4822  0B2B  2B43               	goto	L29
  4823  0B2C                     l194:	
  4824                           ;main_Master.c: 329:         case 8:
  4825                           
  4826                           ;main_Master.c: 328:             break;
  4827                           
  4828                           ;main_Master.c: 327:             ADCON0bits.CHS0 = 1;
  4829                           
  4830                           ;main_Master.c: 326:             ADCON0bits.CHS1 = 1;
  4831                           
  4832                           ;main_Master.c: 325:             ADCON0bits.CHS2 = 1;
  4833                           
  4834                           
  4835                           ;main_Master.c: 330:             ADCON0bits.CHS3 = 1;
  4836  0B2C  169F               	bsf	31,5	;volatile
  4837  0B2D  2B48               	goto	L30
  4838  0B2E                     l195:	
  4839                           ;main_Master.c: 335:         case 9:
  4840                           
  4841                           ;main_Master.c: 334:             break;
  4842                           
  4843                           ;main_Master.c: 333:             ADCON0bits.CHS0 = 0;
  4844                           
  4845                           ;main_Master.c: 332:             ADCON0bits.CHS1 = 0;
  4846                           
  4847                           ;main_Master.c: 331:             ADCON0bits.CHS2 = 0;
  4848                           
  4849                           
  4850                           ;main_Master.c: 336:             ADCON0bits.CHS3 = 1;
  4851  0B2E  169F               	bsf	31,5	;volatile
  4852  0B2F                     L43:	
  4853                           
  4854                           ;main_Master.c: 337:             ADCON0bits.CHS2 = 0;
  4855  0B2F  121F               	bcf	31,4	;volatile
  4856  0B30  2B3C               	goto	L37
  4857  0B31                     l196:	
  4858                           ;main_Master.c: 341:         case 10:
  4859                           
  4860                           ;main_Master.c: 340:             break;
  4861                           
  4862                           ;main_Master.c: 339:             ADCON0bits.CHS0 = 1;
  4863                           
  4864                           ;main_Master.c: 338:             ADCON0bits.CHS1 = 0;
  4865                           
  4866                           
  4867                           ;main_Master.c: 342:             ADCON0bits.CHS3 = 1;
  4868  0B31  169F               	bsf	31,5	;volatile
  4869  0B32                     L44:	
  4870                           
  4871                           ;main_Master.c: 343:             ADCON0bits.CHS2 = 0;
  4872  0B32  121F               	bcf	31,4	;volatile
  4873  0B33  2B40               	goto	L38
  4874  0B34                     l197:	
  4875                           ;main_Master.c: 347:         case 11:
  4876                           
  4877                           ;main_Master.c: 346:             break;
  4878                           
  4879                           ;main_Master.c: 345:             ADCON0bits.CHS0 = 0;
  4880                           
  4881                           ;main_Master.c: 344:             ADCON0bits.CHS1 = 1;
  4882                           
  4883                           
  4884                           ;main_Master.c: 348:             ADCON0bits.CHS3 = 1;
  4885  0B34  169F               	bsf	31,5	;volatile
  4886  0B35                     L39:	
  4887                           
  4888                           ;main_Master.c: 349:             ADCON0bits.CHS2 = 0;
  4889  0B35  121F               	bcf	31,4	;volatile
  4890  0B36  2B44               	goto	L31
  4891  0B37                     l198:	
  4892                           ;main_Master.c: 353:         case 12:
  4893                           
  4894                           ;main_Master.c: 352:             break;
  4895                           
  4896                           ;main_Master.c: 351:             ADCON0bits.CHS0 = 1;
  4897                           
  4898                           ;main_Master.c: 350:             ADCON0bits.CHS1 = 1;
  4899                           
  4900                           
  4901                           ;main_Master.c: 354:             ADCON0bits.CHS3 = 1;
  4902  0B37  169F               	bsf	31,5	;volatile
  4903  0B38                     L40:	
  4904                           
  4905                           ;main_Master.c: 355:             ADCON0bits.CHS2 = 1;
  4906  0B38  161F               	bsf	31,4	;volatile
  4907  0B39  2B49               	goto	L32
  4908  0B3A                     l199:	
  4909                           ;main_Master.c: 359:         case 13:
  4910                           
  4911                           ;main_Master.c: 358:             break;
  4912                           
  4913                           ;main_Master.c: 357:             ADCON0bits.CHS0 = 0;
  4914                           
  4915                           ;main_Master.c: 356:             ADCON0bits.CHS1 = 0;
  4916                           
  4917                           
  4918                           ;main_Master.c: 360:             ADCON0bits.CHS3 = 1;
  4919  0B3A  169F               	bsf	31,5	;volatile
  4920  0B3B                     L41:	
  4921                           
  4922                           ;main_Master.c: 361:             ADCON0bits.CHS2 = 1;
  4923  0B3B  161F               	bsf	31,4	;volatile
  4924  0B3C                     L37:	
  4925                           
  4926                           ;main_Master.c: 362:             ADCON0bits.CHS1 = 0;
  4927  0B3C  119F               	bcf	31,3	;volatile
  4928  0B3D  2B45               	goto	L27
  4929  0B3E                     l200:	
  4930                           ;main_Master.c: 365:         case 14:
  4931                           
  4932                           ;main_Master.c: 364:             break;
  4933                           
  4934                           ;main_Master.c: 363:             ADCON0bits.CHS0 = 1;
  4935                           
  4936                           
  4937                           ;main_Master.c: 366:             ADCON0bits.CHS3 = 1;
  4938  0B3E  169F               	bsf	31,5	;volatile
  4939  0B3F                     L42:	
  4940                           
  4941                           ;main_Master.c: 367:             ADCON0bits.CHS2 = 1;
  4942  0B3F  161F               	bsf	31,4	;volatile
  4943  0B40                     L38:	
  4944                           
  4945                           ;main_Master.c: 368:             ADCON0bits.CHS1 = 1;
  4946  0B40  159F               	bsf	31,3	;volatile
  4947  0B41  2B4A               	goto	L28
  4948  0B42                     l201:	
  4949                           ;main_Master.c: 371:         case 15:
  4950                           
  4951                           ;main_Master.c: 370:             break;
  4952                           
  4953                           ;main_Master.c: 369:             ADCON0bits.CHS0 = 0;
  4954                           
  4955                           
  4956                           ;main_Master.c: 372:             ADCON0bits.CHS3 = 1;
  4957  0B42  169F               	bsf	31,5	;volatile
  4958  0B43                     L29:	
  4959                           
  4960                           ;main_Master.c: 373:             ADCON0bits.CHS2 = 1;
  4961  0B43  161F               	bsf	31,4	;volatile
  4962  0B44                     L31:	
  4963                           
  4964                           ;main_Master.c: 374:             ADCON0bits.CHS1 = 1;
  4965  0B44  159F               	bsf	31,3	;volatile
  4966  0B45                     L27:	
  4967                           
  4968                           ;main_Master.c: 375:             ADCON0bits.CHS0 = 1;
  4969  0B45  151F               	bsf	31,2	;volatile
  4970                           
  4971                           ;main_Master.c: 376:             break;
  4972  0B46  2B86               	goto	l186
  4973  0B47                     l202:	
  4974                           ;main_Master.c: 377:         default:
  4975                           
  4976                           
  4977                           ;main_Master.c: 378:             ADCON0bits.CHS3 = 0;
  4978  0B47  129F               	bcf	31,5	;volatile
  4979  0B48                     L30:	
  4980                           
  4981                           ;main_Master.c: 379:             ADCON0bits.CHS2 = 0;
  4982  0B48  121F               	bcf	31,4	;volatile
  4983  0B49                     L32:	
  4984                           
  4985                           ;main_Master.c: 380:             ADCON0bits.CHS1 = 0;
  4986  0B49  119F               	bcf	31,3	;volatile
  4987  0B4A                     L28:	
  4988                           
  4989                           ;main_Master.c: 381:             ADCON0bits.CHS0 = 0;
  4990  0B4A  111F               	bcf	31,2	;volatile
  4991                           
  4992                           ;main_Master.c: 382:             break;
  4993  0B4B  2B86               	goto	l186
  4994  0B4C                     l3064:	
  4995  0B4C  0874               	movf	init_ADC@channel,w
  4996  0B4D  00F2               	movwf	??_init_ADC
  4997  0B4E  01F3               	clrf	??_init_ADC+1
  4998                           
  4999                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5000                           ; Switch size 1, requested type "simple"
  5001                           ; Number of cases is 1, Range of values is 0 to 0
  5002                           ; switch strategies available:
  5003                           ; Name         Instructions Cycles
  5004                           ; simple_byte            4     3 (average)
  5005                           ; direct_byte           11     8 (fixed)
  5006                           ; jumptable            260     6 (fixed)
  5007                           ;	Chosen strategy is simple_byte
  5008  0B4F  0873               	movf	??_init_ADC+1,w
  5009  0B50  3A00               	xorlw	0	; case 0
  5010  0B51  1903               	skipnz
  5011  0B52  2B54               	goto	l5158
  5012  0B53  2B47               	goto	l202
  5013  0B54                     l5158:	
  5014                           
  5015                           ; Switch size 1, requested type "simple"
  5016                           ; Number of cases is 16, Range of values is 0 to 15
  5017                           ; switch strategies available:
  5018                           ; Name         Instructions Cycles
  5019                           ; simple_byte           49    25 (average)
  5020                           ; direct_byte           56     8 (fixed)
  5021                           ; jumptable            260     6 (fixed)
  5022                           ;	Chosen strategy is simple_byte
  5023  0B54  0872               	movf	??_init_ADC,w
  5024  0B55  3A00               	xorlw	0	; case 0
  5025  0B56  1903               	skipnz
  5026  0B57  2B1D               	goto	l185
  5027  0B58  3A01               	xorlw	1	; case 1
  5028  0B59  1903               	skipnz
  5029  0B5A  2B1E               	goto	l187
  5030  0B5B  3A03               	xorlw	3	; case 2
  5031  0B5C  1903               	skipnz
  5032  0B5D  2B20               	goto	l188
  5033  0B5E  3A01               	xorlw	1	; case 3
  5034  0B5F  1903               	skipnz
  5035  0B60  2B22               	goto	l189
  5036  0B61  3A07               	xorlw	7	; case 4
  5037  0B62  1903               	skipnz
  5038  0B63  2B24               	goto	l190
  5039  0B64  3A01               	xorlw	1	; case 5
  5040  0B65  1903               	skipnz
  5041  0B66  2B26               	goto	l191
  5042  0B67  3A03               	xorlw	3	; case 6
  5043  0B68  1903               	skipnz
  5044  0B69  2B28               	goto	l192
  5045  0B6A  3A01               	xorlw	1	; case 7
  5046  0B6B  1903               	skipnz
  5047  0B6C  2B2A               	goto	l193
  5048  0B6D  3A0F               	xorlw	15	; case 8
  5049  0B6E  1903               	skipnz
  5050  0B6F  2B2C               	goto	l194
  5051  0B70  3A01               	xorlw	1	; case 9
  5052  0B71  1903               	skipnz
  5053  0B72  2B2E               	goto	l195
  5054  0B73  3A03               	xorlw	3	; case 10
  5055  0B74  1903               	skipnz
  5056  0B75  2B31               	goto	l196
  5057  0B76  3A01               	xorlw	1	; case 11
  5058  0B77  1903               	skipnz
  5059  0B78  2B34               	goto	l197
  5060  0B79  3A07               	xorlw	7	; case 12
  5061  0B7A  1903               	skipnz
  5062  0B7B  2B37               	goto	l198
  5063  0B7C  3A01               	xorlw	1	; case 13
  5064  0B7D  1903               	skipnz
  5065  0B7E  2B3A               	goto	l199
  5066  0B7F  3A03               	xorlw	3	; case 14
  5067  0B80  1903               	skipnz
  5068  0B81  2B3E               	goto	l200
  5069  0B82  3A01               	xorlw	1	; case 15
  5070  0B83  1903               	skipnz
  5071  0B84  2B42               	goto	l201
  5072  0B85  2B47               	goto	l202
  5073  0B86                     l186:	
  5074                           
  5075                           ;main_Master.c: 385:     ADCON1bits.ADFM = 0;
  5076  0B86  1683               	bsf	3,5	;RP0=1, select bank1
  5077  0B87  1303               	bcf	3,6	;RP1=0, select bank1
  5078  0B88  139F               	bcf	31,7	;volatile
  5079                           
  5080                           ;main_Master.c: 386:     ADCON1bits.VCFG1 = 0;
  5081  0B89  129F               	bcf	31,5	;volatile
  5082                           
  5083                           ;main_Master.c: 387:     ADCON1bits.VCFG0 = 0;
  5084  0B8A  121F               	bcf	31,4	;volatile
  5085                           
  5086                           ;main_Master.c: 388:     ADCON0bits.ADON = 1;
  5087  0B8B  1283               	bcf	3,5	;RP0=0, select bank0
  5088  0B8C  1303               	bcf	3,6	;RP1=0, select bank0
  5089  0B8D  141F               	bsf	31,0	;volatile
  5090                           
  5091                           ;main_Master.c: 390:     PIR1bits.ADIF = 0;
  5092  0B8E  130C               	bcf	12,6	;volatile
  5093                           
  5094                           ;main_Master.c: 392:     ADCON0bits.GO = 1;
  5095  0B8F  149F               	bsf	31,1	;volatile
  5096  0B90                     l203:	
  5097                           ;main_Master.c: 394:     }
  5098                           
  5099                           
  5100                           ;main_Master.c: 393:     while(ADCON0bits.GO == 1){
  5101  0B90  1C9F               	btfss	31,1	;volatile
  5102  0B91  0008               	return
  5103  0B92  2B90               	goto	l203
  5104  0B93                     __end_of_init_ADC:	
  5105                           
  5106                           	psect	text15
  5107  1709                     __ptext15:	
  5108 ;; *************** function _get_hum *****************
  5109 ;; Defined at:
  5110 ;;		line 247 in file "main_Master.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;		None
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;		None
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  1    wreg      void 
  5117 ;; Registers used:
  5118 ;;		wreg, status,2, status,0, pclath, cstack
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5124 ;;      Params:         0       0       0       0       0
  5125 ;;      Locals:         0       0       0       0       0
  5126 ;;      Temps:          0       1       0       0       0
  5127 ;;      Totals:         0       1       0       0       0
  5128 ;;Total ram usage:        1 bytes
  5129 ;; Hardware stack levels used:    1
  5130 ;; Hardware stack levels required when called:    3
  5131 ;; This function calls:
  5132 ;;		_I2C_Master_Read
  5133 ;;		_I2C_Master_Start
  5134 ;;		_I2C_Master_Stop
  5135 ;;		_I2C_Master_Write
  5136 ;; This function is called by:
  5137 ;;		_main
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           
  5142                           ;psect for function _get_hum
  5143  1709                     _get_hum:	
  5144                           
  5145                           ;main_Master.c: 248:     I2C_Master_Start();
  5146                           
  5147                           ;incstack = 0
  5148                           ; Regs used in _get_hum: [wreg+status,2+status,0+pclath+cstack]
  5149  1709  160A  118A  2608  160A  118A  	fcall	_I2C_Master_Start
  5150                           
  5151                           ;main_Master.c: 249:     I2C_Master_Write(0x21);
  5152  170E  3021               	movlw	33
  5153  170F  1283               	bcf	3,5	;RP0=0, select bank0
  5154  1710  1303               	bcf	3,6	;RP1=0, select bank0
  5155  1711  00AD               	movwf	I2C_Master_Write@d
  5156  1712  3000               	movlw	0
  5157  1713  00AE               	movwf	I2C_Master_Write@d+1
  5158  1714  160A  118A  2616  160A  118A  	fcall	_I2C_Master_Write
  5159                           
  5160                           ;main_Master.c: 250:     humedad = I2C_Master_Read(0);
  5161  1719  3000               	movlw	0
  5162  171A  00F2               	movwf	I2C_Master_Read@a
  5163  171B  00F3               	movwf	I2C_Master_Read@a+1
  5164  171C  160A  118A  2779  160A  118A  	fcall	_I2C_Master_Read
  5165  1721  0872               	movf	?_I2C_Master_Read,w
  5166  1722  1283               	bcf	3,5	;RP0=0, select bank0
  5167  1723  1303               	bcf	3,6	;RP1=0, select bank0
  5168  1724  00AF               	movwf	??_get_hum
  5169  1725  082F               	movf	??_get_hum,w
  5170  1726  00D9               	movwf	_humedad
  5171                           
  5172                           ;main_Master.c: 251:     I2C_Master_Stop();
  5173  1727  160A  118A  260F   	fcall	_I2C_Master_Stop
  5174  172A  0008               	return
  5175  172B                     __end_of_get_hum:	
  5176                           
  5177                           	psect	text16
  5178  0B93                     __ptext16:	
  5179 ;; *************** function _get_dis *****************
  5180 ;; Defined at:
  5181 ;;		line 217 in file "main_Master.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;		None
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;		None
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      void 
  5188 ;; Registers used:
  5189 ;;		wreg, status,2, status,0, pclath, cstack
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5195 ;;      Params:         0       0       0       0       0
  5196 ;;      Locals:         0       0       0       0       0
  5197 ;;      Temps:          0       2       0       0       0
  5198 ;;      Totals:         0       2       0       0       0
  5199 ;;Total ram usage:        2 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; Hardware stack levels required when called:    3
  5202 ;; This function calls:
  5203 ;;		_I2C_Master_Read
  5204 ;;		_I2C_Master_Start
  5205 ;;		_I2C_Master_Stop
  5206 ;;		_I2C_Master_Write
  5207 ;; This function is called by:
  5208 ;;		_main
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           
  5213                           ;psect for function _get_dis
  5214  0B93                     _get_dis:	
  5215                           
  5216                           ;main_Master.c: 218:     I2C_Master_Start();
  5217                           
  5218                           ;incstack = 0
  5219                           ; Regs used in _get_dis: [wreg+status,2+status,0+pclath+cstack]
  5220  0B93  160A  118A  2608  120A  158A  	fcall	_I2C_Master_Start
  5221                           
  5222                           ;main_Master.c: 219:     I2C_Master_Write(0x31);
  5223  0B98  3031               	movlw	49
  5224  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  5225  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  5226  0B9B  00AD               	movwf	I2C_Master_Write@d
  5227  0B9C  3000               	movlw	0
  5228  0B9D  00AE               	movwf	I2C_Master_Write@d+1
  5229  0B9E  160A  118A  2616  120A  158A  	fcall	_I2C_Master_Write
  5230                           
  5231                           ;main_Master.c: 220:     d_frente = I2C_Master_Read(0);
  5232  0BA3  3000               	movlw	0
  5233  0BA4  00F2               	movwf	I2C_Master_Read@a
  5234  0BA5  00F3               	movwf	I2C_Master_Read@a+1
  5235  0BA6  160A  118A  2779  120A  158A  	fcall	_I2C_Master_Read
  5236  0BAB  0872               	movf	?_I2C_Master_Read,w
  5237  0BAC  1283               	bcf	3,5	;RP0=0, select bank0
  5238  0BAD  1303               	bcf	3,6	;RP1=0, select bank0
  5239  0BAE  00AF               	movwf	??_get_dis
  5240  0BAF  082F               	movf	??_get_dis,w
  5241  0BB0  00D7               	movwf	_d_frente
  5242                           
  5243                           ;main_Master.c: 221:     I2C_Master_Stop();
  5244  0BB1  160A  118A  260F  120A  158A  	fcall	_I2C_Master_Stop
  5245                           
  5246                           ;main_Master.c: 223:     _delay((unsigned long)((50)*(1000000/4000.0)));
  5247  0BB6  3011               	movlw	17
  5248  0BB7  1283               	bcf	3,5	;RP0=0, select bank0
  5249  0BB8  1303               	bcf	3,6	;RP1=0, select bank0
  5250  0BB9  00B0               	movwf	??_get_dis+1
  5251  0BBA  3039               	movlw	57
  5252  0BBB  00AF               	movwf	??_get_dis
  5253  0BBC                     u2227:	
  5254  0BBC  0BAF               	decfsz	??_get_dis,f
  5255  0BBD  2BBC               	goto	u2227
  5256  0BBE  0BB0               	decfsz	??_get_dis+1,f
  5257  0BBF  2BBC               	goto	u2227
  5258  0BC0  2BC1               	nop2
  5259                           
  5260                           ;main_Master.c: 225:     I2C_Master_Start();
  5261  0BC1  160A  118A  2608  120A  158A  	fcall	_I2C_Master_Start
  5262                           
  5263                           ;main_Master.c: 226:     I2C_Master_Write(0x31);
  5264  0BC6  3031               	movlw	49
  5265  0BC7  1283               	bcf	3,5	;RP0=0, select bank0
  5266  0BC8  1303               	bcf	3,6	;RP1=0, select bank0
  5267  0BC9  00AD               	movwf	I2C_Master_Write@d
  5268  0BCA  3000               	movlw	0
  5269  0BCB  00AE               	movwf	I2C_Master_Write@d+1
  5270  0BCC  160A  118A  2616  120A  158A  	fcall	_I2C_Master_Write
  5271                           
  5272                           ;main_Master.c: 227:     d_atras = I2C_Master_Read(0);
  5273  0BD1  3000               	movlw	0
  5274  0BD2  00F2               	movwf	I2C_Master_Read@a
  5275  0BD3  00F3               	movwf	I2C_Master_Read@a+1
  5276  0BD4  160A  118A  2779  120A  158A  	fcall	_I2C_Master_Read
  5277  0BD9  0872               	movf	?_I2C_Master_Read,w
  5278  0BDA  1283               	bcf	3,5	;RP0=0, select bank0
  5279  0BDB  1303               	bcf	3,6	;RP1=0, select bank0
  5280  0BDC  00AF               	movwf	??_get_dis
  5281  0BDD  082F               	movf	??_get_dis,w
  5282  0BDE  00D6               	movwf	_d_atras
  5283                           
  5284                           ;main_Master.c: 228:     I2C_Master_Stop();
  5285  0BDF  160A  118A  260F  120A  158A  	fcall	_I2C_Master_Stop
  5286                           
  5287                           ;main_Master.c: 230:     _delay((unsigned long)((50)*(1000000/4000.0)));
  5288  0BE4  3011               	movlw	17
  5289  0BE5  1283               	bcf	3,5	;RP0=0, select bank0
  5290  0BE6  1303               	bcf	3,6	;RP1=0, select bank0
  5291  0BE7  00B0               	movwf	??_get_dis+1
  5292  0BE8  3039               	movlw	57
  5293  0BE9  00AF               	movwf	??_get_dis
  5294  0BEA                     u2237:	
  5295  0BEA  0BAF               	decfsz	??_get_dis,f
  5296  0BEB  2BEA               	goto	u2237
  5297  0BEC  0BB0               	decfsz	??_get_dis+1,f
  5298  0BED  2BEA               	goto	u2237
  5299  0BEE  2BEF               	nop2
  5300                           
  5301                           ;main_Master.c: 231:     I2C_Master_Start();
  5302  0BEF  160A  118A  2608  120A  158A  	fcall	_I2C_Master_Start
  5303                           
  5304                           ;main_Master.c: 232:     I2C_Master_Write(0x31);
  5305  0BF4  3031               	movlw	49
  5306  0BF5  1283               	bcf	3,5	;RP0=0, select bank0
  5307  0BF6  1303               	bcf	3,6	;RP1=0, select bank0
  5308  0BF7  00AD               	movwf	I2C_Master_Write@d
  5309  0BF8  3000               	movlw	0
  5310  0BF9  00AE               	movwf	I2C_Master_Write@d+1
  5311  0BFA  160A  118A  2616  120A  158A  	fcall	_I2C_Master_Write
  5312                           
  5313                           ;main_Master.c: 233:     bajar = I2C_Master_Read(0);
  5314  0BFF  3000               	movlw	0
  5315  0C00  00F2               	movwf	I2C_Master_Read@a
  5316  0C01  00F3               	movwf	I2C_Master_Read@a+1
  5317  0C02  160A  118A  2779  120A  158A  	fcall	_I2C_Master_Read
  5318  0C07  0872               	movf	?_I2C_Master_Read,w
  5319  0C08  1283               	bcf	3,5	;RP0=0, select bank0
  5320  0C09  1303               	bcf	3,6	;RP1=0, select bank0
  5321  0C0A  00AF               	movwf	??_get_dis
  5322  0C0B  082F               	movf	??_get_dis,w
  5323  0C0C  00CE               	movwf	_bajar
  5324                           
  5325                           ;main_Master.c: 234:     I2C_Master_Stop();
  5326  0C0D  160A  118A  260F   	fcall	_I2C_Master_Stop
  5327  0C10  0008               	return
  5328  0C11                     __end_of_get_dis:	
  5329                           
  5330                           	psect	text17
  5331  0456                     __ptext17:	
  5332 ;; *************** function _get_Time *****************
  5333 ;; Defined at:
  5334 ;;		line 78 in file "RTC.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;		None
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;		None
  5339 ;; Return value:  Size  Location     Type
  5340 ;;                  1    wreg      void 
  5341 ;; Registers used:
  5342 ;;		wreg, status,2, status,0, pclath, cstack
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5348 ;;      Params:         0       0       0       0       0
  5349 ;;      Locals:         0       0       0       0       0
  5350 ;;      Temps:          0       1       0       0       0
  5351 ;;      Totals:         0       1       0       0       0
  5352 ;;Total ram usage:        1 bytes
  5353 ;; Hardware stack levels used:    1
  5354 ;; Hardware stack levels required when called:    3
  5355 ;; This function calls:
  5356 ;;		_BCD_a_DEC
  5357 ;;		_I2C_Master_Read
  5358 ;;		_I2C_Master_Start
  5359 ;;		_I2C_Master_Stop
  5360 ;;		_I2C_Master_Write
  5361 ;; This function is called by:
  5362 ;;		_main
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           
  5367                           ;psect for function _get_Time
  5368  0456                     _get_Time:	
  5369                           
  5370                           ;RTC.c: 79:     I2C_Master_Start();
  5371                           
  5372                           ;incstack = 0
  5373                           ; Regs used in _get_Time: [wreg+status,2+status,0+pclath+cstack]
  5374  0456  160A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  5375                           
  5376                           ;RTC.c: 80:     I2C_Master_Write(0xD0);
  5377  045B  30D0               	movlw	208
  5378  045C  1283               	bcf	3,5	;RP0=0, select bank0
  5379  045D  1303               	bcf	3,6	;RP1=0, select bank0
  5380  045E  00AD               	movwf	I2C_Master_Write@d
  5381  045F  3000               	movlw	0
  5382  0460  00AE               	movwf	I2C_Master_Write@d+1
  5383  0461  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  5384                           
  5385                           ;RTC.c: 81:     I2C_Master_Write(0);
  5386  0466  3000               	movlw	0
  5387  0467  1283               	bcf	3,5	;RP0=0, select bank0
  5388  0468  1303               	bcf	3,6	;RP1=0, select bank0
  5389  0469  00AD               	movwf	I2C_Master_Write@d
  5390  046A  00AE               	movwf	I2C_Master_Write@d+1
  5391  046B  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  5392                           
  5393                           ;RTC.c: 82:     I2C_Master_Stop();
  5394  0470  160A  118A  260F  120A  118A  	fcall	_I2C_Master_Stop
  5395                           
  5396                           ;RTC.c: 83:     I2C_Master_Start();
  5397  0475  160A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  5398                           
  5399                           ;RTC.c: 84:     I2C_Master_Write(0xD1);
  5400  047A  30D1               	movlw	209
  5401  047B  1283               	bcf	3,5	;RP0=0, select bank0
  5402  047C  1303               	bcf	3,6	;RP1=0, select bank0
  5403  047D  00AD               	movwf	I2C_Master_Write@d
  5404  047E  3000               	movlw	0
  5405  047F  00AE               	movwf	I2C_Master_Write@d+1
  5406  0480  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  5407                           
  5408                           ;RTC.c: 85:     seg = BCD_a_DEC(I2C_Master_Read(0));
  5409  0485  3000               	movlw	0
  5410  0486  00F2               	movwf	I2C_Master_Read@a
  5411  0487  00F3               	movwf	I2C_Master_Read@a+1
  5412  0488  160A  118A  2779  120A  118A  	fcall	_I2C_Master_Read
  5413  048D  0872               	movf	?_I2C_Master_Read,w
  5414  048E  160A  118A  26A4  120A  118A  	fcall	_BCD_a_DEC
  5415  0493  1283               	bcf	3,5	;RP0=0, select bank0
  5416  0494  1303               	bcf	3,6	;RP1=0, select bank0
  5417  0495  00AF               	movwf	??_get_Time
  5418  0496  082F               	movf	??_get_Time,w
  5419  0497  00D4               	movwf	_seg
  5420                           
  5421                           ;RTC.c: 86:     I2C_Master_Stop();
  5422  0498  160A  118A  260F  120A  118A  	fcall	_I2C_Master_Stop
  5423                           
  5424                           ;RTC.c: 88:     I2C_Master_Start();
  5425  049D  160A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  5426                           
  5427                           ;RTC.c: 89:     I2C_Master_Write(0xD0);
  5428  04A2  30D0               	movlw	208
  5429  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  5430  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  5431  04A5  00AD               	movwf	I2C_Master_Write@d
  5432  04A6  3000               	movlw	0
  5433  04A7  00AE               	movwf	I2C_Master_Write@d+1
  5434  04A8  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  5435                           
  5436                           ;RTC.c: 90:     I2C_Master_Write(1);
  5437  04AD  3001               	movlw	1
  5438  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  5439  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  5440  04B0  00AD               	movwf	I2C_Master_Write@d
  5441  04B1  3000               	movlw	0
  5442  04B2  00AE               	movwf	I2C_Master_Write@d+1
  5443  04B3  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  5444                           
  5445                           ;RTC.c: 91:     I2C_Master_Stop();
  5446  04B8  160A  118A  260F  120A  118A  	fcall	_I2C_Master_Stop
  5447                           
  5448                           ;RTC.c: 92:     I2C_Master_Start();
  5449  04BD  160A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  5450                           
  5451                           ;RTC.c: 93:     I2C_Master_Write(0xD1);
  5452  04C2  30D1               	movlw	209
  5453  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  5454  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  5455  04C5  00AD               	movwf	I2C_Master_Write@d
  5456  04C6  3000               	movlw	0
  5457  04C7  00AE               	movwf	I2C_Master_Write@d+1
  5458  04C8  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  5459                           
  5460                           ;RTC.c: 94:     min = BCD_a_DEC(I2C_Master_Read(0));
  5461  04CD  3000               	movlw	0
  5462  04CE  00F2               	movwf	I2C_Master_Read@a
  5463  04CF  00F3               	movwf	I2C_Master_Read@a+1
  5464  04D0  160A  118A  2779  120A  118A  	fcall	_I2C_Master_Read
  5465  04D5  0872               	movf	?_I2C_Master_Read,w
  5466  04D6  160A  118A  26A4  120A  118A  	fcall	_BCD_a_DEC
  5467  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  5468  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  5469  04DD  00AF               	movwf	??_get_Time
  5470  04DE  082F               	movf	??_get_Time,w
  5471  04DF  00DF               	movwf	_min
  5472                           
  5473                           ;RTC.c: 95:     I2C_Master_Stop();
  5474  04E0  160A  118A  260F  120A  118A  	fcall	_I2C_Master_Stop
  5475                           
  5476                           ;RTC.c: 97:     I2C_Master_Start();
  5477  04E5  160A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  5478                           
  5479                           ;RTC.c: 98:     I2C_Master_Write(0xD0);
  5480  04EA  30D0               	movlw	208
  5481  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  5482  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  5483  04ED  00AD               	movwf	I2C_Master_Write@d
  5484  04EE  3000               	movlw	0
  5485  04EF  00AE               	movwf	I2C_Master_Write@d+1
  5486  04F0  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  5487                           
  5488                           ;RTC.c: 99:     I2C_Master_Write(2);
  5489  04F5  3002               	movlw	2
  5490  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  5491  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  5492  04F8  00AD               	movwf	I2C_Master_Write@d
  5493  04F9  3000               	movlw	0
  5494  04FA  00AE               	movwf	I2C_Master_Write@d+1
  5495  04FB  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  5496                           
  5497                           ;RTC.c: 100:     I2C_Master_Stop();
  5498  0500  160A  118A  260F  120A  118A  	fcall	_I2C_Master_Stop
  5499                           
  5500                           ;RTC.c: 101:     I2C_Master_Start();
  5501  0505  160A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  5502                           
  5503                           ;RTC.c: 102:     I2C_Master_Write(0xD1);
  5504  050A  30D1               	movlw	209
  5505  050B  1283               	bcf	3,5	;RP0=0, select bank0
  5506  050C  1303               	bcf	3,6	;RP1=0, select bank0
  5507  050D  00AD               	movwf	I2C_Master_Write@d
  5508  050E  3000               	movlw	0
  5509  050F  00AE               	movwf	I2C_Master_Write@d+1
  5510  0510  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  5511                           
  5512                           ;RTC.c: 103:     hora = BCD_a_DEC(I2C_Master_Read(0));
  5513  0515  3000               	movlw	0
  5514  0516  00F2               	movwf	I2C_Master_Read@a
  5515  0517  00F3               	movwf	I2C_Master_Read@a+1
  5516  0518  160A  118A  2779  120A  118A  	fcall	_I2C_Master_Read
  5517  051D  0872               	movf	?_I2C_Master_Read,w
  5518  051E  160A  118A  26A4  120A  118A  	fcall	_BCD_a_DEC
  5519  0523  1283               	bcf	3,5	;RP0=0, select bank0
  5520  0524  1303               	bcf	3,6	;RP1=0, select bank0
  5521  0525  00AF               	movwf	??_get_Time
  5522  0526  082F               	movf	??_get_Time,w
  5523  0527  00DE               	movwf	_hora
  5524                           
  5525                           ;RTC.c: 104:     I2C_Master_Stop();
  5526  0528  160A  118A  260F  120A  118A  	fcall	_I2C_Master_Stop
  5527                           
  5528                           ;RTC.c: 107:     I2C_Master_Start();
  5529  052D  160A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  5530                           
  5531                           ;RTC.c: 108:     I2C_Master_Write(0xD0);
  5532  0532  30D0               	movlw	208
  5533  0533  1283               	bcf	3,5	;RP0=0, select bank0
  5534  0534  1303               	bcf	3,6	;RP1=0, select bank0
  5535  0535  00AD               	movwf	I2C_Master_Write@d
  5536  0536  3000               	movlw	0
  5537  0537  00AE               	movwf	I2C_Master_Write@d+1
  5538  0538  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  5539                           
  5540                           ;RTC.c: 109:     I2C_Master_Write(3);
  5541  053D  3003               	movlw	3
  5542  053E  1283               	bcf	3,5	;RP0=0, select bank0
  5543  053F  1303               	bcf	3,6	;RP1=0, select bank0
  5544  0540  00AD               	movwf	I2C_Master_Write@d
  5545  0541  3000               	movlw	0
  5546  0542  00AE               	movwf	I2C_Master_Write@d+1
  5547  0543  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  5548                           
  5549                           ;RTC.c: 110:     I2C_Master_Stop();
  5550  0548  160A  118A  260F  120A  118A  	fcall	_I2C_Master_Stop
  5551                           
  5552                           ;RTC.c: 111:     I2C_Master_Start();
  5553  054D  160A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  5554                           
  5555                           ;RTC.c: 112:     I2C_Master_Write(0xD1);
  5556  0552  30D1               	movlw	209
  5557  0553  1283               	bcf	3,5	;RP0=0, select bank0
  5558  0554  1303               	bcf	3,6	;RP1=0, select bank0
  5559  0555  00AD               	movwf	I2C_Master_Write@d
  5560  0556  3000               	movlw	0
  5561  0557  00AE               	movwf	I2C_Master_Write@d+1
  5562  0558  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  5563                           
  5564                           ;RTC.c: 113:     dia = BCD_a_DEC(I2C_Master_Read(0));
  5565  055D  3000               	movlw	0
  5566  055E  00F2               	movwf	I2C_Master_Read@a
  5567  055F  00F3               	movwf	I2C_Master_Read@a+1
  5568  0560  160A  118A  2779  120A  118A  	fcall	_I2C_Master_Read
  5569  0565  0872               	movf	?_I2C_Master_Read,w
  5570  0566  160A  118A  26A4  120A  118A  	fcall	_BCD_a_DEC
  5571  056B  1283               	bcf	3,5	;RP0=0, select bank0
  5572  056C  1303               	bcf	3,6	;RP1=0, select bank0
  5573  056D  00AF               	movwf	??_get_Time
  5574  056E  082F               	movf	??_get_Time,w
  5575  056F  00DD               	movwf	_dia
  5576                           
  5577                           ;RTC.c: 114:     I2C_Master_Stop();
  5578  0570  160A  118A  260F  120A  118A  	fcall	_I2C_Master_Stop
  5579                           
  5580                           ;RTC.c: 116:     I2C_Master_Start();
  5581  0575  160A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  5582                           
  5583                           ;RTC.c: 117:     I2C_Master_Write(0xD0);
  5584  057A  30D0               	movlw	208
  5585  057B  1283               	bcf	3,5	;RP0=0, select bank0
  5586  057C  1303               	bcf	3,6	;RP1=0, select bank0
  5587  057D  00AD               	movwf	I2C_Master_Write@d
  5588  057E  3000               	movlw	0
  5589  057F  00AE               	movwf	I2C_Master_Write@d+1
  5590  0580  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  5591                           
  5592                           ;RTC.c: 118:     I2C_Master_Write(4);
  5593  0585  3004               	movlw	4
  5594  0586  1283               	bcf	3,5	;RP0=0, select bank0
  5595  0587  1303               	bcf	3,6	;RP1=0, select bank0
  5596  0588  00AD               	movwf	I2C_Master_Write@d
  5597  0589  3000               	movlw	0
  5598  058A  00AE               	movwf	I2C_Master_Write@d+1
  5599  058B  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  5600                           
  5601                           ;RTC.c: 119:     I2C_Master_Stop();
  5602  0590  160A  118A  260F  120A  118A  	fcall	_I2C_Master_Stop
  5603                           
  5604                           ;RTC.c: 120:     I2C_Master_Start();
  5605  0595  160A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  5606                           
  5607                           ;RTC.c: 121:     I2C_Master_Write(0xD1);
  5608  059A  30D1               	movlw	209
  5609  059B  1283               	bcf	3,5	;RP0=0, select bank0
  5610  059C  1303               	bcf	3,6	;RP1=0, select bank0
  5611  059D  00AD               	movwf	I2C_Master_Write@d
  5612  059E  3000               	movlw	0
  5613  059F  00AE               	movwf	I2C_Master_Write@d+1
  5614  05A0  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  5615                           
  5616                           ;RTC.c: 122:     datum = BCD_a_DEC(I2C_Master_Read(0));
  5617  05A5  3000               	movlw	0
  5618  05A6  00F2               	movwf	I2C_Master_Read@a
  5619  05A7  00F3               	movwf	I2C_Master_Read@a+1
  5620  05A8  160A  118A  2779  120A  118A  	fcall	_I2C_Master_Read
  5621  05AD  0872               	movf	?_I2C_Master_Read,w
  5622  05AE  160A  118A  26A4  120A  118A  	fcall	_BCD_a_DEC
  5623  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  5624  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  5625  05B5  00AF               	movwf	??_get_Time
  5626  05B6  082F               	movf	??_get_Time,w
  5627  05B7  00DC               	movwf	_datum
  5628                           
  5629                           ;RTC.c: 123:     I2C_Master_Stop();
  5630  05B8  160A  118A  260F  120A  118A  	fcall	_I2C_Master_Stop
  5631                           
  5632                           ;RTC.c: 125:     I2C_Master_Start();
  5633  05BD  160A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  5634                           
  5635                           ;RTC.c: 126:     I2C_Master_Write(0xD0);
  5636  05C2  30D0               	movlw	208
  5637  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  5638  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  5639  05C5  00AD               	movwf	I2C_Master_Write@d
  5640  05C6  3000               	movlw	0
  5641  05C7  00AE               	movwf	I2C_Master_Write@d+1
  5642  05C8  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  5643                           
  5644                           ;RTC.c: 127:     I2C_Master_Write(5);
  5645  05CD  3005               	movlw	5
  5646  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  5647  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  5648  05D0  00AD               	movwf	I2C_Master_Write@d
  5649  05D1  3000               	movlw	0
  5650  05D2  00AE               	movwf	I2C_Master_Write@d+1
  5651  05D3  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  5652                           
  5653                           ;RTC.c: 128:     I2C_Master_Stop();
  5654  05D8  160A  118A  260F  120A  118A  	fcall	_I2C_Master_Stop
  5655                           
  5656                           ;RTC.c: 129:     I2C_Master_Start();
  5657  05DD  160A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  5658                           
  5659                           ;RTC.c: 130:     I2C_Master_Write(0xD1);
  5660  05E2  30D1               	movlw	209
  5661  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  5662  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  5663  05E5  00AD               	movwf	I2C_Master_Write@d
  5664  05E6  3000               	movlw	0
  5665  05E7  00AE               	movwf	I2C_Master_Write@d+1
  5666  05E8  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  5667                           
  5668                           ;RTC.c: 131:     mes = BCD_a_DEC(I2C_Master_Read(0));
  5669  05ED  3000               	movlw	0
  5670  05EE  00F2               	movwf	I2C_Master_Read@a
  5671  05EF  00F3               	movwf	I2C_Master_Read@a+1
  5672  05F0  160A  118A  2779  120A  118A  	fcall	_I2C_Master_Read
  5673  05F5  0872               	movf	?_I2C_Master_Read,w
  5674  05F6  160A  118A  26A4  120A  118A  	fcall	_BCD_a_DEC
  5675  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  5676  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  5677  05FD  00AF               	movwf	??_get_Time
  5678  05FE  082F               	movf	??_get_Time,w
  5679  05FF  00DB               	movwf	_mes
  5680                           
  5681                           ;RTC.c: 132:     I2C_Master_Stop();
  5682  0600  160A  118A  260F  120A  118A  	fcall	_I2C_Master_Stop
  5683                           
  5684                           ;RTC.c: 134:     I2C_Master_Start();
  5685  0605  160A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  5686                           
  5687                           ;RTC.c: 135:     I2C_Master_Write(0xD0);
  5688  060A  30D0               	movlw	208
  5689  060B  1283               	bcf	3,5	;RP0=0, select bank0
  5690  060C  1303               	bcf	3,6	;RP1=0, select bank0
  5691  060D  00AD               	movwf	I2C_Master_Write@d
  5692  060E  3000               	movlw	0
  5693  060F  00AE               	movwf	I2C_Master_Write@d+1
  5694  0610  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  5695                           
  5696                           ;RTC.c: 136:     I2C_Master_Write(6);
  5697  0615  3006               	movlw	6
  5698  0616  1283               	bcf	3,5	;RP0=0, select bank0
  5699  0617  1303               	bcf	3,6	;RP1=0, select bank0
  5700  0618  00AD               	movwf	I2C_Master_Write@d
  5701  0619  3000               	movlw	0
  5702  061A  00AE               	movwf	I2C_Master_Write@d+1
  5703  061B  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  5704                           
  5705                           ;RTC.c: 137:     I2C_Master_Stop();
  5706  0620  160A  118A  260F  120A  118A  	fcall	_I2C_Master_Stop
  5707                           
  5708                           ;RTC.c: 138:     I2C_Master_Start();
  5709  0625  160A  118A  2608  120A  118A  	fcall	_I2C_Master_Start
  5710                           
  5711                           ;RTC.c: 139:     I2C_Master_Write(0xD1);
  5712  062A  30D1               	movlw	209
  5713  062B  1283               	bcf	3,5	;RP0=0, select bank0
  5714  062C  1303               	bcf	3,6	;RP1=0, select bank0
  5715  062D  00AD               	movwf	I2C_Master_Write@d
  5716  062E  3000               	movlw	0
  5717  062F  00AE               	movwf	I2C_Master_Write@d+1
  5718  0630  160A  118A  2616  120A  118A  	fcall	_I2C_Master_Write
  5719                           
  5720                           ;RTC.c: 140:     jahr = BCD_a_DEC(I2C_Master_Read(0));
  5721  0635  3000               	movlw	0
  5722  0636  00F2               	movwf	I2C_Master_Read@a
  5723  0637  00F3               	movwf	I2C_Master_Read@a+1
  5724  0638  160A  118A  2779  120A  118A  	fcall	_I2C_Master_Read
  5725  063D  0872               	movf	?_I2C_Master_Read,w
  5726  063E  160A  118A  26A4  120A  118A  	fcall	_BCD_a_DEC
  5727  0643  1283               	bcf	3,5	;RP0=0, select bank0
  5728  0644  1303               	bcf	3,6	;RP1=0, select bank0
  5729  0645  00AF               	movwf	??_get_Time
  5730  0646  082F               	movf	??_get_Time,w
  5731  0647  00DA               	movwf	_jahr
  5732                           
  5733                           ;RTC.c: 141:     I2C_Master_Stop();
  5734  0648  160A  118A  260F   	fcall	_I2C_Master_Stop
  5735  064B  0008               	return
  5736  064C                     __end_of_get_Time:	
  5737                           
  5738                           	psect	text18
  5739  1779                     __ptext18:	
  5740 ;; *************** function _I2C_Master_Read *****************
  5741 ;; Defined at:
  5742 ;;		line 74 in file "I2C.c"
  5743 ;; Parameters:    Size  Location     Type
  5744 ;;  a               2    2[COMMON] unsigned short 
  5745 ;; Auto vars:     Size  Location     Type
  5746 ;;  temp            2    6[COMMON] unsigned short 
  5747 ;; Return value:  Size  Location     Type
  5748 ;;                  2    2[COMMON] unsigned short 
  5749 ;; Registers used:
  5750 ;;		wreg, status,2, status,0, pclath, cstack
  5751 ;; Tracked objects:
  5752 ;;		On entry : 0/0
  5753 ;;		On exit  : 0/0
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5756 ;;      Params:         2       0       0       0       0
  5757 ;;      Locals:         2       0       0       0       0
  5758 ;;      Temps:          2       0       0       0       0
  5759 ;;      Totals:         6       0       0       0       0
  5760 ;;Total ram usage:        6 bytes
  5761 ;; Hardware stack levels used:    1
  5762 ;; Hardware stack levels required when called:    2
  5763 ;; This function calls:
  5764 ;;		_I2C_Master_Wait
  5765 ;; This function is called by:
  5766 ;;		_get_dis
  5767 ;;		_get_hum
  5768 ;;		_get_Time
  5769 ;;		_get_hora
  5770 ;;		_temp_objeto
  5771 ;;		_temp_ambiente
  5772 ;;		_Acc_X
  5773 ;;		_Acc_Y
  5774 ;;		_Acc_Z
  5775 ;;		_Gy_X
  5776 ;;		_Gy_Y
  5777 ;;		_Gy_Z
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           
  5782                           ;psect for function _I2C_Master_Read
  5783  1779                     _I2C_Master_Read:	
  5784                           
  5785                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  5786                           
  5787                           ;incstack = 0
  5788                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  5789  1779  160A  118A  262E  160A  118A  	fcall	_I2C_Master_Wait
  5790                           
  5791                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  5792  177E  1683               	bsf	3,5	;RP0=1, select bank1
  5793  177F  1303               	bcf	3,6	;RP1=0, select bank1
  5794  1780  1591               	bsf	17,3	;volatile
  5795                           
  5796                           ;I2C.c: 79:     I2C_Master_Wait();
  5797  1781  160A  118A  262E  160A  118A  	fcall	_I2C_Master_Wait
  5798                           
  5799                           ;I2C.c: 80:     temp = SSPBUF;
  5800  1786  1283               	bcf	3,5	;RP0=0, select bank0
  5801  1787  1303               	bcf	3,6	;RP1=0, select bank0
  5802  1788  0813               	movf	19,w	;volatile
  5803  1789  00F4               	movwf	??_I2C_Master_Read
  5804  178A  01F5               	clrf	??_I2C_Master_Read+1
  5805  178B  0874               	movf	??_I2C_Master_Read,w
  5806  178C  00F6               	movwf	I2C_Master_Read@temp
  5807  178D  0875               	movf	??_I2C_Master_Read+1,w
  5808  178E  00F7               	movwf	I2C_Master_Read@temp+1
  5809                           
  5810                           ;I2C.c: 81:     I2C_Master_Wait();
  5811  178F  160A  118A  262E  160A  118A  	fcall	_I2C_Master_Wait
  5812                           
  5813                           ;I2C.c: 82:     if(a == 1){
  5814  1794  0372               	decf	I2C_Master_Read@a,w
  5815  1795  0473               	iorwf	I2C_Master_Read@a+1,w
  5816  1796  1D03               	btfss	3,2
  5817  1797  2F9C               	goto	l393
  5818                           
  5819                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  5820  1798  1683               	bsf	3,5	;RP0=1, select bank1
  5821  1799  1303               	bcf	3,6	;RP1=0, select bank1
  5822  179A  1291               	bcf	17,5	;volatile
  5823                           
  5824                           ;I2C.c: 84:     }else{
  5825  179B  2F9F               	goto	l394
  5826  179C                     l393:	
  5827                           
  5828                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  5829  179C  1683               	bsf	3,5	;RP0=1, select bank1
  5830  179D  1303               	bcf	3,6	;RP1=0, select bank1
  5831  179E  1691               	bsf	17,5	;volatile
  5832  179F                     l394:	
  5833                           ;I2C.c: 86:     }
  5834                           
  5835                           
  5836                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  5837  179F  1611               	bsf	17,4	;volatile
  5838                           
  5839                           ;I2C.c: 88:     return temp;
  5840  17A0  0877               	movf	I2C_Master_Read@temp+1,w
  5841  17A1  00F3               	movwf	?_I2C_Master_Read+1
  5842  17A2  0876               	movf	I2C_Master_Read@temp,w
  5843  17A3  00F2               	movwf	?_I2C_Master_Read
  5844  17A4  0008               	return
  5845  17A5                     __end_of_I2C_Master_Read:	
  5846                           
  5847                           	psect	text19
  5848  16A4                     __ptext19:	
  5849 ;; *************** function _BCD_a_DEC *****************
  5850 ;; Defined at:
  5851 ;;		line 27 in file "RTC.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;  numBCD          1    wreg     unsigned char 
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;  numBCD          1    9[COMMON] unsigned char 
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  1    wreg      unsigned char 
  5858 ;; Registers used:
  5859 ;;		wreg, status,2, status,0, pclath, cstack
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5865 ;;      Params:         0       0       0       0       0
  5866 ;;      Locals:         1       0       0       0       0
  5867 ;;      Temps:          3       0       0       0       0
  5868 ;;      Totals:         4       0       0       0       0
  5869 ;;Total ram usage:        4 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; Hardware stack levels required when called:    2
  5872 ;; This function calls:
  5873 ;;		___bmul
  5874 ;; This function is called by:
  5875 ;;		_get_Time
  5876 ;;		_get_hora
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           
  5881                           ;psect for function _BCD_a_DEC
  5882  16A4                     _BCD_a_DEC:	
  5883                           
  5884                           ;incstack = 0
  5885                           ; Regs used in _BCD_a_DEC: [wreg+status,2+status,0+pclath+cstack]
  5886                           ;BCD_a_DEC@numBCD stored from wreg
  5887  16A4  00F9               	movwf	BCD_a_DEC@numBCD
  5888                           
  5889                           ;RTC.c: 28:     return (numBCD >> 4) * 10 + (numBCD & 0x0F);
  5890  16A5  300F               	movlw	15
  5891  16A6  0579               	andwf	BCD_a_DEC@numBCD,w
  5892  16A7  00F6               	movwf	??_BCD_a_DEC
  5893  16A8  300A               	movlw	10
  5894  16A9  00F7               	movwf	??_BCD_a_DEC+1
  5895  16AA  0877               	movf	??_BCD_a_DEC+1,w
  5896  16AB  00F2               	movwf	___bmul@multiplicand
  5897  16AC  0879               	movf	BCD_a_DEC@numBCD,w
  5898  16AD  00F8               	movwf	??_BCD_a_DEC+2
  5899  16AE  3004               	movlw	4
  5900  16AF                     u1245:	
  5901  16AF  1003               	clrc
  5902  16B0  0CF8               	rrf	??_BCD_a_DEC+2,f
  5903  16B1  3EFF               	addlw	-1
  5904  16B2  1D03               	skipz
  5905  16B3  2EAF               	goto	u1245
  5906  16B4  0878               	movf	??_BCD_a_DEC+2,w
  5907  16B5  160A  118A  2657   	fcall	___bmul
  5908  16B8  0776               	addwf	??_BCD_a_DEC,w
  5909  16B9  0008               	return
  5910  16BA                     __end_of_BCD_a_DEC:	
  5911                           
  5912                           	psect	text20
  5913  1657                     __ptext20:	
  5914 ;; *************** function ___bmul *****************
  5915 ;; Defined at:
  5916 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;  multiplier      1    wreg     unsigned char 
  5919 ;;  multiplicand    1    2[COMMON] unsigned char 
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;  multiplier      1    5[COMMON] unsigned char 
  5922 ;;  product         1    4[COMMON] unsigned char 
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  1    wreg      unsigned char 
  5925 ;; Registers used:
  5926 ;;		wreg, status,2, status,0
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5932 ;;      Params:         1       0       0       0       0
  5933 ;;      Locals:         2       0       0       0       0
  5934 ;;      Temps:          1       0       0       0       0
  5935 ;;      Totals:         4       0       0       0       0
  5936 ;;Total ram usage:        4 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; Hardware stack levels required when called:    1
  5939 ;; This function calls:
  5940 ;;		Nothing
  5941 ;; This function is called by:
  5942 ;;		_BCD_a_DEC
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946                           
  5947                           ;psect for function ___bmul
  5948  1657                     ___bmul:	
  5949                           
  5950                           ;incstack = 0
  5951                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5952                           ;___bmul@multiplier stored from wreg
  5953  1657  00F5               	movwf	___bmul@multiplier
  5954  1658  01F4               	clrf	___bmul@product
  5955  1659                     l2846:	
  5956  1659  1C75               	btfss	___bmul@multiplier,0
  5957  165A  2E5F               	goto	l2850
  5958  165B  0872               	movf	___bmul@multiplicand,w
  5959  165C  00F3               	movwf	??___bmul
  5960  165D  0873               	movf	??___bmul,w
  5961  165E  07F4               	addwf	___bmul@product,f
  5962  165F                     l2850:	
  5963  165F  1003               	clrc
  5964  1660  0DF2               	rlf	___bmul@multiplicand,f
  5965  1661  1003               	clrc
  5966  1662  0CF5               	rrf	___bmul@multiplier,f
  5967  1663  0875               	movf	___bmul@multiplier,w
  5968  1664  1D03               	btfss	3,2
  5969  1665  2E59               	goto	l2846
  5970  1666  0874               	movf	___bmul@product,w
  5971  1667  0008               	return
  5972  1668                     __end_of___bmul:	
  5973                           
  5974                           	psect	text21
  5975  0C96                     __ptext21:	
  5976 ;; *************** function _SetUp *****************
  5977 ;; Defined at:
  5978 ;;		line 187 in file "main_Master.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;		None
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;		None
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  1    wreg      void 
  5985 ;; Registers used:
  5986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5992 ;;      Params:         0       0       0       0       0
  5993 ;;      Locals:         0       0       0       0       0
  5994 ;;      Temps:          0       2       0       0       0
  5995 ;;      Totals:         0       2       0       0       0
  5996 ;;Total ram usage:        2 bytes
  5997 ;; Hardware stack levels used:    1
  5998 ;; Hardware stack levels required when called:    4
  5999 ;; This function calls:
  6000 ;;		_I2C_Master_Init
  6001 ;;		_LCD_Create_Char
  6002 ;;		_LCD_clear
  6003 ;;		_LCD_init
  6004 ;;		_OSC_config
  6005 ;;		_Zeit_Datum_Set
  6006 ;;		_uart_init
  6007 ;; This function is called by:
  6008 ;;		_main
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011                           
  6012                           
  6013                           ;psect for function _SetUp
  6014  0C96                     _SetUp:	
  6015                           
  6016                           ;main_Master.c: 188:     TRISB = 0;
  6017                           
  6018                           ;incstack = 0
  6019                           ; Regs used in _SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6020  0C96  1683               	bsf	3,5	;RP0=1, select bank1
  6021  0C97  1303               	bcf	3,6	;RP1=0, select bank1
  6022  0C98  0186               	clrf	6	;volatile
  6023                           
  6024                           ;main_Master.c: 189:     OSC_config(1000000);
  6025  0C99  3000               	movlw	0
  6026  0C9A  00F5               	movwf	OSC_config@frecuencia+3
  6027  0C9B  300F               	movlw	15
  6028  0C9C  00F4               	movwf	OSC_config@frecuencia+2
  6029  0C9D  3042               	movlw	66
  6030  0C9E  00F3               	movwf	OSC_config@frecuencia+1
  6031  0C9F  3040               	movlw	64
  6032  0CA0  00F2               	movwf	OSC_config@frecuencia
  6033  0CA1  120A  158A  2532  120A  158A  	fcall	_OSC_config
  6034                           
  6035                           ;main_Master.c: 190:     TRISB = 0b00000110;
  6036  0CA6  3006               	movlw	6
  6037  0CA7  1683               	bsf	3,5	;RP0=1, select bank1
  6038  0CA8  1303               	bcf	3,6	;RP1=0, select bank1
  6039  0CA9  0086               	movwf	6	;volatile
  6040                           
  6041                           ;main_Master.c: 191:     ANSELH = 0;
  6042  0CAA  1683               	bsf	3,5	;RP0=1, select bank3
  6043  0CAB  1703               	bsf	3,6	;RP1=1, select bank3
  6044  0CAC  0189               	clrf	9	;volatile
  6045                           
  6046                           ;main_Master.c: 192:     WPUB = 0b00000110;
  6047  0CAD  3006               	movlw	6
  6048  0CAE  1683               	bsf	3,5	;RP0=1, select bank1
  6049  0CAF  1303               	bcf	3,6	;RP1=0, select bank1
  6050  0CB0  0095               	movwf	21	;volatile
  6051                           
  6052                           ;main_Master.c: 193:     OPTION_REGbits.nRBPU = 0;
  6053  0CB1  1381               	bcf	1,7	;volatile
  6054                           
  6055                           ;main_Master.c: 194:     IOCB = 0b00000110;
  6056  0CB2  3006               	movlw	6
  6057  0CB3  0096               	movwf	22	;volatile
  6058                           
  6059                           ;main_Master.c: 195:     INTCONbits.RBIE = 1;
  6060  0CB4  158B               	bsf	11,3	;volatile
  6061                           
  6062                           ;main_Master.c: 196:     INTCONbits.GIE = 1;
  6063  0CB5  178B               	bsf	11,7	;volatile
  6064                           
  6065                           ;main_Master.c: 197:     TRISD = 0;
  6066  0CB6  0188               	clrf	8	;volatile
  6067                           
  6068                           ;main_Master.c: 198:     PORTA = 0;
  6069  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  6070  0CB8  1303               	bcf	3,6	;RP1=0, select bank0
  6071  0CB9  0185               	clrf	5	;volatile
  6072                           
  6073                           ;main_Master.c: 199:     TRISA = 0;
  6074  0CBA  1683               	bsf	3,5	;RP0=1, select bank1
  6075  0CBB  1303               	bcf	3,6	;RP1=0, select bank1
  6076  0CBC  0185               	clrf	5	;volatile
  6077                           
  6078                           ;main_Master.c: 200:     TRISE = 0b0111;
  6079  0CBD  3007               	movlw	7
  6080  0CBE  0089               	movwf	9	;volatile
  6081                           
  6082                           ;main_Master.c: 201:     ANSEL = 0b01110000;
  6083  0CBF  3070               	movlw	112
  6084  0CC0  1683               	bsf	3,5	;RP0=1, select bank3
  6085  0CC1  1703               	bsf	3,6	;RP1=1, select bank3
  6086  0CC2  0088               	movwf	8	;volatile
  6087                           
  6088                           ;main_Master.c: 202:     LCD_init();
  6089  0CC3  120A  158A  2241  120A  158A  	fcall	_LCD_init
  6090                           
  6091                           ;main_Master.c: 203:     LCD_Create_Char(0, atilde);
  6092  0CC8  3011               	movlw	(low ((_atilde-__stringbase)| (0+32768)))& (0+255)
  6093  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  6094  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  6095  0CCB  00B1               	movwf	??_SetUp
  6096  0CCC  0831               	movf	??_SetUp,w
  6097  0CCD  00F5               	movwf	LCD_Create_Char@chardata
  6098  0CCE  3000               	movlw	0
  6099  0CCF  160A  118A  274D  120A  158A  	fcall	_LCD_Create_Char
  6100                           
  6101                           ;main_Master.c: 204:     LCD_Create_Char(1, arrowr);
  6102  0CD4  3021               	movlw	(low ((_arrowr-__stringbase)| (0+32768)))& (0+255)
  6103  0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  6104  0CD6  1303               	bcf	3,6	;RP1=0, select bank0
  6105  0CD7  00B1               	movwf	??_SetUp
  6106  0CD8  0831               	movf	??_SetUp,w
  6107  0CD9  00F5               	movwf	LCD_Create_Char@chardata
  6108  0CDA  3001               	movlw	1
  6109  0CDB  160A  118A  274D  120A  158A  	fcall	_LCD_Create_Char
  6110                           
  6111                           ;main_Master.c: 205:     LCD_Create_Char(2, termometro);
  6112  0CE0  3009               	movlw	(low ((_termometro-__stringbase)| (0+32768)))& (0+255)
  6113  0CE1  1283               	bcf	3,5	;RP0=0, select bank0
  6114  0CE2  1303               	bcf	3,6	;RP1=0, select bank0
  6115  0CE3  00B1               	movwf	??_SetUp
  6116  0CE4  0831               	movf	??_SetUp,w
  6117  0CE5  00F5               	movwf	LCD_Create_Char@chardata
  6118  0CE6  3002               	movlw	2
  6119  0CE7  160A  118A  274D  120A  158A  	fcall	_LCD_Create_Char
  6120                           
  6121                           ;main_Master.c: 206:     LCD_Create_Char(3, gota);
  6122  0CEC  3001               	movlw	(low ((_gota-__stringbase)| (0+32768)))& (0+255)
  6123  0CED  1283               	bcf	3,5	;RP0=0, select bank0
  6124  0CEE  1303               	bcf	3,6	;RP1=0, select bank0
  6125  0CEF  00B1               	movwf	??_SetUp
  6126  0CF0  0831               	movf	??_SetUp,w
  6127  0CF1  00F5               	movwf	LCD_Create_Char@chardata
  6128  0CF2  3003               	movlw	3
  6129  0CF3  160A  118A  274D  120A  158A  	fcall	_LCD_Create_Char
  6130                           
  6131                           ;main_Master.c: 207:     LCD_Create_Char(4, arrowr_vacio);
  6132  0CF8  3019               	movlw	(low ((_arrowr_vacio-__stringbase)| (0+32768)))& (0+255)
  6133  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  6134  0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  6135  0CFB  00B1               	movwf	??_SetUp
  6136  0CFC  0831               	movf	??_SetUp,w
  6137  0CFD  00F5               	movwf	LCD_Create_Char@chardata
  6138  0CFE  3004               	movlw	4
  6139  0CFF  160A  118A  274D  120A  158A  	fcall	_LCD_Create_Char
  6140                           
  6141                           ;main_Master.c: 208:     LCD_clear();
  6142  0D04  160A  118A  268E  120A  158A  	fcall	_LCD_clear
  6143                           
  6144                           ;main_Master.c: 209:     uart_init(9600);
  6145  0D09  3080               	movlw	128
  6146  0D0A  00F2               	movwf	?_uart_init
  6147  0D0B  3025               	movlw	37
  6148  0D0C  00F3               	movwf	?_uart_init+1
  6149  0D0D  160A  118A  2679  120A  158A  	fcall	_uart_init
  6150                           
  6151                           ;main_Master.c: 210:     I2C_Master_Init(100000);
  6152  0D12  3000               	movlw	0
  6153  0D13  1283               	bcf	3,5	;RP0=0, select bank0
  6154  0D14  1303               	bcf	3,6	;RP1=0, select bank0
  6155  0D15  00A9               	movwf	I2C_Master_Init@c+3
  6156  0D16  3001               	movlw	1
  6157  0D17  00A8               	movwf	I2C_Master_Init@c+2
  6158  0D18  3086               	movlw	134
  6159  0D19  00A7               	movwf	I2C_Master_Init@c+1
  6160  0D1A  30A0               	movlw	160
  6161  0D1B  00A6               	movwf	I2C_Master_Init@c
  6162  0D1C  120A  158A  2105  120A  158A  	fcall	_I2C_Master_Init
  6163                           
  6164                           ;main_Master.c: 213:     Zeit_Datum_Set();
  6165  0D21  120A  158A  268A  120A  158A  	fcall	_Zeit_Datum_Set
  6166                           
  6167                           ;main_Master.c: 214:     _delay((unsigned long)((100)*(1000000/4000.0)));
  6168  0D26  3021               	movlw	33
  6169  0D27  1283               	bcf	3,5	;RP0=0, select bank0
  6170  0D28  1303               	bcf	3,6	;RP1=0, select bank0
  6171  0D29  00B2               	movwf	??_SetUp+1
  6172  0D2A  3075               	movlw	117
  6173  0D2B  00B1               	movwf	??_SetUp
  6174  0D2C                     u2247:	
  6175  0D2C  0BB1               	decfsz	??_SetUp,f
  6176  0D2D  2D2C               	goto	u2247
  6177  0D2E  0BB2               	decfsz	??_SetUp+1,f
  6178  0D2F  2D2C               	goto	u2247
  6179  0D30  2D31               	nop2
  6180  0D31  0008               	return
  6181  0D32                     __end_of_SetUp:	
  6182                           
  6183                           	psect	text22
  6184  1679                     __ptext22:	
  6185 ;; *************** function _uart_init *****************
  6186 ;; Defined at:
  6187 ;;		line 14 in file "UART.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;		None
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;		None
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  1    wreg      void 
  6194 ;; Registers used:
  6195 ;;		wreg, status,2
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6201 ;;      Params:         2       0       0       0       0
  6202 ;;      Locals:         0       0       0       0       0
  6203 ;;      Temps:          0       0       0       0       0
  6204 ;;      Totals:         2       0       0       0       0
  6205 ;;Total ram usage:        2 bytes
  6206 ;; Hardware stack levels used:    1
  6207 ;; Hardware stack levels required when called:    1
  6208 ;; This function calls:
  6209 ;;		Nothing
  6210 ;; This function is called by:
  6211 ;;		_SetUp
  6212 ;; This function uses a non-reentrant model
  6213 ;;
  6214                           
  6215                           
  6216                           ;psect for function _uart_init
  6217  1679                     _uart_init:	
  6218                           
  6219                           ;UART.c: 15:     TXSTAbits.SYNC = 0;
  6220                           
  6221                           ;incstack = 0
  6222                           ; Regs used in _uart_init: [wreg+status,2]
  6223  1679  1683               	bsf	3,5	;RP0=1, select bank1
  6224  167A  1303               	bcf	3,6	;RP1=0, select bank1
  6225  167B  1218               	bcf	24,4	;volatile
  6226                           
  6227                           ;UART.c: 16:     TXSTAbits.BRGH = 1;
  6228  167C  1518               	bsf	24,2	;volatile
  6229                           
  6230                           ;UART.c: 17:     BAUDCTLbits.BRG16 = 1;
  6231  167D  1683               	bsf	3,5	;RP0=1, select bank3
  6232  167E  1703               	bsf	3,6	;RP1=1, select bank3
  6233  167F  1587               	bsf	7,3	;volatile
  6234                           
  6235                           ;UART.c: 18:     SPBRG = 103;
  6236  1680  3067               	movlw	103
  6237  1681  1683               	bsf	3,5	;RP0=1, select bank1
  6238  1682  1303               	bcf	3,6	;RP1=0, select bank1
  6239  1683  0099               	movwf	25	;volatile
  6240                           
  6241                           ;UART.c: 19:     SPBRGH = 0;
  6242  1684  019A               	clrf	26	;volatile
  6243                           
  6244                           ;UART.c: 21:     RCSTAbits.SPEN = 1;
  6245  1685  1283               	bcf	3,5	;RP0=0, select bank0
  6246  1686  1303               	bcf	3,6	;RP1=0, select bank0
  6247  1687  1798               	bsf	24,7	;volatile
  6248                           
  6249                           ;UART.c: 22:     RCSTAbits.RX9 = 0;
  6250  1688  1318               	bcf	24,6	;volatile
  6251                           
  6252                           ;UART.c: 23:     RCSTAbits.CREN = 1;
  6253  1689  1618               	bsf	24,4	;volatile
  6254                           
  6255                           ;UART.c: 25:     TXSTAbits.TXEN = 1;
  6256  168A  1683               	bsf	3,5	;RP0=1, select bank1
  6257  168B  1303               	bcf	3,6	;RP1=0, select bank1
  6258  168C  1698               	bsf	24,5	;volatile
  6259  168D  0008               	return
  6260  168E                     __end_of_uart_init:	
  6261                           
  6262                           	psect	text23
  6263  0E8A                     __ptext23:	
  6264 ;; *************** function _Zeit_Datum_Set *****************
  6265 ;; Defined at:
  6266 ;;		line 64 in file "RTC.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;		None
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;		None
  6271 ;; Return value:  Size  Location     Type
  6272 ;;                  1    wreg      void 
  6273 ;; Registers used:
  6274 ;;		wreg, status,2, status,0, pclath, cstack
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6280 ;;      Params:         0       0       0       0       0
  6281 ;;      Locals:         0       0       0       0       0
  6282 ;;      Temps:          0       2       0       0       0
  6283 ;;      Totals:         0       2       0       0       0
  6284 ;;Total ram usage:        2 bytes
  6285 ;; Hardware stack levels used:    1
  6286 ;; Hardware stack levels required when called:    3
  6287 ;; This function calls:
  6288 ;;		_DEC_a_BCD
  6289 ;;		_I2C_Master_Start
  6290 ;;		_I2C_Master_Stop
  6291 ;;		_I2C_Master_Write
  6292 ;; This function is called by:
  6293 ;;		_SetUp
  6294 ;; This function uses a non-reentrant model
  6295 ;;
  6296                           
  6297                           
  6298                           ;psect for function _Zeit_Datum_Set
  6299  0E8A                     _Zeit_Datum_Set:	
  6300                           
  6301                           ;RTC.c: 65:     I2C_Master_Start();
  6302                           
  6303                           ;incstack = 0
  6304                           ; Regs used in _Zeit_Datum_Set: [wreg+status,2+status,0+pclath+cstack]
  6305  0E8A  160A  118A  2608  120A  158A  	fcall	_I2C_Master_Start
  6306                           
  6307                           ;RTC.c: 66:     I2C_Master_Write(0xD0);
  6308  0E8F  30D0               	movlw	208
  6309  0E90  1283               	bcf	3,5	;RP0=0, select bank0
  6310  0E91  1303               	bcf	3,6	;RP1=0, select bank0
  6311  0E92  00AD               	movwf	I2C_Master_Write@d
  6312  0E93  3000               	movlw	0
  6313  0E94  00AE               	movwf	I2C_Master_Write@d+1
  6314  0E95  160A  118A  2616  120A  158A  	fcall	_I2C_Master_Write
  6315                           
  6316                           ;RTC.c: 67:     I2C_Master_Write(0);
  6317  0E9A  3000               	movlw	0
  6318  0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  6319  0E9C  1303               	bcf	3,6	;RP1=0, select bank0
  6320  0E9D  00AD               	movwf	I2C_Master_Write@d
  6321  0E9E  00AE               	movwf	I2C_Master_Write@d+1
  6322  0E9F  160A  118A  2616  120A  158A  	fcall	_I2C_Master_Write
  6323                           
  6324                           ;RTC.c: 68:     I2C_Master_Write(DEC_a_BCD(seg));
  6325  0EA4  1283               	bcf	3,5	;RP0=0, select bank0
  6326  0EA5  1303               	bcf	3,6	;RP1=0, select bank0
  6327  0EA6  0854               	movf	_seg,w
  6328  0EA7  120A  158A  20D5  120A  158A  	fcall	_DEC_a_BCD
  6329  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  6330  0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  6331  0EAE  00AF               	movwf	??_Zeit_Datum_Set
  6332  0EAF  01B0               	clrf	??_Zeit_Datum_Set+1
  6333  0EB0  082F               	movf	??_Zeit_Datum_Set,w
  6334  0EB1  00AD               	movwf	I2C_Master_Write@d
  6335  0EB2  0830               	movf	??_Zeit_Datum_Set+1,w
  6336  0EB3  00AE               	movwf	I2C_Master_Write@d+1
  6337  0EB4  160A  118A  2616  120A  158A  	fcall	_I2C_Master_Write
  6338                           
  6339                           ;RTC.c: 69:     I2C_Master_Write(DEC_a_BCD(min));
  6340  0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  6341  0EBA  1303               	bcf	3,6	;RP1=0, select bank0
  6342  0EBB  085F               	movf	_min,w
  6343  0EBC  120A  158A  20D5  120A  158A  	fcall	_DEC_a_BCD
  6344  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  6345  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  6346  0EC3  00AF               	movwf	??_Zeit_Datum_Set
  6347  0EC4  01B0               	clrf	??_Zeit_Datum_Set+1
  6348  0EC5  082F               	movf	??_Zeit_Datum_Set,w
  6349  0EC6  00AD               	movwf	I2C_Master_Write@d
  6350  0EC7  0830               	movf	??_Zeit_Datum_Set+1,w
  6351  0EC8  00AE               	movwf	I2C_Master_Write@d+1
  6352  0EC9  160A  118A  2616  120A  158A  	fcall	_I2C_Master_Write
  6353                           
  6354                           ;RTC.c: 70:     I2C_Master_Write(DEC_a_BCD(hora));
  6355  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  6356  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  6357  0ED0  085E               	movf	_hora,w
  6358  0ED1  120A  158A  20D5  120A  158A  	fcall	_DEC_a_BCD
  6359  0ED6  1283               	bcf	3,5	;RP0=0, select bank0
  6360  0ED7  1303               	bcf	3,6	;RP1=0, select bank0
  6361  0ED8  00AF               	movwf	??_Zeit_Datum_Set
  6362  0ED9  01B0               	clrf	??_Zeit_Datum_Set+1
  6363  0EDA  082F               	movf	??_Zeit_Datum_Set,w
  6364  0EDB  00AD               	movwf	I2C_Master_Write@d
  6365  0EDC  0830               	movf	??_Zeit_Datum_Set+1,w
  6366  0EDD  00AE               	movwf	I2C_Master_Write@d+1
  6367  0EDE  160A  118A  2616  120A  158A  	fcall	_I2C_Master_Write
  6368                           
  6369                           ;RTC.c: 71:     I2C_Master_Write(DEC_a_BCD(dia));
  6370  0EE3  1283               	bcf	3,5	;RP0=0, select bank0
  6371  0EE4  1303               	bcf	3,6	;RP1=0, select bank0
  6372  0EE5  085D               	movf	_dia,w
  6373  0EE6  120A  158A  20D5  120A  158A  	fcall	_DEC_a_BCD
  6374  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  6375  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  6376  0EED  00AF               	movwf	??_Zeit_Datum_Set
  6377  0EEE  01B0               	clrf	??_Zeit_Datum_Set+1
  6378  0EEF  082F               	movf	??_Zeit_Datum_Set,w
  6379  0EF0  00AD               	movwf	I2C_Master_Write@d
  6380  0EF1  0830               	movf	??_Zeit_Datum_Set+1,w
  6381  0EF2  00AE               	movwf	I2C_Master_Write@d+1
  6382  0EF3  160A  118A  2616  120A  158A  	fcall	_I2C_Master_Write
  6383                           
  6384                           ;RTC.c: 72:     I2C_Master_Write(DEC_a_BCD(datum));
  6385  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  6386  0EF9  1303               	bcf	3,6	;RP1=0, select bank0
  6387  0EFA  085C               	movf	_datum,w
  6388  0EFB  120A  158A  20D5  120A  158A  	fcall	_DEC_a_BCD
  6389  0F00  1283               	bcf	3,5	;RP0=0, select bank0
  6390  0F01  1303               	bcf	3,6	;RP1=0, select bank0
  6391  0F02  00AF               	movwf	??_Zeit_Datum_Set
  6392  0F03  01B0               	clrf	??_Zeit_Datum_Set+1
  6393  0F04  082F               	movf	??_Zeit_Datum_Set,w
  6394  0F05  00AD               	movwf	I2C_Master_Write@d
  6395  0F06  0830               	movf	??_Zeit_Datum_Set+1,w
  6396  0F07  00AE               	movwf	I2C_Master_Write@d+1
  6397  0F08  160A  118A  2616  120A  158A  	fcall	_I2C_Master_Write
  6398                           
  6399                           ;RTC.c: 73:     I2C_Master_Write(DEC_a_BCD(mes));
  6400  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  6401  0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  6402  0F0F  085B               	movf	_mes,w
  6403  0F10  120A  158A  20D5  120A  158A  	fcall	_DEC_a_BCD
  6404  0F15  1283               	bcf	3,5	;RP0=0, select bank0
  6405  0F16  1303               	bcf	3,6	;RP1=0, select bank0
  6406  0F17  00AF               	movwf	??_Zeit_Datum_Set
  6407  0F18  01B0               	clrf	??_Zeit_Datum_Set+1
  6408  0F19  082F               	movf	??_Zeit_Datum_Set,w
  6409  0F1A  00AD               	movwf	I2C_Master_Write@d
  6410  0F1B  0830               	movf	??_Zeit_Datum_Set+1,w
  6411  0F1C  00AE               	movwf	I2C_Master_Write@d+1
  6412  0F1D  160A  118A  2616  120A  158A  	fcall	_I2C_Master_Write
  6413                           
  6414                           ;RTC.c: 74:     I2C_Master_Write(DEC_a_BCD(jahr));
  6415  0F22  1283               	bcf	3,5	;RP0=0, select bank0
  6416  0F23  1303               	bcf	3,6	;RP1=0, select bank0
  6417  0F24  085A               	movf	_jahr,w
  6418  0F25  120A  158A  20D5  120A  158A  	fcall	_DEC_a_BCD
  6419  0F2A  1283               	bcf	3,5	;RP0=0, select bank0
  6420  0F2B  1303               	bcf	3,6	;RP1=0, select bank0
  6421  0F2C  00AF               	movwf	??_Zeit_Datum_Set
  6422  0F2D  01B0               	clrf	??_Zeit_Datum_Set+1
  6423  0F2E  082F               	movf	??_Zeit_Datum_Set,w
  6424  0F2F  00AD               	movwf	I2C_Master_Write@d
  6425  0F30  0830               	movf	??_Zeit_Datum_Set+1,w
  6426  0F31  00AE               	movwf	I2C_Master_Write@d+1
  6427  0F32  160A  118A  2616  120A  158A  	fcall	_I2C_Master_Write
  6428                           
  6429                           ;RTC.c: 75:     I2C_Master_Stop();
  6430  0F37  160A  118A  260F   	fcall	_I2C_Master_Stop
  6431  0F3A  0008               	return
  6432  0F3B                     __end_of_Zeit_Datum_Set:	
  6433                           
  6434                           	psect	text24
  6435  1616                     __ptext24:	
  6436 ;; *************** function _I2C_Master_Write *****************
  6437 ;; Defined at:
  6438 ;;		line 65 in file "I2C.c"
  6439 ;; Parameters:    Size  Location     Type
  6440 ;;  d               2   13[BANK0 ] unsigned int 
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;		None
  6443 ;; Return value:  Size  Location     Type
  6444 ;;                  1    wreg      void 
  6445 ;; Registers used:
  6446 ;;		wreg, status,2, status,0, pclath, cstack
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6452 ;;      Params:         0       2       0       0       0
  6453 ;;      Locals:         0       0       0       0       0
  6454 ;;      Temps:          0       0       0       0       0
  6455 ;;      Totals:         0       2       0       0       0
  6456 ;;Total ram usage:        2 bytes
  6457 ;; Hardware stack levels used:    1
  6458 ;; Hardware stack levels required when called:    2
  6459 ;; This function calls:
  6460 ;;		_I2C_Master_Wait
  6461 ;; This function is called by:
  6462 ;;		_get_dis
  6463 ;;		_get_hum
  6464 ;;		_mostrarLCD
  6465 ;;		_Zeit_Datum_Set
  6466 ;;		_get_Time
  6467 ;;		_get_hora
  6468 ;;		_temp_objeto
  6469 ;;		_temp_ambiente
  6470 ;;		_IMU_init
  6471 ;;		_Acc_X
  6472 ;;		_Acc_Y
  6473 ;;		_Acc_Z
  6474 ;;		_Gy_X
  6475 ;;		_Gy_Y
  6476 ;;		_Gy_Z
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           
  6481                           ;psect for function _I2C_Master_Write
  6482  1616                     _I2C_Master_Write:	
  6483                           
  6484                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  6485                           
  6486                           ;incstack = 0
  6487                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  6488  1616  160A  118A  262E   	fcall	_I2C_Master_Wait
  6489                           
  6490                           ;I2C.c: 68:     SSPBUF = d;
  6491  1619  1283               	bcf	3,5	;RP0=0, select bank0
  6492  161A  1303               	bcf	3,6	;RP1=0, select bank0
  6493  161B  082D               	movf	I2C_Master_Write@d,w
  6494  161C  0093               	movwf	19	;volatile
  6495  161D  0008               	return
  6496  161E                     __end_of_I2C_Master_Write:	
  6497                           
  6498                           	psect	text25
  6499  160F                     __ptext25:	
  6500 ;; *************** function _I2C_Master_Stop *****************
  6501 ;; Defined at:
  6502 ;;		line 55 in file "I2C.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;		None
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;		None
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  1    wreg      void 
  6509 ;; Registers used:
  6510 ;;		wreg, status,2, status,0, pclath, cstack
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6516 ;;      Params:         0       0       0       0       0
  6517 ;;      Locals:         0       0       0       0       0
  6518 ;;      Temps:          0       0       0       0       0
  6519 ;;      Totals:         0       0       0       0       0
  6520 ;;Total ram usage:        0 bytes
  6521 ;; Hardware stack levels used:    1
  6522 ;; Hardware stack levels required when called:    2
  6523 ;; This function calls:
  6524 ;;		_I2C_Master_Wait
  6525 ;; This function is called by:
  6526 ;;		_get_dis
  6527 ;;		_get_hum
  6528 ;;		_mostrarLCD
  6529 ;;		_Zeit_Datum_Set
  6530 ;;		_get_Time
  6531 ;;		_get_hora
  6532 ;;		_temp_objeto
  6533 ;;		_temp_ambiente
  6534 ;;		_IMU_init
  6535 ;;		_Acc_X
  6536 ;;		_Acc_Y
  6537 ;;		_Acc_Z
  6538 ;;		_Gy_X
  6539 ;;		_Gy_Y
  6540 ;;		_Gy_Z
  6541 ;; This function uses a non-reentrant model
  6542 ;;
  6543                           
  6544                           
  6545                           ;psect for function _I2C_Master_Stop
  6546  160F                     _I2C_Master_Stop:	
  6547                           
  6548                           ;I2C.c: 57:     I2C_Master_Wait();
  6549                           
  6550                           ;incstack = 0
  6551                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  6552  160F  160A  118A  262E   	fcall	_I2C_Master_Wait
  6553                           
  6554                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  6555  1612  1683               	bsf	3,5	;RP0=1, select bank1
  6556  1613  1303               	bcf	3,6	;RP1=0, select bank1
  6557  1614  1511               	bsf	17,2	;volatile
  6558  1615  0008               	return
  6559  1616                     __end_of_I2C_Master_Stop:	
  6560                           
  6561                           	psect	text26
  6562  1608                     __ptext26:	
  6563 ;; *************** function _I2C_Master_Start *****************
  6564 ;; Defined at:
  6565 ;;		line 39 in file "I2C.c"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;		None
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;		None
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  1    wreg      void 
  6572 ;; Registers used:
  6573 ;;		wreg, status,2, status,0, pclath, cstack
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6579 ;;      Params:         0       0       0       0       0
  6580 ;;      Locals:         0       0       0       0       0
  6581 ;;      Temps:          0       0       0       0       0
  6582 ;;      Totals:         0       0       0       0       0
  6583 ;;Total ram usage:        0 bytes
  6584 ;; Hardware stack levels used:    1
  6585 ;; Hardware stack levels required when called:    2
  6586 ;; This function calls:
  6587 ;;		_I2C_Master_Wait
  6588 ;; This function is called by:
  6589 ;;		_get_dis
  6590 ;;		_get_hum
  6591 ;;		_mostrarLCD
  6592 ;;		_Zeit_Datum_Set
  6593 ;;		_get_Time
  6594 ;;		_get_hora
  6595 ;;		_temp_objeto
  6596 ;;		_temp_ambiente
  6597 ;;		_IMU_init
  6598 ;;		_Acc_X
  6599 ;;		_Acc_Y
  6600 ;;		_Acc_Z
  6601 ;;		_Gy_X
  6602 ;;		_Gy_Y
  6603 ;;		_Gy_Z
  6604 ;; This function uses a non-reentrant model
  6605 ;;
  6606                           
  6607                           
  6608                           ;psect for function _I2C_Master_Start
  6609  1608                     _I2C_Master_Start:	
  6610                           
  6611                           ;I2C.c: 41:     I2C_Master_Wait();
  6612                           
  6613                           ;incstack = 0
  6614                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  6615  1608  160A  118A  262E   	fcall	_I2C_Master_Wait
  6616                           
  6617                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  6618  160B  1683               	bsf	3,5	;RP0=1, select bank1
  6619  160C  1303               	bcf	3,6	;RP1=0, select bank1
  6620  160D  1411               	bsf	17,0	;volatile
  6621  160E  0008               	return
  6622  160F                     __end_of_I2C_Master_Start:	
  6623                           
  6624                           	psect	text27
  6625  162E                     __ptext27:	
  6626 ;; *************** function _I2C_Master_Wait *****************
  6627 ;; Defined at:
  6628 ;;		line 32 in file "I2C.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;		None
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;		None
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  1    wreg      void 
  6635 ;; Registers used:
  6636 ;;		wreg, status,2
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6642 ;;      Params:         0       0       0       0       0
  6643 ;;      Locals:         0       0       0       0       0
  6644 ;;      Temps:          0       0       0       0       0
  6645 ;;      Totals:         0       0       0       0       0
  6646 ;;Total ram usage:        0 bytes
  6647 ;; Hardware stack levels used:    1
  6648 ;; Hardware stack levels required when called:    1
  6649 ;; This function calls:
  6650 ;;		Nothing
  6651 ;; This function is called by:
  6652 ;;		_I2C_Master_Start
  6653 ;;		_I2C_Master_Stop
  6654 ;;		_I2C_Master_Write
  6655 ;;		_I2C_Master_Read
  6656 ;;		_I2C_Master_RepeatedStart
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660                           
  6661                           ;psect for function _I2C_Master_Wait
  6662  162E                     _I2C_Master_Wait:	
  6663  162E                     l375:	
  6664                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  6665                           
  6666                           ;incstack = 0
  6667                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  6668                           
  6669  162E  1683               	bsf	3,5	;RP0=1, select bank1
  6670  162F  1303               	bcf	3,6	;RP1=0, select bank1
  6671  1630  1914               	btfsc	20,2	;volatile
  6672  1631  2E2E               	goto	l375
  6673  1632  0811               	movf	17,w	;volatile
  6674  1633  391F               	andlw	31
  6675  1634  1903               	btfsc	3,2
  6676  1635  0008               	return
  6677  1636  2E2E               	goto	l375
  6678  1637                     __end_of_I2C_Master_Wait:	
  6679                           
  6680                           	psect	text28
  6681  08D5                     __ptext28:	
  6682 ;; *************** function _DEC_a_BCD *****************
  6683 ;; Defined at:
  6684 ;;		line 32 in file "RTC.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;  numDEC          1    wreg     unsigned char 
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;  numDEC          1    9[COMMON] unsigned char 
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  1    wreg      unsigned char 
  6691 ;; Registers used:
  6692 ;;		wreg, status,2, status,0, pclath, cstack
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6698 ;;      Params:         0       0       0       0       0
  6699 ;;      Locals:         1       0       0       0       0
  6700 ;;      Temps:          0       5       0       0       0
  6701 ;;      Totals:         1       5       0       0       0
  6702 ;;Total ram usage:        6 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:    2
  6705 ;; This function calls:
  6706 ;;		___awdiv
  6707 ;;		___awmod
  6708 ;; This function is called by:
  6709 ;;		_Zeit_Datum_Set
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713                           
  6714                           ;psect for function _DEC_a_BCD
  6715  08D5                     _DEC_a_BCD:	
  6716                           
  6717                           ;incstack = 0
  6718                           ; Regs used in _DEC_a_BCD: [wreg+status,2+status,0+pclath+cstack]
  6719                           ;DEC_a_BCD@numDEC stored from wreg
  6720  08D5  00F9               	movwf	DEC_a_BCD@numDEC
  6721                           
  6722                           ;RTC.c: 33:     return ((numDEC / 10) << 4) + (numDEC % 10);
  6723  08D6  300A               	movlw	10
  6724  08D7  1283               	bcf	3,5	;RP0=0, select bank0
  6725  08D8  1303               	bcf	3,6	;RP1=0, select bank0
  6726  08D9  00A0               	movwf	___awdiv@divisor
  6727  08DA  3000               	movlw	0
  6728  08DB  00A1               	movwf	___awdiv@divisor+1
  6729  08DC  0879               	movf	DEC_a_BCD@numDEC,w
  6730  08DD  00A8               	movwf	??_DEC_a_BCD
  6731  08DE  01A9               	clrf	??_DEC_a_BCD+1
  6732  08DF  0828               	movf	??_DEC_a_BCD,w
  6733  08E0  00A2               	movwf	___awdiv@dividend
  6734  08E1  0829               	movf	??_DEC_a_BCD+1,w
  6735  08E2  00A3               	movwf	___awdiv@dividend+1
  6736  08E3  120A  158A  2186  120A  158A  	fcall	___awdiv
  6737  08E8  1283               	bcf	3,5	;RP0=0, select bank0
  6738  08E9  1303               	bcf	3,6	;RP1=0, select bank0
  6739  08EA  0820               	movf	?___awdiv,w
  6740  08EB  00AA               	movwf	??_DEC_a_BCD+2
  6741  08EC  3004               	movlw	4
  6742  08ED                     u1755:	
  6743  08ED  1003               	clrc
  6744  08EE  0DAA               	rlf	??_DEC_a_BCD+2,f
  6745  08EF  3EFF               	addlw	-1
  6746  08F0  1D03               	skipz
  6747  08F1  28ED               	goto	u1755
  6748  08F2  300A               	movlw	10
  6749  08F3  00F2               	movwf	___awmod@divisor
  6750  08F4  3000               	movlw	0
  6751  08F5  00F3               	movwf	___awmod@divisor+1
  6752  08F6  0879               	movf	DEC_a_BCD@numDEC,w
  6753  08F7  00AB               	movwf	??_DEC_a_BCD+3
  6754  08F8  01AC               	clrf	??_DEC_a_BCD+4
  6755  08F9  082B               	movf	??_DEC_a_BCD+3,w
  6756  08FA  00F4               	movwf	___awmod@dividend
  6757  08FB  082C               	movf	??_DEC_a_BCD+4,w
  6758  08FC  00F5               	movwf	___awmod@dividend+1
  6759  08FD  120A  158A  213B   	fcall	___awmod
  6760  0900  0872               	movf	?___awmod,w
  6761  0901  1283               	bcf	3,5	;RP0=0, select bank0
  6762  0902  1303               	bcf	3,6	;RP1=0, select bank0
  6763  0903  072A               	addwf	??_DEC_a_BCD+2,w
  6764  0904  0008               	return
  6765  0905                     __end_of_DEC_a_BCD:	
  6766                           
  6767                           	psect	text29
  6768  093B                     __ptext29:	
  6769 ;; *************** function ___awmod *****************
  6770 ;; Defined at:
  6771 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  6772 ;; Parameters:    Size  Location     Type
  6773 ;;  divisor         2    2[COMMON] int 
  6774 ;;  dividend        2    4[COMMON] int 
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;  sign            1    8[COMMON] unsigned char 
  6777 ;;  counter         1    7[COMMON] unsigned char 
  6778 ;; Return value:  Size  Location     Type
  6779 ;;                  2    2[COMMON] int 
  6780 ;; Registers used:
  6781 ;;		wreg, status,2, status,0
  6782 ;; Tracked objects:
  6783 ;;		On entry : 0/0
  6784 ;;		On exit  : 0/0
  6785 ;;		Unchanged: 0/0
  6786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6787 ;;      Params:         4       0       0       0       0
  6788 ;;      Locals:         2       0       0       0       0
  6789 ;;      Temps:          1       0       0       0       0
  6790 ;;      Totals:         7       0       0       0       0
  6791 ;;Total ram usage:        7 bytes
  6792 ;; Hardware stack levels used:    1
  6793 ;; Hardware stack levels required when called:    1
  6794 ;; This function calls:
  6795 ;;		Nothing
  6796 ;; This function is called by:
  6797 ;;		_display_Uhrzeit
  6798 ;;		_display_Datum
  6799 ;;		_mostrarLCD
  6800 ;;		_DEC_a_BCD
  6801 ;; This function uses a non-reentrant model
  6802 ;;
  6803                           
  6804                           
  6805                           ;psect for function ___awmod
  6806  093B                     ___awmod:	
  6807                           
  6808                           ;incstack = 0
  6809                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6810  093B  01F8               	clrf	___awmod@sign
  6811  093C  1FF5               	btfss	___awmod@dividend+1,7
  6812  093D  2945               	goto	l4220
  6813  093E  09F4               	comf	___awmod@dividend,f
  6814  093F  09F5               	comf	___awmod@dividend+1,f
  6815  0940  0AF4               	incf	___awmod@dividend,f
  6816  0941  1903               	skipnz
  6817  0942  0AF5               	incf	___awmod@dividend+1,f
  6818  0943  01F8               	clrf	___awmod@sign
  6819  0944  0AF8               	incf	___awmod@sign,f
  6820  0945                     l4220:	
  6821  0945  1FF3               	btfss	___awmod@divisor+1,7
  6822  0946  294C               	goto	l4224
  6823  0947  09F2               	comf	___awmod@divisor,f
  6824  0948  09F3               	comf	___awmod@divisor+1,f
  6825  0949  0AF2               	incf	___awmod@divisor,f
  6826  094A  1903               	skipnz
  6827  094B  0AF3               	incf	___awmod@divisor+1,f
  6828  094C                     l4224:	
  6829  094C  0872               	movf	___awmod@divisor,w
  6830  094D  0473               	iorwf	___awmod@divisor+1,w
  6831  094E  1903               	btfsc	3,2
  6832  094F  2979               	goto	l4242
  6833  0950  01F7               	clrf	___awmod@counter
  6834  0951  0AF7               	incf	___awmod@counter,f
  6835  0952                     l4232:	
  6836  0952  1BF3               	btfsc	___awmod@divisor+1,7
  6837  0953  2960               	goto	l4234
  6838  0954  3001               	movlw	1
  6839  0955                     u1695:	
  6840  0955  1003               	clrc
  6841  0956  0DF2               	rlf	___awmod@divisor,f
  6842  0957  0DF3               	rlf	___awmod@divisor+1,f
  6843  0958  3EFF               	addlw	-1
  6844  0959  1D03               	skipz
  6845  095A  2955               	goto	u1695
  6846  095B  3001               	movlw	1
  6847  095C  00F6               	movwf	??___awmod
  6848  095D  0876               	movf	??___awmod,w
  6849  095E  07F7               	addwf	___awmod@counter,f
  6850  095F  2952               	goto	l4232
  6851  0960                     l4234:	
  6852  0960  0873               	movf	___awmod@divisor+1,w
  6853  0961  0275               	subwf	___awmod@dividend+1,w
  6854  0962  1D03               	skipz
  6855  0963  2966               	goto	u1715
  6856  0964  0872               	movf	___awmod@divisor,w
  6857  0965  0274               	subwf	___awmod@dividend,w
  6858  0966                     u1715:	
  6859  0966  1C03               	skipc
  6860  0967  296E               	goto	l4238
  6861  0968  0872               	movf	___awmod@divisor,w
  6862  0969  02F4               	subwf	___awmod@dividend,f
  6863  096A  0873               	movf	___awmod@divisor+1,w
  6864  096B  1C03               	skipc
  6865  096C  03F5               	decf	___awmod@dividend+1,f
  6866  096D  02F5               	subwf	___awmod@dividend+1,f
  6867  096E                     l4238:	
  6868  096E  3001               	movlw	1
  6869  096F                     u1725:	
  6870  096F  1003               	clrc
  6871  0970  0CF3               	rrf	___awmod@divisor+1,f
  6872  0971  0CF2               	rrf	___awmod@divisor,f
  6873  0972  3EFF               	addlw	-1
  6874  0973  1D03               	skipz
  6875  0974  296F               	goto	u1725
  6876  0975  3001               	movlw	1
  6877  0976  02F7               	subwf	___awmod@counter,f
  6878  0977  1D03               	btfss	3,2
  6879  0978  2960               	goto	l4234
  6880  0979                     l4242:	
  6881  0979  0878               	movf	___awmod@sign,w
  6882  097A  1903               	btfsc	3,2
  6883  097B  2981               	goto	l4246
  6884  097C  09F4               	comf	___awmod@dividend,f
  6885  097D  09F5               	comf	___awmod@dividend+1,f
  6886  097E  0AF4               	incf	___awmod@dividend,f
  6887  097F  1903               	skipnz
  6888  0980  0AF5               	incf	___awmod@dividend+1,f
  6889  0981                     l4246:	
  6890  0981  0875               	movf	___awmod@dividend+1,w
  6891  0982  00F3               	movwf	?___awmod+1
  6892  0983  0874               	movf	___awmod@dividend,w
  6893  0984  00F2               	movwf	?___awmod
  6894  0985  0008               	return
  6895  0986                     __end_of___awmod:	
  6896                           
  6897                           	psect	text30
  6898  0986                     __ptext30:	
  6899 ;; *************** function ___awdiv *****************
  6900 ;; Defined at:
  6901 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;  divisor         2    0[BANK0 ] int 
  6904 ;;  dividend        2    2[BANK0 ] int 
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;  quotient        2    6[BANK0 ] int 
  6907 ;;  sign            1    5[BANK0 ] unsigned char 
  6908 ;;  counter         1    4[BANK0 ] unsigned char 
  6909 ;; Return value:  Size  Location     Type
  6910 ;;                  2    0[BANK0 ] int 
  6911 ;; Registers used:
  6912 ;;		wreg, status,2, status,0
  6913 ;; Tracked objects:
  6914 ;;		On entry : 0/0
  6915 ;;		On exit  : 0/0
  6916 ;;		Unchanged: 0/0
  6917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6918 ;;      Params:         0       4       0       0       0
  6919 ;;      Locals:         0       4       0       0       0
  6920 ;;      Temps:          1       0       0       0       0
  6921 ;;      Totals:         1       8       0       0       0
  6922 ;;Total ram usage:        9 bytes
  6923 ;; Hardware stack levels used:    1
  6924 ;; Hardware stack levels required when called:    1
  6925 ;; This function calls:
  6926 ;;		Nothing
  6927 ;; This function is called by:
  6928 ;;		_display_Uhrzeit
  6929 ;;		_display_Datum
  6930 ;;		_mostrarLCD
  6931 ;;		_DEC_a_BCD
  6932 ;;		_uint_to_array
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936                           
  6937                           ;psect for function ___awdiv
  6938  0986                     ___awdiv:	
  6939                           
  6940                           ;incstack = 0
  6941                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6942  0986  1283               	bcf	3,5	;RP0=0, select bank0
  6943  0987  1303               	bcf	3,6	;RP1=0, select bank0
  6944  0988  01A5               	clrf	___awdiv@sign
  6945  0989  1FA1               	btfss	___awdiv@divisor+1,7
  6946  098A  2992               	goto	l4176
  6947  098B  09A0               	comf	___awdiv@divisor,f
  6948  098C  09A1               	comf	___awdiv@divisor+1,f
  6949  098D  0AA0               	incf	___awdiv@divisor,f
  6950  098E  1903               	skipnz
  6951  098F  0AA1               	incf	___awdiv@divisor+1,f
  6952  0990  01A5               	clrf	___awdiv@sign
  6953  0991  0AA5               	incf	___awdiv@sign,f
  6954  0992                     l4176:	
  6955  0992  1FA3               	btfss	___awdiv@dividend+1,7
  6956  0993  299D               	goto	l4182
  6957  0994  09A2               	comf	___awdiv@dividend,f
  6958  0995  09A3               	comf	___awdiv@dividend+1,f
  6959  0996  0AA2               	incf	___awdiv@dividend,f
  6960  0997  1903               	skipnz
  6961  0998  0AA3               	incf	___awdiv@dividend+1,f
  6962  0999  3001               	movlw	1
  6963  099A  00F8               	movwf	??___awdiv
  6964  099B  0878               	movf	??___awdiv,w
  6965  099C  06A5               	xorwf	___awdiv@sign,f
  6966  099D                     l4182:	
  6967  099D  01A6               	clrf	___awdiv@quotient
  6968  099E  01A7               	clrf	___awdiv@quotient+1
  6969  099F  0820               	movf	___awdiv@divisor,w
  6970  09A0  0421               	iorwf	___awdiv@divisor+1,w
  6971  09A1  1903               	btfsc	3,2
  6972  09A2  29D4               	goto	l4204
  6973  09A3  01A4               	clrf	___awdiv@counter
  6974  09A4  0AA4               	incf	___awdiv@counter,f
  6975  09A5                     l4192:	
  6976  09A5  1BA1               	btfsc	___awdiv@divisor+1,7
  6977  09A6  29B3               	goto	l4194
  6978  09A7  3001               	movlw	1
  6979  09A8                     u1595:	
  6980  09A8  1003               	clrc
  6981  09A9  0DA0               	rlf	___awdiv@divisor,f
  6982  09AA  0DA1               	rlf	___awdiv@divisor+1,f
  6983  09AB  3EFF               	addlw	-1
  6984  09AC  1D03               	skipz
  6985  09AD  29A8               	goto	u1595
  6986  09AE  3001               	movlw	1
  6987  09AF  00F8               	movwf	??___awdiv
  6988  09B0  0878               	movf	??___awdiv,w
  6989  09B1  07A4               	addwf	___awdiv@counter,f
  6990  09B2  29A5               	goto	l4192
  6991  09B3                     l4194:	
  6992  09B3  3001               	movlw	1
  6993  09B4                     u1615:	
  6994  09B4  1003               	clrc
  6995  09B5  0DA6               	rlf	___awdiv@quotient,f
  6996  09B6  0DA7               	rlf	___awdiv@quotient+1,f
  6997  09B7  3EFF               	addlw	-1
  6998  09B8  1D03               	skipz
  6999  09B9  29B4               	goto	u1615
  7000  09BA  0821               	movf	___awdiv@divisor+1,w
  7001  09BB  0223               	subwf	___awdiv@dividend+1,w
  7002  09BC  1D03               	skipz
  7003  09BD  29C0               	goto	u1625
  7004  09BE  0820               	movf	___awdiv@divisor,w
  7005  09BF  0222               	subwf	___awdiv@dividend,w
  7006  09C0                     u1625:	
  7007  09C0  1C03               	skipc
  7008  09C1  29C9               	goto	l4200
  7009  09C2  0820               	movf	___awdiv@divisor,w
  7010  09C3  02A2               	subwf	___awdiv@dividend,f
  7011  09C4  0821               	movf	___awdiv@divisor+1,w
  7012  09C5  1C03               	skipc
  7013  09C6  03A3               	decf	___awdiv@dividend+1,f
  7014  09C7  02A3               	subwf	___awdiv@dividend+1,f
  7015  09C8  1426               	bsf	___awdiv@quotient,0
  7016  09C9                     l4200:	
  7017  09C9  3001               	movlw	1
  7018  09CA                     u1635:	
  7019  09CA  1003               	clrc
  7020  09CB  0CA1               	rrf	___awdiv@divisor+1,f
  7021  09CC  0CA0               	rrf	___awdiv@divisor,f
  7022  09CD  3EFF               	addlw	-1
  7023  09CE  1D03               	skipz
  7024  09CF  29CA               	goto	u1635
  7025  09D0  3001               	movlw	1
  7026  09D1  02A4               	subwf	___awdiv@counter,f
  7027  09D2  1D03               	btfss	3,2
  7028  09D3  29B3               	goto	l4194
  7029  09D4                     l4204:	
  7030  09D4  0825               	movf	___awdiv@sign,w
  7031  09D5  1903               	btfsc	3,2
  7032  09D6  29DC               	goto	l4208
  7033  09D7  09A6               	comf	___awdiv@quotient,f
  7034  09D8  09A7               	comf	___awdiv@quotient+1,f
  7035  09D9  0AA6               	incf	___awdiv@quotient,f
  7036  09DA  1903               	skipnz
  7037  09DB  0AA7               	incf	___awdiv@quotient+1,f
  7038  09DC                     l4208:	
  7039  09DC  0827               	movf	___awdiv@quotient+1,w
  7040  09DD  00A1               	movwf	?___awdiv+1
  7041  09DE  0826               	movf	___awdiv@quotient,w
  7042  09DF  00A0               	movwf	?___awdiv
  7043  09E0  0008               	return
  7044  09E1                     __end_of___awdiv:	
  7045                           
  7046                           	psect	text31
  7047  0D32                     __ptext31:	
  7048 ;; *************** function _OSC_config *****************
  7049 ;; Defined at:
  7050 ;;		line 398 in file "main_Master.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  frecuencia      4    2[COMMON] unsigned long 
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;		None
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1    wreg      void 
  7057 ;; Registers used:
  7058 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7064 ;;      Params:         4       0       0       0       0
  7065 ;;      Locals:         0       0       0       0       0
  7066 ;;      Temps:          0       0       0       0       0
  7067 ;;      Totals:         4       0       0       0       0
  7068 ;;Total ram usage:        4 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:    1
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		_SetUp
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           
  7079                           ;psect for function _OSC_config
  7080  0D32                     _OSC_config:	
  7081                           
  7082                           ;main_Master.c: 399:     switch(frecuencia){
  7083                           
  7084                           ;incstack = 0
  7085                           ; Regs used in _OSC_config: [wreg-fsr0h+status,2+status,0]
  7086  0D32  2D6E               	goto	l2902
  7087  0D33                     l2884:	
  7088                           
  7089                           ;main_Master.c: 401:             OSCCONbits.IRCF = 0b111;
  7090  0D33  3070               	movlw	112
  7091  0D34  1683               	bsf	3,5	;RP0=1, select bank1
  7092  0D35  1303               	bcf	3,6	;RP1=0, select bank1
  7093  0D36  048F               	iorwf	15,f	;volatile
  7094                           
  7095                           ;main_Master.c: 402:             break;
  7096  0D37  0008               	return
  7097  0D38                     l2886:	
  7098                           
  7099                           ;main_Master.c: 404:             OSCCONbits.IRCF = 0b110;
  7100  0D38  1683               	bsf	3,5	;RP0=1, select bank1
  7101  0D39  1303               	bcf	3,6	;RP1=0, select bank1
  7102  0D3A  080F               	movf	15,w	;volatile
  7103  0D3B  398F               	andlw	-113
  7104  0D3C  3860               	iorlw	96
  7105  0D3D  008F               	movwf	15	;volatile
  7106                           
  7107                           ;main_Master.c: 405:             break;
  7108  0D3E  0008               	return
  7109  0D3F                     l2888:	
  7110                           
  7111                           ;main_Master.c: 407:             OSCCONbits.IRCF = 0b101;
  7112  0D3F  1683               	bsf	3,5	;RP0=1, select bank1
  7113  0D40  1303               	bcf	3,6	;RP1=0, select bank1
  7114  0D41  080F               	movf	15,w	;volatile
  7115  0D42  398F               	andlw	-113
  7116  0D43  3850               	iorlw	80
  7117  0D44  008F               	movwf	15	;volatile
  7118                           
  7119                           ;main_Master.c: 408:             break;
  7120  0D45  0008               	return
  7121  0D46                     l2890:	
  7122                           
  7123                           ;main_Master.c: 410:             OSCCONbits.IRCF = 0b100;
  7124  0D46  1683               	bsf	3,5	;RP0=1, select bank1
  7125  0D47  1303               	bcf	3,6	;RP1=0, select bank1
  7126  0D48  080F               	movf	15,w	;volatile
  7127  0D49  398F               	andlw	-113
  7128  0D4A  3840               	iorlw	64
  7129  0D4B  008F               	movwf	15	;volatile
  7130                           
  7131                           ;main_Master.c: 411:             break;
  7132  0D4C  0008               	return
  7133  0D4D                     l2892:	
  7134                           
  7135                           ;main_Master.c: 413:             OSCCONbits.IRCF = 0b011;
  7136  0D4D  1683               	bsf	3,5	;RP0=1, select bank1
  7137  0D4E  1303               	bcf	3,6	;RP1=0, select bank1
  7138  0D4F  080F               	movf	15,w	;volatile
  7139  0D50  398F               	andlw	-113
  7140  0D51  3830               	iorlw	48
  7141  0D52  008F               	movwf	15	;volatile
  7142                           
  7143                           ;main_Master.c: 414:             break;
  7144  0D53  0008               	return
  7145  0D54                     l2894:	
  7146                           
  7147                           ;main_Master.c: 416:             OSCCONbits.IRCF = 0b010;
  7148  0D54  1683               	bsf	3,5	;RP0=1, select bank1
  7149  0D55  1303               	bcf	3,6	;RP1=0, select bank1
  7150  0D56  080F               	movf	15,w	;volatile
  7151  0D57  398F               	andlw	-113
  7152  0D58  3820               	iorlw	32
  7153  0D59  008F               	movwf	15	;volatile
  7154                           
  7155                           ;main_Master.c: 417:             break;
  7156  0D5A  0008               	return
  7157  0D5B                     l2896:	
  7158                           
  7159                           ;main_Master.c: 419:             OSCCONbits.IRCF = 0b001;
  7160  0D5B  1683               	bsf	3,5	;RP0=1, select bank1
  7161  0D5C  1303               	bcf	3,6	;RP1=0, select bank1
  7162  0D5D  080F               	movf	15,w	;volatile
  7163  0D5E  398F               	andlw	-113
  7164  0D5F  3810               	iorlw	16
  7165  0D60  008F               	movwf	15	;volatile
  7166                           
  7167                           ;main_Master.c: 420:             break;
  7168  0D61  0008               	return
  7169  0D62                     l2898:	
  7170                           
  7171                           ;main_Master.c: 422:             OSCCONbits.IRCF = 0b000;
  7172  0D62  308F               	movlw	-113
  7173  0D63  1683               	bsf	3,5	;RP0=1, select bank1
  7174  0D64  1303               	bcf	3,6	;RP1=0, select bank1
  7175  0D65  058F               	andwf	15,f	;volatile
  7176                           
  7177                           ;main_Master.c: 423:             break;
  7178  0D66  0008               	return
  7179  0D67                     l2900:	
  7180                           
  7181                           ;main_Master.c: 425:             OSCCONbits.IRCF = 0b110;
  7182  0D67  1683               	bsf	3,5	;RP0=1, select bank1
  7183  0D68  1303               	bcf	3,6	;RP1=0, select bank1
  7184  0D69  080F               	movf	15,w	;volatile
  7185  0D6A  398F               	andlw	-113
  7186  0D6B  3860               	iorlw	96
  7187  0D6C  008F               	movwf	15	;volatile
  7188                           
  7189                           ;main_Master.c: 426:     }
  7190  0D6D  0008               	return
  7191  0D6E                     l2902:	
  7192                           
  7193                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 9 sub-sw
      +                          itches
  7194                           ; Switch size 1, requested type "simple"
  7195                           ; Number of cases is 1, Range of values is 0 to 0
  7196                           ; switch strategies available:
  7197                           ; Name         Instructions Cycles
  7198                           ; simple_byte            4     3 (average)
  7199                           ; direct_byte           11     8 (fixed)
  7200                           ; jumptable            260     6 (fixed)
  7201                           ;	Chosen strategy is simple_byte
  7202  0D6E  0875               	movf	OSC_config@frecuencia+3,w
  7203  0D6F  3A00               	xorlw	0	; case 0
  7204  0D70  1903               	skipnz
  7205  0D71  2DC3               	goto	l5176
  7206  0D72  2D67               	goto	l2900
  7207  0D73                     l5160:	
  7208                           
  7209                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7210                           ; Switch size 1, requested type "simple"
  7211                           ; Number of cases is 1, Range of values is 125 to 125
  7212                           ; switch strategies available:
  7213                           ; Name         Instructions Cycles
  7214                           ; simple_byte            4     3 (average)
  7215                           ; direct_byte           14    11 (fixed)
  7216                           ; jumptable            263     9 (fixed)
  7217                           ;	Chosen strategy is simple_byte
  7218  0D73  0873               	movf	OSC_config@frecuencia+1,w
  7219  0D74  3A7D               	xorlw	125	; case 125
  7220  0D75  1903               	skipnz
  7221  0D76  2D78               	goto	l5178
  7222  0D77  2D67               	goto	l2900
  7223  0D78                     l5178:	
  7224                           
  7225                           ; Switch size 1, requested type "simple"
  7226                           ; Number of cases is 1, Range of values is 0 to 0
  7227                           ; switch strategies available:
  7228                           ; Name         Instructions Cycles
  7229                           ; simple_byte            4     3 (average)
  7230                           ; direct_byte           11     8 (fixed)
  7231                           ; jumptable            260     6 (fixed)
  7232                           ;	Chosen strategy is simple_byte
  7233  0D78  0872               	movf	OSC_config@frecuencia,w
  7234  0D79  3A00               	xorlw	0	; case 0
  7235  0D7A  1903               	skipnz
  7236  0D7B  2D62               	goto	l2898
  7237  0D7C  2D67               	goto	l2900
  7238  0D7D                     l5162:	
  7239                           
  7240                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7241                           ; Switch size 1, requested type "simple"
  7242                           ; Number of cases is 1, Range of values is 232 to 232
  7243                           ; switch strategies available:
  7244                           ; Name         Instructions Cycles
  7245                           ; simple_byte            4     3 (average)
  7246                           ; direct_byte           14    11 (fixed)
  7247                           ; jumptable            263     9 (fixed)
  7248                           ;	Chosen strategy is simple_byte
  7249  0D7D  0873               	movf	OSC_config@frecuencia+1,w
  7250  0D7E  3AE8               	xorlw	232	; case 232
  7251  0D7F  1903               	skipnz
  7252  0D80  2D82               	goto	l5180
  7253  0D81  2D67               	goto	l2900
  7254  0D82                     l5180:	
  7255                           
  7256                           ; Switch size 1, requested type "simple"
  7257                           ; Number of cases is 1, Range of values is 72 to 72
  7258                           ; switch strategies available:
  7259                           ; Name         Instructions Cycles
  7260                           ; simple_byte            4     3 (average)
  7261                           ; direct_byte           14    11 (fixed)
  7262                           ; jumptable            263     9 (fixed)
  7263                           ;	Chosen strategy is simple_byte
  7264  0D82  0872               	movf	OSC_config@frecuencia,w
  7265  0D83  3A48               	xorlw	72	; case 72
  7266  0D84  1903               	skipnz
  7267  0D85  2D5B               	goto	l2896
  7268  0D86  2D67               	goto	l2900
  7269  0D87                     l5164:	
  7270                           
  7271                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7272                           ; Switch size 1, requested type "simple"
  7273                           ; Number of cases is 1, Range of values is 208 to 208
  7274                           ; switch strategies available:
  7275                           ; Name         Instructions Cycles
  7276                           ; simple_byte            4     3 (average)
  7277                           ; direct_byte           14    11 (fixed)
  7278                           ; jumptable            263     9 (fixed)
  7279                           ;	Chosen strategy is simple_byte
  7280  0D87  0873               	movf	OSC_config@frecuencia+1,w
  7281  0D88  3AD0               	xorlw	208	; case 208
  7282  0D89  1903               	skipnz
  7283  0D8A  2D8C               	goto	l5182
  7284  0D8B  2D67               	goto	l2900
  7285  0D8C                     l5182:	
  7286                           
  7287                           ; Switch size 1, requested type "simple"
  7288                           ; Number of cases is 1, Range of values is 144 to 144
  7289                           ; switch strategies available:
  7290                           ; Name         Instructions Cycles
  7291                           ; simple_byte            4     3 (average)
  7292                           ; direct_byte           14    11 (fixed)
  7293                           ; jumptable            263     9 (fixed)
  7294                           ;	Chosen strategy is simple_byte
  7295  0D8C  0872               	movf	OSC_config@frecuencia,w
  7296  0D8D  3A90               	xorlw	144	; case 144
  7297  0D8E  1903               	skipnz
  7298  0D8F  2D54               	goto	l2894
  7299  0D90  2D67               	goto	l2900
  7300  0D91                     l5166:	
  7301                           
  7302                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7303                           ; Switch size 1, requested type "simple"
  7304                           ; Number of cases is 1, Range of values is 161 to 161
  7305                           ; switch strategies available:
  7306                           ; Name         Instructions Cycles
  7307                           ; simple_byte            4     3 (average)
  7308                           ; direct_byte           14    11 (fixed)
  7309                           ; jumptable            263     9 (fixed)
  7310                           ;	Chosen strategy is simple_byte
  7311  0D91  0873               	movf	OSC_config@frecuencia+1,w
  7312  0D92  3AA1               	xorlw	161	; case 161
  7313  0D93  1903               	skipnz
  7314  0D94  2D96               	goto	l5184
  7315  0D95  2D67               	goto	l2900
  7316  0D96                     l5184:	
  7317                           
  7318                           ; Switch size 1, requested type "simple"
  7319                           ; Number of cases is 1, Range of values is 32 to 32
  7320                           ; switch strategies available:
  7321                           ; Name         Instructions Cycles
  7322                           ; simple_byte            4     3 (average)
  7323                           ; direct_byte           14    11 (fixed)
  7324                           ; jumptable            263     9 (fixed)
  7325                           ;	Chosen strategy is simple_byte
  7326  0D96  0872               	movf	OSC_config@frecuencia,w
  7327  0D97  3A20               	xorlw	32	; case 32
  7328  0D98  1903               	skipnz
  7329  0D99  2D4D               	goto	l2892
  7330  0D9A  2D67               	goto	l2900
  7331  0D9B                     l5168:	
  7332                           
  7333                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7334                           ; Switch size 1, requested type "simple"
  7335                           ; Number of cases is 1, Range of values is 66 to 66
  7336                           ; switch strategies available:
  7337                           ; Name         Instructions Cycles
  7338                           ; simple_byte            4     3 (average)
  7339                           ; direct_byte           14    11 (fixed)
  7340                           ; jumptable            263     9 (fixed)
  7341                           ;	Chosen strategy is simple_byte
  7342  0D9B  0873               	movf	OSC_config@frecuencia+1,w
  7343  0D9C  3A42               	xorlw	66	; case 66
  7344  0D9D  1903               	skipnz
  7345  0D9E  2DA0               	goto	l5186
  7346  0D9F  2D67               	goto	l2900
  7347  0DA0                     l5186:	
  7348                           
  7349                           ; Switch size 1, requested type "simple"
  7350                           ; Number of cases is 1, Range of values is 64 to 64
  7351                           ; switch strategies available:
  7352                           ; Name         Instructions Cycles
  7353                           ; simple_byte            4     3 (average)
  7354                           ; direct_byte           14    11 (fixed)
  7355                           ; jumptable            263     9 (fixed)
  7356                           ;	Chosen strategy is simple_byte
  7357  0DA0  0872               	movf	OSC_config@frecuencia,w
  7358  0DA1  3A40               	xorlw	64	; case 64
  7359  0DA2  1903               	skipnz
  7360  0DA3  2D46               	goto	l2890
  7361  0DA4  2D67               	goto	l2900
  7362  0DA5                     l5170:	
  7363                           
  7364                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7365                           ; Switch size 1, requested type "simple"
  7366                           ; Number of cases is 1, Range of values is 132 to 132
  7367                           ; switch strategies available:
  7368                           ; Name         Instructions Cycles
  7369                           ; simple_byte            4     3 (average)
  7370                           ; direct_byte           14    11 (fixed)
  7371                           ; jumptable            263     9 (fixed)
  7372                           ;	Chosen strategy is simple_byte
  7373  0DA5  0873               	movf	OSC_config@frecuencia+1,w
  7374  0DA6  3A84               	xorlw	132	; case 132
  7375  0DA7  1903               	skipnz
  7376  0DA8  2DAA               	goto	l5188
  7377  0DA9  2D67               	goto	l2900
  7378  0DAA                     l5188:	
  7379                           
  7380                           ; Switch size 1, requested type "simple"
  7381                           ; Number of cases is 1, Range of values is 128 to 128
  7382                           ; switch strategies available:
  7383                           ; Name         Instructions Cycles
  7384                           ; simple_byte            4     3 (average)
  7385                           ; direct_byte           14    11 (fixed)
  7386                           ; jumptable            263     9 (fixed)
  7387                           ;	Chosen strategy is simple_byte
  7388  0DAA  0872               	movf	OSC_config@frecuencia,w
  7389  0DAB  3A80               	xorlw	128	; case 128
  7390  0DAC  1903               	skipnz
  7391  0DAD  2D3F               	goto	l2888
  7392  0DAE  2D67               	goto	l2900
  7393  0DAF                     l5172:	
  7394                           
  7395                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7396                           ; Switch size 1, requested type "simple"
  7397                           ; Number of cases is 1, Range of values is 9 to 9
  7398                           ; switch strategies available:
  7399                           ; Name         Instructions Cycles
  7400                           ; simple_byte            4     3 (average)
  7401                           ; direct_byte           14    11 (fixed)
  7402                           ; jumptable            263     9 (fixed)
  7403                           ;	Chosen strategy is simple_byte
  7404  0DAF  0873               	movf	OSC_config@frecuencia+1,w
  7405  0DB0  3A09               	xorlw	9	; case 9
  7406  0DB1  1903               	skipnz
  7407  0DB2  2DB4               	goto	l5190
  7408  0DB3  2D67               	goto	l2900
  7409  0DB4                     l5190:	
  7410                           
  7411                           ; Switch size 1, requested type "simple"
  7412                           ; Number of cases is 1, Range of values is 0 to 0
  7413                           ; switch strategies available:
  7414                           ; Name         Instructions Cycles
  7415                           ; simple_byte            4     3 (average)
  7416                           ; direct_byte           11     8 (fixed)
  7417                           ; jumptable            260     6 (fixed)
  7418                           ;	Chosen strategy is simple_byte
  7419  0DB4  0872               	movf	OSC_config@frecuencia,w
  7420  0DB5  3A00               	xorlw	0	; case 0
  7421  0DB6  1903               	skipnz
  7422  0DB7  2D38               	goto	l2886
  7423  0DB8  2D67               	goto	l2900
  7424  0DB9                     l5174:	
  7425                           
  7426                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7427                           ; Switch size 1, requested type "simple"
  7428                           ; Number of cases is 1, Range of values is 18 to 18
  7429                           ; switch strategies available:
  7430                           ; Name         Instructions Cycles
  7431                           ; simple_byte            4     3 (average)
  7432                           ; direct_byte           14    11 (fixed)
  7433                           ; jumptable            263     9 (fixed)
  7434                           ;	Chosen strategy is simple_byte
  7435  0DB9  0873               	movf	OSC_config@frecuencia+1,w
  7436  0DBA  3A12               	xorlw	18	; case 18
  7437  0DBB  1903               	skipnz
  7438  0DBC  2DBE               	goto	l5192
  7439  0DBD  2D67               	goto	l2900
  7440  0DBE                     l5192:	
  7441                           
  7442                           ; Switch size 1, requested type "simple"
  7443                           ; Number of cases is 1, Range of values is 0 to 0
  7444                           ; switch strategies available:
  7445                           ; Name         Instructions Cycles
  7446                           ; simple_byte            4     3 (average)
  7447                           ; direct_byte           11     8 (fixed)
  7448                           ; jumptable            260     6 (fixed)
  7449                           ;	Chosen strategy is simple_byte
  7450  0DBE  0872               	movf	OSC_config@frecuencia,w
  7451  0DBF  3A00               	xorlw	0	; case 0
  7452  0DC0  1903               	skipnz
  7453  0DC1  2D33               	goto	l2884
  7454  0DC2  2D67               	goto	l2900
  7455  0DC3                     l5176:	
  7456                           
  7457                           ; Switch size 1, requested type "simple"
  7458                           ; Number of cases is 8, Range of values is 0 to 122
  7459                           ; switch strategies available:
  7460                           ; Name         Instructions Cycles
  7461                           ; simple_byte           25    13 (average)
  7462                           ; jumptable            260     6 (fixed)
  7463                           ;	Chosen strategy is simple_byte
  7464  0DC3  0874               	movf	OSC_config@frecuencia+2,w
  7465  0DC4  3A00               	xorlw	0	; case 0
  7466  0DC5  1903               	skipnz
  7467  0DC6  2D73               	goto	l5160
  7468  0DC7  3A01               	xorlw	1	; case 1
  7469  0DC8  1903               	skipnz
  7470  0DC9  2D7D               	goto	l5162
  7471  0DCA  3A02               	xorlw	2	; case 3
  7472  0DCB  1903               	skipnz
  7473  0DCC  2D87               	goto	l5164
  7474  0DCD  3A04               	xorlw	4	; case 7
  7475  0DCE  1903               	skipnz
  7476  0DCF  2D91               	goto	l5166
  7477  0DD0  3A08               	xorlw	8	; case 15
  7478  0DD1  1903               	skipnz
  7479  0DD2  2D9B               	goto	l5168
  7480  0DD3  3A11               	xorlw	17	; case 30
  7481  0DD4  1903               	skipnz
  7482  0DD5  2DA5               	goto	l5170
  7483  0DD6  3A23               	xorlw	35	; case 61
  7484  0DD7  1903               	skipnz
  7485  0DD8  2DAF               	goto	l5172
  7486  0DD9  3A47               	xorlw	71	; case 122
  7487  0DDA  1903               	skipnz
  7488  0DDB  2DB9               	goto	l5174
  7489  0DDC  2D67               	goto	l2900
  7490  0DDD  0008               	return
  7491  0DDE                     __end_of_OSC_config:	
  7492                           
  7493                           	psect	text32
  7494  0A41                     __ptext32:	
  7495 ;; *************** function _LCD_init *****************
  7496 ;; Defined at:
  7497 ;;		line 44 in file "LCD_8bits.c"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;		None
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;		None
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  1    wreg      void 
  7504 ;; Registers used:
  7505 ;;		wreg, status,2, status,0, pclath, cstack
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7511 ;;      Params:         0       0       0       0       0
  7512 ;;      Locals:         0       0       0       0       0
  7513 ;;      Temps:          2       0       0       0       0
  7514 ;;      Totals:         2       0       0       0       0
  7515 ;;Total ram usage:        2 bytes
  7516 ;; Hardware stack levels used:    1
  7517 ;; Hardware stack levels required when called:    2
  7518 ;; This function calls:
  7519 ;;		_LCD_Cmd
  7520 ;; This function is called by:
  7521 ;;		_SetUp
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525                           
  7526                           ;psect for function _LCD_init
  7527  0A41                     _LCD_init:	
  7528                           
  7529                           ;LCD_8bits.c: 45:     _delay((unsigned long)((20)*(4000000/4000.0)));
  7530                           
  7531                           ;incstack = 0
  7532                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  7533  0A41  301A               	movlw	26
  7534  0A42  00F6               	movwf	??_LCD_init+1
  7535  0A43  30F8               	movlw	248
  7536  0A44  00F5               	movwf	??_LCD_init
  7537  0A45                     u2257:	
  7538  0A45  0BF5               	decfsz	??_LCD_init,f
  7539  0A46  2A45               	goto	u2257
  7540  0A47  0BF6               	decfsz	??_LCD_init+1,f
  7541  0A48  2A45               	goto	u2257
  7542  0A49  0000               	nop
  7543                           
  7544                           ;LCD_8bits.c: 46:     LCD_Cmd(0x30);
  7545  0A4A  3030               	movlw	48
  7546  0A4B  160A  118A  27D1  120A  158A  	fcall	_LCD_Cmd
  7547                           
  7548                           ;LCD_8bits.c: 47:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7549  0A50  3007               	movlw	7
  7550  0A51  00F6               	movwf	??_LCD_init+1
  7551  0A52  307D               	movlw	125
  7552  0A53  00F5               	movwf	??_LCD_init
  7553  0A54                     u2267:	
  7554  0A54  0BF5               	decfsz	??_LCD_init,f
  7555  0A55  2A54               	goto	u2267
  7556  0A56  0BF6               	decfsz	??_LCD_init+1,f
  7557  0A57  2A54               	goto	u2267
  7558                           
  7559                           ;LCD_8bits.c: 48:     LCD_Cmd(0x30);
  7560  0A58  3030               	movlw	48
  7561  0A59  160A  118A  27D1  120A  158A  	fcall	_LCD_Cmd
  7562                           
  7563                           ;LCD_8bits.c: 49:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7564  0A5E  3021               	movlw	33
  7565  0A5F  00F5               	movwf	??_LCD_init
  7566  0A60                     u2277:	
  7567  0A60  0BF5               	decfsz	??_LCD_init,f
  7568  0A61  2A60               	goto	u2277
  7569                           
  7570                           ;LCD_8bits.c: 50:     LCD_Cmd(0x30);
  7571  0A62  3030               	movlw	48
  7572  0A63  160A  118A  27D1  120A  158A  	fcall	_LCD_Cmd
  7573                           
  7574                           ;LCD_8bits.c: 51:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7575  0A68  3021               	movlw	33
  7576  0A69  00F5               	movwf	??_LCD_init
  7577  0A6A                     u2287:	
  7578  0A6A  0BF5               	decfsz	??_LCD_init,f
  7579  0A6B  2A6A               	goto	u2287
  7580                           
  7581                           ;LCD_8bits.c: 52:     LCD_Cmd(0x38);
  7582  0A6C  3038               	movlw	56
  7583  0A6D  160A  118A  27D1  120A  158A  	fcall	_LCD_Cmd
  7584                           
  7585                           ;LCD_8bits.c: 53:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7586  0A72  3011               	movlw	17
  7587  0A73  00F5               	movwf	??_LCD_init
  7588  0A74                     u2297:	
  7589  0A74  0BF5               	decfsz	??_LCD_init,f
  7590  0A75  2A74               	goto	u2297
  7591  0A76  0000               	nop
  7592                           
  7593                           ;LCD_8bits.c: 54:     LCD_Cmd(0x08);
  7594  0A77  3008               	movlw	8
  7595  0A78  160A  118A  27D1  120A  158A  	fcall	_LCD_Cmd
  7596                           
  7597                           ;LCD_8bits.c: 55:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7598  0A7D  3011               	movlw	17
  7599  0A7E  00F5               	movwf	??_LCD_init
  7600  0A7F                     u2307:	
  7601  0A7F  0BF5               	decfsz	??_LCD_init,f
  7602  0A80  2A7F               	goto	u2307
  7603  0A81  0000               	nop
  7604                           
  7605                           ;LCD_8bits.c: 56:     LCD_Cmd(0x01);
  7606  0A82  3001               	movlw	1
  7607  0A83  160A  118A  27D1  120A  158A  	fcall	_LCD_Cmd
  7608                           
  7609                           ;LCD_8bits.c: 57:     _delay((unsigned long)((3)*(4000000/4000.0)));
  7610  0A88  3004               	movlw	4
  7611  0A89  00F6               	movwf	??_LCD_init+1
  7612  0A8A  30E4               	movlw	228
  7613  0A8B  00F5               	movwf	??_LCD_init
  7614  0A8C                     u2317:	
  7615  0A8C  0BF5               	decfsz	??_LCD_init,f
  7616  0A8D  2A8C               	goto	u2317
  7617  0A8E  0BF6               	decfsz	??_LCD_init+1,f
  7618  0A8F  2A8C               	goto	u2317
  7619  0A90  0000               	nop
  7620                           
  7621                           ;LCD_8bits.c: 58:     LCD_Cmd(0x06);
  7622  0A91  3006               	movlw	6
  7623  0A92  160A  118A  27D1  120A  158A  	fcall	_LCD_Cmd
  7624                           
  7625                           ;LCD_8bits.c: 59:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7626  0A97  3011               	movlw	17
  7627  0A98  00F5               	movwf	??_LCD_init
  7628  0A99                     u2327:	
  7629  0A99  0BF5               	decfsz	??_LCD_init,f
  7630  0A9A  2A99               	goto	u2327
  7631  0A9B  0000               	nop
  7632                           
  7633                           ;LCD_8bits.c: 60:     LCD_Cmd(0x0C);
  7634  0A9C  300C               	movlw	12
  7635  0A9D  160A  118A  27D1  120A  158A  	fcall	_LCD_Cmd
  7636                           
  7637                           ;LCD_8bits.c: 61:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7638  0AA2  3011               	movlw	17
  7639  0AA3  00F5               	movwf	??_LCD_init
  7640  0AA4                     u2337:	
  7641  0AA4  0BF5               	decfsz	??_LCD_init,f
  7642  0AA5  2AA4               	goto	u2337
  7643  0AA6  0000               	nop
  7644  0AA7  0008               	return
  7645  0AA8                     __end_of_LCD_init:	
  7646                           
  7647                           	psect	text33
  7648  168E                     __ptext33:	
  7649 ;; *************** function _LCD_clear *****************
  7650 ;; Defined at:
  7651 ;;		line 32 in file "LCD_8bits.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;		None
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;		None
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  1    wreg      void 
  7658 ;; Registers used:
  7659 ;;		wreg, status,2, status,0, pclath, cstack
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7665 ;;      Params:         0       0       0       0       0
  7666 ;;      Locals:         0       0       0       0       0
  7667 ;;      Temps:          2       0       0       0       0
  7668 ;;      Totals:         2       0       0       0       0
  7669 ;;Total ram usage:        2 bytes
  7670 ;; Hardware stack levels used:    1
  7671 ;; Hardware stack levels required when called:    2
  7672 ;; This function calls:
  7673 ;;		_LCD_Cmd
  7674 ;; This function is called by:
  7675 ;;		_SetUp
  7676 ;;		_mostrarLCD
  7677 ;;		_pressBoton1
  7678 ;;		_pressBoton2
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           
  7683                           ;psect for function _LCD_clear
  7684  168E                     _LCD_clear:	
  7685                           
  7686                           ;LCD_8bits.c: 33:     LCD_Cmd(0x00);
  7687                           
  7688                           ;incstack = 0
  7689                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  7690  168E  3000               	movlw	0
  7691  168F  160A  118A  27D1  160A  118A  	fcall	_LCD_Cmd
  7692                           
  7693                           ;LCD_8bits.c: 34:     LCD_Cmd(0x01);
  7694  1694  3001               	movlw	1
  7695  1695  160A  118A  27D1  160A  118A  	fcall	_LCD_Cmd
  7696                           
  7697                           ;LCD_8bits.c: 35:     _delay((unsigned long)((4)*(4000000/4000.0)));
  7698  169A  3006               	movlw	6
  7699  169B  00F6               	movwf	??_LCD_clear+1
  7700  169C  3030               	movlw	48
  7701  169D  00F5               	movwf	??_LCD_clear
  7702  169E                     u2347:	
  7703  169E  0BF5               	decfsz	??_LCD_clear,f
  7704  169F  2E9E               	goto	u2347
  7705  16A0  0BF6               	decfsz	??_LCD_clear+1,f
  7706  16A1  2E9E               	goto	u2347
  7707  16A2  0000               	nop
  7708  16A3  0008               	return
  7709  16A4                     __end_of_LCD_clear:	
  7710                           
  7711                           	psect	text34
  7712  174D                     __ptext34:	
  7713 ;; *************** function _LCD_Create_Char *****************
  7714 ;; Defined at:
  7715 ;;		line 116 in file "LCD_8bits.c"
  7716 ;; Parameters:    Size  Location     Type
  7717 ;;  charnum         1    wreg     unsigned char 
  7718 ;;  chardata        1    5[COMMON] PTR const unsigned char 
  7719 ;;		 -> arrowr_vacio(8), gota(8), termometro(8), arrowr(8), 
  7720 ;;		 -> atilde(8), 
  7721 ;; Auto vars:     Size  Location     Type
  7722 ;;  charnum         1    7[COMMON] unsigned char 
  7723 ;;  n               1    8[COMMON] unsigned char 
  7724 ;; Return value:  Size  Location     Type
  7725 ;;                  1    wreg      void 
  7726 ;; Registers used:
  7727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7728 ;; Tracked objects:
  7729 ;;		On entry : 0/0
  7730 ;;		On exit  : 0/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7733 ;;      Params:         1       0       0       0       0
  7734 ;;      Locals:         2       0       0       0       0
  7735 ;;      Temps:          1       0       0       0       0
  7736 ;;      Totals:         4       0       0       0       0
  7737 ;;Total ram usage:        4 bytes
  7738 ;; Hardware stack levels used:    1
  7739 ;; Hardware stack levels required when called:    2
  7740 ;; This function calls:
  7741 ;;		_LCD_Cmd
  7742 ;;		_LCD_Write_Character
  7743 ;; This function is called by:
  7744 ;;		_SetUp
  7745 ;; This function uses a non-reentrant model
  7746 ;;
  7747                           
  7748                           
  7749                           ;psect for function _LCD_Create_Char
  7750  174D                     _LCD_Create_Char:	
  7751                           
  7752                           ;incstack = 0
  7753                           ; Regs used in _LCD_Create_Char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7754                           ;LCD_Create_Char@charnum stored from wreg
  7755  174D  00F7               	movwf	LCD_Create_Char@charnum
  7756                           
  7757                           ;LCD_8bits.c: 117:  uint8_t n;;LCD_8bits.c: 118:  charnum &= 0x07;
  7758  174E  3007               	movlw	7
  7759  174F  00F6               	movwf	??_LCD_Create_Char
  7760  1750  0876               	movf	??_LCD_Create_Char,w
  7761  1751  05F7               	andwf	LCD_Create_Char@charnum,f
  7762                           
  7763                           ;LCD_8bits.c: 119:  LCD_Cmd(0x40 | (charnum << 3));
  7764  1752  0877               	movf	LCD_Create_Char@charnum,w
  7765  1753  00F6               	movwf	??_LCD_Create_Char
  7766  1754  3002               	movlw	2
  7767  1755                     u1185:	
  7768  1755  1003               	clrc
  7769  1756  0DF6               	rlf	??_LCD_Create_Char,f
  7770  1757  3EFF               	addlw	-1
  7771  1758  1D03               	skipz
  7772  1759  2F55               	goto	u1185
  7773  175A  1003               	clrc
  7774  175B  0D76               	rlf	??_LCD_Create_Char,w
  7775  175C  3840               	iorlw	64
  7776  175D  160A  118A  27D1  160A  118A  	fcall	_LCD_Cmd
  7777                           
  7778                           ;LCD_8bits.c: 120:  for (n = 0; n < 8; n++)
  7779  1762  01F8               	clrf	LCD_Create_Char@n
  7780  1763                     l3006:	
  7781                           
  7782                           ;LCD_8bits.c: 121:   LCD_Write_Character(chardata[n]);
  7783  1763  0878               	movf	LCD_Create_Char@n,w
  7784  1764  0775               	addwf	LCD_Create_Char@chardata,w
  7785  1765  0084               	movwf	4
  7786  1766  120A  158A  2000  160A  118A  	fcall	stringdir
  7787  176B  160A  118A  2637  160A  118A  	fcall	_LCD_Write_Character
  7788  1770  3001               	movlw	1
  7789  1771  00F6               	movwf	??_LCD_Create_Char
  7790  1772  0876               	movf	??_LCD_Create_Char,w
  7791  1773  07F8               	addwf	LCD_Create_Char@n,f
  7792  1774  3008               	movlw	8
  7793  1775  0278               	subwf	LCD_Create_Char@n,w
  7794  1776  1803               	btfsc	3,0
  7795  1777  0008               	return
  7796  1778  2F63               	goto	l3006
  7797  1779                     __end_of_LCD_Create_Char:	
  7798                           
  7799                           	psect	text35
  7800  1637                     __ptext35:	
  7801 ;; *************** function _LCD_Write_Character *****************
  7802 ;; Defined at:
  7803 ;;		line 64 in file "LCD_8bits.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;  caracter        1    wreg     unsigned char 
  7806 ;; Auto vars:     Size  Location     Type
  7807 ;;  caracter        1    3[COMMON] unsigned char 
  7808 ;; Return value:  Size  Location     Type
  7809 ;;                  1    wreg      void 
  7810 ;; Registers used:
  7811 ;;		wreg
  7812 ;; Tracked objects:
  7813 ;;		On entry : 0/0
  7814 ;;		On exit  : 0/0
  7815 ;;		Unchanged: 0/0
  7816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7817 ;;      Params:         0       0       0       0       0
  7818 ;;      Locals:         1       0       0       0       0
  7819 ;;      Temps:          1       0       0       0       0
  7820 ;;      Totals:         2       0       0       0       0
  7821 ;;Total ram usage:        2 bytes
  7822 ;; Hardware stack levels used:    1
  7823 ;; Hardware stack levels required when called:    1
  7824 ;; This function calls:
  7825 ;;		Nothing
  7826 ;; This function is called by:
  7827 ;;		_display_Uhrzeit
  7828 ;;		_display_Datum
  7829 ;;		_mostrarLCD
  7830 ;;		_pressBoton2
  7831 ;;		_LCD_Write_String
  7832 ;;		_LCD_Create_Char
  7833 ;; This function uses a non-reentrant model
  7834 ;;
  7835                           
  7836                           
  7837                           ;psect for function _LCD_Write_Character
  7838  1637                     _LCD_Write_Character:	
  7839                           
  7840                           ;incstack = 0
  7841                           ; Regs used in _LCD_Write_Character: [wreg]
  7842                           ;LCD_Write_Character@caracter stored from wreg
  7843  1637  00F3               	movwf	LCD_Write_Character@caracter
  7844                           
  7845                           ;LCD_8bits.c: 65:     PORTAbits.RA0 = 1;
  7846  1638  1283               	bcf	3,5	;RP0=0, select bank0
  7847  1639  1303               	bcf	3,6	;RP1=0, select bank0
  7848  163A  1405               	bsf	5,0	;volatile
  7849                           
  7850                           ;LCD_8bits.c: 67:     PORTD = caracter;
  7851  163B  0873               	movf	LCD_Write_Character@caracter,w
  7852  163C  0088               	movwf	8	;volatile
  7853                           
  7854                           ;LCD_8bits.c: 68:     PORTAbits.RA1 = 1;
  7855  163D  1485               	bsf	5,1	;volatile
  7856                           
  7857                           ;LCD_8bits.c: 69:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  7858  163E  300D               	movlw	13
  7859  163F  00F2               	movwf	??_LCD_Write_Character
  7860  1640                     u2357:	
  7861  1640  0BF2               	decfsz	??_LCD_Write_Character,f
  7862  1641  2E40               	goto	u2357
  7863                           
  7864                           ;LCD_8bits.c: 70:     PORTAbits.RA1 = 0;
  7865  1642  1283               	bcf	3,5	;RP0=0, select bank0
  7866  1643  1303               	bcf	3,6	;RP1=0, select bank0
  7867  1644  1085               	bcf	5,1	;volatile
  7868  1645  0008               	return
  7869  1646                     __end_of_LCD_Write_Character:	
  7870                           
  7871                           	psect	text36
  7872  17D1                     __ptext36:	
  7873 ;; *************** function _LCD_Cmd *****************
  7874 ;; Defined at:
  7875 ;;		line 21 in file "LCD_8bits.c"
  7876 ;; Parameters:    Size  Location     Type
  7877 ;;  comando         1    wreg     unsigned char 
  7878 ;; Auto vars:     Size  Location     Type
  7879 ;;  comando         1    4[COMMON] unsigned char 
  7880 ;; Return value:  Size  Location     Type
  7881 ;;                  1    wreg      void 
  7882 ;; Registers used:
  7883 ;;		wreg
  7884 ;; Tracked objects:
  7885 ;;		On entry : 0/0
  7886 ;;		On exit  : 0/0
  7887 ;;		Unchanged: 0/0
  7888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7889 ;;      Params:         0       0       0       0       0
  7890 ;;      Locals:         1       0       0       0       0
  7891 ;;      Temps:          2       0       0       0       0
  7892 ;;      Totals:         3       0       0       0       0
  7893 ;;Total ram usage:        3 bytes
  7894 ;; Hardware stack levels used:    1
  7895 ;; Hardware stack levels required when called:    1
  7896 ;; This function calls:
  7897 ;;		Nothing
  7898 ;; This function is called by:
  7899 ;;		_LCD_clear
  7900 ;;		_LCD_init
  7901 ;;		_LCD_Set_Cursor
  7902 ;;		_LCD_Create_Char
  7903 ;;		_LCD_home
  7904 ;;		_LCD_Shift_links
  7905 ;;		_LCD_Shift_rechts
  7906 ;;		_LCD_Cursor_rechts
  7907 ;;		_LCD_Cursor_links
  7908 ;; This function uses a non-reentrant model
  7909 ;;
  7910                           
  7911                           
  7912                           ;psect for function _LCD_Cmd
  7913  17D1                     _LCD_Cmd:	
  7914                           
  7915                           ;incstack = 0
  7916                           ; Regs used in _LCD_Cmd: [wreg]
  7917                           ;LCD_Cmd@comando stored from wreg
  7918  17D1  00F4               	movwf	LCD_Cmd@comando
  7919                           
  7920                           ;LCD_8bits.c: 22:     PORTAbits.RA0 = 0;
  7921  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  7922  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  7923  17D4  1005               	bcf	5,0	;volatile
  7924                           
  7925                           ;LCD_8bits.c: 23:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7926  17D5  3007               	movlw	7
  7927  17D6  00F3               	movwf	??_LCD_Cmd+1
  7928  17D7  307D               	movlw	125
  7929  17D8  00F2               	movwf	??_LCD_Cmd
  7930  17D9                     u2367:	
  7931  17D9  0BF2               	decfsz	??_LCD_Cmd,f
  7932  17DA  2FD9               	goto	u2367
  7933  17DB  0BF3               	decfsz	??_LCD_Cmd+1,f
  7934  17DC  2FD9               	goto	u2367
  7935                           
  7936                           ;LCD_8bits.c: 24:     PORTAbits.RA1 = 1;
  7937  17DD  1283               	bcf	3,5	;RP0=0, select bank0
  7938  17DE  1303               	bcf	3,6	;RP1=0, select bank0
  7939  17DF  1485               	bsf	5,1	;volatile
  7940                           
  7941                           ;LCD_8bits.c: 25:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7942  17E0  3007               	movlw	7
  7943  17E1  00F3               	movwf	??_LCD_Cmd+1
  7944  17E2  307D               	movlw	125
  7945  17E3  00F2               	movwf	??_LCD_Cmd
  7946  17E4                     u2377:	
  7947  17E4  0BF2               	decfsz	??_LCD_Cmd,f
  7948  17E5  2FE4               	goto	u2377
  7949  17E6  0BF3               	decfsz	??_LCD_Cmd+1,f
  7950  17E7  2FE4               	goto	u2377
  7951                           
  7952                           ;LCD_8bits.c: 26:     PORTD = comando;
  7953  17E8  0874               	movf	LCD_Cmd@comando,w
  7954  17E9  1283               	bcf	3,5	;RP0=0, select bank0
  7955  17EA  1303               	bcf	3,6	;RP1=0, select bank0
  7956  17EB  0088               	movwf	8	;volatile
  7957                           
  7958                           ;LCD_8bits.c: 27:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7959  17EC  3007               	movlw	7
  7960  17ED  00F3               	movwf	??_LCD_Cmd+1
  7961  17EE  307D               	movlw	125
  7962  17EF  00F2               	movwf	??_LCD_Cmd
  7963  17F0                     u2387:	
  7964  17F0  0BF2               	decfsz	??_LCD_Cmd,f
  7965  17F1  2FF0               	goto	u2387
  7966  17F2  0BF3               	decfsz	??_LCD_Cmd+1,f
  7967  17F3  2FF0               	goto	u2387
  7968                           
  7969                           ;LCD_8bits.c: 28:     PORTAbits.RA1 = 0;
  7970  17F4  1283               	bcf	3,5	;RP0=0, select bank0
  7971  17F5  1303               	bcf	3,6	;RP1=0, select bank0
  7972  17F6  1085               	bcf	5,1	;volatile
  7973                           
  7974                           ;LCD_8bits.c: 29:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7975  17F7  3007               	movlw	7
  7976  17F8  00F3               	movwf	??_LCD_Cmd+1
  7977  17F9  307D               	movlw	125
  7978  17FA  00F2               	movwf	??_LCD_Cmd
  7979  17FB                     u2397:	
  7980  17FB  0BF2               	decfsz	??_LCD_Cmd,f
  7981  17FC  2FFB               	goto	u2397
  7982  17FD  0BF3               	decfsz	??_LCD_Cmd+1,f
  7983  17FE  2FFB               	goto	u2397
  7984  17FF  0008               	return
  7985  1800                     __end_of_LCD_Cmd:	
  7986                           
  7987                           	psect	text37
  7988  0905                     __ptext37:	
  7989 ;; *************** function _I2C_Master_Init *****************
  7990 ;; Defined at:
  7991 ;;		line 16 in file "I2C.c"
  7992 ;; Parameters:    Size  Location     Type
  7993 ;;  c               4    6[BANK0 ] const unsigned long 
  7994 ;; Auto vars:     Size  Location     Type
  7995 ;;		None
  7996 ;; Return value:  Size  Location     Type
  7997 ;;                  1    wreg      void 
  7998 ;; Registers used:
  7999 ;;		wreg, status,2, status,0, pclath, cstack
  8000 ;; Tracked objects:
  8001 ;;		On entry : 0/0
  8002 ;;		On exit  : 0/0
  8003 ;;		Unchanged: 0/0
  8004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8005 ;;      Params:         0       4       0       0       0
  8006 ;;      Locals:         0       0       0       0       0
  8007 ;;      Temps:          0       4       0       0       0
  8008 ;;      Totals:         0       8       0       0       0
  8009 ;;Total ram usage:        8 bytes
  8010 ;; Hardware stack levels used:    1
  8011 ;; Hardware stack levels required when called:    2
  8012 ;; This function calls:
  8013 ;;		___lldiv
  8014 ;; This function is called by:
  8015 ;;		_SetUp
  8016 ;; This function uses a non-reentrant model
  8017 ;;
  8018                           
  8019                           
  8020                           ;psect for function _I2C_Master_Init
  8021  0905                     _I2C_Master_Init:	
  8022                           
  8023                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  8024                           
  8025                           ;incstack = 0
  8026                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  8027  0905  3028               	movlw	40
  8028  0906  1283               	bcf	3,5	;RP0=0, select bank0
  8029  0907  1303               	bcf	3,6	;RP1=0, select bank0
  8030  0908  0094               	movwf	20	;volatile
  8031                           
  8032                           ;I2C.c: 19:     SSPCON2 = 0;
  8033  0909  1683               	bsf	3,5	;RP0=1, select bank1
  8034  090A  1303               	bcf	3,6	;RP1=0, select bank1
  8035  090B  0191               	clrf	17	;volatile
  8036                           
  8037                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  8038  090C  1283               	bcf	3,5	;RP0=0, select bank0
  8039  090D  1303               	bcf	3,6	;RP1=0, select bank0
  8040  090E  0826               	movf	I2C_Master_Init@c,w
  8041  090F  00AA               	movwf	??_I2C_Master_Init
  8042  0910  0827               	movf	I2C_Master_Init@c+1,w
  8043  0911  00AB               	movwf	??_I2C_Master_Init+1
  8044  0912  0828               	movf	I2C_Master_Init@c+2,w
  8045  0913  00AC               	movwf	??_I2C_Master_Init+2
  8046  0914  0829               	movf	I2C_Master_Init@c+3,w
  8047  0915  00AD               	movwf	??_I2C_Master_Init+3
  8048  0916  3002               	movlw	2
  8049  0917                     u1835:	
  8050  0917  1003               	clrc
  8051  0918  0DAA               	rlf	??_I2C_Master_Init,f
  8052  0919  0DAB               	rlf	??_I2C_Master_Init+1,f
  8053  091A  0DAC               	rlf	??_I2C_Master_Init+2,f
  8054  091B  0DAD               	rlf	??_I2C_Master_Init+3,f
  8055  091C  3EFF               	addlw	-1
  8056  091D  1D03               	skipz
  8057  091E  2917               	goto	u1835
  8058  091F  082D               	movf	??_I2C_Master_Init+3,w
  8059  0920  00F5               	movwf	___lldiv@divisor+3
  8060  0921  082C               	movf	??_I2C_Master_Init+2,w
  8061  0922  00F4               	movwf	___lldiv@divisor+2
  8062  0923  082B               	movf	??_I2C_Master_Init+1,w
  8063  0924  00F3               	movwf	___lldiv@divisor+1
  8064  0925  082A               	movf	??_I2C_Master_Init,w
  8065  0926  00F2               	movwf	___lldiv@divisor
  8066  0927  3000               	movlw	0
  8067  0928  00F9               	movwf	___lldiv@dividend+3
  8068  0929  303D               	movlw	61
  8069  092A  00F8               	movwf	___lldiv@dividend+2
  8070  092B  3009               	movlw	9
  8071  092C  00F7               	movwf	___lldiv@dividend+1
  8072  092D  3000               	movlw	0
  8073  092E  00F6               	movwf	___lldiv@dividend
  8074  092F  120A  158A  21E1   	fcall	___lldiv
  8075  0932  0872               	movf	?___lldiv,w
  8076  0933  3EFF               	addlw	255
  8077  0934  1683               	bsf	3,5	;RP0=1, select bank1
  8078  0935  1303               	bcf	3,6	;RP1=0, select bank1
  8079  0936  0093               	movwf	19	;volatile
  8080                           
  8081                           ;I2C.c: 21:     SSPSTAT = 0;
  8082  0937  0194               	clrf	20	;volatile
  8083                           
  8084                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  8085  0938  1587               	bsf	7,3	;volatile
  8086                           
  8087                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  8088  0939  1607               	bsf	7,4	;volatile
  8089  093A  0008               	return
  8090  093B                     __end_of_I2C_Master_Init:	
  8091                           
  8092                           	psect	text38
  8093  09E1                     __ptext38:	
  8094 ;; *************** function ___lldiv *****************
  8095 ;; Defined at:
  8096 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  8097 ;; Parameters:    Size  Location     Type
  8098 ;;  divisor         4    2[COMMON] unsigned long 
  8099 ;;  dividend        4    6[COMMON] unsigned long 
  8100 ;; Auto vars:     Size  Location     Type
  8101 ;;  quotient        4    1[BANK0 ] unsigned long 
  8102 ;;  counter         1    5[BANK0 ] unsigned char 
  8103 ;; Return value:  Size  Location     Type
  8104 ;;                  4    2[COMMON] unsigned long 
  8105 ;; Registers used:
  8106 ;;		wreg, status,2, status,0
  8107 ;; Tracked objects:
  8108 ;;		On entry : 0/0
  8109 ;;		On exit  : 0/0
  8110 ;;		Unchanged: 0/0
  8111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8112 ;;      Params:         8       0       0       0       0
  8113 ;;      Locals:         0       5       0       0       0
  8114 ;;      Temps:          0       1       0       0       0
  8115 ;;      Totals:         8       6       0       0       0
  8116 ;;Total ram usage:       14 bytes
  8117 ;; Hardware stack levels used:    1
  8118 ;; Hardware stack levels required when called:    1
  8119 ;; This function calls:
  8120 ;;		Nothing
  8121 ;; This function is called by:
  8122 ;;		_I2C_Master_Init
  8123 ;; This function uses a non-reentrant model
  8124 ;;
  8125                           
  8126                           
  8127                           ;psect for function ___lldiv
  8128  09E1                     ___lldiv:	
  8129                           
  8130                           ;incstack = 0
  8131                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8132  09E1  3000               	movlw	0
  8133  09E2  1283               	bcf	3,5	;RP0=0, select bank0
  8134  09E3  1303               	bcf	3,6	;RP1=0, select bank0
  8135  09E4  00A4               	movwf	___lldiv@quotient+3
  8136  09E5  3000               	movlw	0
  8137  09E6  00A3               	movwf	___lldiv@quotient+2
  8138  09E7  3000               	movlw	0
  8139  09E8  00A2               	movwf	___lldiv@quotient+1
  8140  09E9  3000               	movlw	0
  8141  09EA  00A1               	movwf	___lldiv@quotient
  8142  09EB  0875               	movf	___lldiv@divisor+3,w
  8143  09EC  0474               	iorwf	___lldiv@divisor+2,w
  8144  09ED  0473               	iorwf	___lldiv@divisor+1,w
  8145  09EE  0472               	iorwf	___lldiv@divisor,w
  8146  09EF  1903               	skipnz
  8147  09F0  2A38               	goto	l4274
  8148  09F1  01A5               	clrf	___lldiv@counter
  8149  09F2  0AA5               	incf	___lldiv@counter,f
  8150  09F3                     l4260:	
  8151  09F3  1BF5               	btfsc	___lldiv@divisor+3,7
  8152  09F4  2A03               	goto	l4262
  8153  09F5  3001               	movlw	1
  8154  09F6  00A0               	movwf	??___lldiv
  8155  09F7                     u1775:	
  8156  09F7  1003               	clrc
  8157  09F8  0DF2               	rlf	___lldiv@divisor,f
  8158  09F9  0DF3               	rlf	___lldiv@divisor+1,f
  8159  09FA  0DF4               	rlf	___lldiv@divisor+2,f
  8160  09FB  0DF5               	rlf	___lldiv@divisor+3,f
  8161  09FC  0BA0               	decfsz	??___lldiv,f
  8162  09FD  29F7               	goto	u1775
  8163  09FE  3001               	movlw	1
  8164  09FF  00A0               	movwf	??___lldiv
  8165  0A00  0820               	movf	??___lldiv,w
  8166  0A01  07A5               	addwf	___lldiv@counter,f
  8167  0A02  29F3               	goto	l4260
  8168  0A03                     l4262:	
  8169  0A03  3001               	movlw	1
  8170  0A04  00A0               	movwf	??___lldiv
  8171  0A05                     u1795:	
  8172  0A05  1003               	clrc
  8173  0A06  0DA1               	rlf	___lldiv@quotient,f
  8174  0A07  0DA2               	rlf	___lldiv@quotient+1,f
  8175  0A08  0DA3               	rlf	___lldiv@quotient+2,f
  8176  0A09  0DA4               	rlf	___lldiv@quotient+3,f
  8177  0A0A  0BA0               	decfsz	??___lldiv,f
  8178  0A0B  2A05               	goto	u1795
  8179  0A0C  0875               	movf	___lldiv@divisor+3,w
  8180  0A0D  0279               	subwf	___lldiv@dividend+3,w
  8181  0A0E  1D03               	skipz
  8182  0A0F  2A1A               	goto	u1805
  8183  0A10  0874               	movf	___lldiv@divisor+2,w
  8184  0A11  0278               	subwf	___lldiv@dividend+2,w
  8185  0A12  1D03               	skipz
  8186  0A13  2A1A               	goto	u1805
  8187  0A14  0873               	movf	___lldiv@divisor+1,w
  8188  0A15  0277               	subwf	___lldiv@dividend+1,w
  8189  0A16  1D03               	skipz
  8190  0A17  2A1A               	goto	u1805
  8191  0A18  0872               	movf	___lldiv@divisor,w
  8192  0A19  0276               	subwf	___lldiv@dividend,w
  8193  0A1A                     u1805:	
  8194  0A1A  1C03               	skipc
  8195  0A1B  2A2B               	goto	l4270
  8196  0A1C  0872               	movf	___lldiv@divisor,w
  8197  0A1D  02F6               	subwf	___lldiv@dividend,f
  8198  0A1E  0873               	movf	___lldiv@divisor+1,w
  8199  0A1F  1C03               	skipc
  8200  0A20  0F73               	incfsz	___lldiv@divisor+1,w
  8201  0A21  02F7               	subwf	___lldiv@dividend+1,f
  8202  0A22  0874               	movf	___lldiv@divisor+2,w
  8203  0A23  1C03               	skipc
  8204  0A24  0F74               	incfsz	___lldiv@divisor+2,w
  8205  0A25  02F8               	subwf	___lldiv@dividend+2,f
  8206  0A26  0875               	movf	___lldiv@divisor+3,w
  8207  0A27  1C03               	skipc
  8208  0A28  0F75               	incfsz	___lldiv@divisor+3,w
  8209  0A29  02F9               	subwf	___lldiv@dividend+3,f
  8210  0A2A  1421               	bsf	___lldiv@quotient,0
  8211  0A2B                     l4270:	
  8212  0A2B  3001               	movlw	1
  8213  0A2C                     u1815:	
  8214  0A2C  1003               	clrc
  8215  0A2D  0CF5               	rrf	___lldiv@divisor+3,f
  8216  0A2E  0CF4               	rrf	___lldiv@divisor+2,f
  8217  0A2F  0CF3               	rrf	___lldiv@divisor+1,f
  8218  0A30  0CF2               	rrf	___lldiv@divisor,f
  8219  0A31  3EFF               	addlw	-1
  8220  0A32  1D03               	skipz
  8221  0A33  2A2C               	goto	u1815
  8222  0A34  3001               	movlw	1
  8223  0A35  02A5               	subwf	___lldiv@counter,f
  8224  0A36  1D03               	btfss	3,2
  8225  0A37  2A03               	goto	l4262
  8226  0A38                     l4274:	
  8227  0A38  0824               	movf	___lldiv@quotient+3,w
  8228  0A39  00F5               	movwf	?___lldiv+3
  8229  0A3A  0823               	movf	___lldiv@quotient+2,w
  8230  0A3B  00F4               	movwf	?___lldiv+2
  8231  0A3C  0822               	movf	___lldiv@quotient+1,w
  8232  0A3D  00F3               	movwf	?___lldiv+1
  8233  0A3E  0821               	movf	___lldiv@quotient,w
  8234  0A3F  00F2               	movwf	?___lldiv
  8235  0A40  0008               	return
  8236  0A41                     __end_of___lldiv:	
  8237                           
  8238                           	psect	text39
  8239  1646                     __ptext39:	
  8240 ;; *************** function _ISR *****************
  8241 ;; Defined at:
  8242 ;;		line 137 in file "main_Master.c"
  8243 ;; Parameters:    Size  Location     Type
  8244 ;;		None
  8245 ;; Auto vars:     Size  Location     Type
  8246 ;;		None
  8247 ;; Return value:  Size  Location     Type
  8248 ;;                  1    wreg      void 
  8249 ;; Registers used:
  8250 ;;		wreg, status,2, status,0
  8251 ;; Tracked objects:
  8252 ;;		On entry : 0/0
  8253 ;;		On exit  : 0/0
  8254 ;;		Unchanged: 0/0
  8255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8256 ;;      Params:         0       0       0       0       0
  8257 ;;      Locals:         0       0       0       0       0
  8258 ;;      Temps:          2       0       0       0       0
  8259 ;;      Totals:         2       0       0       0       0
  8260 ;;Total ram usage:        2 bytes
  8261 ;; Hardware stack levels used:    1
  8262 ;; This function calls:
  8263 ;;		Nothing
  8264 ;; This function is called by:
  8265 ;;		Interrupt level 1
  8266 ;; This function uses a non-reentrant model
  8267 ;;
  8268                           
  8269                           
  8270                           ;psect for function _ISR
  8271  1646                     _ISR:	
  8272                           
  8273                           ;main_Master.c: 138:     if (INTCONbits.RBIF == 1 && INTCONbits.RBIE == 1){
  8274  1646  180B               	btfsc	11,0	;volatile
  8275  1647  1D8B               	btfss	11,3	;volatile
  8276  1648  2E50               	goto	i1l155
  8277                           
  8278                           ;main_Master.c: 139:         INTCONbits.RBIF = 0;
  8279  1649  100B               	bcf	11,0	;volatile
  8280                           
  8281                           ;main_Master.c: 140:         if (banderaBoton == 0){
  8282  164A  087B               	movf	_banderaBoton,w
  8283  164B  1D03               	btfss	3,2
  8284  164C  2E50               	goto	i1l155
  8285                           
  8286                           ;main_Master.c: 141:             banderaBoton = 1;
  8287  164D  01FB               	clrf	_banderaBoton
  8288  164E  0AFB               	incf	_banderaBoton,f
  8289                           
  8290                           ;main_Master.c: 142:             INTCONbits.RBIE = 0;
  8291  164F  118B               	bcf	11,3	;volatile
  8292  1650                     i1l155:	
  8293  1650  0871               	movf	??_ISR+1,w
  8294  1651  008A               	movwf	10
  8295  1652  0E70               	swapf	??_ISR^(0+4294967168),w
  8296  1653  0083               	movwf	3
  8297  1654  0EFE               	swapf	126,f
  8298  1655  0E7E               	swapf	126,w
  8299  1656  0009               	retfie
  8300  1657                     __end_of_ISR:	
  8301  007E                     btemp	set	126	;btemp
  8302  007E                     wtemp0	set	126
  8303                           
  8304                           	psect	intentry
  8305  0004                     __pintentry:	
  8306                           ;incstack = 0
  8307                           ; Regs used in _ISR: [wreg+status,2+status,0]
  8308                           
  8309  0004                     interrupt_function:	
  8310  007E                     saved_w	set	btemp
  8311  0004  00FE               	movwf	btemp
  8312  0005  0E03               	swapf	3,w
  8313  0006  00F0               	movwf	??_ISR
  8314  0007  080A               	movf	10,w
  8315  0008  00F1               	movwf	??_ISR+1
  8316  0009  160A  118A  2E46   	ljmp	_ISR


Data Sizes:
    Strings     139
    Constant    40
    Data        10
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     35      64
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Create_Char@chardata	PTR const unsigned char  size(1) Largest target is 8
		 -> arrowr_vacio(CODE[8]), gota(CODE[8]), termometro(CODE[8]), arrowr(CODE[8]), 
		 -> atilde(CODE[8]), 

    LCD_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_17(CODE[6]), STR_16(CODE[13]), STR_15(CODE[3]), STR_14(CODE[13]), 
		 -> STR_13(CODE[5]), STR_12(CODE[3]), STR_11(CODE[5]), STR_10(CODE[3]), 
		 -> STR_9(CODE[13]), STR_8(CODE[4]), STR_7(CODE[9]), STR_6(CODE[14]), 
		 -> STR_5(CODE[12]), STR_4(CODE[11]), STR_3(CODE[13]), STR_2(CODE[17]), 
		 -> STR_1(CODE[3]), 

    sp__uint_to_array	PTR unsigned int  size(1) Largest target is 6
		 -> uint_to_array@resultado(BANK0[6]), 

    obj_array	PTR unsigned int  size(1) Largest target is 6
		 -> NULL(NULL[0]), uint_to_array@resultado(BANK0[6]), 


Critical Paths under _main in COMMON

    _pressBoton2->_LCD_Set_Cursor
    _pressBoton1->_LCD_clear
    _mostrarLCD->_LCD_Set_Cursor
    _uint_to_array->___awdiv
    _display_Uhrzeit->_LCD_Set_Cursor
    _display_Datum->_LCD_Set_Cursor
    _LCD_Write_String->_LCD_Write_Character
    _LCD_Set_Cursor->_LCD_Cmd
    _inclinacion_->_init_ADC
    _get_temperatura_obj->_init_ADC
    _get_temperatura->_init_ADC
    _get_Time->_BCD_a_DEC
    _BCD_a_DEC->___bmul
    _Zeit_Datum_Set->_DEC_a_BCD
    _I2C_Master_Write->_DEC_a_BCD
    _DEC_a_BCD->___awdiv
    _DEC_a_BCD->___awmod
    ___awdiv->___wmul
    _LCD_init->_LCD_Cmd
    _LCD_clear->_LCD_Cmd
    _LCD_Create_Char->_LCD_Cmd
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_mostrarLCD
    _mostrarLCD->_uint_to_array
    _uint_to_array->___awdiv
    _display_Uhrzeit->___awdiv
    _display_Datum->___awdiv
    _get_hum->_I2C_Master_Write
    _get_dis->_I2C_Master_Write
    _get_Time->_I2C_Master_Write
    _SetUp->_Zeit_Datum_Set
    _Zeit_Datum_Set->_I2C_Master_Write
    _I2C_Master_Write->_DEC_a_BCD
    _DEC_a_BCD->___awdiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   84203
                                             33 BANK0      2     2      0
                              _SetUp
                           _get_Time
                            _get_dis
                            _get_hum
                    _get_temperatura
                _get_temperatura_obj
                       _inclinacion_
                         _mostrarLCD
                        _pressBoton1
                        _pressBoton2
                       _uartTX_Write
 ---------------------------------------------------------------------------------
 (1) _uartTX_Write                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pressBoton2                                          2     2      0    2383
                                              0 BANK0      2     2      0
                     _LCD_Set_Cursor
                _LCD_Write_Character
                          _LCD_clear
 ---------------------------------------------------------------------------------
 (1) _pressBoton1                                          2     2      0      22
                                              7 COMMON     2     2      0
                          _LCD_clear
 ---------------------------------------------------------------------------------
 (1) _mostrarLCD                                          10    10      0   35634
                                             23 BANK0     10    10      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                          _LCD_clear
                            ___awdiv
                            ___awmod
                      _display_Datum
                    _display_Uhrzeit
                      _uint_to_array
 ---------------------------------------------------------------------------------
 (2) _uint_to_array                                       15    15      0    3551
                                              8 BANK0     15    15      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _display_Uhrzeit                                     11    10      1    7555
                                              8 BANK0     11    10      1
                     _LCD_Set_Cursor
                _LCD_Write_Character
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _display_Datum                                       11    10      1    8228
                                              8 BANK0     11    10      1
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     3     3      0     673
                                              4 COMMON     3     3      0
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       5     4      1    2339
                                              5 COMMON     5     4      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _inclinacion_                                         2     2      0      22
                                              5 COMMON     2     2      0
                           _init_ADC
 ---------------------------------------------------------------------------------
 (1) _get_temperatura_obj                                  2     2      0      22
                                              5 COMMON     2     2      0
                           _init_ADC
 ---------------------------------------------------------------------------------
 (1) _get_temperatura                                      2     2      0      22
                                              5 COMMON     2     2      0
                           _init_ADC
 ---------------------------------------------------------------------------------
 (2) _init_ADC                                             3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _get_hum                                              1     1      0   10555
                                             15 BANK0      1     1      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _get_dis                                              2     2      0   10555
                                             15 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _get_Time                                             1     1      0   10767
                                             15 BANK0      1     1      0
                          _BCD_a_DEC
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2    2477
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _BCD_a_DEC                                            4     4      0     212
                                              6 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SetUp                                                2     2      0   14199
                                             17 BANK0      2     2      0
                    _I2C_Master_Init
                    _LCD_Create_Char
                          _LCD_clear
                           _LCD_init
                         _OSC_config
                     _Zeit_Datum_Set
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Zeit_Datum_Set                                       2     2      0   12978
                                             15 BANK0      2     2      0
                          _DEC_a_BCD
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    8078
                                             13 BANK0      2     0      2
                          _DEC_a_BCD (ARG)
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DEC_a_BCD                                            6     6      0    4900
                                              9 COMMON     1     1      0
                                              8 BANK0      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    2233
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    2605
                                              8 COMMON     1     1      0
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _OSC_config                                           4     0      4      98
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             2     2      0      22
                                              5 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            2     2      0      22
                                              5 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Create_Char                                      4     3      1     537
                                              5 COMMON     4     3      1
                            _LCD_Cmd
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Character                                  2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetUp
     _I2C_Master_Init
       ___lldiv
     _LCD_Create_Char
       _LCD_Cmd
       _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
     _LCD_init
       _LCD_Cmd
     _OSC_config
     _Zeit_Datum_Set
       _DEC_a_BCD
         ___awdiv
           ___wmul (ARG)
         ___awmod
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _DEC_a_BCD (ARG)
           ___awdiv
             ___wmul (ARG)
           ___awmod
         _I2C_Master_Wait (ARG)
     _uart_init
   _get_Time
     _BCD_a_DEC
       ___bmul
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _DEC_a_BCD (ARG)
         ___awdiv
           ___wmul (ARG)
         ___awmod
       _I2C_Master_Wait (ARG)
   _get_dis
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _DEC_a_BCD (ARG)
         ___awdiv
           ___wmul (ARG)
         ___awmod
       _I2C_Master_Wait (ARG)
   _get_hum
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _DEC_a_BCD (ARG)
         ___awdiv
           ___wmul (ARG)
         ___awmod
       _I2C_Master_Wait (ARG)
   _get_temperatura
     _init_ADC
   _get_temperatura_obj
     _init_ADC
   _inclinacion_
     _init_ADC
   _mostrarLCD
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _DEC_a_BCD (ARG)
         ___awdiv
           ___wmul (ARG)
         ___awmod
       _I2C_Master_Wait (ARG)
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     _LCD_Write_String
       _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
     ___awdiv
       ___wmul (ARG)
     ___awmod
     _display_Datum
       _LCD_Set_Cursor
         _LCD_Cmd
       _LCD_Write_Character
       _LCD_Write_String
         _LCD_Write_Character
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _display_Uhrzeit
       _LCD_Set_Cursor
         _LCD_Cmd
       _LCD_Write_Character
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _uint_to_array
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _pressBoton1
     _LCD_clear
       _LCD_Cmd
   _pressBoton2
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
   _uartTX_Write

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     23      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4C      12        0.0%
ABS                  0      0      4C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue May 05 00:27:44 2020

                           pc 0002                ___bmul@product 0074       __end_of_LCD_Create_Char 1779  
                 __CFG_CP$OFF 0000                  ___awdiv@sign 0025            __size_of_BCD_a_DEC 0016  
                          fsr 0004           ___wmul@multiplicand 0074            mostrarLCD@pantalla 003A  
                         l200 0B3E                           l201 0B42                           l202 0B47  
                         l203 0B90                           l190 0B24                           l502 1623  
                         l191 0B26                           l192 0B28                           l193 0B2A  
                         l185 0B1D                           l194 0B2C                           l186 0B86  
                         l195 0B2E                           l187 0B1E                           l196 0B31  
                         l188 0B20                           l197 0B34                           l189 0B22  
                         l198 0B37                           l375 162E                           l199 0B3A  
                         l393 179C                           l394 179F                           l628 16F2  
                         _GIE 005F                  __CFG_CPD$OFF 0000                           _ISR 1646  
          __size_of_DEC_a_BCD 0030       __end_of_display_Uhrzeit 07F6                           _dia 005D  
                         _mes 005B                           _min 005F                           _seg 0054  
                         fsr0 0004                           indf 0000                  ___awmod@sign 0078  
              ?_display_Datum 0028  __size_of_LCD_Write_Character 000F               __end_of_LCD_Cmd 1800  
                __CFG_LVP$OFF 0000                          ?_ISR 0070                _LCD_Set_Cursor 17A5  
                        l3006 1763                          l4200 09C9                          l3064 0B4C  
                        l4204 09D4                          l4220 0945                          l3422 0AB3  
                        l4208 09DC                          l4232 0952                          l4224 094C  
                        l4400 0042                          l3440 0AD4                          l4234 0960  
                        l4242 0979                          l2810 17BB                          l2802 17A7  
                        l4410 007C                          l3434 0AC9                          l3450 0AEE  
                        l4260 09F3                          l2900 0D67                          l2812 17C0  
                        l3428 0ABE                          l3452 0B01                          l4270 0A2B  
                        l4262 0A03                          l2902 0D6E                          l4182 099D  
                        l4246 0981                          l4238 096E                          l2806 17B1  
                        l4510 02B5                          l5150 0E5E                          l5160 0D73  
                        l4192 09A5                          l4176 0992                          l2824 172E  
                        l2832 16EA                          l4520 02F6                          l4504 029B  
                        l4432 00FD                          l4424 00D8                          l5152 0AF6  
                        l4600 0DEB                          l4274 0A38                          l5170 0DA5  
                        l5162 0D7D                          l4194 09B3                          l2850 165F  
                        l5154 0432                          l4450 015C                          l3458 0B05  
                        l5172 0DAF                          l5164 0D87                          l5180 0D82  
                        l5156 17C8                          l4532 0332                          l4508 02B0  
                        l4444 014F                          l5174 0DB9                          l5190 0DB4  
                        l5166 0D91                          l5182 0D8C                          l2846 1659  
                        l5158 0B54                          l4526 030B                          l4470 01D2  
                        l4454 0165                          l4438 011F                          l4630 0E56  
                        l5192 0DBE                          l5168 0D9B                          l5184 0D96  
                        l5176 0DC3                          l4544 037D                          l4624 0E3F  
                        l4616 0E22                          l4608 0E05                          l4632 0E6F  
                        l5186 0DA0                          l5178 0D78                          l2890 0D46  
                        l4538 035C                          l4490 0240                          l5188 0DAA  
                        l2892 0D4D                          l2884 0D33                          l4580 041B  
                        l4468 01BD                          l4628 0E4B                          l4652 0F40  
                        l2894 0D54                          l2886 0D38                          l4486 022E  
                        l4398 002D                          l4582 042A                          l4638 0E75  
                        l2896 0D5B                          l2888 0D3F                          l2898 0D62  
                        l4598 0DE9                          STR_1 08B3                          STR_2 082E  
                        STR_3 0867                          STR_4 088D                          STR_5 0881  
                        STR_6 083F                          STR_7 0898                          STR_8 08AC  
                        STR_9 085A                          u1065 16F3                          u1075 16FA  
                        u2107 0E1B                          _IOCB 0096                          u1245 16AF  
                        u2117 0E38                          u2037 0F46                          u2207 16E2  
                        u2127 0E51                          u2047 0F55                          u1185 1755  
                        u2217 16CB                          u2137 0E82                          u2057 0F65  
                        u2307 0A7F                          u2227 0BBC                          u2147 0ADD  
                        u2067 0F75                          u2317 0A8C                          u2237 0BEA  
                        u2157 0B10                          u2077 0F85                          u2327 0A99  
                        u1615 09B4                          u2247 0D2C                          u2167 03B3  
                        u2087 0F95                          u2337 0AA4                          u2257 0A45  
                        u1625 09C0                          u2177 03E1                          u2097 0DFE  
                        u2347 169E                          u2267 0A54                          u1635 09CA  
                        u1715 0966                          u2187 040F                          u1805 0A1A  
                        u2357 1640                          u2277 0A60                          u1725 096F  
                        u2197 08CF                          u1815 0A2C                          u2367 17D9  
                        u2287 0A6A                          u1840 0C18                          u2377 17E4  
                        u2297 0A74                          u1835 0917                          u2387 17F0  
                        u1595 09A8                          u1755 08ED                          u2397 17FB  
                        u1775 09F7                          u1695 0955                          u1795 0A05  
                        _PEIE 005E                          _WPUB 0095                  __CFG_WRT$OFF 0000  
                        _accZ 0049             ?_LCD_Write_String 0070                          _jahr 005A  
                        _main 0F3B                          _gota 0806                          _hora 005E  
                        btemp 007E                 _uint_to_array 0C11                          start 000C  
          ??_LCD_Write_String 0074                 __CFG_IESO$OFF 0000            __size_of_LCD_clear 0016  
         mostrarLCD@uni_atras 003D             ___bmul@multiplier 0075                         ??_ISR 0070  
            ?_I2C_Master_Init 0026              ?_I2C_Master_Read 0072              ?_I2C_Master_Wait 0070  
            ?_I2C_Master_Stop 0070              __end_of_LCD_init 0AA8                         ?_main 0070  
             __end_of___awdiv 09E1               DEC_a_BCD@numDEC 0079                         STR_10 08B6  
                       STR_11 08A7                         STR_12 08B6                         STR_13 08A7  
                       STR_14 0874                         STR_15 08B0                         STR_16 084D  
                       STR_17 08A1                 __CFG_WDTE$OFF 0000               __end_of___awmod 0986  
                       _ANSEL 0188               __end_of___lldiv 0A41               ___awdiv@divisor 0020  
                       i1l155 1650               ___awdiv@counter 0024                         _RCREG 001A  
                       _SPBRG 0099                         _PORTA 0005                         _PORTD 0008  
                       _TRISA 0085                         _TRISB 0086                         _TRISD 0088  
                       _SSPIE 0463                         _TRISE 0089                         _SSPIF 0063  
                       _TXREG 0019              ?_get_temperatura 0070                  _sprintbuffer 004B  
              __CFG_FCMEN$OFF 0000        __end_of_LCD_Set_Cursor 17D1                         _SetUp 0C96  
             __end_of_get_dis 0C11               __end_of_get_hum 172B                         _bajar 004E  
                       _ancho 004C                         _datum 005C                         _largo 004D  
              __CFG_BOREN$OFF 0000                   ?_OSC_config 0072                         pclath 000A  
           __end_of_BCD_a_DEC 16BA                ?_uint_to_array 0070                         status 0003  
               ?_inclinacion_ 0070                         wtemp0 007E             __end_of_DEC_a_BCD 0905  
              __CFG_MCLRE$OFF 0000          mostrarLCD@uni_frente 003C               __initialization 000F  
                __end_of_main 1000                  __end_of_gota 080E              ?_LCD_Create_Char 0075  
                      ??_main 0041                     ??_LCD_Cmd 0072               ??_display_Datum 0029  
            ?_display_Uhrzeit 0028             ?_I2C_Master_Start 0070             ?_I2C_Master_Write 002D  
           __end_of_LCD_clear 16A4                        ?_SetUp 0070               ?_LCD_Set_Cursor 0075  
          ??_I2C_Master_Start 0072    mostrarLCD@unidades_humedad 003B            ??_I2C_Master_Write 007A  
                      _ADRESH 001E                  _banderaPUSH1 007A                  _banderaPUSH2 004F  
            ___awdiv@dividend 0022                        _ANSELH 0189                  _banderaBoton 007B  
              ??_inclinacion_ 0075                        _SPBRGH 009A                        _SSPADD 0093  
                      _TRISC3 043B                        _TRISC4 043C            uint_to_array@F1343 0043  
                      _SSPCON 0014                        _SSPBUF 0013              ??_Zeit_Datum_Set 002F  
 LCD_Write_Character@caracter 0073                __CFG_PWRTE$OFF 0000              __end_of_get_Time 064C  
                      ___bmul 1657                        ___wmul 16E8                     ??___awdiv 0078  
                   ??___awmod 0076                     ??___lldiv 0020              __end_of_init_ADC 0B93  
                      _atilde 0816                        _arrowr 0826                        _estado 0055  
            ___awdiv@quotient 0026               ___awmod@divisor 0072           __size_of_OSC_config 00AC  
             ___awmod@counter 0077                     ??_get_dis 002F                     ??_get_hum 002F  
                ?_pressBoton1 0070                  ?_pressBoton2 0070                        saved_w 007E  
             ??_uint_to_array 0028       __end_of__initialization 0025                     ?_LCD_init 0070  
         ___bmul@multiplicand 0072               init_ADC@channel 0074                __pcstackCOMMON 0070  
               __end_of_SetUp 0D32           _LCD_Write_Character 1637                  __pidataBANK0 07F6  
__size_of_get_temperatura_obj 0017          display_Datum@columna 0028                _OPTION_REGbits 0081  
             _temperatura_obj 0051                       ??_SetUp 0031          ?_LCD_Write_Character 0070  
              LCD_Cmd@comando 0074                    __pbssBANK0 0043     LCD_Set_Cursor@corrimiento 0079  
                  ??_LCD_init 0075          __end_of_arrowr_vacio 0826                    __pmaintext 0F3B  
                     ?___bmul 0072                       ?___wmul 0072                    __pintentry 0004  
   __size_of_LCD_Write_String 0022          __end_of_inclinacion_ 08D5          OSC_config@frecuencia 0072  
         display_Uhrzeit@fila 002C            __size_of_uart_init 0015                       _LCD_Cmd 17D1  
       ??_LCD_Write_Character 0072                     ?_get_Time 0070                       _SSPCON2 0091  
                     _SSPSTAT 0094                    __stringtab 0800                  ??_OSC_config 0076  
                   ?_init_ADC 0070                     _BCD_a_DEC 16A4                 ?_uartTX_Write 0070  
      uint_to_array@resultado 0030               __size_of___bmul 0011                     _DEC_a_BCD 08D5  
                     ___awdiv 0986                       ___awmod 093B                       ___lldiv 09E1  
             __size_of___wmul 0021             display_Datum@fila 002C                       _d_atras 0056  
            ??_LCD_Set_Cursor 0076                       __ptext1 161E                       __ptext2 0DDE  
                     __ptext3 0AA8                       __ptext4 0029                       __ptext5 0C11  
                     __ptext6 16E8                       __ptext7 0724                       __ptext8 064C  
                     __ptext9 172B                       _get_dis 0B93                       _get_hum 1709  
          __end_of_OSC_config 0DDE                  __size_of_ISR 0011           uint_to_array@numero 0036  
                     _humedad 0059              ___awmod@dividend 0074      __size_of_I2C_Master_Init 0036  
    __size_of_I2C_Master_Read 002C      __size_of_I2C_Master_Wait 0009      __size_of_I2C_Master_Stop 0007  
        __size_of_pressBoton1 006F          __size_of_pressBoton2 00AC                    ??_get_Time 002F  
                     clrloop0 1627                     _LCD_clear 168E          end_of_initialization 0025  
                  ??_init_ADC 0072      __size_of_get_temperatura 0017                ??_uartTX_Write 0072  
   __size_of_I2C_Master_Start 0007             __end_of_uart_init 168E     __size_of_I2C_Master_Write 0008  
             ___lldiv@divisor 0072                    ?_BCD_a_DEC 0070               ___lldiv@counter 0025  
                   _RCSTAbits 0018              I2C_Master_Init@c 0026              I2C_Master_Read@a 0072  
                  ?_DEC_a_BCD 0070                    _mostrarLCD 0029                     _PORTAbits 0005  
                   _PORTBbits 0006                    _termometro 080E      __size_of_LCD_Create_Char 002C  
                   _TRISCbits 0087         __end_of_display_Datum 0724           _get_temperatura_obj 16D1  
                  ?_LCD_clear 0070             LCD_Write_String@a 0076             LCD_Write_String@n 0074  
    __size_of_display_Uhrzeit 00D2                     _TXSTAbits 0098             __size_of_LCD_init 0067  
       __size_of_inclinacion_ 0017          ?_get_temperatura_obj 0070                __end_of___bmul 1668  
       LCD_Set_Cursor@columna 0075                __end_of___wmul 1709              _LCD_Write_String 172B  
                 _BAUDCTLbits 0187                __end_of_atilde 081E                __end_of_arrowr 082E  
                _arrowr_vacio 081E           start_initialization 000F                   __end_of_ISR 1657  
           ??_I2C_Master_Init 002A             ??_I2C_Master_Read 0074             ??_I2C_Master_Wait 0072  
       __end_of_uint_to_array 0C96             ??_I2C_Master_Stop 0072                  _inclinacion_ 08BE  
    __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??_BCD_a_DEC 0076             ??_get_temperatura 0075  
                    ??___bmul 0073       LCD_Create_Char@chardata 0075         ??_get_temperatura_obj 0075  
                 ??_DEC_a_BCD 0028                      ??___wmul 0076                    init_fetch0 1668  
                 ?_mostrarLCD 0070                   __pdataBANK0 0056       __size_of_Zeit_Datum_Set 00B1  
             BCD_a_DEC@numBCD 0079                      ?_LCD_Cmd 0070          __end_of_uartTX_Write 1626  
                 __pbssCOMMON 007A                     ___latbits 0002                 __pcstackBANK0 0020  
         display_Datum@jahr_d 0032           display_Datum@jahr_u 0031                   ??_LCD_clear 0075  
           __size_of_get_Time 01F6             ??_LCD_Create_Char 0076             __size_of_init_ADC 007C  
            _I2C_Master_Start 1608              _I2C_Master_Write 1616         uint_to_array@centenas 002F  
           ??_display_Uhrzeit 0029                      ?___awdiv 0020                      ?___awmod 0072  
                    ?___lldiv 0072                     __pstrings 0800   __end_of_LCD_Write_Character 1646  
                    ?_get_dis 0070                      ?_get_hum 0070                     _obj_array 0050  
              __size_of_SetUp 009C          display_Uhrzeit@Uhr_d 0032          display_Uhrzeit@Uhr_u 0031  
         __size_of_mostrarLCD 042D          display_Uhrzeit@min_d 0030          display_Uhrzeit@min_u 002F  
        display_Uhrzeit@seg_d 002E          display_Uhrzeit@seg_u 002D             interrupt_function 0004  
              ___wmul@product 0076                      _LCD_init 0A41                     clear_ram0 1626  
            LCD_Create_Char@n 0078                      _PIR1bits 000C                     _uart_init 1679  
                   _velocidad 0053                    _ADCON0bits 001F                   __stringbase 0805  
                  _ADCON1bits 009F             ___wmul@multiplier 0072                 ??_pressBoton1 0077  
               ??_pressBoton2 0020              __size_of_LCD_Cmd 002F           I2C_Master_Read@temp 0076  
    __end_of_LCD_Write_String 174D                   _inclinacion 0058        LCD_Create_Char@charnum 0077  
                  ?_uart_init 0072                _Zeit_Datum_Set 0E8A              __size_of___awdiv 005B  
            __size_of___awmod 004B              __size_of___lldiv 0060         __size_of_uartTX_Write 0008  
          display_Datum@dia_d 002E            display_Datum@dia_u 002D              uartTX_Write@dato 0072  
          __end_of__stringtab 0806            display_Datum@mes_d 0030     mostrarLCD@decenas_humedad 003E  
          display_Datum@mes_u 002F              __size_of_get_dis 007E              __size_of_get_hum 0022  
                    _d_frente 0057               _I2C_Master_Init 0905               _I2C_Master_Read 1779  
        uint_to_array@decenas 002E               _I2C_Master_Wait 162E               _I2C_Master_Stop 160F  
                    __ptext10 17A5                      __ptext11 08BE                      __ptext20 1657  
                    __ptext12 16D1                      __ptext21 0C96                      __ptext13 16BA  
                    __ptext30 0986                      __ptext22 1679                      __ptext14 0B17  
                    __ptext31 0D32                      __ptext23 0E8A                      __ptext15 1709  
                    __ptext32 0A41                      __ptext24 1616                      __ptext16 0B93  
                    __ptext33 168E                      __ptext25 160F                      __ptext17 0456  
                    __ptext34 174D                      __ptext26 1608                      __ptext18 1779  
                    __ptext35 1637                      __ptext27 162E                      __ptext19 16A4  
                    __ptext36 17D1                      __ptext28 08D5                      __ptext37 0905  
                    __ptext29 093B                      __ptext38 09E1                      __ptext39 1646  
                    _get_Time 0456             __CFG_BOR4V$BOR40V 0000       __size_of_LCD_Set_Cursor 002C  
             _get_temperatura 16BA           __end_of_pressBoton1 0B17           __end_of_pressBoton2 0E8A  
                    _init_ADC 0B17                 __size_of_main 00C5        display_Uhrzeit@columna 0028  
                _uartTX_Write 161E        __end_of_Zeit_Datum_Set 0F3B        __size_of_display_Datum 00D8  
                ??_mostrarLCD 0037           LCD_Set_Cursor@linea 0078               _LCD_Create_Char 174D  
    __end_of_I2C_Master_Start 160F      __end_of_I2C_Master_Write 161E                    _INTCONbits 000B  
                    init_ram0 166C               _display_Uhrzeit 0724                      intlevel1 0000  
          __end_of_mostrarLCD 0456              ___lldiv@dividend 0076   __end_of_get_temperatura_obj 16E8  
                   stringcode 0800                    _OSCCONbits 008F            __end_of_termometro 0816  
             ?_Zeit_Datum_Set 0070          mostrarLCD@dec_frente 003F                   ??_uart_init 0074  
     __end_of_I2C_Master_Init 093B       __end_of_I2C_Master_Read 17A5       __end_of_I2C_Master_Wait 1637  
     __end_of_I2C_Master_Stop 1616                   _temperatura 0052        __size_of_uint_to_array 0085  
            ___lldiv@quotient 0021             I2C_Master_Write@d 002D       __end_of_get_temperatura 16D1  
                 _pressBoton1 0AA8                   _pressBoton2 0DDE                      stringdir 0800  
                    stringtab 0800           mostrarLCD@dec_atras 0040                   _SSPCON2bits 0091  
               _display_Datum 064C                    _OSC_config 0D32  

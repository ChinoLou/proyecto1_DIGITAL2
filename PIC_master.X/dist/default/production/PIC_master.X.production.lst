

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon May 04 02:09:51 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 2.05
    57                           ; Generated 20/12/2018 GMT
    58                           ; 
    59                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F887 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  0081                     	;# 
   126  0085                     	;# 
   127  0086                     	;# 
   128  0087                     	;# 
   129  0088                     	;# 
   130  0089                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  008F                     	;# 
   135  0090                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0097                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  009F                     	;# 
   153  0105                     	;# 
   154  0107                     	;# 
   155  0108                     	;# 
   156  0109                     	;# 
   157  010C                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  0185                     	;# 
   163  0187                     	;# 
   164  0188                     	;# 
   165  0189                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0000                     	;# 
   169  0001                     	;# 
   170  0002                     	;# 
   171  0003                     	;# 
   172  0004                     	;# 
   173  0005                     	;# 
   174  0006                     	;# 
   175  0007                     	;# 
   176  0008                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  0088                     	;# 
   208  0089                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  008F                     	;# 
   213  0090                     	;# 
   214  0091                     	;# 
   215  0092                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0093                     	;# 
   219  0094                     	;# 
   220  0095                     	;# 
   221  0096                     	;# 
   222  0097                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009A                     	;# 
   226  009B                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  0105                     	;# 
   232  0107                     	;# 
   233  0108                     	;# 
   234  0109                     	;# 
   235  010C                     	;# 
   236  010C                     	;# 
   237  010D                     	;# 
   238  010E                     	;# 
   239  010F                     	;# 
   240  0185                     	;# 
   241  0187                     	;# 
   242  0188                     	;# 
   243  0189                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  0000                     	;# 
   247  0001                     	;# 
   248  0002                     	;# 
   249  0003                     	;# 
   250  0004                     	;# 
   251  0005                     	;# 
   252  0006                     	;# 
   253  0007                     	;# 
   254  0008                     	;# 
   255  0009                     	;# 
   256  000A                     	;# 
   257  000B                     	;# 
   258  000C                     	;# 
   259  000D                     	;# 
   260  000E                     	;# 
   261  000E                     	;# 
   262  000F                     	;# 
   263  0010                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0013                     	;# 
   267  0014                     	;# 
   268  0015                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0017                     	;# 
   272  0018                     	;# 
   273  0019                     	;# 
   274  001A                     	;# 
   275  001B                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  001D                     	;# 
   279  001E                     	;# 
   280  001F                     	;# 
   281  0081                     	;# 
   282  0085                     	;# 
   283  0086                     	;# 
   284  0087                     	;# 
   285  0088                     	;# 
   286  0089                     	;# 
   287  008C                     	;# 
   288  008D                     	;# 
   289  008E                     	;# 
   290  008F                     	;# 
   291  0090                     	;# 
   292  0091                     	;# 
   293  0092                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0093                     	;# 
   297  0094                     	;# 
   298  0095                     	;# 
   299  0096                     	;# 
   300  0097                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009A                     	;# 
   304  009B                     	;# 
   305  009C                     	;# 
   306  009D                     	;# 
   307  009E                     	;# 
   308  009F                     	;# 
   309  0105                     	;# 
   310  0107                     	;# 
   311  0108                     	;# 
   312  0109                     	;# 
   313  010C                     	;# 
   314  010C                     	;# 
   315  010D                     	;# 
   316  010E                     	;# 
   317  010F                     	;# 
   318  0185                     	;# 
   319  0187                     	;# 
   320  0188                     	;# 
   321  0189                     	;# 
   322  018C                     	;# 
   323  018D                     	;# 
   324  0000                     	;# 
   325  0001                     	;# 
   326  0002                     	;# 
   327  0003                     	;# 
   328  0004                     	;# 
   329  0005                     	;# 
   330  0006                     	;# 
   331  0007                     	;# 
   332  0008                     	;# 
   333  0009                     	;# 
   334  000A                     	;# 
   335  000B                     	;# 
   336  000C                     	;# 
   337  000D                     	;# 
   338  000E                     	;# 
   339  000E                     	;# 
   340  000F                     	;# 
   341  0010                     	;# 
   342  0011                     	;# 
   343  0012                     	;# 
   344  0013                     	;# 
   345  0014                     	;# 
   346  0015                     	;# 
   347  0015                     	;# 
   348  0016                     	;# 
   349  0017                     	;# 
   350  0018                     	;# 
   351  0019                     	;# 
   352  001A                     	;# 
   353  001B                     	;# 
   354  001B                     	;# 
   355  001C                     	;# 
   356  001D                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  0081                     	;# 
   360  0085                     	;# 
   361  0086                     	;# 
   362  0087                     	;# 
   363  0088                     	;# 
   364  0089                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  008E                     	;# 
   368  008F                     	;# 
   369  0090                     	;# 
   370  0091                     	;# 
   371  0092                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0093                     	;# 
   375  0094                     	;# 
   376  0095                     	;# 
   377  0096                     	;# 
   378  0097                     	;# 
   379  0098                     	;# 
   380  0099                     	;# 
   381  009A                     	;# 
   382  009B                     	;# 
   383  009C                     	;# 
   384  009D                     	;# 
   385  009E                     	;# 
   386  009F                     	;# 
   387  0105                     	;# 
   388  0107                     	;# 
   389  0108                     	;# 
   390  0109                     	;# 
   391  010C                     	;# 
   392  010C                     	;# 
   393  010D                     	;# 
   394  010E                     	;# 
   395  010F                     	;# 
   396  0185                     	;# 
   397  0187                     	;# 
   398  0188                     	;# 
   399  0189                     	;# 
   400  018C                     	;# 
   401  018D                     	;# 
   402  0000                     	;# 
   403  0001                     	;# 
   404  0002                     	;# 
   405  0003                     	;# 
   406  0004                     	;# 
   407  0005                     	;# 
   408  0006                     	;# 
   409  0007                     	;# 
   410  0008                     	;# 
   411  0009                     	;# 
   412  000A                     	;# 
   413  000B                     	;# 
   414  000C                     	;# 
   415  000D                     	;# 
   416  000E                     	;# 
   417  000E                     	;# 
   418  000F                     	;# 
   419  0010                     	;# 
   420  0011                     	;# 
   421  0012                     	;# 
   422  0013                     	;# 
   423  0014                     	;# 
   424  0015                     	;# 
   425  0015                     	;# 
   426  0016                     	;# 
   427  0017                     	;# 
   428  0018                     	;# 
   429  0019                     	;# 
   430  001A                     	;# 
   431  001B                     	;# 
   432  001B                     	;# 
   433  001C                     	;# 
   434  001D                     	;# 
   435  001E                     	;# 
   436  001F                     	;# 
   437  0081                     	;# 
   438  0085                     	;# 
   439  0086                     	;# 
   440  0087                     	;# 
   441  0088                     	;# 
   442  0089                     	;# 
   443  008C                     	;# 
   444  008D                     	;# 
   445  008E                     	;# 
   446  008F                     	;# 
   447  0090                     	;# 
   448  0091                     	;# 
   449  0092                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0093                     	;# 
   453  0094                     	;# 
   454  0095                     	;# 
   455  0096                     	;# 
   456  0097                     	;# 
   457  0098                     	;# 
   458  0099                     	;# 
   459  009A                     	;# 
   460  009B                     	;# 
   461  009C                     	;# 
   462  009D                     	;# 
   463  009E                     	;# 
   464  009F                     	;# 
   465  0105                     	;# 
   466  0107                     	;# 
   467  0108                     	;# 
   468  0109                     	;# 
   469  010C                     	;# 
   470  010C                     	;# 
   471  010D                     	;# 
   472  010E                     	;# 
   473  010F                     	;# 
   474  0185                     	;# 
   475  0187                     	;# 
   476  0188                     	;# 
   477  0189                     	;# 
   478  018C                     	;# 
   479  018D                     	;# 
   480  0000                     	;# 
   481  0001                     	;# 
   482  0002                     	;# 
   483  0003                     	;# 
   484  0004                     	;# 
   485  0005                     	;# 
   486  0006                     	;# 
   487  0007                     	;# 
   488  0008                     	;# 
   489  0009                     	;# 
   490  000A                     	;# 
   491  000B                     	;# 
   492  000C                     	;# 
   493  000D                     	;# 
   494  000E                     	;# 
   495  000E                     	;# 
   496  000F                     	;# 
   497  0010                     	;# 
   498  0011                     	;# 
   499  0012                     	;# 
   500  0013                     	;# 
   501  0014                     	;# 
   502  0015                     	;# 
   503  0015                     	;# 
   504  0016                     	;# 
   505  0017                     	;# 
   506  0018                     	;# 
   507  0019                     	;# 
   508  001A                     	;# 
   509  001B                     	;# 
   510  001B                     	;# 
   511  001C                     	;# 
   512  001D                     	;# 
   513  001E                     	;# 
   514  001F                     	;# 
   515  0081                     	;# 
   516  0085                     	;# 
   517  0086                     	;# 
   518  0087                     	;# 
   519  0088                     	;# 
   520  0089                     	;# 
   521  008C                     	;# 
   522  008D                     	;# 
   523  008E                     	;# 
   524  008F                     	;# 
   525  0090                     	;# 
   526  0091                     	;# 
   527  0092                     	;# 
   528  0093                     	;# 
   529  0093                     	;# 
   530  0093                     	;# 
   531  0094                     	;# 
   532  0095                     	;# 
   533  0096                     	;# 
   534  0097                     	;# 
   535  0098                     	;# 
   536  0099                     	;# 
   537  009A                     	;# 
   538  009B                     	;# 
   539  009C                     	;# 
   540  009D                     	;# 
   541  009E                     	;# 
   542  009F                     	;# 
   543  0105                     	;# 
   544  0107                     	;# 
   545  0108                     	;# 
   546  0109                     	;# 
   547  010C                     	;# 
   548  010C                     	;# 
   549  010D                     	;# 
   550  010E                     	;# 
   551  010F                     	;# 
   552  0185                     	;# 
   553  0187                     	;# 
   554  0188                     	;# 
   555  0189                     	;# 
   556  018C                     	;# 
   557  018D                     	;# 
   558  0000                     	;# 
   559  0001                     	;# 
   560  0002                     	;# 
   561  0003                     	;# 
   562  0004                     	;# 
   563  0005                     	;# 
   564  0006                     	;# 
   565  0007                     	;# 
   566  0008                     	;# 
   567  0009                     	;# 
   568  000A                     	;# 
   569  000B                     	;# 
   570  000C                     	;# 
   571  000D                     	;# 
   572  000E                     	;# 
   573  000E                     	;# 
   574  000F                     	;# 
   575  0010                     	;# 
   576  0011                     	;# 
   577  0012                     	;# 
   578  0013                     	;# 
   579  0014                     	;# 
   580  0015                     	;# 
   581  0015                     	;# 
   582  0016                     	;# 
   583  0017                     	;# 
   584  0018                     	;# 
   585  0019                     	;# 
   586  001A                     	;# 
   587  001B                     	;# 
   588  001B                     	;# 
   589  001C                     	;# 
   590  001D                     	;# 
   591  001E                     	;# 
   592  001F                     	;# 
   593  0081                     	;# 
   594  0085                     	;# 
   595  0086                     	;# 
   596  0087                     	;# 
   597  0088                     	;# 
   598  0089                     	;# 
   599  008C                     	;# 
   600  008D                     	;# 
   601  008E                     	;# 
   602  008F                     	;# 
   603  0090                     	;# 
   604  0091                     	;# 
   605  0092                     	;# 
   606  0093                     	;# 
   607  0093                     	;# 
   608  0093                     	;# 
   609  0094                     	;# 
   610  0095                     	;# 
   611  0096                     	;# 
   612  0097                     	;# 
   613  0098                     	;# 
   614  0099                     	;# 
   615  009A                     	;# 
   616  009B                     	;# 
   617  009C                     	;# 
   618  009D                     	;# 
   619  009E                     	;# 
   620  009F                     	;# 
   621  0105                     	;# 
   622  0107                     	;# 
   623  0108                     	;# 
   624  0109                     	;# 
   625  010C                     	;# 
   626  010C                     	;# 
   627  010D                     	;# 
   628  010E                     	;# 
   629  010F                     	;# 
   630  0185                     	;# 
   631  0187                     	;# 
   632  0188                     	;# 
   633  0189                     	;# 
   634  018C                     	;# 
   635  018D                     	;# 
   636  0000                     	;# 
   637  0001                     	;# 
   638  0002                     	;# 
   639  0003                     	;# 
   640  0004                     	;# 
   641  0005                     	;# 
   642  0006                     	;# 
   643  0007                     	;# 
   644  0008                     	;# 
   645  0009                     	;# 
   646  000A                     	;# 
   647  000B                     	;# 
   648  000C                     	;# 
   649  000D                     	;# 
   650  000E                     	;# 
   651  000E                     	;# 
   652  000F                     	;# 
   653  0010                     	;# 
   654  0011                     	;# 
   655  0012                     	;# 
   656  0013                     	;# 
   657  0014                     	;# 
   658  0015                     	;# 
   659  0015                     	;# 
   660  0016                     	;# 
   661  0017                     	;# 
   662  0018                     	;# 
   663  0019                     	;# 
   664  001A                     	;# 
   665  001B                     	;# 
   666  001B                     	;# 
   667  001C                     	;# 
   668  001D                     	;# 
   669  001E                     	;# 
   670  001F                     	;# 
   671  0081                     	;# 
   672  0085                     	;# 
   673  0086                     	;# 
   674  0087                     	;# 
   675  0088                     	;# 
   676  0089                     	;# 
   677  008C                     	;# 
   678  008D                     	;# 
   679  008E                     	;# 
   680  008F                     	;# 
   681  0090                     	;# 
   682  0091                     	;# 
   683  0092                     	;# 
   684  0093                     	;# 
   685  0093                     	;# 
   686  0093                     	;# 
   687  0094                     	;# 
   688  0095                     	;# 
   689  0096                     	;# 
   690  0097                     	;# 
   691  0098                     	;# 
   692  0099                     	;# 
   693  009A                     	;# 
   694  009B                     	;# 
   695  009C                     	;# 
   696  009D                     	;# 
   697  009E                     	;# 
   698  009F                     	;# 
   699  0105                     	;# 
   700  0107                     	;# 
   701  0108                     	;# 
   702  0109                     	;# 
   703  010C                     	;# 
   704  010C                     	;# 
   705  010D                     	;# 
   706  010E                     	;# 
   707  010F                     	;# 
   708  0185                     	;# 
   709  0187                     	;# 
   710  0188                     	;# 
   711  0189                     	;# 
   712  018C                     	;# 
   713  018D                     	;# 
   714                           
   715                           	psect	idataBANK0
   716  07F5                     __pidataBANK0:	
   717                           
   718                           ;initializer for _d_atras
   719  07F5  3466               	retlw	102
   720                           
   721                           ;initializer for _d_frente
   722  07F6  3466               	retlw	102
   723                           
   724                           ;initializer for _inclinacion
   725  07F7  3404               	retlw	4
   726                           
   727                           ;initializer for _humedad
   728  07F8  3405               	retlw	5
   729                           
   730                           ;initializer for _jahr
   731  07F9  3414               	retlw	20
   732                           
   733                           ;initializer for _mes
   734  07FA  3403               	retlw	3
   735                           
   736                           ;initializer for _datum
   737  07FB  3406               	retlw	6
   738                           
   739                           ;initializer for _dia
   740  07FC  3405               	retlw	5
   741                           
   742                           ;initializer for _hora
   743  07FD  3410               	retlw	16
   744                           
   745                           ;initializer for _min
   746  07FE  3415               	retlw	21
   747                           
   748                           	psect	strings
   749  0800                     __pstrings:	
   750  0800                     stringtab:	
   751  0800                     __stringtab:	
   752  0800                     stringcode:	
   753                           ;	String table - string pointers are 1 byte each
   754                           
   755  0800                     stringdir:	
   756  0800  3008               	movlw	high stringdir
   757  0801  008A               	movwf	10
   758  0802  0804               	movf	4,w
   759  0803  0A84               	incf	4,f
   760  0804  0782               	addwf	2,f
   761  0805                     __stringbase:	
   762  0805  3400               	retlw	0
   763  0806                     __end_of__stringtab:	
   764  0806                     _gota:	
   765  0806  3404               	retlw	4
   766  0807  340A               	retlw	10
   767  0808  340A               	retlw	10
   768  0809  3411               	retlw	17
   769  080A  3411               	retlw	17
   770  080B  3411               	retlw	17
   771  080C  340E               	retlw	14
   772  080D  3400               	retlw	0
   773  080E                     __end_of_gota:	
   774  080E                     _termometro:	
   775  080E  3404               	retlw	4
   776  080F  340A               	retlw	10
   777  0810  340A               	retlw	10
   778  0811  340E               	retlw	14
   779  0812  340E               	retlw	14
   780  0813  341F               	retlw	31
   781  0814  341F               	retlw	31
   782  0815  340E               	retlw	14
   783  0816                     __end_of_termometro:	
   784  0816                     _atilde:	
   785  0816  3402               	retlw	2
   786  0817  3404               	retlw	4
   787  0818  3400               	retlw	0
   788  0819  340E               	retlw	14
   789  081A  3401               	retlw	1
   790  081B  340F               	retlw	15
   791  081C  3411               	retlw	17
   792  081D  340F               	retlw	15
   793  081E                     __end_of_atilde:	
   794  081E                     _arrowr_vacio:	
   795  081E  3400               	retlw	0
   796  081F  3408               	retlw	8
   797  0820  340C               	retlw	12
   798  0821  340A               	retlw	10
   799  0822  3409               	retlw	9
   800  0823  340A               	retlw	10
   801  0824  340C               	retlw	12
   802  0825  3408               	retlw	8
   803  0826                     __end_of_arrowr_vacio:	
   804  0826                     _arrowr:	
   805  0826  3400               	retlw	0
   806  0827  3408               	retlw	8
   807  0828  340C               	retlw	12
   808  0829  340E               	retlw	14
   809  082A  340F               	retlw	15
   810  082B  340E               	retlw	14
   811  082C  340C               	retlw	12
   812  082D  3408               	retlw	8
   813  082E                     __end_of_arrowr:	
   814  0019                     _TXREG	set	25
   815  001A                     _RCREG	set	26
   816  0018                     _RCSTAbits	set	24
   817  0008                     _PORTD	set	8
   818  0005                     _PORTAbits	set	5
   819  0013                     _SSPBUF	set	19
   820  0014                     _SSPCON	set	20
   821  0006                     _PORTBbits	set	6
   822  001F                     _ADCON0bits	set	31
   823  001E                     _ADRESH	set	30
   824  000C                     _PIR1bits	set	12
   825  0005                     _PORTA	set	5
   826  000B                     _INTCONbits	set	11
   827  0063                     _SSPIF	set	99
   828  005E                     _PEIE	set	94
   829  005F                     _GIE	set	95
   830  009A                     _SPBRGH	set	154
   831  0099                     _SPBRG	set	153
   832  0098                     _TXSTAbits	set	152
   833  0091                     _SSPCON2bits	set	145
   834  0087                     _TRISCbits	set	135
   835  0094                     _SSPSTAT	set	148
   836  0093                     _SSPADD	set	147
   837  0091                     _SSPCON2	set	145
   838  008F                     _OSCCONbits	set	143
   839  009F                     _ADCON1bits	set	159
   840  0089                     _TRISE	set	137
   841  0085                     _TRISA	set	133
   842  0088                     _TRISD	set	136
   843  0096                     _IOCB	set	150
   844  0081                     _OPTION_REGbits	set	129
   845  0095                     _WPUB	set	149
   846  0086                     _TRISB	set	134
   847  0463                     _SSPIE	set	1123
   848  043C                     _TRISC4	set	1084
   849  043B                     _TRISC3	set	1083
   850  0187                     _BAUDCTLbits	set	391
   851  0188                     _ANSEL	set	392
   852  0189                     _ANSELH	set	393
   853  082E                     STR_2:	
   854  082E  3441               	retlw	65	;'A'
   855  082F  346D               	retlw	109	;'m'
   856  0830  3462               	retlw	98	;'b'
   857  0831  3469               	retlw	105	;'i'
   858  0832  3465               	retlw	101	;'e'
   859  0833  346E               	retlw	110	;'n'
   860  0834  3474               	retlw	116	;'t'
   861  0835  3465               	retlw	101	;'e'
   862  0836  343A               	retlw	58	;':'
   863  0837  3420               	retlw	32	;' '
   864  0838  3453               	retlw	83	;'S'
   865  0839  3475               	retlw	117	;'u'
   866  083A  3465               	retlw	101	;'e'
   867  083B  346C               	retlw	108	;'l'
   868  083C  346F               	retlw	111	;'o'
   869  083D  343A               	retlw	58	;':'
   870  083E  3400               	retlw	0
   871  083F                     STR_6:	
   872  083F  3445               	retlw	69	;'E'
   873  0840  344D               	retlw	77	;'M'
   874  0841  3445               	retlw	69	;'E'
   875  0842  3452               	retlw	82	;'R'
   876  0843  3447               	retlw	71	;'G'
   877  0844  3445               	retlw	69	;'E'
   878  0845  344E               	retlw	78	;'N'
   879  0846  3443               	retlw	67	;'C'
   880  0847  3449               	retlw	73	;'I'
   881  0848  3441               	retlw	65	;'A'
   882  0849  3421               	retlw	33	;'!'
   883  084A  3420               	retlw	32	;' '
   884  084B  3420               	retlw	32	;' '
   885  084C  3400               	retlw	0
   886  084D                     STR_16:	
   887  084D  3449               	retlw	73	;'I'
   888  084E  344E               	retlw	78	;'N'
   889  084F  3449               	retlw	73	;'I'
   890  0850  3443               	retlw	67	;'C'
   891  0851  3449               	retlw	73	;'I'
   892  0852  3441               	retlw	65	;'A'
   893  0853  344E               	retlw	78	;'N'
   894  0854  3444               	retlw	68	;'D'
   895  0855  344F               	retlw	79	;'O'
   896  0856  342E               	retlw	46	;'.'
   897  0857  342E               	retlw	46	;'.'
   898  0858  342E               	retlw	46	;'.'
   899  0859  3400               	retlw	0
   900  085A                     STR_9:	
   901  085A  3473               	retlw	115	;'s'
   902  085B  343A               	retlw	58	;':'
   903  085C  3420               	retlw	32	;' '
   904  085D  347C               	retlw	124	;'|'
   905  085E  3420               	retlw	32	;' '
   906  085F  3446               	retlw	70	;'F'
   907  0860  3472               	retlw	114	;'r'
   908  0861  3465               	retlw	101	;'e'
   909  0862  346E               	retlw	110	;'n'
   910  0863  3474               	retlw	116	;'t'
   911  0864  3465               	retlw	101	;'e'
   912  0865  343A               	retlw	58	;':'
   913  0866  3400               	retlw	0
   914  0867                     STR_3:	
   915  0867  3449               	retlw	73	;'I'
   916  0868  346E               	retlw	110	;'n'
   917  0869  3463               	retlw	99	;'c'
   918  086A  346C               	retlw	108	;'l'
   919  086B  3469               	retlw	105	;'i'
   920  086C  346E               	retlw	110	;'n'
   921  086D  3461               	retlw	97	;'a'
   922  086E  3463               	retlw	99	;'c'
   923  086F  3469               	retlw	105	;'i'
   924  0870  346F               	retlw	111	;'o'
   925  0871  346E               	retlw	110	;'n'
   926  0872  343A               	retlw	58	;':'
   927  0873  3400               	retlw	0
   928  0874                     STR_14:	
   929  0874  3454               	retlw	84	;'T'
   930  0875  346F               	retlw	111	;'o'
   931  0876  346D               	retlw	109	;'m'
   932  0877  3461               	retlw	97	;'a'
   933  0878  3472               	retlw	114	;'r'
   934  0879  3420               	retlw	32	;' '
   935  087A  3464               	retlw	100	;'d'
   936  087B  3461               	retlw	97	;'a'
   937  087C  3474               	retlw	116	;'t'
   938  087D  346F               	retlw	111	;'o'
   939  087E  3473               	retlw	115	;'s'
   940  087F  343A               	retlw	58	;':'
   941  0880  3400               	retlw	0
   942  0881                     STR_5:	
   943  0881  3450               	retlw	80	;'P'
   944  0882  3465               	retlw	101	;'e'
   945  0883  346C               	retlw	108	;'l'
   946  0884  3469               	retlw	105	;'i'
   947  0885  3467               	retlw	103	;'g'
   948  0886  3472               	retlw	114	;'r'
   949  0887  346F               	retlw	111	;'o'
   950  0888  3421               	retlw	33	;'!'
   951  0889  3420               	retlw	32	;' '
   952  088A  3420               	retlw	32	;' '
   953  088B  3420               	retlw	32	;' '
   954  088C  3400               	retlw	0
   955  088D                     STR_4:	
   956  088D  3445               	retlw	69	;'E'
   957  088E  3473               	retlw	115	;'s'
   958  088F  3474               	retlw	116	;'t'
   959  0890  3461               	retlw	97	;'a'
   960  0891  3462               	retlw	98	;'b'
   961  0892  346C               	retlw	108	;'l'
   962  0893  3465               	retlw	101	;'e'
   963  0894  3420               	retlw	32	;' '
   964  0895  3420               	retlw	32	;' '
   965  0896  3420               	retlw	32	;' '
   966  0897  3400               	retlw	0
   967  0898                     STR_7:	
   968  0898  3448               	retlw	72	;'H'
   969  0899  3475               	retlw	117	;'u'
   970  089A  346D               	retlw	109	;'m'
   971  089B  3465               	retlw	101	;'e'
   972  089C  3464               	retlw	100	;'d'
   973  089D  3461               	retlw	97	;'a'
   974  089E  3464               	retlw	100	;'d'
   975  089F  343A               	retlw	58	;':'
   976  08A0  3400               	retlw	0
   977  08A1                     STR_17:	
   978  08A1  3445               	retlw	69	;'E'
   979  08A2  3452               	retlw	82	;'R'
   980  08A3  3452               	retlw	82	;'R'
   981  08A4  344F               	retlw	79	;'O'
   982  08A5  3452               	retlw	82	;'R'
   983  08A6  3400               	retlw	0
   984  08A7                     STR_11:	
   985  08A7  342D               	retlw	45	;'-'
   986  08A8  342D               	retlw	45	;'-'
   987  08A9  342D               	retlw	45	;'-'
   988  08AA  342D               	retlw	45	;'-'
   989  08AB  3400               	retlw	0
   990  08AC                     STR_8:	
   991  08AC  3441               	retlw	65	;'A'
   992  08AD  3474               	retlw	116	;'t'
   993  08AE  3472               	retlw	114	;'r'
   994  08AF  3400               	retlw	0
   995  08B0                     STR_15:	
   996  08B0  3478               	retlw	120	;'x'
   997  08B1  3420               	retlw	32	;' '
   998  08B2  3400               	retlw	0
   999  08B3                     STR_1:	
  1000  08B3  3432               	retlw	50	;'2'
  1001  08B4  3430               	retlw	48	;'0'
  1002  08B5  3400               	retlw	0
  1003  08B6                     STR_10:	
  1004  08B6  3463               	retlw	99	;'c'
  1005  08B7  346D               	retlw	109	;'m'
  1006  08B8  3400               	retlw	0
  1007  08A7                     
  1008                           ; #config settings
  1009  0000                     
  1010                           	psect	cinit
  1011  000F                     start_initialization:	
  1012  000F                     __initialization:	
  1013                           
  1014                           ; Initialize objects allocated to BANK0
  1015  000F  1383               	bcf	3,7	;select IRP bank0
  1016  0010  3060               	movlw	low (__pdataBANK0+10)
  1017  0011  00FD               	movwf	btemp+-1
  1018  0012  3007               	movlw	high __pidataBANK0
  1019  0013  00FE               	movwf	btemp
  1020  0014  30F5               	movlw	low __pidataBANK0
  1021  0015  00FF               	movwf	btemp+1
  1022  0016  3056               	movlw	low __pdataBANK0
  1023  0017  0084               	movwf	4
  1024  0018  160A  118A  26D2  120A  118A  	fcall	init_ram0
  1025                           
  1026                           ; Clear objects allocated to BANK0
  1027  001D  3043               	movlw	low __pbssBANK0
  1028  001E  0084               	movwf	4
  1029  001F  3056               	movlw	low (__pbssBANK0+19)
  1030  0020  160A  118A  2695   	fcall	clear_ram0
  1031                           
  1032                           ; Clear objects allocated to COMMON
  1033  0023  01FA               	clrf	__pbssCOMMON& (0+127)
  1034  0024  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1035  0025                     end_of_initialization:	
  1036                           ;End of C runtime variable initialization code
  1037                           
  1038  0025                     __end_of__initialization:	
  1039  0025  0183               	clrf	3
  1040  0026  120A  158A  2F4D   	ljmp	_main	;jump to C main() function
  1041                           
  1042                           	psect	bssCOMMON
  1043  007A                     __pbssCOMMON:	
  1044  007A                     _banderaPUSH1:	
  1045  007A                     	ds	1
  1046  007B                     _banderaBoton:	
  1047  007B                     	ds	1
  1048                           
  1049                           	psect	bssBANK0
  1050  0043                     __pbssBANK0:	
  1051  0043                     uint_to_array@F1343:	
  1052  0043                     	ds	6
  1053  0049                     _accZ:	
  1054  0049                     	ds	2
  1055  004B                     _sprintbuffer:	
  1056  004B                     	ds	1
  1057  004C                     _ancho:	
  1058  004C                     	ds	1
  1059  004D                     _largo:	
  1060  004D                     	ds	1
  1061  004E                     _bajar:	
  1062  004E                     	ds	1
  1063  004F                     _banderaPUSH2:	
  1064  004F                     	ds	1
  1065  0050                     _obj_array:	
  1066  0050                     	ds	1
  1067  0051                     _temperatura_obj:	
  1068  0051                     	ds	1
  1069  0052                     _temperatura:	
  1070  0052                     	ds	1
  1071  0053                     _velocidad:	
  1072  0053                     	ds	1
  1073  0054                     _seg:	
  1074  0054                     	ds	1
  1075  0055                     _estado:	
  1076  0055                     	ds	1
  1077                           
  1078                           	psect	dataBANK0
  1079  0056                     __pdataBANK0:	
  1080  0056                     _d_atras:	
  1081  0056                     	ds	1
  1082  0057                     _d_frente:	
  1083  0057                     	ds	1
  1084  0058                     _inclinacion:	
  1085  0058                     	ds	1
  1086  0059                     _humedad:	
  1087  0059                     	ds	1
  1088  005A                     _jahr:	
  1089  005A                     	ds	1
  1090  005B                     _mes:	
  1091  005B                     	ds	1
  1092  005C                     _datum:	
  1093  005C                     	ds	1
  1094  005D                     _dia:	
  1095  005D                     	ds	1
  1096  005E                     _hora:	
  1097  005E                     	ds	1
  1098  005F                     _min:	
  1099  005F                     	ds	1
  1100                           
  1101                           	psect	inittext
  1102  16CE                     init_fetch0:	
  1103                           ;	Called with low address in FSR and high address in W
  1104                           
  1105  16CE  087E               	movf	126,w
  1106  16CF  008A               	movwf	10
  1107  16D0  087F               	movf	127,w
  1108  16D1  0082               	movwf	2
  1109  16D2                     init_ram0:	
  1110                           ;Called with:
  1111                           ;	high address of idata address in btemp 
  1112                           ;	low address of idata address in btemp+1 
  1113                           ;	low address of data in FSR
  1114                           ;	high address + 1 of data in btemp-1
  1115                           
  1116  16D2  26CE  160A  118A   	fcall	init_fetch0
  1117  16D5  0080               	movwf	0
  1118  16D6  0A84               	incf	4,f
  1119  16D7  0804               	movf	4,w
  1120  16D8  067D               	xorwf	125,w
  1121  16D9  1903               	btfsc	3,2
  1122  16DA  3400               	retlw	0
  1123  16DB  0AFF               	incf	127,f
  1124  16DC  1903               	btfsc	3,2
  1125  16DD  0AFE               	incf	126,f
  1126  16DE  2ED2               	goto	init_ram0
  1127                           
  1128                           	psect	clrtext
  1129  1695                     clear_ram0:	
  1130                           ;	Called with FSR containing the base address, and
  1131                           ;	W with the last address+1
  1132                           
  1133  1695  0064               	clrwdt	;clear the watchdog before getting into this loop
  1134  1696                     clrloop0:	
  1135  1696  0180               	clrf	0	;clear RAM location pointed to by FSR
  1136  1697  0A84               	incf	4,f	;increment pointer
  1137  1698  0604               	xorwf	4,w	;XOR with final address
  1138  1699  1903               	btfsc	3,2	;have we reached the end yet?
  1139  169A  3400               	retlw	0	;all done for this memory range, return
  1140  169B  0604               	xorwf	4,w	;XOR again to restore value
  1141  169C  2E96               	goto	clrloop0	;do the next byte
  1142                           
  1143                           	psect	cstackCOMMON
  1144  0070                     __pcstackCOMMON:	
  1145  0070                     ?_SetUp:	
  1146  0070                     ?_get_Time:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ?_get_temperatura:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ?_get_temperatura_obj:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ?_inclinacion_:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ?_get_dis:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_mostrarLCD:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ?_pressBoton1:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_pressBoton2:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ?_uartTX_Write:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_LCD_init:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ?_LCD_clear:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_Zeit_Datum_Set:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ?_I2C_Master_Start:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_I2C_Master_Stop:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ?_init_ADC:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?_LCD_Write_Character:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ?_LCD_Write_String:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ?_uint_to_array:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_ISR:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ??_ISR:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_main:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_BCD_a_DEC:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_DEC_a_BCD:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ?_I2C_Master_Wait:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ?_LCD_Cmd:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221                           
  1222                           ; 1 bytes @ 0x0
  1223  0070                     	ds	2
  1224  0072                     ??_uartTX_Write:	
  1225  0072                     ?_OSC_config:	
  1226                           ; 1 bytes @ 0x2
  1227                           
  1228  0072                     ?_uart_init:	
  1229                           ; 1 bytes @ 0x2
  1230                           
  1231  0072                     ??_I2C_Master_Start:	
  1232                           ; 1 bytes @ 0x2
  1233                           
  1234  0072                     ??_I2C_Master_Stop:	
  1235                           ; 1 bytes @ 0x2
  1236                           
  1237  0072                     ??_init_ADC:	
  1238                           ; 1 bytes @ 0x2
  1239                           
  1240  0072                     ??_LCD_Write_Character:	
  1241                           ; 1 bytes @ 0x2
  1242                           
  1243  0072                     ??_I2C_Master_Wait:	
  1244                           ; 1 bytes @ 0x2
  1245                           
  1246  0072                     ??_LCD_Cmd:	
  1247                           ; 1 bytes @ 0x2
  1248                           
  1249  0072                     ?___bmul:	
  1250                           ; 1 bytes @ 0x2
  1251                           
  1252  0072                     ?_I2C_Master_Read:	
  1253                           ; 1 bytes @ 0x2
  1254                           
  1255  0072                     ?___wmul:	
  1256                           ; 2 bytes @ 0x2
  1257                           
  1258  0072                     ?___awmod:	
  1259                           ; 2 bytes @ 0x2
  1260                           
  1261  0072                     ?___lldiv:	
  1262                           ; 2 bytes @ 0x2
  1263                           
  1264  0072                     uartTX_Write@dato:	
  1265                           ; 4 bytes @ 0x2
  1266                           
  1267  0072                     ___bmul@multiplicand:	
  1268                           ; 1 bytes @ 0x2
  1269                           
  1270  0072                     I2C_Master_Read@a:	
  1271                           ; 1 bytes @ 0x2
  1272                           
  1273  0072                     ___wmul@multiplier:	
  1274                           ; 2 bytes @ 0x2
  1275                           
  1276  0072                     ___awmod@divisor:	
  1277                           ; 2 bytes @ 0x2
  1278                           
  1279  0072                     OSC_config@frecuencia:	
  1280                           ; 2 bytes @ 0x2
  1281                           
  1282  0072                     ___lldiv@divisor:	
  1283                           ; 4 bytes @ 0x2
  1284                           
  1285                           
  1286                           ; 4 bytes @ 0x2
  1287  0072                     	ds	1
  1288  0073                     ??___bmul:	
  1289  0073                     LCD_Write_Character@caracter:	
  1290                           ; 1 bytes @ 0x3
  1291                           
  1292                           
  1293                           ; 1 bytes @ 0x3
  1294  0073                     	ds	1
  1295  0074                     ??_uart_init:	
  1296  0074                     ??_I2C_Master_Read:	
  1297                           ; 1 bytes @ 0x4
  1298                           
  1299  0074                     ??_LCD_Write_String:	
  1300                           ; 1 bytes @ 0x4
  1301                           
  1302  0074                     init_ADC@channel:	
  1303                           ; 1 bytes @ 0x4
  1304                           
  1305  0074                     LCD_Cmd@comando:	
  1306                           ; 1 bytes @ 0x4
  1307                           
  1308  0074                     ___bmul@product:	
  1309                           ; 1 bytes @ 0x4
  1310                           
  1311  0074                     LCD_Write_String@n:	
  1312                           ; 1 bytes @ 0x4
  1313                           
  1314  0074                     ___wmul@multiplicand:	
  1315                           ; 2 bytes @ 0x4
  1316                           
  1317  0074                     ___awmod@dividend:	
  1318                           ; 2 bytes @ 0x4
  1319                           
  1320                           
  1321                           ; 2 bytes @ 0x4
  1322  0074                     	ds	1
  1323  0075                     ??_get_temperatura:	
  1324  0075                     ??_get_temperatura_obj:	
  1325                           ; 1 bytes @ 0x5
  1326                           
  1327  0075                     ??_inclinacion_:	
  1328                           ; 1 bytes @ 0x5
  1329                           
  1330  0075                     ??_LCD_init:	
  1331                           ; 1 bytes @ 0x5
  1332                           
  1333  0075                     ?_LCD_Create_Char:	
  1334                           ; 1 bytes @ 0x5
  1335                           
  1336  0075                     ??_LCD_clear:	
  1337                           ; 1 bytes @ 0x5
  1338                           
  1339  0075                     ?_LCD_Set_Cursor:	
  1340                           ; 1 bytes @ 0x5
  1341                           
  1342  0075                     LCD_Set_Cursor@columna:	
  1343                           ; 1 bytes @ 0x5
  1344                           
  1345  0075                     LCD_Create_Char@chardata:	
  1346                           ; 1 bytes @ 0x5
  1347                           
  1348  0075                     ___bmul@multiplier:	
  1349                           ; 1 bytes @ 0x5
  1350                           
  1351                           
  1352                           ; 1 bytes @ 0x5
  1353  0075                     	ds	1
  1354  0076                     ??_OSC_config:	
  1355  0076                     ??_LCD_Create_Char:	
  1356                           ; 1 bytes @ 0x6
  1357                           
  1358  0076                     ??_LCD_Set_Cursor:	
  1359                           ; 1 bytes @ 0x6
  1360                           
  1361  0076                     ??_BCD_a_DEC:	
  1362                           ; 1 bytes @ 0x6
  1363                           
  1364  0076                     ??___wmul:	
  1365                           ; 1 bytes @ 0x6
  1366                           
  1367  0076                     ??___awmod:	
  1368                           ; 1 bytes @ 0x6
  1369                           
  1370  0076                     LCD_Write_String@a:	
  1371                           ; 1 bytes @ 0x6
  1372                           
  1373  0076                     I2C_Master_Read@temp:	
  1374                           ; 1 bytes @ 0x6
  1375                           
  1376  0076                     ___wmul@product:	
  1377                           ; 2 bytes @ 0x6
  1378                           
  1379  0076                     ___lldiv@dividend:	
  1380                           ; 2 bytes @ 0x6
  1381                           
  1382                           
  1383                           ; 4 bytes @ 0x6
  1384  0076                     	ds	1
  1385  0077                     ??_pressBoton1:	
  1386  0077                     LCD_Create_Char@charnum:	
  1387                           ; 1 bytes @ 0x7
  1388                           
  1389  0077                     ___awmod@counter:	
  1390                           ; 1 bytes @ 0x7
  1391                           
  1392                           
  1393                           ; 1 bytes @ 0x7
  1394  0077                     	ds	1
  1395  0078                     ??___awdiv:	
  1396  0078                     LCD_Set_Cursor@linea:	
  1397                           ; 1 bytes @ 0x8
  1398                           
  1399  0078                     LCD_Create_Char@n:	
  1400                           ; 1 bytes @ 0x8
  1401                           
  1402  0078                     ___awmod@sign:	
  1403                           ; 1 bytes @ 0x8
  1404                           
  1405                           
  1406                           ; 1 bytes @ 0x8
  1407  0078                     	ds	1
  1408  0079                     BCD_a_DEC@numBCD:	
  1409  0079                     DEC_a_BCD@numDEC:	
  1410                           ; 1 bytes @ 0x9
  1411                           
  1412  0079                     LCD_Set_Cursor@corrimiento:	
  1413                           ; 1 bytes @ 0x9
  1414                           
  1415                           
  1416                           ; 1 bytes @ 0x9
  1417  0079                     	ds	1
  1418  007A                     ??_I2C_Master_Write:	
  1419                           
  1420                           	psect	cstackBANK0
  1421  0020                     __pcstackBANK0:	
  1422                           ; 1 bytes @ 0xA
  1423                           
  1424  0020                     ??_pressBoton2:	
  1425  0020                     ??___lldiv:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428  0020                     ?___awdiv:	
  1429                           ; 1 bytes @ 0x0
  1430                           
  1431  0020                     ___awdiv@divisor:	
  1432                           ; 2 bytes @ 0x0
  1433                           
  1434                           
  1435                           ; 2 bytes @ 0x0
  1436  0020                     	ds	1
  1437  0021                     ___lldiv@quotient:	
  1438                           
  1439                           ; 4 bytes @ 0x1
  1440  0021                     	ds	1
  1441  0022                     ___awdiv@dividend:	
  1442                           
  1443                           ; 2 bytes @ 0x2
  1444  0022                     	ds	2
  1445  0024                     ___awdiv@counter:	
  1446                           
  1447                           ; 1 bytes @ 0x4
  1448  0024                     	ds	1
  1449  0025                     ___lldiv@counter:	
  1450  0025                     ___awdiv@sign:	
  1451                           ; 1 bytes @ 0x5
  1452                           
  1453                           
  1454                           ; 1 bytes @ 0x5
  1455  0025                     	ds	1
  1456  0026                     ?_I2C_Master_Init:	
  1457  0026                     ___awdiv@quotient:	
  1458                           ; 1 bytes @ 0x6
  1459                           
  1460  0026                     I2C_Master_Init@c:	
  1461                           ; 2 bytes @ 0x6
  1462                           
  1463                           
  1464                           ; 4 bytes @ 0x6
  1465  0026                     	ds	2
  1466  0028                     ??_uint_to_array:	
  1467  0028                     ?_display_Uhrzeit:	
  1468                           ; 1 bytes @ 0x8
  1469                           
  1470  0028                     ?_display_Datum:	
  1471                           ; 1 bytes @ 0x8
  1472                           
  1473  0028                     ??_DEC_a_BCD:	
  1474                           ; 1 bytes @ 0x8
  1475                           
  1476  0028                     display_Uhrzeit@columna:	
  1477                           ; 1 bytes @ 0x8
  1478                           
  1479  0028                     display_Datum@columna:	
  1480                           ; 1 bytes @ 0x8
  1481                           
  1482                           
  1483                           ; 1 bytes @ 0x8
  1484  0028                     	ds	1
  1485  0029                     ??_display_Uhrzeit:	
  1486  0029                     ??_display_Datum:	
  1487                           ; 1 bytes @ 0x9
  1488                           
  1489                           
  1490                           ; 1 bytes @ 0x9
  1491  0029                     	ds	1
  1492  002A                     ??_I2C_Master_Init:	
  1493                           
  1494                           ; 1 bytes @ 0xA
  1495  002A                     	ds	2
  1496  002C                     display_Uhrzeit@fila:	
  1497  002C                     display_Datum@fila:	
  1498                           ; 1 bytes @ 0xC
  1499                           
  1500                           
  1501                           ; 1 bytes @ 0xC
  1502  002C                     	ds	1
  1503  002D                     ?_I2C_Master_Write:	
  1504  002D                     display_Uhrzeit@seg_u:	
  1505                           ; 1 bytes @ 0xD
  1506                           
  1507  002D                     display_Datum@dia_u:	
  1508                           ; 1 bytes @ 0xD
  1509                           
  1510  002D                     I2C_Master_Write@d:	
  1511                           ; 1 bytes @ 0xD
  1512                           
  1513                           
  1514                           ; 2 bytes @ 0xD
  1515  002D                     	ds	1
  1516  002E                     display_Uhrzeit@seg_d:	
  1517  002E                     display_Datum@dia_d:	
  1518                           ; 1 bytes @ 0xE
  1519                           
  1520  002E                     uint_to_array@decenas:	
  1521                           ; 1 bytes @ 0xE
  1522                           
  1523                           
  1524                           ; 1 bytes @ 0xE
  1525  002E                     	ds	1
  1526  002F                     ??_get_Time:	
  1527  002F                     ??_get_dis:	
  1528                           ; 1 bytes @ 0xF
  1529                           
  1530  002F                     ??_Zeit_Datum_Set:	
  1531                           ; 1 bytes @ 0xF
  1532                           
  1533  002F                     display_Uhrzeit@min_u:	
  1534                           ; 1 bytes @ 0xF
  1535                           
  1536  002F                     display_Datum@mes_u:	
  1537                           ; 1 bytes @ 0xF
  1538                           
  1539  002F                     uint_to_array@centenas:	
  1540                           ; 1 bytes @ 0xF
  1541                           
  1542                           
  1543                           ; 1 bytes @ 0xF
  1544  002F                     	ds	1
  1545  0030                     display_Uhrzeit@min_d:	
  1546  0030                     display_Datum@mes_d:	
  1547                           ; 1 bytes @ 0x10
  1548                           
  1549  0030                     uint_to_array@resultado:	
  1550                           ; 1 bytes @ 0x10
  1551                           
  1552                           
  1553                           ; 6 bytes @ 0x10
  1554  0030                     	ds	1
  1555  0031                     ??_SetUp:	
  1556  0031                     display_Uhrzeit@Uhr_u:	
  1557                           ; 1 bytes @ 0x11
  1558                           
  1559  0031                     display_Datum@jahr_u:	
  1560                           ; 1 bytes @ 0x11
  1561                           
  1562                           
  1563                           ; 1 bytes @ 0x11
  1564  0031                     	ds	1
  1565  0032                     display_Uhrzeit@Uhr_d:	
  1566  0032                     display_Datum@jahr_d:	
  1567                           ; 1 bytes @ 0x12
  1568                           
  1569                           
  1570                           ; 1 bytes @ 0x12
  1571  0032                     	ds	4
  1572  0036                     uint_to_array@numero:	
  1573                           
  1574                           ; 1 bytes @ 0x16
  1575  0036                     	ds	1
  1576  0037                     ??_mostrarLCD:	
  1577                           
  1578                           ; 1 bytes @ 0x17
  1579  0037                     	ds	3
  1580  003A                     mostrarLCD@pantalla:	
  1581                           
  1582                           ; 1 bytes @ 0x1A
  1583  003A                     	ds	2
  1584  003C                     mostrarLCD@uni_frente:	
  1585                           
  1586                           ; 1 bytes @ 0x1C
  1587  003C                     	ds	1
  1588  003D                     mostrarLCD@uni_atras:	
  1589                           
  1590                           ; 1 bytes @ 0x1D
  1591  003D                     	ds	2
  1592  003F                     mostrarLCD@dec_frente:	
  1593                           
  1594                           ; 1 bytes @ 0x1F
  1595  003F                     	ds	1
  1596  0040                     mostrarLCD@dec_atras:	
  1597                           
  1598                           ; 1 bytes @ 0x20
  1599  0040                     	ds	1
  1600  0041                     ??_main:	
  1601                           
  1602                           ; 1 bytes @ 0x21
  1603  0041                     	ds	2
  1604                           
  1605                           	psect	maintext
  1606  0F4D                     __pmaintext:	
  1607 ;;
  1608 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1609 ;;
  1610 ;; *************** function _main *****************
  1611 ;; Defined at:
  1612 ;;		line 146 in file "main_Master.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;		None
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;		None
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      void 
  1619 ;; Registers used:
  1620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : B00/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1626 ;;      Params:         0       0       0       0       0
  1627 ;;      Locals:         0       0       0       0       0
  1628 ;;      Temps:          0       2       0       0       0
  1629 ;;      Totals:         0       2       0       0       0
  1630 ;;Total ram usage:        2 bytes
  1631 ;; Hardware stack levels required when called:    5
  1632 ;; This function calls:
  1633 ;;		_SetUp
  1634 ;;		_get_Time
  1635 ;;		_get_dis
  1636 ;;		_get_temperatura
  1637 ;;		_get_temperatura_obj
  1638 ;;		_inclinacion_
  1639 ;;		_mostrarLCD
  1640 ;;		_pressBoton1
  1641 ;;		_pressBoton2
  1642 ;;		_uartTX_Write
  1643 ;; This function is called by:
  1644 ;;		Startup code after reset
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           
  1649                           ;psect for function _main
  1650  0F4D                     _main:	
  1651                           
  1652                           ;main_Master.c: 147:     SetUp();
  1653                           
  1654                           ;incstack = 0
  1655                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1656  0F4D  120A  158A  24A8  120A  158A  	fcall	_SetUp
  1657  0F52                     l4639:	
  1658                           
  1659                           ;main_Master.c: 151:         _delay((unsigned long)((10)*(1000000/4000.0)));
  1660  0F52  3004               	movlw	4
  1661  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  1662  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  1663  0F55  00C2               	movwf	??_main+1
  1664  0F56  303D               	movlw	61
  1665  0F57  00C1               	movwf	??_main
  1666  0F58                     u2007:	
  1667  0F58  0BC1               	decfsz	??_main,f
  1668  0F59  2F58               	goto	u2007
  1669  0F5A  0BC2               	decfsz	??_main+1,f
  1670  0F5B  2F58               	goto	u2007
  1671                           
  1672                           ;main_Master.c: 152:         get_Time();
  1673  0F5C  120A  118A  241F  120A  158A  	fcall	_get_Time
  1674                           
  1675                           ;main_Master.c: 153:         _delay((unsigned long)((50)*(1000000/4000.0)));
  1676  0F61  3011               	movlw	17
  1677  0F62  1283               	bcf	3,5	;RP0=0, select bank0
  1678  0F63  1303               	bcf	3,6	;RP1=0, select bank0
  1679  0F64  00C2               	movwf	??_main+1
  1680  0F65  3039               	movlw	57
  1681  0F66  00C1               	movwf	??_main
  1682  0F67                     u2017:	
  1683  0F67  0BC1               	decfsz	??_main,f
  1684  0F68  2F67               	goto	u2017
  1685  0F69  0BC2               	decfsz	??_main+1,f
  1686  0F6A  2F67               	goto	u2017
  1687  0F6B  2F6C               	nop2
  1688                           
  1689                           ;main_Master.c: 154:         get_temperatura();
  1690  0F6C  160A  118A  2720  120A  158A  	fcall	_get_temperatura
  1691                           
  1692                           ;main_Master.c: 155:         _delay((unsigned long)((50)*(1000000/4000.0)));
  1693  0F71  3011               	movlw	17
  1694  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  1695  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  1696  0F74  00C2               	movwf	??_main+1
  1697  0F75  3039               	movlw	57
  1698  0F76  00C1               	movwf	??_main
  1699  0F77                     u2027:	
  1700  0F77  0BC1               	decfsz	??_main,f
  1701  0F78  2F77               	goto	u2027
  1702  0F79  0BC2               	decfsz	??_main+1,f
  1703  0F7A  2F77               	goto	u2027
  1704  0F7B  2F7C               	nop2
  1705                           
  1706                           ;main_Master.c: 156:         get_temperatura_obj();
  1707  0F7C  160A  118A  2737  120A  158A  	fcall	_get_temperatura_obj
  1708                           
  1709                           ;main_Master.c: 157:         _delay((unsigned long)((50)*(1000000/4000.0)));
  1710  0F81  3011               	movlw	17
  1711  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  1712  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  1713  0F84  00C2               	movwf	??_main+1
  1714  0F85  3039               	movlw	57
  1715  0F86  00C1               	movwf	??_main
  1716  0F87                     u2037:	
  1717  0F87  0BC1               	decfsz	??_main,f
  1718  0F88  2F87               	goto	u2037
  1719  0F89  0BC2               	decfsz	??_main+1,f
  1720  0F8A  2F87               	goto	u2037
  1721  0F8B  2F8C               	nop2
  1722                           
  1723                           ;main_Master.c: 158:         inclinacion_();
  1724  0F8C  160A  118A  274E  120A  158A  	fcall	_inclinacion_
  1725                           
  1726                           ;main_Master.c: 159:         _delay((unsigned long)((50)*(1000000/4000.0)));
  1727  0F91  3011               	movlw	17
  1728  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  1729  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  1730  0F94  00C2               	movwf	??_main+1
  1731  0F95  3039               	movlw	57
  1732  0F96  00C1               	movwf	??_main
  1733  0F97                     u2047:	
  1734  0F97  0BC1               	decfsz	??_main,f
  1735  0F98  2F97               	goto	u2047
  1736  0F99  0BC2               	decfsz	??_main+1,f
  1737  0F9A  2F97               	goto	u2047
  1738  0F9B  2F9C               	nop2
  1739                           
  1740                           ;main_Master.c: 160:         get_dis();
  1741  0F9C  120A  158A  23A5  120A  158A  	fcall	_get_dis
  1742                           
  1743                           ;main_Master.c: 167:         mostrarLCD(estado);
  1744  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  1745  0FA2  1303               	bcf	3,6	;RP1=0, select bank0
  1746  0FA3  0855               	movf	_estado,w
  1747  0FA4  120A  118A  2029  120A  158A  	fcall	_mostrarLCD
  1748                           
  1749                           ;main_Master.c: 168:         pressBoton1();
  1750  0FA9  120A  158A  22BA  120A  158A  	fcall	_pressBoton1
  1751                           
  1752                           ;main_Master.c: 169:         pressBoton2();
  1753  0FAE  120A  158A  25F0  120A  158A  	fcall	_pressBoton2
  1754                           
  1755                           ;main_Master.c: 171:         uartTX_Write(125);
  1756  0FB3  307D               	movlw	125
  1757  0FB4  160A  118A  268D  120A  158A  	fcall	_uartTX_Write
  1758                           
  1759                           ;main_Master.c: 172:         uartTX_Write(hora);
  1760  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  1761  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  1762  0FBB  085E               	movf	_hora,w
  1763  0FBC  160A  118A  268D  120A  158A  	fcall	_uartTX_Write
  1764                           
  1765                           ;main_Master.c: 173:         uartTX_Write(min);
  1766  0FC1  1283               	bcf	3,5	;RP0=0, select bank0
  1767  0FC2  1303               	bcf	3,6	;RP1=0, select bank0
  1768  0FC3  085F               	movf	_min,w
  1769  0FC4  160A  118A  268D  120A  158A  	fcall	_uartTX_Write
  1770                           
  1771                           ;main_Master.c: 174:         uartTX_Write(seg);
  1772  0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  1773  0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  1774  0FCB  0854               	movf	_seg,w
  1775  0FCC  160A  118A  268D  120A  158A  	fcall	_uartTX_Write
  1776                           
  1777                           ;main_Master.c: 175:         uartTX_Write(temperatura);
  1778  0FD1  1283               	bcf	3,5	;RP0=0, select bank0
  1779  0FD2  1303               	bcf	3,6	;RP1=0, select bank0
  1780  0FD3  0852               	movf	_temperatura,w
  1781  0FD4  160A  118A  268D  120A  158A  	fcall	_uartTX_Write
  1782                           
  1783                           ;main_Master.c: 176:         uartTX_Write(temperatura_obj);
  1784  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  1785  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  1786  0FDB  0851               	movf	_temperatura_obj,w
  1787  0FDC  160A  118A  268D  120A  158A  	fcall	_uartTX_Write
  1788                           
  1789                           ;main_Master.c: 177:         uartTX_Write(inclinacion);
  1790  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  1791  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  1792  0FE3  0858               	movf	_inclinacion,w
  1793  0FE4  160A  118A  268D  120A  158A  	fcall	_uartTX_Write
  1794                           
  1795                           ;main_Master.c: 178:         uartTX_Write(humedad);
  1796  0FE9  3005               	movlw	5
  1797  0FEA  160A  118A  268D  120A  158A  	fcall	_uartTX_Write
  1798                           
  1799                           ;main_Master.c: 179:         uartTX_Write(d_frente);
  1800  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  1801  0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  1802  0FF1  0857               	movf	_d_frente,w
  1803  0FF2  160A  118A  268D  120A  158A  	fcall	_uartTX_Write
  1804                           
  1805                           ;main_Master.c: 180:         uartTX_Write(d_atras);
  1806  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  1807  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  1808  0FF9  0856               	movf	_d_atras,w
  1809  0FFA  160A  118A  268D  120A  158A  	fcall	_uartTX_Write
  1810  0FFF  2F52               	goto	l4639
  1811  1000                     __end_of_main:	
  1812                           
  1813                           	psect	text1
  1814  168D                     __ptext1:	
  1815 ;; *************** function _uartTX_Write *****************
  1816 ;; Defined at:
  1817 ;;		line 34 in file "UART.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  dato            1    wreg     unsigned char 
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;  dato            1    2[COMMON] unsigned char 
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1831 ;;      Params:         0       0       0       0       0
  1832 ;;      Locals:         1       0       0       0       0
  1833 ;;      Temps:          0       0       0       0       0
  1834 ;;      Totals:         1       0       0       0       0
  1835 ;;Total ram usage:        1 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    1
  1838 ;; This function calls:
  1839 ;;		Nothing
  1840 ;; This function is called by:
  1841 ;;		_main
  1842 ;;		_uartTX_Write_Str
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           
  1847                           ;psect for function _uartTX_Write
  1848  168D                     _uartTX_Write:	
  1849                           
  1850                           ;incstack = 0
  1851                           ; Regs used in _uartTX_Write: [wreg]
  1852                           ;uartTX_Write@dato stored from wreg
  1853  168D  00F2               	movwf	uartTX_Write@dato
  1854                           
  1855                           ;UART.c: 35:     TXREG = dato;
  1856  168E  0872               	movf	uartTX_Write@dato,w
  1857  168F  1283               	bcf	3,5	;RP0=0, select bank0
  1858  1690  1303               	bcf	3,6	;RP1=0, select bank0
  1859  1691  0099               	movwf	25	;volatile
  1860  1692                     l497:	
  1861                           ;UART.c: 36:     while(PIR1bits.TXIF == 0);
  1862                           
  1863  1692  1A0C               	btfsc	12,4	;volatile
  1864  1693  0008               	return
  1865  1694  2E92               	goto	l497
  1866  1695                     __end_of_uartTX_Write:	
  1867                           
  1868                           	psect	text2
  1869  0DF0                     __ptext2:	
  1870 ;; *************** function _pressBoton2 *****************
  1871 ;; Defined at:
  1872 ;;		line 683 in file "main_Master.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1886 ;;      Params:         0       0       0       0       0
  1887 ;;      Locals:         0       0       0       0       0
  1888 ;;      Temps:          0       2       0       0       0
  1889 ;;      Totals:         0       2       0       0       0
  1890 ;;Total ram usage:        2 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    3
  1893 ;; This function calls:
  1894 ;;		_LCD_Set_Cursor
  1895 ;;		_LCD_Write_Character
  1896 ;;		_LCD_clear
  1897 ;; This function is called by:
  1898 ;;		_main
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           
  1903                           ;psect for function _pressBoton2
  1904  0DF0                     _pressBoton2:	
  1905                           
  1906                           ;main_Master.c: 684:     if (banderaBoton == 1){
  1907                           
  1908                           ;incstack = 0
  1909                           ; Regs used in _pressBoton2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1910  0DF0  037B               	decf	_banderaBoton,w
  1911  0DF1  1D03               	btfss	3,2
  1912  0DF2  2E87               	goto	l4625
  1913                           
  1914                           ;main_Master.c: 685:         if (banderaPUSH2 == 0){
  1915  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  1916  0DF4  1303               	bcf	3,6	;RP1=0, select bank0
  1917  0DF5  084F               	movf	_banderaPUSH2,w
  1918  0DF6  1D03               	btfss	3,2
  1919  0DF7  2E87               	goto	l4625
  1920                           
  1921                           ;main_Master.c: 686:             if (PORTBbits.RB2 == 0){
  1922  0DF8  1D06               	btfss	6,2	;volatile
  1923  0DF9  2E68               	goto	l4617
  1924  0DFA  2E81               	goto	l4619
  1925  0DFB                     l4585:	
  1926                           
  1927                           ;main_Master.c: 689:                         estado = 6;
  1928  0DFB  3006               	movlw	6
  1929  0DFC  2E59               	goto	L5
  1930  0DFD                     l4587:	
  1931                           ;main_Master.c: 690:                         break;
  1932                           
  1933                           
  1934                           ;main_Master.c: 692:                         LCD_Set_Cursor(2,0);
  1935  0DFD  01F5               	clrf	LCD_Set_Cursor@columna
  1936  0DFE  3002               	movlw	2
  1937  0DFF  120A  158A  20C2  120A  158A  	fcall	_LCD_Set_Cursor
  1938                           
  1939                           ;main_Master.c: 693:                         LCD_Write_Character(1);
  1940  0E04  3001               	movlw	1
  1941  0E05  160A  118A  269D  120A  158A  	fcall	_LCD_Write_Character
  1942                           
  1943                           ;main_Master.c: 694:                         _delay((unsigned long)((100)*(1000000/4000.
      +                          0)));
  1944  0E0A  3021               	movlw	33
  1945  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  1946  0E0C  1303               	bcf	3,6	;RP1=0, select bank0
  1947  0E0D  00A1               	movwf	??_pressBoton2+1
  1948  0E0E  3075               	movlw	117
  1949  0E0F  00A0               	movwf	??_pressBoton2
  1950  0E10                     u2057:	
  1951  0E10  0BA0               	decfsz	??_pressBoton2,f
  1952  0E11  2E10               	goto	u2057
  1953  0E12  0BA1               	decfsz	??_pressBoton2+1,f
  1954  0E13  2E10               	goto	u2057
  1955  0E14  2E15               	nop2
  1956                           
  1957                           ;main_Master.c: 695:                         estado = 7;
  1958  0E15  3007               	movlw	7
  1959  0E16  2E57               	goto	L6
  1960  0E17                     l4595:	
  1961                           ;main_Master.c: 696:                         break;
  1962                           
  1963                           
  1964                           ;main_Master.c: 698:                         LCD_Set_Cursor(2,7);
  1965  0E17  3007               	movlw	7
  1966  0E18  00A0               	movwf	??_pressBoton2
  1967  0E19  0820               	movf	??_pressBoton2,w
  1968  0E1A  00F5               	movwf	LCD_Set_Cursor@columna
  1969  0E1B  3002               	movlw	2
  1970  0E1C  120A  158A  20C2  120A  158A  	fcall	_LCD_Set_Cursor
  1971                           
  1972                           ;main_Master.c: 699:                         LCD_Write_Character(1);
  1973  0E21  3001               	movlw	1
  1974  0E22  160A  118A  269D  120A  158A  	fcall	_LCD_Write_Character
  1975                           
  1976                           ;main_Master.c: 700:                         _delay((unsigned long)((100)*(1000000/4000.
      +                          0)));
  1977  0E27  3021               	movlw	33
  1978  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  1979  0E29  1303               	bcf	3,6	;RP1=0, select bank0
  1980  0E2A  00A1               	movwf	??_pressBoton2+1
  1981  0E2B  3075               	movlw	117
  1982  0E2C  00A0               	movwf	??_pressBoton2
  1983  0E2D                     u2067:	
  1984  0E2D  0BA0               	decfsz	??_pressBoton2,f
  1985  0E2E  2E2D               	goto	u2067
  1986  0E2F  0BA1               	decfsz	??_pressBoton2+1,f
  1987  0E30  2E2D               	goto	u2067
  1988  0E31  2E32               	nop2
  1989                           
  1990                           ;main_Master.c: 701:                         estado = 8;
  1991  0E32  3008               	movlw	8
  1992  0E33  2E57               	goto	L6
  1993  0E34                     l4603:	
  1994                           ;main_Master.c: 702:                         break;
  1995                           
  1996                           
  1997                           ;main_Master.c: 704:                         LCD_Set_Cursor(2,10);
  1998  0E34  300A               	movlw	10
  1999  0E35  00A0               	movwf	??_pressBoton2
  2000  0E36  0820               	movf	??_pressBoton2,w
  2001  0E37  00F5               	movwf	LCD_Set_Cursor@columna
  2002  0E38  3002               	movlw	2
  2003  0E39  120A  158A  20C2  120A  158A  	fcall	_LCD_Set_Cursor
  2004                           
  2005                           ;main_Master.c: 705:                         LCD_Write_Character(1);
  2006  0E3E  3001               	movlw	1
  2007  0E3F  160A  118A  269D  120A  158A  	fcall	_LCD_Write_Character
  2008                           
  2009                           ;main_Master.c: 706:                         _delay((unsigned long)((100)*(1000000/4000.
      +                          0)));
  2010  0E44  3021               	movlw	33
  2011  0E45  1283               	bcf	3,5	;RP0=0, select bank0
  2012  0E46  1303               	bcf	3,6	;RP1=0, select bank0
  2013  0E47  00A1               	movwf	??_pressBoton2+1
  2014  0E48  3075               	movlw	117
  2015  0E49  00A0               	movwf	??_pressBoton2
  2016  0E4A                     u2077:	
  2017  0E4A  0BA0               	decfsz	??_pressBoton2,f
  2018  0E4B  2E4A               	goto	u2077
  2019  0E4C  0BA1               	decfsz	??_pressBoton2+1,f
  2020  0E4D  2E4A               	goto	u2077
  2021  0E4E  2E4F               	nop2
  2022                           
  2023                           ;main_Master.c: 707:                         estado = 9;
  2024  0E4F  3009               	movlw	9
  2025  0E50  2E57               	goto	L6
  2026  0E51                     l4611:	
  2027                           ;main_Master.c: 708:                         break;
  2028                           
  2029                           
  2030                           ;main_Master.c: 710:                         LCD_clear();
  2031  0E51  160A  118A  26F4  120A  158A  	fcall	_LCD_clear
  2032                           
  2033                           ;main_Master.c: 711:                         estado = 10;
  2034  0E56  300A               	movlw	10
  2035  0E57                     L6:	
  2036  0E57  1283               	bcf	3,5	;RP0=0, select bank0
  2037  0E58  1303               	bcf	3,6	;RP1=0, select bank0
  2038  0E59                     L5:	
  2039  0E59  00A0               	movwf	??_pressBoton2
  2040  0E5A  0820               	movf	??_pressBoton2,w
  2041  0E5B  00D5               	movwf	_estado
  2042                           
  2043                           ;main_Master.c: 712:                         break;
  2044  0E5C  2E81               	goto	l4619
  2045  0E5D                     l4615:	
  2046                           
  2047                           ;main_Master.c: 714:                         _delay((unsigned long)((10)*(1000000/4000.0
      +                          )));
  2048  0E5D  3004               	movlw	4
  2049  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  2050  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  2051  0E60  00A1               	movwf	??_pressBoton2+1
  2052  0E61  303D               	movlw	61
  2053  0E62  00A0               	movwf	??_pressBoton2
  2054  0E63                     u2087:	
  2055  0E63  0BA0               	decfsz	??_pressBoton2,f
  2056  0E64  2E63               	goto	u2087
  2057  0E65  0BA1               	decfsz	??_pressBoton2+1,f
  2058  0E66  2E63               	goto	u2087
  2059                           
  2060                           ;main_Master.c: 715:                 }
  2061  0E67  2E81               	goto	l4619
  2062  0E68                     l4617:	
  2063  0E68  0855               	movf	_estado,w
  2064  0E69  00A0               	movwf	??_pressBoton2
  2065  0E6A  01A1               	clrf	??_pressBoton2+1
  2066                           
  2067                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2068                           ; Switch size 1, requested type "simple"
  2069                           ; Number of cases is 1, Range of values is 0 to 0
  2070                           ; switch strategies available:
  2071                           ; Name         Instructions Cycles
  2072                           ; simple_byte            4     3 (average)
  2073                           ; direct_byte           11     8 (fixed)
  2074                           ; jumptable            260     6 (fixed)
  2075                           ;	Chosen strategy is simple_byte
  2076  0E6B  0821               	movf	??_pressBoton2+1,w
  2077  0E6C  3A00               	xorlw	0	; case 0
  2078  0E6D  1903               	skipnz
  2079  0E6E  2E70               	goto	l5135
  2080  0E6F  2E5D               	goto	l4615
  2081  0E70                     l5135:	
  2082                           
  2083                           ; Switch size 1, requested type "simple"
  2084                           ; Number of cases is 5, Range of values is 5 to 9
  2085                           ; switch strategies available:
  2086                           ; Name         Instructions Cycles
  2087                           ; simple_byte           16     9 (average)
  2088                           ; direct_byte           26    11 (fixed)
  2089                           ; jumptable            263     9 (fixed)
  2090                           ;	Chosen strategy is simple_byte
  2091  0E70  0820               	movf	??_pressBoton2,w
  2092  0E71  3A05               	xorlw	5	; case 5
  2093  0E72  1903               	skipnz
  2094  0E73  2DFB               	goto	l4585
  2095  0E74  3A03               	xorlw	3	; case 6
  2096  0E75  1903               	skipnz
  2097  0E76  2DFD               	goto	l4587
  2098  0E77  3A01               	xorlw	1	; case 7
  2099  0E78  1903               	skipnz
  2100  0E79  2E17               	goto	l4595
  2101  0E7A  3A0F               	xorlw	15	; case 8
  2102  0E7B  1903               	skipnz
  2103  0E7C  2E34               	goto	l4603
  2104  0E7D  3A01               	xorlw	1	; case 9
  2105  0E7E  1903               	skipnz
  2106  0E7F  2E51               	goto	l4611
  2107  0E80  2E5D               	goto	l4615
  2108  0E81                     l4619:	
  2109                           
  2110                           ;main_Master.c: 717:                 banderaBoton = 0;
  2111  0E81  01FB               	clrf	_banderaBoton
  2112                           
  2113                           ;main_Master.c: 718:                 banderaPUSH2 = 1;
  2114  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  2115  0E83  1303               	bcf	3,6	;RP1=0, select bank0
  2116  0E84  01CF               	clrf	_banderaPUSH2
  2117  0E85  0ACF               	incf	_banderaPUSH2,f
  2118                           
  2119                           ;main_Master.c: 719:                 INTCONbits.RBIE = 1;
  2120  0E86  158B               	bsf	11,3	;volatile
  2121  0E87                     l4625:	
  2122                           
  2123                           ;main_Master.c: 722:     if (banderaPUSH2 == 1){
  2124  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0E88  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0E89  034F               	decf	_banderaPUSH2,w
  2127  0E8A  1D03               	btfss	3,2
  2128  0E8B  0008               	return
  2129                           
  2130                           ;main_Master.c: 723:         if (PORTBbits.RB2 == 1){
  2131  0E8C  1D06               	btfss	6,2	;volatile
  2132  0E8D  0008               	return
  2133                           
  2134                           ;main_Master.c: 724:         _delay((unsigned long)((10)*(1000000/4000.0)));
  2135  0E8E  3004               	movlw	4
  2136  0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  2137  0E90  1303               	bcf	3,6	;RP1=0, select bank0
  2138  0E91  00A1               	movwf	??_pressBoton2+1
  2139  0E92  303D               	movlw	61
  2140  0E93  00A0               	movwf	??_pressBoton2
  2141  0E94                     u2097:	
  2142  0E94  0BA0               	decfsz	??_pressBoton2,f
  2143  0E95  2E94               	goto	u2097
  2144  0E96  0BA1               	decfsz	??_pressBoton2+1,f
  2145  0E97  2E94               	goto	u2097
  2146                           
  2147                           ;main_Master.c: 725:         banderaPUSH2 = 0;
  2148  0E98  1283               	bcf	3,5	;RP0=0, select bank0
  2149  0E99  1303               	bcf	3,6	;RP1=0, select bank0
  2150  0E9A  01CF               	clrf	_banderaPUSH2
  2151  0E9B  0008               	return
  2152  0E9C                     __end_of_pressBoton2:	
  2153                           
  2154                           	psect	text3
  2155  0ABA                     __ptext3:	
  2156 ;; *************** function _pressBoton1 *****************
  2157 ;; Defined at:
  2158 ;;		line 638 in file "main_Master.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2172 ;;      Params:         0       0       0       0       0
  2173 ;;      Locals:         0       0       0       0       0
  2174 ;;      Temps:          2       0       0       0       0
  2175 ;;      Totals:         2       0       0       0       0
  2176 ;;Total ram usage:        2 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:    3
  2179 ;; This function calls:
  2180 ;;		_LCD_clear
  2181 ;; This function is called by:
  2182 ;;		_main
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           
  2187                           ;psect for function _pressBoton1
  2188  0ABA                     _pressBoton1:	
  2189                           
  2190                           ;main_Master.c: 639:     if (banderaBoton == 1){
  2191                           
  2192                           ;incstack = 0
  2193                           ; Regs used in _pressBoton1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2194  0ABA  037B               	decf	_banderaBoton,w
  2195  0ABB  1D03               	btfss	3,2
  2196  0ABC  2B17               	goto	l3447
  2197                           
  2198                           ;main_Master.c: 640:         if (banderaPUSH1 == 0){
  2199  0ABD  087A               	movf	_banderaPUSH1,w
  2200  0ABE  1D03               	btfss	3,2
  2201  0ABF  2B17               	goto	l3447
  2202                           
  2203                           ;main_Master.c: 641:             if (PORTBbits.RB1 == 0){
  2204  0AC0  1283               	bcf	3,5	;RP0=0, select bank0
  2205  0AC1  1303               	bcf	3,6	;RP1=0, select bank0
  2206  0AC2  1C86               	btfss	6,1	;volatile
  2207  0AC3  2B00               	goto	l3439
  2208  0AC4  2B17               	goto	l3447
  2209  0AC5                     l3411:	
  2210                           
  2211                           ;main_Master.c: 644:                         velocidad ++;
  2212  0AC5  3001               	movlw	1
  2213  0AC6  00F7               	movwf	??_pressBoton1
  2214  0AC7  0877               	movf	??_pressBoton1,w
  2215  0AC8  07D3               	addwf	_velocidad,f
  2216                           
  2217                           ;main_Master.c: 645:                         if (velocidad > 3){
  2218  0AC9  3004               	movlw	4
  2219  0ACA  0253               	subwf	_velocidad,w
  2220  0ACB  1C03               	skipc
  2221  0ACC  2B13               	goto	l3441
  2222                           
  2223                           ;main_Master.c: 646:                             velocidad = 1;
  2224  0ACD  01D3               	clrf	_velocidad
  2225  0ACE  0AD3               	incf	_velocidad,f
  2226  0ACF  2B13               	goto	l3441
  2227  0AD0                     l3417:	
  2228                           
  2229                           ;main_Master.c: 650:                         largo ++;
  2230  0AD0  3001               	movlw	1
  2231  0AD1  00F7               	movwf	??_pressBoton1
  2232  0AD2  0877               	movf	??_pressBoton1,w
  2233  0AD3  07CD               	addwf	_largo,f
  2234                           
  2235                           ;main_Master.c: 651:                         if (largo > 8){
  2236  0AD4  3009               	movlw	9
  2237  0AD5  024D               	subwf	_largo,w
  2238  0AD6  1C03               	skipc
  2239  0AD7  2B13               	goto	l3441
  2240                           
  2241                           ;main_Master.c: 652:                             largo = 1;
  2242  0AD8  01CD               	clrf	_largo
  2243  0AD9  0ACD               	incf	_largo,f
  2244  0ADA  2B13               	goto	l3441
  2245  0ADB                     l3423:	
  2246                           
  2247                           ;main_Master.c: 656:                         ancho ++;
  2248  0ADB  3001               	movlw	1
  2249  0ADC  00F7               	movwf	??_pressBoton1
  2250  0ADD  0877               	movf	??_pressBoton1,w
  2251  0ADE  07CC               	addwf	_ancho,f
  2252                           
  2253                           ;main_Master.c: 657:                         if (ancho > 8){
  2254  0ADF  3009               	movlw	9
  2255  0AE0  024C               	subwf	_ancho,w
  2256  0AE1  1C03               	skipc
  2257  0AE2  2B13               	goto	l3441
  2258                           
  2259                           ;main_Master.c: 658:                             ancho = 1;
  2260  0AE3  01CC               	clrf	_ancho
  2261  0AE4  0ACC               	incf	_ancho,f
  2262  0AE5  2B13               	goto	l3441
  2263  0AE6                     l3429:	
  2264                           
  2265                           ;main_Master.c: 662:                         LCD_clear();
  2266  0AE6  160A  118A  26F4  120A  158A  	fcall	_LCD_clear
  2267                           
  2268                           ;main_Master.c: 663:                     _delay((unsigned long)((10)*(1000000/4000.0)));
  2269  0AEB  3004               	movlw	4
  2270  0AEC  00F8               	movwf	??_pressBoton1+1
  2271  0AED  303D               	movlw	61
  2272  0AEE  00F7               	movwf	??_pressBoton1
  2273  0AEF                     u2107:	
  2274  0AEF  0BF7               	decfsz	??_pressBoton1,f
  2275  0AF0  2AEF               	goto	u2107
  2276  0AF1  0BF8               	decfsz	??_pressBoton1+1,f
  2277  0AF2  2AEF               	goto	u2107
  2278  0AF3  2AF4               	nop2
  2279                           
  2280                           ;main_Master.c: 664:                     estado ++;
  2281  0AF4  3001               	movlw	1
  2282  0AF5  00F7               	movwf	??_pressBoton1
  2283  0AF6  0877               	movf	??_pressBoton1,w
  2284  0AF7  1283               	bcf	3,5	;RP0=0, select bank0
  2285  0AF8  1303               	bcf	3,6	;RP1=0, select bank0
  2286  0AF9  07D5               	addwf	_estado,f
  2287                           
  2288                           ;main_Master.c: 665:                     if (estado > 5){
  2289  0AFA  3006               	movlw	6
  2290  0AFB  0255               	subwf	_estado,w
  2291  0AFC  1C03               	skipc
  2292  0AFD  2B13               	goto	l3441
  2293                           
  2294                           ;main_Master.c: 666:                         estado = 0;
  2295  0AFE  01D5               	clrf	_estado
  2296  0AFF  2B13               	goto	l3441
  2297  0B00                     l3439:	
  2298  0B00  0855               	movf	_estado,w
  2299  0B01  00F7               	movwf	??_pressBoton1
  2300  0B02  01F8               	clrf	??_pressBoton1+1
  2301                           
  2302                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2303                           ; Switch size 1, requested type "simple"
  2304                           ; Number of cases is 1, Range of values is 0 to 0
  2305                           ; switch strategies available:
  2306                           ; Name         Instructions Cycles
  2307                           ; simple_byte            4     3 (average)
  2308                           ; direct_byte           11     8 (fixed)
  2309                           ; jumptable            260     6 (fixed)
  2310                           ;	Chosen strategy is simple_byte
  2311  0B03  0878               	movf	??_pressBoton1+1,w
  2312  0B04  3A00               	xorlw	0	; case 0
  2313  0B05  1903               	skipnz
  2314  0B06  2B08               	goto	l5137
  2315  0B07  2AE6               	goto	l3429
  2316  0B08                     l5137:	
  2317                           
  2318                           ; Switch size 1, requested type "simple"
  2319                           ; Number of cases is 3, Range of values is 6 to 8
  2320                           ; switch strategies available:
  2321                           ; Name         Instructions Cycles
  2322                           ; simple_byte           10     6 (average)
  2323                           ; direct_byte           20    11 (fixed)
  2324                           ; jumptable            263     9 (fixed)
  2325                           ;	Chosen strategy is simple_byte
  2326  0B08  0877               	movf	??_pressBoton1,w
  2327  0B09  3A06               	xorlw	6	; case 6
  2328  0B0A  1903               	skipnz
  2329  0B0B  2AC5               	goto	l3411
  2330  0B0C  3A01               	xorlw	1	; case 7
  2331  0B0D  1903               	skipnz
  2332  0B0E  2AD0               	goto	l3417
  2333  0B0F  3A0F               	xorlw	15	; case 8
  2334  0B10  1903               	skipnz
  2335  0B11  2ADB               	goto	l3423
  2336  0B12  2AE6               	goto	l3429
  2337  0B13                     l3441:	
  2338                           
  2339                           ;main_Master.c: 669:                 banderaBoton = 0;
  2340  0B13  01FB               	clrf	_banderaBoton
  2341                           
  2342                           ;main_Master.c: 670:                 banderaPUSH1 = 1;
  2343  0B14  01FA               	clrf	_banderaPUSH1
  2344  0B15  0AFA               	incf	_banderaPUSH1,f
  2345                           
  2346                           ;main_Master.c: 671:                 INTCONbits.RBIE = 1;
  2347  0B16  158B               	bsf	11,3	;volatile
  2348  0B17                     l3447:	
  2349                           
  2350                           ;main_Master.c: 675:     if (banderaPUSH1 == 1){
  2351  0B17  037A               	decf	_banderaPUSH1,w
  2352  0B18  1D03               	btfss	3,2
  2353  0B19  0008               	return
  2354                           
  2355                           ;main_Master.c: 676:         if (PORTBbits.RB1 == 1){
  2356  0B1A  1283               	bcf	3,5	;RP0=0, select bank0
  2357  0B1B  1303               	bcf	3,6	;RP1=0, select bank0
  2358  0B1C  1C86               	btfss	6,1	;volatile
  2359  0B1D  0008               	return
  2360                           
  2361                           ;main_Master.c: 677:         _delay((unsigned long)((10)*(1000000/4000.0)));
  2362  0B1E  3004               	movlw	4
  2363  0B1F  00F8               	movwf	??_pressBoton1+1
  2364  0B20  303D               	movlw	61
  2365  0B21  00F7               	movwf	??_pressBoton1
  2366  0B22                     u2117:	
  2367  0B22  0BF7               	decfsz	??_pressBoton1,f
  2368  0B23  2B22               	goto	u2117
  2369  0B24  0BF8               	decfsz	??_pressBoton1+1,f
  2370  0B25  2B22               	goto	u2117
  2371  0B26  2B27               	nop2
  2372                           
  2373                           ;main_Master.c: 678:         banderaPUSH1 = 0;
  2374  0B27  01FA               	clrf	_banderaPUSH1
  2375  0B28  0008               	return
  2376  0B29                     __end_of_pressBoton1:	
  2377                           
  2378                           	psect	text4
  2379  0029                     __ptext4:	
  2380 ;; *************** function _mostrarLCD *****************
  2381 ;; Defined at:
  2382 ;;		line 455 in file "main_Master.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;  pantalla        1    wreg     unsigned char 
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  pantalla        1   26[BANK0 ] unsigned char 
  2387 ;;  dec_atras       1   32[BANK0 ] unsigned char 
  2388 ;;  uni_atras       1   29[BANK0 ] unsigned char 
  2389 ;;  dec_frente      1   31[BANK0 ] unsigned char 
  2390 ;;  uni_frente      1   28[BANK0 ] unsigned char 
  2391 ;;  decenas_hume    1    0        unsigned char 
  2392 ;;  unidades_hum    1    0        unsigned char 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  1    wreg      void 
  2395 ;; Registers used:
  2396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2402 ;;      Params:         0       0       0       0       0
  2403 ;;      Locals:         0       7       0       0       0
  2404 ;;      Temps:          0       3       0       0       0
  2405 ;;      Totals:         0      10       0       0       0
  2406 ;;Total ram usage:       10 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; Hardware stack levels required when called:    4
  2409 ;; This function calls:
  2410 ;;		_I2C_Master_Start
  2411 ;;		_I2C_Master_Stop
  2412 ;;		_I2C_Master_Write
  2413 ;;		_LCD_Set_Cursor
  2414 ;;		_LCD_Write_Character
  2415 ;;		_LCD_Write_String
  2416 ;;		_LCD_clear
  2417 ;;		___awdiv
  2418 ;;		___awmod
  2419 ;;		_display_Datum
  2420 ;;		_display_Uhrzeit
  2421 ;;		_uint_to_array
  2422 ;; This function is called by:
  2423 ;;		_main
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           
  2428                           ;psect for function _mostrarLCD
  2429  0029                     _mostrarLCD:	
  2430                           
  2431                           ;incstack = 0
  2432                           ; Regs used in _mostrarLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2433                           ;mostrarLCD@pantalla stored from wreg
  2434  0029  1283               	bcf	3,5	;RP0=0, select bank0
  2435  002A  1303               	bcf	3,6	;RP1=0, select bank0
  2436  002B  00BA               	movwf	mostrarLCD@pantalla
  2437                           
  2438                           ;main_Master.c: 456:     switch(pantalla){
  2439  002C  2BF3               	goto	l4569
  2440  002D                     l4385:	
  2441                           
  2442                           ;main_Master.c: 458:             display_Uhrzeit(2,4);
  2443  002D  3004               	movlw	4
  2444  002E  00B7               	movwf	??_mostrarLCD
  2445  002F  0837               	movf	??_mostrarLCD,w
  2446  0030  00A8               	movwf	display_Uhrzeit@columna
  2447  0031  3002               	movlw	2
  2448  0032  120A  118A  26ED  120A  118A  	fcall	_display_Uhrzeit
  2449                           
  2450                           ;main_Master.c: 459:             display_Datum(1,3);
  2451  0037  3003               	movlw	3
  2452  0038  1283               	bcf	3,5	;RP0=0, select bank0
  2453  0039  1303               	bcf	3,6	;RP1=0, select bank0
  2454  003A  00B7               	movwf	??_mostrarLCD
  2455  003B  0837               	movf	??_mostrarLCD,w
  2456  003C  00A8               	movwf	display_Datum@columna
  2457  003D  3001               	movlw	1
  2458  003E  120A  118A  2615   	fcall	_display_Datum
  2459                           
  2460                           ;main_Master.c: 460:             break;
  2461  0041  0008               	return
  2462  0042                     l4387:	
  2463                           
  2464                           ;main_Master.c: 462:             LCD_Set_Cursor(1,0);
  2465  0042  01F5               	clrf	LCD_Set_Cursor@columna
  2466  0043  3001               	movlw	1
  2467  0044  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  2468                           
  2469                           ;main_Master.c: 463:             LCD_Write_String("Ambiente: Suelo:");
  2470  0049  3029               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2471  004A  160A  118A  2786  120A  118A  	fcall	_LCD_Write_String
  2472                           
  2473                           ;main_Master.c: 464:             LCD_Set_Cursor(2,2);
  2474  004F  3002               	movlw	2
  2475  0050  1283               	bcf	3,5	;RP0=0, select bank0
  2476  0051  1303               	bcf	3,6	;RP1=0, select bank0
  2477  0052  00B7               	movwf	??_mostrarLCD
  2478  0053  0837               	movf	??_mostrarLCD,w
  2479  0054  00F5               	movwf	LCD_Set_Cursor@columna
  2480  0055  3002               	movlw	2
  2481  0056  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  2482                           
  2483                           ;main_Master.c: 465:             LCD_Write_Character(2);
  2484  005B  3002               	movlw	2
  2485  005C  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  2486                           
  2487                           ;main_Master.c: 466:             obj_array = uint_to_array(temperatura);
  2488  0061  1283               	bcf	3,5	;RP0=0, select bank0
  2489  0062  1303               	bcf	3,6	;RP1=0, select bank0
  2490  0063  0852               	movf	_temperatura,w
  2491  0064  120A  158A  2423  120A  118A  	fcall	_uint_to_array
  2492  0069  1283               	bcf	3,5	;RP0=0, select bank0
  2493  006A  1303               	bcf	3,6	;RP1=0, select bank0
  2494  006B  00B7               	movwf	??_mostrarLCD
  2495  006C  0837               	movf	??_mostrarLCD,w
  2496  006D  00D0               	movwf	_obj_array
  2497                           
  2498                           ;main_Master.c: 467:             if (obj_array[0] == 0){
  2499  006E  0850               	movf	_obj_array,w
  2500  006F  0084               	movwf	4
  2501  0070  1383               	bcf	3,7	;select IRP bank0
  2502  0071  0800               	movf	0,w
  2503  0072  00B7               	movwf	??_mostrarLCD
  2504  0073  0A84               	incf	4,f
  2505  0074  0800               	movf	0,w
  2506  0075  00B8               	movwf	??_mostrarLCD+1
  2507  0076  0837               	movf	??_mostrarLCD,w
  2508  0077  0438               	iorwf	??_mostrarLCD+1,w
  2509  0078  1D03               	btfss	3,2
  2510  0079  287C               	goto	l4397
  2511                           
  2512                           ;main_Master.c: 468:                 LCD_Write_Character(' ');
  2513  007A  3020               	movlw	32
  2514  007B  2880               	goto	L7
  2515  007C                     l4397:	
  2516                           ;main_Master.c: 469:             }
  2517                           
  2518                           
  2519                           ;main_Master.c: 471:                 LCD_Write_Character('0' + obj_array[0]);
  2520  007C  0850               	movf	_obj_array,w
  2521  007D  0084               	movwf	4
  2522  007E  0800               	movf	0,w
  2523  007F  3E30               	addlw	48
  2524  0080                     L7:	
  2525  0080  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  2526                           
  2527                           ;main_Master.c: 473:             LCD_Write_Character('0' + obj_array[1]);
  2528                           
  2529                           ;main_Master.c: 472:             }
  2530  0085  1283               	bcf	3,5	;RP0=0, select bank0
  2531  0086  1303               	bcf	3,6	;RP1=0, select bank0
  2532  0087  0850               	movf	_obj_array,w
  2533  0088  3E02               	addlw	2
  2534  0089  0084               	movwf	4
  2535  008A  1383               	bcf	3,7	;select IRP bank0
  2536  008B  0800               	movf	0,w
  2537  008C  3E30               	addlw	48
  2538  008D  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  2539                           
  2540                           ;main_Master.c: 474:             LCD_Write_Character('0' + obj_array[2]);
  2541  0092  1283               	bcf	3,5	;RP0=0, select bank0
  2542  0093  1303               	bcf	3,6	;RP1=0, select bank0
  2543  0094  0850               	movf	_obj_array,w
  2544  0095  3E04               	addlw	4
  2545  0096  0084               	movwf	4
  2546  0097  1383               	bcf	3,7	;select IRP bank0
  2547  0098  0800               	movf	0,w
  2548  0099  3E30               	addlw	48
  2549  009A  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  2550                           
  2551                           ;main_Master.c: 475:             LCD_Write_Character(223);
  2552  009F  30DF               	movlw	223
  2553  00A0  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  2554                           
  2555                           ;main_Master.c: 476:             LCD_Write_Character('C');
  2556  00A5  3043               	movlw	67
  2557  00A6  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  2558                           
  2559                           ;main_Master.c: 478:             LCD_Set_Cursor(2,10);
  2560  00AB  300A               	movlw	10
  2561  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  2562  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  2563  00AE  00B7               	movwf	??_mostrarLCD
  2564  00AF  0837               	movf	??_mostrarLCD,w
  2565  00B0  00F5               	movwf	LCD_Set_Cursor@columna
  2566  00B1  3002               	movlw	2
  2567  00B2  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  2568                           
  2569                           ;main_Master.c: 479:             LCD_Write_Character(2);
  2570  00B7  3002               	movlw	2
  2571  00B8  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  2572                           
  2573                           ;main_Master.c: 480:             obj_array = uint_to_array(temperatura_obj);
  2574  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  2575  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  2576  00BF  0851               	movf	_temperatura_obj,w
  2577  00C0  120A  158A  2423  120A  118A  	fcall	_uint_to_array
  2578  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  2579  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  2580  00C7  00B7               	movwf	??_mostrarLCD
  2581  00C8  0837               	movf	??_mostrarLCD,w
  2582  00C9  00D0               	movwf	_obj_array
  2583                           
  2584                           ;main_Master.c: 481:             if (obj_array[0] == 0){
  2585  00CA  0850               	movf	_obj_array,w
  2586  00CB  0084               	movwf	4
  2587  00CC  1383               	bcf	3,7	;select IRP bank0
  2588  00CD  0800               	movf	0,w
  2589  00CE  00B7               	movwf	??_mostrarLCD
  2590  00CF  0A84               	incf	4,f
  2591  00D0  0800               	movf	0,w
  2592  00D1  00B8               	movwf	??_mostrarLCD+1
  2593  00D2  0837               	movf	??_mostrarLCD,w
  2594  00D3  0438               	iorwf	??_mostrarLCD+1,w
  2595  00D4  1D03               	btfss	3,2
  2596  00D5  28D8               	goto	l4411
  2597                           
  2598                           ;main_Master.c: 482:                 LCD_Write_Character(' ');
  2599  00D6  3020               	movlw	32
  2600  00D7  28DC               	goto	L8
  2601  00D8                     l4411:	
  2602                           ;main_Master.c: 483:             }
  2603                           
  2604                           
  2605                           ;main_Master.c: 485:                 LCD_Write_Character('0' + obj_array[0]);
  2606  00D8  0850               	movf	_obj_array,w
  2607  00D9  0084               	movwf	4
  2608  00DA  0800               	movf	0,w
  2609  00DB  3E30               	addlw	48
  2610  00DC                     L8:	
  2611  00DC  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  2612                           
  2613                           ;main_Master.c: 488:             if (obj_array[1] == 0 && obj_array[0] == 0){
  2614  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  2615  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  2616  00E3  0850               	movf	_obj_array,w
  2617  00E4  3E02               	addlw	2
  2618  00E5  0084               	movwf	4
  2619  00E6  1383               	bcf	3,7	;select IRP bank0
  2620  00E7  0800               	movf	0,w
  2621  00E8  00B7               	movwf	??_mostrarLCD
  2622  00E9  0A84               	incf	4,f
  2623  00EA  0800               	movf	0,w
  2624  00EB  00B8               	movwf	??_mostrarLCD+1
  2625  00EC  0837               	movf	??_mostrarLCD,w
  2626  00ED  0438               	iorwf	??_mostrarLCD+1,w
  2627  00EE  1D03               	btfss	3,2
  2628  00EF  28FD               	goto	l4419
  2629  00F0  0850               	movf	_obj_array,w
  2630  00F1  0084               	movwf	4
  2631  00F2  0800               	movf	0,w
  2632  00F3  00B7               	movwf	??_mostrarLCD
  2633  00F4  0A84               	incf	4,f
  2634  00F5  0800               	movf	0,w
  2635  00F6  00B8               	movwf	??_mostrarLCD+1
  2636  00F7  0837               	movf	??_mostrarLCD,w
  2637  00F8  0438               	iorwf	??_mostrarLCD+1,w
  2638  00F9  1D03               	btfss	3,2
  2639  00FA  28FD               	goto	l4419
  2640                           
  2641                           ;main_Master.c: 489:                 LCD_Write_Character(' ');
  2642  00FB  3020               	movlw	32
  2643  00FC  2902               	goto	L9
  2644  00FD                     l4419:	
  2645                           ;main_Master.c: 490:             }
  2646                           
  2647                           
  2648                           ;main_Master.c: 492:                 LCD_Write_Character('0' + obj_array[1]);
  2649  00FD  0850               	movf	_obj_array,w
  2650  00FE  3E02               	addlw	2
  2651  00FF  0084               	movwf	4
  2652  0100  0800               	movf	0,w
  2653  0101  3E30               	addlw	48
  2654  0102                     L9:	
  2655  0102  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  2656                           
  2657                           ;main_Master.c: 494:             LCD_Write_Character('0' + obj_array[2]);
  2658                           
  2659                           ;main_Master.c: 493:             }
  2660  0107  1283               	bcf	3,5	;RP0=0, select bank0
  2661  0108  1303               	bcf	3,6	;RP1=0, select bank0
  2662  0109  0850               	movf	_obj_array,w
  2663  010A  3E04               	addlw	4
  2664  010B  0084               	movwf	4
  2665  010C  1383               	bcf	3,7	;select IRP bank0
  2666  010D  0800               	movf	0,w
  2667  010E  3E30               	addlw	48
  2668  010F  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  2669                           
  2670                           ;main_Master.c: 495:             LCD_Write_Character(223);
  2671  0114  30DF               	movlw	223
  2672  0115  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  2673                           
  2674                           ;main_Master.c: 496:             LCD_Write_Character('C');
  2675  011A  3043               	movlw	67
  2676  011B  160A  118A  269D   	fcall	_LCD_Write_Character
  2677                           
  2678                           ;main_Master.c: 497:             break;
  2679  011E  0008               	return
  2680  011F                     l4425:	
  2681                           
  2682                           ;main_Master.c: 499:             LCD_Set_Cursor(1,0);
  2683  011F  01F5               	clrf	LCD_Set_Cursor@columna
  2684  0120  3001               	movlw	1
  2685  0121  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  2686                           
  2687                           ;main_Master.c: 500:             LCD_Write_String("Inclinacion:");
  2688  0126  3062               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2689  0127  160A  118A  2786  120A  118A  	fcall	_LCD_Write_String
  2690                           
  2691                           ;main_Master.c: 501:             LCD_Set_Cursor(2, 5);
  2692  012C  3005               	movlw	5
  2693  012D  1283               	bcf	3,5	;RP0=0, select bank0
  2694  012E  1303               	bcf	3,6	;RP1=0, select bank0
  2695  012F  00B7               	movwf	??_mostrarLCD
  2696  0130  0837               	movf	??_mostrarLCD,w
  2697  0131  00F5               	movwf	LCD_Set_Cursor@columna
  2698  0132  3002               	movlw	2
  2699  0133  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  2700                           
  2701                           ;main_Master.c: 505:             LCD_Set_Cursor(2, 5);
  2702  0138  3005               	movlw	5
  2703  0139  1283               	bcf	3,5	;RP0=0, select bank0
  2704  013A  1303               	bcf	3,6	;RP1=0, select bank0
  2705  013B  00B7               	movwf	??_mostrarLCD
  2706  013C  0837               	movf	??_mostrarLCD,w
  2707  013D  00F5               	movwf	LCD_Set_Cursor@columna
  2708  013E  3002               	movlw	2
  2709  013F  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  2710                           
  2711                           ;main_Master.c: 506:             if(inclinacion < 40){
  2712  0144  3028               	movlw	40
  2713  0145  1283               	bcf	3,5	;RP0=0, select bank0
  2714  0146  1303               	bcf	3,6	;RP1=0, select bank0
  2715  0147  0258               	subwf	_inclinacion,w
  2716  0148  1803               	skipnc
  2717  0149  294F               	goto	l4431
  2718                           
  2719                           ;main_Master.c: 507:                 LCD_Write_String("Estable   ");
  2720  014A  3088               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2721  014B  160A  118A  2786   	fcall	_LCD_Write_String
  2722                           
  2723                           ;main_Master.c: 508:             }
  2724  014E  0008               	return
  2725  014F                     l4431:	
  2726  014F  305B               	movlw	91
  2727  0150  0258               	subwf	_inclinacion,w
  2728  0151  1C03               	skipc
  2729  0152  295C               	goto	l4437
  2730  0153  3096               	movlw	150
  2731  0154  0258               	subwf	_inclinacion,w
  2732  0155  1803               	skipnc
  2733  0156  295C               	goto	l4437
  2734                           
  2735                           ;main_Master.c: 510:                 LCD_Write_String("Peligro!   ");
  2736  0157  307C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2737  0158  160A  118A  2786   	fcall	_LCD_Write_String
  2738                           
  2739                           ;main_Master.c: 511:             }
  2740  015B  0008               	return
  2741  015C                     l4437:	
  2742  015C  30B5               	movlw	181
  2743  015D  0258               	subwf	_inclinacion,w
  2744  015E  1C03               	skipc
  2745  015F  0008               	return
  2746                           
  2747                           ;main_Master.c: 513:                 LCD_Write_String("EMERGENCIA!  ");
  2748  0160  303A               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2749  0161  160A  118A  2786   	fcall	_LCD_Write_String
  2750                           
  2751                           ;main_Master.c: 516:             break;
  2752  0164  0008               	return
  2753  0165                     l4441:	
  2754                           
  2755                           ;main_Master.c: 518:             LCD_Set_Cursor(1,0);
  2756  0165  01F5               	clrf	LCD_Set_Cursor@columna
  2757  0166  3001               	movlw	1
  2758  0167  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  2759                           
  2760                           ;main_Master.c: 519:             LCD_Write_String("Humedad:");
  2761  016C  3093               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2762  016D  160A  118A  2786  120A  118A  	fcall	_LCD_Write_String
  2763                           
  2764                           ;main_Master.c: 520:             LCD_Set_Cursor(2,4);
  2765  0172  3004               	movlw	4
  2766  0173  1283               	bcf	3,5	;RP0=0, select bank0
  2767  0174  1303               	bcf	3,6	;RP1=0, select bank0
  2768  0175  00B7               	movwf	??_mostrarLCD
  2769  0176  0837               	movf	??_mostrarLCD,w
  2770  0177  00F5               	movwf	LCD_Set_Cursor@columna
  2771  0178  3002               	movlw	2
  2772  0179  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  2773                           
  2774                           ;main_Master.c: 521:             LCD_Write_Character(3);
  2775  017E  3003               	movlw	3
  2776  017F  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  2777                           
  2778                           ;main_Master.c: 522:             LCD_Write_Character(' ');
  2779  0184  3020               	movlw	32
  2780  0185  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  2781                           
  2782                           ;main_Master.c: 526:                 LCD_Write_Character(' ');
  2783                           
  2784                           ;main_Master.c: 525:             if(decenas_humedad == 0){
  2785  018A  3020               	movlw	32
  2786  018B  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  2787                           
  2788                           ;main_Master.c: 531:             LCD_Write_Character('0'+unidades_humedad);
  2789                           
  2790                           ;main_Master.c: 530:             }
  2791  0190  3035               	movlw	53
  2792  0191  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  2793                           
  2794                           ;main_Master.c: 532:             LCD_Write_Character('%');
  2795  0196  3025               	movlw	37
  2796  0197  160A  118A  269D   	fcall	_LCD_Write_Character
  2797                           
  2798                           ;main_Master.c: 533:             break;
  2799  019A  0008               	return
  2800  019B                     l4457:	
  2801                           
  2802                           ;main_Master.c: 535:             LCD_Set_Cursor(1,0);
  2803  019B  01F5               	clrf	LCD_Set_Cursor@columna
  2804  019C  3001               	movlw	1
  2805  019D  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  2806                           
  2807                           ;main_Master.c: 536:             LCD_Write_String("Atr");
  2808  01A2  30A7               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2809  01A3  160A  118A  2786  120A  118A  	fcall	_LCD_Write_String
  2810                           
  2811                           ;main_Master.c: 537:             LCD_Write_Character(0);
  2812  01A8  3000               	movlw	0
  2813  01A9  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  2814                           
  2815                           ;main_Master.c: 538:             LCD_Write_String("s: | Frente:");
  2816  01AE  3055               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2817  01AF  160A  118A  2786  120A  118A  	fcall	_LCD_Write_String
  2818                           
  2819                           ;main_Master.c: 539:             LCD_Set_Cursor(2,2);
  2820  01B4  3002               	movlw	2
  2821  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  2822  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  2823  01B7  00B7               	movwf	??_mostrarLCD
  2824  01B8  0837               	movf	??_mostrarLCD,w
  2825  01B9  00F5               	movwf	LCD_Set_Cursor@columna
  2826  01BA  3002               	movlw	2
  2827  01BB  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  2828                           
  2829                           ;main_Master.c: 540:             if(d_frente < 100){
  2830  01C0  3064               	movlw	100
  2831  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2832  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  2833  01C3  0257               	subwf	_d_frente,w
  2834  01C4  1803               	skipnc
  2835  01C5  2A09               	goto	l4477
  2836                           
  2837                           ;main_Master.c: 541:                 uint8_t dec_frente = d_frente/10;
  2838  01C6  300A               	movlw	10
  2839  01C7  00A0               	movwf	___awdiv@divisor
  2840  01C8  3000               	movlw	0
  2841  01C9  00A1               	movwf	___awdiv@divisor+1
  2842  01CA  0857               	movf	_d_frente,w
  2843  01CB  00B7               	movwf	??_mostrarLCD
  2844  01CC  01B8               	clrf	??_mostrarLCD+1
  2845  01CD  0837               	movf	??_mostrarLCD,w
  2846  01CE  00A2               	movwf	___awdiv@dividend
  2847  01CF  0838               	movf	??_mostrarLCD+1,w
  2848  01D0  00A3               	movwf	___awdiv@dividend+1
  2849  01D1  120A  158A  2198  120A  118A  	fcall	___awdiv
  2850  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2851  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  2852  01D8  0820               	movf	?___awdiv,w
  2853  01D9  00B9               	movwf	??_mostrarLCD+2
  2854  01DA  0839               	movf	??_mostrarLCD+2,w
  2855  01DB  00BF               	movwf	mostrarLCD@dec_frente
  2856                           
  2857                           ;main_Master.c: 542:                 uint8_t uni_frente = d_frente%10;
  2858  01DC  300A               	movlw	10
  2859  01DD  00F2               	movwf	___awmod@divisor
  2860  01DE  3000               	movlw	0
  2861  01DF  00F3               	movwf	___awmod@divisor+1
  2862  01E0  0857               	movf	_d_frente,w
  2863  01E1  00B7               	movwf	??_mostrarLCD
  2864  01E2  01B8               	clrf	??_mostrarLCD+1
  2865  01E3  0837               	movf	??_mostrarLCD,w
  2866  01E4  00F4               	movwf	___awmod@dividend
  2867  01E5  0838               	movf	??_mostrarLCD+1,w
  2868  01E6  00F5               	movwf	___awmod@dividend+1
  2869  01E7  120A  158A  214D  120A  118A  	fcall	___awmod
  2870  01EC  0872               	movf	?___awmod,w
  2871  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  2872  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  2873  01EF  00B9               	movwf	??_mostrarLCD+2
  2874  01F0  0839               	movf	??_mostrarLCD+2,w
  2875  01F1  00BC               	movwf	mostrarLCD@uni_frente
  2876                           
  2877                           ;main_Master.c: 543:                 if(dec_frente == 0){
  2878  01F2  083F               	movf	mostrarLCD@dec_frente,w
  2879  01F3  1D03               	btfss	3,2
  2880  01F4  29F7               	goto	l4473
  2881                           
  2882                           ;main_Master.c: 544:                     LCD_Write_Character(' ');
  2883  01F5  3020               	movlw	32
  2884  01F6  29F9               	goto	L10
  2885  01F7                     l4473:	
  2886                           ;main_Master.c: 545:                 }
  2887                           
  2888                           
  2889                           ;main_Master.c: 547:                     LCD_Write_Character('0' + dec_frente);
  2890  01F7  083F               	movf	mostrarLCD@dec_frente,w
  2891  01F8  3E30               	addlw	48
  2892  01F9                     L10:	
  2893  01F9  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  2894                           
  2895                           ;main_Master.c: 549:                 LCD_Write_Character('0' + uni_frente);
  2896                           
  2897                           ;main_Master.c: 548:                 }
  2898  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  2899  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  2900  0200  083C               	movf	mostrarLCD@uni_frente,w
  2901  0201  3E30               	addlw	48
  2902  0202  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  2903                           
  2904                           ;main_Master.c: 550:                 LCD_Write_String("cm");
  2905  0207  30B1               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2906  0208  2A0A               	goto	L11
  2907  0209                     l4477:	
  2908                           ;main_Master.c: 551:             }
  2909                           
  2910                           
  2911                           ;main_Master.c: 553:                 LCD_Write_String("----");
  2912  0209  30A2               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2913  020A                     L11:	
  2914  020A  160A  118A  2786  120A  118A  	fcall	_LCD_Write_String
  2915                           
  2916                           ;main_Master.c: 556:             LCD_Set_Cursor(2,7);
  2917                           
  2918                           ;main_Master.c: 554:             }
  2919  020F  3007               	movlw	7
  2920  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2921  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2922  0212  00B7               	movwf	??_mostrarLCD
  2923  0213  0837               	movf	??_mostrarLCD,w
  2924  0214  00F5               	movwf	LCD_Set_Cursor@columna
  2925  0215  3002               	movlw	2
  2926  0216  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  2927                           
  2928                           ;main_Master.c: 557:             LCD_Write_Character('|');
  2929  021B  307C               	movlw	124
  2930  021C  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  2931                           
  2932                           ;main_Master.c: 558:             LCD_Set_Cursor(2,11);
  2933  0221  300B               	movlw	11
  2934  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2935  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2936  0224  00B7               	movwf	??_mostrarLCD
  2937  0225  0837               	movf	??_mostrarLCD,w
  2938  0226  00F5               	movwf	LCD_Set_Cursor@columna
  2939  0227  3002               	movlw	2
  2940  0228  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  2941                           
  2942                           ;main_Master.c: 559:             if(d_atras < 100){
  2943  022D  3064               	movlw	100
  2944  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2945  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2946  0230  0256               	subwf	_d_atras,w
  2947  0231  1803               	skipnc
  2948  0232  2A79               	goto	l4495
  2949                           
  2950                           ;main_Master.c: 560:                 uint8_t dec_atras = d_atras/10;
  2951  0233  300A               	movlw	10
  2952  0234  00A0               	movwf	___awdiv@divisor
  2953  0235  3000               	movlw	0
  2954  0236  00A1               	movwf	___awdiv@divisor+1
  2955  0237  0856               	movf	_d_atras,w
  2956  0238  00B7               	movwf	??_mostrarLCD
  2957  0239  01B8               	clrf	??_mostrarLCD+1
  2958  023A  0837               	movf	??_mostrarLCD,w
  2959  023B  00A2               	movwf	___awdiv@dividend
  2960  023C  0838               	movf	??_mostrarLCD+1,w
  2961  023D  00A3               	movwf	___awdiv@dividend+1
  2962  023E  120A  158A  2198  120A  118A  	fcall	___awdiv
  2963  0243  1283               	bcf	3,5	;RP0=0, select bank0
  2964  0244  1303               	bcf	3,6	;RP1=0, select bank0
  2965  0245  0820               	movf	?___awdiv,w
  2966  0246  00B9               	movwf	??_mostrarLCD+2
  2967  0247  0839               	movf	??_mostrarLCD+2,w
  2968  0248  00C0               	movwf	mostrarLCD@dec_atras
  2969                           
  2970                           ;main_Master.c: 561:                 uint8_t uni_atras = d_atras%10;
  2971  0249  300A               	movlw	10
  2972  024A  00F2               	movwf	___awmod@divisor
  2973  024B  3000               	movlw	0
  2974  024C  00F3               	movwf	___awmod@divisor+1
  2975  024D  0856               	movf	_d_atras,w
  2976  024E  00B7               	movwf	??_mostrarLCD
  2977  024F  01B8               	clrf	??_mostrarLCD+1
  2978  0250  0837               	movf	??_mostrarLCD,w
  2979  0251  00F4               	movwf	___awmod@dividend
  2980  0252  0838               	movf	??_mostrarLCD+1,w
  2981  0253  00F5               	movwf	___awmod@dividend+1
  2982  0254  120A  158A  214D  120A  118A  	fcall	___awmod
  2983  0259  0872               	movf	?___awmod,w
  2984  025A  1283               	bcf	3,5	;RP0=0, select bank0
  2985  025B  1303               	bcf	3,6	;RP1=0, select bank0
  2986  025C  00B9               	movwf	??_mostrarLCD+2
  2987  025D  0839               	movf	??_mostrarLCD+2,w
  2988  025E  00BD               	movwf	mostrarLCD@uni_atras
  2989                           
  2990                           ;main_Master.c: 562:                 if(dec_atras == 0){
  2991  025F  0840               	movf	mostrarLCD@dec_atras,w
  2992  0260  1D03               	btfss	3,2
  2993  0261  2A64               	goto	l4491
  2994                           
  2995                           ;main_Master.c: 563:                     LCD_Write_Character(' ');
  2996  0262  3020               	movlw	32
  2997  0263  2A66               	goto	L12
  2998  0264                     l4491:	
  2999                           ;main_Master.c: 564:                 }
  3000                           
  3001                           
  3002                           ;main_Master.c: 566:                     LCD_Write_Character('0' + dec_atras);
  3003  0264  0840               	movf	mostrarLCD@dec_atras,w
  3004  0265  3E30               	addlw	48
  3005  0266                     L12:	
  3006  0266  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  3007                           
  3008                           ;main_Master.c: 568:                 LCD_Write_Character('0' + uni_atras);
  3009                           
  3010                           ;main_Master.c: 567:                 }
  3011  026B  1283               	bcf	3,5	;RP0=0, select bank0
  3012  026C  1303               	bcf	3,6	;RP1=0, select bank0
  3013  026D  083D               	movf	mostrarLCD@uni_atras,w
  3014  026E  3E30               	addlw	48
  3015  026F  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  3016                           
  3017                           ;main_Master.c: 569:                 LCD_Write_String("cm");
  3018  0274  30B1               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  3019  0275  160A  118A  2786   	fcall	_LCD_Write_String
  3020                           
  3021                           ;main_Master.c: 570:             }
  3022  0278  0008               	return
  3023  0279                     l4495:	
  3024                           
  3025                           ;main_Master.c: 572:                 LCD_Write_String("----");
  3026  0279  30A2               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3027  027A  160A  118A  2786   	fcall	_LCD_Write_String
  3028  027D  0008               	return
  3029  027E                     l4497:	
  3030                           
  3031                           ;main_Master.c: 576:             LCD_Set_Cursor(1, 0);
  3032  027E  01F5               	clrf	LCD_Set_Cursor@columna
  3033  027F  3001               	movlw	1
  3034  0280  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  3035                           
  3036                           ;main_Master.c: 577:             LCD_Write_String("Tomar datos:");
  3037  0285  306F               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  3038  0286  160A  118A  2786  120A  118A  	fcall	_LCD_Write_String
  3039                           
  3040                           ;main_Master.c: 578:             LCD_Set_Cursor(2,1);
  3041  028B  01F5               	clrf	LCD_Set_Cursor@columna
  3042  028C  0AF5               	incf	LCD_Set_Cursor@columna,f
  3043  028D  3002               	movlw	2
  3044  028E  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  3045                           
  3046                           ;main_Master.c: 579:             LCD_Write_Character(velocidad + '0');
  3047  0293  1283               	bcf	3,5	;RP0=0, select bank0
  3048  0294  1303               	bcf	3,6	;RP1=0, select bank0
  3049  0295  0853               	movf	_velocidad,w
  3050  0296  3E30               	addlw	48
  3051  0297  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  3052                           
  3053                           ;main_Master.c: 580:             LCD_Set_Cursor(2,8);
  3054  029C  3008               	movlw	8
  3055  029D  1283               	bcf	3,5	;RP0=0, select bank0
  3056  029E  1303               	bcf	3,6	;RP1=0, select bank0
  3057  029F  00B7               	movwf	??_mostrarLCD
  3058  02A0  0837               	movf	??_mostrarLCD,w
  3059  02A1  00F5               	movwf	LCD_Set_Cursor@columna
  3060  02A2  3002               	movlw	2
  3061  02A3  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  3062                           
  3063                           ;main_Master.c: 581:             LCD_Write_Character('0' + largo);
  3064  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  3065  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  3066  02AA  084D               	movf	_largo,w
  3067  02AB  3E30               	addlw	48
  3068  02AC  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  3069                           
  3070                           ;main_Master.c: 582:             LCD_Write_String("x ");
  3071  02B1  30AB               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  3072  02B2  160A  118A  2786  120A  118A  	fcall	_LCD_Write_String
  3073                           
  3074                           ;main_Master.c: 583:             LCD_Write_Character('0' + ancho);
  3075  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  3076  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  3077  02B9  084C               	movf	_ancho,w
  3078  02BA  3E30               	addlw	48
  3079  02BB  160A  118A  269D   	fcall	_LCD_Write_Character
  3080                           
  3081                           ;main_Master.c: 584:             break;
  3082  02BE  0008               	return
  3083  02BF                     l4507:	
  3084                           
  3085                           ;main_Master.c: 586:             LCD_Set_Cursor(2,0);
  3086  02BF  01F5               	clrf	LCD_Set_Cursor@columna
  3087  02C0  3002               	movlw	2
  3088  02C1  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  3089                           
  3090                           ;main_Master.c: 587:             LCD_Write_Character(4);
  3091  02C6  3004               	movlw	4
  3092  02C7  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  3093                           
  3094                           ;main_Master.c: 588:             LCD_Write_Character(velocidad + '0');
  3095  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  3096  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  3097  02CE  0853               	movf	_velocidad,w
  3098  02CF  3E30               	addlw	48
  3099  02D0  160A  118A  269D   	fcall	_LCD_Write_Character
  3100                           
  3101                           ;main_Master.c: 589:             break;
  3102  02D3  0008               	return
  3103  02D4                     l4513:	
  3104                           
  3105                           ;main_Master.c: 591:             LCD_Set_Cursor(2,0);
  3106  02D4  01F5               	clrf	LCD_Set_Cursor@columna
  3107  02D5  3002               	movlw	2
  3108  02D6  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  3109                           
  3110                           ;main_Master.c: 592:             LCD_Write_Character(' ');
  3111  02DB  3020               	movlw	32
  3112  02DC  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  3113                           
  3114                           ;main_Master.c: 593:             LCD_Set_Cursor(2,7);
  3115  02E1  3007               	movlw	7
  3116  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  3117  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  3118  02E4  00B7               	movwf	??_mostrarLCD
  3119  02E5  0837               	movf	??_mostrarLCD,w
  3120  02E6  00F5               	movwf	LCD_Set_Cursor@columna
  3121  02E7  3002               	movlw	2
  3122  02E8  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  3123                           
  3124                           ;main_Master.c: 594:             LCD_Write_Character(4);
  3125  02ED  3004               	movlw	4
  3126  02EE  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  3127                           
  3128                           ;main_Master.c: 595:             LCD_Write_Character('0' + largo);
  3129  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  3130  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  3131  02F5  084D               	movf	_largo,w
  3132  02F6  3E30               	addlw	48
  3133  02F7  160A  118A  269D   	fcall	_LCD_Write_Character
  3134                           
  3135                           ;main_Master.c: 596:             break;
  3136  02FA  0008               	return
  3137  02FB                     l4519:	
  3138                           
  3139                           ;main_Master.c: 598:             LCD_Set_Cursor(2,7);
  3140  02FB  3007               	movlw	7
  3141  02FC  00B7               	movwf	??_mostrarLCD
  3142  02FD  0837               	movf	??_mostrarLCD,w
  3143  02FE  00F5               	movwf	LCD_Set_Cursor@columna
  3144  02FF  3002               	movlw	2
  3145  0300  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  3146                           
  3147                           ;main_Master.c: 599:             LCD_Write_Character(' ');
  3148  0305  3020               	movlw	32
  3149  0306  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  3150                           
  3151                           ;main_Master.c: 600:             LCD_Set_Cursor(2,10);
  3152  030B  300A               	movlw	10
  3153  030C  1283               	bcf	3,5	;RP0=0, select bank0
  3154  030D  1303               	bcf	3,6	;RP1=0, select bank0
  3155  030E  00B7               	movwf	??_mostrarLCD
  3156  030F  0837               	movf	??_mostrarLCD,w
  3157  0310  00F5               	movwf	LCD_Set_Cursor@columna
  3158  0311  3002               	movlw	2
  3159  0312  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  3160                           
  3161                           ;main_Master.c: 601:             LCD_Write_Character(4);
  3162  0317  3004               	movlw	4
  3163  0318  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  3164                           
  3165                           ;main_Master.c: 602:             LCD_Write_Character('0' + ancho);
  3166  031D  1283               	bcf	3,5	;RP0=0, select bank0
  3167  031E  1303               	bcf	3,6	;RP1=0, select bank0
  3168  031F  084C               	movf	_ancho,w
  3169  0320  3E30               	addlw	48
  3170  0321  160A  118A  269D   	fcall	_LCD_Write_Character
  3171                           
  3172                           ;main_Master.c: 603:             break;
  3173  0324  0008               	return
  3174  0325                     l4525:	
  3175                           
  3176                           ;main_Master.c: 605:             LCD_Set_Cursor(2,10);
  3177  0325  300A               	movlw	10
  3178  0326  00B7               	movwf	??_mostrarLCD
  3179  0327  0837               	movf	??_mostrarLCD,w
  3180  0328  00F5               	movwf	LCD_Set_Cursor@columna
  3181  0329  3002               	movlw	2
  3182  032A  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  3183                           
  3184                           ;main_Master.c: 606:             LCD_Write_Character(' ');
  3185  032F  3020               	movlw	32
  3186  0330  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  3187                           
  3188                           ;main_Master.c: 607:             LCD_Set_Cursor(2,15);
  3189  0335  300F               	movlw	15
  3190  0336  1283               	bcf	3,5	;RP0=0, select bank0
  3191  0337  1303               	bcf	3,6	;RP1=0, select bank0
  3192  0338  00B7               	movwf	??_mostrarLCD
  3193  0339  0837               	movf	??_mostrarLCD,w
  3194  033A  00F5               	movwf	LCD_Set_Cursor@columna
  3195  033B  3002               	movlw	2
  3196  033C  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  3197                           
  3198                           ;main_Master.c: 608:             LCD_Write_Character(1);
  3199  0341  3001               	movlw	1
  3200  0342  160A  118A  269D   	fcall	_LCD_Write_Character
  3201                           
  3202                           ;main_Master.c: 609:             break;
  3203  0345  0008               	return
  3204  0346                     l4531:	
  3205                           
  3206                           ;main_Master.c: 611:             LCD_Set_Cursor(1,0);
  3207  0346  01F5               	clrf	LCD_Set_Cursor@columna
  3208  0347  3001               	movlw	1
  3209  0348  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  3210                           
  3211                           ;main_Master.c: 612:             LCD_Write_String("INICIANDO...");
  3212  034D  3048               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  3213  034E  160A  118A  2786  120A  118A  	fcall	_LCD_Write_String
  3214                           
  3215                           ;main_Master.c: 614:             I2C_Master_Start();
  3216  0353  160A  118A  2677  120A  118A  	fcall	_I2C_Master_Start
  3217                           
  3218                           ;main_Master.c: 615:             I2C_Master_Write(0x30);
  3219  0358  3030               	movlw	48
  3220  0359  1283               	bcf	3,5	;RP0=0, select bank0
  3221  035A  1303               	bcf	3,6	;RP1=0, select bank0
  3222  035B  00AD               	movwf	I2C_Master_Write@d
  3223  035C  3000               	movlw	0
  3224  035D  00AE               	movwf	I2C_Master_Write@d+1
  3225  035E  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  3226                           
  3227                           ;main_Master.c: 616:             I2C_Master_Write(velocidad);
  3228  0363  1283               	bcf	3,5	;RP0=0, select bank0
  3229  0364  1303               	bcf	3,6	;RP1=0, select bank0
  3230  0365  0853               	movf	_velocidad,w
  3231  0366  00B7               	movwf	??_mostrarLCD
  3232  0367  01B8               	clrf	??_mostrarLCD+1
  3233  0368  0837               	movf	??_mostrarLCD,w
  3234  0369  00AD               	movwf	I2C_Master_Write@d
  3235  036A  0838               	movf	??_mostrarLCD+1,w
  3236  036B  00AE               	movwf	I2C_Master_Write@d+1
  3237  036C  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  3238                           
  3239                           ;main_Master.c: 617:             I2C_Master_Stop();
  3240  0371  160A  118A  267E  120A  118A  	fcall	_I2C_Master_Stop
  3241                           
  3242                           ;main_Master.c: 618:             _delay((unsigned long)((100)*(1000000/4000.0)));
  3243  0376  3021               	movlw	33
  3244  0377  1283               	bcf	3,5	;RP0=0, select bank0
  3245  0378  1303               	bcf	3,6	;RP1=0, select bank0
  3246  0379  00B8               	movwf	??_mostrarLCD+1
  3247  037A  3075               	movlw	117
  3248  037B  00B7               	movwf	??_mostrarLCD
  3249  037C                     u2127:	
  3250  037C  0BB7               	decfsz	??_mostrarLCD,f
  3251  037D  2B7C               	goto	u2127
  3252  037E  0BB8               	decfsz	??_mostrarLCD+1,f
  3253  037F  2B7C               	goto	u2127
  3254  0380  2B81               	nop2
  3255                           
  3256                           ;main_Master.c: 619:             I2C_Master_Start();
  3257  0381  160A  118A  2677  120A  118A  	fcall	_I2C_Master_Start
  3258                           
  3259                           ;main_Master.c: 620:             I2C_Master_Write(0x30);
  3260  0386  3030               	movlw	48
  3261  0387  1283               	bcf	3,5	;RP0=0, select bank0
  3262  0388  1303               	bcf	3,6	;RP1=0, select bank0
  3263  0389  00AD               	movwf	I2C_Master_Write@d
  3264  038A  3000               	movlw	0
  3265  038B  00AE               	movwf	I2C_Master_Write@d+1
  3266  038C  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  3267                           
  3268                           ;main_Master.c: 621:             I2C_Master_Write(largo);
  3269  0391  1283               	bcf	3,5	;RP0=0, select bank0
  3270  0392  1303               	bcf	3,6	;RP1=0, select bank0
  3271  0393  084D               	movf	_largo,w
  3272  0394  00B7               	movwf	??_mostrarLCD
  3273  0395  01B8               	clrf	??_mostrarLCD+1
  3274  0396  0837               	movf	??_mostrarLCD,w
  3275  0397  00AD               	movwf	I2C_Master_Write@d
  3276  0398  0838               	movf	??_mostrarLCD+1,w
  3277  0399  00AE               	movwf	I2C_Master_Write@d+1
  3278  039A  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  3279                           
  3280                           ;main_Master.c: 622:             I2C_Master_Stop();
  3281  039F  160A  118A  267E  120A  118A  	fcall	_I2C_Master_Stop
  3282                           
  3283                           ;main_Master.c: 623:             _delay((unsigned long)((100)*(1000000/4000.0)));
  3284  03A4  3021               	movlw	33
  3285  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  3286  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  3287  03A7  00B8               	movwf	??_mostrarLCD+1
  3288  03A8  3075               	movlw	117
  3289  03A9  00B7               	movwf	??_mostrarLCD
  3290  03AA                     u2137:	
  3291  03AA  0BB7               	decfsz	??_mostrarLCD,f
  3292  03AB  2BAA               	goto	u2137
  3293  03AC  0BB8               	decfsz	??_mostrarLCD+1,f
  3294  03AD  2BAA               	goto	u2137
  3295  03AE  2BAF               	nop2
  3296                           
  3297                           ;main_Master.c: 624:             I2C_Master_Start();
  3298  03AF  160A  118A  2677  120A  118A  	fcall	_I2C_Master_Start
  3299                           
  3300                           ;main_Master.c: 625:             I2C_Master_Write(0x30);
  3301  03B4  3030               	movlw	48
  3302  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  3303  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  3304  03B7  00AD               	movwf	I2C_Master_Write@d
  3305  03B8  3000               	movlw	0
  3306  03B9  00AE               	movwf	I2C_Master_Write@d+1
  3307  03BA  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  3308                           
  3309                           ;main_Master.c: 626:             I2C_Master_Write(ancho);
  3310  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  3311  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  3312  03C1  084C               	movf	_ancho,w
  3313  03C2  00B7               	movwf	??_mostrarLCD
  3314  03C3  01B8               	clrf	??_mostrarLCD+1
  3315  03C4  0837               	movf	??_mostrarLCD,w
  3316  03C5  00AD               	movwf	I2C_Master_Write@d
  3317  03C6  0838               	movf	??_mostrarLCD+1,w
  3318  03C7  00AE               	movwf	I2C_Master_Write@d+1
  3319  03C8  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  3320                           
  3321                           ;main_Master.c: 627:             I2C_Master_Stop();
  3322  03CD  160A  118A  267E  120A  118A  	fcall	_I2C_Master_Stop
  3323                           
  3324                           ;main_Master.c: 628:             _delay((unsigned long)((500)*(1000000/4000.0)));
  3325  03D2  30A3               	movlw	163
  3326  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  3327  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  3328  03D5  00B8               	movwf	??_mostrarLCD+1
  3329  03D6  3054               	movlw	84
  3330  03D7  00B7               	movwf	??_mostrarLCD
  3331  03D8                     u2147:	
  3332  03D8  0BB7               	decfsz	??_mostrarLCD,f
  3333  03D9  2BD8               	goto	u2147
  3334  03DA  0BB8               	decfsz	??_mostrarLCD+1,f
  3335  03DB  2BD8               	goto	u2147
  3336  03DC  0000               	nop
  3337                           
  3338                           ;main_Master.c: 629:             LCD_clear();
  3339  03DD  160A  118A  26F4   	fcall	_LCD_clear
  3340                           
  3341                           ;main_Master.c: 630:             estado = 0;
  3342  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  3343  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  3344  03E2  01D5               	clrf	_estado
  3345                           
  3346                           ;main_Master.c: 631:             break;
  3347  03E3  0008               	return
  3348  03E4                     l4567:	
  3349                           
  3350                           ;main_Master.c: 633:             LCD_Set_Cursor(1,9);
  3351  03E4  3009               	movlw	9
  3352  03E5  00B7               	movwf	??_mostrarLCD
  3353  03E6  0837               	movf	??_mostrarLCD,w
  3354  03E7  00F5               	movwf	LCD_Set_Cursor@columna
  3355  03E8  3001               	movlw	1
  3356  03E9  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  3357                           
  3358                           ;main_Master.c: 634:             LCD_Write_String("ERROR");
  3359  03EE  309C               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  3360  03EF  160A  118A  2786   	fcall	_LCD_Write_String
  3361                           
  3362                           ;main_Master.c: 635:     }
  3363  03F2  0008               	return
  3364  03F3                     l4569:	
  3365  03F3  083A               	movf	mostrarLCD@pantalla,w
  3366  03F4  00B7               	movwf	??_mostrarLCD
  3367  03F5  01B8               	clrf	??_mostrarLCD+1
  3368                           
  3369                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3370                           ; Switch size 1, requested type "simple"
  3371                           ; Number of cases is 1, Range of values is 0 to 0
  3372                           ; switch strategies available:
  3373                           ; Name         Instructions Cycles
  3374                           ; simple_byte            4     3 (average)
  3375                           ; direct_byte           11     8 (fixed)
  3376                           ; jumptable            260     6 (fixed)
  3377                           ;	Chosen strategy is simple_byte
  3378  03F6  0838               	movf	??_mostrarLCD+1,w
  3379  03F7  3A00               	xorlw	0	; case 0
  3380  03F8  1903               	skipnz
  3381  03F9  2BFB               	goto	l5139
  3382  03FA  2BE4               	goto	l4567
  3383  03FB                     l5139:	
  3384                           
  3385                           ; Switch size 1, requested type "simple"
  3386                           ; Number of cases is 11, Range of values is 0 to 10
  3387                           ; switch strategies available:
  3388                           ; Name         Instructions Cycles
  3389                           ; simple_byte           34    18 (average)
  3390                           ; direct_byte           41     8 (fixed)
  3391                           ; jumptable            260     6 (fixed)
  3392                           ;	Chosen strategy is simple_byte
  3393  03FB  0837               	movf	??_mostrarLCD,w
  3394  03FC  3A00               	xorlw	0	; case 0
  3395  03FD  1903               	skipnz
  3396  03FE  282D               	goto	l4385
  3397  03FF  3A01               	xorlw	1	; case 1
  3398  0400  1903               	skipnz
  3399  0401  2842               	goto	l4387
  3400  0402  3A03               	xorlw	3	; case 2
  3401  0403  1903               	skipnz
  3402  0404  291F               	goto	l4425
  3403  0405  3A01               	xorlw	1	; case 3
  3404  0406  1903               	skipnz
  3405  0407  2965               	goto	l4441
  3406  0408  3A07               	xorlw	7	; case 4
  3407  0409  1903               	skipnz
  3408  040A  299B               	goto	l4457
  3409  040B  3A01               	xorlw	1	; case 5
  3410  040C  1903               	skipnz
  3411  040D  2A7E               	goto	l4497
  3412  040E  3A03               	xorlw	3	; case 6
  3413  040F  1903               	skipnz
  3414  0410  2ABF               	goto	l4507
  3415  0411  3A01               	xorlw	1	; case 7
  3416  0412  1903               	skipnz
  3417  0413  2AD4               	goto	l4513
  3418  0414  3A0F               	xorlw	15	; case 8
  3419  0415  1903               	skipnz
  3420  0416  2AFB               	goto	l4519
  3421  0417  3A01               	xorlw	1	; case 9
  3422  0418  1903               	skipnz
  3423  0419  2B25               	goto	l4525
  3424  041A  3A03               	xorlw	3	; case 10
  3425  041B  1903               	skipnz
  3426  041C  2B46               	goto	l4531
  3427  041D  2BE4               	goto	l4567
  3428  041E  0008               	return
  3429  041F                     __end_of_mostrarLCD:	
  3430                           
  3431                           	psect	text5
  3432  0C23                     __ptext5:	
  3433 ;; *************** function _uint_to_array *****************
  3434 ;; Defined at:
  3435 ;;		line 181 in file "LCD_8bits.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  numero          1    wreg     unsigned char 
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;  numero          1   22[BANK0 ] unsigned char 
  3440 ;;  resultado       6   16[BANK0 ] unsigned int [3]
  3441 ;;  centenas        1   15[BANK0 ] unsigned char 
  3442 ;;  decenas         1   14[BANK0 ] unsigned char 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      PTR unsigned int 
  3445 ;; Registers used:
  3446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3452 ;;      Params:         0       0       0       0       0
  3453 ;;      Locals:         0       9       0       0       0
  3454 ;;      Temps:          0       6       0       0       0
  3455 ;;      Totals:         0      15       0       0       0
  3456 ;;Total ram usage:       15 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:    2
  3459 ;; This function calls:
  3460 ;;		___awdiv
  3461 ;;		___wmul
  3462 ;; This function is called by:
  3463 ;;		_mostrarLCD
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           
  3468                           ;psect for function _uint_to_array
  3469  0C23                     _uint_to_array:	
  3470                           
  3471                           ;incstack = 0
  3472                           ; Regs used in _uint_to_array: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3473                           ;uint_to_array@numero stored from wreg
  3474  0C23  1283               	bcf	3,5	;RP0=0, select bank0
  3475  0C24  1303               	bcf	3,6	;RP1=0, select bank0
  3476  0C25  00B6               	movwf	uint_to_array@numero
  3477                           
  3478                           ;LCD_8bits.c: 182:     uint16_t resultado[3] = {0,0,0};
  3479  0C26  3030               	movlw	uint_to_array@resultado& (0+255)
  3480  0C27  0084               	movwf	4
  3481  0C28  3006               	movlw	6
  3482  0C29  00FF               	movwf	127
  3483  0C2A                     u1820:	
  3484  0C2A  1383               	bcf	3,7	;select IRP bank0
  3485  0C2B  0180               	clrf	0
  3486  0C2C  0A84               	incf	4,f
  3487  0C2D  0BFF               	decfsz	127,f
  3488  0C2E  2C2A               	goto	u1820
  3489                           
  3490                           ;LCD_8bits.c: 183:     resultado[0] = numero/100;
  3491  0C2F  3064               	movlw	100
  3492  0C30  00A0               	movwf	___awdiv@divisor
  3493  0C31  3000               	movlw	0
  3494  0C32  00A1               	movwf	___awdiv@divisor+1
  3495  0C33  0836               	movf	uint_to_array@numero,w
  3496  0C34  00A8               	movwf	??_uint_to_array
  3497  0C35  01A9               	clrf	??_uint_to_array+1
  3498  0C36  0828               	movf	??_uint_to_array,w
  3499  0C37  00A2               	movwf	___awdiv@dividend
  3500  0C38  0829               	movf	??_uint_to_array+1,w
  3501  0C39  00A3               	movwf	___awdiv@dividend+1
  3502  0C3A  120A  158A  2198  120A  158A  	fcall	___awdiv
  3503  0C3F  1283               	bcf	3,5	;RP0=0, select bank0
  3504  0C40  1303               	bcf	3,6	;RP1=0, select bank0
  3505  0C41  0821               	movf	?___awdiv+1,w
  3506  0C42  00B1               	movwf	uint_to_array@resultado+1
  3507  0C43  0820               	movf	?___awdiv,w
  3508  0C44  00B0               	movwf	uint_to_array@resultado
  3509                           
  3510                           ;LCD_8bits.c: 184:     uint8_t centenas = resultado[0];
  3511  0C45  0830               	movf	uint_to_array@resultado,w
  3512  0C46  00A8               	movwf	??_uint_to_array
  3513  0C47  0828               	movf	??_uint_to_array,w
  3514  0C48  00AF               	movwf	uint_to_array@centenas
  3515                           
  3516                           ;LCD_8bits.c: 185:     resultado[1] = (numero - (centenas *100))/10;
  3517  0C49  300A               	movlw	10
  3518  0C4A  00A0               	movwf	___awdiv@divisor
  3519  0C4B  3000               	movlw	0
  3520  0C4C  00A1               	movwf	___awdiv@divisor+1
  3521  0C4D  082F               	movf	uint_to_array@centenas,w
  3522  0C4E  00A8               	movwf	??_uint_to_array
  3523  0C4F  01A9               	clrf	??_uint_to_array+1
  3524  0C50  0828               	movf	??_uint_to_array,w
  3525  0C51  00F2               	movwf	___wmul@multiplier
  3526  0C52  0829               	movf	??_uint_to_array+1,w
  3527  0C53  00F3               	movwf	___wmul@multiplier+1
  3528  0C54  309C               	movlw	156
  3529  0C55  00F4               	movwf	___wmul@multiplicand
  3530  0C56  30FF               	movlw	255
  3531  0C57  00F5               	movwf	___wmul@multiplicand+1
  3532  0C58  160A  118A  2765  120A  158A  	fcall	___wmul
  3533  0C5D  1283               	bcf	3,5	;RP0=0, select bank0
  3534  0C5E  1303               	bcf	3,6	;RP1=0, select bank0
  3535  0C5F  0836               	movf	uint_to_array@numero,w
  3536  0C60  0772               	addwf	?___wmul,w
  3537  0C61  00A2               	movwf	___awdiv@dividend
  3538  0C62  0873               	movf	?___wmul+1,w
  3539  0C63  1803               	skipnc
  3540  0C64  0A73               	incf	?___wmul+1,w
  3541  0C65  00A3               	movwf	___awdiv@dividend+1
  3542  0C66  120A  158A  2198  120A  158A  	fcall	___awdiv
  3543  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  3544  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  3545  0C6D  0821               	movf	?___awdiv+1,w
  3546  0C6E  00B3               	movwf	uint_to_array@resultado+3
  3547  0C6F  0820               	movf	?___awdiv,w
  3548  0C70  00B2               	movwf	uint_to_array@resultado+2
  3549                           
  3550                           ;LCD_8bits.c: 186:     uint8_t decenas = resultado[1];
  3551  0C71  0832               	movf	uint_to_array@resultado+2,w
  3552  0C72  00A8               	movwf	??_uint_to_array
  3553  0C73  0828               	movf	??_uint_to_array,w
  3554  0C74  00AE               	movwf	uint_to_array@decenas
  3555                           
  3556                           ;LCD_8bits.c: 187:     resultado[2] = numero -(centenas*100+decenas*10);
  3557  0C75  082F               	movf	uint_to_array@centenas,w
  3558  0C76  00A8               	movwf	??_uint_to_array
  3559  0C77  01A9               	clrf	??_uint_to_array+1
  3560  0C78  0828               	movf	??_uint_to_array,w
  3561  0C79  00F2               	movwf	___wmul@multiplier
  3562  0C7A  0829               	movf	??_uint_to_array+1,w
  3563  0C7B  00F3               	movwf	___wmul@multiplier+1
  3564  0C7C  309C               	movlw	156
  3565  0C7D  00F4               	movwf	___wmul@multiplicand
  3566  0C7E  30FF               	movlw	255
  3567  0C7F  00F5               	movwf	___wmul@multiplicand+1
  3568  0C80  160A  118A  2765  120A  158A  	fcall	___wmul
  3569  0C85  1283               	bcf	3,5	;RP0=0, select bank0
  3570  0C86  1303               	bcf	3,6	;RP1=0, select bank0
  3571  0C87  0836               	movf	uint_to_array@numero,w
  3572  0C88  0772               	addwf	?___wmul,w
  3573  0C89  00AA               	movwf	??_uint_to_array+2
  3574  0C8A  0873               	movf	?___wmul+1,w
  3575  0C8B  1803               	skipnc
  3576  0C8C  0A73               	incf	?___wmul+1,w
  3577  0C8D  00AB               	movwf	??_uint_to_array+3
  3578  0C8E  082E               	movf	uint_to_array@decenas,w
  3579  0C8F  00AC               	movwf	??_uint_to_array+4
  3580  0C90  01AD               	clrf	??_uint_to_array+5
  3581  0C91  082C               	movf	??_uint_to_array+4,w
  3582  0C92  00F2               	movwf	___wmul@multiplier
  3583  0C93  082D               	movf	??_uint_to_array+5,w
  3584  0C94  00F3               	movwf	___wmul@multiplier+1
  3585  0C95  30F6               	movlw	246
  3586  0C96  00F4               	movwf	___wmul@multiplicand
  3587  0C97  30FF               	movlw	255
  3588  0C98  00F5               	movwf	___wmul@multiplicand+1
  3589  0C99  160A  118A  2765   	fcall	___wmul
  3590  0C9C  0872               	movf	?___wmul,w
  3591  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3592  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3593  0C9F  072A               	addwf	??_uint_to_array+2,w
  3594  0CA0  00B4               	movwf	uint_to_array@resultado+4
  3595  0CA1  0873               	movf	?___wmul+1,w
  3596  0CA2  1803               	skipnc
  3597  0CA3  0A73               	incf	?___wmul+1,w
  3598  0CA4  072B               	addwf	??_uint_to_array+3,w
  3599  0CA5  00B5               	movwf	uint_to_array@resultado+5
  3600                           
  3601                           ;LCD_8bits.c: 188:     return(resultado);
  3602  0CA6  3030               	movlw	(low (uint_to_array@resultado| 0))& (0+255)
  3603  0CA7  0008               	return
  3604  0CA8                     __end_of_uint_to_array:	
  3605                           
  3606                           	psect	text6
  3607  1765                     __ptext6:	
  3608 ;; *************** function ___wmul *****************
  3609 ;; Defined at:
  3610 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;  multiplier      2    2[COMMON] unsigned int 
  3613 ;;  multiplicand    2    4[COMMON] unsigned int 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  product         2    6[COMMON] unsigned int 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  2    2[COMMON] unsigned int 
  3618 ;; Registers used:
  3619 ;;		wreg, status,2, status,0
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3625 ;;      Params:         4       0       0       0       0
  3626 ;;      Locals:         2       0       0       0       0
  3627 ;;      Temps:          0       0       0       0       0
  3628 ;;      Totals:         6       0       0       0       0
  3629 ;;Total ram usage:        6 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    1
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		_uint_to_array
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           
  3640                           ;psect for function ___wmul
  3641  1765                     ___wmul:	
  3642                           
  3643                           ;incstack = 0
  3644                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3645  1765  01F6               	clrf	___wmul@product
  3646  1766  01F7               	clrf	___wmul@product+1
  3647  1767                     l2823:	
  3648  1767  1C72               	btfss	___wmul@multiplier,0
  3649  1768  2F6F               	goto	l623
  3650  1769  0874               	movf	___wmul@multiplicand,w
  3651  176A  07F6               	addwf	___wmul@product,f
  3652  176B  1803               	skipnc
  3653  176C  0AF7               	incf	___wmul@product+1,f
  3654  176D  0875               	movf	___wmul@multiplicand+1,w
  3655  176E  07F7               	addwf	___wmul@product+1,f
  3656  176F                     l623:	
  3657  176F  3001               	movlw	1
  3658  1770                     u1055:	
  3659  1770  1003               	clrc
  3660  1771  0DF4               	rlf	___wmul@multiplicand,f
  3661  1772  0DF5               	rlf	___wmul@multiplicand+1,f
  3662  1773  3EFF               	addlw	-1
  3663  1774  1D03               	skipz
  3664  1775  2F70               	goto	u1055
  3665  1776  3001               	movlw	1
  3666  1777                     u1065:	
  3667  1777  1003               	clrc
  3668  1778  0CF3               	rrf	___wmul@multiplier+1,f
  3669  1779  0CF2               	rrf	___wmul@multiplier,f
  3670  177A  3EFF               	addlw	-1
  3671  177B  1D03               	skipz
  3672  177C  2F77               	goto	u1065
  3673  177D  0872               	movf	___wmul@multiplier,w
  3674  177E  0473               	iorwf	___wmul@multiplier+1,w
  3675  177F  1D03               	btfss	3,2
  3676  1780  2F67               	goto	l2823
  3677  1781  0877               	movf	___wmul@product+1,w
  3678  1782  00F3               	movwf	?___wmul+1
  3679  1783  0876               	movf	___wmul@product,w
  3680  1784  00F2               	movwf	?___wmul
  3681  1785  0008               	return
  3682  1786                     __end_of___wmul:	
  3683                           
  3684                           	psect	text7
  3685  06ED                     __ptext7:	
  3686 ;; *************** function _display_Uhrzeit *****************
  3687 ;; Defined at:
  3688 ;;		line 414 in file "main_Master.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  fila            1    wreg     unsigned char 
  3691 ;;  columna         1    8[BANK0 ] unsigned char 
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;  fila            1   12[BANK0 ] unsigned char 
  3694 ;;  Uhr_d           1   18[BANK0 ] unsigned char 
  3695 ;;  Uhr_u           1   17[BANK0 ] unsigned char 
  3696 ;;  min_d           1   16[BANK0 ] unsigned char 
  3697 ;;  min_u           1   15[BANK0 ] unsigned char 
  3698 ;;  seg_d           1   14[BANK0 ] unsigned char 
  3699 ;;  seg_u           1   13[BANK0 ] unsigned char 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3709 ;;      Params:         0       1       0       0       0
  3710 ;;      Locals:         0       7       0       0       0
  3711 ;;      Temps:          0       3       0       0       0
  3712 ;;      Totals:         0      11       0       0       0
  3713 ;;Total ram usage:       11 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; Hardware stack levels required when called:    3
  3716 ;; This function calls:
  3717 ;;		_LCD_Set_Cursor
  3718 ;;		_LCD_Write_Character
  3719 ;;		___awdiv
  3720 ;;		___awmod
  3721 ;; This function is called by:
  3722 ;;		_mostrarLCD
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           
  3727                           ;psect for function _display_Uhrzeit
  3728  06ED                     _display_Uhrzeit:	
  3729                           
  3730                           ;incstack = 0
  3731                           ; Regs used in _display_Uhrzeit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3732                           ;display_Uhrzeit@fila stored from wreg
  3733  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  3734  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  3735  06EF  00AC               	movwf	display_Uhrzeit@fila
  3736                           
  3737                           ;main_Master.c: 415:     char seg_u = seg%10;
  3738  06F0  300A               	movlw	10
  3739  06F1  00F2               	movwf	___awmod@divisor
  3740  06F2  3000               	movlw	0
  3741  06F3  00F3               	movwf	___awmod@divisor+1
  3742  06F4  0854               	movf	_seg,w
  3743  06F5  00A9               	movwf	??_display_Uhrzeit
  3744  06F6  01AA               	clrf	??_display_Uhrzeit+1
  3745  06F7  0829               	movf	??_display_Uhrzeit,w
  3746  06F8  00F4               	movwf	___awmod@dividend
  3747  06F9  082A               	movf	??_display_Uhrzeit+1,w
  3748  06FA  00F5               	movwf	___awmod@dividend+1
  3749  06FB  120A  158A  214D  120A  118A  	fcall	___awmod
  3750  0700  0872               	movf	?___awmod,w
  3751  0701  1283               	bcf	3,5	;RP0=0, select bank0
  3752  0702  1303               	bcf	3,6	;RP1=0, select bank0
  3753  0703  00AB               	movwf	??_display_Uhrzeit+2
  3754  0704  082B               	movf	??_display_Uhrzeit+2,w
  3755  0705  00AD               	movwf	display_Uhrzeit@seg_u
  3756                           
  3757                           ;main_Master.c: 416:     char seg_d = seg/10;
  3758  0706  300A               	movlw	10
  3759  0707  00A0               	movwf	___awdiv@divisor
  3760  0708  3000               	movlw	0
  3761  0709  00A1               	movwf	___awdiv@divisor+1
  3762  070A  0854               	movf	_seg,w
  3763  070B  00A9               	movwf	??_display_Uhrzeit
  3764  070C  01AA               	clrf	??_display_Uhrzeit+1
  3765  070D  0829               	movf	??_display_Uhrzeit,w
  3766  070E  00A2               	movwf	___awdiv@dividend
  3767  070F  082A               	movf	??_display_Uhrzeit+1,w
  3768  0710  00A3               	movwf	___awdiv@dividend+1
  3769  0711  120A  158A  2198  120A  118A  	fcall	___awdiv
  3770  0716  1283               	bcf	3,5	;RP0=0, select bank0
  3771  0717  1303               	bcf	3,6	;RP1=0, select bank0
  3772  0718  0820               	movf	?___awdiv,w
  3773  0719  00AB               	movwf	??_display_Uhrzeit+2
  3774  071A  082B               	movf	??_display_Uhrzeit+2,w
  3775  071B  00AE               	movwf	display_Uhrzeit@seg_d
  3776                           
  3777                           ;main_Master.c: 417:     char min_u = min%10;
  3778  071C  300A               	movlw	10
  3779  071D  00F2               	movwf	___awmod@divisor
  3780  071E  3000               	movlw	0
  3781  071F  00F3               	movwf	___awmod@divisor+1
  3782  0720  085F               	movf	_min,w
  3783  0721  00A9               	movwf	??_display_Uhrzeit
  3784  0722  01AA               	clrf	??_display_Uhrzeit+1
  3785  0723  0829               	movf	??_display_Uhrzeit,w
  3786  0724  00F4               	movwf	___awmod@dividend
  3787  0725  082A               	movf	??_display_Uhrzeit+1,w
  3788  0726  00F5               	movwf	___awmod@dividend+1
  3789  0727  120A  158A  214D  120A  118A  	fcall	___awmod
  3790  072C  0872               	movf	?___awmod,w
  3791  072D  1283               	bcf	3,5	;RP0=0, select bank0
  3792  072E  1303               	bcf	3,6	;RP1=0, select bank0
  3793  072F  00AB               	movwf	??_display_Uhrzeit+2
  3794  0730  082B               	movf	??_display_Uhrzeit+2,w
  3795  0731  00AF               	movwf	display_Uhrzeit@min_u
  3796                           
  3797                           ;main_Master.c: 418:     char min_d = min/10;
  3798  0732  300A               	movlw	10
  3799  0733  00A0               	movwf	___awdiv@divisor
  3800  0734  3000               	movlw	0
  3801  0735  00A1               	movwf	___awdiv@divisor+1
  3802  0736  085F               	movf	_min,w
  3803  0737  00A9               	movwf	??_display_Uhrzeit
  3804  0738  01AA               	clrf	??_display_Uhrzeit+1
  3805  0739  0829               	movf	??_display_Uhrzeit,w
  3806  073A  00A2               	movwf	___awdiv@dividend
  3807  073B  082A               	movf	??_display_Uhrzeit+1,w
  3808  073C  00A3               	movwf	___awdiv@dividend+1
  3809  073D  120A  158A  2198  120A  118A  	fcall	___awdiv
  3810  0742  1283               	bcf	3,5	;RP0=0, select bank0
  3811  0743  1303               	bcf	3,6	;RP1=0, select bank0
  3812  0744  0820               	movf	?___awdiv,w
  3813  0745  00AB               	movwf	??_display_Uhrzeit+2
  3814  0746  082B               	movf	??_display_Uhrzeit+2,w
  3815  0747  00B0               	movwf	display_Uhrzeit@min_d
  3816                           
  3817                           ;main_Master.c: 419:     char Uhr_u = hora%10;
  3818  0748  300A               	movlw	10
  3819  0749  00F2               	movwf	___awmod@divisor
  3820  074A  3000               	movlw	0
  3821  074B  00F3               	movwf	___awmod@divisor+1
  3822  074C  085E               	movf	_hora,w
  3823  074D  00A9               	movwf	??_display_Uhrzeit
  3824  074E  01AA               	clrf	??_display_Uhrzeit+1
  3825  074F  0829               	movf	??_display_Uhrzeit,w
  3826  0750  00F4               	movwf	___awmod@dividend
  3827  0751  082A               	movf	??_display_Uhrzeit+1,w
  3828  0752  00F5               	movwf	___awmod@dividend+1
  3829  0753  120A  158A  214D  120A  118A  	fcall	___awmod
  3830  0758  0872               	movf	?___awmod,w
  3831  0759  1283               	bcf	3,5	;RP0=0, select bank0
  3832  075A  1303               	bcf	3,6	;RP1=0, select bank0
  3833  075B  00AB               	movwf	??_display_Uhrzeit+2
  3834  075C  082B               	movf	??_display_Uhrzeit+2,w
  3835  075D  00B1               	movwf	display_Uhrzeit@Uhr_u
  3836                           
  3837                           ;main_Master.c: 420:     char Uhr_d = hora/10;
  3838  075E  300A               	movlw	10
  3839  075F  00A0               	movwf	___awdiv@divisor
  3840  0760  3000               	movlw	0
  3841  0761  00A1               	movwf	___awdiv@divisor+1
  3842  0762  085E               	movf	_hora,w
  3843  0763  00A9               	movwf	??_display_Uhrzeit
  3844  0764  01AA               	clrf	??_display_Uhrzeit+1
  3845  0765  0829               	movf	??_display_Uhrzeit,w
  3846  0766  00A2               	movwf	___awdiv@dividend
  3847  0767  082A               	movf	??_display_Uhrzeit+1,w
  3848  0768  00A3               	movwf	___awdiv@dividend+1
  3849  0769  120A  158A  2198  120A  118A  	fcall	___awdiv
  3850  076E  1283               	bcf	3,5	;RP0=0, select bank0
  3851  076F  1303               	bcf	3,6	;RP1=0, select bank0
  3852  0770  0820               	movf	?___awdiv,w
  3853  0771  00AB               	movwf	??_display_Uhrzeit+2
  3854  0772  082B               	movf	??_display_Uhrzeit+2,w
  3855  0773  00B2               	movwf	display_Uhrzeit@Uhr_d
  3856                           
  3857                           ;main_Master.c: 422:     LCD_Set_Cursor(fila, columna);
  3858  0774  0828               	movf	display_Uhrzeit@columna,w
  3859  0775  00A9               	movwf	??_display_Uhrzeit
  3860  0776  0829               	movf	??_display_Uhrzeit,w
  3861  0777  00F5               	movwf	LCD_Set_Cursor@columna
  3862  0778  082C               	movf	display_Uhrzeit@fila,w
  3863  0779  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  3864                           
  3865                           ;main_Master.c: 423:     LCD_Write_Character(Uhr_d + '0');
  3866  077E  1283               	bcf	3,5	;RP0=0, select bank0
  3867  077F  1303               	bcf	3,6	;RP1=0, select bank0
  3868  0780  0832               	movf	display_Uhrzeit@Uhr_d,w
  3869  0781  3E30               	addlw	48
  3870  0782  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  3871                           
  3872                           ;main_Master.c: 424:     LCD_Write_Character(Uhr_u + '0');
  3873  0787  1283               	bcf	3,5	;RP0=0, select bank0
  3874  0788  1303               	bcf	3,6	;RP1=0, select bank0
  3875  0789  0831               	movf	display_Uhrzeit@Uhr_u,w
  3876  078A  3E30               	addlw	48
  3877  078B  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  3878                           
  3879                           ;main_Master.c: 425:     LCD_Write_Character(':');
  3880  0790  303A               	movlw	58
  3881  0791  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  3882                           
  3883                           ;main_Master.c: 426:     LCD_Write_Character(min_d + '0');
  3884  0796  1283               	bcf	3,5	;RP0=0, select bank0
  3885  0797  1303               	bcf	3,6	;RP1=0, select bank0
  3886  0798  0830               	movf	display_Uhrzeit@min_d,w
  3887  0799  3E30               	addlw	48
  3888  079A  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  3889                           
  3890                           ;main_Master.c: 427:     LCD_Write_Character(min_u + '0');
  3891  079F  1283               	bcf	3,5	;RP0=0, select bank0
  3892  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  3893  07A1  082F               	movf	display_Uhrzeit@min_u,w
  3894  07A2  3E30               	addlw	48
  3895  07A3  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  3896                           
  3897                           ;main_Master.c: 428:     LCD_Write_Character(':');
  3898  07A8  303A               	movlw	58
  3899  07A9  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  3900                           
  3901                           ;main_Master.c: 429:     LCD_Write_Character(seg_d + '0');
  3902  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  3903  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  3904  07B0  082E               	movf	display_Uhrzeit@seg_d,w
  3905  07B1  3E30               	addlw	48
  3906  07B2  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  3907                           
  3908                           ;main_Master.c: 430:     LCD_Write_Character(seg_u + '0');
  3909  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  3910  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  3911  07B9  082D               	movf	display_Uhrzeit@seg_u,w
  3912  07BA  3E30               	addlw	48
  3913  07BB  160A  118A  269D   	fcall	_LCD_Write_Character
  3914  07BE  0008               	return
  3915  07BF                     __end_of_display_Uhrzeit:	
  3916                           
  3917                           	psect	text8
  3918  0615                     __ptext8:	
  3919 ;; *************** function _display_Datum *****************
  3920 ;; Defined at:
  3921 ;;		line 434 in file "main_Master.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  fila            1    wreg     unsigned char 
  3924 ;;  columna         1    8[BANK0 ] unsigned char 
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;  fila            1   12[BANK0 ] unsigned char 
  3927 ;;  jahr_d          1   18[BANK0 ] unsigned char 
  3928 ;;  jahr_u          1   17[BANK0 ] unsigned char 
  3929 ;;  mes_d           1   16[BANK0 ] unsigned char 
  3930 ;;  mes_u           1   15[BANK0 ] unsigned char 
  3931 ;;  dia_d           1   14[BANK0 ] unsigned char 
  3932 ;;  dia_u           1   13[BANK0 ] unsigned char 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3942 ;;      Params:         0       1       0       0       0
  3943 ;;      Locals:         0       7       0       0       0
  3944 ;;      Temps:          0       3       0       0       0
  3945 ;;      Totals:         0      11       0       0       0
  3946 ;;Total ram usage:       11 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:    3
  3949 ;; This function calls:
  3950 ;;		_LCD_Set_Cursor
  3951 ;;		_LCD_Write_Character
  3952 ;;		_LCD_Write_String
  3953 ;;		___awdiv
  3954 ;;		___awmod
  3955 ;; This function is called by:
  3956 ;;		_mostrarLCD
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           
  3961                           ;psect for function _display_Datum
  3962  0615                     _display_Datum:	
  3963                           
  3964                           ;incstack = 0
  3965                           ; Regs used in _display_Datum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3966                           ;display_Datum@fila stored from wreg
  3967  0615  1283               	bcf	3,5	;RP0=0, select bank0
  3968  0616  1303               	bcf	3,6	;RP1=0, select bank0
  3969  0617  00AC               	movwf	display_Datum@fila
  3970                           
  3971                           ;main_Master.c: 435:     char dia_u = datum%10;
  3972  0618  300A               	movlw	10
  3973  0619  00F2               	movwf	___awmod@divisor
  3974  061A  3000               	movlw	0
  3975  061B  00F3               	movwf	___awmod@divisor+1
  3976  061C  085C               	movf	_datum,w
  3977  061D  00A9               	movwf	??_display_Datum
  3978  061E  01AA               	clrf	??_display_Datum+1
  3979  061F  0829               	movf	??_display_Datum,w
  3980  0620  00F4               	movwf	___awmod@dividend
  3981  0621  082A               	movf	??_display_Datum+1,w
  3982  0622  00F5               	movwf	___awmod@dividend+1
  3983  0623  120A  158A  214D  120A  118A  	fcall	___awmod
  3984  0628  0872               	movf	?___awmod,w
  3985  0629  1283               	bcf	3,5	;RP0=0, select bank0
  3986  062A  1303               	bcf	3,6	;RP1=0, select bank0
  3987  062B  00AB               	movwf	??_display_Datum+2
  3988  062C  082B               	movf	??_display_Datum+2,w
  3989  062D  00AD               	movwf	display_Datum@dia_u
  3990                           
  3991                           ;main_Master.c: 436:     char dia_d = datum/10;
  3992  062E  300A               	movlw	10
  3993  062F  00A0               	movwf	___awdiv@divisor
  3994  0630  3000               	movlw	0
  3995  0631  00A1               	movwf	___awdiv@divisor+1
  3996  0632  085C               	movf	_datum,w
  3997  0633  00A9               	movwf	??_display_Datum
  3998  0634  01AA               	clrf	??_display_Datum+1
  3999  0635  0829               	movf	??_display_Datum,w
  4000  0636  00A2               	movwf	___awdiv@dividend
  4001  0637  082A               	movf	??_display_Datum+1,w
  4002  0638  00A3               	movwf	___awdiv@dividend+1
  4003  0639  120A  158A  2198  120A  118A  	fcall	___awdiv
  4004  063E  1283               	bcf	3,5	;RP0=0, select bank0
  4005  063F  1303               	bcf	3,6	;RP1=0, select bank0
  4006  0640  0820               	movf	?___awdiv,w
  4007  0641  00AB               	movwf	??_display_Datum+2
  4008  0642  082B               	movf	??_display_Datum+2,w
  4009  0643  00AE               	movwf	display_Datum@dia_d
  4010                           
  4011                           ;main_Master.c: 437:     char mes_u = mes%10;
  4012  0644  300A               	movlw	10
  4013  0645  00F2               	movwf	___awmod@divisor
  4014  0646  3000               	movlw	0
  4015  0647  00F3               	movwf	___awmod@divisor+1
  4016  0648  085B               	movf	_mes,w
  4017  0649  00A9               	movwf	??_display_Datum
  4018  064A  01AA               	clrf	??_display_Datum+1
  4019  064B  0829               	movf	??_display_Datum,w
  4020  064C  00F4               	movwf	___awmod@dividend
  4021  064D  082A               	movf	??_display_Datum+1,w
  4022  064E  00F5               	movwf	___awmod@dividend+1
  4023  064F  120A  158A  214D  120A  118A  	fcall	___awmod
  4024  0654  0872               	movf	?___awmod,w
  4025  0655  1283               	bcf	3,5	;RP0=0, select bank0
  4026  0656  1303               	bcf	3,6	;RP1=0, select bank0
  4027  0657  00AB               	movwf	??_display_Datum+2
  4028  0658  082B               	movf	??_display_Datum+2,w
  4029  0659  00AF               	movwf	display_Datum@mes_u
  4030                           
  4031                           ;main_Master.c: 438:     char mes_d = mes/10;
  4032  065A  300A               	movlw	10
  4033  065B  00A0               	movwf	___awdiv@divisor
  4034  065C  3000               	movlw	0
  4035  065D  00A1               	movwf	___awdiv@divisor+1
  4036  065E  085B               	movf	_mes,w
  4037  065F  00A9               	movwf	??_display_Datum
  4038  0660  01AA               	clrf	??_display_Datum+1
  4039  0661  0829               	movf	??_display_Datum,w
  4040  0662  00A2               	movwf	___awdiv@dividend
  4041  0663  082A               	movf	??_display_Datum+1,w
  4042  0664  00A3               	movwf	___awdiv@dividend+1
  4043  0665  120A  158A  2198  120A  118A  	fcall	___awdiv
  4044  066A  1283               	bcf	3,5	;RP0=0, select bank0
  4045  066B  1303               	bcf	3,6	;RP1=0, select bank0
  4046  066C  0820               	movf	?___awdiv,w
  4047  066D  00AB               	movwf	??_display_Datum+2
  4048  066E  082B               	movf	??_display_Datum+2,w
  4049  066F  00B0               	movwf	display_Datum@mes_d
  4050                           
  4051                           ;main_Master.c: 439:     char jahr_u = jahr%10;
  4052  0670  300A               	movlw	10
  4053  0671  00F2               	movwf	___awmod@divisor
  4054  0672  3000               	movlw	0
  4055  0673  00F3               	movwf	___awmod@divisor+1
  4056  0674  085A               	movf	_jahr,w
  4057  0675  00A9               	movwf	??_display_Datum
  4058  0676  01AA               	clrf	??_display_Datum+1
  4059  0677  0829               	movf	??_display_Datum,w
  4060  0678  00F4               	movwf	___awmod@dividend
  4061  0679  082A               	movf	??_display_Datum+1,w
  4062  067A  00F5               	movwf	___awmod@dividend+1
  4063  067B  120A  158A  214D  120A  118A  	fcall	___awmod
  4064  0680  0872               	movf	?___awmod,w
  4065  0681  1283               	bcf	3,5	;RP0=0, select bank0
  4066  0682  1303               	bcf	3,6	;RP1=0, select bank0
  4067  0683  00AB               	movwf	??_display_Datum+2
  4068  0684  082B               	movf	??_display_Datum+2,w
  4069  0685  00B1               	movwf	display_Datum@jahr_u
  4070                           
  4071                           ;main_Master.c: 440:     char jahr_d = jahr/10;
  4072  0686  300A               	movlw	10
  4073  0687  00A0               	movwf	___awdiv@divisor
  4074  0688  3000               	movlw	0
  4075  0689  00A1               	movwf	___awdiv@divisor+1
  4076  068A  085A               	movf	_jahr,w
  4077  068B  00A9               	movwf	??_display_Datum
  4078  068C  01AA               	clrf	??_display_Datum+1
  4079  068D  0829               	movf	??_display_Datum,w
  4080  068E  00A2               	movwf	___awdiv@dividend
  4081  068F  082A               	movf	??_display_Datum+1,w
  4082  0690  00A3               	movwf	___awdiv@dividend+1
  4083  0691  120A  158A  2198  120A  118A  	fcall	___awdiv
  4084  0696  1283               	bcf	3,5	;RP0=0, select bank0
  4085  0697  1303               	bcf	3,6	;RP1=0, select bank0
  4086  0698  0820               	movf	?___awdiv,w
  4087  0699  00AB               	movwf	??_display_Datum+2
  4088  069A  082B               	movf	??_display_Datum+2,w
  4089  069B  00B2               	movwf	display_Datum@jahr_d
  4090                           
  4091                           ;main_Master.c: 442:     LCD_Set_Cursor(fila, columna);
  4092  069C  0828               	movf	display_Datum@columna,w
  4093  069D  00A9               	movwf	??_display_Datum
  4094  069E  0829               	movf	??_display_Datum,w
  4095  069F  00F5               	movwf	LCD_Set_Cursor@columna
  4096  06A0  082C               	movf	display_Datum@fila,w
  4097  06A1  120A  158A  20C2  120A  118A  	fcall	_LCD_Set_Cursor
  4098                           
  4099                           ;main_Master.c: 443:     LCD_Write_Character(dia_d + '0');
  4100  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  4101  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  4102  06A8  082E               	movf	display_Datum@dia_d,w
  4103  06A9  3E30               	addlw	48
  4104  06AA  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  4105                           
  4106                           ;main_Master.c: 444:     LCD_Write_Character(dia_u + '0');
  4107  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  4108  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  4109  06B1  082D               	movf	display_Datum@dia_u,w
  4110  06B2  3E30               	addlw	48
  4111  06B3  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  4112                           
  4113                           ;main_Master.c: 445:     LCD_Write_Character('/');
  4114  06B8  302F               	movlw	47
  4115  06B9  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  4116                           
  4117                           ;main_Master.c: 446:     LCD_Write_Character(mes_d + '0');
  4118  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  4119  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  4120  06C0  0830               	movf	display_Datum@mes_d,w
  4121  06C1  3E30               	addlw	48
  4122  06C2  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  4123                           
  4124                           ;main_Master.c: 447:     LCD_Write_Character(mes_u + '0');
  4125  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  4126  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  4127  06C9  082F               	movf	display_Datum@mes_u,w
  4128  06CA  3E30               	addlw	48
  4129  06CB  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  4130                           
  4131                           ;main_Master.c: 448:     LCD_Write_Character('/');
  4132  06D0  302F               	movlw	47
  4133  06D1  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  4134                           
  4135                           ;main_Master.c: 449:     LCD_Write_String("20");
  4136  06D6  30AE               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4137  06D7  160A  118A  2786  120A  118A  	fcall	_LCD_Write_String
  4138                           
  4139                           ;main_Master.c: 450:     LCD_Write_Character(jahr_d + '0');
  4140  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  4141  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  4142  06DE  0832               	movf	display_Datum@jahr_d,w
  4143  06DF  3E30               	addlw	48
  4144  06E0  160A  118A  269D  120A  118A  	fcall	_LCD_Write_Character
  4145                           
  4146                           ;main_Master.c: 451:     LCD_Write_Character(jahr_u + '0');
  4147  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  4148  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  4149  06E7  0831               	movf	display_Datum@jahr_u,w
  4150  06E8  3E30               	addlw	48
  4151  06E9  160A  118A  269D   	fcall	_LCD_Write_Character
  4152  06EC  0008               	return
  4153  06ED                     __end_of_display_Datum:	
  4154                           
  4155                           	psect	text9
  4156  1786                     __ptext9:	
  4157 ;; *************** function _LCD_Write_String *****************
  4158 ;; Defined at:
  4159 ;;		line 73 in file "LCD_8bits.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  a               1    wreg     PTR unsigned char 
  4162 ;;		 -> STR_17(6), STR_16(13), STR_15(3), STR_14(13), 
  4163 ;;		 -> STR_13(5), STR_12(3), STR_11(5), STR_10(3), 
  4164 ;;		 -> STR_9(13), STR_8(4), STR_7(9), STR_6(14), 
  4165 ;;		 -> STR_5(12), STR_4(11), STR_3(13), STR_2(17), 
  4166 ;;		 -> STR_1(3), 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;  a               1    6[COMMON] PTR unsigned char 
  4169 ;;		 -> STR_17(6), STR_16(13), STR_15(3), STR_14(13), 
  4170 ;;		 -> STR_13(5), STR_12(3), STR_11(5), STR_10(3), 
  4171 ;;		 -> STR_9(13), STR_8(4), STR_7(9), STR_6(14), 
  4172 ;;		 -> STR_5(12), STR_4(11), STR_3(13), STR_2(17), 
  4173 ;;		 -> STR_1(3), 
  4174 ;;  n               2    4[COMMON] int 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      void 
  4177 ;; Registers used:
  4178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4184 ;;      Params:         0       0       0       0       0
  4185 ;;      Locals:         3       0       0       0       0
  4186 ;;      Temps:          0       0       0       0       0
  4187 ;;      Totals:         3       0       0       0       0
  4188 ;;Total ram usage:        3 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    2
  4191 ;; This function calls:
  4192 ;;		_LCD_Write_Character
  4193 ;; This function is called by:
  4194 ;;		_display_Datum
  4195 ;;		_mostrarLCD
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           
  4200                           ;psect for function _LCD_Write_String
  4201  1786                     _LCD_Write_String:	
  4202                           
  4203                           ;incstack = 0
  4204                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4205                           ;LCD_Write_String@a stored from wreg
  4206  1786  00F6               	movwf	LCD_Write_String@a
  4207                           
  4208                           ;LCD_8bits.c: 74:     int n;;LCD_8bits.c: 75:     for(n = 0; a[n] != '\0'; n++){
  4209  1787  01F4               	clrf	LCD_Write_String@n
  4210  1788  01F5               	clrf	LCD_Write_String@n+1
  4211  1789                     l2815:	
  4212  1789  0874               	movf	LCD_Write_String@n,w
  4213  178A  0776               	addwf	LCD_Write_String@a,w
  4214  178B  0084               	movwf	4
  4215  178C  120A  158A  2000  160A  118A  	fcall	stringdir
  4216  1791  3A00               	xorlw	0
  4217  1792  1903               	btfsc	3,2
  4218  1793  0008               	return
  4219                           
  4220                           ;LCD_8bits.c: 76:         LCD_Write_Character(a[n]);
  4221  1794  0874               	movf	LCD_Write_String@n,w
  4222  1795  0776               	addwf	LCD_Write_String@a,w
  4223  1796  0084               	movwf	4
  4224  1797  120A  158A  2000  160A  118A  	fcall	stringdir
  4225  179C  160A  118A  269D  160A  118A  	fcall	_LCD_Write_Character
  4226                           
  4227                           ;LCD_8bits.c: 77:     }
  4228  17A1  3001               	movlw	1
  4229  17A2  07F4               	addwf	LCD_Write_String@n,f
  4230  17A3  1803               	skipnc
  4231  17A4  0AF5               	incf	LCD_Write_String@n+1,f
  4232  17A5  3000               	movlw	0
  4233  17A6  07F5               	addwf	LCD_Write_String@n+1,f
  4234  17A7  2F89               	goto	l2815
  4235  17A8                     __end_of_LCD_Write_String:	
  4236                           
  4237                           	psect	text10
  4238  08C2                     __ptext10:	
  4239 ;; *************** function _LCD_Set_Cursor *****************
  4240 ;; Defined at:
  4241 ;;		line 80 in file "LCD_8bits.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;  linea           1    wreg     unsigned char 
  4244 ;;  columna         1    5[COMMON] unsigned char 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;  linea           1    8[COMMON] unsigned char 
  4247 ;;  corrimiento     1    9[COMMON] unsigned char 
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4257 ;;      Params:         1       0       0       0       0
  4258 ;;      Locals:         2       0       0       0       0
  4259 ;;      Temps:          2       0       0       0       0
  4260 ;;      Totals:         5       0       0       0       0
  4261 ;;Total ram usage:        5 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    2
  4264 ;; This function calls:
  4265 ;;		_LCD_Cmd
  4266 ;; This function is called by:
  4267 ;;		_display_Uhrzeit
  4268 ;;		_display_Datum
  4269 ;;		_mostrarLCD
  4270 ;;		_pressBoton2
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           
  4275                           ;psect for function _LCD_Set_Cursor
  4276  08C2                     _LCD_Set_Cursor:	
  4277                           
  4278                           ;incstack = 0
  4279                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4280                           ;LCD_Set_Cursor@linea stored from wreg
  4281  08C2  00F8               	movwf	LCD_Set_Cursor@linea
  4282                           
  4283                           ;LCD_8bits.c: 82:     switch (linea){
  4284  08C3  28DD               	goto	l2803
  4285  08C4                     l2793:	
  4286                           
  4287                           ;LCD_8bits.c: 84:             corrimiento = 0x80 + columna;
  4288  08C4  0875               	movf	LCD_Set_Cursor@columna,w
  4289  08C5  3E80               	addlw	128
  4290  08C6  00F6               	movwf	??_LCD_Set_Cursor
  4291  08C7  0876               	movf	??_LCD_Set_Cursor,w
  4292  08C8  00F9               	movwf	LCD_Set_Cursor@corrimiento
  4293                           
  4294                           ;LCD_8bits.c: 85:             LCD_Cmd(corrimiento);
  4295  08C9  0879               	movf	LCD_Set_Cursor@corrimiento,w
  4296  08CA  120A  158A  20EE   	fcall	_LCD_Cmd
  4297                           
  4298                           ;LCD_8bits.c: 86:             break;
  4299  08CD  0008               	return
  4300  08CE                     l2797:	
  4301                           
  4302                           ;LCD_8bits.c: 88:             corrimiento = 0x80 + 0x40 + columna;
  4303  08CE  0875               	movf	LCD_Set_Cursor@columna,w
  4304  08CF  3EC0               	addlw	192
  4305  08D0  00F6               	movwf	??_LCD_Set_Cursor
  4306  08D1  0876               	movf	??_LCD_Set_Cursor,w
  4307  08D2  00F9               	movwf	LCD_Set_Cursor@corrimiento
  4308                           
  4309                           ;LCD_8bits.c: 89:             LCD_Cmd(corrimiento);
  4310  08D3  0879               	movf	LCD_Set_Cursor@corrimiento,w
  4311  08D4  120A  158A  20EE   	fcall	_LCD_Cmd
  4312                           
  4313                           ;LCD_8bits.c: 90:             break;
  4314  08D7  0008               	return
  4315  08D8                     l2801:	
  4316                           
  4317                           ;LCD_8bits.c: 92:             LCD_Cmd(0x80);
  4318  08D8  3080               	movlw	128
  4319  08D9  120A  158A  20EE   	fcall	_LCD_Cmd
  4320                           
  4321                           ;LCD_8bits.c: 93:     }
  4322  08DC  0008               	return
  4323  08DD                     l2803:	
  4324  08DD  0878               	movf	LCD_Set_Cursor@linea,w
  4325  08DE  00F6               	movwf	??_LCD_Set_Cursor
  4326  08DF  01F7               	clrf	??_LCD_Set_Cursor+1
  4327                           
  4328                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4329                           ; Switch size 1, requested type "simple"
  4330                           ; Number of cases is 1, Range of values is 0 to 0
  4331                           ; switch strategies available:
  4332                           ; Name         Instructions Cycles
  4333                           ; simple_byte            4     3 (average)
  4334                           ; direct_byte           11     8 (fixed)
  4335                           ; jumptable            260     6 (fixed)
  4336                           ;	Chosen strategy is simple_byte
  4337  08E0  0877               	movf	??_LCD_Set_Cursor+1,w
  4338  08E1  3A00               	xorlw	0	; case 0
  4339  08E2  1903               	skipnz
  4340  08E3  28E5               	goto	l5141
  4341  08E4  28D8               	goto	l2801
  4342  08E5                     l5141:	
  4343                           
  4344                           ; Switch size 1, requested type "simple"
  4345                           ; Number of cases is 2, Range of values is 1 to 2
  4346                           ; switch strategies available:
  4347                           ; Name         Instructions Cycles
  4348                           ; simple_byte            7     4 (average)
  4349                           ; direct_byte           17    11 (fixed)
  4350                           ; jumptable            263     9 (fixed)
  4351                           ;	Chosen strategy is simple_byte
  4352  08E5  0876               	movf	??_LCD_Set_Cursor,w
  4353  08E6  3A01               	xorlw	1	; case 1
  4354  08E7  1903               	skipnz
  4355  08E8  28C4               	goto	l2793
  4356  08E9  3A03               	xorlw	3	; case 2
  4357  08EA  1903               	skipnz
  4358  08EB  28CE               	goto	l2797
  4359  08EC  28D8               	goto	l2801
  4360  08ED  0008               	return
  4361  08EE                     __end_of_LCD_Set_Cursor:	
  4362                           
  4363                           	psect	text11
  4364  174E                     __ptext11:	
  4365 ;; *************** function _inclinacion_ *****************
  4366 ;; Defined at:
  4367 ;;		line 252 in file "main_Master.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;		None
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;		None
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4381 ;;      Params:         0       0       0       0       0
  4382 ;;      Locals:         0       0       0       0       0
  4383 ;;      Temps:          2       0       0       0       0
  4384 ;;      Totals:         2       0       0       0       0
  4385 ;;Total ram usage:        2 bytes
  4386 ;; Hardware stack levels used:    1
  4387 ;; Hardware stack levels required when called:    2
  4388 ;; This function calls:
  4389 ;;		_init_ADC
  4390 ;; This function is called by:
  4391 ;;		_main
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           
  4396                           ;psect for function _inclinacion_
  4397  174E                     _inclinacion_:	
  4398                           
  4399                           ;main_Master.c: 253:     init_ADC(0x07);
  4400                           
  4401                           ;incstack = 0
  4402                           ; Regs used in _inclinacion_: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4403  174E  3007               	movlw	7
  4404  174F  120A  158A  2329  160A  118A  	fcall	_init_ADC
  4405                           
  4406                           ;main_Master.c: 254:     PIR1bits.ADIF = 0;
  4407  1754  1283               	bcf	3,5	;RP0=0, select bank0
  4408  1755  1303               	bcf	3,6	;RP1=0, select bank0
  4409  1756  130C               	bcf	12,6	;volatile
  4410                           
  4411                           ;main_Master.c: 255:     inclinacion = ADRESH;
  4412  1757  081E               	movf	30,w	;volatile
  4413  1758  00F5               	movwf	??_inclinacion_
  4414  1759  0875               	movf	??_inclinacion_,w
  4415  175A  00D8               	movwf	_inclinacion
  4416                           
  4417                           ;main_Master.c: 256:     _delay((unsigned long)((10)*(1000000/4000.0)));
  4418  175B  3004               	movlw	4
  4419  175C  00F6               	movwf	??_inclinacion_+1
  4420  175D  303D               	movlw	61
  4421  175E  00F5               	movwf	??_inclinacion_
  4422  175F                     u2157:	
  4423  175F  0BF5               	decfsz	??_inclinacion_,f
  4424  1760  2F5F               	goto	u2157
  4425  1761  0BF6               	decfsz	??_inclinacion_+1,f
  4426  1762  2F5F               	goto	u2157
  4427  1763  2F64               	nop2
  4428  1764  0008               	return
  4429  1765                     __end_of_inclinacion_:	
  4430                           
  4431                           	psect	text12
  4432  1737                     __ptext12:	
  4433 ;; *************** function _get_temperatura_obj *****************
  4434 ;; Defined at:
  4435 ;;		line 245 in file "main_Master.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;		None
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;		None
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  1    wreg      void 
  4442 ;; Registers used:
  4443 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4449 ;;      Params:         0       0       0       0       0
  4450 ;;      Locals:         0       0       0       0       0
  4451 ;;      Temps:          2       0       0       0       0
  4452 ;;      Totals:         2       0       0       0       0
  4453 ;;Total ram usage:        2 bytes
  4454 ;; Hardware stack levels used:    1
  4455 ;; Hardware stack levels required when called:    2
  4456 ;; This function calls:
  4457 ;;		_init_ADC
  4458 ;; This function is called by:
  4459 ;;		_main
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           
  4464                           ;psect for function _get_temperatura_obj
  4465  1737                     _get_temperatura_obj:	
  4466                           
  4467                           ;main_Master.c: 246:     init_ADC(0x06);
  4468                           
  4469                           ;incstack = 0
  4470                           ; Regs used in _get_temperatura_obj: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4471  1737  3006               	movlw	6
  4472  1738  120A  158A  2329  160A  118A  	fcall	_init_ADC
  4473                           
  4474                           ;main_Master.c: 247:     PIR1bits.ADIF = 0;
  4475  173D  1283               	bcf	3,5	;RP0=0, select bank0
  4476  173E  1303               	bcf	3,6	;RP1=0, select bank0
  4477  173F  130C               	bcf	12,6	;volatile
  4478                           
  4479                           ;main_Master.c: 248:     temperatura_obj = ADRESH;
  4480  1740  081E               	movf	30,w	;volatile
  4481  1741  00F5               	movwf	??_get_temperatura_obj
  4482  1742  0875               	movf	??_get_temperatura_obj,w
  4483  1743  00D1               	movwf	_temperatura_obj
  4484                           
  4485                           ;main_Master.c: 249:     _delay((unsigned long)((10)*(1000000/4000.0)));
  4486  1744  3004               	movlw	4
  4487  1745  00F6               	movwf	??_get_temperatura_obj+1
  4488  1746  303D               	movlw	61
  4489  1747  00F5               	movwf	??_get_temperatura_obj
  4490  1748                     u2167:	
  4491  1748  0BF5               	decfsz	??_get_temperatura_obj,f
  4492  1749  2F48               	goto	u2167
  4493  174A  0BF6               	decfsz	??_get_temperatura_obj+1,f
  4494  174B  2F48               	goto	u2167
  4495  174C  2F4D               	nop2
  4496  174D  0008               	return
  4497  174E                     __end_of_get_temperatura_obj:	
  4498                           
  4499                           	psect	text13
  4500  1720                     __ptext13:	
  4501 ;; *************** function _get_temperatura *****************
  4502 ;; Defined at:
  4503 ;;		line 238 in file "main_Master.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;		None
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;		None
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  1    wreg      void 
  4510 ;; Registers used:
  4511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4517 ;;      Params:         0       0       0       0       0
  4518 ;;      Locals:         0       0       0       0       0
  4519 ;;      Temps:          2       0       0       0       0
  4520 ;;      Totals:         2       0       0       0       0
  4521 ;;Total ram usage:        2 bytes
  4522 ;; Hardware stack levels used:    1
  4523 ;; Hardware stack levels required when called:    2
  4524 ;; This function calls:
  4525 ;;		_init_ADC
  4526 ;; This function is called by:
  4527 ;;		_main
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531                           
  4532                           ;psect for function _get_temperatura
  4533  1720                     _get_temperatura:	
  4534                           
  4535                           ;main_Master.c: 239:     init_ADC(0x05);
  4536                           
  4537                           ;incstack = 0
  4538                           ; Regs used in _get_temperatura: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4539  1720  3005               	movlw	5
  4540  1721  120A  158A  2329  160A  118A  	fcall	_init_ADC
  4541                           
  4542                           ;main_Master.c: 240:     PIR1bits.ADIF = 0;
  4543  1726  1283               	bcf	3,5	;RP0=0, select bank0
  4544  1727  1303               	bcf	3,6	;RP1=0, select bank0
  4545  1728  130C               	bcf	12,6	;volatile
  4546                           
  4547                           ;main_Master.c: 241:     temperatura = ADRESH;
  4548  1729  081E               	movf	30,w	;volatile
  4549  172A  00F5               	movwf	??_get_temperatura
  4550  172B  0875               	movf	??_get_temperatura,w
  4551  172C  00D2               	movwf	_temperatura
  4552                           
  4553                           ;main_Master.c: 242:     _delay((unsigned long)((10)*(1000000/4000.0)));
  4554  172D  3004               	movlw	4
  4555  172E  00F6               	movwf	??_get_temperatura+1
  4556  172F  303D               	movlw	61
  4557  1730  00F5               	movwf	??_get_temperatura
  4558  1731                     u2177:	
  4559  1731  0BF5               	decfsz	??_get_temperatura,f
  4560  1732  2F31               	goto	u2177
  4561  1733  0BF6               	decfsz	??_get_temperatura+1,f
  4562  1734  2F31               	goto	u2177
  4563  1735  2F36               	nop2
  4564  1736  0008               	return
  4565  1737                     __end_of_get_temperatura:	
  4566                           
  4567                           	psect	text14
  4568  0B29                     __ptext14:	
  4569 ;; *************** function _init_ADC *****************
  4570 ;; Defined at:
  4571 ;;		line 259 in file "main_Master.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  channel         1    wreg     unsigned char 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;  channel         1    4[COMMON] unsigned char 
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1    wreg      void 
  4578 ;; Registers used:
  4579 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4585 ;;      Params:         0       0       0       0       0
  4586 ;;      Locals:         1       0       0       0       0
  4587 ;;      Temps:          2       0       0       0       0
  4588 ;;      Totals:         3       0       0       0       0
  4589 ;;Total ram usage:        3 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; Hardware stack levels required when called:    1
  4592 ;; This function calls:
  4593 ;;		Nothing
  4594 ;; This function is called by:
  4595 ;;		_get_temperatura
  4596 ;;		_get_temperatura_obj
  4597 ;;		_inclinacion_
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           
  4602                           ;psect for function _init_ADC
  4603  0B29                     _init_ADC:	
  4604                           
  4605                           ;incstack = 0
  4606                           ; Regs used in _init_ADC: [wreg-fsr0h+status,2+status,0]
  4607                           ;init_ADC@channel stored from wreg
  4608  0B29  00F4               	movwf	init_ADC@channel
  4609                           
  4610                           ;main_Master.c: 260:     ADCON0bits.ADCS1 = 0;
  4611  0B2A  1283               	bcf	3,5	;RP0=0, select bank0
  4612  0B2B  1303               	bcf	3,6	;RP1=0, select bank0
  4613  0B2C  139F               	bcf	31,7	;volatile
  4614                           
  4615                           ;main_Master.c: 261:     ADCON0bits.ADCS0 = 1;
  4616  0B2D  171F               	bsf	31,6	;volatile
  4617                           
  4618                           ;main_Master.c: 264:     switch(channel){
  4619  0B2E  2B5E               	goto	l3055
  4620  0B2F                     l180:	
  4621                           ;main_Master.c: 265:         case 0:
  4622                           
  4623  0B2F  2B59               	goto	l197
  4624  0B30                     l182:	
  4625                           ;main_Master.c: 271:         case 1:
  4626                           
  4627                           ;main_Master.c: 270:             break;
  4628                           
  4629                           ;main_Master.c: 269:             ADCON0bits.CHS0 = 0;
  4630                           
  4631                           ;main_Master.c: 268:             ADCON0bits.CHS1 = 0;
  4632                           
  4633                           ;main_Master.c: 267:             ADCON0bits.CHS2 = 0;
  4634                           
  4635                           ;main_Master.c: 266:             ADCON0bits.CHS3 = 0;
  4636                           
  4637                           
  4638                           ;main_Master.c: 272:             ADCON0bits.CHS3 = 0;
  4639  0B30  129F               	bcf	31,5	;volatile
  4640  0B31  2B41               	goto	L42
  4641  0B32                     l183:	
  4642                           ;main_Master.c: 277:         case 2:
  4643                           
  4644                           ;main_Master.c: 276:             break;
  4645                           
  4646                           ;main_Master.c: 275:             ADCON0bits.CHS0 = 1;
  4647                           
  4648                           ;main_Master.c: 274:             ADCON0bits.CHS1 = 0;
  4649                           
  4650                           ;main_Master.c: 273:             ADCON0bits.CHS2 = 0;
  4651                           
  4652                           
  4653                           ;main_Master.c: 278:             ADCON0bits.CHS3 = 0;
  4654  0B32  129F               	bcf	31,5	;volatile
  4655  0B33  2B44               	goto	L43
  4656  0B34                     l184:	
  4657                           ;main_Master.c: 283:         case 3:
  4658                           
  4659                           ;main_Master.c: 282:             break;
  4660                           
  4661                           ;main_Master.c: 281:             ADCON0bits.CHS0 = 0;
  4662                           
  4663                           ;main_Master.c: 280:             ADCON0bits.CHS1 = 1;
  4664                           
  4665                           ;main_Master.c: 279:             ADCON0bits.CHS2 = 0;
  4666                           
  4667                           
  4668                           ;main_Master.c: 284:             ADCON0bits.CHS3 = 0;
  4669  0B34  129F               	bcf	31,5	;volatile
  4670  0B35  2B47               	goto	L38
  4671  0B36                     l185:	
  4672                           ;main_Master.c: 289:         case 4:
  4673                           
  4674                           ;main_Master.c: 288:             break;
  4675                           
  4676                           ;main_Master.c: 287:             ADCON0bits.CHS0 = 1;
  4677                           
  4678                           ;main_Master.c: 286:             ADCON0bits.CHS1 = 1;
  4679                           
  4680                           ;main_Master.c: 285:             ADCON0bits.CHS2 = 0;
  4681                           
  4682                           
  4683                           ;main_Master.c: 290:             ADCON0bits.CHS3 = 0;
  4684  0B36  129F               	bcf	31,5	;volatile
  4685  0B37  2B4A               	goto	L39
  4686  0B38                     l186:	
  4687                           ;main_Master.c: 295:         case 5:
  4688                           
  4689                           ;main_Master.c: 294:             break;
  4690                           
  4691                           ;main_Master.c: 293:             ADCON0bits.CHS0 = 0;
  4692                           
  4693                           ;main_Master.c: 292:             ADCON0bits.CHS1 = 0;
  4694                           
  4695                           ;main_Master.c: 291:             ADCON0bits.CHS2 = 1;
  4696                           
  4697                           
  4698                           ;main_Master.c: 296:             ADCON0bits.CHS3 = 0;
  4699  0B38  129F               	bcf	31,5	;volatile
  4700  0B39  2B4D               	goto	L40
  4701  0B3A                     l187:	
  4702                           ;main_Master.c: 301:         case 6:
  4703                           
  4704                           ;main_Master.c: 300:             break;
  4705                           
  4706                           ;main_Master.c: 299:             ADCON0bits.CHS0 = 1;
  4707                           
  4708                           ;main_Master.c: 298:             ADCON0bits.CHS1 = 0;
  4709                           
  4710                           ;main_Master.c: 297:             ADCON0bits.CHS2 = 1;
  4711                           
  4712                           
  4713                           ;main_Master.c: 302:             ADCON0bits.CHS3 = 0;
  4714  0B3A  129F               	bcf	31,5	;volatile
  4715  0B3B  2B51               	goto	L41
  4716  0B3C                     l188:	
  4717                           ;main_Master.c: 307:         case 7:
  4718                           
  4719                           ;main_Master.c: 306:             break;
  4720                           
  4721                           ;main_Master.c: 305:             ADCON0bits.CHS0 = 0;
  4722                           
  4723                           ;main_Master.c: 304:             ADCON0bits.CHS1 = 1;
  4724                           
  4725                           ;main_Master.c: 303:             ADCON0bits.CHS2 = 1;
  4726                           
  4727                           
  4728                           ;main_Master.c: 308:             ADCON0bits.CHS3 = 0;
  4729  0B3C  129F               	bcf	31,5	;volatile
  4730  0B3D  2B55               	goto	L28
  4731  0B3E                     l189:	
  4732                           ;main_Master.c: 313:         case 8:
  4733                           
  4734                           ;main_Master.c: 312:             break;
  4735                           
  4736                           ;main_Master.c: 311:             ADCON0bits.CHS0 = 1;
  4737                           
  4738                           ;main_Master.c: 310:             ADCON0bits.CHS1 = 1;
  4739                           
  4740                           ;main_Master.c: 309:             ADCON0bits.CHS2 = 1;
  4741                           
  4742                           
  4743                           ;main_Master.c: 314:             ADCON0bits.CHS3 = 1;
  4744  0B3E  169F               	bsf	31,5	;volatile
  4745  0B3F  2B5A               	goto	L29
  4746  0B40                     l190:	
  4747                           ;main_Master.c: 319:         case 9:
  4748                           
  4749                           ;main_Master.c: 318:             break;
  4750                           
  4751                           ;main_Master.c: 317:             ADCON0bits.CHS0 = 0;
  4752                           
  4753                           ;main_Master.c: 316:             ADCON0bits.CHS1 = 0;
  4754                           
  4755                           ;main_Master.c: 315:             ADCON0bits.CHS2 = 0;
  4756                           
  4757                           
  4758                           ;main_Master.c: 320:             ADCON0bits.CHS3 = 1;
  4759  0B40  169F               	bsf	31,5	;volatile
  4760  0B41                     L42:	
  4761                           
  4762                           ;main_Master.c: 321:             ADCON0bits.CHS2 = 0;
  4763  0B41  121F               	bcf	31,4	;volatile
  4764  0B42  2B4E               	goto	L36
  4765  0B43                     l191:	
  4766                           ;main_Master.c: 325:         case 10:
  4767                           
  4768                           ;main_Master.c: 324:             break;
  4769                           
  4770                           ;main_Master.c: 323:             ADCON0bits.CHS0 = 1;
  4771                           
  4772                           ;main_Master.c: 322:             ADCON0bits.CHS1 = 0;
  4773                           
  4774                           
  4775                           ;main_Master.c: 326:             ADCON0bits.CHS3 = 1;
  4776  0B43  169F               	bsf	31,5	;volatile
  4777  0B44                     L43:	
  4778                           
  4779                           ;main_Master.c: 327:             ADCON0bits.CHS2 = 0;
  4780  0B44  121F               	bcf	31,4	;volatile
  4781  0B45  2B52               	goto	L37
  4782  0B46                     l192:	
  4783                           ;main_Master.c: 331:         case 11:
  4784                           
  4785                           ;main_Master.c: 330:             break;
  4786                           
  4787                           ;main_Master.c: 329:             ADCON0bits.CHS0 = 0;
  4788                           
  4789                           ;main_Master.c: 328:             ADCON0bits.CHS1 = 1;
  4790                           
  4791                           
  4792                           ;main_Master.c: 332:             ADCON0bits.CHS3 = 1;
  4793  0B46  169F               	bsf	31,5	;volatile
  4794  0B47                     L38:	
  4795                           
  4796                           ;main_Master.c: 333:             ADCON0bits.CHS2 = 0;
  4797  0B47  121F               	bcf	31,4	;volatile
  4798  0B48  2B56               	goto	L30
  4799  0B49                     l193:	
  4800                           ;main_Master.c: 337:         case 12:
  4801                           
  4802                           ;main_Master.c: 336:             break;
  4803                           
  4804                           ;main_Master.c: 335:             ADCON0bits.CHS0 = 1;
  4805                           
  4806                           ;main_Master.c: 334:             ADCON0bits.CHS1 = 1;
  4807                           
  4808                           
  4809                           ;main_Master.c: 338:             ADCON0bits.CHS3 = 1;
  4810  0B49  169F               	bsf	31,5	;volatile
  4811  0B4A                     L39:	
  4812                           
  4813                           ;main_Master.c: 339:             ADCON0bits.CHS2 = 1;
  4814  0B4A  161F               	bsf	31,4	;volatile
  4815  0B4B  2B5B               	goto	L31
  4816  0B4C                     l194:	
  4817                           ;main_Master.c: 343:         case 13:
  4818                           
  4819                           ;main_Master.c: 342:             break;
  4820                           
  4821                           ;main_Master.c: 341:             ADCON0bits.CHS0 = 0;
  4822                           
  4823                           ;main_Master.c: 340:             ADCON0bits.CHS1 = 0;
  4824                           
  4825                           
  4826                           ;main_Master.c: 344:             ADCON0bits.CHS3 = 1;
  4827  0B4C  169F               	bsf	31,5	;volatile
  4828  0B4D                     L40:	
  4829                           
  4830                           ;main_Master.c: 345:             ADCON0bits.CHS2 = 1;
  4831  0B4D  161F               	bsf	31,4	;volatile
  4832  0B4E                     L36:	
  4833                           
  4834                           ;main_Master.c: 346:             ADCON0bits.CHS1 = 0;
  4835  0B4E  119F               	bcf	31,3	;volatile
  4836  0B4F  2B57               	goto	L26
  4837  0B50                     l195:	
  4838                           ;main_Master.c: 349:         case 14:
  4839                           
  4840                           ;main_Master.c: 348:             break;
  4841                           
  4842                           ;main_Master.c: 347:             ADCON0bits.CHS0 = 1;
  4843                           
  4844                           
  4845                           ;main_Master.c: 350:             ADCON0bits.CHS3 = 1;
  4846  0B50  169F               	bsf	31,5	;volatile
  4847  0B51                     L41:	
  4848                           
  4849                           ;main_Master.c: 351:             ADCON0bits.CHS2 = 1;
  4850  0B51  161F               	bsf	31,4	;volatile
  4851  0B52                     L37:	
  4852                           
  4853                           ;main_Master.c: 352:             ADCON0bits.CHS1 = 1;
  4854  0B52  159F               	bsf	31,3	;volatile
  4855  0B53  2B5C               	goto	L27
  4856  0B54                     l196:	
  4857                           ;main_Master.c: 355:         case 15:
  4858                           
  4859                           ;main_Master.c: 354:             break;
  4860                           
  4861                           ;main_Master.c: 353:             ADCON0bits.CHS0 = 0;
  4862                           
  4863                           
  4864                           ;main_Master.c: 356:             ADCON0bits.CHS3 = 1;
  4865  0B54  169F               	bsf	31,5	;volatile
  4866  0B55                     L28:	
  4867                           
  4868                           ;main_Master.c: 357:             ADCON0bits.CHS2 = 1;
  4869  0B55  161F               	bsf	31,4	;volatile
  4870  0B56                     L30:	
  4871                           
  4872                           ;main_Master.c: 358:             ADCON0bits.CHS1 = 1;
  4873  0B56  159F               	bsf	31,3	;volatile
  4874  0B57                     L26:	
  4875                           
  4876                           ;main_Master.c: 359:             ADCON0bits.CHS0 = 1;
  4877  0B57  151F               	bsf	31,2	;volatile
  4878                           
  4879                           ;main_Master.c: 360:             break;
  4880  0B58  2B98               	goto	l181
  4881  0B59                     l197:	
  4882                           ;main_Master.c: 361:         default:
  4883                           
  4884                           
  4885                           ;main_Master.c: 362:             ADCON0bits.CHS3 = 0;
  4886  0B59  129F               	bcf	31,5	;volatile
  4887  0B5A                     L29:	
  4888                           
  4889                           ;main_Master.c: 363:             ADCON0bits.CHS2 = 0;
  4890  0B5A  121F               	bcf	31,4	;volatile
  4891  0B5B                     L31:	
  4892                           
  4893                           ;main_Master.c: 364:             ADCON0bits.CHS1 = 0;
  4894  0B5B  119F               	bcf	31,3	;volatile
  4895  0B5C                     L27:	
  4896                           
  4897                           ;main_Master.c: 365:             ADCON0bits.CHS0 = 0;
  4898  0B5C  111F               	bcf	31,2	;volatile
  4899                           
  4900                           ;main_Master.c: 366:             break;
  4901  0B5D  2B98               	goto	l181
  4902  0B5E                     l3055:	
  4903  0B5E  0874               	movf	init_ADC@channel,w
  4904  0B5F  00F2               	movwf	??_init_ADC
  4905  0B60  01F3               	clrf	??_init_ADC+1
  4906                           
  4907                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4908                           ; Switch size 1, requested type "simple"
  4909                           ; Number of cases is 1, Range of values is 0 to 0
  4910                           ; switch strategies available:
  4911                           ; Name         Instructions Cycles
  4912                           ; simple_byte            4     3 (average)
  4913                           ; direct_byte           11     8 (fixed)
  4914                           ; jumptable            260     6 (fixed)
  4915                           ;	Chosen strategy is simple_byte
  4916  0B61  0873               	movf	??_init_ADC+1,w
  4917  0B62  3A00               	xorlw	0	; case 0
  4918  0B63  1903               	skipnz
  4919  0B64  2B66               	goto	l5143
  4920  0B65  2B59               	goto	l197
  4921  0B66                     l5143:	
  4922                           
  4923                           ; Switch size 1, requested type "simple"
  4924                           ; Number of cases is 16, Range of values is 0 to 15
  4925                           ; switch strategies available:
  4926                           ; Name         Instructions Cycles
  4927                           ; simple_byte           49    25 (average)
  4928                           ; direct_byte           56     8 (fixed)
  4929                           ; jumptable            260     6 (fixed)
  4930                           ;	Chosen strategy is simple_byte
  4931  0B66  0872               	movf	??_init_ADC,w
  4932  0B67  3A00               	xorlw	0	; case 0
  4933  0B68  1903               	skipnz
  4934  0B69  2B2F               	goto	l180
  4935  0B6A  3A01               	xorlw	1	; case 1
  4936  0B6B  1903               	skipnz
  4937  0B6C  2B30               	goto	l182
  4938  0B6D  3A03               	xorlw	3	; case 2
  4939  0B6E  1903               	skipnz
  4940  0B6F  2B32               	goto	l183
  4941  0B70  3A01               	xorlw	1	; case 3
  4942  0B71  1903               	skipnz
  4943  0B72  2B34               	goto	l184
  4944  0B73  3A07               	xorlw	7	; case 4
  4945  0B74  1903               	skipnz
  4946  0B75  2B36               	goto	l185
  4947  0B76  3A01               	xorlw	1	; case 5
  4948  0B77  1903               	skipnz
  4949  0B78  2B38               	goto	l186
  4950  0B79  3A03               	xorlw	3	; case 6
  4951  0B7A  1903               	skipnz
  4952  0B7B  2B3A               	goto	l187
  4953  0B7C  3A01               	xorlw	1	; case 7
  4954  0B7D  1903               	skipnz
  4955  0B7E  2B3C               	goto	l188
  4956  0B7F  3A0F               	xorlw	15	; case 8
  4957  0B80  1903               	skipnz
  4958  0B81  2B3E               	goto	l189
  4959  0B82  3A01               	xorlw	1	; case 9
  4960  0B83  1903               	skipnz
  4961  0B84  2B40               	goto	l190
  4962  0B85  3A03               	xorlw	3	; case 10
  4963  0B86  1903               	skipnz
  4964  0B87  2B43               	goto	l191
  4965  0B88  3A01               	xorlw	1	; case 11
  4966  0B89  1903               	skipnz
  4967  0B8A  2B46               	goto	l192
  4968  0B8B  3A07               	xorlw	7	; case 12
  4969  0B8C  1903               	skipnz
  4970  0B8D  2B49               	goto	l193
  4971  0B8E  3A01               	xorlw	1	; case 13
  4972  0B8F  1903               	skipnz
  4973  0B90  2B4C               	goto	l194
  4974  0B91  3A03               	xorlw	3	; case 14
  4975  0B92  1903               	skipnz
  4976  0B93  2B50               	goto	l195
  4977  0B94  3A01               	xorlw	1	; case 15
  4978  0B95  1903               	skipnz
  4979  0B96  2B54               	goto	l196
  4980  0B97  2B59               	goto	l197
  4981  0B98                     l181:	
  4982                           
  4983                           ;main_Master.c: 369:     ADCON1bits.ADFM = 0;
  4984  0B98  1683               	bsf	3,5	;RP0=1, select bank1
  4985  0B99  1303               	bcf	3,6	;RP1=0, select bank1
  4986  0B9A  139F               	bcf	31,7	;volatile
  4987                           
  4988                           ;main_Master.c: 370:     ADCON1bits.VCFG1 = 0;
  4989  0B9B  129F               	bcf	31,5	;volatile
  4990                           
  4991                           ;main_Master.c: 371:     ADCON1bits.VCFG0 = 0;
  4992  0B9C  121F               	bcf	31,4	;volatile
  4993                           
  4994                           ;main_Master.c: 372:     ADCON0bits.ADON = 1;
  4995  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  4996  0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  4997  0B9F  141F               	bsf	31,0	;volatile
  4998                           
  4999                           ;main_Master.c: 374:     PIR1bits.ADIF = 0;
  5000  0BA0  130C               	bcf	12,6	;volatile
  5001                           
  5002                           ;main_Master.c: 376:     ADCON0bits.GO = 1;
  5003  0BA1  149F               	bsf	31,1	;volatile
  5004  0BA2                     l198:	
  5005                           ;main_Master.c: 378:     }
  5006                           
  5007                           
  5008                           ;main_Master.c: 377:     while(ADCON0bits.GO == 1){
  5009  0BA2  1C9F               	btfss	31,1	;volatile
  5010  0BA3  0008               	return
  5011  0BA4  2BA2               	goto	l198
  5012  0BA5                     __end_of_init_ADC:	
  5013                           
  5014                           	psect	text15
  5015  0BA5                     __ptext15:	
  5016 ;; *************** function _get_dis *****************
  5017 ;; Defined at:
  5018 ;;		line 215 in file "main_Master.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;		None
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;		None
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  1    wreg      void 
  5025 ;; Registers used:
  5026 ;;		wreg, status,2, status,0, pclath, cstack
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5032 ;;      Params:         0       0       0       0       0
  5033 ;;      Locals:         0       0       0       0       0
  5034 ;;      Temps:          0       2       0       0       0
  5035 ;;      Totals:         0       2       0       0       0
  5036 ;;Total ram usage:        2 bytes
  5037 ;; Hardware stack levels used:    1
  5038 ;; Hardware stack levels required when called:    3
  5039 ;; This function calls:
  5040 ;;		_I2C_Master_Read
  5041 ;;		_I2C_Master_Start
  5042 ;;		_I2C_Master_Stop
  5043 ;;		_I2C_Master_Write
  5044 ;; This function is called by:
  5045 ;;		_main
  5046 ;; This function uses a non-reentrant model
  5047 ;;
  5048                           
  5049                           
  5050                           ;psect for function _get_dis
  5051  0BA5                     _get_dis:	
  5052                           
  5053                           ;main_Master.c: 216:     I2C_Master_Start();
  5054                           
  5055                           ;incstack = 0
  5056                           ; Regs used in _get_dis: [wreg+status,2+status,0+pclath+cstack]
  5057  0BA5  160A  118A  2677  120A  158A  	fcall	_I2C_Master_Start
  5058                           
  5059                           ;main_Master.c: 217:     I2C_Master_Write(0x31);
  5060  0BAA  3031               	movlw	49
  5061  0BAB  1283               	bcf	3,5	;RP0=0, select bank0
  5062  0BAC  1303               	bcf	3,6	;RP1=0, select bank0
  5063  0BAD  00AD               	movwf	I2C_Master_Write@d
  5064  0BAE  3000               	movlw	0
  5065  0BAF  00AE               	movwf	I2C_Master_Write@d+1
  5066  0BB0  160A  118A  2685  120A  158A  	fcall	_I2C_Master_Write
  5067                           
  5068                           ;main_Master.c: 218:     d_frente = I2C_Master_Read(0);
  5069  0BB5  3000               	movlw	0
  5070  0BB6  00F2               	movwf	I2C_Master_Read@a
  5071  0BB7  00F3               	movwf	I2C_Master_Read@a+1
  5072  0BB8  160A  118A  27D4  120A  158A  	fcall	_I2C_Master_Read
  5073  0BBD  0872               	movf	?_I2C_Master_Read,w
  5074  0BBE  1283               	bcf	3,5	;RP0=0, select bank0
  5075  0BBF  1303               	bcf	3,6	;RP1=0, select bank0
  5076  0BC0  00AF               	movwf	??_get_dis
  5077  0BC1  082F               	movf	??_get_dis,w
  5078  0BC2  00D7               	movwf	_d_frente
  5079                           
  5080                           ;main_Master.c: 219:     I2C_Master_Stop();
  5081  0BC3  160A  118A  267E  120A  158A  	fcall	_I2C_Master_Stop
  5082                           
  5083                           ;main_Master.c: 221:     _delay((unsigned long)((100)*(1000000/4000.0)));
  5084  0BC8  3021               	movlw	33
  5085  0BC9  1283               	bcf	3,5	;RP0=0, select bank0
  5086  0BCA  1303               	bcf	3,6	;RP1=0, select bank0
  5087  0BCB  00B0               	movwf	??_get_dis+1
  5088  0BCC  3075               	movlw	117
  5089  0BCD  00AF               	movwf	??_get_dis
  5090  0BCE                     u2187:	
  5091  0BCE  0BAF               	decfsz	??_get_dis,f
  5092  0BCF  2BCE               	goto	u2187
  5093  0BD0  0BB0               	decfsz	??_get_dis+1,f
  5094  0BD1  2BCE               	goto	u2187
  5095  0BD2  2BD3               	nop2
  5096                           
  5097                           ;main_Master.c: 223:     I2C_Master_Start();
  5098  0BD3  160A  118A  2677  120A  158A  	fcall	_I2C_Master_Start
  5099                           
  5100                           ;main_Master.c: 224:     I2C_Master_Write(0x31);
  5101  0BD8  3031               	movlw	49
  5102  0BD9  1283               	bcf	3,5	;RP0=0, select bank0
  5103  0BDA  1303               	bcf	3,6	;RP1=0, select bank0
  5104  0BDB  00AD               	movwf	I2C_Master_Write@d
  5105  0BDC  3000               	movlw	0
  5106  0BDD  00AE               	movwf	I2C_Master_Write@d+1
  5107  0BDE  160A  118A  2685  120A  158A  	fcall	_I2C_Master_Write
  5108                           
  5109                           ;main_Master.c: 225:     d_atras = I2C_Master_Read(0);
  5110  0BE3  3000               	movlw	0
  5111  0BE4  00F2               	movwf	I2C_Master_Read@a
  5112  0BE5  00F3               	movwf	I2C_Master_Read@a+1
  5113  0BE6  160A  118A  27D4  120A  158A  	fcall	_I2C_Master_Read
  5114  0BEB  0872               	movf	?_I2C_Master_Read,w
  5115  0BEC  1283               	bcf	3,5	;RP0=0, select bank0
  5116  0BED  1303               	bcf	3,6	;RP1=0, select bank0
  5117  0BEE  00AF               	movwf	??_get_dis
  5118  0BEF  082F               	movf	??_get_dis,w
  5119  0BF0  00D6               	movwf	_d_atras
  5120                           
  5121                           ;main_Master.c: 226:     I2C_Master_Stop();
  5122  0BF1  160A  118A  267E  120A  158A  	fcall	_I2C_Master_Stop
  5123                           
  5124                           ;main_Master.c: 228:     _delay((unsigned long)((100)*(1000000/4000.0)));
  5125  0BF6  3021               	movlw	33
  5126  0BF7  1283               	bcf	3,5	;RP0=0, select bank0
  5127  0BF8  1303               	bcf	3,6	;RP1=0, select bank0
  5128  0BF9  00B0               	movwf	??_get_dis+1
  5129  0BFA  3075               	movlw	117
  5130  0BFB  00AF               	movwf	??_get_dis
  5131  0BFC                     u2197:	
  5132  0BFC  0BAF               	decfsz	??_get_dis,f
  5133  0BFD  2BFC               	goto	u2197
  5134  0BFE  0BB0               	decfsz	??_get_dis+1,f
  5135  0BFF  2BFC               	goto	u2197
  5136  0C00  2C01               	nop2
  5137                           
  5138                           ;main_Master.c: 229:     I2C_Master_Start();
  5139  0C01  160A  118A  2677  120A  158A  	fcall	_I2C_Master_Start
  5140                           
  5141                           ;main_Master.c: 230:     I2C_Master_Write(0x31);
  5142  0C06  3031               	movlw	49
  5143  0C07  1283               	bcf	3,5	;RP0=0, select bank0
  5144  0C08  1303               	bcf	3,6	;RP1=0, select bank0
  5145  0C09  00AD               	movwf	I2C_Master_Write@d
  5146  0C0A  3000               	movlw	0
  5147  0C0B  00AE               	movwf	I2C_Master_Write@d+1
  5148  0C0C  160A  118A  2685  120A  158A  	fcall	_I2C_Master_Write
  5149                           
  5150                           ;main_Master.c: 231:     bajar = I2C_Master_Read(0);
  5151  0C11  3000               	movlw	0
  5152  0C12  00F2               	movwf	I2C_Master_Read@a
  5153  0C13  00F3               	movwf	I2C_Master_Read@a+1
  5154  0C14  160A  118A  27D4  120A  158A  	fcall	_I2C_Master_Read
  5155  0C19  0872               	movf	?_I2C_Master_Read,w
  5156  0C1A  1283               	bcf	3,5	;RP0=0, select bank0
  5157  0C1B  1303               	bcf	3,6	;RP1=0, select bank0
  5158  0C1C  00AF               	movwf	??_get_dis
  5159  0C1D  082F               	movf	??_get_dis,w
  5160  0C1E  00CE               	movwf	_bajar
  5161                           
  5162                           ;main_Master.c: 232:     I2C_Master_Stop();
  5163  0C1F  160A  118A  267E   	fcall	_I2C_Master_Stop
  5164  0C22  0008               	return
  5165  0C23                     __end_of_get_dis:	
  5166                           
  5167                           	psect	text16
  5168  041F                     __ptext16:	
  5169 ;; *************** function _get_Time *****************
  5170 ;; Defined at:
  5171 ;;		line 78 in file "RTC.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;		None
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;		None
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  1    wreg      void 
  5178 ;; Registers used:
  5179 ;;		wreg, status,2, status,0, pclath, cstack
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5185 ;;      Params:         0       0       0       0       0
  5186 ;;      Locals:         0       0       0       0       0
  5187 ;;      Temps:          0       1       0       0       0
  5188 ;;      Totals:         0       1       0       0       0
  5189 ;;Total ram usage:        1 bytes
  5190 ;; Hardware stack levels used:    1
  5191 ;; Hardware stack levels required when called:    3
  5192 ;; This function calls:
  5193 ;;		_BCD_a_DEC
  5194 ;;		_I2C_Master_Read
  5195 ;;		_I2C_Master_Start
  5196 ;;		_I2C_Master_Stop
  5197 ;;		_I2C_Master_Write
  5198 ;; This function is called by:
  5199 ;;		_main
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           
  5204                           ;psect for function _get_Time
  5205  041F                     _get_Time:	
  5206                           
  5207                           ;RTC.c: 79:     I2C_Master_Start();
  5208                           
  5209                           ;incstack = 0
  5210                           ; Regs used in _get_Time: [wreg+status,2+status,0+pclath+cstack]
  5211  041F  160A  118A  2677  120A  118A  	fcall	_I2C_Master_Start
  5212                           
  5213                           ;RTC.c: 80:     I2C_Master_Write(0xD0);
  5214  0424  30D0               	movlw	208
  5215  0425  1283               	bcf	3,5	;RP0=0, select bank0
  5216  0426  1303               	bcf	3,6	;RP1=0, select bank0
  5217  0427  00AD               	movwf	I2C_Master_Write@d
  5218  0428  3000               	movlw	0
  5219  0429  00AE               	movwf	I2C_Master_Write@d+1
  5220  042A  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  5221                           
  5222                           ;RTC.c: 81:     I2C_Master_Write(0);
  5223  042F  3000               	movlw	0
  5224  0430  1283               	bcf	3,5	;RP0=0, select bank0
  5225  0431  1303               	bcf	3,6	;RP1=0, select bank0
  5226  0432  00AD               	movwf	I2C_Master_Write@d
  5227  0433  00AE               	movwf	I2C_Master_Write@d+1
  5228  0434  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  5229                           
  5230                           ;RTC.c: 82:     I2C_Master_Stop();
  5231  0439  160A  118A  267E  120A  118A  	fcall	_I2C_Master_Stop
  5232                           
  5233                           ;RTC.c: 83:     I2C_Master_Start();
  5234  043E  160A  118A  2677  120A  118A  	fcall	_I2C_Master_Start
  5235                           
  5236                           ;RTC.c: 84:     I2C_Master_Write(0xD1);
  5237  0443  30D1               	movlw	209
  5238  0444  1283               	bcf	3,5	;RP0=0, select bank0
  5239  0445  1303               	bcf	3,6	;RP1=0, select bank0
  5240  0446  00AD               	movwf	I2C_Master_Write@d
  5241  0447  3000               	movlw	0
  5242  0448  00AE               	movwf	I2C_Master_Write@d+1
  5243  0449  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  5244                           
  5245                           ;RTC.c: 85:     seg = BCD_a_DEC(I2C_Master_Read(0));
  5246  044E  3000               	movlw	0
  5247  044F  00F2               	movwf	I2C_Master_Read@a
  5248  0450  00F3               	movwf	I2C_Master_Read@a+1
  5249  0451  160A  118A  27D4  120A  118A  	fcall	_I2C_Master_Read
  5250  0456  0872               	movf	?_I2C_Master_Read,w
  5251  0457  160A  118A  270A  120A  118A  	fcall	_BCD_a_DEC
  5252  045C  1283               	bcf	3,5	;RP0=0, select bank0
  5253  045D  1303               	bcf	3,6	;RP1=0, select bank0
  5254  045E  00AF               	movwf	??_get_Time
  5255  045F  082F               	movf	??_get_Time,w
  5256  0460  00D4               	movwf	_seg
  5257                           
  5258                           ;RTC.c: 86:     I2C_Master_Stop();
  5259  0461  160A  118A  267E  120A  118A  	fcall	_I2C_Master_Stop
  5260                           
  5261                           ;RTC.c: 88:     I2C_Master_Start();
  5262  0466  160A  118A  2677  120A  118A  	fcall	_I2C_Master_Start
  5263                           
  5264                           ;RTC.c: 89:     I2C_Master_Write(0xD0);
  5265  046B  30D0               	movlw	208
  5266  046C  1283               	bcf	3,5	;RP0=0, select bank0
  5267  046D  1303               	bcf	3,6	;RP1=0, select bank0
  5268  046E  00AD               	movwf	I2C_Master_Write@d
  5269  046F  3000               	movlw	0
  5270  0470  00AE               	movwf	I2C_Master_Write@d+1
  5271  0471  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  5272                           
  5273                           ;RTC.c: 90:     I2C_Master_Write(1);
  5274  0476  3001               	movlw	1
  5275  0477  1283               	bcf	3,5	;RP0=0, select bank0
  5276  0478  1303               	bcf	3,6	;RP1=0, select bank0
  5277  0479  00AD               	movwf	I2C_Master_Write@d
  5278  047A  3000               	movlw	0
  5279  047B  00AE               	movwf	I2C_Master_Write@d+1
  5280  047C  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  5281                           
  5282                           ;RTC.c: 91:     I2C_Master_Stop();
  5283  0481  160A  118A  267E  120A  118A  	fcall	_I2C_Master_Stop
  5284                           
  5285                           ;RTC.c: 92:     I2C_Master_Start();
  5286  0486  160A  118A  2677  120A  118A  	fcall	_I2C_Master_Start
  5287                           
  5288                           ;RTC.c: 93:     I2C_Master_Write(0xD1);
  5289  048B  30D1               	movlw	209
  5290  048C  1283               	bcf	3,5	;RP0=0, select bank0
  5291  048D  1303               	bcf	3,6	;RP1=0, select bank0
  5292  048E  00AD               	movwf	I2C_Master_Write@d
  5293  048F  3000               	movlw	0
  5294  0490  00AE               	movwf	I2C_Master_Write@d+1
  5295  0491  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  5296                           
  5297                           ;RTC.c: 94:     min = BCD_a_DEC(I2C_Master_Read(0));
  5298  0496  3000               	movlw	0
  5299  0497  00F2               	movwf	I2C_Master_Read@a
  5300  0498  00F3               	movwf	I2C_Master_Read@a+1
  5301  0499  160A  118A  27D4  120A  118A  	fcall	_I2C_Master_Read
  5302  049E  0872               	movf	?_I2C_Master_Read,w
  5303  049F  160A  118A  270A  120A  118A  	fcall	_BCD_a_DEC
  5304  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  5305  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  5306  04A6  00AF               	movwf	??_get_Time
  5307  04A7  082F               	movf	??_get_Time,w
  5308  04A8  00DF               	movwf	_min
  5309                           
  5310                           ;RTC.c: 95:     I2C_Master_Stop();
  5311  04A9  160A  118A  267E  120A  118A  	fcall	_I2C_Master_Stop
  5312                           
  5313                           ;RTC.c: 97:     I2C_Master_Start();
  5314  04AE  160A  118A  2677  120A  118A  	fcall	_I2C_Master_Start
  5315                           
  5316                           ;RTC.c: 98:     I2C_Master_Write(0xD0);
  5317  04B3  30D0               	movlw	208
  5318  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  5319  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  5320  04B6  00AD               	movwf	I2C_Master_Write@d
  5321  04B7  3000               	movlw	0
  5322  04B8  00AE               	movwf	I2C_Master_Write@d+1
  5323  04B9  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  5324                           
  5325                           ;RTC.c: 99:     I2C_Master_Write(2);
  5326  04BE  3002               	movlw	2
  5327  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  5328  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  5329  04C1  00AD               	movwf	I2C_Master_Write@d
  5330  04C2  3000               	movlw	0
  5331  04C3  00AE               	movwf	I2C_Master_Write@d+1
  5332  04C4  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  5333                           
  5334                           ;RTC.c: 100:     I2C_Master_Stop();
  5335  04C9  160A  118A  267E  120A  118A  	fcall	_I2C_Master_Stop
  5336                           
  5337                           ;RTC.c: 101:     I2C_Master_Start();
  5338  04CE  160A  118A  2677  120A  118A  	fcall	_I2C_Master_Start
  5339                           
  5340                           ;RTC.c: 102:     I2C_Master_Write(0xD1);
  5341  04D3  30D1               	movlw	209
  5342  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  5343  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  5344  04D6  00AD               	movwf	I2C_Master_Write@d
  5345  04D7  3000               	movlw	0
  5346  04D8  00AE               	movwf	I2C_Master_Write@d+1
  5347  04D9  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  5348                           
  5349                           ;RTC.c: 103:     hora = BCD_a_DEC(I2C_Master_Read(0));
  5350  04DE  3000               	movlw	0
  5351  04DF  00F2               	movwf	I2C_Master_Read@a
  5352  04E0  00F3               	movwf	I2C_Master_Read@a+1
  5353  04E1  160A  118A  27D4  120A  118A  	fcall	_I2C_Master_Read
  5354  04E6  0872               	movf	?_I2C_Master_Read,w
  5355  04E7  160A  118A  270A  120A  118A  	fcall	_BCD_a_DEC
  5356  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  5357  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  5358  04EE  00AF               	movwf	??_get_Time
  5359  04EF  082F               	movf	??_get_Time,w
  5360  04F0  00DE               	movwf	_hora
  5361                           
  5362                           ;RTC.c: 104:     I2C_Master_Stop();
  5363  04F1  160A  118A  267E  120A  118A  	fcall	_I2C_Master_Stop
  5364                           
  5365                           ;RTC.c: 107:     I2C_Master_Start();
  5366  04F6  160A  118A  2677  120A  118A  	fcall	_I2C_Master_Start
  5367                           
  5368                           ;RTC.c: 108:     I2C_Master_Write(0xD0);
  5369  04FB  30D0               	movlw	208
  5370  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  5371  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  5372  04FE  00AD               	movwf	I2C_Master_Write@d
  5373  04FF  3000               	movlw	0
  5374  0500  00AE               	movwf	I2C_Master_Write@d+1
  5375  0501  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  5376                           
  5377                           ;RTC.c: 109:     I2C_Master_Write(3);
  5378  0506  3003               	movlw	3
  5379  0507  1283               	bcf	3,5	;RP0=0, select bank0
  5380  0508  1303               	bcf	3,6	;RP1=0, select bank0
  5381  0509  00AD               	movwf	I2C_Master_Write@d
  5382  050A  3000               	movlw	0
  5383  050B  00AE               	movwf	I2C_Master_Write@d+1
  5384  050C  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  5385                           
  5386                           ;RTC.c: 110:     I2C_Master_Stop();
  5387  0511  160A  118A  267E  120A  118A  	fcall	_I2C_Master_Stop
  5388                           
  5389                           ;RTC.c: 111:     I2C_Master_Start();
  5390  0516  160A  118A  2677  120A  118A  	fcall	_I2C_Master_Start
  5391                           
  5392                           ;RTC.c: 112:     I2C_Master_Write(0xD1);
  5393  051B  30D1               	movlw	209
  5394  051C  1283               	bcf	3,5	;RP0=0, select bank0
  5395  051D  1303               	bcf	3,6	;RP1=0, select bank0
  5396  051E  00AD               	movwf	I2C_Master_Write@d
  5397  051F  3000               	movlw	0
  5398  0520  00AE               	movwf	I2C_Master_Write@d+1
  5399  0521  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  5400                           
  5401                           ;RTC.c: 113:     dia = BCD_a_DEC(I2C_Master_Read(0));
  5402  0526  3000               	movlw	0
  5403  0527  00F2               	movwf	I2C_Master_Read@a
  5404  0528  00F3               	movwf	I2C_Master_Read@a+1
  5405  0529  160A  118A  27D4  120A  118A  	fcall	_I2C_Master_Read
  5406  052E  0872               	movf	?_I2C_Master_Read,w
  5407  052F  160A  118A  270A  120A  118A  	fcall	_BCD_a_DEC
  5408  0534  1283               	bcf	3,5	;RP0=0, select bank0
  5409  0535  1303               	bcf	3,6	;RP1=0, select bank0
  5410  0536  00AF               	movwf	??_get_Time
  5411  0537  082F               	movf	??_get_Time,w
  5412  0538  00DD               	movwf	_dia
  5413                           
  5414                           ;RTC.c: 114:     I2C_Master_Stop();
  5415  0539  160A  118A  267E  120A  118A  	fcall	_I2C_Master_Stop
  5416                           
  5417                           ;RTC.c: 116:     I2C_Master_Start();
  5418  053E  160A  118A  2677  120A  118A  	fcall	_I2C_Master_Start
  5419                           
  5420                           ;RTC.c: 117:     I2C_Master_Write(0xD0);
  5421  0543  30D0               	movlw	208
  5422  0544  1283               	bcf	3,5	;RP0=0, select bank0
  5423  0545  1303               	bcf	3,6	;RP1=0, select bank0
  5424  0546  00AD               	movwf	I2C_Master_Write@d
  5425  0547  3000               	movlw	0
  5426  0548  00AE               	movwf	I2C_Master_Write@d+1
  5427  0549  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  5428                           
  5429                           ;RTC.c: 118:     I2C_Master_Write(4);
  5430  054E  3004               	movlw	4
  5431  054F  1283               	bcf	3,5	;RP0=0, select bank0
  5432  0550  1303               	bcf	3,6	;RP1=0, select bank0
  5433  0551  00AD               	movwf	I2C_Master_Write@d
  5434  0552  3000               	movlw	0
  5435  0553  00AE               	movwf	I2C_Master_Write@d+1
  5436  0554  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  5437                           
  5438                           ;RTC.c: 119:     I2C_Master_Stop();
  5439  0559  160A  118A  267E  120A  118A  	fcall	_I2C_Master_Stop
  5440                           
  5441                           ;RTC.c: 120:     I2C_Master_Start();
  5442  055E  160A  118A  2677  120A  118A  	fcall	_I2C_Master_Start
  5443                           
  5444                           ;RTC.c: 121:     I2C_Master_Write(0xD1);
  5445  0563  30D1               	movlw	209
  5446  0564  1283               	bcf	3,5	;RP0=0, select bank0
  5447  0565  1303               	bcf	3,6	;RP1=0, select bank0
  5448  0566  00AD               	movwf	I2C_Master_Write@d
  5449  0567  3000               	movlw	0
  5450  0568  00AE               	movwf	I2C_Master_Write@d+1
  5451  0569  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  5452                           
  5453                           ;RTC.c: 122:     datum = BCD_a_DEC(I2C_Master_Read(0));
  5454  056E  3000               	movlw	0
  5455  056F  00F2               	movwf	I2C_Master_Read@a
  5456  0570  00F3               	movwf	I2C_Master_Read@a+1
  5457  0571  160A  118A  27D4  120A  118A  	fcall	_I2C_Master_Read
  5458  0576  0872               	movf	?_I2C_Master_Read,w
  5459  0577  160A  118A  270A  120A  118A  	fcall	_BCD_a_DEC
  5460  057C  1283               	bcf	3,5	;RP0=0, select bank0
  5461  057D  1303               	bcf	3,6	;RP1=0, select bank0
  5462  057E  00AF               	movwf	??_get_Time
  5463  057F  082F               	movf	??_get_Time,w
  5464  0580  00DC               	movwf	_datum
  5465                           
  5466                           ;RTC.c: 123:     I2C_Master_Stop();
  5467  0581  160A  118A  267E  120A  118A  	fcall	_I2C_Master_Stop
  5468                           
  5469                           ;RTC.c: 125:     I2C_Master_Start();
  5470  0586  160A  118A  2677  120A  118A  	fcall	_I2C_Master_Start
  5471                           
  5472                           ;RTC.c: 126:     I2C_Master_Write(0xD0);
  5473  058B  30D0               	movlw	208
  5474  058C  1283               	bcf	3,5	;RP0=0, select bank0
  5475  058D  1303               	bcf	3,6	;RP1=0, select bank0
  5476  058E  00AD               	movwf	I2C_Master_Write@d
  5477  058F  3000               	movlw	0
  5478  0590  00AE               	movwf	I2C_Master_Write@d+1
  5479  0591  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  5480                           
  5481                           ;RTC.c: 127:     I2C_Master_Write(5);
  5482  0596  3005               	movlw	5
  5483  0597  1283               	bcf	3,5	;RP0=0, select bank0
  5484  0598  1303               	bcf	3,6	;RP1=0, select bank0
  5485  0599  00AD               	movwf	I2C_Master_Write@d
  5486  059A  3000               	movlw	0
  5487  059B  00AE               	movwf	I2C_Master_Write@d+1
  5488  059C  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  5489                           
  5490                           ;RTC.c: 128:     I2C_Master_Stop();
  5491  05A1  160A  118A  267E  120A  118A  	fcall	_I2C_Master_Stop
  5492                           
  5493                           ;RTC.c: 129:     I2C_Master_Start();
  5494  05A6  160A  118A  2677  120A  118A  	fcall	_I2C_Master_Start
  5495                           
  5496                           ;RTC.c: 130:     I2C_Master_Write(0xD1);
  5497  05AB  30D1               	movlw	209
  5498  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  5499  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  5500  05AE  00AD               	movwf	I2C_Master_Write@d
  5501  05AF  3000               	movlw	0
  5502  05B0  00AE               	movwf	I2C_Master_Write@d+1
  5503  05B1  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  5504                           
  5505                           ;RTC.c: 131:     mes = BCD_a_DEC(I2C_Master_Read(0));
  5506  05B6  3000               	movlw	0
  5507  05B7  00F2               	movwf	I2C_Master_Read@a
  5508  05B8  00F3               	movwf	I2C_Master_Read@a+1
  5509  05B9  160A  118A  27D4  120A  118A  	fcall	_I2C_Master_Read
  5510  05BE  0872               	movf	?_I2C_Master_Read,w
  5511  05BF  160A  118A  270A  120A  118A  	fcall	_BCD_a_DEC
  5512  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  5513  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  5514  05C6  00AF               	movwf	??_get_Time
  5515  05C7  082F               	movf	??_get_Time,w
  5516  05C8  00DB               	movwf	_mes
  5517                           
  5518                           ;RTC.c: 132:     I2C_Master_Stop();
  5519  05C9  160A  118A  267E  120A  118A  	fcall	_I2C_Master_Stop
  5520                           
  5521                           ;RTC.c: 134:     I2C_Master_Start();
  5522  05CE  160A  118A  2677  120A  118A  	fcall	_I2C_Master_Start
  5523                           
  5524                           ;RTC.c: 135:     I2C_Master_Write(0xD0);
  5525  05D3  30D0               	movlw	208
  5526  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  5527  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  5528  05D6  00AD               	movwf	I2C_Master_Write@d
  5529  05D7  3000               	movlw	0
  5530  05D8  00AE               	movwf	I2C_Master_Write@d+1
  5531  05D9  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  5532                           
  5533                           ;RTC.c: 136:     I2C_Master_Write(6);
  5534  05DE  3006               	movlw	6
  5535  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  5536  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  5537  05E1  00AD               	movwf	I2C_Master_Write@d
  5538  05E2  3000               	movlw	0
  5539  05E3  00AE               	movwf	I2C_Master_Write@d+1
  5540  05E4  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  5541                           
  5542                           ;RTC.c: 137:     I2C_Master_Stop();
  5543  05E9  160A  118A  267E  120A  118A  	fcall	_I2C_Master_Stop
  5544                           
  5545                           ;RTC.c: 138:     I2C_Master_Start();
  5546  05EE  160A  118A  2677  120A  118A  	fcall	_I2C_Master_Start
  5547                           
  5548                           ;RTC.c: 139:     I2C_Master_Write(0xD1);
  5549  05F3  30D1               	movlw	209
  5550  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  5551  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  5552  05F6  00AD               	movwf	I2C_Master_Write@d
  5553  05F7  3000               	movlw	0
  5554  05F8  00AE               	movwf	I2C_Master_Write@d+1
  5555  05F9  160A  118A  2685  120A  118A  	fcall	_I2C_Master_Write
  5556                           
  5557                           ;RTC.c: 140:     jahr = BCD_a_DEC(I2C_Master_Read(0));
  5558  05FE  3000               	movlw	0
  5559  05FF  00F2               	movwf	I2C_Master_Read@a
  5560  0600  00F3               	movwf	I2C_Master_Read@a+1
  5561  0601  160A  118A  27D4  120A  118A  	fcall	_I2C_Master_Read
  5562  0606  0872               	movf	?_I2C_Master_Read,w
  5563  0607  160A  118A  270A  120A  118A  	fcall	_BCD_a_DEC
  5564  060C  1283               	bcf	3,5	;RP0=0, select bank0
  5565  060D  1303               	bcf	3,6	;RP1=0, select bank0
  5566  060E  00AF               	movwf	??_get_Time
  5567  060F  082F               	movf	??_get_Time,w
  5568  0610  00DA               	movwf	_jahr
  5569                           
  5570                           ;RTC.c: 141:     I2C_Master_Stop();
  5571  0611  160A  118A  267E   	fcall	_I2C_Master_Stop
  5572  0614  0008               	return
  5573  0615                     __end_of_get_Time:	
  5574                           
  5575                           	psect	text17
  5576  17D4                     __ptext17:	
  5577 ;; *************** function _I2C_Master_Read *****************
  5578 ;; Defined at:
  5579 ;;		line 74 in file "I2C.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;  a               2    2[COMMON] unsigned short 
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;  temp            2    6[COMMON] unsigned short 
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  2    2[COMMON] unsigned short 
  5586 ;; Registers used:
  5587 ;;		wreg, status,2, status,0, pclath, cstack
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5593 ;;      Params:         2       0       0       0       0
  5594 ;;      Locals:         2       0       0       0       0
  5595 ;;      Temps:          2       0       0       0       0
  5596 ;;      Totals:         6       0       0       0       0
  5597 ;;Total ram usage:        6 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; Hardware stack levels required when called:    2
  5600 ;; This function calls:
  5601 ;;		_I2C_Master_Wait
  5602 ;; This function is called by:
  5603 ;;		_get_dis
  5604 ;;		_get_Time
  5605 ;;		_get_hora
  5606 ;;		_temp_objeto
  5607 ;;		_temp_ambiente
  5608 ;;		_Acc_X
  5609 ;;		_Acc_Y
  5610 ;;		_Acc_Z
  5611 ;;		_Gy_X
  5612 ;;		_Gy_Y
  5613 ;;		_Gy_Z
  5614 ;; This function uses a non-reentrant model
  5615 ;;
  5616                           
  5617                           
  5618                           ;psect for function _I2C_Master_Read
  5619  17D4                     _I2C_Master_Read:	
  5620                           
  5621                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  5622                           
  5623                           ;incstack = 0
  5624                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  5625  17D4  120A  158A  20B9  160A  118A  	fcall	_I2C_Master_Wait
  5626                           
  5627                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  5628  17D9  1683               	bsf	3,5	;RP0=1, select bank1
  5629  17DA  1303               	bcf	3,6	;RP1=0, select bank1
  5630  17DB  1591               	bsf	17,3	;volatile
  5631                           
  5632                           ;I2C.c: 79:     I2C_Master_Wait();
  5633  17DC  120A  158A  20B9  160A  118A  	fcall	_I2C_Master_Wait
  5634                           
  5635                           ;I2C.c: 80:     temp = SSPBUF;
  5636  17E1  1283               	bcf	3,5	;RP0=0, select bank0
  5637  17E2  1303               	bcf	3,6	;RP1=0, select bank0
  5638  17E3  0813               	movf	19,w	;volatile
  5639  17E4  00F4               	movwf	??_I2C_Master_Read
  5640  17E5  01F5               	clrf	??_I2C_Master_Read+1
  5641  17E6  0874               	movf	??_I2C_Master_Read,w
  5642  17E7  00F6               	movwf	I2C_Master_Read@temp
  5643  17E8  0875               	movf	??_I2C_Master_Read+1,w
  5644  17E9  00F7               	movwf	I2C_Master_Read@temp+1
  5645                           
  5646                           ;I2C.c: 81:     I2C_Master_Wait();
  5647  17EA  120A  158A  20B9  160A  118A  	fcall	_I2C_Master_Wait
  5648                           
  5649                           ;I2C.c: 82:     if(a == 1){
  5650  17EF  0372               	decf	I2C_Master_Read@a,w
  5651  17F0  0473               	iorwf	I2C_Master_Read@a+1,w
  5652  17F1  1D03               	btfss	3,2
  5653  17F2  2FF7               	goto	l388
  5654                           
  5655                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  5656  17F3  1683               	bsf	3,5	;RP0=1, select bank1
  5657  17F4  1303               	bcf	3,6	;RP1=0, select bank1
  5658  17F5  1291               	bcf	17,5	;volatile
  5659                           
  5660                           ;I2C.c: 84:     }else{
  5661  17F6  2FFA               	goto	l389
  5662  17F7                     l388:	
  5663                           
  5664                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  5665  17F7  1683               	bsf	3,5	;RP0=1, select bank1
  5666  17F8  1303               	bcf	3,6	;RP1=0, select bank1
  5667  17F9  1691               	bsf	17,5	;volatile
  5668  17FA                     l389:	
  5669                           ;I2C.c: 86:     }
  5670                           
  5671                           
  5672                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  5673  17FA  1611               	bsf	17,4	;volatile
  5674                           
  5675                           ;I2C.c: 88:     return temp;
  5676  17FB  0877               	movf	I2C_Master_Read@temp+1,w
  5677  17FC  00F3               	movwf	?_I2C_Master_Read+1
  5678  17FD  0876               	movf	I2C_Master_Read@temp,w
  5679  17FE  00F2               	movwf	?_I2C_Master_Read
  5680  17FF  0008               	return
  5681  1800                     __end_of_I2C_Master_Read:	
  5682                           
  5683                           	psect	text18
  5684  170A                     __ptext18:	
  5685 ;; *************** function _BCD_a_DEC *****************
  5686 ;; Defined at:
  5687 ;;		line 27 in file "RTC.c"
  5688 ;; Parameters:    Size  Location     Type
  5689 ;;  numBCD          1    wreg     unsigned char 
  5690 ;; Auto vars:     Size  Location     Type
  5691 ;;  numBCD          1    9[COMMON] unsigned char 
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  1    wreg      unsigned char 
  5694 ;; Registers used:
  5695 ;;		wreg, status,2, status,0, pclath, cstack
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5701 ;;      Params:         0       0       0       0       0
  5702 ;;      Locals:         1       0       0       0       0
  5703 ;;      Temps:          3       0       0       0       0
  5704 ;;      Totals:         4       0       0       0       0
  5705 ;;Total ram usage:        4 bytes
  5706 ;; Hardware stack levels used:    1
  5707 ;; Hardware stack levels required when called:    2
  5708 ;; This function calls:
  5709 ;;		___bmul
  5710 ;; This function is called by:
  5711 ;;		_get_Time
  5712 ;;		_get_hora
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716                           
  5717                           ;psect for function _BCD_a_DEC
  5718  170A                     _BCD_a_DEC:	
  5719                           
  5720                           ;incstack = 0
  5721                           ; Regs used in _BCD_a_DEC: [wreg+status,2+status,0+pclath+cstack]
  5722                           ;BCD_a_DEC@numBCD stored from wreg
  5723  170A  00F9               	movwf	BCD_a_DEC@numBCD
  5724                           
  5725                           ;RTC.c: 28:     return (numBCD >> 4) * 10 + (numBCD & 0x0F);
  5726  170B  300F               	movlw	15
  5727  170C  0579               	andwf	BCD_a_DEC@numBCD,w
  5728  170D  00F6               	movwf	??_BCD_a_DEC
  5729  170E  300A               	movlw	10
  5730  170F  00F7               	movwf	??_BCD_a_DEC+1
  5731  1710  0877               	movf	??_BCD_a_DEC+1,w
  5732  1711  00F2               	movwf	___bmul@multiplicand
  5733  1712  0879               	movf	BCD_a_DEC@numBCD,w
  5734  1713  00F8               	movwf	??_BCD_a_DEC+2
  5735  1714  3004               	movlw	4
  5736  1715                     u1235:	
  5737  1715  1003               	clrc
  5738  1716  0CF8               	rrf	??_BCD_a_DEC+2,f
  5739  1717  3EFF               	addlw	-1
  5740  1718  1D03               	skipz
  5741  1719  2F15               	goto	u1235
  5742  171A  0878               	movf	??_BCD_a_DEC+2,w
  5743  171B  160A  118A  26BD   	fcall	___bmul
  5744  171E  0776               	addwf	??_BCD_a_DEC,w
  5745  171F  0008               	return
  5746  1720                     __end_of_BCD_a_DEC:	
  5747                           
  5748                           	psect	text19
  5749  16BD                     __ptext19:	
  5750 ;; *************** function ___bmul *****************
  5751 ;; Defined at:
  5752 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  multiplier      1    wreg     unsigned char 
  5755 ;;  multiplicand    1    2[COMMON] unsigned char 
  5756 ;; Auto vars:     Size  Location     Type
  5757 ;;  multiplier      1    5[COMMON] unsigned char 
  5758 ;;  product         1    4[COMMON] unsigned char 
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  1    wreg      unsigned char 
  5761 ;; Registers used:
  5762 ;;		wreg, status,2, status,0
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5768 ;;      Params:         1       0       0       0       0
  5769 ;;      Locals:         2       0       0       0       0
  5770 ;;      Temps:          1       0       0       0       0
  5771 ;;      Totals:         4       0       0       0       0
  5772 ;;Total ram usage:        4 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; Hardware stack levels required when called:    1
  5775 ;; This function calls:
  5776 ;;		Nothing
  5777 ;; This function is called by:
  5778 ;;		_BCD_a_DEC
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           
  5783                           ;psect for function ___bmul
  5784  16BD                     ___bmul:	
  5785                           
  5786                           ;incstack = 0
  5787                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5788                           ;___bmul@multiplier stored from wreg
  5789  16BD  00F5               	movwf	___bmul@multiplier
  5790  16BE  01F4               	clrf	___bmul@product
  5791  16BF                     l2837:	
  5792  16BF  1C75               	btfss	___bmul@multiplier,0
  5793  16C0  2EC5               	goto	l2841
  5794  16C1  0872               	movf	___bmul@multiplicand,w
  5795  16C2  00F3               	movwf	??___bmul
  5796  16C3  0873               	movf	??___bmul,w
  5797  16C4  07F4               	addwf	___bmul@product,f
  5798  16C5                     l2841:	
  5799  16C5  1003               	clrc
  5800  16C6  0DF2               	rlf	___bmul@multiplicand,f
  5801  16C7  1003               	clrc
  5802  16C8  0CF5               	rrf	___bmul@multiplier,f
  5803  16C9  0875               	movf	___bmul@multiplier,w
  5804  16CA  1D03               	btfss	3,2
  5805  16CB  2EBF               	goto	l2837
  5806  16CC  0874               	movf	___bmul@product,w
  5807  16CD  0008               	return
  5808  16CE                     __end_of___bmul:	
  5809                           
  5810                           	psect	text20
  5811  0CA8                     __ptext20:	
  5812 ;; *************** function _SetUp *****************
  5813 ;; Defined at:
  5814 ;;		line 185 in file "main_Master.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;		None
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;		None
  5819 ;; Return value:  Size  Location     Type
  5820 ;;                  1    wreg      void 
  5821 ;; Registers used:
  5822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5828 ;;      Params:         0       0       0       0       0
  5829 ;;      Locals:         0       0       0       0       0
  5830 ;;      Temps:          0       2       0       0       0
  5831 ;;      Totals:         0       2       0       0       0
  5832 ;;Total ram usage:        2 bytes
  5833 ;; Hardware stack levels used:    1
  5834 ;; Hardware stack levels required when called:    4
  5835 ;; This function calls:
  5836 ;;		_I2C_Master_Init
  5837 ;;		_LCD_Create_Char
  5838 ;;		_LCD_clear
  5839 ;;		_LCD_init
  5840 ;;		_OSC_config
  5841 ;;		_Zeit_Datum_Set
  5842 ;;		_uart_init
  5843 ;; This function is called by:
  5844 ;;		_main
  5845 ;; This function uses a non-reentrant model
  5846 ;;
  5847                           
  5848                           
  5849                           ;psect for function _SetUp
  5850  0CA8                     _SetUp:	
  5851                           
  5852                           ;main_Master.c: 186:     TRISB = 0;
  5853                           
  5854                           ;incstack = 0
  5855                           ; Regs used in _SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5856  0CA8  1683               	bsf	3,5	;RP0=1, select bank1
  5857  0CA9  1303               	bcf	3,6	;RP1=0, select bank1
  5858  0CAA  0186               	clrf	6	;volatile
  5859                           
  5860                           ;main_Master.c: 187:     OSC_config(1000000);
  5861  0CAB  3000               	movlw	0
  5862  0CAC  00F5               	movwf	OSC_config@frecuencia+3
  5863  0CAD  300F               	movlw	15
  5864  0CAE  00F4               	movwf	OSC_config@frecuencia+2
  5865  0CAF  3042               	movlw	66
  5866  0CB0  00F3               	movwf	OSC_config@frecuencia+1
  5867  0CB1  3040               	movlw	64
  5868  0CB2  00F2               	movwf	OSC_config@frecuencia
  5869  0CB3  120A  158A  2544  120A  158A  	fcall	_OSC_config
  5870                           
  5871                           ;main_Master.c: 188:     TRISB = 0b00000110;
  5872  0CB8  3006               	movlw	6
  5873  0CB9  1683               	bsf	3,5	;RP0=1, select bank1
  5874  0CBA  1303               	bcf	3,6	;RP1=0, select bank1
  5875  0CBB  0086               	movwf	6	;volatile
  5876                           
  5877                           ;main_Master.c: 189:     ANSELH = 0;
  5878  0CBC  1683               	bsf	3,5	;RP0=1, select bank3
  5879  0CBD  1703               	bsf	3,6	;RP1=1, select bank3
  5880  0CBE  0189               	clrf	9	;volatile
  5881                           
  5882                           ;main_Master.c: 190:     WPUB = 0b00000110;
  5883  0CBF  3006               	movlw	6
  5884  0CC0  1683               	bsf	3,5	;RP0=1, select bank1
  5885  0CC1  1303               	bcf	3,6	;RP1=0, select bank1
  5886  0CC2  0095               	movwf	21	;volatile
  5887                           
  5888                           ;main_Master.c: 191:     OPTION_REGbits.nRBPU = 0;
  5889  0CC3  1381               	bcf	1,7	;volatile
  5890                           
  5891                           ;main_Master.c: 192:     IOCB = 0b00000110;
  5892  0CC4  3006               	movlw	6
  5893  0CC5  0096               	movwf	22	;volatile
  5894                           
  5895                           ;main_Master.c: 193:     INTCONbits.RBIE = 1;
  5896  0CC6  158B               	bsf	11,3	;volatile
  5897                           
  5898                           ;main_Master.c: 194:     INTCONbits.GIE = 1;
  5899  0CC7  178B               	bsf	11,7	;volatile
  5900                           
  5901                           ;main_Master.c: 195:     TRISD = 0;
  5902  0CC8  0188               	clrf	8	;volatile
  5903                           
  5904                           ;main_Master.c: 196:     PORTA = 0;
  5905  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  5906  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  5907  0CCB  0185               	clrf	5	;volatile
  5908                           
  5909                           ;main_Master.c: 197:     TRISA = 0;
  5910  0CCC  1683               	bsf	3,5	;RP0=1, select bank1
  5911  0CCD  1303               	bcf	3,6	;RP1=0, select bank1
  5912  0CCE  0185               	clrf	5	;volatile
  5913                           
  5914                           ;main_Master.c: 198:     TRISE = 0b0111;
  5915  0CCF  3007               	movlw	7
  5916  0CD0  0089               	movwf	9	;volatile
  5917                           
  5918                           ;main_Master.c: 199:     ANSEL = 0b01110000;
  5919  0CD1  3070               	movlw	112
  5920  0CD2  1683               	bsf	3,5	;RP0=1, select bank3
  5921  0CD3  1703               	bsf	3,6	;RP1=1, select bank3
  5922  0CD4  0088               	movwf	8	;volatile
  5923                           
  5924                           ;main_Master.c: 200:     LCD_init();
  5925  0CD5  120A  158A  2253  120A  158A  	fcall	_LCD_init
  5926                           
  5927                           ;main_Master.c: 201:     LCD_Create_Char(0, atilde);
  5928  0CDA  3011               	movlw	(low ((_atilde-__stringbase)| (0+32768)))& (0+255)
  5929  0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  5930  0CDC  1303               	bcf	3,6	;RP1=0, select bank0
  5931  0CDD  00B1               	movwf	??_SetUp
  5932  0CDE  0831               	movf	??_SetUp,w
  5933  0CDF  00F5               	movwf	LCD_Create_Char@chardata
  5934  0CE0  3000               	movlw	0
  5935  0CE1  160A  118A  27A8  120A  158A  	fcall	_LCD_Create_Char
  5936                           
  5937                           ;main_Master.c: 202:     LCD_Create_Char(1, arrowr);
  5938  0CE6  3021               	movlw	(low ((_arrowr-__stringbase)| (0+32768)))& (0+255)
  5939  0CE7  1283               	bcf	3,5	;RP0=0, select bank0
  5940  0CE8  1303               	bcf	3,6	;RP1=0, select bank0
  5941  0CE9  00B1               	movwf	??_SetUp
  5942  0CEA  0831               	movf	??_SetUp,w
  5943  0CEB  00F5               	movwf	LCD_Create_Char@chardata
  5944  0CEC  3001               	movlw	1
  5945  0CED  160A  118A  27A8  120A  158A  	fcall	_LCD_Create_Char
  5946                           
  5947                           ;main_Master.c: 203:     LCD_Create_Char(2, termometro);
  5948  0CF2  3009               	movlw	(low ((_termometro-__stringbase)| (0+32768)))& (0+255)
  5949  0CF3  1283               	bcf	3,5	;RP0=0, select bank0
  5950  0CF4  1303               	bcf	3,6	;RP1=0, select bank0
  5951  0CF5  00B1               	movwf	??_SetUp
  5952  0CF6  0831               	movf	??_SetUp,w
  5953  0CF7  00F5               	movwf	LCD_Create_Char@chardata
  5954  0CF8  3002               	movlw	2
  5955  0CF9  160A  118A  27A8  120A  158A  	fcall	_LCD_Create_Char
  5956                           
  5957                           ;main_Master.c: 204:     LCD_Create_Char(3, gota);
  5958  0CFE  3001               	movlw	(low ((_gota-__stringbase)| (0+32768)))& (0+255)
  5959  0CFF  1283               	bcf	3,5	;RP0=0, select bank0
  5960  0D00  1303               	bcf	3,6	;RP1=0, select bank0
  5961  0D01  00B1               	movwf	??_SetUp
  5962  0D02  0831               	movf	??_SetUp,w
  5963  0D03  00F5               	movwf	LCD_Create_Char@chardata
  5964  0D04  3003               	movlw	3
  5965  0D05  160A  118A  27A8  120A  158A  	fcall	_LCD_Create_Char
  5966                           
  5967                           ;main_Master.c: 205:     LCD_Create_Char(4, arrowr_vacio);
  5968  0D0A  3019               	movlw	(low ((_arrowr_vacio-__stringbase)| (0+32768)))& (0+255)
  5969  0D0B  1283               	bcf	3,5	;RP0=0, select bank0
  5970  0D0C  1303               	bcf	3,6	;RP1=0, select bank0
  5971  0D0D  00B1               	movwf	??_SetUp
  5972  0D0E  0831               	movf	??_SetUp,w
  5973  0D0F  00F5               	movwf	LCD_Create_Char@chardata
  5974  0D10  3004               	movlw	4
  5975  0D11  160A  118A  27A8  120A  158A  	fcall	_LCD_Create_Char
  5976                           
  5977                           ;main_Master.c: 206:     LCD_clear();
  5978  0D16  160A  118A  26F4  120A  158A  	fcall	_LCD_clear
  5979                           
  5980                           ;main_Master.c: 207:     uart_init(9600);
  5981  0D1B  3080               	movlw	128
  5982  0D1C  00F2               	movwf	?_uart_init
  5983  0D1D  3025               	movlw	37
  5984  0D1E  00F3               	movwf	?_uart_init+1
  5985  0D1F  160A  118A  26DF  120A  158A  	fcall	_uart_init
  5986                           
  5987                           ;main_Master.c: 208:     I2C_Master_Init(100000);
  5988  0D24  3000               	movlw	0
  5989  0D25  1283               	bcf	3,5	;RP0=0, select bank0
  5990  0D26  1303               	bcf	3,6	;RP1=0, select bank0
  5991  0D27  00A9               	movwf	I2C_Master_Init@c+3
  5992  0D28  3001               	movlw	1
  5993  0D29  00A8               	movwf	I2C_Master_Init@c+2
  5994  0D2A  3086               	movlw	134
  5995  0D2B  00A7               	movwf	I2C_Master_Init@c+1
  5996  0D2C  30A0               	movlw	160
  5997  0D2D  00A6               	movwf	I2C_Master_Init@c
  5998  0D2E  120A  118A  27BF  120A  158A  	fcall	_I2C_Master_Init
  5999                           
  6000                           ;main_Master.c: 211:     Zeit_Datum_Set();
  6001  0D33  120A  158A  269C  120A  158A  	fcall	_Zeit_Datum_Set
  6002                           
  6003                           ;main_Master.c: 212:     _delay((unsigned long)((100)*(1000000/4000.0)));
  6004  0D38  3021               	movlw	33
  6005  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  6006  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  6007  0D3B  00B2               	movwf	??_SetUp+1
  6008  0D3C  3075               	movlw	117
  6009  0D3D  00B1               	movwf	??_SetUp
  6010  0D3E                     u2207:	
  6011  0D3E  0BB1               	decfsz	??_SetUp,f
  6012  0D3F  2D3E               	goto	u2207
  6013  0D40  0BB2               	decfsz	??_SetUp+1,f
  6014  0D41  2D3E               	goto	u2207
  6015  0D42  2D43               	nop2
  6016  0D43  0008               	return
  6017  0D44                     __end_of_SetUp:	
  6018                           
  6019                           	psect	text21
  6020  16DF                     __ptext21:	
  6021 ;; *************** function _uart_init *****************
  6022 ;; Defined at:
  6023 ;;		line 14 in file "UART.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;		None
  6026 ;; Auto vars:     Size  Location     Type
  6027 ;;		None
  6028 ;; Return value:  Size  Location     Type
  6029 ;;                  1    wreg      void 
  6030 ;; Registers used:
  6031 ;;		wreg, status,2
  6032 ;; Tracked objects:
  6033 ;;		On entry : 0/0
  6034 ;;		On exit  : 0/0
  6035 ;;		Unchanged: 0/0
  6036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6037 ;;      Params:         2       0       0       0       0
  6038 ;;      Locals:         0       0       0       0       0
  6039 ;;      Temps:          0       0       0       0       0
  6040 ;;      Totals:         2       0       0       0       0
  6041 ;;Total ram usage:        2 bytes
  6042 ;; Hardware stack levels used:    1
  6043 ;; Hardware stack levels required when called:    1
  6044 ;; This function calls:
  6045 ;;		Nothing
  6046 ;; This function is called by:
  6047 ;;		_SetUp
  6048 ;; This function uses a non-reentrant model
  6049 ;;
  6050                           
  6051                           
  6052                           ;psect for function _uart_init
  6053  16DF                     _uart_init:	
  6054                           
  6055                           ;UART.c: 15:     TXSTAbits.SYNC = 0;
  6056                           
  6057                           ;incstack = 0
  6058                           ; Regs used in _uart_init: [wreg+status,2]
  6059  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  6060  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  6061  16E1  1218               	bcf	24,4	;volatile
  6062                           
  6063                           ;UART.c: 16:     TXSTAbits.BRGH = 1;
  6064  16E2  1518               	bsf	24,2	;volatile
  6065                           
  6066                           ;UART.c: 17:     BAUDCTLbits.BRG16 = 1;
  6067  16E3  1683               	bsf	3,5	;RP0=1, select bank3
  6068  16E4  1703               	bsf	3,6	;RP1=1, select bank3
  6069  16E5  1587               	bsf	7,3	;volatile
  6070                           
  6071                           ;UART.c: 18:     SPBRG = 103;
  6072  16E6  3067               	movlw	103
  6073  16E7  1683               	bsf	3,5	;RP0=1, select bank1
  6074  16E8  1303               	bcf	3,6	;RP1=0, select bank1
  6075  16E9  0099               	movwf	25	;volatile
  6076                           
  6077                           ;UART.c: 19:     SPBRGH = 0;
  6078  16EA  019A               	clrf	26	;volatile
  6079                           
  6080                           ;UART.c: 21:     RCSTAbits.SPEN = 1;
  6081  16EB  1283               	bcf	3,5	;RP0=0, select bank0
  6082  16EC  1303               	bcf	3,6	;RP1=0, select bank0
  6083  16ED  1798               	bsf	24,7	;volatile
  6084                           
  6085                           ;UART.c: 22:     RCSTAbits.RX9 = 0;
  6086  16EE  1318               	bcf	24,6	;volatile
  6087                           
  6088                           ;UART.c: 23:     RCSTAbits.CREN = 1;
  6089  16EF  1618               	bsf	24,4	;volatile
  6090                           
  6091                           ;UART.c: 25:     TXSTAbits.TXEN = 1;
  6092  16F0  1683               	bsf	3,5	;RP0=1, select bank1
  6093  16F1  1303               	bcf	3,6	;RP1=0, select bank1
  6094  16F2  1698               	bsf	24,5	;volatile
  6095  16F3  0008               	return
  6096  16F4                     __end_of_uart_init:	
  6097                           
  6098                           	psect	text22
  6099  0E9C                     __ptext22:	
  6100 ;; *************** function _Zeit_Datum_Set *****************
  6101 ;; Defined at:
  6102 ;;		line 64 in file "RTC.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;		None
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;		None
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  1    wreg      void 
  6109 ;; Registers used:
  6110 ;;		wreg, status,2, status,0, pclath, cstack
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6116 ;;      Params:         0       0       0       0       0
  6117 ;;      Locals:         0       0       0       0       0
  6118 ;;      Temps:          0       2       0       0       0
  6119 ;;      Totals:         0       2       0       0       0
  6120 ;;Total ram usage:        2 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; Hardware stack levels required when called:    3
  6123 ;; This function calls:
  6124 ;;		_DEC_a_BCD
  6125 ;;		_I2C_Master_Start
  6126 ;;		_I2C_Master_Stop
  6127 ;;		_I2C_Master_Write
  6128 ;; This function is called by:
  6129 ;;		_SetUp
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           
  6134                           ;psect for function _Zeit_Datum_Set
  6135  0E9C                     _Zeit_Datum_Set:	
  6136                           
  6137                           ;RTC.c: 65:     I2C_Master_Start();
  6138                           
  6139                           ;incstack = 0
  6140                           ; Regs used in _Zeit_Datum_Set: [wreg+status,2+status,0+pclath+cstack]
  6141  0E9C  160A  118A  2677  120A  158A  	fcall	_I2C_Master_Start
  6142                           
  6143                           ;RTC.c: 66:     I2C_Master_Write(0xD0);
  6144  0EA1  30D0               	movlw	208
  6145  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  6146  0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  6147  0EA4  00AD               	movwf	I2C_Master_Write@d
  6148  0EA5  3000               	movlw	0
  6149  0EA6  00AE               	movwf	I2C_Master_Write@d+1
  6150  0EA7  160A  118A  2685  120A  158A  	fcall	_I2C_Master_Write
  6151                           
  6152                           ;RTC.c: 67:     I2C_Master_Write(0);
  6153  0EAC  3000               	movlw	0
  6154  0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  6155  0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  6156  0EAF  00AD               	movwf	I2C_Master_Write@d
  6157  0EB0  00AE               	movwf	I2C_Master_Write@d+1
  6158  0EB1  160A  118A  2685  120A  158A  	fcall	_I2C_Master_Write
  6159                           
  6160                           ;RTC.c: 68:     I2C_Master_Write(DEC_a_BCD(seg));
  6161  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  6162  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  6163  0EB8  0854               	movf	_seg,w
  6164  0EB9  120A  158A  211D  120A  158A  	fcall	_DEC_a_BCD
  6165  0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  6166  0EBF  1303               	bcf	3,6	;RP1=0, select bank0
  6167  0EC0  00AF               	movwf	??_Zeit_Datum_Set
  6168  0EC1  01B0               	clrf	??_Zeit_Datum_Set+1
  6169  0EC2  082F               	movf	??_Zeit_Datum_Set,w
  6170  0EC3  00AD               	movwf	I2C_Master_Write@d
  6171  0EC4  0830               	movf	??_Zeit_Datum_Set+1,w
  6172  0EC5  00AE               	movwf	I2C_Master_Write@d+1
  6173  0EC6  160A  118A  2685  120A  158A  	fcall	_I2C_Master_Write
  6174                           
  6175                           ;RTC.c: 69:     I2C_Master_Write(DEC_a_BCD(min));
  6176  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  6177  0ECC  1303               	bcf	3,6	;RP1=0, select bank0
  6178  0ECD  085F               	movf	_min,w
  6179  0ECE  120A  158A  211D  120A  158A  	fcall	_DEC_a_BCD
  6180  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  6181  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  6182  0ED5  00AF               	movwf	??_Zeit_Datum_Set
  6183  0ED6  01B0               	clrf	??_Zeit_Datum_Set+1
  6184  0ED7  082F               	movf	??_Zeit_Datum_Set,w
  6185  0ED8  00AD               	movwf	I2C_Master_Write@d
  6186  0ED9  0830               	movf	??_Zeit_Datum_Set+1,w
  6187  0EDA  00AE               	movwf	I2C_Master_Write@d+1
  6188  0EDB  160A  118A  2685  120A  158A  	fcall	_I2C_Master_Write
  6189                           
  6190                           ;RTC.c: 70:     I2C_Master_Write(DEC_a_BCD(hora));
  6191  0EE0  1283               	bcf	3,5	;RP0=0, select bank0
  6192  0EE1  1303               	bcf	3,6	;RP1=0, select bank0
  6193  0EE2  085E               	movf	_hora,w
  6194  0EE3  120A  158A  211D  120A  158A  	fcall	_DEC_a_BCD
  6195  0EE8  1283               	bcf	3,5	;RP0=0, select bank0
  6196  0EE9  1303               	bcf	3,6	;RP1=0, select bank0
  6197  0EEA  00AF               	movwf	??_Zeit_Datum_Set
  6198  0EEB  01B0               	clrf	??_Zeit_Datum_Set+1
  6199  0EEC  082F               	movf	??_Zeit_Datum_Set,w
  6200  0EED  00AD               	movwf	I2C_Master_Write@d
  6201  0EEE  0830               	movf	??_Zeit_Datum_Set+1,w
  6202  0EEF  00AE               	movwf	I2C_Master_Write@d+1
  6203  0EF0  160A  118A  2685  120A  158A  	fcall	_I2C_Master_Write
  6204                           
  6205                           ;RTC.c: 71:     I2C_Master_Write(DEC_a_BCD(dia));
  6206  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  6207  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  6208  0EF7  085D               	movf	_dia,w
  6209  0EF8  120A  158A  211D  120A  158A  	fcall	_DEC_a_BCD
  6210  0EFD  1283               	bcf	3,5	;RP0=0, select bank0
  6211  0EFE  1303               	bcf	3,6	;RP1=0, select bank0
  6212  0EFF  00AF               	movwf	??_Zeit_Datum_Set
  6213  0F00  01B0               	clrf	??_Zeit_Datum_Set+1
  6214  0F01  082F               	movf	??_Zeit_Datum_Set,w
  6215  0F02  00AD               	movwf	I2C_Master_Write@d
  6216  0F03  0830               	movf	??_Zeit_Datum_Set+1,w
  6217  0F04  00AE               	movwf	I2C_Master_Write@d+1
  6218  0F05  160A  118A  2685  120A  158A  	fcall	_I2C_Master_Write
  6219                           
  6220                           ;RTC.c: 72:     I2C_Master_Write(DEC_a_BCD(datum));
  6221  0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  6222  0F0B  1303               	bcf	3,6	;RP1=0, select bank0
  6223  0F0C  085C               	movf	_datum,w
  6224  0F0D  120A  158A  211D  120A  158A  	fcall	_DEC_a_BCD
  6225  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  6226  0F13  1303               	bcf	3,6	;RP1=0, select bank0
  6227  0F14  00AF               	movwf	??_Zeit_Datum_Set
  6228  0F15  01B0               	clrf	??_Zeit_Datum_Set+1
  6229  0F16  082F               	movf	??_Zeit_Datum_Set,w
  6230  0F17  00AD               	movwf	I2C_Master_Write@d
  6231  0F18  0830               	movf	??_Zeit_Datum_Set+1,w
  6232  0F19  00AE               	movwf	I2C_Master_Write@d+1
  6233  0F1A  160A  118A  2685  120A  158A  	fcall	_I2C_Master_Write
  6234                           
  6235                           ;RTC.c: 73:     I2C_Master_Write(DEC_a_BCD(mes));
  6236  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  6237  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  6238  0F21  085B               	movf	_mes,w
  6239  0F22  120A  158A  211D  120A  158A  	fcall	_DEC_a_BCD
  6240  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  6241  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  6242  0F29  00AF               	movwf	??_Zeit_Datum_Set
  6243  0F2A  01B0               	clrf	??_Zeit_Datum_Set+1
  6244  0F2B  082F               	movf	??_Zeit_Datum_Set,w
  6245  0F2C  00AD               	movwf	I2C_Master_Write@d
  6246  0F2D  0830               	movf	??_Zeit_Datum_Set+1,w
  6247  0F2E  00AE               	movwf	I2C_Master_Write@d+1
  6248  0F2F  160A  118A  2685  120A  158A  	fcall	_I2C_Master_Write
  6249                           
  6250                           ;RTC.c: 74:     I2C_Master_Write(DEC_a_BCD(jahr));
  6251  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  6252  0F35  1303               	bcf	3,6	;RP1=0, select bank0
  6253  0F36  085A               	movf	_jahr,w
  6254  0F37  120A  158A  211D  120A  158A  	fcall	_DEC_a_BCD
  6255  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  6256  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  6257  0F3E  00AF               	movwf	??_Zeit_Datum_Set
  6258  0F3F  01B0               	clrf	??_Zeit_Datum_Set+1
  6259  0F40  082F               	movf	??_Zeit_Datum_Set,w
  6260  0F41  00AD               	movwf	I2C_Master_Write@d
  6261  0F42  0830               	movf	??_Zeit_Datum_Set+1,w
  6262  0F43  00AE               	movwf	I2C_Master_Write@d+1
  6263  0F44  160A  118A  2685  120A  158A  	fcall	_I2C_Master_Write
  6264                           
  6265                           ;RTC.c: 75:     I2C_Master_Stop();
  6266  0F49  160A  118A  267E   	fcall	_I2C_Master_Stop
  6267  0F4C  0008               	return
  6268  0F4D                     __end_of_Zeit_Datum_Set:	
  6269                           
  6270                           	psect	text23
  6271  1685                     __ptext23:	
  6272 ;; *************** function _I2C_Master_Write *****************
  6273 ;; Defined at:
  6274 ;;		line 65 in file "I2C.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;  d               2   13[BANK0 ] unsigned int 
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;		None
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  1    wreg      void 
  6281 ;; Registers used:
  6282 ;;		wreg, status,2, status,0, pclath, cstack
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6288 ;;      Params:         0       2       0       0       0
  6289 ;;      Locals:         0       0       0       0       0
  6290 ;;      Temps:          0       0       0       0       0
  6291 ;;      Totals:         0       2       0       0       0
  6292 ;;Total ram usage:        2 bytes
  6293 ;; Hardware stack levels used:    1
  6294 ;; Hardware stack levels required when called:    2
  6295 ;; This function calls:
  6296 ;;		_I2C_Master_Wait
  6297 ;; This function is called by:
  6298 ;;		_get_dis
  6299 ;;		_mostrarLCD
  6300 ;;		_Zeit_Datum_Set
  6301 ;;		_get_Time
  6302 ;;		_get_hora
  6303 ;;		_temp_objeto
  6304 ;;		_temp_ambiente
  6305 ;;		_IMU_init
  6306 ;;		_Acc_X
  6307 ;;		_Acc_Y
  6308 ;;		_Acc_Z
  6309 ;;		_Gy_X
  6310 ;;		_Gy_Y
  6311 ;;		_Gy_Z
  6312 ;; This function uses a non-reentrant model
  6313 ;;
  6314                           
  6315                           
  6316                           ;psect for function _I2C_Master_Write
  6317  1685                     _I2C_Master_Write:	
  6318                           
  6319                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  6320                           
  6321                           ;incstack = 0
  6322                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  6323  1685  120A  158A  20B9   	fcall	_I2C_Master_Wait
  6324                           
  6325                           ;I2C.c: 68:     SSPBUF = d;
  6326  1688  1283               	bcf	3,5	;RP0=0, select bank0
  6327  1689  1303               	bcf	3,6	;RP1=0, select bank0
  6328  168A  082D               	movf	I2C_Master_Write@d,w
  6329  168B  0093               	movwf	19	;volatile
  6330  168C  0008               	return
  6331  168D                     __end_of_I2C_Master_Write:	
  6332                           
  6333                           	psect	text24
  6334  167E                     __ptext24:	
  6335 ;; *************** function _I2C_Master_Stop *****************
  6336 ;; Defined at:
  6337 ;;		line 55 in file "I2C.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;		None
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;		None
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      void 
  6344 ;; Registers used:
  6345 ;;		wreg, status,2, status,0, pclath, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6351 ;;      Params:         0       0       0       0       0
  6352 ;;      Locals:         0       0       0       0       0
  6353 ;;      Temps:          0       0       0       0       0
  6354 ;;      Totals:         0       0       0       0       0
  6355 ;;Total ram usage:        0 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:    2
  6358 ;; This function calls:
  6359 ;;		_I2C_Master_Wait
  6360 ;; This function is called by:
  6361 ;;		_get_dis
  6362 ;;		_mostrarLCD
  6363 ;;		_Zeit_Datum_Set
  6364 ;;		_get_Time
  6365 ;;		_get_hora
  6366 ;;		_temp_objeto
  6367 ;;		_temp_ambiente
  6368 ;;		_IMU_init
  6369 ;;		_Acc_X
  6370 ;;		_Acc_Y
  6371 ;;		_Acc_Z
  6372 ;;		_Gy_X
  6373 ;;		_Gy_Y
  6374 ;;		_Gy_Z
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           
  6378                           
  6379                           ;psect for function _I2C_Master_Stop
  6380  167E                     _I2C_Master_Stop:	
  6381                           
  6382                           ;I2C.c: 57:     I2C_Master_Wait();
  6383                           
  6384                           ;incstack = 0
  6385                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  6386  167E  120A  158A  20B9   	fcall	_I2C_Master_Wait
  6387                           
  6388                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  6389  1681  1683               	bsf	3,5	;RP0=1, select bank1
  6390  1682  1303               	bcf	3,6	;RP1=0, select bank1
  6391  1683  1511               	bsf	17,2	;volatile
  6392  1684  0008               	return
  6393  1685                     __end_of_I2C_Master_Stop:	
  6394                           
  6395                           	psect	text25
  6396  1677                     __ptext25:	
  6397 ;; *************** function _I2C_Master_Start *****************
  6398 ;; Defined at:
  6399 ;;		line 39 in file "I2C.c"
  6400 ;; Parameters:    Size  Location     Type
  6401 ;;		None
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;		None
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  1    wreg      void 
  6406 ;; Registers used:
  6407 ;;		wreg, status,2, status,0, pclath, cstack
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6413 ;;      Params:         0       0       0       0       0
  6414 ;;      Locals:         0       0       0       0       0
  6415 ;;      Temps:          0       0       0       0       0
  6416 ;;      Totals:         0       0       0       0       0
  6417 ;;Total ram usage:        0 bytes
  6418 ;; Hardware stack levels used:    1
  6419 ;; Hardware stack levels required when called:    2
  6420 ;; This function calls:
  6421 ;;		_I2C_Master_Wait
  6422 ;; This function is called by:
  6423 ;;		_get_dis
  6424 ;;		_mostrarLCD
  6425 ;;		_Zeit_Datum_Set
  6426 ;;		_get_Time
  6427 ;;		_get_hora
  6428 ;;		_temp_objeto
  6429 ;;		_temp_ambiente
  6430 ;;		_IMU_init
  6431 ;;		_Acc_X
  6432 ;;		_Acc_Y
  6433 ;;		_Acc_Z
  6434 ;;		_Gy_X
  6435 ;;		_Gy_Y
  6436 ;;		_Gy_Z
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           
  6441                           ;psect for function _I2C_Master_Start
  6442  1677                     _I2C_Master_Start:	
  6443                           
  6444                           ;I2C.c: 41:     I2C_Master_Wait();
  6445                           
  6446                           ;incstack = 0
  6447                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  6448  1677  120A  158A  20B9   	fcall	_I2C_Master_Wait
  6449                           
  6450                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  6451  167A  1683               	bsf	3,5	;RP0=1, select bank1
  6452  167B  1303               	bcf	3,6	;RP1=0, select bank1
  6453  167C  1411               	bsf	17,0	;volatile
  6454  167D  0008               	return
  6455  167E                     __end_of_I2C_Master_Start:	
  6456                           
  6457                           	psect	text26
  6458  08B9                     __ptext26:	
  6459 ;; *************** function _I2C_Master_Wait *****************
  6460 ;; Defined at:
  6461 ;;		line 32 in file "I2C.c"
  6462 ;; Parameters:    Size  Location     Type
  6463 ;;		None
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;		None
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  1    wreg      void 
  6468 ;; Registers used:
  6469 ;;		wreg, status,2
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6475 ;;      Params:         0       0       0       0       0
  6476 ;;      Locals:         0       0       0       0       0
  6477 ;;      Temps:          0       0       0       0       0
  6478 ;;      Totals:         0       0       0       0       0
  6479 ;;Total ram usage:        0 bytes
  6480 ;; Hardware stack levels used:    1
  6481 ;; Hardware stack levels required when called:    1
  6482 ;; This function calls:
  6483 ;;		Nothing
  6484 ;; This function is called by:
  6485 ;;		_I2C_Master_Start
  6486 ;;		_I2C_Master_Stop
  6487 ;;		_I2C_Master_Write
  6488 ;;		_I2C_Master_Read
  6489 ;;		_I2C_Master_RepeatedStart
  6490 ;; This function uses a non-reentrant model
  6491 ;;
  6492                           
  6493                           
  6494                           ;psect for function _I2C_Master_Wait
  6495  08B9                     _I2C_Master_Wait:	
  6496  08B9                     l370:	
  6497                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  6498                           
  6499                           ;incstack = 0
  6500                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  6501                           
  6502  08B9  1683               	bsf	3,5	;RP0=1, select bank1
  6503  08BA  1303               	bcf	3,6	;RP1=0, select bank1
  6504  08BB  1914               	btfsc	20,2	;volatile
  6505  08BC  28B9               	goto	l370
  6506  08BD  0811               	movf	17,w	;volatile
  6507  08BE  391F               	andlw	31
  6508  08BF  1903               	btfsc	3,2
  6509  08C0  0008               	return
  6510  08C1  28B9               	goto	l370
  6511  08C2                     __end_of_I2C_Master_Wait:	
  6512                           
  6513                           	psect	text27
  6514  091D                     __ptext27:	
  6515 ;; *************** function _DEC_a_BCD *****************
  6516 ;; Defined at:
  6517 ;;		line 32 in file "RTC.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;  numDEC          1    wreg     unsigned char 
  6520 ;; Auto vars:     Size  Location     Type
  6521 ;;  numDEC          1    9[COMMON] unsigned char 
  6522 ;; Return value:  Size  Location     Type
  6523 ;;                  1    wreg      unsigned char 
  6524 ;; Registers used:
  6525 ;;		wreg, status,2, status,0, pclath, cstack
  6526 ;; Tracked objects:
  6527 ;;		On entry : 0/0
  6528 ;;		On exit  : 0/0
  6529 ;;		Unchanged: 0/0
  6530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6531 ;;      Params:         0       0       0       0       0
  6532 ;;      Locals:         1       0       0       0       0
  6533 ;;      Temps:          0       5       0       0       0
  6534 ;;      Totals:         1       5       0       0       0
  6535 ;;Total ram usage:        6 bytes
  6536 ;; Hardware stack levels used:    1
  6537 ;; Hardware stack levels required when called:    2
  6538 ;; This function calls:
  6539 ;;		___awdiv
  6540 ;;		___awmod
  6541 ;; This function is called by:
  6542 ;;		_Zeit_Datum_Set
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           
  6546                           
  6547                           ;psect for function _DEC_a_BCD
  6548  091D                     _DEC_a_BCD:	
  6549                           
  6550                           ;incstack = 0
  6551                           ; Regs used in _DEC_a_BCD: [wreg+status,2+status,0+pclath+cstack]
  6552                           ;DEC_a_BCD@numDEC stored from wreg
  6553  091D  00F9               	movwf	DEC_a_BCD@numDEC
  6554                           
  6555                           ;RTC.c: 33:     return ((numDEC / 10) << 4) + (numDEC % 10);
  6556  091E  300A               	movlw	10
  6557  091F  1283               	bcf	3,5	;RP0=0, select bank0
  6558  0920  1303               	bcf	3,6	;RP1=0, select bank0
  6559  0921  00A0               	movwf	___awdiv@divisor
  6560  0922  3000               	movlw	0
  6561  0923  00A1               	movwf	___awdiv@divisor+1
  6562  0924  0879               	movf	DEC_a_BCD@numDEC,w
  6563  0925  00A8               	movwf	??_DEC_a_BCD
  6564  0926  01A9               	clrf	??_DEC_a_BCD+1
  6565  0927  0828               	movf	??_DEC_a_BCD,w
  6566  0928  00A2               	movwf	___awdiv@dividend
  6567  0929  0829               	movf	??_DEC_a_BCD+1,w
  6568  092A  00A3               	movwf	___awdiv@dividend+1
  6569  092B  120A  158A  2198  120A  158A  	fcall	___awdiv
  6570  0930  1283               	bcf	3,5	;RP0=0, select bank0
  6571  0931  1303               	bcf	3,6	;RP1=0, select bank0
  6572  0932  0820               	movf	?___awdiv,w
  6573  0933  00AA               	movwf	??_DEC_a_BCD+2
  6574  0934  3004               	movlw	4
  6575  0935                     u1735:	
  6576  0935  1003               	clrc
  6577  0936  0DAA               	rlf	??_DEC_a_BCD+2,f
  6578  0937  3EFF               	addlw	-1
  6579  0938  1D03               	skipz
  6580  0939  2935               	goto	u1735
  6581  093A  300A               	movlw	10
  6582  093B  00F2               	movwf	___awmod@divisor
  6583  093C  3000               	movlw	0
  6584  093D  00F3               	movwf	___awmod@divisor+1
  6585  093E  0879               	movf	DEC_a_BCD@numDEC,w
  6586  093F  00AB               	movwf	??_DEC_a_BCD+3
  6587  0940  01AC               	clrf	??_DEC_a_BCD+4
  6588  0941  082B               	movf	??_DEC_a_BCD+3,w
  6589  0942  00F4               	movwf	___awmod@dividend
  6590  0943  082C               	movf	??_DEC_a_BCD+4,w
  6591  0944  00F5               	movwf	___awmod@dividend+1
  6592  0945  120A  158A  214D   	fcall	___awmod
  6593  0948  0872               	movf	?___awmod,w
  6594  0949  1283               	bcf	3,5	;RP0=0, select bank0
  6595  094A  1303               	bcf	3,6	;RP1=0, select bank0
  6596  094B  072A               	addwf	??_DEC_a_BCD+2,w
  6597  094C  0008               	return
  6598  094D                     __end_of_DEC_a_BCD:	
  6599                           
  6600                           	psect	text28
  6601  094D                     __ptext28:	
  6602 ;; *************** function ___awmod *****************
  6603 ;; Defined at:
  6604 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  6605 ;; Parameters:    Size  Location     Type
  6606 ;;  divisor         2    2[COMMON] int 
  6607 ;;  dividend        2    4[COMMON] int 
  6608 ;; Auto vars:     Size  Location     Type
  6609 ;;  sign            1    8[COMMON] unsigned char 
  6610 ;;  counter         1    7[COMMON] unsigned char 
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  2    2[COMMON] int 
  6613 ;; Registers used:
  6614 ;;		wreg, status,2, status,0
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6620 ;;      Params:         4       0       0       0       0
  6621 ;;      Locals:         2       0       0       0       0
  6622 ;;      Temps:          1       0       0       0       0
  6623 ;;      Totals:         7       0       0       0       0
  6624 ;;Total ram usage:        7 bytes
  6625 ;; Hardware stack levels used:    1
  6626 ;; Hardware stack levels required when called:    1
  6627 ;; This function calls:
  6628 ;;		Nothing
  6629 ;; This function is called by:
  6630 ;;		_display_Uhrzeit
  6631 ;;		_display_Datum
  6632 ;;		_mostrarLCD
  6633 ;;		_DEC_a_BCD
  6634 ;; This function uses a non-reentrant model
  6635 ;;
  6636                           
  6637                           
  6638                           ;psect for function ___awmod
  6639  094D                     ___awmod:	
  6640                           
  6641                           ;incstack = 0
  6642                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6643  094D  01F8               	clrf	___awmod@sign
  6644  094E  1FF5               	btfss	___awmod@dividend+1,7
  6645  094F  2957               	goto	l4207
  6646  0950  09F4               	comf	___awmod@dividend,f
  6647  0951  09F5               	comf	___awmod@dividend+1,f
  6648  0952  0AF4               	incf	___awmod@dividend,f
  6649  0953  1903               	skipnz
  6650  0954  0AF5               	incf	___awmod@dividend+1,f
  6651  0955  01F8               	clrf	___awmod@sign
  6652  0956  0AF8               	incf	___awmod@sign,f
  6653  0957                     l4207:	
  6654  0957  1FF3               	btfss	___awmod@divisor+1,7
  6655  0958  295E               	goto	l4211
  6656  0959  09F2               	comf	___awmod@divisor,f
  6657  095A  09F3               	comf	___awmod@divisor+1,f
  6658  095B  0AF2               	incf	___awmod@divisor,f
  6659  095C  1903               	skipnz
  6660  095D  0AF3               	incf	___awmod@divisor+1,f
  6661  095E                     l4211:	
  6662  095E  0872               	movf	___awmod@divisor,w
  6663  095F  0473               	iorwf	___awmod@divisor+1,w
  6664  0960  1903               	btfsc	3,2
  6665  0961  298B               	goto	l4229
  6666  0962  01F7               	clrf	___awmod@counter
  6667  0963  0AF7               	incf	___awmod@counter,f
  6668  0964                     l4219:	
  6669  0964  1BF3               	btfsc	___awmod@divisor+1,7
  6670  0965  2972               	goto	l4221
  6671  0966  3001               	movlw	1
  6672  0967                     u1675:	
  6673  0967  1003               	clrc
  6674  0968  0DF2               	rlf	___awmod@divisor,f
  6675  0969  0DF3               	rlf	___awmod@divisor+1,f
  6676  096A  3EFF               	addlw	-1
  6677  096B  1D03               	skipz
  6678  096C  2967               	goto	u1675
  6679  096D  3001               	movlw	1
  6680  096E  00F6               	movwf	??___awmod
  6681  096F  0876               	movf	??___awmod,w
  6682  0970  07F7               	addwf	___awmod@counter,f
  6683  0971  2964               	goto	l4219
  6684  0972                     l4221:	
  6685  0972  0873               	movf	___awmod@divisor+1,w
  6686  0973  0275               	subwf	___awmod@dividend+1,w
  6687  0974  1D03               	skipz
  6688  0975  2978               	goto	u1695
  6689  0976  0872               	movf	___awmod@divisor,w
  6690  0977  0274               	subwf	___awmod@dividend,w
  6691  0978                     u1695:	
  6692  0978  1C03               	skipc
  6693  0979  2980               	goto	l4225
  6694  097A  0872               	movf	___awmod@divisor,w
  6695  097B  02F4               	subwf	___awmod@dividend,f
  6696  097C  0873               	movf	___awmod@divisor+1,w
  6697  097D  1C03               	skipc
  6698  097E  03F5               	decf	___awmod@dividend+1,f
  6699  097F  02F5               	subwf	___awmod@dividend+1,f
  6700  0980                     l4225:	
  6701  0980  3001               	movlw	1
  6702  0981                     u1705:	
  6703  0981  1003               	clrc
  6704  0982  0CF3               	rrf	___awmod@divisor+1,f
  6705  0983  0CF2               	rrf	___awmod@divisor,f
  6706  0984  3EFF               	addlw	-1
  6707  0985  1D03               	skipz
  6708  0986  2981               	goto	u1705
  6709  0987  3001               	movlw	1
  6710  0988  02F7               	subwf	___awmod@counter,f
  6711  0989  1D03               	btfss	3,2
  6712  098A  2972               	goto	l4221
  6713  098B                     l4229:	
  6714  098B  0878               	movf	___awmod@sign,w
  6715  098C  1903               	btfsc	3,2
  6716  098D  2993               	goto	l4233
  6717  098E  09F4               	comf	___awmod@dividend,f
  6718  098F  09F5               	comf	___awmod@dividend+1,f
  6719  0990  0AF4               	incf	___awmod@dividend,f
  6720  0991  1903               	skipnz
  6721  0992  0AF5               	incf	___awmod@dividend+1,f
  6722  0993                     l4233:	
  6723  0993  0875               	movf	___awmod@dividend+1,w
  6724  0994  00F3               	movwf	?___awmod+1
  6725  0995  0874               	movf	___awmod@dividend,w
  6726  0996  00F2               	movwf	?___awmod
  6727  0997  0008               	return
  6728  0998                     __end_of___awmod:	
  6729                           
  6730                           	psect	text29
  6731  0998                     __ptext29:	
  6732 ;; *************** function ___awdiv *****************
  6733 ;; Defined at:
  6734 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;  divisor         2    0[BANK0 ] int 
  6737 ;;  dividend        2    2[BANK0 ] int 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  quotient        2    6[BANK0 ] int 
  6740 ;;  sign            1    5[BANK0 ] unsigned char 
  6741 ;;  counter         1    4[BANK0 ] unsigned char 
  6742 ;; Return value:  Size  Location     Type
  6743 ;;                  2    0[BANK0 ] int 
  6744 ;; Registers used:
  6745 ;;		wreg, status,2, status,0
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 0/0
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6751 ;;      Params:         0       4       0       0       0
  6752 ;;      Locals:         0       4       0       0       0
  6753 ;;      Temps:          1       0       0       0       0
  6754 ;;      Totals:         1       8       0       0       0
  6755 ;;Total ram usage:        9 bytes
  6756 ;; Hardware stack levels used:    1
  6757 ;; Hardware stack levels required when called:    1
  6758 ;; This function calls:
  6759 ;;		Nothing
  6760 ;; This function is called by:
  6761 ;;		_display_Uhrzeit
  6762 ;;		_display_Datum
  6763 ;;		_mostrarLCD
  6764 ;;		_DEC_a_BCD
  6765 ;;		_uint_to_array
  6766 ;; This function uses a non-reentrant model
  6767 ;;
  6768                           
  6769                           
  6770                           ;psect for function ___awdiv
  6771  0998                     ___awdiv:	
  6772                           
  6773                           ;incstack = 0
  6774                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6775  0998  1283               	bcf	3,5	;RP0=0, select bank0
  6776  0999  1303               	bcf	3,6	;RP1=0, select bank0
  6777  099A  01A5               	clrf	___awdiv@sign
  6778  099B  1FA1               	btfss	___awdiv@divisor+1,7
  6779  099C  29A4               	goto	l4163
  6780  099D  09A0               	comf	___awdiv@divisor,f
  6781  099E  09A1               	comf	___awdiv@divisor+1,f
  6782  099F  0AA0               	incf	___awdiv@divisor,f
  6783  09A0  1903               	skipnz
  6784  09A1  0AA1               	incf	___awdiv@divisor+1,f
  6785  09A2  01A5               	clrf	___awdiv@sign
  6786  09A3  0AA5               	incf	___awdiv@sign,f
  6787  09A4                     l4163:	
  6788  09A4  1FA3               	btfss	___awdiv@dividend+1,7
  6789  09A5  29AF               	goto	l4169
  6790  09A6  09A2               	comf	___awdiv@dividend,f
  6791  09A7  09A3               	comf	___awdiv@dividend+1,f
  6792  09A8  0AA2               	incf	___awdiv@dividend,f
  6793  09A9  1903               	skipnz
  6794  09AA  0AA3               	incf	___awdiv@dividend+1,f
  6795  09AB  3001               	movlw	1
  6796  09AC  00F8               	movwf	??___awdiv
  6797  09AD  0878               	movf	??___awdiv,w
  6798  09AE  06A5               	xorwf	___awdiv@sign,f
  6799  09AF                     l4169:	
  6800  09AF  01A6               	clrf	___awdiv@quotient
  6801  09B0  01A7               	clrf	___awdiv@quotient+1
  6802  09B1  0820               	movf	___awdiv@divisor,w
  6803  09B2  0421               	iorwf	___awdiv@divisor+1,w
  6804  09B3  1903               	btfsc	3,2
  6805  09B4  29E6               	goto	l4191
  6806  09B5  01A4               	clrf	___awdiv@counter
  6807  09B6  0AA4               	incf	___awdiv@counter,f
  6808  09B7                     l4179:	
  6809  09B7  1BA1               	btfsc	___awdiv@divisor+1,7
  6810  09B8  29C5               	goto	l4181
  6811  09B9  3001               	movlw	1
  6812  09BA                     u1575:	
  6813  09BA  1003               	clrc
  6814  09BB  0DA0               	rlf	___awdiv@divisor,f
  6815  09BC  0DA1               	rlf	___awdiv@divisor+1,f
  6816  09BD  3EFF               	addlw	-1
  6817  09BE  1D03               	skipz
  6818  09BF  29BA               	goto	u1575
  6819  09C0  3001               	movlw	1
  6820  09C1  00F8               	movwf	??___awdiv
  6821  09C2  0878               	movf	??___awdiv,w
  6822  09C3  07A4               	addwf	___awdiv@counter,f
  6823  09C4  29B7               	goto	l4179
  6824  09C5                     l4181:	
  6825  09C5  3001               	movlw	1
  6826  09C6                     u1595:	
  6827  09C6  1003               	clrc
  6828  09C7  0DA6               	rlf	___awdiv@quotient,f
  6829  09C8  0DA7               	rlf	___awdiv@quotient+1,f
  6830  09C9  3EFF               	addlw	-1
  6831  09CA  1D03               	skipz
  6832  09CB  29C6               	goto	u1595
  6833  09CC  0821               	movf	___awdiv@divisor+1,w
  6834  09CD  0223               	subwf	___awdiv@dividend+1,w
  6835  09CE  1D03               	skipz
  6836  09CF  29D2               	goto	u1605
  6837  09D0  0820               	movf	___awdiv@divisor,w
  6838  09D1  0222               	subwf	___awdiv@dividend,w
  6839  09D2                     u1605:	
  6840  09D2  1C03               	skipc
  6841  09D3  29DB               	goto	l4187
  6842  09D4  0820               	movf	___awdiv@divisor,w
  6843  09D5  02A2               	subwf	___awdiv@dividend,f
  6844  09D6  0821               	movf	___awdiv@divisor+1,w
  6845  09D7  1C03               	skipc
  6846  09D8  03A3               	decf	___awdiv@dividend+1,f
  6847  09D9  02A3               	subwf	___awdiv@dividend+1,f
  6848  09DA  1426               	bsf	___awdiv@quotient,0
  6849  09DB                     l4187:	
  6850  09DB  3001               	movlw	1
  6851  09DC                     u1615:	
  6852  09DC  1003               	clrc
  6853  09DD  0CA1               	rrf	___awdiv@divisor+1,f
  6854  09DE  0CA0               	rrf	___awdiv@divisor,f
  6855  09DF  3EFF               	addlw	-1
  6856  09E0  1D03               	skipz
  6857  09E1  29DC               	goto	u1615
  6858  09E2  3001               	movlw	1
  6859  09E3  02A4               	subwf	___awdiv@counter,f
  6860  09E4  1D03               	btfss	3,2
  6861  09E5  29C5               	goto	l4181
  6862  09E6                     l4191:	
  6863  09E6  0825               	movf	___awdiv@sign,w
  6864  09E7  1903               	btfsc	3,2
  6865  09E8  29EE               	goto	l4195
  6866  09E9  09A6               	comf	___awdiv@quotient,f
  6867  09EA  09A7               	comf	___awdiv@quotient+1,f
  6868  09EB  0AA6               	incf	___awdiv@quotient,f
  6869  09EC  1903               	skipnz
  6870  09ED  0AA7               	incf	___awdiv@quotient+1,f
  6871  09EE                     l4195:	
  6872  09EE  0827               	movf	___awdiv@quotient+1,w
  6873  09EF  00A1               	movwf	?___awdiv+1
  6874  09F0  0826               	movf	___awdiv@quotient,w
  6875  09F1  00A0               	movwf	?___awdiv
  6876  09F2  0008               	return
  6877  09F3                     __end_of___awdiv:	
  6878                           
  6879                           	psect	text30
  6880  0D44                     __ptext30:	
  6881 ;; *************** function _OSC_config *****************
  6882 ;; Defined at:
  6883 ;;		line 382 in file "main_Master.c"
  6884 ;; Parameters:    Size  Location     Type
  6885 ;;  frecuencia      4    2[COMMON] unsigned long 
  6886 ;; Auto vars:     Size  Location     Type
  6887 ;;		None
  6888 ;; Return value:  Size  Location     Type
  6889 ;;                  1    wreg      void 
  6890 ;; Registers used:
  6891 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6892 ;; Tracked objects:
  6893 ;;		On entry : 0/0
  6894 ;;		On exit  : 0/0
  6895 ;;		Unchanged: 0/0
  6896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6897 ;;      Params:         4       0       0       0       0
  6898 ;;      Locals:         0       0       0       0       0
  6899 ;;      Temps:          0       0       0       0       0
  6900 ;;      Totals:         4       0       0       0       0
  6901 ;;Total ram usage:        4 bytes
  6902 ;; Hardware stack levels used:    1
  6903 ;; Hardware stack levels required when called:    1
  6904 ;; This function calls:
  6905 ;;		Nothing
  6906 ;; This function is called by:
  6907 ;;		_SetUp
  6908 ;; This function uses a non-reentrant model
  6909 ;;
  6910                           
  6911                           
  6912                           ;psect for function _OSC_config
  6913  0D44                     _OSC_config:	
  6914                           
  6915                           ;main_Master.c: 383:     switch(frecuencia){
  6916                           
  6917                           ;incstack = 0
  6918                           ; Regs used in _OSC_config: [wreg-fsr0h+status,2+status,0]
  6919  0D44  2D80               	goto	l2893
  6920  0D45                     l2875:	
  6921                           
  6922                           ;main_Master.c: 385:             OSCCONbits.IRCF = 0b111;
  6923  0D45  3070               	movlw	112
  6924  0D46  1683               	bsf	3,5	;RP0=1, select bank1
  6925  0D47  1303               	bcf	3,6	;RP1=0, select bank1
  6926  0D48  048F               	iorwf	15,f	;volatile
  6927                           
  6928                           ;main_Master.c: 386:             break;
  6929  0D49  0008               	return
  6930  0D4A                     l2877:	
  6931                           
  6932                           ;main_Master.c: 388:             OSCCONbits.IRCF = 0b110;
  6933  0D4A  1683               	bsf	3,5	;RP0=1, select bank1
  6934  0D4B  1303               	bcf	3,6	;RP1=0, select bank1
  6935  0D4C  080F               	movf	15,w	;volatile
  6936  0D4D  398F               	andlw	-113
  6937  0D4E  3860               	iorlw	96
  6938  0D4F  008F               	movwf	15	;volatile
  6939                           
  6940                           ;main_Master.c: 389:             break;
  6941  0D50  0008               	return
  6942  0D51                     l2879:	
  6943                           
  6944                           ;main_Master.c: 391:             OSCCONbits.IRCF = 0b101;
  6945  0D51  1683               	bsf	3,5	;RP0=1, select bank1
  6946  0D52  1303               	bcf	3,6	;RP1=0, select bank1
  6947  0D53  080F               	movf	15,w	;volatile
  6948  0D54  398F               	andlw	-113
  6949  0D55  3850               	iorlw	80
  6950  0D56  008F               	movwf	15	;volatile
  6951                           
  6952                           ;main_Master.c: 392:             break;
  6953  0D57  0008               	return
  6954  0D58                     l2881:	
  6955                           
  6956                           ;main_Master.c: 394:             OSCCONbits.IRCF = 0b100;
  6957  0D58  1683               	bsf	3,5	;RP0=1, select bank1
  6958  0D59  1303               	bcf	3,6	;RP1=0, select bank1
  6959  0D5A  080F               	movf	15,w	;volatile
  6960  0D5B  398F               	andlw	-113
  6961  0D5C  3840               	iorlw	64
  6962  0D5D  008F               	movwf	15	;volatile
  6963                           
  6964                           ;main_Master.c: 395:             break;
  6965  0D5E  0008               	return
  6966  0D5F                     l2883:	
  6967                           
  6968                           ;main_Master.c: 397:             OSCCONbits.IRCF = 0b011;
  6969  0D5F  1683               	bsf	3,5	;RP0=1, select bank1
  6970  0D60  1303               	bcf	3,6	;RP1=0, select bank1
  6971  0D61  080F               	movf	15,w	;volatile
  6972  0D62  398F               	andlw	-113
  6973  0D63  3830               	iorlw	48
  6974  0D64  008F               	movwf	15	;volatile
  6975                           
  6976                           ;main_Master.c: 398:             break;
  6977  0D65  0008               	return
  6978  0D66                     l2885:	
  6979                           
  6980                           ;main_Master.c: 400:             OSCCONbits.IRCF = 0b010;
  6981  0D66  1683               	bsf	3,5	;RP0=1, select bank1
  6982  0D67  1303               	bcf	3,6	;RP1=0, select bank1
  6983  0D68  080F               	movf	15,w	;volatile
  6984  0D69  398F               	andlw	-113
  6985  0D6A  3820               	iorlw	32
  6986  0D6B  008F               	movwf	15	;volatile
  6987                           
  6988                           ;main_Master.c: 401:             break;
  6989  0D6C  0008               	return
  6990  0D6D                     l2887:	
  6991                           
  6992                           ;main_Master.c: 403:             OSCCONbits.IRCF = 0b001;
  6993  0D6D  1683               	bsf	3,5	;RP0=1, select bank1
  6994  0D6E  1303               	bcf	3,6	;RP1=0, select bank1
  6995  0D6F  080F               	movf	15,w	;volatile
  6996  0D70  398F               	andlw	-113
  6997  0D71  3810               	iorlw	16
  6998  0D72  008F               	movwf	15	;volatile
  6999                           
  7000                           ;main_Master.c: 404:             break;
  7001  0D73  0008               	return
  7002  0D74                     l2889:	
  7003                           
  7004                           ;main_Master.c: 406:             OSCCONbits.IRCF = 0b000;
  7005  0D74  308F               	movlw	-113
  7006  0D75  1683               	bsf	3,5	;RP0=1, select bank1
  7007  0D76  1303               	bcf	3,6	;RP1=0, select bank1
  7008  0D77  058F               	andwf	15,f	;volatile
  7009                           
  7010                           ;main_Master.c: 407:             break;
  7011  0D78  0008               	return
  7012  0D79                     l2891:	
  7013                           
  7014                           ;main_Master.c: 409:             OSCCONbits.IRCF = 0b110;
  7015  0D79  1683               	bsf	3,5	;RP0=1, select bank1
  7016  0D7A  1303               	bcf	3,6	;RP1=0, select bank1
  7017  0D7B  080F               	movf	15,w	;volatile
  7018  0D7C  398F               	andlw	-113
  7019  0D7D  3860               	iorlw	96
  7020  0D7E  008F               	movwf	15	;volatile
  7021                           
  7022                           ;main_Master.c: 410:     }
  7023  0D7F  0008               	return
  7024  0D80                     l2893:	
  7025                           
  7026                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 9 sub-sw
      +                          itches
  7027                           ; Switch size 1, requested type "simple"
  7028                           ; Number of cases is 1, Range of values is 0 to 0
  7029                           ; switch strategies available:
  7030                           ; Name         Instructions Cycles
  7031                           ; simple_byte            4     3 (average)
  7032                           ; direct_byte           11     8 (fixed)
  7033                           ; jumptable            260     6 (fixed)
  7034                           ;	Chosen strategy is simple_byte
  7035  0D80  0875               	movf	OSC_config@frecuencia+3,w
  7036  0D81  3A00               	xorlw	0	; case 0
  7037  0D82  1903               	skipnz
  7038  0D83  2DD5               	goto	l5161
  7039  0D84  2D79               	goto	l2891
  7040  0D85                     l5145:	
  7041                           
  7042                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7043                           ; Switch size 1, requested type "simple"
  7044                           ; Number of cases is 1, Range of values is 125 to 125
  7045                           ; switch strategies available:
  7046                           ; Name         Instructions Cycles
  7047                           ; simple_byte            4     3 (average)
  7048                           ; direct_byte           14    11 (fixed)
  7049                           ; jumptable            263     9 (fixed)
  7050                           ;	Chosen strategy is simple_byte
  7051  0D85  0873               	movf	OSC_config@frecuencia+1,w
  7052  0D86  3A7D               	xorlw	125	; case 125
  7053  0D87  1903               	skipnz
  7054  0D88  2D8A               	goto	l5163
  7055  0D89  2D79               	goto	l2891
  7056  0D8A                     l5163:	
  7057                           
  7058                           ; Switch size 1, requested type "simple"
  7059                           ; Number of cases is 1, Range of values is 0 to 0
  7060                           ; switch strategies available:
  7061                           ; Name         Instructions Cycles
  7062                           ; simple_byte            4     3 (average)
  7063                           ; direct_byte           11     8 (fixed)
  7064                           ; jumptable            260     6 (fixed)
  7065                           ;	Chosen strategy is simple_byte
  7066  0D8A  0872               	movf	OSC_config@frecuencia,w
  7067  0D8B  3A00               	xorlw	0	; case 0
  7068  0D8C  1903               	skipnz
  7069  0D8D  2D74               	goto	l2889
  7070  0D8E  2D79               	goto	l2891
  7071  0D8F                     l5147:	
  7072                           
  7073                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7074                           ; Switch size 1, requested type "simple"
  7075                           ; Number of cases is 1, Range of values is 232 to 232
  7076                           ; switch strategies available:
  7077                           ; Name         Instructions Cycles
  7078                           ; simple_byte            4     3 (average)
  7079                           ; direct_byte           14    11 (fixed)
  7080                           ; jumptable            263     9 (fixed)
  7081                           ;	Chosen strategy is simple_byte
  7082  0D8F  0873               	movf	OSC_config@frecuencia+1,w
  7083  0D90  3AE8               	xorlw	232	; case 232
  7084  0D91  1903               	skipnz
  7085  0D92  2D94               	goto	l5165
  7086  0D93  2D79               	goto	l2891
  7087  0D94                     l5165:	
  7088                           
  7089                           ; Switch size 1, requested type "simple"
  7090                           ; Number of cases is 1, Range of values is 72 to 72
  7091                           ; switch strategies available:
  7092                           ; Name         Instructions Cycles
  7093                           ; simple_byte            4     3 (average)
  7094                           ; direct_byte           14    11 (fixed)
  7095                           ; jumptable            263     9 (fixed)
  7096                           ;	Chosen strategy is simple_byte
  7097  0D94  0872               	movf	OSC_config@frecuencia,w
  7098  0D95  3A48               	xorlw	72	; case 72
  7099  0D96  1903               	skipnz
  7100  0D97  2D6D               	goto	l2887
  7101  0D98  2D79               	goto	l2891
  7102  0D99                     l5149:	
  7103                           
  7104                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7105                           ; Switch size 1, requested type "simple"
  7106                           ; Number of cases is 1, Range of values is 208 to 208
  7107                           ; switch strategies available:
  7108                           ; Name         Instructions Cycles
  7109                           ; simple_byte            4     3 (average)
  7110                           ; direct_byte           14    11 (fixed)
  7111                           ; jumptable            263     9 (fixed)
  7112                           ;	Chosen strategy is simple_byte
  7113  0D99  0873               	movf	OSC_config@frecuencia+1,w
  7114  0D9A  3AD0               	xorlw	208	; case 208
  7115  0D9B  1903               	skipnz
  7116  0D9C  2D9E               	goto	l5167
  7117  0D9D  2D79               	goto	l2891
  7118  0D9E                     l5167:	
  7119                           
  7120                           ; Switch size 1, requested type "simple"
  7121                           ; Number of cases is 1, Range of values is 144 to 144
  7122                           ; switch strategies available:
  7123                           ; Name         Instructions Cycles
  7124                           ; simple_byte            4     3 (average)
  7125                           ; direct_byte           14    11 (fixed)
  7126                           ; jumptable            263     9 (fixed)
  7127                           ;	Chosen strategy is simple_byte
  7128  0D9E  0872               	movf	OSC_config@frecuencia,w
  7129  0D9F  3A90               	xorlw	144	; case 144
  7130  0DA0  1903               	skipnz
  7131  0DA1  2D66               	goto	l2885
  7132  0DA2  2D79               	goto	l2891
  7133  0DA3                     l5151:	
  7134                           
  7135                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7136                           ; Switch size 1, requested type "simple"
  7137                           ; Number of cases is 1, Range of values is 161 to 161
  7138                           ; switch strategies available:
  7139                           ; Name         Instructions Cycles
  7140                           ; simple_byte            4     3 (average)
  7141                           ; direct_byte           14    11 (fixed)
  7142                           ; jumptable            263     9 (fixed)
  7143                           ;	Chosen strategy is simple_byte
  7144  0DA3  0873               	movf	OSC_config@frecuencia+1,w
  7145  0DA4  3AA1               	xorlw	161	; case 161
  7146  0DA5  1903               	skipnz
  7147  0DA6  2DA8               	goto	l5169
  7148  0DA7  2D79               	goto	l2891
  7149  0DA8                     l5169:	
  7150                           
  7151                           ; Switch size 1, requested type "simple"
  7152                           ; Number of cases is 1, Range of values is 32 to 32
  7153                           ; switch strategies available:
  7154                           ; Name         Instructions Cycles
  7155                           ; simple_byte            4     3 (average)
  7156                           ; direct_byte           14    11 (fixed)
  7157                           ; jumptable            263     9 (fixed)
  7158                           ;	Chosen strategy is simple_byte
  7159  0DA8  0872               	movf	OSC_config@frecuencia,w
  7160  0DA9  3A20               	xorlw	32	; case 32
  7161  0DAA  1903               	skipnz
  7162  0DAB  2D5F               	goto	l2883
  7163  0DAC  2D79               	goto	l2891
  7164  0DAD                     l5153:	
  7165                           
  7166                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7167                           ; Switch size 1, requested type "simple"
  7168                           ; Number of cases is 1, Range of values is 66 to 66
  7169                           ; switch strategies available:
  7170                           ; Name         Instructions Cycles
  7171                           ; simple_byte            4     3 (average)
  7172                           ; direct_byte           14    11 (fixed)
  7173                           ; jumptable            263     9 (fixed)
  7174                           ;	Chosen strategy is simple_byte
  7175  0DAD  0873               	movf	OSC_config@frecuencia+1,w
  7176  0DAE  3A42               	xorlw	66	; case 66
  7177  0DAF  1903               	skipnz
  7178  0DB0  2DB2               	goto	l5171
  7179  0DB1  2D79               	goto	l2891
  7180  0DB2                     l5171:	
  7181                           
  7182                           ; Switch size 1, requested type "simple"
  7183                           ; Number of cases is 1, Range of values is 64 to 64
  7184                           ; switch strategies available:
  7185                           ; Name         Instructions Cycles
  7186                           ; simple_byte            4     3 (average)
  7187                           ; direct_byte           14    11 (fixed)
  7188                           ; jumptable            263     9 (fixed)
  7189                           ;	Chosen strategy is simple_byte
  7190  0DB2  0872               	movf	OSC_config@frecuencia,w
  7191  0DB3  3A40               	xorlw	64	; case 64
  7192  0DB4  1903               	skipnz
  7193  0DB5  2D58               	goto	l2881
  7194  0DB6  2D79               	goto	l2891
  7195  0DB7                     l5155:	
  7196                           
  7197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7198                           ; Switch size 1, requested type "simple"
  7199                           ; Number of cases is 1, Range of values is 132 to 132
  7200                           ; switch strategies available:
  7201                           ; Name         Instructions Cycles
  7202                           ; simple_byte            4     3 (average)
  7203                           ; direct_byte           14    11 (fixed)
  7204                           ; jumptable            263     9 (fixed)
  7205                           ;	Chosen strategy is simple_byte
  7206  0DB7  0873               	movf	OSC_config@frecuencia+1,w
  7207  0DB8  3A84               	xorlw	132	; case 132
  7208  0DB9  1903               	skipnz
  7209  0DBA  2DBC               	goto	l5173
  7210  0DBB  2D79               	goto	l2891
  7211  0DBC                     l5173:	
  7212                           
  7213                           ; Switch size 1, requested type "simple"
  7214                           ; Number of cases is 1, Range of values is 128 to 128
  7215                           ; switch strategies available:
  7216                           ; Name         Instructions Cycles
  7217                           ; simple_byte            4     3 (average)
  7218                           ; direct_byte           14    11 (fixed)
  7219                           ; jumptable            263     9 (fixed)
  7220                           ;	Chosen strategy is simple_byte
  7221  0DBC  0872               	movf	OSC_config@frecuencia,w
  7222  0DBD  3A80               	xorlw	128	; case 128
  7223  0DBE  1903               	skipnz
  7224  0DBF  2D51               	goto	l2879
  7225  0DC0  2D79               	goto	l2891
  7226  0DC1                     l5157:	
  7227                           
  7228                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7229                           ; Switch size 1, requested type "simple"
  7230                           ; Number of cases is 1, Range of values is 9 to 9
  7231                           ; switch strategies available:
  7232                           ; Name         Instructions Cycles
  7233                           ; simple_byte            4     3 (average)
  7234                           ; direct_byte           14    11 (fixed)
  7235                           ; jumptable            263     9 (fixed)
  7236                           ;	Chosen strategy is simple_byte
  7237  0DC1  0873               	movf	OSC_config@frecuencia+1,w
  7238  0DC2  3A09               	xorlw	9	; case 9
  7239  0DC3  1903               	skipnz
  7240  0DC4  2DC6               	goto	l5175
  7241  0DC5  2D79               	goto	l2891
  7242  0DC6                     l5175:	
  7243                           
  7244                           ; Switch size 1, requested type "simple"
  7245                           ; Number of cases is 1, Range of values is 0 to 0
  7246                           ; switch strategies available:
  7247                           ; Name         Instructions Cycles
  7248                           ; simple_byte            4     3 (average)
  7249                           ; direct_byte           11     8 (fixed)
  7250                           ; jumptable            260     6 (fixed)
  7251                           ;	Chosen strategy is simple_byte
  7252  0DC6  0872               	movf	OSC_config@frecuencia,w
  7253  0DC7  3A00               	xorlw	0	; case 0
  7254  0DC8  1903               	skipnz
  7255  0DC9  2D4A               	goto	l2877
  7256  0DCA  2D79               	goto	l2891
  7257  0DCB                     l5159:	
  7258                           
  7259                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7260                           ; Switch size 1, requested type "simple"
  7261                           ; Number of cases is 1, Range of values is 18 to 18
  7262                           ; switch strategies available:
  7263                           ; Name         Instructions Cycles
  7264                           ; simple_byte            4     3 (average)
  7265                           ; direct_byte           14    11 (fixed)
  7266                           ; jumptable            263     9 (fixed)
  7267                           ;	Chosen strategy is simple_byte
  7268  0DCB  0873               	movf	OSC_config@frecuencia+1,w
  7269  0DCC  3A12               	xorlw	18	; case 18
  7270  0DCD  1903               	skipnz
  7271  0DCE  2DD0               	goto	l5177
  7272  0DCF  2D79               	goto	l2891
  7273  0DD0                     l5177:	
  7274                           
  7275                           ; Switch size 1, requested type "simple"
  7276                           ; Number of cases is 1, Range of values is 0 to 0
  7277                           ; switch strategies available:
  7278                           ; Name         Instructions Cycles
  7279                           ; simple_byte            4     3 (average)
  7280                           ; direct_byte           11     8 (fixed)
  7281                           ; jumptable            260     6 (fixed)
  7282                           ;	Chosen strategy is simple_byte
  7283  0DD0  0872               	movf	OSC_config@frecuencia,w
  7284  0DD1  3A00               	xorlw	0	; case 0
  7285  0DD2  1903               	skipnz
  7286  0DD3  2D45               	goto	l2875
  7287  0DD4  2D79               	goto	l2891
  7288  0DD5                     l5161:	
  7289                           
  7290                           ; Switch size 1, requested type "simple"
  7291                           ; Number of cases is 8, Range of values is 0 to 122
  7292                           ; switch strategies available:
  7293                           ; Name         Instructions Cycles
  7294                           ; simple_byte           25    13 (average)
  7295                           ; jumptable            260     6 (fixed)
  7296                           ;	Chosen strategy is simple_byte
  7297  0DD5  0874               	movf	OSC_config@frecuencia+2,w
  7298  0DD6  3A00               	xorlw	0	; case 0
  7299  0DD7  1903               	skipnz
  7300  0DD8  2D85               	goto	l5145
  7301  0DD9  3A01               	xorlw	1	; case 1
  7302  0DDA  1903               	skipnz
  7303  0DDB  2D8F               	goto	l5147
  7304  0DDC  3A02               	xorlw	2	; case 3
  7305  0DDD  1903               	skipnz
  7306  0DDE  2D99               	goto	l5149
  7307  0DDF  3A04               	xorlw	4	; case 7
  7308  0DE0  1903               	skipnz
  7309  0DE1  2DA3               	goto	l5151
  7310  0DE2  3A08               	xorlw	8	; case 15
  7311  0DE3  1903               	skipnz
  7312  0DE4  2DAD               	goto	l5153
  7313  0DE5  3A11               	xorlw	17	; case 30
  7314  0DE6  1903               	skipnz
  7315  0DE7  2DB7               	goto	l5155
  7316  0DE8  3A23               	xorlw	35	; case 61
  7317  0DE9  1903               	skipnz
  7318  0DEA  2DC1               	goto	l5157
  7319  0DEB  3A47               	xorlw	71	; case 122
  7320  0DEC  1903               	skipnz
  7321  0DED  2DCB               	goto	l5159
  7322  0DEE  2D79               	goto	l2891
  7323  0DEF  0008               	return
  7324  0DF0                     __end_of_OSC_config:	
  7325                           
  7326                           	psect	text31
  7327  0A53                     __ptext31:	
  7328 ;; *************** function _LCD_init *****************
  7329 ;; Defined at:
  7330 ;;		line 44 in file "LCD_8bits.c"
  7331 ;; Parameters:    Size  Location     Type
  7332 ;;		None
  7333 ;; Auto vars:     Size  Location     Type
  7334 ;;		None
  7335 ;; Return value:  Size  Location     Type
  7336 ;;                  1    wreg      void 
  7337 ;; Registers used:
  7338 ;;		wreg, status,2, status,0, pclath, cstack
  7339 ;; Tracked objects:
  7340 ;;		On entry : 0/0
  7341 ;;		On exit  : 0/0
  7342 ;;		Unchanged: 0/0
  7343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7344 ;;      Params:         0       0       0       0       0
  7345 ;;      Locals:         0       0       0       0       0
  7346 ;;      Temps:          2       0       0       0       0
  7347 ;;      Totals:         2       0       0       0       0
  7348 ;;Total ram usage:        2 bytes
  7349 ;; Hardware stack levels used:    1
  7350 ;; Hardware stack levels required when called:    2
  7351 ;; This function calls:
  7352 ;;		_LCD_Cmd
  7353 ;; This function is called by:
  7354 ;;		_SetUp
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357                           
  7358                           
  7359                           ;psect for function _LCD_init
  7360  0A53                     _LCD_init:	
  7361                           
  7362                           ;LCD_8bits.c: 45:     _delay((unsigned long)((20)*(4000000/4000.0)));
  7363                           
  7364                           ;incstack = 0
  7365                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  7366  0A53  301A               	movlw	26
  7367  0A54  00F6               	movwf	??_LCD_init+1
  7368  0A55  30F8               	movlw	248
  7369  0A56  00F5               	movwf	??_LCD_init
  7370  0A57                     u2217:	
  7371  0A57  0BF5               	decfsz	??_LCD_init,f
  7372  0A58  2A57               	goto	u2217
  7373  0A59  0BF6               	decfsz	??_LCD_init+1,f
  7374  0A5A  2A57               	goto	u2217
  7375  0A5B  0000               	nop
  7376                           
  7377                           ;LCD_8bits.c: 46:     LCD_Cmd(0x30);
  7378  0A5C  3030               	movlw	48
  7379  0A5D  120A  158A  20EE  120A  158A  	fcall	_LCD_Cmd
  7380                           
  7381                           ;LCD_8bits.c: 47:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7382  0A62  3007               	movlw	7
  7383  0A63  00F6               	movwf	??_LCD_init+1
  7384  0A64  307D               	movlw	125
  7385  0A65  00F5               	movwf	??_LCD_init
  7386  0A66                     u2227:	
  7387  0A66  0BF5               	decfsz	??_LCD_init,f
  7388  0A67  2A66               	goto	u2227
  7389  0A68  0BF6               	decfsz	??_LCD_init+1,f
  7390  0A69  2A66               	goto	u2227
  7391                           
  7392                           ;LCD_8bits.c: 48:     LCD_Cmd(0x30);
  7393  0A6A  3030               	movlw	48
  7394  0A6B  120A  158A  20EE  120A  158A  	fcall	_LCD_Cmd
  7395                           
  7396                           ;LCD_8bits.c: 49:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7397  0A70  3021               	movlw	33
  7398  0A71  00F5               	movwf	??_LCD_init
  7399  0A72                     u2237:	
  7400  0A72  0BF5               	decfsz	??_LCD_init,f
  7401  0A73  2A72               	goto	u2237
  7402                           
  7403                           ;LCD_8bits.c: 50:     LCD_Cmd(0x30);
  7404  0A74  3030               	movlw	48
  7405  0A75  120A  158A  20EE  120A  158A  	fcall	_LCD_Cmd
  7406                           
  7407                           ;LCD_8bits.c: 51:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7408  0A7A  3021               	movlw	33
  7409  0A7B  00F5               	movwf	??_LCD_init
  7410  0A7C                     u2247:	
  7411  0A7C  0BF5               	decfsz	??_LCD_init,f
  7412  0A7D  2A7C               	goto	u2247
  7413                           
  7414                           ;LCD_8bits.c: 52:     LCD_Cmd(0x38);
  7415  0A7E  3038               	movlw	56
  7416  0A7F  120A  158A  20EE  120A  158A  	fcall	_LCD_Cmd
  7417                           
  7418                           ;LCD_8bits.c: 53:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7419  0A84  3011               	movlw	17
  7420  0A85  00F5               	movwf	??_LCD_init
  7421  0A86                     u2257:	
  7422  0A86  0BF5               	decfsz	??_LCD_init,f
  7423  0A87  2A86               	goto	u2257
  7424  0A88  0000               	nop
  7425                           
  7426                           ;LCD_8bits.c: 54:     LCD_Cmd(0x08);
  7427  0A89  3008               	movlw	8
  7428  0A8A  120A  158A  20EE  120A  158A  	fcall	_LCD_Cmd
  7429                           
  7430                           ;LCD_8bits.c: 55:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7431  0A8F  3011               	movlw	17
  7432  0A90  00F5               	movwf	??_LCD_init
  7433  0A91                     u2267:	
  7434  0A91  0BF5               	decfsz	??_LCD_init,f
  7435  0A92  2A91               	goto	u2267
  7436  0A93  0000               	nop
  7437                           
  7438                           ;LCD_8bits.c: 56:     LCD_Cmd(0x01);
  7439  0A94  3001               	movlw	1
  7440  0A95  120A  158A  20EE  120A  158A  	fcall	_LCD_Cmd
  7441                           
  7442                           ;LCD_8bits.c: 57:     _delay((unsigned long)((3)*(4000000/4000.0)));
  7443  0A9A  3004               	movlw	4
  7444  0A9B  00F6               	movwf	??_LCD_init+1
  7445  0A9C  30E4               	movlw	228
  7446  0A9D  00F5               	movwf	??_LCD_init
  7447  0A9E                     u2277:	
  7448  0A9E  0BF5               	decfsz	??_LCD_init,f
  7449  0A9F  2A9E               	goto	u2277
  7450  0AA0  0BF6               	decfsz	??_LCD_init+1,f
  7451  0AA1  2A9E               	goto	u2277
  7452  0AA2  0000               	nop
  7453                           
  7454                           ;LCD_8bits.c: 58:     LCD_Cmd(0x06);
  7455  0AA3  3006               	movlw	6
  7456  0AA4  120A  158A  20EE  120A  158A  	fcall	_LCD_Cmd
  7457                           
  7458                           ;LCD_8bits.c: 59:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7459  0AA9  3011               	movlw	17
  7460  0AAA  00F5               	movwf	??_LCD_init
  7461  0AAB                     u2287:	
  7462  0AAB  0BF5               	decfsz	??_LCD_init,f
  7463  0AAC  2AAB               	goto	u2287
  7464  0AAD  0000               	nop
  7465                           
  7466                           ;LCD_8bits.c: 60:     LCD_Cmd(0x0C);
  7467  0AAE  300C               	movlw	12
  7468  0AAF  120A  158A  20EE  120A  158A  	fcall	_LCD_Cmd
  7469                           
  7470                           ;LCD_8bits.c: 61:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7471  0AB4  3011               	movlw	17
  7472  0AB5  00F5               	movwf	??_LCD_init
  7473  0AB6                     u2297:	
  7474  0AB6  0BF5               	decfsz	??_LCD_init,f
  7475  0AB7  2AB6               	goto	u2297
  7476  0AB8  0000               	nop
  7477  0AB9  0008               	return
  7478  0ABA                     __end_of_LCD_init:	
  7479                           
  7480                           	psect	text32
  7481  16F4                     __ptext32:	
  7482 ;; *************** function _LCD_clear *****************
  7483 ;; Defined at:
  7484 ;;		line 32 in file "LCD_8bits.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;		None
  7487 ;; Auto vars:     Size  Location     Type
  7488 ;;		None
  7489 ;; Return value:  Size  Location     Type
  7490 ;;                  1    wreg      void 
  7491 ;; Registers used:
  7492 ;;		wreg, status,2, status,0, pclath, cstack
  7493 ;; Tracked objects:
  7494 ;;		On entry : 0/0
  7495 ;;		On exit  : 0/0
  7496 ;;		Unchanged: 0/0
  7497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7498 ;;      Params:         0       0       0       0       0
  7499 ;;      Locals:         0       0       0       0       0
  7500 ;;      Temps:          2       0       0       0       0
  7501 ;;      Totals:         2       0       0       0       0
  7502 ;;Total ram usage:        2 bytes
  7503 ;; Hardware stack levels used:    1
  7504 ;; Hardware stack levels required when called:    2
  7505 ;; This function calls:
  7506 ;;		_LCD_Cmd
  7507 ;; This function is called by:
  7508 ;;		_SetUp
  7509 ;;		_mostrarLCD
  7510 ;;		_pressBoton1
  7511 ;;		_pressBoton2
  7512 ;; This function uses a non-reentrant model
  7513 ;;
  7514                           
  7515                           
  7516                           ;psect for function _LCD_clear
  7517  16F4                     _LCD_clear:	
  7518                           
  7519                           ;LCD_8bits.c: 33:     LCD_Cmd(0x00);
  7520                           
  7521                           ;incstack = 0
  7522                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  7523  16F4  3000               	movlw	0
  7524  16F5  120A  158A  20EE  160A  118A  	fcall	_LCD_Cmd
  7525                           
  7526                           ;LCD_8bits.c: 34:     LCD_Cmd(0x01);
  7527  16FA  3001               	movlw	1
  7528  16FB  120A  158A  20EE  160A  118A  	fcall	_LCD_Cmd
  7529                           
  7530                           ;LCD_8bits.c: 35:     _delay((unsigned long)((4)*(4000000/4000.0)));
  7531  1700  3006               	movlw	6
  7532  1701  00F6               	movwf	??_LCD_clear+1
  7533  1702  3030               	movlw	48
  7534  1703  00F5               	movwf	??_LCD_clear
  7535  1704                     u2307:	
  7536  1704  0BF5               	decfsz	??_LCD_clear,f
  7537  1705  2F04               	goto	u2307
  7538  1706  0BF6               	decfsz	??_LCD_clear+1,f
  7539  1707  2F04               	goto	u2307
  7540  1708  0000               	nop
  7541  1709  0008               	return
  7542  170A                     __end_of_LCD_clear:	
  7543                           
  7544                           	psect	text33
  7545  17A8                     __ptext33:	
  7546 ;; *************** function _LCD_Create_Char *****************
  7547 ;; Defined at:
  7548 ;;		line 116 in file "LCD_8bits.c"
  7549 ;; Parameters:    Size  Location     Type
  7550 ;;  charnum         1    wreg     unsigned char 
  7551 ;;  chardata        1    5[COMMON] PTR const unsigned char 
  7552 ;;		 -> arrowr_vacio(8), gota(8), termometro(8), arrowr(8), 
  7553 ;;		 -> atilde(8), 
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;  charnum         1    7[COMMON] unsigned char 
  7556 ;;  n               1    8[COMMON] unsigned char 
  7557 ;; Return value:  Size  Location     Type
  7558 ;;                  1    wreg      void 
  7559 ;; Registers used:
  7560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7561 ;; Tracked objects:
  7562 ;;		On entry : 0/0
  7563 ;;		On exit  : 0/0
  7564 ;;		Unchanged: 0/0
  7565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7566 ;;      Params:         1       0       0       0       0
  7567 ;;      Locals:         2       0       0       0       0
  7568 ;;      Temps:          1       0       0       0       0
  7569 ;;      Totals:         4       0       0       0       0
  7570 ;;Total ram usage:        4 bytes
  7571 ;; Hardware stack levels used:    1
  7572 ;; Hardware stack levels required when called:    2
  7573 ;; This function calls:
  7574 ;;		_LCD_Cmd
  7575 ;;		_LCD_Write_Character
  7576 ;; This function is called by:
  7577 ;;		_SetUp
  7578 ;; This function uses a non-reentrant model
  7579 ;;
  7580                           
  7581                           
  7582                           ;psect for function _LCD_Create_Char
  7583  17A8                     _LCD_Create_Char:	
  7584                           
  7585                           ;incstack = 0
  7586                           ; Regs used in _LCD_Create_Char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7587                           ;LCD_Create_Char@charnum stored from wreg
  7588  17A8  00F7               	movwf	LCD_Create_Char@charnum
  7589                           
  7590                           ;LCD_8bits.c: 117:  uint8_t n;;LCD_8bits.c: 118:  charnum &= 0x07;
  7591  17A9  3007               	movlw	7
  7592  17AA  00F6               	movwf	??_LCD_Create_Char
  7593  17AB  0876               	movf	??_LCD_Create_Char,w
  7594  17AC  05F7               	andwf	LCD_Create_Char@charnum,f
  7595                           
  7596                           ;LCD_8bits.c: 119:  LCD_Cmd(0x40 | (charnum << 3));
  7597  17AD  0877               	movf	LCD_Create_Char@charnum,w
  7598  17AE  00F6               	movwf	??_LCD_Create_Char
  7599  17AF  3002               	movlw	2
  7600  17B0                     u1175:	
  7601  17B0  1003               	clrc
  7602  17B1  0DF6               	rlf	??_LCD_Create_Char,f
  7603  17B2  3EFF               	addlw	-1
  7604  17B3  1D03               	skipz
  7605  17B4  2FB0               	goto	u1175
  7606  17B5  1003               	clrc
  7607  17B6  0D76               	rlf	??_LCD_Create_Char,w
  7608  17B7  3840               	iorlw	64
  7609  17B8  120A  158A  20EE  160A  118A  	fcall	_LCD_Cmd
  7610                           
  7611                           ;LCD_8bits.c: 120:  for (n = 0; n < 8; n++)
  7612  17BD  01F8               	clrf	LCD_Create_Char@n
  7613  17BE                     l2997:	
  7614                           
  7615                           ;LCD_8bits.c: 121:   LCD_Write_Character(chardata[n]);
  7616  17BE  0878               	movf	LCD_Create_Char@n,w
  7617  17BF  0775               	addwf	LCD_Create_Char@chardata,w
  7618  17C0  0084               	movwf	4
  7619  17C1  120A  158A  2000  160A  118A  	fcall	stringdir
  7620  17C6  160A  118A  269D  160A  118A  	fcall	_LCD_Write_Character
  7621  17CB  3001               	movlw	1
  7622  17CC  00F6               	movwf	??_LCD_Create_Char
  7623  17CD  0876               	movf	??_LCD_Create_Char,w
  7624  17CE  07F8               	addwf	LCD_Create_Char@n,f
  7625  17CF  3008               	movlw	8
  7626  17D0  0278               	subwf	LCD_Create_Char@n,w
  7627  17D1  1803               	btfsc	3,0
  7628  17D2  0008               	return
  7629  17D3  2FBE               	goto	l2997
  7630  17D4                     __end_of_LCD_Create_Char:	
  7631                           
  7632                           	psect	text34
  7633  169D                     __ptext34:	
  7634 ;; *************** function _LCD_Write_Character *****************
  7635 ;; Defined at:
  7636 ;;		line 64 in file "LCD_8bits.c"
  7637 ;; Parameters:    Size  Location     Type
  7638 ;;  caracter        1    wreg     unsigned char 
  7639 ;; Auto vars:     Size  Location     Type
  7640 ;;  caracter        1    3[COMMON] unsigned char 
  7641 ;; Return value:  Size  Location     Type
  7642 ;;                  1    wreg      void 
  7643 ;; Registers used:
  7644 ;;		wreg
  7645 ;; Tracked objects:
  7646 ;;		On entry : 0/0
  7647 ;;		On exit  : 0/0
  7648 ;;		Unchanged: 0/0
  7649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7650 ;;      Params:         0       0       0       0       0
  7651 ;;      Locals:         1       0       0       0       0
  7652 ;;      Temps:          1       0       0       0       0
  7653 ;;      Totals:         2       0       0       0       0
  7654 ;;Total ram usage:        2 bytes
  7655 ;; Hardware stack levels used:    1
  7656 ;; Hardware stack levels required when called:    1
  7657 ;; This function calls:
  7658 ;;		Nothing
  7659 ;; This function is called by:
  7660 ;;		_display_Uhrzeit
  7661 ;;		_display_Datum
  7662 ;;		_mostrarLCD
  7663 ;;		_pressBoton2
  7664 ;;		_LCD_Write_String
  7665 ;;		_LCD_Create_Char
  7666 ;; This function uses a non-reentrant model
  7667 ;;
  7668                           
  7669                           
  7670                           ;psect for function _LCD_Write_Character
  7671  169D                     _LCD_Write_Character:	
  7672                           
  7673                           ;incstack = 0
  7674                           ; Regs used in _LCD_Write_Character: [wreg]
  7675                           ;LCD_Write_Character@caracter stored from wreg
  7676  169D  00F3               	movwf	LCD_Write_Character@caracter
  7677                           
  7678                           ;LCD_8bits.c: 65:     PORTAbits.RA0 = 1;
  7679  169E  1283               	bcf	3,5	;RP0=0, select bank0
  7680  169F  1303               	bcf	3,6	;RP1=0, select bank0
  7681  16A0  1405               	bsf	5,0	;volatile
  7682                           
  7683                           ;LCD_8bits.c: 67:     PORTD = caracter;
  7684  16A1  0873               	movf	LCD_Write_Character@caracter,w
  7685  16A2  0088               	movwf	8	;volatile
  7686                           
  7687                           ;LCD_8bits.c: 68:     PORTAbits.RA1 = 1;
  7688  16A3  1485               	bsf	5,1	;volatile
  7689                           
  7690                           ;LCD_8bits.c: 69:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  7691  16A4  300D               	movlw	13
  7692  16A5  00F2               	movwf	??_LCD_Write_Character
  7693  16A6                     u2317:	
  7694  16A6  0BF2               	decfsz	??_LCD_Write_Character,f
  7695  16A7  2EA6               	goto	u2317
  7696                           
  7697                           ;LCD_8bits.c: 70:     PORTAbits.RA1 = 0;
  7698  16A8  1283               	bcf	3,5	;RP0=0, select bank0
  7699  16A9  1303               	bcf	3,6	;RP1=0, select bank0
  7700  16AA  1085               	bcf	5,1	;volatile
  7701  16AB  0008               	return
  7702  16AC                     __end_of_LCD_Write_Character:	
  7703                           
  7704                           	psect	text35
  7705  08EE                     __ptext35:	
  7706 ;; *************** function _LCD_Cmd *****************
  7707 ;; Defined at:
  7708 ;;		line 21 in file "LCD_8bits.c"
  7709 ;; Parameters:    Size  Location     Type
  7710 ;;  comando         1    wreg     unsigned char 
  7711 ;; Auto vars:     Size  Location     Type
  7712 ;;  comando         1    4[COMMON] unsigned char 
  7713 ;; Return value:  Size  Location     Type
  7714 ;;                  1    wreg      void 
  7715 ;; Registers used:
  7716 ;;		wreg
  7717 ;; Tracked objects:
  7718 ;;		On entry : 0/0
  7719 ;;		On exit  : 0/0
  7720 ;;		Unchanged: 0/0
  7721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7722 ;;      Params:         0       0       0       0       0
  7723 ;;      Locals:         1       0       0       0       0
  7724 ;;      Temps:          2       0       0       0       0
  7725 ;;      Totals:         3       0       0       0       0
  7726 ;;Total ram usage:        3 bytes
  7727 ;; Hardware stack levels used:    1
  7728 ;; Hardware stack levels required when called:    1
  7729 ;; This function calls:
  7730 ;;		Nothing
  7731 ;; This function is called by:
  7732 ;;		_LCD_clear
  7733 ;;		_LCD_init
  7734 ;;		_LCD_Set_Cursor
  7735 ;;		_LCD_Create_Char
  7736 ;;		_LCD_home
  7737 ;;		_LCD_Shift_links
  7738 ;;		_LCD_Shift_rechts
  7739 ;;		_LCD_Cursor_rechts
  7740 ;;		_LCD_Cursor_links
  7741 ;; This function uses a non-reentrant model
  7742 ;;
  7743                           
  7744                           
  7745                           ;psect for function _LCD_Cmd
  7746  08EE                     _LCD_Cmd:	
  7747                           
  7748                           ;incstack = 0
  7749                           ; Regs used in _LCD_Cmd: [wreg]
  7750                           ;LCD_Cmd@comando stored from wreg
  7751  08EE  00F4               	movwf	LCD_Cmd@comando
  7752                           
  7753                           ;LCD_8bits.c: 22:     PORTAbits.RA0 = 0;
  7754  08EF  1283               	bcf	3,5	;RP0=0, select bank0
  7755  08F0  1303               	bcf	3,6	;RP1=0, select bank0
  7756  08F1  1005               	bcf	5,0	;volatile
  7757                           
  7758                           ;LCD_8bits.c: 23:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7759  08F2  3007               	movlw	7
  7760  08F3  00F3               	movwf	??_LCD_Cmd+1
  7761  08F4  307D               	movlw	125
  7762  08F5  00F2               	movwf	??_LCD_Cmd
  7763  08F6                     u2327:	
  7764  08F6  0BF2               	decfsz	??_LCD_Cmd,f
  7765  08F7  28F6               	goto	u2327
  7766  08F8  0BF3               	decfsz	??_LCD_Cmd+1,f
  7767  08F9  28F6               	goto	u2327
  7768                           
  7769                           ;LCD_8bits.c: 24:     PORTAbits.RA1 = 1;
  7770  08FA  1283               	bcf	3,5	;RP0=0, select bank0
  7771  08FB  1303               	bcf	3,6	;RP1=0, select bank0
  7772  08FC  1485               	bsf	5,1	;volatile
  7773                           
  7774                           ;LCD_8bits.c: 25:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7775  08FD  3007               	movlw	7
  7776  08FE  00F3               	movwf	??_LCD_Cmd+1
  7777  08FF  307D               	movlw	125
  7778  0900  00F2               	movwf	??_LCD_Cmd
  7779  0901                     u2337:	
  7780  0901  0BF2               	decfsz	??_LCD_Cmd,f
  7781  0902  2901               	goto	u2337
  7782  0903  0BF3               	decfsz	??_LCD_Cmd+1,f
  7783  0904  2901               	goto	u2337
  7784                           
  7785                           ;LCD_8bits.c: 26:     PORTD = comando;
  7786  0905  0874               	movf	LCD_Cmd@comando,w
  7787  0906  1283               	bcf	3,5	;RP0=0, select bank0
  7788  0907  1303               	bcf	3,6	;RP1=0, select bank0
  7789  0908  0088               	movwf	8	;volatile
  7790                           
  7791                           ;LCD_8bits.c: 27:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7792  0909  3007               	movlw	7
  7793  090A  00F3               	movwf	??_LCD_Cmd+1
  7794  090B  307D               	movlw	125
  7795  090C  00F2               	movwf	??_LCD_Cmd
  7796  090D                     u2347:	
  7797  090D  0BF2               	decfsz	??_LCD_Cmd,f
  7798  090E  290D               	goto	u2347
  7799  090F  0BF3               	decfsz	??_LCD_Cmd+1,f
  7800  0910  290D               	goto	u2347
  7801                           
  7802                           ;LCD_8bits.c: 28:     PORTAbits.RA1 = 0;
  7803  0911  1283               	bcf	3,5	;RP0=0, select bank0
  7804  0912  1303               	bcf	3,6	;RP1=0, select bank0
  7805  0913  1085               	bcf	5,1	;volatile
  7806                           
  7807                           ;LCD_8bits.c: 29:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7808  0914  3007               	movlw	7
  7809  0915  00F3               	movwf	??_LCD_Cmd+1
  7810  0916  307D               	movlw	125
  7811  0917  00F2               	movwf	??_LCD_Cmd
  7812  0918                     u2357:	
  7813  0918  0BF2               	decfsz	??_LCD_Cmd,f
  7814  0919  2918               	goto	u2357
  7815  091A  0BF3               	decfsz	??_LCD_Cmd+1,f
  7816  091B  2918               	goto	u2357
  7817  091C  0008               	return
  7818  091D                     __end_of_LCD_Cmd:	
  7819                           
  7820                           	psect	text36
  7821  07BF                     __ptext36:	
  7822 ;; *************** function _I2C_Master_Init *****************
  7823 ;; Defined at:
  7824 ;;		line 16 in file "I2C.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;  c               4    6[BANK0 ] const unsigned long 
  7827 ;; Auto vars:     Size  Location     Type
  7828 ;;		None
  7829 ;; Return value:  Size  Location     Type
  7830 ;;                  1    wreg      void 
  7831 ;; Registers used:
  7832 ;;		wreg, status,2, status,0, pclath, cstack
  7833 ;; Tracked objects:
  7834 ;;		On entry : 0/0
  7835 ;;		On exit  : 0/0
  7836 ;;		Unchanged: 0/0
  7837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7838 ;;      Params:         0       4       0       0       0
  7839 ;;      Locals:         0       0       0       0       0
  7840 ;;      Temps:          0       4       0       0       0
  7841 ;;      Totals:         0       8       0       0       0
  7842 ;;Total ram usage:        8 bytes
  7843 ;; Hardware stack levels used:    1
  7844 ;; Hardware stack levels required when called:    2
  7845 ;; This function calls:
  7846 ;;		___lldiv
  7847 ;; This function is called by:
  7848 ;;		_SetUp
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852                           
  7853                           ;psect for function _I2C_Master_Init
  7854  07BF                     _I2C_Master_Init:	
  7855                           
  7856                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  7857                           
  7858                           ;incstack = 0
  7859                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  7860  07BF  3028               	movlw	40
  7861  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  7862  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  7863  07C2  0094               	movwf	20	;volatile
  7864                           
  7865                           ;I2C.c: 19:     SSPCON2 = 0;
  7866  07C3  1683               	bsf	3,5	;RP0=1, select bank1
  7867  07C4  1303               	bcf	3,6	;RP1=0, select bank1
  7868  07C5  0191               	clrf	17	;volatile
  7869                           
  7870                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  7871  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  7872  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  7873  07C8  0826               	movf	I2C_Master_Init@c,w
  7874  07C9  00AA               	movwf	??_I2C_Master_Init
  7875  07CA  0827               	movf	I2C_Master_Init@c+1,w
  7876  07CB  00AB               	movwf	??_I2C_Master_Init+1
  7877  07CC  0828               	movf	I2C_Master_Init@c+2,w
  7878  07CD  00AC               	movwf	??_I2C_Master_Init+2
  7879  07CE  0829               	movf	I2C_Master_Init@c+3,w
  7880  07CF  00AD               	movwf	??_I2C_Master_Init+3
  7881  07D0  3002               	movlw	2
  7882  07D1                     u1815:	
  7883  07D1  1003               	clrc
  7884  07D2  0DAA               	rlf	??_I2C_Master_Init,f
  7885  07D3  0DAB               	rlf	??_I2C_Master_Init+1,f
  7886  07D4  0DAC               	rlf	??_I2C_Master_Init+2,f
  7887  07D5  0DAD               	rlf	??_I2C_Master_Init+3,f
  7888  07D6  3EFF               	addlw	-1
  7889  07D7  1D03               	skipz
  7890  07D8  2FD1               	goto	u1815
  7891  07D9  082D               	movf	??_I2C_Master_Init+3,w
  7892  07DA  00F5               	movwf	___lldiv@divisor+3
  7893  07DB  082C               	movf	??_I2C_Master_Init+2,w
  7894  07DC  00F4               	movwf	___lldiv@divisor+2
  7895  07DD  082B               	movf	??_I2C_Master_Init+1,w
  7896  07DE  00F3               	movwf	___lldiv@divisor+1
  7897  07DF  082A               	movf	??_I2C_Master_Init,w
  7898  07E0  00F2               	movwf	___lldiv@divisor
  7899  07E1  3000               	movlw	0
  7900  07E2  00F9               	movwf	___lldiv@dividend+3
  7901  07E3  303D               	movlw	61
  7902  07E4  00F8               	movwf	___lldiv@dividend+2
  7903  07E5  3009               	movlw	9
  7904  07E6  00F7               	movwf	___lldiv@dividend+1
  7905  07E7  3000               	movlw	0
  7906  07E8  00F6               	movwf	___lldiv@dividend
  7907  07E9  120A  158A  21F3   	fcall	___lldiv
  7908  07EC  0872               	movf	?___lldiv,w
  7909  07ED  3EFF               	addlw	255
  7910  07EE  1683               	bsf	3,5	;RP0=1, select bank1
  7911  07EF  1303               	bcf	3,6	;RP1=0, select bank1
  7912  07F0  0093               	movwf	19	;volatile
  7913                           
  7914                           ;I2C.c: 21:     SSPSTAT = 0;
  7915  07F1  0194               	clrf	20	;volatile
  7916                           
  7917                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  7918  07F2  1587               	bsf	7,3	;volatile
  7919                           
  7920                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  7921  07F3  1607               	bsf	7,4	;volatile
  7922  07F4  0008               	return
  7923  07F5                     __end_of_I2C_Master_Init:	
  7924                           
  7925                           	psect	text37
  7926  09F3                     __ptext37:	
  7927 ;; *************** function ___lldiv *****************
  7928 ;; Defined at:
  7929 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  7930 ;; Parameters:    Size  Location     Type
  7931 ;;  divisor         4    2[COMMON] unsigned long 
  7932 ;;  dividend        4    6[COMMON] unsigned long 
  7933 ;; Auto vars:     Size  Location     Type
  7934 ;;  quotient        4    1[BANK0 ] unsigned long 
  7935 ;;  counter         1    5[BANK0 ] unsigned char 
  7936 ;; Return value:  Size  Location     Type
  7937 ;;                  4    2[COMMON] unsigned long 
  7938 ;; Registers used:
  7939 ;;		wreg, status,2, status,0
  7940 ;; Tracked objects:
  7941 ;;		On entry : 0/0
  7942 ;;		On exit  : 0/0
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7945 ;;      Params:         8       0       0       0       0
  7946 ;;      Locals:         0       5       0       0       0
  7947 ;;      Temps:          0       1       0       0       0
  7948 ;;      Totals:         8       6       0       0       0
  7949 ;;Total ram usage:       14 bytes
  7950 ;; Hardware stack levels used:    1
  7951 ;; Hardware stack levels required when called:    1
  7952 ;; This function calls:
  7953 ;;		Nothing
  7954 ;; This function is called by:
  7955 ;;		_I2C_Master_Init
  7956 ;; This function uses a non-reentrant model
  7957 ;;
  7958                           
  7959                           
  7960                           ;psect for function ___lldiv
  7961  09F3                     ___lldiv:	
  7962                           
  7963                           ;incstack = 0
  7964                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7965  09F3  3000               	movlw	0
  7966  09F4  1283               	bcf	3,5	;RP0=0, select bank0
  7967  09F5  1303               	bcf	3,6	;RP1=0, select bank0
  7968  09F6  00A4               	movwf	___lldiv@quotient+3
  7969  09F7  3000               	movlw	0
  7970  09F8  00A3               	movwf	___lldiv@quotient+2
  7971  09F9  3000               	movlw	0
  7972  09FA  00A2               	movwf	___lldiv@quotient+1
  7973  09FB  3000               	movlw	0
  7974  09FC  00A1               	movwf	___lldiv@quotient
  7975  09FD  0875               	movf	___lldiv@divisor+3,w
  7976  09FE  0474               	iorwf	___lldiv@divisor+2,w
  7977  09FF  0473               	iorwf	___lldiv@divisor+1,w
  7978  0A00  0472               	iorwf	___lldiv@divisor,w
  7979  0A01  1903               	skipnz
  7980  0A02  2A4A               	goto	l4261
  7981  0A03  01A5               	clrf	___lldiv@counter
  7982  0A04  0AA5               	incf	___lldiv@counter,f
  7983  0A05                     l4247:	
  7984  0A05  1BF5               	btfsc	___lldiv@divisor+3,7
  7985  0A06  2A15               	goto	l4249
  7986  0A07  3001               	movlw	1
  7987  0A08  00A0               	movwf	??___lldiv
  7988  0A09                     u1755:	
  7989  0A09  1003               	clrc
  7990  0A0A  0DF2               	rlf	___lldiv@divisor,f
  7991  0A0B  0DF3               	rlf	___lldiv@divisor+1,f
  7992  0A0C  0DF4               	rlf	___lldiv@divisor+2,f
  7993  0A0D  0DF5               	rlf	___lldiv@divisor+3,f
  7994  0A0E  0BA0               	decfsz	??___lldiv,f
  7995  0A0F  2A09               	goto	u1755
  7996  0A10  3001               	movlw	1
  7997  0A11  00A0               	movwf	??___lldiv
  7998  0A12  0820               	movf	??___lldiv,w
  7999  0A13  07A5               	addwf	___lldiv@counter,f
  8000  0A14  2A05               	goto	l4247
  8001  0A15                     l4249:	
  8002  0A15  3001               	movlw	1
  8003  0A16  00A0               	movwf	??___lldiv
  8004  0A17                     u1775:	
  8005  0A17  1003               	clrc
  8006  0A18  0DA1               	rlf	___lldiv@quotient,f
  8007  0A19  0DA2               	rlf	___lldiv@quotient+1,f
  8008  0A1A  0DA3               	rlf	___lldiv@quotient+2,f
  8009  0A1B  0DA4               	rlf	___lldiv@quotient+3,f
  8010  0A1C  0BA0               	decfsz	??___lldiv,f
  8011  0A1D  2A17               	goto	u1775
  8012  0A1E  0875               	movf	___lldiv@divisor+3,w
  8013  0A1F  0279               	subwf	___lldiv@dividend+3,w
  8014  0A20  1D03               	skipz
  8015  0A21  2A2C               	goto	u1785
  8016  0A22  0874               	movf	___lldiv@divisor+2,w
  8017  0A23  0278               	subwf	___lldiv@dividend+2,w
  8018  0A24  1D03               	skipz
  8019  0A25  2A2C               	goto	u1785
  8020  0A26  0873               	movf	___lldiv@divisor+1,w
  8021  0A27  0277               	subwf	___lldiv@dividend+1,w
  8022  0A28  1D03               	skipz
  8023  0A29  2A2C               	goto	u1785
  8024  0A2A  0872               	movf	___lldiv@divisor,w
  8025  0A2B  0276               	subwf	___lldiv@dividend,w
  8026  0A2C                     u1785:	
  8027  0A2C  1C03               	skipc
  8028  0A2D  2A3D               	goto	l4257
  8029  0A2E  0872               	movf	___lldiv@divisor,w
  8030  0A2F  02F6               	subwf	___lldiv@dividend,f
  8031  0A30  0873               	movf	___lldiv@divisor+1,w
  8032  0A31  1C03               	skipc
  8033  0A32  0F73               	incfsz	___lldiv@divisor+1,w
  8034  0A33  02F7               	subwf	___lldiv@dividend+1,f
  8035  0A34  0874               	movf	___lldiv@divisor+2,w
  8036  0A35  1C03               	skipc
  8037  0A36  0F74               	incfsz	___lldiv@divisor+2,w
  8038  0A37  02F8               	subwf	___lldiv@dividend+2,f
  8039  0A38  0875               	movf	___lldiv@divisor+3,w
  8040  0A39  1C03               	skipc
  8041  0A3A  0F75               	incfsz	___lldiv@divisor+3,w
  8042  0A3B  02F9               	subwf	___lldiv@dividend+3,f
  8043  0A3C  1421               	bsf	___lldiv@quotient,0
  8044  0A3D                     l4257:	
  8045  0A3D  3001               	movlw	1
  8046  0A3E                     u1795:	
  8047  0A3E  1003               	clrc
  8048  0A3F  0CF5               	rrf	___lldiv@divisor+3,f
  8049  0A40  0CF4               	rrf	___lldiv@divisor+2,f
  8050  0A41  0CF3               	rrf	___lldiv@divisor+1,f
  8051  0A42  0CF2               	rrf	___lldiv@divisor,f
  8052  0A43  3EFF               	addlw	-1
  8053  0A44  1D03               	skipz
  8054  0A45  2A3E               	goto	u1795
  8055  0A46  3001               	movlw	1
  8056  0A47  02A5               	subwf	___lldiv@counter,f
  8057  0A48  1D03               	btfss	3,2
  8058  0A49  2A15               	goto	l4249
  8059  0A4A                     l4261:	
  8060  0A4A  0824               	movf	___lldiv@quotient+3,w
  8061  0A4B  00F5               	movwf	?___lldiv+3
  8062  0A4C  0823               	movf	___lldiv@quotient+2,w
  8063  0A4D  00F4               	movwf	?___lldiv+2
  8064  0A4E  0822               	movf	___lldiv@quotient+1,w
  8065  0A4F  00F3               	movwf	?___lldiv+1
  8066  0A50  0821               	movf	___lldiv@quotient,w
  8067  0A51  00F2               	movwf	?___lldiv
  8068  0A52  0008               	return
  8069  0A53                     __end_of___lldiv:	
  8070                           
  8071                           	psect	text38
  8072  16AC                     __ptext38:	
  8073 ;; *************** function _ISR *****************
  8074 ;; Defined at:
  8075 ;;		line 136 in file "main_Master.c"
  8076 ;; Parameters:    Size  Location     Type
  8077 ;;		None
  8078 ;; Auto vars:     Size  Location     Type
  8079 ;;		None
  8080 ;; Return value:  Size  Location     Type
  8081 ;;                  1    wreg      void 
  8082 ;; Registers used:
  8083 ;;		wreg, status,2, status,0
  8084 ;; Tracked objects:
  8085 ;;		On entry : 0/0
  8086 ;;		On exit  : 0/0
  8087 ;;		Unchanged: 0/0
  8088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8089 ;;      Params:         0       0       0       0       0
  8090 ;;      Locals:         0       0       0       0       0
  8091 ;;      Temps:          2       0       0       0       0
  8092 ;;      Totals:         2       0       0       0       0
  8093 ;;Total ram usage:        2 bytes
  8094 ;; Hardware stack levels used:    1
  8095 ;; This function calls:
  8096 ;;		Nothing
  8097 ;; This function is called by:
  8098 ;;		Interrupt level 1
  8099 ;; This function uses a non-reentrant model
  8100 ;;
  8101                           
  8102                           
  8103                           ;psect for function _ISR
  8104  16AC                     _ISR:	
  8105                           
  8106                           ;main_Master.c: 137:     if (INTCONbits.RBIF == 1 && INTCONbits.RBIE == 1){
  8107  16AC  180B               	btfsc	11,0	;volatile
  8108  16AD  1D8B               	btfss	11,3	;volatile
  8109  16AE  2EB6               	goto	i1l153
  8110                           
  8111                           ;main_Master.c: 138:         INTCONbits.RBIF = 0;
  8112  16AF  100B               	bcf	11,0	;volatile
  8113                           
  8114                           ;main_Master.c: 139:         if (banderaBoton == 0){
  8115  16B0  087B               	movf	_banderaBoton,w
  8116  16B1  1D03               	btfss	3,2
  8117  16B2  2EB6               	goto	i1l153
  8118                           
  8119                           ;main_Master.c: 140:             banderaBoton = 1;
  8120  16B3  01FB               	clrf	_banderaBoton
  8121  16B4  0AFB               	incf	_banderaBoton,f
  8122                           
  8123                           ;main_Master.c: 141:             INTCONbits.RBIE = 0;
  8124  16B5  118B               	bcf	11,3	;volatile
  8125  16B6                     i1l153:	
  8126  16B6  0871               	movf	??_ISR+1,w
  8127  16B7  008A               	movwf	10
  8128  16B8  0E70               	swapf	??_ISR^(0+4294967168),w
  8129  16B9  0083               	movwf	3
  8130  16BA  0EFE               	swapf	126,f
  8131  16BB  0E7E               	swapf	126,w
  8132  16BC  0009               	retfie
  8133  16BD                     __end_of_ISR:	
  8134  007E                     btemp	set	126	;btemp
  8135  007E                     wtemp0	set	126
  8136                           
  8137                           	psect	intentry
  8138  0004                     __pintentry:	
  8139                           ;incstack = 0
  8140                           ; Regs used in _ISR: [wreg+status,2+status,0]
  8141                           
  8142  0004                     interrupt_function:	
  8143  007E                     saved_w	set	btemp
  8144  0004  00FE               	movwf	btemp
  8145  0005  0E03               	swapf	3,w
  8146  0006  00F0               	movwf	??_ISR
  8147  0007  080A               	movf	10,w
  8148  0008  00F1               	movwf	??_ISR+1
  8149  0009  160A  118A  2EAC   	ljmp	_ISR


Data Sizes:
    Strings     139
    Constant    40
    Data        10
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     35      64
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Create_Char@chardata	PTR const unsigned char  size(1) Largest target is 8
		 -> arrowr_vacio(CODE[8]), gota(CODE[8]), termometro(CODE[8]), arrowr(CODE[8]), 
		 -> atilde(CODE[8]), 

    LCD_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_17(CODE[6]), STR_16(CODE[13]), STR_15(CODE[3]), STR_14(CODE[13]), 
		 -> STR_13(CODE[5]), STR_12(CODE[3]), STR_11(CODE[5]), STR_10(CODE[3]), 
		 -> STR_9(CODE[13]), STR_8(CODE[4]), STR_7(CODE[9]), STR_6(CODE[14]), 
		 -> STR_5(CODE[12]), STR_4(CODE[11]), STR_3(CODE[13]), STR_2(CODE[17]), 
		 -> STR_1(CODE[3]), 

    sp__uint_to_array	PTR unsigned int  size(1) Largest target is 6
		 -> uint_to_array@resultado(BANK0[6]), 

    obj_array	PTR unsigned int  size(1) Largest target is 6
		 -> NULL(NULL[0]), uint_to_array@resultado(BANK0[6]), 


Critical Paths under _main in COMMON

    _pressBoton2->_LCD_Set_Cursor
    _pressBoton1->_LCD_clear
    _mostrarLCD->_LCD_Set_Cursor
    _uint_to_array->___awdiv
    _display_Uhrzeit->_LCD_Set_Cursor
    _display_Datum->_LCD_Set_Cursor
    _LCD_Write_String->_LCD_Write_Character
    _LCD_Set_Cursor->_LCD_Cmd
    _inclinacion_->_init_ADC
    _get_temperatura_obj->_init_ADC
    _get_temperatura->_init_ADC
    _get_Time->_BCD_a_DEC
    _BCD_a_DEC->___bmul
    _Zeit_Datum_Set->_DEC_a_BCD
    _I2C_Master_Write->_DEC_a_BCD
    _DEC_a_BCD->___awdiv
    _DEC_a_BCD->___awmod
    ___awdiv->___wmul
    _LCD_init->_LCD_Cmd
    _LCD_clear->_LCD_Cmd
    _LCD_Create_Char->_LCD_Cmd
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_mostrarLCD
    _mostrarLCD->_uint_to_array
    _uint_to_array->___awdiv
    _display_Uhrzeit->___awdiv
    _display_Datum->___awdiv
    _get_dis->_I2C_Master_Write
    _get_Time->_I2C_Master_Write
    _SetUp->_Zeit_Datum_Set
    _Zeit_Datum_Set->_I2C_Master_Write
    _I2C_Master_Write->_DEC_a_BCD
    _DEC_a_BCD->___awdiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   72940
                                             33 BANK0      2     2      0
                              _SetUp
                           _get_Time
                            _get_dis
                    _get_temperatura
                _get_temperatura_obj
                       _inclinacion_
                         _mostrarLCD
                        _pressBoton1
                        _pressBoton2
                       _uartTX_Write
 ---------------------------------------------------------------------------------
 (1) _uartTX_Write                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pressBoton2                                          2     2      0    2383
                                              0 BANK0      2     2      0
                     _LCD_Set_Cursor
                _LCD_Write_Character
                          _LCD_clear
 ---------------------------------------------------------------------------------
 (1) _pressBoton1                                          2     2      0      22
                                              7 COMMON     2     2      0
                          _LCD_clear
 ---------------------------------------------------------------------------------
 (1) _mostrarLCD                                          10    10      0   35362
                                             23 BANK0     10    10      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                          _LCD_clear
                            ___awdiv
                            ___awmod
                      _display_Datum
                    _display_Uhrzeit
                      _uint_to_array
 ---------------------------------------------------------------------------------
 (2) _uint_to_array                                       15    15      0    3523
                                              8 BANK0     15    15      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _display_Uhrzeit                                     11    10      1    7499
                                              8 BANK0     11    10      1
                     _LCD_Set_Cursor
                _LCD_Write_Character
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _display_Datum                                       11    10      1    8172
                                              8 BANK0     11    10      1
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     3     3      0     673
                                              4 COMMON     3     3      0
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       5     4      1    2339
                                              5 COMMON     5     4      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _inclinacion_                                         2     2      0      22
                                              5 COMMON     2     2      0
                           _init_ADC
 ---------------------------------------------------------------------------------
 (1) _get_temperatura_obj                                  2     2      0      22
                                              5 COMMON     2     2      0
                           _init_ADC
 ---------------------------------------------------------------------------------
 (1) _get_temperatura                                      2     2      0      22
                                              5 COMMON     2     2      0
                           _init_ADC
 ---------------------------------------------------------------------------------
 (2) _init_ADC                                             3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _get_dis                                              2     2      0   10403
                                             15 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _get_Time                                             1     1      0   10615
                                             15 BANK0      1     1      0
                          _BCD_a_DEC
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2    2401
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _BCD_a_DEC                                            4     4      0     212
                                              6 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SetUp                                                2     2      0   14067
                                             17 BANK0      2     2      0
                    _I2C_Master_Init
                    _LCD_Create_Char
                          _LCD_clear
                           _LCD_init
                         _OSC_config
                     _Zeit_Datum_Set
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Zeit_Datum_Set                                       2     2      0   12846
                                             15 BANK0      2     2      0
                          _DEC_a_BCD
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    8002
                                             13 BANK0      2     0      2
                          _DEC_a_BCD (ARG)
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DEC_a_BCD                                            6     6      0    4844
                                              9 COMMON     1     1      0
                                              8 BANK0      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    2205
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    2577
                                              8 COMMON     1     1      0
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _OSC_config                                           4     0      4      98
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             2     2      0      22
                                              5 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            2     2      0      22
                                              5 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Create_Char                                      4     3      1     537
                                              5 COMMON     4     3      1
                            _LCD_Cmd
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Character                                  2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetUp
     _I2C_Master_Init
       ___lldiv
     _LCD_Create_Char
       _LCD_Cmd
       _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
     _LCD_init
       _LCD_Cmd
     _OSC_config
     _Zeit_Datum_Set
       _DEC_a_BCD
         ___awdiv
           ___wmul (ARG)
         ___awmod
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _DEC_a_BCD (ARG)
           ___awdiv
             ___wmul (ARG)
           ___awmod
         _I2C_Master_Wait (ARG)
     _uart_init
   _get_Time
     _BCD_a_DEC
       ___bmul
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _DEC_a_BCD (ARG)
         ___awdiv
           ___wmul (ARG)
         ___awmod
       _I2C_Master_Wait (ARG)
   _get_dis
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _DEC_a_BCD (ARG)
         ___awdiv
           ___wmul (ARG)
         ___awmod
       _I2C_Master_Wait (ARG)
   _get_temperatura
     _init_ADC
   _get_temperatura_obj
     _init_ADC
   _inclinacion_
     _init_ADC
   _mostrarLCD
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _DEC_a_BCD (ARG)
         ___awdiv
           ___wmul (ARG)
         ___awmod
       _I2C_Master_Wait (ARG)
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     _LCD_Write_String
       _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
     ___awdiv
       ___wmul (ARG)
     ___awmod
     _display_Datum
       _LCD_Set_Cursor
         _LCD_Cmd
       _LCD_Write_Character
       _LCD_Write_String
         _LCD_Write_Character
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _display_Uhrzeit
       _LCD_Set_Cursor
         _LCD_Cmd
       _LCD_Write_Character
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _uint_to_array
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _pressBoton1
     _LCD_clear
       _LCD_Cmd
   _pressBoton2
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
   _uartTX_Write

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     23      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4C      12        0.0%
ABS                  0      0      4C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon May 04 02:09:51 2020

                           pc 0002                ___bmul@product 0074       __end_of_LCD_Create_Char 17D4  
                 __CFG_CP$OFF 0000                  ___awdiv@sign 0025            __size_of_BCD_a_DEC 0016  
                          fsr 0004           ___wmul@multiplicand 0074            mostrarLCD@pantalla 003A  
                         l180 0B2F                           l181 0B98                           l190 0B40  
                         l182 0B30                           l191 0B43                           l183 0B32  
                         l192 0B46                           l184 0B34                           l193 0B49  
                         l185 0B36                           l370 08B9                           l194 0B4C  
                         l186 0B38                           l195 0B50                           l187 0B3A  
                         l196 0B54                           l188 0B3C                           l197 0B59  
                         l189 0B3E                           l198 0BA2                           l623 176F  
                         l388 17F7                           l389 17FA                           l497 1692  
                         _GIE 005F                  __CFG_CPD$OFF 0000                           _ISR 16AC  
          __size_of_DEC_a_BCD 0030       __end_of_display_Uhrzeit 07BF                           _dia 005D  
                         _mes 005B                           _min 005F                           _seg 0054  
                         fsr0 0004                           indf 0000                  ___awmod@sign 0078  
              ?_display_Datum 0028  __size_of_LCD_Write_Character 000F               __end_of_LCD_Cmd 091D  
                __CFG_LVP$OFF 0000                          ?_ISR 0070                _LCD_Set_Cursor 08C2  
                        l3055 0B5E                          l4211 095E                          l3411 0AC5  
                        l4221 0972                          l4207 0957                          l3423 0ADB  
                        l4233 0993                          l4225 0980                          l2801 08D8  
                        l3417 0AD0                          l3441 0B13                          l4163 09A4  
                        l4219 0964                          l2803 08DD                          l4411 00D8  
                        l4261 0A4A                          l4181 09C5                          l4229 098B  
                        l5141 08E5                          l3429 0AE6                          l4247 0A05  
                        l5151 0DA3                          l4191 09E6                          l5143 0B66  
                        l2815 1789                          l2823 1767                          l4431 014F  
                        l3439 0B00                          l3447 0B17                          l5135 0E70  
                        l4257 0A3D                          l4249 0A15                          l5153 0DAD  
                        l5145 0D85                          l5161 0DD5                          l4169 09AF  
                        l2841 16C5                          l4513 02D4                          l4441 0165  
                        l4425 011F                          l5137 0B08                          l5155 0DB7  
                        l5171 0DB2                          l5147 0D8F                          l5163 0D8A  
                        l4195 09EE                          l4187 09DB                          l4179 09B7  
                        l5139 03FB                          l4531 0346                          l4507 02BF  
                        l4419 00FD                          l4611 0E51                          l4603 0E34  
                        l5157 0DC1                          l5173 0DBC                          l5149 0D99  
                        l5165 0D94                          l2837 16BF                          l4525 0325  
                        l4437 015C                          l5159 0DCB                          l5175 0DC6  
                        l5167 0D9E                          l4519 02FB                          l4615 0E5D  
                        l5177 0DD0                          l5169 0DA8                          l2881 0D58  
                        l2793 08C4                          l4473 01F7                          l4457 019B  
                        l4385 002D                          l4617 0E68                          l4625 0E87  
                        l2891 0D79                          l2883 0D5F                          l2875 0D45  
                        l4491 0264                          l4387 0042                          l4619 0E81  
                        l2885 0D66                          l2877 0D4A                          l2893 0D80  
                        l2797 08CE                          l4477 0209                          l4397 007C  
                        l2887 0D6D                          l2879 0D51                          l4567 03E4  
                        l4495 0279                          l4639 0F52                          l2889 0D74  
                        l4497 027E                          l4569 03F3                          l4585 0DFB  
                        l4595 0E17                          l4587 0DFD                          l2997 17BE  
                        STR_1 08B3                          STR_2 082E                          STR_3 0867  
                        STR_4 088D                          STR_5 0881                          STR_6 083F  
                        STR_7 0898                          STR_8 08AC                          STR_9 085A  
                        u1055 1770                          u2007 0F58                          u1065 1777  
                        u2017 0F67                          u1235 1715                          u2107 0AEF  
                        u2027 0F77                          _IOCB 0096                          u2117 0B22  
                        u2037 0F87                          u1175 17B0                          u2207 0D3E  
                        u2127 037C                          u2047 0F97                          u2217 0A57  
                        u2137 03AA                          u2057 0E10                          u2307 1704  
                        u2227 0A66                          u2147 03D8                          u2067 0E2D  
                        u2317 16A6                          u2237 0A72                          u1605 09D2  
                        u2157 175F                          u2077 0E4A                          u2327 08F6  
                        u2247 0A7C                          u1615 09DC                          u2167 1748  
                        u2087 0E63                          u2337 0901                          u2257 0A86  
                        u1705 0981                          u2177 1731                          u2097 0E94  
                        u2347 090D                          u2267 0A91                          u2187 0BCE  
                        u1820 0C2A                          u2357 0918                          u2277 0A9E  
                        u2197 0BFC                          u1815 07D1                          u2287 0AAB  
                        u1575 09BA                          u1735 0935                          u2297 0AB6  
                        u1755 0A09                          u1595 09C6                          u1675 0967  
                        u1775 0A17                          u1695 0978                          u1785 0A2C  
                        u1795 0A3E                          _PEIE 005E                          _WPUB 0095  
                __CFG_WRT$OFF 0000                          _accZ 0049             ?_LCD_Write_String 0070  
                        _jahr 005A                          _main 0F4D                          _gota 0806  
                        _hora 005E                          btemp 007E                 _uint_to_array 0C23  
                        start 000C            ??_LCD_Write_String 0074                 __CFG_IESO$OFF 0000  
          __size_of_LCD_clear 0016           mostrarLCD@uni_atras 003D             ___bmul@multiplier 0075  
                       ??_ISR 0070              ?_I2C_Master_Init 0026              ?_I2C_Master_Read 0072  
            ?_I2C_Master_Wait 0070              ?_I2C_Master_Stop 0070              __end_of_LCD_init 0ABA  
                       ?_main 0070               __end_of___awdiv 09F3               DEC_a_BCD@numDEC 0079  
                       STR_10 08B6                         STR_11 08A7                         STR_12 08B6  
                       STR_13 08A7                         STR_14 0874                         STR_15 08B0  
                       STR_16 084D                         STR_17 08A1                 __CFG_WDTE$OFF 0000  
             __end_of___awmod 0998                         _ANSEL 0188               __end_of___lldiv 0A53  
             ___awdiv@divisor 0020                         i1l153 16B6               ___awdiv@counter 0024  
                       _RCREG 001A                         _SPBRG 0099                         _PORTA 0005  
                       _PORTD 0008                         _TRISA 0085                         _TRISB 0086  
                       _TRISD 0088                         _SSPIE 0463                         _TRISE 0089  
                       _SSPIF 0063                         _TXREG 0019              ?_get_temperatura 0070  
                _sprintbuffer 004B                __CFG_FCMEN$OFF 0000        __end_of_LCD_Set_Cursor 08EE  
                       _SetUp 0CA8               __end_of_get_dis 0C23                         _bajar 004E  
                       _ancho 004C                         _datum 005C                         _largo 004D  
              __CFG_BOREN$OFF 0000                   ?_OSC_config 0072                         pclath 000A  
           __end_of_BCD_a_DEC 1720                ?_uint_to_array 0070                         status 0003  
               ?_inclinacion_ 0070                         wtemp0 007E             __end_of_DEC_a_BCD 094D  
              __CFG_MCLRE$OFF 0000          mostrarLCD@uni_frente 003C               __initialization 000F  
                __end_of_main 1000                  __end_of_gota 080E              ?_LCD_Create_Char 0075  
                      ??_main 0041                     ??_LCD_Cmd 0072               ??_display_Datum 0029  
            ?_display_Uhrzeit 0028             ?_I2C_Master_Start 0070             ?_I2C_Master_Write 002D  
           __end_of_LCD_clear 170A                        ?_SetUp 0070               ?_LCD_Set_Cursor 0075  
          ??_I2C_Master_Start 0072            ??_I2C_Master_Write 007A                        _ADRESH 001E  
                _banderaPUSH1 007A                  _banderaPUSH2 004F              ___awdiv@dividend 0022  
                      _ANSELH 0189                  _banderaBoton 007B                ??_inclinacion_ 0075  
                      _SPBRGH 009A                        _SSPADD 0093                        _TRISC3 043B  
                      _TRISC4 043C            uint_to_array@F1343 0043                        _SSPCON 0014  
                      _SSPBUF 0013              ??_Zeit_Datum_Set 002F   LCD_Write_Character@caracter 0073  
              __CFG_PWRTE$OFF 0000              __end_of_get_Time 0615                        ___bmul 16BD  
                      ___wmul 1765                     ??___awdiv 0078                     ??___awmod 0076  
                   ??___lldiv 0020              __end_of_init_ADC 0BA5                        _atilde 0816  
                      _arrowr 0826                        _estado 0055              ___awdiv@quotient 0026  
             ___awmod@divisor 0072           __size_of_OSC_config 00AC               ___awmod@counter 0077  
                   ??_get_dis 002F                  ?_pressBoton1 0070                  ?_pressBoton2 0070  
                      saved_w 007E               ??_uint_to_array 0028       __end_of__initialization 0025  
                   ?_LCD_init 0070           ___bmul@multiplicand 0072               init_ADC@channel 0074  
              __pcstackCOMMON 0070                 __end_of_SetUp 0D44           _LCD_Write_Character 169D  
                __pidataBANK0 07F5  __size_of_get_temperatura_obj 0017          display_Datum@columna 0028  
              _OPTION_REGbits 0081               _temperatura_obj 0051                       ??_SetUp 0031  
        ?_LCD_Write_Character 0070                LCD_Cmd@comando 0074                    __pbssBANK0 0043  
   LCD_Set_Cursor@corrimiento 0079                    ??_LCD_init 0075          __end_of_arrowr_vacio 0826  
                  __pmaintext 0F4D                       ?___bmul 0072                       ?___wmul 0072  
                  __pintentry 0004     __size_of_LCD_Write_String 0022          __end_of_inclinacion_ 1765  
        OSC_config@frecuencia 0072           display_Uhrzeit@fila 002C            __size_of_uart_init 0015  
                     _LCD_Cmd 08EE         ??_LCD_Write_Character 0072                     ?_get_Time 0070  
                     _SSPCON2 0091                       _SSPSTAT 0094                    __stringtab 0800  
                ??_OSC_config 0076                     ?_init_ADC 0070                     _BCD_a_DEC 170A  
               ?_uartTX_Write 0070        uint_to_array@resultado 0030               __size_of___bmul 0011  
                   _DEC_a_BCD 091D                       ___awdiv 0998                       ___awmod 094D  
                     ___lldiv 09F3               __size_of___wmul 0021             display_Datum@fila 002C  
                     _d_atras 0056              ??_LCD_Set_Cursor 0076                       __ptext1 168D  
                     __ptext2 0DF0                       __ptext3 0ABA                       __ptext4 0029  
                     __ptext5 0C23                       __ptext6 1765                       __ptext7 06ED  
                     __ptext8 0615                       __ptext9 1786                       _get_dis 0BA5  
          __end_of_OSC_config 0DF0                  __size_of_ISR 0011           uint_to_array@numero 0036  
                     _humedad 0059              ___awmod@dividend 0074      __size_of_I2C_Master_Init 0036  
    __size_of_I2C_Master_Read 002C      __size_of_I2C_Master_Wait 0009      __size_of_I2C_Master_Stop 0007  
        __size_of_pressBoton1 006F          __size_of_pressBoton2 00AC                    ??_get_Time 002F  
                     clrloop0 1696                     _LCD_clear 16F4          end_of_initialization 0025  
                  ??_init_ADC 0072      __size_of_get_temperatura 0017                ??_uartTX_Write 0072  
   __size_of_I2C_Master_Start 0007             __end_of_uart_init 16F4     __size_of_I2C_Master_Write 0008  
             ___lldiv@divisor 0072                    ?_BCD_a_DEC 0070               ___lldiv@counter 0025  
                   _RCSTAbits 0018              I2C_Master_Init@c 0026              I2C_Master_Read@a 0072  
                  ?_DEC_a_BCD 0070                    _mostrarLCD 0029                     _PORTAbits 0005  
                   _PORTBbits 0006                    _termometro 080E      __size_of_LCD_Create_Char 002C  
                   _TRISCbits 0087         __end_of_display_Datum 06ED           _get_temperatura_obj 1737  
                  ?_LCD_clear 0070             LCD_Write_String@a 0076             LCD_Write_String@n 0074  
    __size_of_display_Uhrzeit 00D2                     _TXSTAbits 0098             __size_of_LCD_init 0067  
       __size_of_inclinacion_ 0017          ?_get_temperatura_obj 0070                __end_of___bmul 16CE  
       LCD_Set_Cursor@columna 0075                __end_of___wmul 1786              _LCD_Write_String 1786  
                 _BAUDCTLbits 0187                __end_of_atilde 081E                __end_of_arrowr 082E  
                _arrowr_vacio 081E           start_initialization 000F                   __end_of_ISR 16BD  
           ??_I2C_Master_Init 002A             ??_I2C_Master_Read 0074             ??_I2C_Master_Wait 0072  
       __end_of_uint_to_array 0CA8             ??_I2C_Master_Stop 0072                  _inclinacion_ 174E  
    __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??_BCD_a_DEC 0076             ??_get_temperatura 0075  
                    ??___bmul 0073       LCD_Create_Char@chardata 0075         ??_get_temperatura_obj 0075  
                 ??_DEC_a_BCD 0028                      ??___wmul 0076                    init_fetch0 16CE  
                 ?_mostrarLCD 0070                   __pdataBANK0 0056       __size_of_Zeit_Datum_Set 00B1  
             BCD_a_DEC@numBCD 0079                      ?_LCD_Cmd 0070          __end_of_uartTX_Write 1695  
                 __pbssCOMMON 007A                     ___latbits 0002                 __pcstackBANK0 0020  
         display_Datum@jahr_d 0032           display_Datum@jahr_u 0031                   ??_LCD_clear 0075  
           __size_of_get_Time 01F6             ??_LCD_Create_Char 0076             __size_of_init_ADC 007C  
            _I2C_Master_Start 1677              _I2C_Master_Write 1685         uint_to_array@centenas 002F  
           ??_display_Uhrzeit 0029                      ?___awdiv 0020                      ?___awmod 0072  
                    ?___lldiv 0072                     __pstrings 0800   __end_of_LCD_Write_Character 16AC  
                    ?_get_dis 0070                     _obj_array 0050                __size_of_SetUp 009C  
        display_Uhrzeit@Uhr_d 0032          display_Uhrzeit@Uhr_u 0031           __size_of_mostrarLCD 03F6  
        display_Uhrzeit@min_d 0030          display_Uhrzeit@min_u 002F          display_Uhrzeit@seg_d 002E  
        display_Uhrzeit@seg_u 002D             interrupt_function 0004                ___wmul@product 0076  
                    _LCD_init 0A53                     clear_ram0 1695              LCD_Create_Char@n 0078  
                    _PIR1bits 000C                     _uart_init 16DF                     _velocidad 0053  
                  _ADCON0bits 001F                   __stringbase 0805                    _ADCON1bits 009F  
           ___wmul@multiplier 0072                 ??_pressBoton1 0077                 ??_pressBoton2 0020  
            __size_of_LCD_Cmd 002F           I2C_Master_Read@temp 0076      __end_of_LCD_Write_String 17A8  
                 _inclinacion 0058        LCD_Create_Char@charnum 0077                    ?_uart_init 0072  
              _Zeit_Datum_Set 0E9C              __size_of___awdiv 005B              __size_of___awmod 004B  
            __size_of___lldiv 0060         __size_of_uartTX_Write 0008            display_Datum@dia_d 002E  
          display_Datum@dia_u 002D              uartTX_Write@dato 0072            __end_of__stringtab 0806  
          display_Datum@mes_d 0030            display_Datum@mes_u 002F              __size_of_get_dis 007E  
                    _d_frente 0057               _I2C_Master_Init 07BF               _I2C_Master_Read 17D4  
        uint_to_array@decenas 002E               _I2C_Master_Wait 08B9               _I2C_Master_Stop 167E  
                    __ptext10 08C2                      __ptext11 174E                      __ptext20 0CA8  
                    __ptext12 1737                      __ptext21 16DF                      __ptext13 1720  
                    __ptext30 0D44                      __ptext22 0E9C                      __ptext14 0B29  
                    __ptext31 0A53                      __ptext23 1685                      __ptext15 0BA5  
                    __ptext32 16F4                      __ptext24 167E                      __ptext16 041F  
                    __ptext33 17A8                      __ptext25 1677                      __ptext17 17D4  
                    __ptext34 169D                      __ptext26 08B9                      __ptext18 170A  
                    __ptext35 08EE                      __ptext27 091D                      __ptext19 16BD  
                    __ptext36 07BF                      __ptext28 094D                      __ptext37 09F3  
                    __ptext29 0998                      __ptext38 16AC                      _get_Time 041F  
           __CFG_BOR4V$BOR40V 0000       __size_of_LCD_Set_Cursor 002C               _get_temperatura 1720  
         __end_of_pressBoton1 0B29           __end_of_pressBoton2 0E9C                      _init_ADC 0B29  
               __size_of_main 00B3        display_Uhrzeit@columna 0028                  _uartTX_Write 168D  
      __end_of_Zeit_Datum_Set 0F4D        __size_of_display_Datum 00D8                  ??_mostrarLCD 0037  
         LCD_Set_Cursor@linea 0078               _LCD_Create_Char 17A8      __end_of_I2C_Master_Start 167E  
    __end_of_I2C_Master_Write 168D                    _INTCONbits 000B                      init_ram0 16D2  
             _display_Uhrzeit 06ED                      intlevel1 0000            __end_of_mostrarLCD 041F  
            ___lldiv@dividend 0076   __end_of_get_temperatura_obj 174E                     stringcode 0800  
                  _OSCCONbits 008F            __end_of_termometro 0816               ?_Zeit_Datum_Set 0070  
        mostrarLCD@dec_frente 003F                   ??_uart_init 0074       __end_of_I2C_Master_Init 07F5  
     __end_of_I2C_Master_Read 1800       __end_of_I2C_Master_Wait 08C2       __end_of_I2C_Master_Stop 1685  
                 _temperatura 0052        __size_of_uint_to_array 0085              ___lldiv@quotient 0021  
           I2C_Master_Write@d 002D       __end_of_get_temperatura 1737                   _pressBoton1 0ABA  
                 _pressBoton2 0DF0                      stringdir 0800                      stringtab 0800  
         mostrarLCD@dec_atras 0040                   _SSPCON2bits 0091                 _display_Datum 0615  
                  _OSC_config 0D44  



Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 09 20:58:45 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.05
    53                           ; Generated 20/12/2018 GMT
    54                           ; 
    55                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F887 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0091                     	;# 
   133  0092                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  009F                     	;# 
   149  0105                     	;# 
   150  0107                     	;# 
   151  0108                     	;# 
   152  0109                     	;# 
   153  010C                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  0185                     	;# 
   159  0187                     	;# 
   160  0188                     	;# 
   161  0189                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000D                     	;# 
   178  000E                     	;# 
   179  000E                     	;# 
   180  000F                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0013                     	;# 
   185  0014                     	;# 
   186  0015                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0017                     	;# 
   190  0018                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001B                     	;# 
   194  001B                     	;# 
   195  001C                     	;# 
   196  001D                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  0081                     	;# 
   200  0085                     	;# 
   201  0086                     	;# 
   202  0087                     	;# 
   203  0088                     	;# 
   204  0089                     	;# 
   205  008C                     	;# 
   206  008D                     	;# 
   207  008E                     	;# 
   208  008F                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0095                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  0105                     	;# 
   228  0107                     	;# 
   229  0108                     	;# 
   230  0109                     	;# 
   231  010C                     	;# 
   232  010C                     	;# 
   233  010D                     	;# 
   234  010E                     	;# 
   235  010F                     	;# 
   236  0185                     	;# 
   237  0187                     	;# 
   238  0188                     	;# 
   239  0189                     	;# 
   240  018C                     	;# 
   241  018D                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  000E                     	;# 
   257  000E                     	;# 
   258  000F                     	;# 
   259  0010                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0013                     	;# 
   263  0014                     	;# 
   264  0015                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001B                     	;# 
   273  001C                     	;# 
   274  001D                     	;# 
   275  001E                     	;# 
   276  001F                     	;# 
   277  0081                     	;# 
   278  0085                     	;# 
   279  0086                     	;# 
   280  0087                     	;# 
   281  0088                     	;# 
   282  0089                     	;# 
   283  008C                     	;# 
   284  008D                     	;# 
   285  008E                     	;# 
   286  008F                     	;# 
   287  0090                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0094                     	;# 
   294  0095                     	;# 
   295  0096                     	;# 
   296  0097                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009A                     	;# 
   300  009B                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  009F                     	;# 
   305  0105                     	;# 
   306  0107                     	;# 
   307  0108                     	;# 
   308  0109                     	;# 
   309  010C                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  010E                     	;# 
   313  010F                     	;# 
   314  0185                     	;# 
   315  0187                     	;# 
   316  0188                     	;# 
   317  0189                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320  0000                     	;# 
   321  0001                     	;# 
   322  0002                     	;# 
   323  0003                     	;# 
   324  0004                     	;# 
   325  0005                     	;# 
   326  0006                     	;# 
   327  0007                     	;# 
   328  0008                     	;# 
   329  0009                     	;# 
   330  000A                     	;# 
   331  000B                     	;# 
   332  000C                     	;# 
   333  000D                     	;# 
   334  000E                     	;# 
   335  000E                     	;# 
   336  000F                     	;# 
   337  0010                     	;# 
   338  0011                     	;# 
   339  0012                     	;# 
   340  0013                     	;# 
   341  0014                     	;# 
   342  0015                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0017                     	;# 
   346  0018                     	;# 
   347  0019                     	;# 
   348  001A                     	;# 
   349  001B                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  001D                     	;# 
   353  001E                     	;# 
   354  001F                     	;# 
   355  0081                     	;# 
   356  0085                     	;# 
   357  0086                     	;# 
   358  0087                     	;# 
   359  0088                     	;# 
   360  0089                     	;# 
   361  008C                     	;# 
   362  008D                     	;# 
   363  008E                     	;# 
   364  008F                     	;# 
   365  0090                     	;# 
   366  0091                     	;# 
   367  0092                     	;# 
   368  0093                     	;# 
   369  0093                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0095                     	;# 
   373  0096                     	;# 
   374  0097                     	;# 
   375  0098                     	;# 
   376  0099                     	;# 
   377  009A                     	;# 
   378  009B                     	;# 
   379  009C                     	;# 
   380  009D                     	;# 
   381  009E                     	;# 
   382  009F                     	;# 
   383  0105                     	;# 
   384  0107                     	;# 
   385  0108                     	;# 
   386  0109                     	;# 
   387  010C                     	;# 
   388  010C                     	;# 
   389  010D                     	;# 
   390  010E                     	;# 
   391  010F                     	;# 
   392  0185                     	;# 
   393  0187                     	;# 
   394  0188                     	;# 
   395  0189                     	;# 
   396  018C                     	;# 
   397  018D                     	;# 
   398  0000                     	;# 
   399  0001                     	;# 
   400  0002                     	;# 
   401  0003                     	;# 
   402  0004                     	;# 
   403  0005                     	;# 
   404  0006                     	;# 
   405  0007                     	;# 
   406  0008                     	;# 
   407  0009                     	;# 
   408  000A                     	;# 
   409  000B                     	;# 
   410  000C                     	;# 
   411  000D                     	;# 
   412  000E                     	;# 
   413  000E                     	;# 
   414  000F                     	;# 
   415  0010                     	;# 
   416  0011                     	;# 
   417  0012                     	;# 
   418  0013                     	;# 
   419  0014                     	;# 
   420  0015                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0017                     	;# 
   424  0018                     	;# 
   425  0019                     	;# 
   426  001A                     	;# 
   427  001B                     	;# 
   428  001B                     	;# 
   429  001C                     	;# 
   430  001D                     	;# 
   431  001E                     	;# 
   432  001F                     	;# 
   433  0081                     	;# 
   434  0085                     	;# 
   435  0086                     	;# 
   436  0087                     	;# 
   437  0088                     	;# 
   438  0089                     	;# 
   439  008C                     	;# 
   440  008D                     	;# 
   441  008E                     	;# 
   442  008F                     	;# 
   443  0090                     	;# 
   444  0091                     	;# 
   445  0092                     	;# 
   446  0093                     	;# 
   447  0093                     	;# 
   448  0093                     	;# 
   449  0094                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0098                     	;# 
   454  0099                     	;# 
   455  009A                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  009F                     	;# 
   461  0105                     	;# 
   462  0107                     	;# 
   463  0108                     	;# 
   464  0109                     	;# 
   465  010C                     	;# 
   466  010C                     	;# 
   467  010D                     	;# 
   468  010E                     	;# 
   469  010F                     	;# 
   470  0185                     	;# 
   471  0187                     	;# 
   472  0188                     	;# 
   473  0189                     	;# 
   474  018C                     	;# 
   475  018D                     	;# 
   476  0000                     	;# 
   477  0001                     	;# 
   478  0002                     	;# 
   479  0003                     	;# 
   480  0004                     	;# 
   481  0005                     	;# 
   482  0006                     	;# 
   483  0007                     	;# 
   484  0008                     	;# 
   485  0009                     	;# 
   486  000A                     	;# 
   487  000B                     	;# 
   488  000C                     	;# 
   489  000D                     	;# 
   490  000E                     	;# 
   491  000E                     	;# 
   492  000F                     	;# 
   493  0010                     	;# 
   494  0011                     	;# 
   495  0012                     	;# 
   496  0013                     	;# 
   497  0014                     	;# 
   498  0015                     	;# 
   499  0015                     	;# 
   500  0016                     	;# 
   501  0017                     	;# 
   502  0018                     	;# 
   503  0019                     	;# 
   504  001A                     	;# 
   505  001B                     	;# 
   506  001B                     	;# 
   507  001C                     	;# 
   508  001D                     	;# 
   509  001E                     	;# 
   510  001F                     	;# 
   511  0081                     	;# 
   512  0085                     	;# 
   513  0086                     	;# 
   514  0087                     	;# 
   515  0088                     	;# 
   516  0089                     	;# 
   517  008C                     	;# 
   518  008D                     	;# 
   519  008E                     	;# 
   520  008F                     	;# 
   521  0090                     	;# 
   522  0091                     	;# 
   523  0092                     	;# 
   524  0093                     	;# 
   525  0093                     	;# 
   526  0093                     	;# 
   527  0094                     	;# 
   528  0095                     	;# 
   529  0096                     	;# 
   530  0097                     	;# 
   531  0098                     	;# 
   532  0099                     	;# 
   533  009A                     	;# 
   534  009B                     	;# 
   535  009C                     	;# 
   536  009D                     	;# 
   537  009E                     	;# 
   538  009F                     	;# 
   539  0105                     	;# 
   540  0107                     	;# 
   541  0108                     	;# 
   542  0109                     	;# 
   543  010C                     	;# 
   544  010C                     	;# 
   545  010D                     	;# 
   546  010E                     	;# 
   547  010F                     	;# 
   548  0185                     	;# 
   549  0187                     	;# 
   550  0188                     	;# 
   551  0189                     	;# 
   552  018C                     	;# 
   553  018D                     	;# 
   554  0000                     	;# 
   555  0001                     	;# 
   556  0002                     	;# 
   557  0003                     	;# 
   558  0004                     	;# 
   559  0005                     	;# 
   560  0006                     	;# 
   561  0007                     	;# 
   562  0008                     	;# 
   563  0009                     	;# 
   564  000A                     	;# 
   565  000B                     	;# 
   566  000C                     	;# 
   567  000D                     	;# 
   568  000E                     	;# 
   569  000E                     	;# 
   570  000F                     	;# 
   571  0010                     	;# 
   572  0011                     	;# 
   573  0012                     	;# 
   574  0013                     	;# 
   575  0014                     	;# 
   576  0015                     	;# 
   577  0015                     	;# 
   578  0016                     	;# 
   579  0017                     	;# 
   580  0018                     	;# 
   581  0019                     	;# 
   582  001A                     	;# 
   583  001B                     	;# 
   584  001B                     	;# 
   585  001C                     	;# 
   586  001D                     	;# 
   587  001E                     	;# 
   588  001F                     	;# 
   589  0081                     	;# 
   590  0085                     	;# 
   591  0086                     	;# 
   592  0087                     	;# 
   593  0088                     	;# 
   594  0089                     	;# 
   595  008C                     	;# 
   596  008D                     	;# 
   597  008E                     	;# 
   598  008F                     	;# 
   599  0090                     	;# 
   600  0091                     	;# 
   601  0092                     	;# 
   602  0093                     	;# 
   603  0093                     	;# 
   604  0093                     	;# 
   605  0094                     	;# 
   606  0095                     	;# 
   607  0096                     	;# 
   608  0097                     	;# 
   609  0098                     	;# 
   610  0099                     	;# 
   611  009A                     	;# 
   612  009B                     	;# 
   613  009C                     	;# 
   614  009D                     	;# 
   615  009E                     	;# 
   616  009F                     	;# 
   617  0105                     	;# 
   618  0107                     	;# 
   619  0108                     	;# 
   620  0109                     	;# 
   621  010C                     	;# 
   622  010C                     	;# 
   623  010D                     	;# 
   624  010E                     	;# 
   625  010F                     	;# 
   626  0185                     	;# 
   627  0187                     	;# 
   628  0188                     	;# 
   629  0189                     	;# 
   630  018C                     	;# 
   631  018D                     	;# 
   632                           
   633                           	psect	idataBANK0
   634  1608                     __pidataBANK0:	
   635                           
   636                           ;initializer for _ancho
   637  1608  3401               	retlw	1
   638                           
   639                           ;initializer for _largo
   640  1609  3401               	retlw	1
   641                           
   642                           ;initializer for _tiempo
   643  160A  3405               	retlw	5
   644                           
   645                           ;initializer for _jahr
   646  160B  3414               	retlw	20
   647                           
   648                           ;initializer for _mes
   649  160C  3403               	retlw	3
   650                           
   651                           ;initializer for _datum
   652  160D  3406               	retlw	6
   653                           
   654                           ;initializer for _dia
   655  160E  3405               	retlw	5
   656                           
   657                           ;initializer for _hora
   658  160F  3410               	retlw	16
   659                           
   660                           ;initializer for _min
   661  1610  3415               	retlw	21
   662                           
   663                           	psect	strings
   664  0800                     __pstrings:	
   665  0800                     stringtab:	
   666  0800                     __stringtab:	
   667  0800                     stringcode:	
   668                           ;	String table - string pointers are 1 byte each
   669                           
   670  0800                     stringdir:	
   671  0800  3008               	movlw	high stringdir
   672  0801  008A               	movwf	10
   673  0802  0804               	movf	4,w
   674  0803  0A84               	incf	4,f
   675  0804  0782               	addwf	2,f
   676  0805                     __stringbase:	
   677  0805  3400               	retlw	0
   678  0806                     __end_of__stringtab:	
   679  0806                     _gota:	
   680  0806  3404               	retlw	4
   681  0807  340A               	retlw	10
   682  0808  340A               	retlw	10
   683  0809  3411               	retlw	17
   684  080A  3411               	retlw	17
   685  080B  3411               	retlw	17
   686  080C  340E               	retlw	14
   687  080D  3400               	retlw	0
   688  080E                     __end_of_gota:	
   689  080E                     _termometro:	
   690  080E  3404               	retlw	4
   691  080F  340A               	retlw	10
   692  0810  340A               	retlw	10
   693  0811  340E               	retlw	14
   694  0812  340E               	retlw	14
   695  0813  341F               	retlw	31
   696  0814  341F               	retlw	31
   697  0815  340E               	retlw	14
   698  0816                     __end_of_termometro:	
   699  0816                     _atilde:	
   700  0816  3402               	retlw	2
   701  0817  3404               	retlw	4
   702  0818  3400               	retlw	0
   703  0819  340E               	retlw	14
   704  081A  3401               	retlw	1
   705  081B  340F               	retlw	15
   706  081C  3411               	retlw	17
   707  081D  340F               	retlw	15
   708  081E                     __end_of_atilde:	
   709  081E                     _arrowr_vacio:	
   710  081E  3400               	retlw	0
   711  081F  3408               	retlw	8
   712  0820  340C               	retlw	12
   713  0821  340A               	retlw	10
   714  0822  3409               	retlw	9
   715  0823  340A               	retlw	10
   716  0824  340C               	retlw	12
   717  0825  3408               	retlw	8
   718  0826                     __end_of_arrowr_vacio:	
   719  0826                     _arrowr:	
   720  0826  3400               	retlw	0
   721  0827  3408               	retlw	8
   722  0828  340C               	retlw	12
   723  0829  340E               	retlw	14
   724  082A  340F               	retlw	15
   725  082B  340E               	retlw	14
   726  082C  340C               	retlw	12
   727  082D  3408               	retlw	8
   728  082E                     __end_of_arrowr:	
   729  0008                     _PORTD	set	8
   730  0007                     _PORTCbits	set	7
   731  0013                     _SSPBUF	set	19
   732  0014                     _SSPCON	set	20
   733  0006                     _PORTBbits	set	6
   734  000B                     _INTCONbits	set	11
   735  0063                     _SSPIF	set	99
   736  005E                     _PEIE	set	94
   737  005F                     _GIE	set	95
   738  0091                     _SSPCON2bits	set	145
   739  0087                     _TRISCbits	set	135
   740  0094                     _SSPSTAT	set	148
   741  0093                     _SSPADD	set	147
   742  0091                     _SSPCON2	set	145
   743  008F                     _OSCCONbits	set	143
   744  0088                     _TRISD	set	136
   745  0096                     _IOCB	set	150
   746  0081                     _OPTION_REGbits	set	129
   747  0095                     _WPUB	set	149
   748  0086                     _TRISB	set	134
   749  0463                     _SSPIE	set	1123
   750  043C                     _TRISC4	set	1084
   751  043B                     _TRISC3	set	1083
   752  0439                     _TRISC1	set	1081
   753  0438                     _TRISC0	set	1080
   754  0189                     _ANSELH	set	393
   755  082E                     STR_3:	
   756  082E  3454               	retlw	84	;'T'
   757  082F  3465               	retlw	101	;'e'
   758  0830  346D               	retlw	109	;'m'
   759  0831  3470               	retlw	112	;'p'
   760  0832  342E               	retlw	46	;'.'
   761  0833  3420               	retlw	32	;' '
   762  0834  3464               	retlw	100	;'d'
   763  0835  3465               	retlw	101	;'e'
   764  0836  346C               	retlw	108	;'l'
   765  0837  3420               	retlw	32	;' '
   766  0838  3453               	retlw	83	;'S'
   767  0839  3475               	retlw	117	;'u'
   768  083A  3465               	retlw	101	;'e'
   769  083B  346C               	retlw	108	;'l'
   770  083C  346F               	retlw	111	;'o'
   771  083D  343A               	retlw	58	;':'
   772  083E  3400               	retlw	0
   773  083F                     STR_13:	
   774  083F  3456               	retlw	86	;'V'
   775  0840  3461               	retlw	97	;'a'
   776  0841  346D               	retlw	109	;'m'
   777  0842  346F               	retlw	111	;'o'
   778  0843  346E               	retlw	110	;'n'
   779  0844  346F               	retlw	111	;'o'
   780  0845  3473               	retlw	115	;'s'
   781  0846  3420               	retlw	32	;' '
   782  0847  3450               	retlw	80	;'P'
   783  0848  3465               	retlw	101	;'e'
   784  0849  3472               	retlw	114	;'r'
   785  084A  3472               	retlw	114	;'r'
   786  084B  346F               	retlw	111	;'o'
   787  084C  3473               	retlw	115	;'s'
   788  084D  3421               	retlw	33	;'!'
   789  084E  3400               	retlw	0
   790  084F                     STR_7:	
   791  084F  3473               	retlw	115	;'s'
   792  0850  343A               	retlw	58	;':'
   793  0851  3420               	retlw	32	;' '
   794  0852  347C               	retlw	124	;'|'
   795  0853  3420               	retlw	32	;' '
   796  0854  3446               	retlw	70	;'F'
   797  0855  3472               	retlw	114	;'r'
   798  0856  3465               	retlw	101	;'e'
   799  0857  346E               	retlw	110	;'n'
   800  0858  3474               	retlw	116	;'t'
   801  0859  3465               	retlw	101	;'e'
   802  085A  343A               	retlw	58	;':'
   803  085B  3400               	retlw	0
   804  085C                     STR_10:	
   805  085C  3454               	retlw	84	;'T'
   806  085D  346F               	retlw	111	;'o'
   807  085E  346D               	retlw	109	;'m'
   808  085F  3461               	retlw	97	;'a'
   809  0860  3472               	retlw	114	;'r'
   810  0861  3420               	retlw	32	;' '
   811  0862  3464               	retlw	100	;'d'
   812  0863  3461               	retlw	97	;'a'
   813  0864  3474               	retlw	116	;'t'
   814  0865  346F               	retlw	111	;'o'
   815  0866  3473               	retlw	115	;'s'
   816  0867  343A               	retlw	58	;':'
   817  0868  3400               	retlw	0
   818  0869                     STR_2:	
   819  0869  3441               	retlw	65	;'A'
   820  086A  346D               	retlw	109	;'m'
   821  086B  3462               	retlw	98	;'b'
   822  086C  3469               	retlw	105	;'i'
   823  086D  3465               	retlw	101	;'e'
   824  086E  346E               	retlw	110	;'n'
   825  086F  3474               	retlw	116	;'t'
   826  0870  3465               	retlw	101	;'e'
   827  0871  343A               	retlw	58	;':'
   828  0872  3400               	retlw	0
   829  0873                     STR_4:	
   830  0873  3448               	retlw	72	;'H'
   831  0874  3475               	retlw	117	;'u'
   832  0875  346D               	retlw	109	;'m'
   833  0876  3465               	retlw	101	;'e'
   834  0877  3464               	retlw	100	;'d'
   835  0878  3461               	retlw	97	;'a'
   836  0879  3464               	retlw	100	;'d'
   837  087A  343A               	retlw	58	;':'
   838  087B  3400               	retlw	0
   839  087C                     STR_14:	
   840  087C  3445               	retlw	69	;'E'
   841  087D  3452               	retlw	82	;'R'
   842  087E  3452               	retlw	82	;'R'
   843  087F  344F               	retlw	79	;'O'
   844  0880  3452               	retlw	82	;'R'
   845  0881  3400               	retlw	0
   846  0882                     STR_11:	
   847  0882  346D               	retlw	109	;'m'
   848  0883  3469               	retlw	105	;'i'
   849  0884  346E               	retlw	110	;'n'
   850  0885  3400               	retlw	0
   851  0886                     STR_6:	
   852  0886  3441               	retlw	65	;'A'
   853  0887  3474               	retlw	116	;'t'
   854  0888  3472               	retlw	114	;'r'
   855  0889  3400               	retlw	0
   856  088A                     STR_12:	
   857  088A  3478               	retlw	120	;'x'
   858  088B  3420               	retlw	32	;' '
   859  088C  3400               	retlw	0
   860  088D                     STR_1:	
   861  088D  3432               	retlw	50	;'2'
   862  088E  3430               	retlw	48	;'0'
   863  088F  3400               	retlw	0
   864  0890                     STR_5:	
   865  0890  3438               	retlw	56	;'8'
   866  0891  3430               	retlw	48	;'0'
   867  0892  3400               	retlw	0
   868  0893                     STR_8:	
   869  0893  3433               	retlw	51	;'3'
   870  0894  3400               	retlw	0
   871  0895                     STR_9:	
   872  0895  3434               	retlw	52	;'4'
   873  0896  3400               	retlw	0
   874                           
   875                           ; #config settings
   876  0000                     
   877                           	psect	cinit
   878  000F                     start_initialization:	
   879  000F                     __initialization:	
   880                           
   881                           ; Initialize objects allocated to BANK0
   882  000F  1383               	bcf	3,7	;select IRP bank0
   883  0010  306F               	movlw	low (__pdataBANK0+9)
   884  0011  00FD               	movwf	btemp+-1
   885  0012  3016               	movlw	high __pidataBANK0
   886  0013  00FE               	movwf	btemp
   887  0014  3008               	movlw	low __pidataBANK0
   888  0015  00FF               	movwf	btemp+1
   889  0016  3066               	movlw	low __pdataBANK0
   890  0017  0084               	movwf	4
   891  0018  160A  118A  2647   	fcall	init_ram0
   892                           
   893                           ; Clear objects allocated to BANK0
   894  001B  01DA               	clrf	__pbssBANK0& (0+127)
   895  001C  01DB               	clrf	(__pbssBANK0+1)& (0+127)
   896  001D  01DC               	clrf	(__pbssBANK0+2)& (0+127)
   897  001E  01DD               	clrf	(__pbssBANK0+3)& (0+127)
   898  001F  01DE               	clrf	(__pbssBANK0+4)& (0+127)
   899  0020  01DF               	clrf	(__pbssBANK0+5)& (0+127)
   900  0021  01E0               	clrf	(__pbssBANK0+6)& (0+127)
   901  0022  01E1               	clrf	(__pbssBANK0+7)& (0+127)
   902  0023  01E2               	clrf	(__pbssBANK0+8)& (0+127)
   903  0024  01E3               	clrf	(__pbssBANK0+9)& (0+127)
   904  0025  01E4               	clrf	(__pbssBANK0+10)& (0+127)
   905  0026  01E5               	clrf	(__pbssBANK0+11)& (0+127)
   906                           
   907                           ; Clear objects allocated to COMMON
   908  0027  01FA               	clrf	__pbssCOMMON& (0+127)
   909  0028  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   910  0029                     end_of_initialization:	
   911                           ;End of C runtime variable initialization code
   912                           
   913  0029                     __end_of__initialization:	
   914  0029  0183               	clrf	3
   915  002A  160A  118A  2F1B   	ljmp	_main	;jump to C main() function
   916                           
   917                           	psect	bssCOMMON
   918  007A                     __pbssCOMMON:	
   919  007A                     _banderaPUSH1:	
   920  007A                     	ds	1
   921  007B                     _banderaBoton:	
   922  007B                     	ds	1
   923                           
   924                           	psect	bssBANK0
   925  005A                     __pbssBANK0:	
   926  005A                     uint_to_array@F1343:	
   927  005A                     	ds	6
   928  0060                     _banderaPUSH2:	
   929  0060                     	ds	1
   930  0061                     _obj_array:	
   931  0061                     	ds	1
   932  0062                     _temperatura_obj:	
   933  0062                     	ds	1
   934  0063                     _temperatura:	
   935  0063                     	ds	1
   936  0064                     _seg:	
   937  0064                     	ds	1
   938  0065                     _estado:	
   939  0065                     	ds	1
   940                           
   941                           	psect	dataBANK0
   942  0066                     __pdataBANK0:	
   943  0066                     _ancho:	
   944  0066                     	ds	1
   945  0067                     _largo:	
   946  0067                     	ds	1
   947  0068                     _tiempo:	
   948  0068                     	ds	1
   949  0069                     _jahr:	
   950  0069                     	ds	1
   951  006A                     _mes:	
   952  006A                     	ds	1
   953  006B                     _datum:	
   954  006B                     	ds	1
   955  006C                     _dia:	
   956  006C                     	ds	1
   957  006D                     _hora:	
   958  006D                     	ds	1
   959  006E                     _min:	
   960  006E                     	ds	1
   961                           
   962                           	psect	inittext
   963  1643                     init_fetch0:	
   964                           ;	Called with low address in FSR and high address in W
   965                           
   966  1643  087E               	movf	126,w
   967  1644  008A               	movwf	10
   968  1645  087F               	movf	127,w
   969  1646  0082               	movwf	2
   970  1647                     init_ram0:	
   971                           ;Called with:
   972                           ;	high address of idata address in btemp 
   973                           ;	low address of idata address in btemp+1 
   974                           ;	low address of data in FSR
   975                           ;	high address + 1 of data in btemp-1
   976                           
   977  1647  2643  160A  118A   	fcall	init_fetch0
   978  164A  0080               	movwf	0
   979  164B  0A84               	incf	4,f
   980  164C  0804               	movf	4,w
   981  164D  067D               	xorwf	125,w
   982  164E  1903               	btfsc	3,2
   983  164F  3400               	retlw	0
   984  1650  0AFF               	incf	127,f
   985  1651  1903               	btfsc	3,2
   986  1652  0AFE               	incf	126,f
   987  1653  2E47               	goto	init_ram0
   988                           
   989                           	psect	cstackCOMMON
   990  0070                     __pcstackCOMMON:	
   991  0070                     ?_SetUp:	
   992  0070                     ?_get_Time:	
   993                           ; 1 bytes @ 0x0
   994                           
   995  0070                     ?_mostrarLCD:	
   996                           ; 1 bytes @ 0x0
   997                           
   998  0070                     ?_pressBoton1:	
   999                           ; 1 bytes @ 0x0
  1000                           
  1001  0070                     ?_pressBoton2:	
  1002                           ; 1 bytes @ 0x0
  1003                           
  1004  0070                     ?_LCD_init:	
  1005                           ; 1 bytes @ 0x0
  1006                           
  1007  0070                     ?_LCD_clear:	
  1008                           ; 1 bytes @ 0x0
  1009                           
  1010  0070                     ?_LCD_Write_Character:	
  1011                           ; 1 bytes @ 0x0
  1012                           
  1013  0070                     ?_LCD_Write_String:	
  1014                           ; 1 bytes @ 0x0
  1015                           
  1016  0070                     ?_uint_to_array:	
  1017                           ; 1 bytes @ 0x0
  1018                           
  1019  0070                     ?_I2C_Master_Start:	
  1020                           ; 1 bytes @ 0x0
  1021                           
  1022  0070                     ?_I2C_Master_Stop:	
  1023                           ; 1 bytes @ 0x0
  1024                           
  1025  0070                     ?_ISR:	
  1026                           ; 1 bytes @ 0x0
  1027                           
  1028  0070                     ??_ISR:	
  1029                           ; 1 bytes @ 0x0
  1030                           
  1031  0070                     ?_main:	
  1032                           ; 1 bytes @ 0x0
  1033                           
  1034  0070                     ?_BCD_a_DEC:	
  1035                           ; 1 bytes @ 0x0
  1036                           
  1037  0070                     ?_I2C_Master_Wait:	
  1038                           ; 1 bytes @ 0x0
  1039                           
  1040  0070                     ?_LCD_Cmd:	
  1041                           ; 1 bytes @ 0x0
  1042                           
  1043                           
  1044                           ; 1 bytes @ 0x0
  1045  0070                     	ds	2
  1046  0072                     ?_OSC_config:	
  1047  0072                     ??_LCD_Write_Character:	
  1048                           ; 1 bytes @ 0x2
  1049                           
  1050  0072                     ??_I2C_Master_Start:	
  1051                           ; 1 bytes @ 0x2
  1052                           
  1053  0072                     ?_I2C_Master_Write:	
  1054                           ; 1 bytes @ 0x2
  1055                           
  1056  0072                     ??_I2C_Master_Stop:	
  1057                           ; 1 bytes @ 0x2
  1058                           
  1059  0072                     ??_I2C_Master_Wait:	
  1060                           ; 1 bytes @ 0x2
  1061                           
  1062  0072                     ??_LCD_Cmd:	
  1063                           ; 1 bytes @ 0x2
  1064                           
  1065  0072                     ?___bmul:	
  1066                           ; 1 bytes @ 0x2
  1067                           
  1068  0072                     ?_I2C_Master_Read:	
  1069                           ; 1 bytes @ 0x2
  1070                           
  1071  0072                     ?___wmul:	
  1072                           ; 2 bytes @ 0x2
  1073                           
  1074  0072                     ?___awmod:	
  1075                           ; 2 bytes @ 0x2
  1076                           
  1077  0072                     ?___lwdiv:	
  1078                           ; 2 bytes @ 0x2
  1079                           
  1080  0072                     ?___lldiv:	
  1081                           ; 2 bytes @ 0x2
  1082                           
  1083  0072                     ___bmul@multiplicand:	
  1084                           ; 4 bytes @ 0x2
  1085                           
  1086  0072                     I2C_Master_Write@d:	
  1087                           ; 1 bytes @ 0x2
  1088                           
  1089  0072                     I2C_Master_Read@a:	
  1090                           ; 2 bytes @ 0x2
  1091                           
  1092  0072                     ___wmul@multiplier:	
  1093                           ; 2 bytes @ 0x2
  1094                           
  1095  0072                     ___awmod@divisor:	
  1096                           ; 2 bytes @ 0x2
  1097                           
  1098  0072                     ___lwdiv@divisor:	
  1099                           ; 2 bytes @ 0x2
  1100                           
  1101  0072                     OSC_config@frecuencia:	
  1102                           ; 2 bytes @ 0x2
  1103                           
  1104  0072                     ___lldiv@divisor:	
  1105                           ; 4 bytes @ 0x2
  1106                           
  1107                           
  1108                           ; 4 bytes @ 0x2
  1109  0072                     	ds	1
  1110  0073                     ??___bmul:	
  1111  0073                     LCD_Write_Character@caracter:	
  1112                           ; 1 bytes @ 0x3
  1113                           
  1114                           
  1115                           ; 1 bytes @ 0x3
  1116  0073                     	ds	1
  1117  0074                     ??_LCD_Write_String:	
  1118  0074                     ??_I2C_Master_Write:	
  1119                           ; 1 bytes @ 0x4
  1120                           
  1121  0074                     ??_I2C_Master_Read:	
  1122                           ; 1 bytes @ 0x4
  1123                           
  1124  0074                     LCD_Cmd@comando:	
  1125                           ; 1 bytes @ 0x4
  1126                           
  1127  0074                     ___bmul@product:	
  1128                           ; 1 bytes @ 0x4
  1129                           
  1130  0074                     LCD_Write_String@n:	
  1131                           ; 1 bytes @ 0x4
  1132                           
  1133  0074                     ___wmul@multiplicand:	
  1134                           ; 2 bytes @ 0x4
  1135                           
  1136  0074                     ___awmod@dividend:	
  1137                           ; 2 bytes @ 0x4
  1138                           
  1139  0074                     ___lwdiv@dividend:	
  1140                           ; 2 bytes @ 0x4
  1141                           
  1142                           
  1143                           ; 2 bytes @ 0x4
  1144  0074                     	ds	1
  1145  0075                     ??_LCD_init:	
  1146  0075                     ?_LCD_Create_Char:	
  1147                           ; 1 bytes @ 0x5
  1148                           
  1149  0075                     ??_LCD_clear:	
  1150                           ; 1 bytes @ 0x5
  1151                           
  1152  0075                     ?_LCD_Set_Cursor:	
  1153                           ; 1 bytes @ 0x5
  1154                           
  1155  0075                     LCD_Set_Cursor@columna:	
  1156                           ; 1 bytes @ 0x5
  1157                           
  1158  0075                     LCD_Create_Char@chardata:	
  1159                           ; 1 bytes @ 0x5
  1160                           
  1161  0075                     ___bmul@multiplier:	
  1162                           ; 1 bytes @ 0x5
  1163                           
  1164                           
  1165                           ; 1 bytes @ 0x5
  1166  0075                     	ds	1
  1167  0076                     ??_OSC_config:	
  1168  0076                     ??_LCD_Create_Char:	
  1169                           ; 1 bytes @ 0x6
  1170                           
  1171  0076                     ??_LCD_Set_Cursor:	
  1172                           ; 1 bytes @ 0x6
  1173                           
  1174  0076                     ??_BCD_a_DEC:	
  1175                           ; 1 bytes @ 0x6
  1176                           
  1177  0076                     ??___wmul:	
  1178                           ; 1 bytes @ 0x6
  1179                           
  1180  0076                     ??___awmod:	
  1181                           ; 1 bytes @ 0x6
  1182                           
  1183  0076                     ??___lwdiv:	
  1184                           ; 1 bytes @ 0x6
  1185                           
  1186  0076                     LCD_Write_String@a:	
  1187                           ; 1 bytes @ 0x6
  1188                           
  1189  0076                     I2C_Master_Read@temp:	
  1190                           ; 1 bytes @ 0x6
  1191                           
  1192  0076                     ___wmul@product:	
  1193                           ; 2 bytes @ 0x6
  1194                           
  1195  0076                     ___lldiv@dividend:	
  1196                           ; 2 bytes @ 0x6
  1197                           
  1198                           
  1199                           ; 4 bytes @ 0x6
  1200  0076                     	ds	1
  1201  0077                     ??_pressBoton1:	
  1202  0077                     LCD_Create_Char@charnum:	
  1203                           ; 1 bytes @ 0x7
  1204                           
  1205  0077                     ___awmod@counter:	
  1206                           ; 1 bytes @ 0x7
  1207                           
  1208  0077                     ___lwdiv@quotient:	
  1209                           ; 1 bytes @ 0x7
  1210                           
  1211                           
  1212                           ; 2 bytes @ 0x7
  1213  0077                     	ds	1
  1214  0078                     ??___awdiv:	
  1215  0078                     LCD_Set_Cursor@linea:	
  1216                           ; 1 bytes @ 0x8
  1217                           
  1218  0078                     LCD_Create_Char@n:	
  1219                           ; 1 bytes @ 0x8
  1220                           
  1221  0078                     ___awmod@sign:	
  1222                           ; 1 bytes @ 0x8
  1223                           
  1224                           
  1225                           ; 1 bytes @ 0x8
  1226  0078                     	ds	1
  1227  0079                     BCD_a_DEC@numBCD:	
  1228  0079                     LCD_Set_Cursor@corrimiento:	
  1229                           ; 1 bytes @ 0x9
  1230                           
  1231  0079                     ___lwdiv@counter:	
  1232                           ; 1 bytes @ 0x9
  1233                           
  1234                           
  1235                           ; 1 bytes @ 0x9
  1236  0079                     	ds	1
  1237                           
  1238                           	psect	cstackBANK0
  1239  0020                     __pcstackBANK0:	
  1240  0020                     ??_get_Time:	
  1241  0020                     ??_pressBoton2:	
  1242                           ; 1 bytes @ 0x0
  1243                           
  1244  0020                     ??___lldiv:	
  1245                           ; 1 bytes @ 0x0
  1246                           
  1247  0020                     ?___awdiv:	
  1248                           ; 1 bytes @ 0x0
  1249                           
  1250  0020                     ?___xxtofl:	
  1251                           ; 2 bytes @ 0x0
  1252                           
  1253  0020                     ___awdiv@divisor:	
  1254                           ; 4 bytes @ 0x0
  1255                           
  1256  0020                     ___xxtofl@val:	
  1257                           ; 2 bytes @ 0x0
  1258                           
  1259                           
  1260                           ; 4 bytes @ 0x0
  1261  0020                     	ds	1
  1262  0021                     ___lldiv@quotient:	
  1263                           
  1264                           ; 4 bytes @ 0x1
  1265  0021                     	ds	1
  1266  0022                     ___awdiv@dividend:	
  1267                           
  1268                           ; 2 bytes @ 0x2
  1269  0022                     	ds	2
  1270  0024                     ??___xxtofl:	
  1271  0024                     ___awdiv@counter:	
  1272                           ; 1 bytes @ 0x4
  1273                           
  1274                           
  1275                           ; 1 bytes @ 0x4
  1276  0024                     	ds	1
  1277  0025                     ___lldiv@counter:	
  1278  0025                     ___awdiv@sign:	
  1279                           ; 1 bytes @ 0x5
  1280                           
  1281                           
  1282                           ; 1 bytes @ 0x5
  1283  0025                     	ds	1
  1284  0026                     ?_I2C_Master_Init:	
  1285  0026                     ___awdiv@quotient:	
  1286                           ; 1 bytes @ 0x6
  1287                           
  1288  0026                     I2C_Master_Init@c:	
  1289                           ; 2 bytes @ 0x6
  1290                           
  1291                           
  1292                           ; 4 bytes @ 0x6
  1293  0026                     	ds	2
  1294  0028                     ??_uint_to_array:	
  1295  0028                     ?_display_Uhrzeit:	
  1296                           ; 1 bytes @ 0x8
  1297                           
  1298  0028                     ?_display_Datum:	
  1299                           ; 1 bytes @ 0x8
  1300                           
  1301  0028                     display_Uhrzeit@columna:	
  1302                           ; 1 bytes @ 0x8
  1303                           
  1304  0028                     display_Datum@columna:	
  1305                           ; 1 bytes @ 0x8
  1306                           
  1307  0028                     ___xxtofl@sign:	
  1308                           ; 1 bytes @ 0x8
  1309                           
  1310                           
  1311                           ; 1 bytes @ 0x8
  1312  0028                     	ds	1
  1313  0029                     ??_display_Uhrzeit:	
  1314  0029                     ??_display_Datum:	
  1315                           ; 1 bytes @ 0x9
  1316                           
  1317  0029                     ___xxtofl@exp:	
  1318                           ; 1 bytes @ 0x9
  1319                           
  1320                           
  1321                           ; 1 bytes @ 0x9
  1322  0029                     	ds	1
  1323  002A                     ??_I2C_Master_Init:	
  1324  002A                     ___xxtofl@arg:	
  1325                           ; 1 bytes @ 0xA
  1326                           
  1327                           
  1328                           ; 4 bytes @ 0xA
  1329  002A                     	ds	2
  1330  002C                     display_Uhrzeit@fila:	
  1331  002C                     display_Datum@fila:	
  1332                           ; 1 bytes @ 0xC
  1333                           
  1334                           
  1335                           ; 1 bytes @ 0xC
  1336  002C                     	ds	1
  1337  002D                     display_Uhrzeit@seg_u:	
  1338  002D                     display_Datum@dia_u:	
  1339                           ; 1 bytes @ 0xD
  1340                           
  1341                           
  1342                           ; 1 bytes @ 0xD
  1343  002D                     	ds	1
  1344  002E                     ??_SetUp:	
  1345  002E                     ?___fladd:	
  1346                           ; 1 bytes @ 0xE
  1347                           
  1348  002E                     display_Uhrzeit@seg_d:	
  1349                           ; 4 bytes @ 0xE
  1350                           
  1351  002E                     display_Datum@dia_d:	
  1352                           ; 1 bytes @ 0xE
  1353                           
  1354  002E                     uint_to_array@decenas:	
  1355                           ; 1 bytes @ 0xE
  1356                           
  1357  002E                     ___fladd@b:	
  1358                           ; 1 bytes @ 0xE
  1359                           
  1360                           
  1361                           ; 4 bytes @ 0xE
  1362  002E                     	ds	1
  1363  002F                     display_Uhrzeit@min_u:	
  1364  002F                     display_Datum@mes_u:	
  1365                           ; 1 bytes @ 0xF
  1366                           
  1367  002F                     uint_to_array@centenas:	
  1368                           ; 1 bytes @ 0xF
  1369                           
  1370                           
  1371                           ; 1 bytes @ 0xF
  1372  002F                     	ds	1
  1373  0030                     display_Uhrzeit@min_d:	
  1374  0030                     display_Datum@mes_d:	
  1375                           ; 1 bytes @ 0x10
  1376                           
  1377  0030                     uint_to_array@resultado:	
  1378                           ; 1 bytes @ 0x10
  1379                           
  1380                           
  1381                           ; 6 bytes @ 0x10
  1382  0030                     	ds	1
  1383  0031                     display_Uhrzeit@Uhr_u:	
  1384  0031                     display_Datum@jahr_u:	
  1385                           ; 1 bytes @ 0x11
  1386                           
  1387                           
  1388                           ; 1 bytes @ 0x11
  1389  0031                     	ds	1
  1390  0032                     display_Uhrzeit@Uhr_d:	
  1391  0032                     display_Datum@jahr_d:	
  1392                           ; 1 bytes @ 0x12
  1393                           
  1394  0032                     ___fladd@a:	
  1395                           ; 1 bytes @ 0x12
  1396                           
  1397                           
  1398                           ; 4 bytes @ 0x12
  1399  0032                     	ds	4
  1400  0036                     ??___fladd:	
  1401  0036                     uint_to_array@numero:	
  1402                           ; 1 bytes @ 0x16
  1403                           
  1404                           
  1405                           ; 1 bytes @ 0x16
  1406  0036                     	ds	1
  1407  0037                     ??_mostrarLCD:	
  1408                           
  1409                           ; 1 bytes @ 0x17
  1410  0037                     	ds	3
  1411  003A                     mostrarLCD@pantalla:	
  1412                           
  1413                           ; 1 bytes @ 0x1A
  1414  003A                     	ds	4
  1415  003E                     ___fladd@signs:	
  1416                           
  1417                           ; 1 bytes @ 0x1E
  1418  003E                     	ds	1
  1419  003F                     ___fladd@aexp:	
  1420                           
  1421                           ; 1 bytes @ 0x1F
  1422  003F                     	ds	1
  1423  0040                     ___fladd@bexp:	
  1424                           
  1425                           ; 1 bytes @ 0x20
  1426  0040                     	ds	1
  1427  0041                     ___fladd@grs:	
  1428                           
  1429                           ; 1 bytes @ 0x21
  1430  0041                     	ds	1
  1431  0042                     ?___fltol:	
  1432  0042                     ___fltol@f1:	
  1433                           ; 4 bytes @ 0x22
  1434                           
  1435                           
  1436                           ; 4 bytes @ 0x22
  1437  0042                     	ds	4
  1438  0046                     ??___fltol:	
  1439                           
  1440                           ; 1 bytes @ 0x26
  1441  0046                     	ds	5
  1442  004B                     ___fltol@sign1:	
  1443                           
  1444                           ; 1 bytes @ 0x2B
  1445  004B                     	ds	1
  1446  004C                     ___fltol@exp1:	
  1447                           
  1448                           ; 1 bytes @ 0x2C
  1449  004C                     	ds	1
  1450  004D                     ?_temp_ambiente:	
  1451  004D                     ?_temp_objeto:	
  1452                           ; 2 bytes @ 0x2D
  1453                           
  1454                           
  1455                           ; 2 bytes @ 0x2D
  1456  004D                     	ds	2
  1457  004F                     ??_temp_ambiente:	
  1458  004F                     ??_temp_objeto:	
  1459                           ; 1 bytes @ 0x2F
  1460                           
  1461                           
  1462                           ; 1 bytes @ 0x2F
  1463  004F                     	ds	5
  1464  0054                     temp_objeto@temp:	
  1465  0054                     temp_ambiente@temp:	
  1466                           ; 2 bytes @ 0x34
  1467                           
  1468                           
  1469                           ; 2 bytes @ 0x34
  1470  0054                     	ds	2
  1471  0056                     temp_objeto@temp_LSB:	
  1472  0056                     temp_ambiente@temp_LSB:	
  1473                           ; 1 bytes @ 0x36
  1474                           
  1475                           
  1476                           ; 1 bytes @ 0x36
  1477  0056                     	ds	1
  1478  0057                     temp_objeto@temp_MSB:	
  1479  0057                     temp_ambiente@temp_MSB:	
  1480                           ; 2 bytes @ 0x37
  1481                           
  1482                           
  1483                           ; 2 bytes @ 0x37
  1484  0057                     	ds	2
  1485  0059                     ??_main:	
  1486                           
  1487                           ; 1 bytes @ 0x39
  1488  0059                     	ds	1
  1489                           
  1490                           	psect	maintext
  1491  171B                     __pmaintext:	
  1492 ;;
  1493 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1494 ;;
  1495 ;; *************** function _main *****************
  1496 ;; Defined at:
  1497 ;;		line 120 in file "main_Master.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;		None
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      void 
  1504 ;; Registers used:
  1505 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : B00/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1511 ;;      Params:         0       0       0       0       0
  1512 ;;      Locals:         0       0       0       0       0
  1513 ;;      Temps:          0       1       0       0       0
  1514 ;;      Totals:         0       1       0       0       0
  1515 ;;Total ram usage:        1 bytes
  1516 ;; Hardware stack levels required when called:    5
  1517 ;; This function calls:
  1518 ;;		_SetUp
  1519 ;;		_get_Time
  1520 ;;		_mostrarLCD
  1521 ;;		_pressBoton1
  1522 ;;		_pressBoton2
  1523 ;;		_temp_ambiente
  1524 ;;		_temp_objeto
  1525 ;; This function is called by:
  1526 ;;		Startup code after reset
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           
  1531                           ;psect for function _main
  1532  171B                     _main:	
  1533                           
  1534                           ;main_Master.c: 121:     SetUp();
  1535                           
  1536                           ;incstack = 0
  1537                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1538  171B  120A  158A  22C0  160A  118A  	fcall	_SetUp
  1539  1720                     l4356:	
  1540                           
  1541                           ;main_Master.c: 124:         get_Time();
  1542  1720  120A  118A  251F  160A  118A  	fcall	_get_Time
  1543                           
  1544                           ;main_Master.c: 125:         temperatura = temp_ambiente();
  1545  1725  120A  158A  250A  160A  118A  	fcall	_temp_ambiente
  1546  172A  1283               	bcf	3,5	;RP0=0, select bank0
  1547  172B  1303               	bcf	3,6	;RP1=0, select bank0
  1548  172C  084D               	movf	?_temp_ambiente,w
  1549  172D  00D9               	movwf	??_main
  1550  172E  0859               	movf	??_main,w
  1551  172F  00E3               	movwf	_temperatura
  1552                           
  1553                           ;main_Master.c: 126:         temperatura_obj = temp_objeto();
  1554  1730  120A  158A  25BF  160A  118A  	fcall	_temp_objeto
  1555  1735  1283               	bcf	3,5	;RP0=0, select bank0
  1556  1736  1303               	bcf	3,6	;RP1=0, select bank0
  1557  1737  084D               	movf	?_temp_objeto,w
  1558  1738  00D9               	movwf	??_main
  1559  1739  0859               	movf	??_main,w
  1560  173A  00E2               	movwf	_temperatura_obj
  1561                           
  1562                           ;main_Master.c: 128:         mostrarLCD(estado);
  1563  173B  0865               	movf	_estado,w
  1564  173C  120A  118A  202D  160A  118A  	fcall	_mostrarLCD
  1565                           
  1566                           ;main_Master.c: 129:         pressBoton1();
  1567  1741  120A  158A  2251  160A  118A  	fcall	_pressBoton1
  1568                           
  1569                           ;main_Master.c: 130:         pressBoton2();
  1570  1746  120A  158A  2674  160A  118A  	fcall	_pressBoton2
  1571  174B  2F20               	goto	l4356
  1572  174C                     __end_of_main:	
  1573                           
  1574                           	psect	text1
  1575  0DBF                     __ptext1:	
  1576 ;; *************** function _temp_objeto *****************
  1577 ;; Defined at:
  1578 ;;		line 16 in file "Temperatura_I2C.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;  temp_MSB        2   55[BANK0 ] unsigned int 
  1583 ;;  temp            2   52[BANK0 ] unsigned int 
  1584 ;;  temp_LSB        1   54[BANK0 ] unsigned char 
  1585 ;;  PEC             1    0        unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  2   45[BANK0 ] int 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1595 ;;      Params:         0       2       0       0       0
  1596 ;;      Locals:         0       6       0       0       0
  1597 ;;      Temps:          0       4       0       0       0
  1598 ;;      Totals:         0      12       0       0       0
  1599 ;;Total ram usage:       12 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; Hardware stack levels required when called:    3
  1602 ;; This function calls:
  1603 ;;		_I2C_Master_Read
  1604 ;;		_I2C_Master_Start
  1605 ;;		_I2C_Master_Stop
  1606 ;;		_I2C_Master_Write
  1607 ;;		___fladd
  1608 ;;		___fltol
  1609 ;;		___lwdiv
  1610 ;;		___xxtofl
  1611 ;; This function is called by:
  1612 ;;		_main
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           
  1617                           ;psect for function _temp_objeto
  1618  0DBF                     _temp_objeto:	
  1619                           
  1620                           ;Temperatura_I2C.c: 17:     uint16_t temp_MSB;;Temperatura_I2C.c: 18:     uint8_t temp_L
      +                          SB;;Temperatura_I2C.c: 19:     uint8_t PEC;;Temperatura_I2C.c: 20:     uint16_t temp;;Te
      +                          mperatura_I2C.c: 21:     I2C_Master_Start();
  1621                           
  1622                           ;incstack = 0
  1623                           ; Regs used in _temp_objeto: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1624  0DBF  160A  118A  25E9  120A  158A  	fcall	_I2C_Master_Start
  1625                           
  1626                           ;Temperatura_I2C.c: 22:     I2C_Master_Write(0x00);
  1627  0DC4  3000               	movlw	0
  1628  0DC5  00F2               	movwf	I2C_Master_Write@d
  1629  0DC6  00F3               	movwf	I2C_Master_Write@d+1
  1630  0DC7  160A  118A  25F7  120A  158A  	fcall	_I2C_Master_Write
  1631                           
  1632                           ;Temperatura_I2C.c: 23:     I2C_Master_Write(0x07);
  1633  0DCC  3007               	movlw	7
  1634  0DCD  00F2               	movwf	I2C_Master_Write@d
  1635  0DCE  3000               	movlw	0
  1636  0DCF  00F3               	movwf	I2C_Master_Write@d+1
  1637  0DD0  160A  118A  25F7  120A  158A  	fcall	_I2C_Master_Write
  1638                           
  1639                           ;Temperatura_I2C.c: 26:     I2C_Master_Start();
  1640  0DD5  160A  118A  25E9  120A  158A  	fcall	_I2C_Master_Start
  1641                           
  1642                           ;Temperatura_I2C.c: 27:     I2C_Master_Write(0x01);
  1643  0DDA  3001               	movlw	1
  1644  0DDB  00F2               	movwf	I2C_Master_Write@d
  1645  0DDC  3000               	movlw	0
  1646  0DDD  00F3               	movwf	I2C_Master_Write@d+1
  1647  0DDE  160A  118A  25F7  120A  158A  	fcall	_I2C_Master_Write
  1648                           
  1649                           ;Temperatura_I2C.c: 28:     temp_LSB = I2C_Master_Read(0);
  1650  0DE3  3000               	movlw	0
  1651  0DE4  00F2               	movwf	I2C_Master_Read@a
  1652  0DE5  00F3               	movwf	I2C_Master_Read@a+1
  1653  0DE6  160A  118A  26EF  120A  158A  	fcall	_I2C_Master_Read
  1654  0DEB  0872               	movf	?_I2C_Master_Read,w
  1655  0DEC  1283               	bcf	3,5	;RP0=0, select bank0
  1656  0DED  1303               	bcf	3,6	;RP1=0, select bank0
  1657  0DEE  00CF               	movwf	??_temp_objeto
  1658  0DEF  084F               	movf	??_temp_objeto,w
  1659  0DF0  00D6               	movwf	temp_objeto@temp_LSB
  1660                           
  1661                           ;Temperatura_I2C.c: 29:     temp_MSB = I2C_Master_Read(0);
  1662  0DF1  3000               	movlw	0
  1663  0DF2  00F2               	movwf	I2C_Master_Read@a
  1664  0DF3  00F3               	movwf	I2C_Master_Read@a+1
  1665  0DF4  160A  118A  26EF  120A  158A  	fcall	_I2C_Master_Read
  1666  0DF9  0873               	movf	?_I2C_Master_Read+1,w
  1667  0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  1668  0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  1669  0DFC  00D8               	movwf	temp_objeto@temp_MSB+1
  1670  0DFD  0872               	movf	?_I2C_Master_Read,w
  1671  0DFE  00D7               	movwf	temp_objeto@temp_MSB
  1672  0DFF  3000               	movlw	0
  1673  0E00  00F2               	movwf	I2C_Master_Read@a
  1674  0E01  00F3               	movwf	I2C_Master_Read@a+1
  1675  0E02  160A  118A  26EF  120A  158A  	fcall	_I2C_Master_Read
  1676                           
  1677                           ;Temperatura_I2C.c: 31:     I2C_Master_Stop();
  1678  0E07  160A  118A  25F0  120A  158A  	fcall	_I2C_Master_Stop
  1679                           
  1680                           ;Temperatura_I2C.c: 32:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1681  0E0C  3082               	movlw	130
  1682  0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  1683  0E0E  1303               	bcf	3,6	;RP1=0, select bank0
  1684  0E0F  00D0               	movwf	??_temp_objeto+1
  1685  0E10  30DD               	movlw	221
  1686  0E11  00CF               	movwf	??_temp_objeto
  1687  0E12                     u3167:	
  1688  0E12  0BCF               	decfsz	??_temp_objeto,f
  1689  0E13  2E12               	goto	u3167
  1690  0E14  0BD0               	decfsz	??_temp_objeto+1,f
  1691  0E15  2E12               	goto	u3167
  1692                           
  1693                           ;Temperatura_I2C.c: 34:     temp_MSB = temp_MSB <<8;
  1694  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  1695  0E17  1303               	bcf	3,6	;RP1=0, select bank0
  1696  0E18  0857               	movf	temp_objeto@temp_MSB,w
  1697  0E19  00D0               	movwf	??_temp_objeto+1
  1698  0E1A  01CF               	clrf	??_temp_objeto
  1699  0E1B  084F               	movf	??_temp_objeto,w
  1700  0E1C  00D7               	movwf	temp_objeto@temp_MSB
  1701  0E1D  0850               	movf	??_temp_objeto+1,w
  1702  0E1E  00D8               	movwf	temp_objeto@temp_MSB+1
  1703                           
  1704                           ;Temperatura_I2C.c: 35:     temp = (((temp_MSB+temp_LSB)/50)-273.15);
  1705  0E1F  0856               	movf	temp_objeto@temp_LSB,w
  1706  0E20  0757               	addwf	temp_objeto@temp_MSB,w
  1707  0E21  00F4               	movwf	___lwdiv@dividend
  1708  0E22  0858               	movf	temp_objeto@temp_MSB+1,w
  1709  0E23  1803               	skipnc
  1710  0E24  0A58               	incf	temp_objeto@temp_MSB+1,w
  1711  0E25  00F5               	movwf	___lwdiv@dividend+1
  1712  0E26  3032               	movlw	50
  1713  0E27  00F2               	movwf	___lwdiv@divisor
  1714  0E28  3000               	movlw	0
  1715  0E29  00F3               	movwf	___lwdiv@divisor+1
  1716  0E2A  120A  118A  27C3  120A  158A  	fcall	___lwdiv
  1717  0E2F  0872               	movf	?___lwdiv,w
  1718  0E30  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0E31  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0E32  00CF               	movwf	??_temp_objeto
  1721  0E33  0873               	movf	?___lwdiv+1,w
  1722  0E34  00D0               	movwf	??_temp_objeto+1
  1723  0E35  01D1               	clrf	??_temp_objeto+2
  1724  0E36  01D2               	clrf	??_temp_objeto+3
  1725  0E37  0852               	movf	??_temp_objeto+3,w
  1726  0E38  00A3               	movwf	___xxtofl@val+3
  1727  0E39  0851               	movf	??_temp_objeto+2,w
  1728  0E3A  00A2               	movwf	___xxtofl@val+2
  1729  0E3B  0850               	movf	??_temp_objeto+1,w
  1730  0E3C  00A1               	movwf	___xxtofl@val+1
  1731  0E3D  084F               	movf	??_temp_objeto,w
  1732  0E3E  00A0               	movwf	___xxtofl@val
  1733  0E3F  3000               	movlw	0
  1734  0E40  120A  158A  23B9  120A  158A  	fcall	___xxtofl
  1735  0E45  1283               	bcf	3,5	;RP0=0, select bank0
  1736  0E46  1303               	bcf	3,6	;RP1=0, select bank0
  1737  0E47  0823               	movf	?___xxtofl+3,w
  1738  0E48  00B5               	movwf	___fladd@a+3
  1739  0E49  0822               	movf	?___xxtofl+2,w
  1740  0E4A  00B4               	movwf	___fladd@a+2
  1741  0E4B  0821               	movf	?___xxtofl+1,w
  1742  0E4C  00B3               	movwf	___fladd@a+1
  1743  0E4D  0820               	movf	?___xxtofl,w
  1744  0E4E  00B2               	movwf	___fladd@a
  1745  0E4F  30C3               	movlw	195
  1746  0E50  00B1               	movwf	___fladd@b+3
  1747  0E51  3088               	movlw	136
  1748  0E52  00B0               	movwf	___fladd@b+2
  1749  0E53  3093               	movlw	147
  1750  0E54  00AF               	movwf	___fladd@b+1
  1751  0E55  3033               	movlw	51
  1752  0E56  00AE               	movwf	___fladd@b
  1753  0E57  120A  118A  22F0  120A  158A  	fcall	___fladd
  1754  0E5C  1283               	bcf	3,5	;RP0=0, select bank0
  1755  0E5D  1303               	bcf	3,6	;RP1=0, select bank0
  1756  0E5E  0831               	movf	?___fladd+3,w
  1757  0E5F  00C5               	movwf	___fltol@f1+3
  1758  0E60  0830               	movf	?___fladd+2,w
  1759  0E61  00C4               	movwf	___fltol@f1+2
  1760  0E62  082F               	movf	?___fladd+1,w
  1761  0E63  00C3               	movwf	___fltol@f1+1
  1762  0E64  082E               	movf	?___fladd,w
  1763  0E65  00C2               	movwf	___fltol@f1
  1764  0E66  120A  158A  21E4   	fcall	___fltol
  1765  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  1766  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  1767  0E6B  0843               	movf	?___fltol+1,w
  1768  0E6C  00D5               	movwf	temp_objeto@temp+1
  1769  0E6D  0842               	movf	?___fltol,w
  1770  0E6E  00D4               	movwf	temp_objeto@temp
  1771                           
  1772                           ;Temperatura_I2C.c: 36:     return(temp);
  1773  0E6F  0855               	movf	temp_objeto@temp+1,w
  1774  0E70  00CE               	movwf	?_temp_objeto+1
  1775  0E71  0854               	movf	temp_objeto@temp,w
  1776  0E72  00CD               	movwf	?_temp_objeto
  1777  0E73  0008               	return
  1778  0E74                     __end_of_temp_objeto:	
  1779                           
  1780                           	psect	text2
  1781  0D0A                     __ptext2:	
  1782 ;; *************** function _temp_ambiente *****************
  1783 ;; Defined at:
  1784 ;;		line 39 in file "Temperatura_I2C.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;		None
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  temp_MSB        2   55[BANK0 ] unsigned int 
  1789 ;;  temp            2   52[BANK0 ] unsigned int 
  1790 ;;  temp_LSB        1   54[BANK0 ] unsigned char 
  1791 ;;  PEC             1    0        unsigned char 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  2   45[BANK0 ] int 
  1794 ;; Registers used:
  1795 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1801 ;;      Params:         0       2       0       0       0
  1802 ;;      Locals:         0       6       0       0       0
  1803 ;;      Temps:          0       4       0       0       0
  1804 ;;      Totals:         0      12       0       0       0
  1805 ;;Total ram usage:       12 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; Hardware stack levels required when called:    3
  1808 ;; This function calls:
  1809 ;;		_I2C_Master_Read
  1810 ;;		_I2C_Master_Start
  1811 ;;		_I2C_Master_Stop
  1812 ;;		_I2C_Master_Write
  1813 ;;		___fladd
  1814 ;;		___fltol
  1815 ;;		___lwdiv
  1816 ;;		___xxtofl
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           
  1823                           ;psect for function _temp_ambiente
  1824  0D0A                     _temp_ambiente:	
  1825                           
  1826                           ;Temperatura_I2C.c: 40:     uint16_t temp_MSB;;Temperatura_I2C.c: 41:     uint8_t temp_L
      +                          SB;;Temperatura_I2C.c: 42:     uint8_t PEC;;Temperatura_I2C.c: 43:     uint16_t temp;;Te
      +                          mperatura_I2C.c: 44:     I2C_Master_Start();
  1827                           
  1828                           ;incstack = 0
  1829                           ; Regs used in _temp_ambiente: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1830  0D0A  160A  118A  25E9  120A  158A  	fcall	_I2C_Master_Start
  1831                           
  1832                           ;Temperatura_I2C.c: 45:     I2C_Master_Write(0x00);
  1833  0D0F  3000               	movlw	0
  1834  0D10  00F2               	movwf	I2C_Master_Write@d
  1835  0D11  00F3               	movwf	I2C_Master_Write@d+1
  1836  0D12  160A  118A  25F7  120A  158A  	fcall	_I2C_Master_Write
  1837                           
  1838                           ;Temperatura_I2C.c: 46:     I2C_Master_Write(0x06);
  1839  0D17  3006               	movlw	6
  1840  0D18  00F2               	movwf	I2C_Master_Write@d
  1841  0D19  3000               	movlw	0
  1842  0D1A  00F3               	movwf	I2C_Master_Write@d+1
  1843  0D1B  160A  118A  25F7  120A  158A  	fcall	_I2C_Master_Write
  1844                           
  1845                           ;Temperatura_I2C.c: 49:     I2C_Master_Start();
  1846  0D20  160A  118A  25E9  120A  158A  	fcall	_I2C_Master_Start
  1847                           
  1848                           ;Temperatura_I2C.c: 50:     I2C_Master_Write(0x01);
  1849  0D25  3001               	movlw	1
  1850  0D26  00F2               	movwf	I2C_Master_Write@d
  1851  0D27  3000               	movlw	0
  1852  0D28  00F3               	movwf	I2C_Master_Write@d+1
  1853  0D29  160A  118A  25F7  120A  158A  	fcall	_I2C_Master_Write
  1854                           
  1855                           ;Temperatura_I2C.c: 51:     temp_LSB = I2C_Master_Read(0);
  1856  0D2E  3000               	movlw	0
  1857  0D2F  00F2               	movwf	I2C_Master_Read@a
  1858  0D30  00F3               	movwf	I2C_Master_Read@a+1
  1859  0D31  160A  118A  26EF  120A  158A  	fcall	_I2C_Master_Read
  1860  0D36  0872               	movf	?_I2C_Master_Read,w
  1861  0D37  1283               	bcf	3,5	;RP0=0, select bank0
  1862  0D38  1303               	bcf	3,6	;RP1=0, select bank0
  1863  0D39  00CF               	movwf	??_temp_ambiente
  1864  0D3A  084F               	movf	??_temp_ambiente,w
  1865  0D3B  00D6               	movwf	temp_ambiente@temp_LSB
  1866                           
  1867                           ;Temperatura_I2C.c: 52:     temp_MSB = I2C_Master_Read(0);
  1868  0D3C  3000               	movlw	0
  1869  0D3D  00F2               	movwf	I2C_Master_Read@a
  1870  0D3E  00F3               	movwf	I2C_Master_Read@a+1
  1871  0D3F  160A  118A  26EF  120A  158A  	fcall	_I2C_Master_Read
  1872  0D44  0873               	movf	?_I2C_Master_Read+1,w
  1873  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  1874  0D46  1303               	bcf	3,6	;RP1=0, select bank0
  1875  0D47  00D8               	movwf	temp_ambiente@temp_MSB+1
  1876  0D48  0872               	movf	?_I2C_Master_Read,w
  1877  0D49  00D7               	movwf	temp_ambiente@temp_MSB
  1878  0D4A  3000               	movlw	0
  1879  0D4B  00F2               	movwf	I2C_Master_Read@a
  1880  0D4C  00F3               	movwf	I2C_Master_Read@a+1
  1881  0D4D  160A  118A  26EF  120A  158A  	fcall	_I2C_Master_Read
  1882                           
  1883                           ;Temperatura_I2C.c: 54:     I2C_Master_Stop();
  1884  0D52  160A  118A  25F0  120A  158A  	fcall	_I2C_Master_Stop
  1885                           
  1886                           ;Temperatura_I2C.c: 55:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1887  0D57  3082               	movlw	130
  1888  0D58  1283               	bcf	3,5	;RP0=0, select bank0
  1889  0D59  1303               	bcf	3,6	;RP1=0, select bank0
  1890  0D5A  00D0               	movwf	??_temp_ambiente+1
  1891  0D5B  30DD               	movlw	221
  1892  0D5C  00CF               	movwf	??_temp_ambiente
  1893  0D5D                     u3177:	
  1894  0D5D  0BCF               	decfsz	??_temp_ambiente,f
  1895  0D5E  2D5D               	goto	u3177
  1896  0D5F  0BD0               	decfsz	??_temp_ambiente+1,f
  1897  0D60  2D5D               	goto	u3177
  1898                           
  1899                           ;Temperatura_I2C.c: 57:     temp_MSB = temp_MSB <<8;
  1900  0D61  1283               	bcf	3,5	;RP0=0, select bank0
  1901  0D62  1303               	bcf	3,6	;RP1=0, select bank0
  1902  0D63  0857               	movf	temp_ambiente@temp_MSB,w
  1903  0D64  00D0               	movwf	??_temp_ambiente+1
  1904  0D65  01CF               	clrf	??_temp_ambiente
  1905  0D66  084F               	movf	??_temp_ambiente,w
  1906  0D67  00D7               	movwf	temp_ambiente@temp_MSB
  1907  0D68  0850               	movf	??_temp_ambiente+1,w
  1908  0D69  00D8               	movwf	temp_ambiente@temp_MSB+1
  1909                           
  1910                           ;Temperatura_I2C.c: 58:     temp = (((temp_MSB+temp_LSB)/50)-273.15);
  1911  0D6A  0856               	movf	temp_ambiente@temp_LSB,w
  1912  0D6B  0757               	addwf	temp_ambiente@temp_MSB,w
  1913  0D6C  00F4               	movwf	___lwdiv@dividend
  1914  0D6D  0858               	movf	temp_ambiente@temp_MSB+1,w
  1915  0D6E  1803               	skipnc
  1916  0D6F  0A58               	incf	temp_ambiente@temp_MSB+1,w
  1917  0D70  00F5               	movwf	___lwdiv@dividend+1
  1918  0D71  3032               	movlw	50
  1919  0D72  00F2               	movwf	___lwdiv@divisor
  1920  0D73  3000               	movlw	0
  1921  0D74  00F3               	movwf	___lwdiv@divisor+1
  1922  0D75  120A  118A  27C3  120A  158A  	fcall	___lwdiv
  1923  0D7A  0872               	movf	?___lwdiv,w
  1924  0D7B  1283               	bcf	3,5	;RP0=0, select bank0
  1925  0D7C  1303               	bcf	3,6	;RP1=0, select bank0
  1926  0D7D  00CF               	movwf	??_temp_ambiente
  1927  0D7E  0873               	movf	?___lwdiv+1,w
  1928  0D7F  00D0               	movwf	??_temp_ambiente+1
  1929  0D80  01D1               	clrf	??_temp_ambiente+2
  1930  0D81  01D2               	clrf	??_temp_ambiente+3
  1931  0D82  0852               	movf	??_temp_ambiente+3,w
  1932  0D83  00A3               	movwf	___xxtofl@val+3
  1933  0D84  0851               	movf	??_temp_ambiente+2,w
  1934  0D85  00A2               	movwf	___xxtofl@val+2
  1935  0D86  0850               	movf	??_temp_ambiente+1,w
  1936  0D87  00A1               	movwf	___xxtofl@val+1
  1937  0D88  084F               	movf	??_temp_ambiente,w
  1938  0D89  00A0               	movwf	___xxtofl@val
  1939  0D8A  3000               	movlw	0
  1940  0D8B  120A  158A  23B9  120A  158A  	fcall	___xxtofl
  1941  0D90  1283               	bcf	3,5	;RP0=0, select bank0
  1942  0D91  1303               	bcf	3,6	;RP1=0, select bank0
  1943  0D92  0823               	movf	?___xxtofl+3,w
  1944  0D93  00B5               	movwf	___fladd@a+3
  1945  0D94  0822               	movf	?___xxtofl+2,w
  1946  0D95  00B4               	movwf	___fladd@a+2
  1947  0D96  0821               	movf	?___xxtofl+1,w
  1948  0D97  00B3               	movwf	___fladd@a+1
  1949  0D98  0820               	movf	?___xxtofl,w
  1950  0D99  00B2               	movwf	___fladd@a
  1951  0D9A  30C3               	movlw	195
  1952  0D9B  00B1               	movwf	___fladd@b+3
  1953  0D9C  3088               	movlw	136
  1954  0D9D  00B0               	movwf	___fladd@b+2
  1955  0D9E  3093               	movlw	147
  1956  0D9F  00AF               	movwf	___fladd@b+1
  1957  0DA0  3033               	movlw	51
  1958  0DA1  00AE               	movwf	___fladd@b
  1959  0DA2  120A  118A  22F0  120A  158A  	fcall	___fladd
  1960  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0DA8  1303               	bcf	3,6	;RP1=0, select bank0
  1962  0DA9  0831               	movf	?___fladd+3,w
  1963  0DAA  00C5               	movwf	___fltol@f1+3
  1964  0DAB  0830               	movf	?___fladd+2,w
  1965  0DAC  00C4               	movwf	___fltol@f1+2
  1966  0DAD  082F               	movf	?___fladd+1,w
  1967  0DAE  00C3               	movwf	___fltol@f1+1
  1968  0DAF  082E               	movf	?___fladd,w
  1969  0DB0  00C2               	movwf	___fltol@f1
  1970  0DB1  120A  158A  21E4   	fcall	___fltol
  1971  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  1972  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  1973  0DB6  0843               	movf	?___fltol+1,w
  1974  0DB7  00D5               	movwf	temp_ambiente@temp+1
  1975  0DB8  0842               	movf	?___fltol,w
  1976  0DB9  00D4               	movwf	temp_ambiente@temp
  1977                           
  1978                           ;Temperatura_I2C.c: 59:     return(temp);
  1979  0DBA  0855               	movf	temp_ambiente@temp+1,w
  1980  0DBB  00CE               	movwf	?_temp_ambiente+1
  1981  0DBC  0854               	movf	temp_ambiente@temp,w
  1982  0DBD  00CD               	movwf	?_temp_ambiente
  1983  0DBE  0008               	return
  1984  0DBF                     __end_of_temp_ambiente:	
  1985                           
  1986                           	psect	text3
  1987  0BB9                     __ptext3:	
  1988 ;; *************** function ___xxtofl *****************
  1989 ;; Defined at:
  1990 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  sign            1    wreg     unsigned char 
  1993 ;;  val             4    0[BANK0 ] long 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  sign            1    8[BANK0 ] unsigned char 
  1996 ;;  arg             4   10[BANK0 ] unsigned long 
  1997 ;;  exp             1    9[BANK0 ] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  4    0[BANK0 ] unsigned char 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2007 ;;      Params:         0       4       0       0       0
  2008 ;;      Locals:         0       6       0       0       0
  2009 ;;      Temps:          0       4       0       0       0
  2010 ;;      Totals:         0      14       0       0       0
  2011 ;;Total ram usage:       14 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    1
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_temp_objeto
  2018 ;;		_temp_ambiente
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function ___xxtofl
  2024  0BB9                     ___xxtofl:	
  2025                           
  2026                           ;incstack = 0
  2027                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2028                           ;___xxtofl@sign stored from wreg
  2029  0BB9  1283               	bcf	3,5	;RP0=0, select bank0
  2030  0BBA  1303               	bcf	3,6	;RP1=0, select bank0
  2031  0BBB  00A8               	movwf	___xxtofl@sign
  2032  0BBC  0828               	movf	___xxtofl@sign,w
  2033  0BBD  1D03               	btfss	3,2
  2034  0BBE  1FA3               	btfss	___xxtofl@val+3,7
  2035  0BBF  2BD0               	goto	l3174
  2036  0BC0  0920               	comf	___xxtofl@val,w
  2037  0BC1  00AA               	movwf	___xxtofl@arg
  2038  0BC2  0921               	comf	___xxtofl@val+1,w
  2039  0BC3  00AB               	movwf	___xxtofl@arg+1
  2040  0BC4  0922               	comf	___xxtofl@val+2,w
  2041  0BC5  00AC               	movwf	___xxtofl@arg+2
  2042  0BC6  0923               	comf	___xxtofl@val+3,w
  2043  0BC7  00AD               	movwf	___xxtofl@arg+3
  2044  0BC8  0AAA               	incf	___xxtofl@arg,f
  2045  0BC9  1903               	skipnz
  2046  0BCA  0AAB               	incf	___xxtofl@arg+1,f
  2047  0BCB  1903               	skipnz
  2048  0BCC  0AAC               	incf	___xxtofl@arg+2,f
  2049  0BCD  1903               	skipnz
  2050  0BCE  0AAD               	incf	___xxtofl@arg+3,f
  2051  0BCF  2BD8               	goto	l879
  2052  0BD0                     l3174:	
  2053  0BD0  0823               	movf	___xxtofl@val+3,w
  2054  0BD1  00AD               	movwf	___xxtofl@arg+3
  2055  0BD2  0822               	movf	___xxtofl@val+2,w
  2056  0BD3  00AC               	movwf	___xxtofl@arg+2
  2057  0BD4  0821               	movf	___xxtofl@val+1,w
  2058  0BD5  00AB               	movwf	___xxtofl@arg+1
  2059  0BD6  0820               	movf	___xxtofl@val,w
  2060  0BD7  00AA               	movwf	___xxtofl@arg
  2061  0BD8                     l879:	
  2062  0BD8  0823               	movf	___xxtofl@val+3,w
  2063  0BD9  0422               	iorwf	___xxtofl@val+2,w
  2064  0BDA  0421               	iorwf	___xxtofl@val+1,w
  2065  0BDB  0420               	iorwf	___xxtofl@val,w
  2066  0BDC  1D03               	skipz
  2067  0BDD  2BE7               	goto	l3180
  2068  0BDE  3000               	movlw	0
  2069  0BDF  00A3               	movwf	?___xxtofl+3
  2070  0BE0  3000               	movlw	0
  2071  0BE1  00A2               	movwf	?___xxtofl+2
  2072  0BE2  3000               	movlw	0
  2073  0BE3  00A1               	movwf	?___xxtofl+1
  2074  0BE4  3000               	movlw	0
  2075  0BE5  00A0               	movwf	?___xxtofl
  2076  0BE6  0008               	return
  2077  0BE7                     l3180:	
  2078  0BE7  3096               	movlw	150
  2079  0BE8  00A4               	movwf	??___xxtofl
  2080  0BE9  0824               	movf	??___xxtofl,w
  2081  0BEA  00A9               	movwf	___xxtofl@exp
  2082  0BEB                     l3184:	
  2083  0BEB  30FE               	movlw	254
  2084  0BEC  052D               	andwf	___xxtofl@arg+3,w
  2085  0BED  1903               	btfsc	3,2
  2086  0BEE  2C18               	goto	l885
  2087  0BEF  3001               	movlw	1
  2088  0BF0  00A4               	movwf	??___xxtofl
  2089  0BF1  0824               	movf	??___xxtofl,w
  2090  0BF2  07A9               	addwf	___xxtofl@exp,f
  2091  0BF3  3001               	movlw	1
  2092  0BF4                     u2505:	
  2093  0BF4  1003               	clrc
  2094  0BF5  0CAD               	rrf	___xxtofl@arg+3,f
  2095  0BF6  0CAC               	rrf	___xxtofl@arg+2,f
  2096  0BF7  0CAB               	rrf	___xxtofl@arg+1,f
  2097  0BF8  0CAA               	rrf	___xxtofl@arg,f
  2098  0BF9  3EFF               	addlw	-1
  2099  0BFA  1D03               	skipz
  2100  0BFB  2BF4               	goto	u2505
  2101  0BFC  2BEB               	goto	l3184
  2102  0BFD                     l3186:	
  2103  0BFD  3001               	movlw	1
  2104  0BFE  00A4               	movwf	??___xxtofl
  2105  0BFF  0824               	movf	??___xxtofl,w
  2106  0C00  07A9               	addwf	___xxtofl@exp,f
  2107  0C01  3001               	movlw	1
  2108  0C02  07AA               	addwf	___xxtofl@arg,f
  2109  0C03  3000               	movlw	0
  2110  0C04  1803               	skipnc
  2111  0C05  3001               	movlw	1
  2112  0C06  07AB               	addwf	___xxtofl@arg+1,f
  2113  0C07  3000               	movlw	0
  2114  0C08  1803               	skipnc
  2115  0C09  3001               	movlw	1
  2116  0C0A  07AC               	addwf	___xxtofl@arg+2,f
  2117  0C0B  3000               	movlw	0
  2118  0C0C  1803               	skipnc
  2119  0C0D  3001               	movlw	1
  2120  0C0E  07AD               	addwf	___xxtofl@arg+3,f
  2121  0C0F  3001               	movlw	1
  2122  0C10                     u2525:	
  2123  0C10  1003               	clrc
  2124  0C11  0CAD               	rrf	___xxtofl@arg+3,f
  2125  0C12  0CAC               	rrf	___xxtofl@arg+2,f
  2126  0C13  0CAB               	rrf	___xxtofl@arg+1,f
  2127  0C14  0CAA               	rrf	___xxtofl@arg,f
  2128  0C15  3EFF               	addlw	-1
  2129  0C16  1D03               	skipz
  2130  0C17  2C10               	goto	u2525
  2131  0C18                     l885:	
  2132  0C18  30FF               	movlw	255
  2133  0C19  052D               	andwf	___xxtofl@arg+3,w
  2134  0C1A  1903               	btfsc	3,2
  2135  0C1B  2C2C               	goto	l3194
  2136  0C1C  2BFD               	goto	l3186
  2137  0C1D                     l3196:	
  2138  0C1D  3002               	movlw	2
  2139  0C1E  0229               	subwf	___xxtofl@exp,w
  2140  0C1F  1C03               	btfss	3,0
  2141  0C20  2C2E               	goto	l892
  2142  0C21  3001               	movlw	1
  2143  0C22  02A9               	subwf	___xxtofl@exp,f
  2144  0C23  3001               	movlw	1
  2145  0C24  00A4               	movwf	??___xxtofl
  2146  0C25                     u2545:	
  2147  0C25  1003               	clrc
  2148  0C26  0DAA               	rlf	___xxtofl@arg,f
  2149  0C27  0DAB               	rlf	___xxtofl@arg+1,f
  2150  0C28  0DAC               	rlf	___xxtofl@arg+2,f
  2151  0C29  0DAD               	rlf	___xxtofl@arg+3,f
  2152  0C2A  0BA4               	decfsz	??___xxtofl,f
  2153  0C2B  2C25               	goto	u2545
  2154  0C2C                     l3194:	
  2155  0C2C  1FAC               	btfss	___xxtofl@arg+2,7
  2156  0C2D  2C1D               	goto	l3196
  2157  0C2E                     l892:	
  2158  0C2E  1829               	btfsc	___xxtofl@exp,0
  2159  0C2F  2C38               	goto	l893
  2160  0C30  30FF               	movlw	255
  2161  0C31  05AA               	andwf	___xxtofl@arg,f
  2162  0C32  30FF               	movlw	255
  2163  0C33  05AB               	andwf	___xxtofl@arg+1,f
  2164  0C34  307F               	movlw	127
  2165  0C35  05AC               	andwf	___xxtofl@arg+2,f
  2166  0C36  30FF               	movlw	255
  2167  0C37  05AD               	andwf	___xxtofl@arg+3,f
  2168  0C38                     l893:	
  2169  0C38  1003               	clrc
  2170  0C39  0CA9               	rrf	___xxtofl@exp,f
  2171  0C3A  0829               	movf	___xxtofl@exp,w
  2172  0C3B  00A4               	movwf	??___xxtofl
  2173  0C3C  01A5               	clrf	??___xxtofl+1
  2174  0C3D  01A6               	clrf	??___xxtofl+2
  2175  0C3E  01A7               	clrf	??___xxtofl+3
  2176  0C3F  3018               	movlw	24
  2177  0C40                     u2585:	
  2178  0C40  1003               	clrc
  2179  0C41  0DA4               	rlf	??___xxtofl,f
  2180  0C42  0DA5               	rlf	??___xxtofl+1,f
  2181  0C43  0DA6               	rlf	??___xxtofl+2,f
  2182  0C44  0DA7               	rlf	??___xxtofl+3,f
  2183  0C45  3EFF               	addlw	-1
  2184  0C46  1D03               	skipz
  2185  0C47  2C40               	goto	u2585
  2186  0C48  0824               	movf	??___xxtofl,w
  2187  0C49  04AA               	iorwf	___xxtofl@arg,f
  2188  0C4A  0825               	movf	??___xxtofl+1,w
  2189  0C4B  04AB               	iorwf	___xxtofl@arg+1,f
  2190  0C4C  0826               	movf	??___xxtofl+2,w
  2191  0C4D  04AC               	iorwf	___xxtofl@arg+2,f
  2192  0C4E  0827               	movf	??___xxtofl+3,w
  2193  0C4F  04AD               	iorwf	___xxtofl@arg+3,f
  2194  0C50  0828               	movf	___xxtofl@sign,w
  2195  0C51  1D03               	btfss	3,2
  2196  0C52  1FA3               	btfss	___xxtofl@val+3,7
  2197  0C53  2C55               	goto	l3208
  2198  0C54  17AD               	bsf	___xxtofl@arg+3,7
  2199  0C55                     l3208:	
  2200  0C55  082D               	movf	___xxtofl@arg+3,w
  2201  0C56  00A3               	movwf	?___xxtofl+3
  2202  0C57  082C               	movf	___xxtofl@arg+2,w
  2203  0C58  00A2               	movwf	?___xxtofl+2
  2204  0C59  082B               	movf	___xxtofl@arg+1,w
  2205  0C5A  00A1               	movwf	?___xxtofl+1
  2206  0C5B  082A               	movf	___xxtofl@arg,w
  2207  0C5C  00A0               	movwf	?___xxtofl
  2208  0C5D  0008               	return
  2209  0C5E                     __end_of___xxtofl:	
  2210                           
  2211                           	psect	text4
  2212  07C3                     __ptext4:	
  2213 ;; *************** function ___lwdiv *****************
  2214 ;; Defined at:
  2215 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  divisor         2    2[COMMON] unsigned int 
  2218 ;;  dividend        2    4[COMMON] unsigned int 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  quotient        2    7[COMMON] unsigned int 
  2221 ;;  counter         1    9[COMMON] unsigned char 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  2    2[COMMON] unsigned int 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, status,0
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2231 ;;      Params:         4       0       0       0       0
  2232 ;;      Locals:         3       0       0       0       0
  2233 ;;      Temps:          1       0       0       0       0
  2234 ;;      Totals:         8       0       0       0       0
  2235 ;;Total ram usage:        8 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    1
  2238 ;; This function calls:
  2239 ;;		Nothing
  2240 ;; This function is called by:
  2241 ;;		_temp_objeto
  2242 ;;		_temp_ambiente
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           
  2247                           ;psect for function ___lwdiv
  2248  07C3                     ___lwdiv:	
  2249                           
  2250                           ;incstack = 0
  2251                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2252  07C3  01F7               	clrf	___lwdiv@quotient
  2253  07C4  01F8               	clrf	___lwdiv@quotient+1
  2254  07C5  0872               	movf	___lwdiv@divisor,w
  2255  07C6  0473               	iorwf	___lwdiv@divisor+1,w
  2256  07C7  1903               	btfsc	3,2
  2257  07C8  2FFA               	goto	l2970
  2258  07C9  01F9               	clrf	___lwdiv@counter
  2259  07CA  0AF9               	incf	___lwdiv@counter,f
  2260  07CB                     l2958:	
  2261  07CB  1BF3               	btfsc	___lwdiv@divisor+1,7
  2262  07CC  2FD9               	goto	l2960
  2263  07CD  3001               	movlw	1
  2264  07CE                     u1955:	
  2265  07CE  1003               	clrc
  2266  07CF  0DF2               	rlf	___lwdiv@divisor,f
  2267  07D0  0DF3               	rlf	___lwdiv@divisor+1,f
  2268  07D1  3EFF               	addlw	-1
  2269  07D2  1D03               	skipz
  2270  07D3  2FCE               	goto	u1955
  2271  07D4  3001               	movlw	1
  2272  07D5  00F6               	movwf	??___lwdiv
  2273  07D6  0876               	movf	??___lwdiv,w
  2274  07D7  07F9               	addwf	___lwdiv@counter,f
  2275  07D8  2FCB               	goto	l2958
  2276  07D9                     l2960:	
  2277  07D9  3001               	movlw	1
  2278  07DA                     u1975:	
  2279  07DA  1003               	clrc
  2280  07DB  0DF7               	rlf	___lwdiv@quotient,f
  2281  07DC  0DF8               	rlf	___lwdiv@quotient+1,f
  2282  07DD  3EFF               	addlw	-1
  2283  07DE  1D03               	skipz
  2284  07DF  2FDA               	goto	u1975
  2285  07E0  0873               	movf	___lwdiv@divisor+1,w
  2286  07E1  0275               	subwf	___lwdiv@dividend+1,w
  2287  07E2  1D03               	skipz
  2288  07E3  2FE6               	goto	u1985
  2289  07E4  0872               	movf	___lwdiv@divisor,w
  2290  07E5  0274               	subwf	___lwdiv@dividend,w
  2291  07E6                     u1985:	
  2292  07E6  1C03               	skipc
  2293  07E7  2FEF               	goto	l2966
  2294  07E8  0872               	movf	___lwdiv@divisor,w
  2295  07E9  02F4               	subwf	___lwdiv@dividend,f
  2296  07EA  0873               	movf	___lwdiv@divisor+1,w
  2297  07EB  1C03               	skipc
  2298  07EC  03F5               	decf	___lwdiv@dividend+1,f
  2299  07ED  02F5               	subwf	___lwdiv@dividend+1,f
  2300  07EE  1477               	bsf	___lwdiv@quotient,0
  2301  07EF                     l2966:	
  2302  07EF  3001               	movlw	1
  2303  07F0                     u1995:	
  2304  07F0  1003               	clrc
  2305  07F1  0CF3               	rrf	___lwdiv@divisor+1,f
  2306  07F2  0CF2               	rrf	___lwdiv@divisor,f
  2307  07F3  3EFF               	addlw	-1
  2308  07F4  1D03               	skipz
  2309  07F5  2FF0               	goto	u1995
  2310  07F6  3001               	movlw	1
  2311  07F7  02F9               	subwf	___lwdiv@counter,f
  2312  07F8  1D03               	btfss	3,2
  2313  07F9  2FD9               	goto	l2960
  2314  07FA                     l2970:	
  2315  07FA  0878               	movf	___lwdiv@quotient+1,w
  2316  07FB  00F3               	movwf	?___lwdiv+1
  2317  07FC  0877               	movf	___lwdiv@quotient,w
  2318  07FD  00F2               	movwf	?___lwdiv
  2319  07FE  0008               	return
  2320  07FF                     __end_of___lwdiv:	
  2321                           
  2322                           	psect	text5
  2323  09E4                     __ptext5:	
  2324 ;; *************** function ___fltol *****************
  2325 ;; Defined at:
  2326 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  f1              4   34[BANK0 ] unsigned int 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  exp1            1   44[BANK0 ] unsigned char 
  2331 ;;  sign1           1   43[BANK0 ] unsigned char 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  4   34[BANK0 ] long 
  2334 ;; Registers used:
  2335 ;;		wreg, status,2, status,0
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2341 ;;      Params:         0       4       0       0       0
  2342 ;;      Locals:         0       2       0       0       0
  2343 ;;      Temps:          0       5       0       0       0
  2344 ;;      Totals:         0      11       0       0       0
  2345 ;;Total ram usage:       11 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; Hardware stack levels required when called:    1
  2348 ;; This function calls:
  2349 ;;		Nothing
  2350 ;; This function is called by:
  2351 ;;		_temp_objeto
  2352 ;;		_temp_ambiente
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           
  2357                           ;psect for function ___fltol
  2358  09E4                     ___fltol:	
  2359                           
  2360                           ;incstack = 0
  2361                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2362  09E4  1003               	clrc
  2363  09E5  1283               	bcf	3,5	;RP0=0, select bank0
  2364  09E6  1303               	bcf	3,6	;RP1=0, select bank0
  2365  09E7  0D44               	rlf	___fltol@f1+2,w
  2366  09E8  0D45               	rlf	___fltol@f1+3,w
  2367  09E9  00C6               	movwf	??___fltol
  2368  09EA  0846               	movf	??___fltol,w
  2369  09EB  00CC               	movwf	___fltol@exp1
  2370  09EC  084C               	movf	___fltol@exp1,w
  2371  09ED  1D03               	btfss	3,2
  2372  09EE  29F8               	goto	l4134
  2373  09EF                     l4130:	
  2374  09EF  3000               	movlw	0
  2375  09F0  00C5               	movwf	?___fltol+3
  2376  09F1  3000               	movlw	0
  2377  09F2  00C4               	movwf	?___fltol+2
  2378  09F3  3000               	movlw	0
  2379  09F4  00C3               	movwf	?___fltol+1
  2380  09F5  3000               	movlw	0
  2381  09F6  00C2               	movwf	?___fltol
  2382  09F7  0008               	return
  2383  09F8                     l4134:	
  2384  09F8  0842               	movf	___fltol@f1,w
  2385  09F9  00C6               	movwf	??___fltol
  2386  09FA  0843               	movf	___fltol@f1+1,w
  2387  09FB  00C7               	movwf	??___fltol+1
  2388  09FC  0844               	movf	___fltol@f1+2,w
  2389  09FD  00C8               	movwf	??___fltol+2
  2390  09FE  0845               	movf	___fltol@f1+3,w
  2391  09FF  00C9               	movwf	??___fltol+3
  2392  0A00  301F               	movlw	31
  2393  0A01                     u3025:	
  2394  0A01  1003               	clrc
  2395  0A02  0CC9               	rrf	??___fltol+3,f
  2396  0A03  0CC8               	rrf	??___fltol+2,f
  2397  0A04  0CC7               	rrf	??___fltol+1,f
  2398  0A05  0CC6               	rrf	??___fltol,f
  2399  0A06  3EFF               	addlw	-1
  2400  0A07  1D03               	skipz
  2401  0A08  2A01               	goto	u3025
  2402  0A09  0846               	movf	??___fltol,w
  2403  0A0A  00CA               	movwf	??___fltol+4
  2404  0A0B  084A               	movf	??___fltol+4,w
  2405  0A0C  00CB               	movwf	___fltol@sign1
  2406  0A0D  17C4               	bsf	___fltol@f1+2,7
  2407  0A0E  30FF               	movlw	255
  2408  0A0F  05C2               	andwf	___fltol@f1,f
  2409  0A10  30FF               	movlw	255
  2410  0A11  05C3               	andwf	___fltol@f1+1,f
  2411  0A12  30FF               	movlw	255
  2412  0A13  05C4               	andwf	___fltol@f1+2,f
  2413  0A14  3000               	movlw	0
  2414  0A15  05C5               	andwf	___fltol@f1+3,f
  2415  0A16  3096               	movlw	150
  2416  0A17  02CC               	subwf	___fltol@exp1,f
  2417  0A18  1FCC               	btfss	___fltol@exp1,7
  2418  0A19  2A2F               	goto	l4152
  2419  0A1A  084C               	movf	___fltol@exp1,w
  2420  0A1B  3A80               	xorlw	128
  2421  0A1C  3E97               	addlw	151
  2422  0A1D  1C03               	btfss	3,0
  2423  0A1E  29EF               	goto	l4130
  2424  0A1F                     l4150:	
  2425  0A1F  3001               	movlw	1
  2426  0A20                     u3055:	
  2427  0A20  1003               	clrc
  2428  0A21  0CC5               	rrf	___fltol@f1+3,f
  2429  0A22  0CC4               	rrf	___fltol@f1+2,f
  2430  0A23  0CC3               	rrf	___fltol@f1+1,f
  2431  0A24  0CC2               	rrf	___fltol@f1,f
  2432  0A25  3EFF               	addlw	-1
  2433  0A26  1D03               	skipz
  2434  0A27  2A20               	goto	u3055
  2435  0A28  3001               	movlw	1
  2436  0A29  00C6               	movwf	??___fltol
  2437  0A2A  0846               	movf	??___fltol,w
  2438  0A2B  07CC               	addwf	___fltol@exp1,f
  2439  0A2C  1903               	btfsc	3,2
  2440  0A2D  2A42               	goto	l4160
  2441  0A2E  2A1F               	goto	l4150
  2442  0A2F                     l4152:	
  2443  0A2F  3020               	movlw	32
  2444  0A30  024C               	subwf	___fltol@exp1,w
  2445  0A31  1803               	btfsc	3,0
  2446  0A32  29EF               	goto	l4130
  2447  0A33                     l645:	
  2448  0A33  084C               	movf	___fltol@exp1,w
  2449  0A34  1903               	btfsc	3,2
  2450  0A35  2A42               	goto	l4160
  2451  0A36  3001               	movlw	1
  2452  0A37  00C6               	movwf	??___fltol
  2453  0A38                     u3085:	
  2454  0A38  1003               	clrc
  2455  0A39  0DC2               	rlf	___fltol@f1,f
  2456  0A3A  0DC3               	rlf	___fltol@f1+1,f
  2457  0A3B  0DC4               	rlf	___fltol@f1+2,f
  2458  0A3C  0DC5               	rlf	___fltol@f1+3,f
  2459  0A3D  0BC6               	decfsz	??___fltol,f
  2460  0A3E  2A38               	goto	u3085
  2461  0A3F  3001               	movlw	1
  2462  0A40  02CC               	subwf	___fltol@exp1,f
  2463  0A41  2A33               	goto	l645
  2464  0A42                     l4160:	
  2465  0A42  084B               	movf	___fltol@sign1,w
  2466  0A43  1903               	btfsc	3,2
  2467  0A44  0008               	return
  2468  0A45  09C2               	comf	___fltol@f1,f
  2469  0A46  09C3               	comf	___fltol@f1+1,f
  2470  0A47  09C4               	comf	___fltol@f1+2,f
  2471  0A48  09C5               	comf	___fltol@f1+3,f
  2472  0A49  0AC2               	incf	___fltol@f1,f
  2473  0A4A  1903               	skipnz
  2474  0A4B  0AC3               	incf	___fltol@f1+1,f
  2475  0A4C  1903               	skipnz
  2476  0A4D  0AC4               	incf	___fltol@f1+2,f
  2477  0A4E  1903               	skipnz
  2478  0A4F  0AC5               	incf	___fltol@f1+3,f
  2479  0A50  0008               	return
  2480  0A51                     __end_of___fltol:	
  2481                           
  2482                           	psect	text6
  2483  02F0                     __ptext6:	
  2484 ;; *************** function ___fladd *****************
  2485 ;; Defined at:
  2486 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  b               4   14[BANK0 ] long 
  2489 ;;  a               4   18[BANK0 ] long 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;  grs             1   33[BANK0 ] unsigned char 
  2492 ;;  bexp            1   32[BANK0 ] unsigned char 
  2493 ;;  aexp            1   31[BANK0 ] unsigned char 
  2494 ;;  signs           1   30[BANK0 ] unsigned char 
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  4   14[BANK0 ] unsigned char 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2, status,0, btemp+1
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2504 ;;      Params:         0       8       0       0       0
  2505 ;;      Locals:         0       4       0       0       0
  2506 ;;      Temps:          0       8       0       0       0
  2507 ;;      Totals:         0      20       0       0       0
  2508 ;;Total ram usage:       20 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    1
  2511 ;; This function calls:
  2512 ;;		Nothing
  2513 ;; This function is called by:
  2514 ;;		_temp_objeto
  2515 ;;		_temp_ambiente
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           
  2520                           ;psect for function ___fladd
  2521  02F0                     ___fladd:	
  2522                           
  2523                           ;incstack = 0
  2524                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  2525  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2526  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  2527  02F2  0831               	movf	___fladd@b+3,w
  2528  02F3  3980               	andlw	128
  2529  02F4  00B6               	movwf	??___fladd
  2530  02F5  0836               	movf	??___fladd,w
  2531  02F6  00BE               	movwf	___fladd@signs
  2532  02F7  0831               	movf	___fladd@b+3,w
  2533  02F8  00B6               	movwf	??___fladd
  2534  02F9  0736               	addwf	??___fladd,w
  2535  02FA  00B7               	movwf	??___fladd+1
  2536  02FB  0837               	movf	??___fladd+1,w
  2537  02FC  00C0               	movwf	___fladd@bexp
  2538  02FD  1BB0               	btfsc	___fladd@b+2,7
  2539  02FE  1440               	bsf	___fladd@bexp,0
  2540  02FF  0840               	movf	___fladd@bexp,w
  2541  0300  1903               	btfsc	3,2
  2542  0301  2B10               	goto	l2992
  2543  0302  0A40               	incf	___fladd@bexp,w
  2544  0303  1D03               	btfss	3,2
  2545  0304  2B0D               	goto	l2988
  2546  0305  3000               	movlw	0
  2547  0306  00B1               	movwf	___fladd@b+3
  2548  0307  3000               	movlw	0
  2549  0308  00B0               	movwf	___fladd@b+2
  2550  0309  3000               	movlw	0
  2551  030A  00AF               	movwf	___fladd@b+1
  2552  030B  3000               	movlw	0
  2553  030C  00AE               	movwf	___fladd@b
  2554  030D                     l2988:	
  2555  030D  17B0               	bsf	___fladd@b+2,7
  2556  030E  01B1               	clrf	___fladd@b+3
  2557  030F  2B18               	goto	l2994
  2558  0310                     l2992:	
  2559  0310  3000               	movlw	0
  2560  0311  00B1               	movwf	___fladd@b+3
  2561  0312  3000               	movlw	0
  2562  0313  00B0               	movwf	___fladd@b+2
  2563  0314  3000               	movlw	0
  2564  0315  00AF               	movwf	___fladd@b+1
  2565  0316  3000               	movlw	0
  2566  0317  00AE               	movwf	___fladd@b
  2567  0318                     l2994:	
  2568  0318  0835               	movf	___fladd@a+3,w
  2569  0319  3980               	andlw	128
  2570  031A  00B6               	movwf	??___fladd
  2571  031B  0836               	movf	??___fladd,w
  2572  031C  00BF               	movwf	___fladd@aexp
  2573  031D  083F               	movf	___fladd@aexp,w
  2574  031E  063E               	xorwf	___fladd@signs,w
  2575  031F  1D03               	btfss	3,2
  2576  0320  173E               	bsf	___fladd@signs,6
  2577  0321  0835               	movf	___fladd@a+3,w
  2578  0322  00B6               	movwf	??___fladd
  2579  0323  0736               	addwf	??___fladd,w
  2580  0324  00B7               	movwf	??___fladd+1
  2581  0325  0837               	movf	??___fladd+1,w
  2582  0326  00BF               	movwf	___fladd@aexp
  2583  0327  1BB4               	btfsc	___fladd@a+2,7
  2584  0328  143F               	bsf	___fladd@aexp,0
  2585  0329  083F               	movf	___fladd@aexp,w
  2586  032A  1903               	btfsc	3,2
  2587  032B  2B3A               	goto	l3016
  2588  032C  0A3F               	incf	___fladd@aexp,w
  2589  032D  1D03               	btfss	3,2
  2590  032E  2B37               	goto	l3012
  2591  032F  3000               	movlw	0
  2592  0330  00B5               	movwf	___fladd@a+3
  2593  0331  3000               	movlw	0
  2594  0332  00B4               	movwf	___fladd@a+2
  2595  0333  3000               	movlw	0
  2596  0334  00B3               	movwf	___fladd@a+1
  2597  0335  3000               	movlw	0
  2598  0336  00B2               	movwf	___fladd@a
  2599  0337                     l3012:	
  2600  0337  17B4               	bsf	___fladd@a+2,7
  2601  0338  01B5               	clrf	___fladd@a+3
  2602  0339  2B42               	goto	l745
  2603  033A                     l3016:	
  2604  033A  3000               	movlw	0
  2605  033B  00B5               	movwf	___fladd@a+3
  2606  033C  3000               	movlw	0
  2607  033D  00B4               	movwf	___fladd@a+2
  2608  033E  3000               	movlw	0
  2609  033F  00B3               	movwf	___fladd@a+1
  2610  0340  3000               	movlw	0
  2611  0341  00B2               	movwf	___fladd@a
  2612  0342                     l745:	
  2613  0342  0840               	movf	___fladd@bexp,w
  2614  0343  023F               	subwf	___fladd@aexp,w
  2615  0344  1803               	skipnc
  2616  0345  2B88               	goto	l3052
  2617  0346  1F3E               	btfss	___fladd@signs,6
  2618  0347  2B4C               	goto	l3022
  2619  0348  3080               	movlw	128
  2620  0349  00B6               	movwf	??___fladd
  2621  034A  0836               	movf	??___fladd,w
  2622  034B  06BE               	xorwf	___fladd@signs,f
  2623  034C                     l3022:	
  2624  034C  0840               	movf	___fladd@bexp,w
  2625  034D  00B6               	movwf	??___fladd
  2626  034E  0836               	movf	??___fladd,w
  2627  034F  00C1               	movwf	___fladd@grs
  2628  0350  083F               	movf	___fladd@aexp,w
  2629  0351  00B6               	movwf	??___fladd
  2630  0352  0836               	movf	??___fladd,w
  2631  0353  00C0               	movwf	___fladd@bexp
  2632  0354  0841               	movf	___fladd@grs,w
  2633  0355  00B6               	movwf	??___fladd
  2634  0356  0836               	movf	??___fladd,w
  2635  0357  00BF               	movwf	___fladd@aexp
  2636  0358  082E               	movf	___fladd@b,w
  2637  0359  00B6               	movwf	??___fladd
  2638  035A  0836               	movf	??___fladd,w
  2639  035B  00C1               	movwf	___fladd@grs
  2640  035C  0832               	movf	___fladd@a,w
  2641  035D  00B6               	movwf	??___fladd
  2642  035E  0836               	movf	??___fladd,w
  2643  035F  00AE               	movwf	___fladd@b
  2644  0360  0841               	movf	___fladd@grs,w
  2645  0361  00B6               	movwf	??___fladd
  2646  0362  0836               	movf	??___fladd,w
  2647  0363  00B2               	movwf	___fladd@a
  2648  0364  082F               	movf	___fladd@b+1,w
  2649  0365  00B6               	movwf	??___fladd
  2650  0366  0836               	movf	??___fladd,w
  2651  0367  00C1               	movwf	___fladd@grs
  2652  0368  0833               	movf	___fladd@a+1,w
  2653  0369  00B6               	movwf	??___fladd
  2654  036A  0836               	movf	??___fladd,w
  2655  036B  00AF               	movwf	___fladd@b+1
  2656  036C  0841               	movf	___fladd@grs,w
  2657  036D  00B6               	movwf	??___fladd
  2658  036E  0836               	movf	??___fladd,w
  2659  036F  00B3               	movwf	___fladd@a+1
  2660  0370  0830               	movf	___fladd@b+2,w
  2661  0371  00B6               	movwf	??___fladd
  2662  0372  0836               	movf	??___fladd,w
  2663  0373  00C1               	movwf	___fladd@grs
  2664  0374  0834               	movf	___fladd@a+2,w
  2665  0375  00B6               	movwf	??___fladd
  2666  0376  0836               	movf	??___fladd,w
  2667  0377  00B0               	movwf	___fladd@b+2
  2668  0378  0841               	movf	___fladd@grs,w
  2669  0379  00B6               	movwf	??___fladd
  2670  037A  0836               	movf	??___fladd,w
  2671  037B  00B4               	movwf	___fladd@a+2
  2672  037C  0831               	movf	___fladd@b+3,w
  2673  037D  00B6               	movwf	??___fladd
  2674  037E  0836               	movf	??___fladd,w
  2675  037F  00C1               	movwf	___fladd@grs
  2676  0380  0835               	movf	___fladd@a+3,w
  2677  0381  00B6               	movwf	??___fladd
  2678  0382  0836               	movf	??___fladd,w
  2679  0383  00B1               	movwf	___fladd@b+3
  2680  0384  0841               	movf	___fladd@grs,w
  2681  0385  00B6               	movwf	??___fladd
  2682  0386  0836               	movf	??___fladd,w
  2683  0387  00B5               	movwf	___fladd@a+3
  2684  0388                     l3052:	
  2685  0388  01C1               	clrf	___fladd@grs
  2686  0389  083F               	movf	___fladd@aexp,w
  2687  038A  00B6               	movwf	??___fladd
  2688  038B  01B7               	clrf	??___fladd+1
  2689  038C  0837               	movf	??___fladd+1,w
  2690  038D  00B9               	movwf	??___fladd+3
  2691  038E  0840               	movf	___fladd@bexp,w
  2692  038F  0236               	subwf	??___fladd,w
  2693  0390  00B8               	movwf	??___fladd+2
  2694  0391  1C03               	skipc
  2695  0392  03B9               	decf	??___fladd+3,f
  2696  0393  0839               	movf	??___fladd+3,w
  2697  0394  3A80               	xorlw	128
  2698  0395  00FF               	movwf	127
  2699  0396  3080               	movlw	128
  2700  0397  027F               	subwf	127,w
  2701  0398  1D03               	skipz
  2702  0399  2B9C               	goto	u2105
  2703  039A  301A               	movlw	26
  2704  039B  0238               	subwf	??___fladd+2,w
  2705  039C                     u2105:	
  2706  039C  1C03               	skipc
  2707  039D  2BD5               	goto	l3070
  2708  039E  1283               	bcf	3,5	;RP0=0, select bank0
  2709  039F  1303               	bcf	3,6	;RP1=0, select bank0
  2710  03A0  0831               	movf	___fladd@b+3,w
  2711  03A1  0430               	iorwf	___fladd@b+2,w
  2712  03A2  042F               	iorwf	___fladd@b+1,w
  2713  03A3  042E               	iorwf	___fladd@b,w
  2714  03A4  1903               	btfsc	3,2
  2715  03A5  2BA8               	goto	u2110
  2716  03A6  3001               	movlw	1
  2717  03A7  2BA9               	goto	u2120
  2718  03A8                     u2110:	
  2719  03A8  3000               	movlw	0
  2720  03A9                     u2120:	
  2721  03A9  00B6               	movwf	??___fladd
  2722  03AA  0836               	movf	??___fladd,w
  2723  03AB  00C1               	movwf	___fladd@grs
  2724  03AC  3000               	movlw	0
  2725  03AD  00B1               	movwf	___fladd@b+3
  2726  03AE  3000               	movlw	0
  2727  03AF  00B0               	movwf	___fladd@b+2
  2728  03B0  3000               	movlw	0
  2729  03B1  00AF               	movwf	___fladd@b+1
  2730  03B2  3000               	movlw	0
  2731  03B3  00AE               	movwf	___fladd@b
  2732  03B4  083F               	movf	___fladd@aexp,w
  2733  03B5  00B6               	movwf	??___fladd
  2734  03B6  0836               	movf	??___fladd,w
  2735  03B7  00C0               	movwf	___fladd@bexp
  2736  03B8  2BDB               	goto	l749
  2737  03B9                     l751:	
  2738  03B9  1C41               	btfss	___fladd@grs,0
  2739  03BA  2BC4               	goto	l3060
  2740  03BB  0841               	movf	___fladd@grs,w
  2741  03BC  00B6               	movwf	??___fladd
  2742  03BD  1003               	clrc
  2743  03BE  0C36               	rrf	??___fladd,w
  2744  03BF  3801               	iorlw	1
  2745  03C0  00B7               	movwf	??___fladd+1
  2746  03C1  0837               	movf	??___fladd+1,w
  2747  03C2  00C1               	movwf	___fladd@grs
  2748  03C3  2BC6               	goto	l3062
  2749  03C4                     l3060:	
  2750  03C4  1003               	clrc
  2751  03C5  0CC1               	rrf	___fladd@grs,f
  2752  03C6                     l3062:	
  2753  03C6  182E               	btfsc	___fladd@b,0
  2754  03C7  17C1               	bsf	___fladd@grs,7
  2755  03C8  3001               	movlw	1
  2756  03C9  00B6               	movwf	??___fladd
  2757  03CA                     u2155:	
  2758  03CA  0D31               	rlf	___fladd@b+3,w
  2759  03CB  0CB1               	rrf	___fladd@b+3,f
  2760  03CC  0CB0               	rrf	___fladd@b+2,f
  2761  03CD  0CAF               	rrf	___fladd@b+1,f
  2762  03CE  0CAE               	rrf	___fladd@b,f
  2763  03CF  0BB6               	decfsz	??___fladd& (0+127),f
  2764  03D0  2BCA               	goto	u2155
  2765  03D1  3001               	movlw	1
  2766  03D2  00B6               	movwf	??___fladd
  2767  03D3  0836               	movf	??___fladd,w
  2768  03D4  07C0               	addwf	___fladd@bexp,f
  2769  03D5                     l3070:	
  2770  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2771  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  2772  03D7  083F               	movf	___fladd@aexp,w
  2773  03D8  0240               	subwf	___fladd@bexp,w
  2774  03D9  1C03               	skipc
  2775  03DA  2BB9               	goto	l751
  2776  03DB                     l749:	
  2777  03DB  1B3E               	btfsc	___fladd@signs,6
  2778  03DC  2C1C               	goto	l3096
  2779  03DD  0840               	movf	___fladd@bexp,w
  2780  03DE  1D03               	btfss	3,2
  2781  03DF  2BE9               	goto	l3078
  2782  03E0  3000               	movlw	0
  2783  03E1  00B1               	movwf	?___fladd+3
  2784  03E2  3000               	movlw	0
  2785  03E3  00B0               	movwf	?___fladd+2
  2786  03E4  3000               	movlw	0
  2787  03E5  00AF               	movwf	?___fladd+1
  2788  03E6  3000               	movlw	0
  2789  03E7  00AE               	movwf	?___fladd
  2790  03E8  0008               	return
  2791  03E9                     l3078:	
  2792  03E9  0832               	movf	___fladd@a,w
  2793  03EA  07AE               	addwf	___fladd@b,f
  2794  03EB  0833               	movf	___fladd@a+1,w
  2795  03EC  1103               	clrz
  2796  03ED  1803               	skipnc
  2797  03EE  3E01               	addlw	1
  2798  03EF  1D03               	btfss	3,2
  2799  03F0  07AF               	addwf	___fladd@b+1,f
  2800  03F1  0834               	movf	___fladd@a+2,w
  2801  03F2  1103               	clrz
  2802  03F3  1803               	skipnc
  2803  03F4  3E01               	addlw	1
  2804  03F5  1D03               	btfss	3,2
  2805  03F6  07B0               	addwf	___fladd@b+2,f
  2806  03F7  0835               	movf	___fladd@a+3,w
  2807  03F8  1103               	clrz
  2808  03F9  1803               	skipnc
  2809  03FA  3E01               	addlw	1
  2810  03FB  1D03               	btfss	3,2
  2811  03FC  07B1               	addwf	___fladd@b+3,f
  2812  03FD  1C31               	btfss	___fladd@b+3,0
  2813  03FE  2CBE               	goto	l3130
  2814  03FF  1C41               	btfss	___fladd@grs,0
  2815  0400  2C0A               	goto	l3086
  2816  0401  0841               	movf	___fladd@grs,w
  2817  0402  00B6               	movwf	??___fladd
  2818  0403  1003               	clrc
  2819  0404  0C36               	rrf	??___fladd,w
  2820  0405  3801               	iorlw	1
  2821  0406  00B7               	movwf	??___fladd+1
  2822  0407  0837               	movf	??___fladd+1,w
  2823  0408  00C1               	movwf	___fladd@grs
  2824  0409  2C0C               	goto	l3088
  2825  040A                     l3086:	
  2826  040A  1003               	clrc
  2827  040B  0CC1               	rrf	___fladd@grs,f
  2828  040C                     l3088:	
  2829  040C  182E               	btfsc	___fladd@b,0
  2830  040D  17C1               	bsf	___fladd@grs,7
  2831  040E  3001               	movlw	1
  2832  040F  00B6               	movwf	??___fladd
  2833  0410                     u2235:	
  2834  0410  0D31               	rlf	___fladd@b+3,w
  2835  0411  0CB1               	rrf	___fladd@b+3,f
  2836  0412  0CB0               	rrf	___fladd@b+2,f
  2837  0413  0CAF               	rrf	___fladd@b+1,f
  2838  0414  0CAE               	rrf	___fladd@b,f
  2839  0415  0BB6               	decfsz	??___fladd& (0+127),f
  2840  0416  2C10               	goto	u2235
  2841  0417  3001               	movlw	1
  2842  0418  00B6               	movwf	??___fladd
  2843  0419  0836               	movf	??___fladd,w
  2844  041A  07C0               	addwf	___fladd@bexp,f
  2845  041B  2CBE               	goto	l3130
  2846  041C                     l3096:	
  2847  041C  0831               	movf	___fladd@b+3,w
  2848  041D  3A80               	xorlw	128
  2849  041E  00FF               	movwf	127
  2850  041F  0835               	movf	___fladd@a+3,w
  2851  0420  3A80               	xorlw	128
  2852  0421  027F               	subwf	127,w
  2853  0422  1D03               	skipz
  2854  0423  2C2E               	goto	u2243
  2855  0424  0834               	movf	___fladd@a+2,w
  2856  0425  0230               	subwf	___fladd@b+2,w
  2857  0426  1D03               	skipz
  2858  0427  2C2E               	goto	u2243
  2859  0428  0833               	movf	___fladd@a+1,w
  2860  0429  022F               	subwf	___fladd@b+1,w
  2861  042A  1D03               	skipz
  2862  042B  2C2E               	goto	u2243
  2863  042C  0832               	movf	___fladd@a,w
  2864  042D  022E               	subwf	___fladd@b,w
  2865  042E                     u2243:	
  2866  042E  1803               	skipnc
  2867  042F  2C86               	goto	l3106
  2868  0430  30FF               	movlw	255
  2869  0431  00B6               	movwf	??___fladd
  2870  0432  30FF               	movlw	255
  2871  0433  00B7               	movwf	??___fladd+1
  2872  0434  30FF               	movlw	255
  2873  0435  00B8               	movwf	??___fladd+2
  2874  0436  30FF               	movlw	255
  2875  0437  00B9               	movwf	??___fladd+3
  2876  0438  0832               	movf	___fladd@a,w
  2877  0439  00BA               	movwf	??___fladd+4
  2878  043A  0833               	movf	___fladd@a+1,w
  2879  043B  00BB               	movwf	??___fladd+5
  2880  043C  0834               	movf	___fladd@a+2,w
  2881  043D  00BC               	movwf	??___fladd+6
  2882  043E  0835               	movf	___fladd@a+3,w
  2883  043F  00BD               	movwf	??___fladd+7
  2884  0440  082E               	movf	___fladd@b,w
  2885  0441  02BA               	subwf	??___fladd+4,f
  2886  0442  082F               	movf	___fladd@b+1,w
  2887  0443  1C03               	skipc
  2888  0444  0F2F               	incfsz	___fladd@b+1,w
  2889  0445  2C47               	goto	u2251
  2890  0446  2C48               	goto	u2252
  2891  0447                     u2251:	
  2892  0447  02BB               	subwf	??___fladd+5,f
  2893  0448                     u2252:	
  2894  0448  0830               	movf	___fladd@b+2,w
  2895  0449  1C03               	skipc
  2896  044A  0F30               	incfsz	___fladd@b+2,w
  2897  044B  2C4D               	goto	u2253
  2898  044C  2C4E               	goto	u2254
  2899  044D                     u2253:	
  2900  044D  02BC               	subwf	??___fladd+6,f
  2901  044E                     u2254:	
  2902  044E  0831               	movf	___fladd@b+3,w
  2903  044F  1C03               	skipc
  2904  0450  0F31               	incfsz	___fladd@b+3,w
  2905  0451  2C53               	goto	u2255
  2906  0452  2C54               	goto	u2256
  2907  0453                     u2255:	
  2908  0453  02BD               	subwf	??___fladd+7,f
  2909  0454                     u2256:	
  2910  0454  083A               	movf	??___fladd+4,w
  2911  0455  07B6               	addwf	??___fladd,f
  2912  0456  083B               	movf	??___fladd+5,w
  2913  0457  1803               	skipnc
  2914  0458  0F3B               	incfsz	??___fladd+5,w
  2915  0459  2C5B               	goto	u2260
  2916  045A  2C5C               	goto	u2261
  2917  045B                     u2260:	
  2918  045B  07B7               	addwf	??___fladd+1,f
  2919  045C                     u2261:	
  2920  045C  083C               	movf	??___fladd+6,w
  2921  045D  1803               	skipnc
  2922  045E  0F3C               	incfsz	??___fladd+6,w
  2923  045F  2C61               	goto	u2262
  2924  0460  2C62               	goto	u2263
  2925  0461                     u2262:	
  2926  0461  07B8               	addwf	??___fladd+2,f
  2927  0462                     u2263:	
  2928  0462  083D               	movf	??___fladd+7,w
  2929  0463  1803               	skipnc
  2930  0464  0A3D               	incf	??___fladd+7,w
  2931  0465  07B9               	addwf	??___fladd+3,f
  2932  0466  0839               	movf	??___fladd+3,w
  2933  0467  00B1               	movwf	___fladd@b+3
  2934  0468  0838               	movf	??___fladd+2,w
  2935  0469  00B0               	movwf	___fladd@b+2
  2936  046A  0837               	movf	??___fladd+1,w
  2937  046B  00AF               	movwf	___fladd@b+1
  2938  046C  0836               	movf	??___fladd,w
  2939  046D  00AE               	movwf	___fladd@b
  2940  046E  3080               	movlw	128
  2941  046F  00B6               	movwf	??___fladd
  2942  0470  0836               	movf	??___fladd,w
  2943  0471  06BE               	xorwf	___fladd@signs,f
  2944  0472  09C1               	comf	___fladd@grs,f
  2945  0473  0AC1               	incf	___fladd@grs,f
  2946  0474  0841               	movf	___fladd@grs,w
  2947  0475  1D03               	btfss	3,2
  2948  0476  2C94               	goto	l766
  2949  0477  3001               	movlw	1
  2950  0478  07AE               	addwf	___fladd@b,f
  2951  0479  3000               	movlw	0
  2952  047A  1803               	skipnc
  2953  047B  3001               	movlw	1
  2954  047C  07AF               	addwf	___fladd@b+1,f
  2955  047D  3000               	movlw	0
  2956  047E  1803               	skipnc
  2957  047F  3001               	movlw	1
  2958  0480  07B0               	addwf	___fladd@b+2,f
  2959  0481  3000               	movlw	0
  2960  0482  1803               	skipnc
  2961  0483  3001               	movlw	1
  2962  0484  07B1               	addwf	___fladd@b+3,f
  2963  0485  2C94               	goto	l766
  2964  0486                     l3106:	
  2965  0486  0832               	movf	___fladd@a,w
  2966  0487  02AE               	subwf	___fladd@b,f
  2967  0488  0833               	movf	___fladd@a+1,w
  2968  0489  1C03               	skipc
  2969  048A  0F33               	incfsz	___fladd@a+1,w
  2970  048B  02AF               	subwf	___fladd@b+1,f
  2971  048C  0834               	movf	___fladd@a+2,w
  2972  048D  1C03               	skipc
  2973  048E  0F34               	incfsz	___fladd@a+2,w
  2974  048F  02B0               	subwf	___fladd@b+2,f
  2975  0490  0835               	movf	___fladd@a+3,w
  2976  0491  1C03               	skipc
  2977  0492  0F35               	incfsz	___fladd@a+3,w
  2978  0493  02B1               	subwf	___fladd@b+3,f
  2979  0494                     l766:	
  2980  0494  0831               	movf	___fladd@b+3,w
  2981  0495  0430               	iorwf	___fladd@b+2,w
  2982  0496  042F               	iorwf	___fladd@b+1,w
  2983  0497  042E               	iorwf	___fladd@b,w
  2984  0498  1D03               	skipz
  2985  0499  2CBC               	goto	l3128
  2986  049A  0841               	movf	___fladd@grs,w
  2987  049B  1D03               	btfss	3,2
  2988  049C  2CBC               	goto	l3128
  2989  049D  3000               	movlw	0
  2990  049E  00B1               	movwf	?___fladd+3
  2991  049F  3000               	movlw	0
  2992  04A0  00B0               	movwf	?___fladd+2
  2993  04A1  3000               	movlw	0
  2994  04A2  00AF               	movwf	?___fladd+1
  2995  04A3  3000               	movlw	0
  2996  04A4  00AE               	movwf	?___fladd
  2997  04A5  0008               	return
  2998  04A6                     l3114:	
  2999  04A6  3001               	movlw	1
  3000  04A7  00B6               	movwf	??___fladd
  3001  04A8                     u2305:	
  3002  04A8  1003               	clrc
  3003  04A9  0DAE               	rlf	___fladd@b,f
  3004  04AA  0DAF               	rlf	___fladd@b+1,f
  3005  04AB  0DB0               	rlf	___fladd@b+2,f
  3006  04AC  0DB1               	rlf	___fladd@b+3,f
  3007  04AD  0BB6               	decfsz	??___fladd,f
  3008  04AE  2CA8               	goto	u2305
  3009  04AF  1BC1               	btfsc	___fladd@grs,7
  3010  04B0  142E               	bsf	___fladd@b,0
  3011  04B1  1C41               	btfss	___fladd@grs,0
  3012  04B2  2CB5               	goto	l3122
  3013  04B3  1403               	setc
  3014  04B4  2CB6               	goto	L1
  3015  04B5                     l3122:	
  3016  04B5  1003               	clrc
  3017  04B6                     L1:	
  3018  04B6  0DC1               	rlf	___fladd@grs,f
  3019  04B7  0840               	movf	___fladd@bexp,w
  3020  04B8  1903               	btfsc	3,2
  3021  04B9  2CBC               	goto	l3128
  3022  04BA  3001               	movlw	1
  3023  04BB  02C0               	subwf	___fladd@bexp,f
  3024  04BC                     l3128:	
  3025  04BC  1FB0               	btfss	___fladd@b+2,7
  3026  04BD  2CA6               	goto	l3114
  3027  04BE                     l3130:	
  3028  04BE  01BF               	clrf	___fladd@aexp
  3029  04BF  1FC1               	btfss	___fladd@grs,7
  3030  04C0  2CC9               	goto	l3140
  3031  04C1  0841               	movf	___fladd@grs,w
  3032  04C2  397F               	andlw	127
  3033  04C3  1903               	btfsc	3,2
  3034  04C4  182E               	btfsc	___fladd@b,0
  3035  04C5  2CC7               	goto	l3136
  3036  04C6  2CC9               	goto	l3140
  3037  04C7                     l3136:	
  3038  04C7  01BF               	clrf	___fladd@aexp
  3039  04C8  0ABF               	incf	___fladd@aexp,f
  3040  04C9                     l3140:	
  3041  04C9  083F               	movf	___fladd@aexp,w
  3042  04CA  1903               	btfsc	3,2
  3043  04CB  2CFC               	goto	l779
  3044  04CC  3001               	movlw	1
  3045  04CD  07AE               	addwf	___fladd@b,f
  3046  04CE  3000               	movlw	0
  3047  04CF  1803               	skipnc
  3048  04D0  3001               	movlw	1
  3049  04D1  07AF               	addwf	___fladd@b+1,f
  3050  04D2  3000               	movlw	0
  3051  04D3  1803               	skipnc
  3052  04D4  3001               	movlw	1
  3053  04D5  07B0               	addwf	___fladd@b+2,f
  3054  04D6  3000               	movlw	0
  3055  04D7  1803               	skipnc
  3056  04D8  3001               	movlw	1
  3057  04D9  07B1               	addwf	___fladd@b+3,f
  3058  04DA  1C31               	btfss	___fladd@b+3,0
  3059  04DB  2CFC               	goto	l779
  3060  04DC  082E               	movf	___fladd@b,w
  3061  04DD  00B6               	movwf	??___fladd
  3062  04DE  082F               	movf	___fladd@b+1,w
  3063  04DF  00B7               	movwf	??___fladd+1
  3064  04E0  0830               	movf	___fladd@b+2,w
  3065  04E1  00B8               	movwf	??___fladd+2
  3066  04E2  0831               	movf	___fladd@b+3,w
  3067  04E3  00B9               	movwf	??___fladd+3
  3068  04E4  3001               	movlw	1
  3069  04E5  00BA               	movwf	??___fladd+4
  3070  04E6                     u2405:	
  3071  04E6  0D39               	rlf	??___fladd+3,w
  3072  04E7  0CB9               	rrf	??___fladd+3,f
  3073  04E8  0CB8               	rrf	??___fladd+2,f
  3074  04E9  0CB7               	rrf	??___fladd+1,f
  3075  04EA  0CB6               	rrf	??___fladd,f
  3076  04EB  0BBA               	decfsz	??___fladd+4,f
  3077  04EC  2CE6               	goto	u2405
  3078  04ED  0839               	movf	??___fladd+3,w
  3079  04EE  00B1               	movwf	___fladd@b+3
  3080  04EF  0838               	movf	??___fladd+2,w
  3081  04F0  00B0               	movwf	___fladd@b+2
  3082  04F1  0837               	movf	??___fladd+1,w
  3083  04F2  00AF               	movwf	___fladd@b+1
  3084  04F3  0836               	movf	??___fladd,w
  3085  04F4  00AE               	movwf	___fladd@b
  3086  04F5  0A40               	incf	___fladd@bexp,w
  3087  04F6  1903               	btfsc	3,2
  3088  04F7  2CFC               	goto	l779
  3089  04F8  3001               	movlw	1
  3090  04F9  00B6               	movwf	??___fladd
  3091  04FA  0836               	movf	??___fladd,w
  3092  04FB  07C0               	addwf	___fladd@bexp,f
  3093  04FC                     l779:	
  3094  04FC  0A40               	incf	___fladd@bexp,w
  3095  04FD  1D03               	btfss	3,2
  3096  04FE  0840               	movf	___fladd@bexp,w
  3097  04FF  1D03               	btfss	3,2
  3098  0500  2D0C               	goto	l3158
  3099  0501  3000               	movlw	0
  3100  0502  00B1               	movwf	___fladd@b+3
  3101  0503  3000               	movlw	0
  3102  0504  00B0               	movwf	___fladd@b+2
  3103  0505  3000               	movlw	0
  3104  0506  00AF               	movwf	___fladd@b+1
  3105  0507  3000               	movlw	0
  3106  0508  00AE               	movwf	___fladd@b
  3107  0509  0840               	movf	___fladd@bexp,w
  3108  050A  1903               	btfsc	3,2
  3109  050B  01BE               	clrf	___fladd@signs
  3110  050C                     l3158:	
  3111  050C  1C40               	btfss	___fladd@bexp,0
  3112  050D  2D10               	goto	l3162
  3113  050E  17B0               	bsf	___fladd@b+2,7
  3114  050F  2D14               	goto	l787
  3115  0510                     l3162:	
  3116  0510  307F               	movlw	127
  3117  0511  00B6               	movwf	??___fladd
  3118  0512  0836               	movf	??___fladd,w
  3119  0513  05B0               	andwf	___fladd@b+2,f
  3120  0514                     l787:	
  3121  0514  0840               	movf	___fladd@bexp,w
  3122  0515  00B6               	movwf	??___fladd
  3123  0516  1003               	clrc
  3124  0517  0C36               	rrf	??___fladd,w
  3125  0518  00B7               	movwf	??___fladd+1
  3126  0519  0837               	movf	??___fladd+1,w
  3127  051A  00B1               	movwf	___fladd@b+3
  3128  051B  1FBE               	btfss	___fladd@signs,7
  3129  051C  0008               	return
  3130  051D  17B1               	bsf	___fladd@b+3,7
  3131  051E  0008               	return
  3132  051F                     __end_of___fladd:	
  3133                           
  3134                           	psect	text7
  3135  0E74                     __ptext7:	
  3136 ;; *************** function _pressBoton2 *****************
  3137 ;; Defined at:
  3138 ;;		line 396 in file "main_Master.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;		None
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;		None
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3152 ;;      Params:         0       0       0       0       0
  3153 ;;      Locals:         0       0       0       0       0
  3154 ;;      Temps:          0       3       0       0       0
  3155 ;;      Totals:         0       3       0       0       0
  3156 ;;Total ram usage:        3 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:    3
  3159 ;; This function calls:
  3160 ;;		_LCD_Set_Cursor
  3161 ;;		_LCD_Write_Character
  3162 ;;		_LCD_clear
  3163 ;; This function is called by:
  3164 ;;		_main
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           
  3169                           ;psect for function _pressBoton2
  3170  0E74                     _pressBoton2:	
  3171                           
  3172                           ;main_Master.c: 397:     if (banderaBoton == 1){
  3173                           
  3174                           ;incstack = 0
  3175                           ; Regs used in _pressBoton2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3176  0E74  037B               	decf	_banderaBoton,w
  3177  0E75  1D03               	btfss	3,2
  3178  0E76  2F18               	goto	l3502
  3179                           
  3180                           ;main_Master.c: 398:         if (banderaPUSH2 == 0){
  3181  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3183  0E79  0860               	movf	_banderaPUSH2,w
  3184  0E7A  1D03               	btfss	3,2
  3185  0E7B  2F18               	goto	l3502
  3186                           
  3187                           ;main_Master.c: 399:             if (PORTBbits.RB2 == 0){
  3188  0E7C  1D06               	btfss	6,2	;volatile
  3189  0E7D  2EF9               	goto	l3494
  3190  0E7E  2F12               	goto	l3496
  3191  0E7F                     l3462:	
  3192                           
  3193                           ;main_Master.c: 402:                         estado = 6;
  3194  0E7F  3006               	movlw	6
  3195  0E80  2EE9               	goto	L6
  3196  0E81                     l3464:	
  3197                           ;main_Master.c: 403:                         break;
  3198                           
  3199                           
  3200                           ;main_Master.c: 405:                         LCD_Set_Cursor(2,0);
  3201  0E81  01F5               	clrf	LCD_Set_Cursor@columna
  3202  0E82  3002               	movlw	2
  3203  0E83  120A  158A  2097  120A  158A  	fcall	_LCD_Set_Cursor
  3204                           
  3205                           ;main_Master.c: 406:                         LCD_Write_Character(1);
  3206  0E88  3001               	movlw	1
  3207  0E89  160A  118A  2611  120A  158A  	fcall	_LCD_Write_Character
  3208                           
  3209                           ;main_Master.c: 407:                         _delay((unsigned long)((100)*(8000000/4000.
      +                          0)));
  3210  0E8E  3002               	movlw	2
  3211  0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  3212  0E90  1303               	bcf	3,6	;RP1=0, select bank0
  3213  0E91  00A2               	movwf	??_pressBoton2+2
  3214  0E92  3004               	movlw	4
  3215  0E93  00A1               	movwf	??_pressBoton2+1
  3216  0E94  30B9               	movlw	185
  3217  0E95  00A0               	movwf	??_pressBoton2
  3218  0E96                     u3187:	
  3219  0E96  0BA0               	decfsz	??_pressBoton2,f
  3220  0E97  2E96               	goto	u3187
  3221  0E98  0BA1               	decfsz	??_pressBoton2+1,f
  3222  0E99  2E96               	goto	u3187
  3223  0E9A  0BA2               	decfsz	??_pressBoton2+2,f
  3224  0E9B  2E96               	goto	u3187
  3225  0E9C  2E9D               	nop2
  3226                           
  3227                           ;main_Master.c: 408:                         estado = 7;
  3228  0E9D  3007               	movlw	7
  3229  0E9E  2EE7               	goto	L7
  3230  0E9F                     l3472:	
  3231                           ;main_Master.c: 409:                         break;
  3232                           
  3233                           
  3234                           ;main_Master.c: 411:                         LCD_Set_Cursor(2,7);
  3235  0E9F  3007               	movlw	7
  3236  0EA0  00A0               	movwf	??_pressBoton2
  3237  0EA1  0820               	movf	??_pressBoton2,w
  3238  0EA2  00F5               	movwf	LCD_Set_Cursor@columna
  3239  0EA3  3002               	movlw	2
  3240  0EA4  120A  158A  2097  120A  158A  	fcall	_LCD_Set_Cursor
  3241                           
  3242                           ;main_Master.c: 412:                         LCD_Write_Character(1);
  3243  0EA9  3001               	movlw	1
  3244  0EAA  160A  118A  2611  120A  158A  	fcall	_LCD_Write_Character
  3245                           
  3246                           ;main_Master.c: 413:                         _delay((unsigned long)((100)*(8000000/4000.
      +                          0)));
  3247  0EAF  3002               	movlw	2
  3248  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  3249  0EB1  1303               	bcf	3,6	;RP1=0, select bank0
  3250  0EB2  00A2               	movwf	??_pressBoton2+2
  3251  0EB3  3004               	movlw	4
  3252  0EB4  00A1               	movwf	??_pressBoton2+1
  3253  0EB5  30B9               	movlw	185
  3254  0EB6  00A0               	movwf	??_pressBoton2
  3255  0EB7                     u3197:	
  3256  0EB7  0BA0               	decfsz	??_pressBoton2,f
  3257  0EB8  2EB7               	goto	u3197
  3258  0EB9  0BA1               	decfsz	??_pressBoton2+1,f
  3259  0EBA  2EB7               	goto	u3197
  3260  0EBB  0BA2               	decfsz	??_pressBoton2+2,f
  3261  0EBC  2EB7               	goto	u3197
  3262  0EBD  2EBE               	nop2
  3263                           
  3264                           ;main_Master.c: 414:                         estado = 8;
  3265  0EBE  3008               	movlw	8
  3266  0EBF  2EE7               	goto	L7
  3267  0EC0                     l3480:	
  3268                           ;main_Master.c: 415:                         break;
  3269                           
  3270                           
  3271                           ;main_Master.c: 417:                         LCD_Set_Cursor(2,10);
  3272  0EC0  300A               	movlw	10
  3273  0EC1  00A0               	movwf	??_pressBoton2
  3274  0EC2  0820               	movf	??_pressBoton2,w
  3275  0EC3  00F5               	movwf	LCD_Set_Cursor@columna
  3276  0EC4  3002               	movlw	2
  3277  0EC5  120A  158A  2097  120A  158A  	fcall	_LCD_Set_Cursor
  3278                           
  3279                           ;main_Master.c: 418:                         LCD_Write_Character(1);
  3280  0ECA  3001               	movlw	1
  3281  0ECB  160A  118A  2611  120A  158A  	fcall	_LCD_Write_Character
  3282                           
  3283                           ;main_Master.c: 419:                         _delay((unsigned long)((100)*(8000000/4000.
      +                          0)));
  3284  0ED0  3002               	movlw	2
  3285  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  3286  0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  3287  0ED3  00A2               	movwf	??_pressBoton2+2
  3288  0ED4  3004               	movlw	4
  3289  0ED5  00A1               	movwf	??_pressBoton2+1
  3290  0ED6  30B9               	movlw	185
  3291  0ED7  00A0               	movwf	??_pressBoton2
  3292  0ED8                     u3207:	
  3293  0ED8  0BA0               	decfsz	??_pressBoton2,f
  3294  0ED9  2ED8               	goto	u3207
  3295  0EDA  0BA1               	decfsz	??_pressBoton2+1,f
  3296  0EDB  2ED8               	goto	u3207
  3297  0EDC  0BA2               	decfsz	??_pressBoton2+2,f
  3298  0EDD  2ED8               	goto	u3207
  3299  0EDE  2EDF               	nop2
  3300                           
  3301                           ;main_Master.c: 420:                         estado = 9;
  3302  0EDF  3009               	movlw	9
  3303  0EE0  2EE7               	goto	L7
  3304  0EE1                     l3488:	
  3305                           ;main_Master.c: 421:                         break;
  3306                           
  3307                           
  3308                           ;main_Master.c: 423:                         LCD_clear();
  3309  0EE1  160A  118A  2654  120A  158A  	fcall	_LCD_clear
  3310                           
  3311                           ;main_Master.c: 424:                         estado = 10;
  3312  0EE6  300A               	movlw	10
  3313  0EE7                     L7:	
  3314  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  3315  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  3316  0EE9                     L6:	
  3317  0EE9  00A0               	movwf	??_pressBoton2
  3318  0EEA  0820               	movf	??_pressBoton2,w
  3319  0EEB  00E5               	movwf	_estado
  3320                           
  3321                           ;main_Master.c: 425:                         break;
  3322  0EEC  2F12               	goto	l3496
  3323  0EED                     l3492:	
  3324                           
  3325                           ;main_Master.c: 427:                         _delay((unsigned long)((10)*(8000000/4000.0
      +                          )));
  3326  0EED  301A               	movlw	26
  3327  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3328  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  3329  0EF0  00A1               	movwf	??_pressBoton2+1
  3330  0EF1  30F7               	movlw	247
  3331  0EF2  00A0               	movwf	??_pressBoton2
  3332  0EF3                     u3217:	
  3333  0EF3  0BA0               	decfsz	??_pressBoton2,f
  3334  0EF4  2EF3               	goto	u3217
  3335  0EF5  0BA1               	decfsz	??_pressBoton2+1,f
  3336  0EF6  2EF3               	goto	u3217
  3337  0EF7  2EF8               	nop2
  3338                           
  3339                           ;main_Master.c: 428:                 }
  3340  0EF8  2F12               	goto	l3496
  3341  0EF9                     l3494:	
  3342  0EF9  0865               	movf	_estado,w
  3343  0EFA  00A0               	movwf	??_pressBoton2
  3344  0EFB  01A1               	clrf	??_pressBoton2+1
  3345                           
  3346                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3347                           ; Switch size 1, requested type "simple"
  3348                           ; Number of cases is 1, Range of values is 0 to 0
  3349                           ; switch strategies available:
  3350                           ; Name         Instructions Cycles
  3351                           ; simple_byte            4     3 (average)
  3352                           ; direct_byte           11     8 (fixed)
  3353                           ; jumptable            260     6 (fixed)
  3354                           ;	Chosen strategy is simple_byte
  3355  0EFC  0821               	movf	??_pressBoton2+1,w
  3356  0EFD  3A00               	xorlw	0	; case 0
  3357  0EFE  1903               	skipnz
  3358  0EFF  2F01               	goto	l4800
  3359  0F00  2EED               	goto	l3492
  3360  0F01                     l4800:	
  3361                           
  3362                           ; Switch size 1, requested type "simple"
  3363                           ; Number of cases is 5, Range of values is 5 to 9
  3364                           ; switch strategies available:
  3365                           ; Name         Instructions Cycles
  3366                           ; simple_byte           16     9 (average)
  3367                           ; direct_byte           26    11 (fixed)
  3368                           ; jumptable            263     9 (fixed)
  3369                           ;	Chosen strategy is simple_byte
  3370  0F01  0820               	movf	??_pressBoton2,w
  3371  0F02  3A05               	xorlw	5	; case 5
  3372  0F03  1903               	skipnz
  3373  0F04  2E7F               	goto	l3462
  3374  0F05  3A03               	xorlw	3	; case 6
  3375  0F06  1903               	skipnz
  3376  0F07  2E81               	goto	l3464
  3377  0F08  3A01               	xorlw	1	; case 7
  3378  0F09  1903               	skipnz
  3379  0F0A  2E9F               	goto	l3472
  3380  0F0B  3A0F               	xorlw	15	; case 8
  3381  0F0C  1903               	skipnz
  3382  0F0D  2EC0               	goto	l3480
  3383  0F0E  3A01               	xorlw	1	; case 9
  3384  0F0F  1903               	skipnz
  3385  0F10  2EE1               	goto	l3488
  3386  0F11  2EED               	goto	l3492
  3387  0F12                     l3496:	
  3388                           
  3389                           ;main_Master.c: 430:                 banderaBoton = 0;
  3390  0F12  01FB               	clrf	_banderaBoton
  3391                           
  3392                           ;main_Master.c: 431:                 banderaPUSH2 = 1;
  3393  0F13  1283               	bcf	3,5	;RP0=0, select bank0
  3394  0F14  1303               	bcf	3,6	;RP1=0, select bank0
  3395  0F15  01E0               	clrf	_banderaPUSH2
  3396  0F16  0AE0               	incf	_banderaPUSH2,f
  3397                           
  3398                           ;main_Master.c: 432:                 INTCONbits.RBIE = 1;
  3399  0F17  158B               	bsf	11,3	;volatile
  3400  0F18                     l3502:	
  3401                           
  3402                           ;main_Master.c: 435:     if (banderaPUSH2 == 1){
  3403  0F18  1283               	bcf	3,5	;RP0=0, select bank0
  3404  0F19  1303               	bcf	3,6	;RP1=0, select bank0
  3405  0F1A  0360               	decf	_banderaPUSH2,w
  3406  0F1B  1D03               	btfss	3,2
  3407  0F1C  0008               	return
  3408                           
  3409                           ;main_Master.c: 436:         if (PORTBbits.RB2 == 1){
  3410  0F1D  1D06               	btfss	6,2	;volatile
  3411  0F1E  0008               	return
  3412                           
  3413                           ;main_Master.c: 437:         _delay((unsigned long)((10)*(8000000/4000.0)));
  3414  0F1F  301A               	movlw	26
  3415  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  3416  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  3417  0F22  00A1               	movwf	??_pressBoton2+1
  3418  0F23  30F7               	movlw	247
  3419  0F24  00A0               	movwf	??_pressBoton2
  3420  0F25                     u3227:	
  3421  0F25  0BA0               	decfsz	??_pressBoton2,f
  3422  0F26  2F25               	goto	u3227
  3423  0F27  0BA1               	decfsz	??_pressBoton2+1,f
  3424  0F28  2F25               	goto	u3227
  3425  0F29  2F2A               	nop2
  3426                           
  3427                           ;main_Master.c: 438:         banderaPUSH2 = 0;
  3428  0F2A  1283               	bcf	3,5	;RP0=0, select bank0
  3429  0F2B  1303               	bcf	3,6	;RP1=0, select bank0
  3430  0F2C  01E0               	clrf	_banderaPUSH2
  3431  0F2D  0008               	return
  3432  0F2E                     __end_of_pressBoton2:	
  3433                           
  3434                           	psect	text8
  3435  0A51                     __ptext8:	
  3436 ;; *************** function _pressBoton1 *****************
  3437 ;; Defined at:
  3438 ;;		line 351 in file "main_Master.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      void 
  3445 ;; Registers used:
  3446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3452 ;;      Params:         0       0       0       0       0
  3453 ;;      Locals:         0       0       0       0       0
  3454 ;;      Temps:          2       0       0       0       0
  3455 ;;      Totals:         2       0       0       0       0
  3456 ;;Total ram usage:        2 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:    3
  3459 ;; This function calls:
  3460 ;;		_LCD_clear
  3461 ;; This function is called by:
  3462 ;;		_main
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           
  3467                           ;psect for function _pressBoton1
  3468  0A51                     _pressBoton1:	
  3469                           
  3470                           ;main_Master.c: 352:     if (banderaBoton == 1){
  3471                           
  3472                           ;incstack = 0
  3473                           ; Regs used in _pressBoton1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3474  0A51  037B               	decf	_banderaBoton,w
  3475  0A52  1D03               	btfss	3,2
  3476  0A53  2AAE               	goto	l3442
  3477                           
  3478                           ;main_Master.c: 353:         if (banderaPUSH1 == 0){
  3479  0A54  087A               	movf	_banderaPUSH1,w
  3480  0A55  1D03               	btfss	3,2
  3481  0A56  2AAE               	goto	l3442
  3482                           
  3483                           ;main_Master.c: 354:             if (PORTBbits.RB1 == 0){
  3484  0A57  1283               	bcf	3,5	;RP0=0, select bank0
  3485  0A58  1303               	bcf	3,6	;RP1=0, select bank0
  3486  0A59  1C86               	btfss	6,1	;volatile
  3487  0A5A  2A97               	goto	l3434
  3488  0A5B  2AAE               	goto	l3442
  3489  0A5C                     l3406:	
  3490                           
  3491                           ;main_Master.c: 357:                         tiempo ++;
  3492  0A5C  3001               	movlw	1
  3493  0A5D  00F7               	movwf	??_pressBoton1
  3494  0A5E  0877               	movf	??_pressBoton1,w
  3495  0A5F  07E8               	addwf	_tiempo,f
  3496                           
  3497                           ;main_Master.c: 358:                         if (tiempo > 9){
  3498  0A60  300A               	movlw	10
  3499  0A61  0268               	subwf	_tiempo,w
  3500  0A62  1C03               	skipc
  3501  0A63  2AAA               	goto	l3436
  3502                           
  3503                           ;main_Master.c: 359:                             tiempo = 1;
  3504  0A64  01E8               	clrf	_tiempo
  3505  0A65  0AE8               	incf	_tiempo,f
  3506  0A66  2AAA               	goto	l3436
  3507  0A67                     l3412:	
  3508                           
  3509                           ;main_Master.c: 363:                         largo ++;
  3510  0A67  3001               	movlw	1
  3511  0A68  00F7               	movwf	??_pressBoton1
  3512  0A69  0877               	movf	??_pressBoton1,w
  3513  0A6A  07E7               	addwf	_largo,f
  3514                           
  3515                           ;main_Master.c: 364:                         if (largo > 8){
  3516  0A6B  3009               	movlw	9
  3517  0A6C  0267               	subwf	_largo,w
  3518  0A6D  1C03               	skipc
  3519  0A6E  2AAA               	goto	l3436
  3520                           
  3521                           ;main_Master.c: 365:                             largo = 1;
  3522  0A6F  01E7               	clrf	_largo
  3523  0A70  0AE7               	incf	_largo,f
  3524  0A71  2AAA               	goto	l3436
  3525  0A72                     l3418:	
  3526                           
  3527                           ;main_Master.c: 369:                         ancho ++;
  3528  0A72  3001               	movlw	1
  3529  0A73  00F7               	movwf	??_pressBoton1
  3530  0A74  0877               	movf	??_pressBoton1,w
  3531  0A75  07E6               	addwf	_ancho,f
  3532                           
  3533                           ;main_Master.c: 370:                         if (ancho > 8){
  3534  0A76  3009               	movlw	9
  3535  0A77  0266               	subwf	_ancho,w
  3536  0A78  1C03               	skipc
  3537  0A79  2AAA               	goto	l3436
  3538                           
  3539                           ;main_Master.c: 371:                             ancho = 1;
  3540  0A7A  01E6               	clrf	_ancho
  3541  0A7B  0AE6               	incf	_ancho,f
  3542  0A7C  2AAA               	goto	l3436
  3543  0A7D                     l3424:	
  3544                           
  3545                           ;main_Master.c: 375:                         LCD_clear();
  3546  0A7D  160A  118A  2654  120A  158A  	fcall	_LCD_clear
  3547                           
  3548                           ;main_Master.c: 376:                     _delay((unsigned long)((10)*(8000000/4000.0)));
  3549  0A82  301A               	movlw	26
  3550  0A83  00F8               	movwf	??_pressBoton1+1
  3551  0A84  30F8               	movlw	248
  3552  0A85  00F7               	movwf	??_pressBoton1
  3553  0A86                     u3237:	
  3554  0A86  0BF7               	decfsz	??_pressBoton1,f
  3555  0A87  2A86               	goto	u3237
  3556  0A88  0BF8               	decfsz	??_pressBoton1+1,f
  3557  0A89  2A86               	goto	u3237
  3558  0A8A  0000               	nop
  3559                           
  3560                           ;main_Master.c: 377:                     estado ++;
  3561  0A8B  3001               	movlw	1
  3562  0A8C  00F7               	movwf	??_pressBoton1
  3563  0A8D  0877               	movf	??_pressBoton1,w
  3564  0A8E  1283               	bcf	3,5	;RP0=0, select bank0
  3565  0A8F  1303               	bcf	3,6	;RP1=0, select bank0
  3566  0A90  07E5               	addwf	_estado,f
  3567                           
  3568                           ;main_Master.c: 378:                     if (estado > 5){
  3569  0A91  3006               	movlw	6
  3570  0A92  0265               	subwf	_estado,w
  3571  0A93  1C03               	skipc
  3572  0A94  2AAA               	goto	l3436
  3573                           
  3574                           ;main_Master.c: 379:                         estado = 0;
  3575  0A95  01E5               	clrf	_estado
  3576  0A96  2AAA               	goto	l3436
  3577  0A97                     l3434:	
  3578  0A97  0865               	movf	_estado,w
  3579  0A98  00F7               	movwf	??_pressBoton1
  3580  0A99  01F8               	clrf	??_pressBoton1+1
  3581                           
  3582                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3583                           ; Switch size 1, requested type "simple"
  3584                           ; Number of cases is 1, Range of values is 0 to 0
  3585                           ; switch strategies available:
  3586                           ; Name         Instructions Cycles
  3587                           ; simple_byte            4     3 (average)
  3588                           ; direct_byte           11     8 (fixed)
  3589                           ; jumptable            260     6 (fixed)
  3590                           ;	Chosen strategy is simple_byte
  3591  0A9A  0878               	movf	??_pressBoton1+1,w
  3592  0A9B  3A00               	xorlw	0	; case 0
  3593  0A9C  1903               	skipnz
  3594  0A9D  2A9F               	goto	l4802
  3595  0A9E  2A7D               	goto	l3424
  3596  0A9F                     l4802:	
  3597                           
  3598                           ; Switch size 1, requested type "simple"
  3599                           ; Number of cases is 3, Range of values is 6 to 8
  3600                           ; switch strategies available:
  3601                           ; Name         Instructions Cycles
  3602                           ; simple_byte           10     6 (average)
  3603                           ; direct_byte           20    11 (fixed)
  3604                           ; jumptable            263     9 (fixed)
  3605                           ;	Chosen strategy is simple_byte
  3606  0A9F  0877               	movf	??_pressBoton1,w
  3607  0AA0  3A06               	xorlw	6	; case 6
  3608  0AA1  1903               	skipnz
  3609  0AA2  2A5C               	goto	l3406
  3610  0AA3  3A01               	xorlw	1	; case 7
  3611  0AA4  1903               	skipnz
  3612  0AA5  2A67               	goto	l3412
  3613  0AA6  3A0F               	xorlw	15	; case 8
  3614  0AA7  1903               	skipnz
  3615  0AA8  2A72               	goto	l3418
  3616  0AA9  2A7D               	goto	l3424
  3617  0AAA                     l3436:	
  3618                           
  3619                           ;main_Master.c: 382:                 banderaBoton = 0;
  3620  0AAA  01FB               	clrf	_banderaBoton
  3621                           
  3622                           ;main_Master.c: 383:                 banderaPUSH1 = 1;
  3623  0AAB  01FA               	clrf	_banderaPUSH1
  3624  0AAC  0AFA               	incf	_banderaPUSH1,f
  3625                           
  3626                           ;main_Master.c: 384:                 INTCONbits.RBIE = 1;
  3627  0AAD  158B               	bsf	11,3	;volatile
  3628  0AAE                     l3442:	
  3629                           
  3630                           ;main_Master.c: 388:     if (banderaPUSH1 == 1){
  3631  0AAE  037A               	decf	_banderaPUSH1,w
  3632  0AAF  1D03               	btfss	3,2
  3633  0AB0  0008               	return
  3634                           
  3635                           ;main_Master.c: 389:         if (PORTBbits.RB1 == 1){
  3636  0AB1  1283               	bcf	3,5	;RP0=0, select bank0
  3637  0AB2  1303               	bcf	3,6	;RP1=0, select bank0
  3638  0AB3  1C86               	btfss	6,1	;volatile
  3639  0AB4  0008               	return
  3640                           
  3641                           ;main_Master.c: 390:         _delay((unsigned long)((10)*(8000000/4000.0)));
  3642  0AB5  301A               	movlw	26
  3643  0AB6  00F8               	movwf	??_pressBoton1+1
  3644  0AB7  30F8               	movlw	248
  3645  0AB8  00F7               	movwf	??_pressBoton1
  3646  0AB9                     u3247:	
  3647  0AB9  0BF7               	decfsz	??_pressBoton1,f
  3648  0ABA  2AB9               	goto	u3247
  3649  0ABB  0BF8               	decfsz	??_pressBoton1+1,f
  3650  0ABC  2AB9               	goto	u3247
  3651  0ABD  0000               	nop
  3652                           
  3653                           ;main_Master.c: 391:         banderaPUSH1 = 0;
  3654  0ABE  01FA               	clrf	_banderaPUSH1
  3655  0ABF  0008               	return
  3656  0AC0                     __end_of_pressBoton1:	
  3657                           
  3658                           	psect	text9
  3659  002D                     __ptext9:	
  3660 ;; *************** function _mostrarLCD *****************
  3661 ;; Defined at:
  3662 ;;		line 231 in file "main_Master.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  pantalla        1    wreg     unsigned char 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;  pantalla        1   26[BANK0 ] unsigned char 
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1    wreg      void 
  3669 ;; Registers used:
  3670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3676 ;;      Params:         0       0       0       0       0
  3677 ;;      Locals:         0       1       0       0       0
  3678 ;;      Temps:          0       3       0       0       0
  3679 ;;      Totals:         0       4       0       0       0
  3680 ;;Total ram usage:        4 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; Hardware stack levels required when called:    4
  3683 ;; This function calls:
  3684 ;;		_LCD_Set_Cursor
  3685 ;;		_LCD_Write_Character
  3686 ;;		_LCD_Write_String
  3687 ;;		_LCD_clear
  3688 ;;		_display_Datum
  3689 ;;		_display_Uhrzeit
  3690 ;;		_uint_to_array
  3691 ;; This function is called by:
  3692 ;;		_main
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           
  3697                           ;psect for function _mostrarLCD
  3698  002D                     _mostrarLCD:	
  3699                           
  3700                           ;incstack = 0
  3701                           ; Regs used in _mostrarLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3702                           ;mostrarLCD@pantalla stored from wreg
  3703  002D  1283               	bcf	3,5	;RP0=0, select bank0
  3704  002E  1303               	bcf	3,6	;RP1=0, select bank0
  3705  002F  00BA               	movwf	mostrarLCD@pantalla
  3706                           
  3707                           ;main_Master.c: 232:     switch(pantalla){
  3708  0030  2AC4               	goto	l4342
  3709  0031                     l4230:	
  3710                           
  3711                           ;main_Master.c: 234:             display_Uhrzeit(2,4);
  3712  0031  3004               	movlw	4
  3713  0032  00B7               	movwf	??_mostrarLCD
  3714  0033  0837               	movf	??_mostrarLCD,w
  3715  0034  00A8               	movwf	display_Uhrzeit@columna
  3716  0035  3002               	movlw	2
  3717  0036  120A  158A  272E  120A  118A  	fcall	_display_Uhrzeit
  3718                           
  3719                           ;main_Master.c: 235:             display_Datum(1,3);
  3720  003B  3003               	movlw	3
  3721  003C  1283               	bcf	3,5	;RP0=0, select bank0
  3722  003D  1303               	bcf	3,6	;RP1=0, select bank0
  3723  003E  00B7               	movwf	??_mostrarLCD
  3724  003F  0837               	movf	??_mostrarLCD,w
  3725  0040  00A8               	movwf	display_Datum@columna
  3726  0041  3001               	movlw	1
  3727  0042  120A  118A  26EB  120A  118A  	fcall	_display_Datum
  3728                           
  3729                           ;main_Master.c: 236:             LCD_Set_Cursor(2, 15);
  3730  0047  300F               	movlw	15
  3731  0048  1283               	bcf	3,5	;RP0=0, select bank0
  3732  0049  1303               	bcf	3,6	;RP1=0, select bank0
  3733  004A  00B7               	movwf	??_mostrarLCD
  3734  004B  0837               	movf	??_mostrarLCD,w
  3735  004C  00F5               	movwf	LCD_Set_Cursor@columna
  3736  004D  3002               	movlw	2
  3737  004E  120A  158A  2097   	fcall	_LCD_Set_Cursor
  3738                           
  3739                           ;main_Master.c: 237:             break;
  3740  0051  0008               	return
  3741  0052                     l4232:	
  3742                           
  3743                           ;main_Master.c: 239:             LCD_Set_Cursor(1,0);
  3744  0052  01F5               	clrf	LCD_Set_Cursor@columna
  3745  0053  3001               	movlw	1
  3746  0054  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  3747                           
  3748                           ;main_Master.c: 240:             LCD_Write_String("Ambiente:");
  3749  0059  3064               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3750  005A  160A  118A  26A1  120A  118A  	fcall	_LCD_Write_String
  3751                           
  3752                           ;main_Master.c: 241:             LCD_Set_Cursor(2,5);
  3753  005F  3005               	movlw	5
  3754  0060  1283               	bcf	3,5	;RP0=0, select bank0
  3755  0061  1303               	bcf	3,6	;RP1=0, select bank0
  3756  0062  00B7               	movwf	??_mostrarLCD
  3757  0063  0837               	movf	??_mostrarLCD,w
  3758  0064  00F5               	movwf	LCD_Set_Cursor@columna
  3759  0065  3002               	movlw	2
  3760  0066  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  3761                           
  3762                           ;main_Master.c: 242:             LCD_Write_Character(2);
  3763  006B  3002               	movlw	2
  3764  006C  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  3765                           
  3766                           ;main_Master.c: 243:             obj_array = uint_to_array(temperatura);
  3767  0071  1283               	bcf	3,5	;RP0=0, select bank0
  3768  0072  1303               	bcf	3,6	;RP1=0, select bank0
  3769  0073  0863               	movf	_temperatura,w
  3770  0074  120A  158A  2334  120A  118A  	fcall	_uint_to_array
  3771  0079  1283               	bcf	3,5	;RP0=0, select bank0
  3772  007A  1303               	bcf	3,6	;RP1=0, select bank0
  3773  007B  00B7               	movwf	??_mostrarLCD
  3774  007C  0837               	movf	??_mostrarLCD,w
  3775  007D  00E1               	movwf	_obj_array
  3776                           
  3777                           ;main_Master.c: 244:             if (obj_array[0] == 0){
  3778  007E  0861               	movf	_obj_array,w
  3779  007F  0084               	movwf	4
  3780  0080  1383               	bcf	3,7	;select IRP bank0
  3781  0081  0800               	movf	0,w
  3782  0082  00B7               	movwf	??_mostrarLCD
  3783  0083  0A84               	incf	4,f
  3784  0084  0800               	movf	0,w
  3785  0085  00B8               	movwf	??_mostrarLCD+1
  3786  0086  0837               	movf	??_mostrarLCD,w
  3787  0087  0438               	iorwf	??_mostrarLCD+1,w
  3788  0088  1D03               	btfss	3,2
  3789  0089  288C               	goto	l4242
  3790                           
  3791                           ;main_Master.c: 245:                 LCD_Write_Character(' ');
  3792  008A  3020               	movlw	32
  3793  008B  2890               	goto	L8
  3794  008C                     l4242:	
  3795                           ;main_Master.c: 246:             }
  3796                           
  3797                           
  3798                           ;main_Master.c: 248:                 LCD_Write_Character('0' + obj_array[0]);
  3799  008C  0861               	movf	_obj_array,w
  3800  008D  0084               	movwf	4
  3801  008E  0800               	movf	0,w
  3802  008F  3E30               	addlw	48
  3803  0090                     L8:	
  3804  0090  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  3805                           
  3806                           ;main_Master.c: 250:             LCD_Write_Character('0' + obj_array[1]);
  3807                           
  3808                           ;main_Master.c: 249:             }
  3809  0095  1283               	bcf	3,5	;RP0=0, select bank0
  3810  0096  1303               	bcf	3,6	;RP1=0, select bank0
  3811  0097  0861               	movf	_obj_array,w
  3812  0098  3E02               	addlw	2
  3813  0099  0084               	movwf	4
  3814  009A  1383               	bcf	3,7	;select IRP bank0
  3815  009B  0800               	movf	0,w
  3816  009C  3E30               	addlw	48
  3817  009D  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  3818                           
  3819                           ;main_Master.c: 251:             LCD_Write_Character('0' + obj_array[2]);
  3820  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  3821  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  3822  00A4  0861               	movf	_obj_array,w
  3823  00A5  3E04               	addlw	4
  3824  00A6  0084               	movwf	4
  3825  00A7  1383               	bcf	3,7	;select IRP bank0
  3826  00A8  0800               	movf	0,w
  3827  00A9  3E30               	addlw	48
  3828  00AA  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  3829                           
  3830                           ;main_Master.c: 252:             LCD_Write_Character(223);
  3831  00AF  30DF               	movlw	223
  3832  00B0  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  3833                           
  3834                           ;main_Master.c: 253:             LCD_Write_Character('C');
  3835  00B5  3043               	movlw	67
  3836  00B6  160A  118A  2611   	fcall	_LCD_Write_Character
  3837                           
  3838                           ;main_Master.c: 254:             break;
  3839  00B9  0008               	return
  3840  00BA                     l4248:	
  3841                           
  3842                           ;main_Master.c: 256:             LCD_Set_Cursor(1,0);
  3843  00BA  01F5               	clrf	LCD_Set_Cursor@columna
  3844  00BB  3001               	movlw	1
  3845  00BC  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  3846                           
  3847                           ;main_Master.c: 257:             LCD_Write_String("Temp. del Suelo:");
  3848  00C1  3029               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3849  00C2  160A  118A  26A1  120A  118A  	fcall	_LCD_Write_String
  3850                           
  3851                           ;main_Master.c: 258:             LCD_Set_Cursor(2,5);
  3852  00C7  3005               	movlw	5
  3853  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  3854  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  3855  00CA  00B7               	movwf	??_mostrarLCD
  3856  00CB  0837               	movf	??_mostrarLCD,w
  3857  00CC  00F5               	movwf	LCD_Set_Cursor@columna
  3858  00CD  3002               	movlw	2
  3859  00CE  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  3860                           
  3861                           ;main_Master.c: 259:             LCD_Write_Character(2);
  3862  00D3  3002               	movlw	2
  3863  00D4  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  3864                           
  3865                           ;main_Master.c: 260:             obj_array = uint_to_array(temperatura_obj);
  3866  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  3867  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  3868  00DB  0862               	movf	_temperatura_obj,w
  3869  00DC  120A  158A  2334  120A  118A  	fcall	_uint_to_array
  3870  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  3871  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  3872  00E3  00B7               	movwf	??_mostrarLCD
  3873  00E4  0837               	movf	??_mostrarLCD,w
  3874  00E5  00E1               	movwf	_obj_array
  3875                           
  3876                           ;main_Master.c: 261:             if (obj_array[0] == 0){
  3877  00E6  0861               	movf	_obj_array,w
  3878  00E7  0084               	movwf	4
  3879  00E8  1383               	bcf	3,7	;select IRP bank0
  3880  00E9  0800               	movf	0,w
  3881  00EA  00B7               	movwf	??_mostrarLCD
  3882  00EB  0A84               	incf	4,f
  3883  00EC  0800               	movf	0,w
  3884  00ED  00B8               	movwf	??_mostrarLCD+1
  3885  00EE  0837               	movf	??_mostrarLCD,w
  3886  00EF  0438               	iorwf	??_mostrarLCD+1,w
  3887  00F0  1D03               	btfss	3,2
  3888  00F1  28F4               	goto	l4258
  3889                           
  3890                           ;main_Master.c: 262:                 LCD_Write_Character(' ');
  3891  00F2  3020               	movlw	32
  3892  00F3  28F8               	goto	L9
  3893  00F4                     l4258:	
  3894                           ;main_Master.c: 263:             }
  3895                           
  3896                           
  3897                           ;main_Master.c: 265:                 LCD_Write_Character('0' + obj_array[0]);
  3898  00F4  0861               	movf	_obj_array,w
  3899  00F5  0084               	movwf	4
  3900  00F6  0800               	movf	0,w
  3901  00F7  3E30               	addlw	48
  3902  00F8                     L9:	
  3903  00F8  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  3904                           
  3905                           ;main_Master.c: 268:             if (obj_array[1] == 0 && obj_array[0] == 0){
  3906  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  3907  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  3908  00FF  0861               	movf	_obj_array,w
  3909  0100  3E02               	addlw	2
  3910  0101  0084               	movwf	4
  3911  0102  1383               	bcf	3,7	;select IRP bank0
  3912  0103  0800               	movf	0,w
  3913  0104  00B7               	movwf	??_mostrarLCD
  3914  0105  0A84               	incf	4,f
  3915  0106  0800               	movf	0,w
  3916  0107  00B8               	movwf	??_mostrarLCD+1
  3917  0108  0837               	movf	??_mostrarLCD,w
  3918  0109  0438               	iorwf	??_mostrarLCD+1,w
  3919  010A  1D03               	btfss	3,2
  3920  010B  2919               	goto	l4266
  3921  010C  0861               	movf	_obj_array,w
  3922  010D  0084               	movwf	4
  3923  010E  0800               	movf	0,w
  3924  010F  00B7               	movwf	??_mostrarLCD
  3925  0110  0A84               	incf	4,f
  3926  0111  0800               	movf	0,w
  3927  0112  00B8               	movwf	??_mostrarLCD+1
  3928  0113  0837               	movf	??_mostrarLCD,w
  3929  0114  0438               	iorwf	??_mostrarLCD+1,w
  3930  0115  1D03               	btfss	3,2
  3931  0116  2919               	goto	l4266
  3932                           
  3933                           ;main_Master.c: 269:                 LCD_Write_Character(' ');
  3934  0117  3020               	movlw	32
  3935  0118  291E               	goto	L10
  3936  0119                     l4266:	
  3937                           ;main_Master.c: 270:             }
  3938                           
  3939                           
  3940                           ;main_Master.c: 272:                 LCD_Write_Character('0' + obj_array[1]);
  3941  0119  0861               	movf	_obj_array,w
  3942  011A  3E02               	addlw	2
  3943  011B  0084               	movwf	4
  3944  011C  0800               	movf	0,w
  3945  011D  3E30               	addlw	48
  3946  011E                     L10:	
  3947  011E  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  3948                           
  3949                           ;main_Master.c: 274:             LCD_Write_Character('0' + obj_array[2]);
  3950                           
  3951                           ;main_Master.c: 273:             }
  3952  0123  1283               	bcf	3,5	;RP0=0, select bank0
  3953  0124  1303               	bcf	3,6	;RP1=0, select bank0
  3954  0125  0861               	movf	_obj_array,w
  3955  0126  3E04               	addlw	4
  3956  0127  0084               	movwf	4
  3957  0128  1383               	bcf	3,7	;select IRP bank0
  3958  0129  0800               	movf	0,w
  3959  012A  3E30               	addlw	48
  3960  012B  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  3961                           
  3962                           ;main_Master.c: 275:             LCD_Write_Character(223);
  3963  0130  30DF               	movlw	223
  3964  0131  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  3965                           
  3966                           ;main_Master.c: 276:             LCD_Write_Character('C');
  3967  0136  3043               	movlw	67
  3968  0137  160A  118A  2611   	fcall	_LCD_Write_Character
  3969                           
  3970                           ;main_Master.c: 277:             break;
  3971  013A  0008               	return
  3972  013B                     l4272:	
  3973                           
  3974                           ;main_Master.c: 279:             LCD_Set_Cursor(1,0);
  3975  013B  01F5               	clrf	LCD_Set_Cursor@columna
  3976  013C  3001               	movlw	1
  3977  013D  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  3978                           
  3979                           ;main_Master.c: 280:             LCD_Write_String("Humedad:");
  3980  0142  306E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  3981  0143  160A  118A  26A1  120A  118A  	fcall	_LCD_Write_String
  3982                           
  3983                           ;main_Master.c: 281:             LCD_Set_Cursor(2,4);
  3984  0148  3004               	movlw	4
  3985  0149  1283               	bcf	3,5	;RP0=0, select bank0
  3986  014A  1303               	bcf	3,6	;RP1=0, select bank0
  3987  014B  00B7               	movwf	??_mostrarLCD
  3988  014C  0837               	movf	??_mostrarLCD,w
  3989  014D  00F5               	movwf	LCD_Set_Cursor@columna
  3990  014E  3002               	movlw	2
  3991  014F  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  3992                           
  3993                           ;main_Master.c: 282:             LCD_Write_Character(3);
  3994  0154  3003               	movlw	3
  3995  0155  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  3996                           
  3997                           ;main_Master.c: 283:             LCD_Write_Character(' ');
  3998  015A  3020               	movlw	32
  3999  015B  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  4000                           
  4001                           ;main_Master.c: 284:             LCD_Write_String("80");
  4002  0160  308B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  4003  0161  160A  118A  26A1  120A  118A  	fcall	_LCD_Write_String
  4004                           
  4005                           ;main_Master.c: 285:             LCD_Write_Character('%');
  4006  0166  3025               	movlw	37
  4007  0167  160A  118A  2611   	fcall	_LCD_Write_Character
  4008                           
  4009                           ;main_Master.c: 286:             break;
  4010  016A  0008               	return
  4011  016B                     l4280:	
  4012                           
  4013                           ;main_Master.c: 288:             LCD_Set_Cursor(1,0);
  4014  016B  01F5               	clrf	LCD_Set_Cursor@columna
  4015  016C  3001               	movlw	1
  4016  016D  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  4017                           
  4018                           ;main_Master.c: 289:             LCD_Write_String("Atr");
  4019  0172  3081               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  4020  0173  160A  118A  26A1  120A  118A  	fcall	_LCD_Write_String
  4021                           
  4022                           ;main_Master.c: 290:             LCD_Write_Character(0);
  4023  0178  3000               	movlw	0
  4024  0179  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  4025                           
  4026                           ;main_Master.c: 291:             LCD_Write_String("s: | Frente:");
  4027  017E  304A               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  4028  017F  160A  118A  26A1  120A  118A  	fcall	_LCD_Write_String
  4029                           
  4030                           ;main_Master.c: 292:             LCD_Set_Cursor(2,2);
  4031  0184  3002               	movlw	2
  4032  0185  1283               	bcf	3,5	;RP0=0, select bank0
  4033  0186  1303               	bcf	3,6	;RP1=0, select bank0
  4034  0187  00B7               	movwf	??_mostrarLCD
  4035  0188  0837               	movf	??_mostrarLCD,w
  4036  0189  00F5               	movwf	LCD_Set_Cursor@columna
  4037  018A  3002               	movlw	2
  4038  018B  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  4039                           
  4040                           ;main_Master.c: 293:             LCD_Write_String("3");
  4041  0190  308E               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  4042  0191  160A  118A  26A1  120A  118A  	fcall	_LCD_Write_String
  4043                           
  4044                           ;main_Master.c: 294:             LCD_Write_Character('m');
  4045  0196  306D               	movlw	109
  4046  0197  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  4047                           
  4048                           ;main_Master.c: 295:             LCD_Set_Cursor(2,7);
  4049  019C  3007               	movlw	7
  4050  019D  1283               	bcf	3,5	;RP0=0, select bank0
  4051  019E  1303               	bcf	3,6	;RP1=0, select bank0
  4052  019F  00B7               	movwf	??_mostrarLCD
  4053  01A0  0837               	movf	??_mostrarLCD,w
  4054  01A1  00F5               	movwf	LCD_Set_Cursor@columna
  4055  01A2  3002               	movlw	2
  4056  01A3  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  4057                           
  4058                           ;main_Master.c: 296:             LCD_Write_Character('|');
  4059  01A8  307C               	movlw	124
  4060  01A9  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  4061                           
  4062                           ;main_Master.c: 297:             LCD_Set_Cursor(2,11);
  4063  01AE  300B               	movlw	11
  4064  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  4065  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  4066  01B1  00B7               	movwf	??_mostrarLCD
  4067  01B2  0837               	movf	??_mostrarLCD,w
  4068  01B3  00F5               	movwf	LCD_Set_Cursor@columna
  4069  01B4  3002               	movlw	2
  4070  01B5  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  4071                           
  4072                           ;main_Master.c: 298:             LCD_Write_String("4");
  4073  01BA  3090               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  4074  01BB  160A  118A  26A1  120A  118A  	fcall	_LCD_Write_String
  4075                           
  4076                           ;main_Master.c: 299:             LCD_Write_Character('m');
  4077  01C0  306D               	movlw	109
  4078  01C1  160A  118A  2611   	fcall	_LCD_Write_Character
  4079                           
  4080                           ;main_Master.c: 300:             break;
  4081  01C4  0008               	return
  4082  01C5                     l4296:	
  4083                           
  4084                           ;main_Master.c: 302:             LCD_Set_Cursor(1, 0);
  4085  01C5  01F5               	clrf	LCD_Set_Cursor@columna
  4086  01C6  3001               	movlw	1
  4087  01C7  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  4088                           
  4089                           ;main_Master.c: 303:             LCD_Write_String("Tomar datos:");
  4090  01CC  3057               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  4091  01CD  160A  118A  26A1  120A  118A  	fcall	_LCD_Write_String
  4092                           
  4093                           ;main_Master.c: 304:             LCD_Set_Cursor(2,1);
  4094  01D2  01F5               	clrf	LCD_Set_Cursor@columna
  4095  01D3  0AF5               	incf	LCD_Set_Cursor@columna,f
  4096  01D4  3002               	movlw	2
  4097  01D5  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  4098                           
  4099                           ;main_Master.c: 305:             LCD_Write_Character(tiempo + '0');
  4100  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  4101  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  4102  01DC  0868               	movf	_tiempo,w
  4103  01DD  3E30               	addlw	48
  4104  01DE  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  4105                           
  4106                           ;main_Master.c: 306:             LCD_Write_String("min");
  4107  01E3  307D               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  4108  01E4  160A  118A  26A1  120A  118A  	fcall	_LCD_Write_String
  4109                           
  4110                           ;main_Master.c: 307:             LCD_Set_Cursor(2,8);
  4111  01E9  3008               	movlw	8
  4112  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  4113  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  4114  01EC  00B7               	movwf	??_mostrarLCD
  4115  01ED  0837               	movf	??_mostrarLCD,w
  4116  01EE  00F5               	movwf	LCD_Set_Cursor@columna
  4117  01EF  3002               	movlw	2
  4118  01F0  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  4119                           
  4120                           ;main_Master.c: 308:             LCD_Write_Character('0' + largo);
  4121  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  4122  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  4123  01F7  0867               	movf	_largo,w
  4124  01F8  3E30               	addlw	48
  4125  01F9  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  4126                           
  4127                           ;main_Master.c: 309:             LCD_Write_String("x ");
  4128  01FE  3085               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  4129  01FF  160A  118A  26A1  120A  118A  	fcall	_LCD_Write_String
  4130                           
  4131                           ;main_Master.c: 310:             LCD_Write_Character('0' + ancho);
  4132  0204  1283               	bcf	3,5	;RP0=0, select bank0
  4133  0205  1303               	bcf	3,6	;RP1=0, select bank0
  4134  0206  0866               	movf	_ancho,w
  4135  0207  3E30               	addlw	48
  4136  0208  160A  118A  2611   	fcall	_LCD_Write_Character
  4137                           
  4138                           ;main_Master.c: 311:             break;
  4139  020B  0008               	return
  4140  020C                     l4308:	
  4141                           
  4142                           ;main_Master.c: 313:             LCD_Set_Cursor(2,0);
  4143  020C  01F5               	clrf	LCD_Set_Cursor@columna
  4144  020D  3002               	movlw	2
  4145  020E  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  4146                           
  4147                           ;main_Master.c: 314:             LCD_Write_Character(4);
  4148  0213  3004               	movlw	4
  4149  0214  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  4150                           
  4151                           ;main_Master.c: 315:             LCD_Write_Character(tiempo + '0');
  4152  0219  1283               	bcf	3,5	;RP0=0, select bank0
  4153  021A  1303               	bcf	3,6	;RP1=0, select bank0
  4154  021B  0868               	movf	_tiempo,w
  4155  021C  3E30               	addlw	48
  4156  021D  160A  118A  2611   	fcall	_LCD_Write_Character
  4157                           
  4158                           ;main_Master.c: 316:             break;
  4159  0220  0008               	return
  4160  0221                     l4314:	
  4161                           
  4162                           ;main_Master.c: 318:             LCD_Set_Cursor(2,0);
  4163  0221  01F5               	clrf	LCD_Set_Cursor@columna
  4164  0222  3002               	movlw	2
  4165  0223  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  4166                           
  4167                           ;main_Master.c: 319:             LCD_Write_Character(' ');
  4168  0228  3020               	movlw	32
  4169  0229  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  4170                           
  4171                           ;main_Master.c: 320:             LCD_Set_Cursor(2,7);
  4172  022E  3007               	movlw	7
  4173  022F  1283               	bcf	3,5	;RP0=0, select bank0
  4174  0230  1303               	bcf	3,6	;RP1=0, select bank0
  4175  0231  00B7               	movwf	??_mostrarLCD
  4176  0232  0837               	movf	??_mostrarLCD,w
  4177  0233  00F5               	movwf	LCD_Set_Cursor@columna
  4178  0234  3002               	movlw	2
  4179  0235  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  4180                           
  4181                           ;main_Master.c: 321:             LCD_Write_Character(4);
  4182  023A  3004               	movlw	4
  4183  023B  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  4184                           
  4185                           ;main_Master.c: 322:             LCD_Write_Character('0' + largo);
  4186  0240  1283               	bcf	3,5	;RP0=0, select bank0
  4187  0241  1303               	bcf	3,6	;RP1=0, select bank0
  4188  0242  0867               	movf	_largo,w
  4189  0243  3E30               	addlw	48
  4190  0244  160A  118A  2611   	fcall	_LCD_Write_Character
  4191                           
  4192                           ;main_Master.c: 323:             break;
  4193  0247  0008               	return
  4194  0248                     l4320:	
  4195                           
  4196                           ;main_Master.c: 325:             LCD_Set_Cursor(2,7);
  4197  0248  3007               	movlw	7
  4198  0249  00B7               	movwf	??_mostrarLCD
  4199  024A  0837               	movf	??_mostrarLCD,w
  4200  024B  00F5               	movwf	LCD_Set_Cursor@columna
  4201  024C  3002               	movlw	2
  4202  024D  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  4203                           
  4204                           ;main_Master.c: 326:             LCD_Write_Character(' ');
  4205  0252  3020               	movlw	32
  4206  0253  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  4207                           
  4208                           ;main_Master.c: 327:             LCD_Set_Cursor(2,10);
  4209  0258  300A               	movlw	10
  4210  0259  1283               	bcf	3,5	;RP0=0, select bank0
  4211  025A  1303               	bcf	3,6	;RP1=0, select bank0
  4212  025B  00B7               	movwf	??_mostrarLCD
  4213  025C  0837               	movf	??_mostrarLCD,w
  4214  025D  00F5               	movwf	LCD_Set_Cursor@columna
  4215  025E  3002               	movlw	2
  4216  025F  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  4217                           
  4218                           ;main_Master.c: 328:             LCD_Write_Character(4);
  4219  0264  3004               	movlw	4
  4220  0265  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  4221                           
  4222                           ;main_Master.c: 329:             LCD_Write_Character('0' + ancho);
  4223  026A  1283               	bcf	3,5	;RP0=0, select bank0
  4224  026B  1303               	bcf	3,6	;RP1=0, select bank0
  4225  026C  0866               	movf	_ancho,w
  4226  026D  3E30               	addlw	48
  4227  026E  160A  118A  2611   	fcall	_LCD_Write_Character
  4228                           
  4229                           ;main_Master.c: 330:             break;
  4230  0271  0008               	return
  4231  0272                     l4326:	
  4232                           
  4233                           ;main_Master.c: 332:             LCD_Set_Cursor(2,10);
  4234  0272  300A               	movlw	10
  4235  0273  00B7               	movwf	??_mostrarLCD
  4236  0274  0837               	movf	??_mostrarLCD,w
  4237  0275  00F5               	movwf	LCD_Set_Cursor@columna
  4238  0276  3002               	movlw	2
  4239  0277  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  4240                           
  4241                           ;main_Master.c: 333:             LCD_Write_Character(' ');
  4242  027C  3020               	movlw	32
  4243  027D  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  4244                           
  4245                           ;main_Master.c: 334:             LCD_Set_Cursor(2,15);
  4246  0282  300F               	movlw	15
  4247  0283  1283               	bcf	3,5	;RP0=0, select bank0
  4248  0284  1303               	bcf	3,6	;RP1=0, select bank0
  4249  0285  00B7               	movwf	??_mostrarLCD
  4250  0286  0837               	movf	??_mostrarLCD,w
  4251  0287  00F5               	movwf	LCD_Set_Cursor@columna
  4252  0288  3002               	movlw	2
  4253  0289  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  4254                           
  4255                           ;main_Master.c: 335:             LCD_Write_Character(1);
  4256  028E  3001               	movlw	1
  4257  028F  160A  118A  2611   	fcall	_LCD_Write_Character
  4258                           
  4259                           ;main_Master.c: 336:             break;
  4260  0292  0008               	return
  4261  0293                     l4332:	
  4262                           
  4263                           ;main_Master.c: 338:             LCD_Set_Cursor(1,0);
  4264  0293  01F5               	clrf	LCD_Set_Cursor@columna
  4265  0294  3001               	movlw	1
  4266  0295  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  4267                           
  4268                           ;main_Master.c: 339:             LCD_Write_String("Vamonos Perros!");
  4269  029A  303A               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  4270  029B  160A  118A  26A1  120A  118A  	fcall	_LCD_Write_String
  4271                           
  4272                           ;main_Master.c: 341:             _delay((unsigned long)((500)*(8000000/4000.0)));
  4273  02A0  3006               	movlw	6
  4274  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  4275  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  4276  02A3  00B9               	movwf	??_mostrarLCD+2
  4277  02A4  3013               	movlw	19
  4278  02A5  00B8               	movwf	??_mostrarLCD+1
  4279  02A6  30AD               	movlw	173
  4280  02A7  00B7               	movwf	??_mostrarLCD
  4281  02A8                     u3257:	
  4282  02A8  0BB7               	decfsz	??_mostrarLCD,f
  4283  02A9  2AA8               	goto	u3257
  4284  02AA  0BB8               	decfsz	??_mostrarLCD+1,f
  4285  02AB  2AA8               	goto	u3257
  4286  02AC  0BB9               	decfsz	??_mostrarLCD+2,f
  4287  02AD  2AA8               	goto	u3257
  4288                           
  4289                           ;main_Master.c: 342:             LCD_clear();
  4290  02AE  160A  118A  2654   	fcall	_LCD_clear
  4291                           
  4292                           ;main_Master.c: 343:             estado = 0;
  4293  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  4294  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  4295  02B3  01E5               	clrf	_estado
  4296                           
  4297                           ;main_Master.c: 344:             break;
  4298  02B4  0008               	return
  4299  02B5                     l4340:	
  4300                           
  4301                           ;main_Master.c: 346:             LCD_Set_Cursor(1,9);
  4302  02B5  3009               	movlw	9
  4303  02B6  00B7               	movwf	??_mostrarLCD
  4304  02B7  0837               	movf	??_mostrarLCD,w
  4305  02B8  00F5               	movwf	LCD_Set_Cursor@columna
  4306  02B9  3001               	movlw	1
  4307  02BA  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  4308                           
  4309                           ;main_Master.c: 347:             LCD_Write_String("ERROR");
  4310  02BF  3077               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  4311  02C0  160A  118A  26A1   	fcall	_LCD_Write_String
  4312                           
  4313                           ;main_Master.c: 348:     }
  4314  02C3  0008               	return
  4315  02C4                     l4342:	
  4316  02C4  083A               	movf	mostrarLCD@pantalla,w
  4317  02C5  00B7               	movwf	??_mostrarLCD
  4318  02C6  01B8               	clrf	??_mostrarLCD+1
  4319                           
  4320                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4321                           ; Switch size 1, requested type "simple"
  4322                           ; Number of cases is 1, Range of values is 0 to 0
  4323                           ; switch strategies available:
  4324                           ; Name         Instructions Cycles
  4325                           ; simple_byte            4     3 (average)
  4326                           ; direct_byte           11     8 (fixed)
  4327                           ; jumptable            260     6 (fixed)
  4328                           ;	Chosen strategy is simple_byte
  4329  02C7  0838               	movf	??_mostrarLCD+1,w
  4330  02C8  3A00               	xorlw	0	; case 0
  4331  02C9  1903               	skipnz
  4332  02CA  2ACC               	goto	l4804
  4333  02CB  2AB5               	goto	l4340
  4334  02CC                     l4804:	
  4335                           
  4336                           ; Switch size 1, requested type "simple"
  4337                           ; Number of cases is 11, Range of values is 0 to 10
  4338                           ; switch strategies available:
  4339                           ; Name         Instructions Cycles
  4340                           ; simple_byte           34    18 (average)
  4341                           ; direct_byte           41     8 (fixed)
  4342                           ; jumptable            260     6 (fixed)
  4343                           ;	Chosen strategy is simple_byte
  4344  02CC  0837               	movf	??_mostrarLCD,w
  4345  02CD  3A00               	xorlw	0	; case 0
  4346  02CE  1903               	skipnz
  4347  02CF  2831               	goto	l4230
  4348  02D0  3A01               	xorlw	1	; case 1
  4349  02D1  1903               	skipnz
  4350  02D2  2852               	goto	l4232
  4351  02D3  3A03               	xorlw	3	; case 2
  4352  02D4  1903               	skipnz
  4353  02D5  28BA               	goto	l4248
  4354  02D6  3A01               	xorlw	1	; case 3
  4355  02D7  1903               	skipnz
  4356  02D8  293B               	goto	l4272
  4357  02D9  3A07               	xorlw	7	; case 4
  4358  02DA  1903               	skipnz
  4359  02DB  296B               	goto	l4280
  4360  02DC  3A01               	xorlw	1	; case 5
  4361  02DD  1903               	skipnz
  4362  02DE  29C5               	goto	l4296
  4363  02DF  3A03               	xorlw	3	; case 6
  4364  02E0  1903               	skipnz
  4365  02E1  2A0C               	goto	l4308
  4366  02E2  3A01               	xorlw	1	; case 7
  4367  02E3  1903               	skipnz
  4368  02E4  2A21               	goto	l4314
  4369  02E5  3A0F               	xorlw	15	; case 8
  4370  02E6  1903               	skipnz
  4371  02E7  2A48               	goto	l4320
  4372  02E8  3A01               	xorlw	1	; case 9
  4373  02E9  1903               	skipnz
  4374  02EA  2A72               	goto	l4326
  4375  02EB  3A03               	xorlw	3	; case 10
  4376  02EC  1903               	skipnz
  4377  02ED  2A93               	goto	l4332
  4378  02EE  2AB5               	goto	l4340
  4379  02EF  0008               	return
  4380  02F0                     __end_of_mostrarLCD:	
  4381                           
  4382                           	psect	text10
  4383  0B34                     __ptext10:	
  4384 ;; *************** function _uint_to_array *****************
  4385 ;; Defined at:
  4386 ;;		line 181 in file "LCD_8bits.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  numero          1    wreg     unsigned char 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  numero          1   22[BANK0 ] unsigned char 
  4391 ;;  resultado       6   16[BANK0 ] unsigned int [3]
  4392 ;;  centenas        1   15[BANK0 ] unsigned char 
  4393 ;;  decenas         1   14[BANK0 ] unsigned char 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  1    wreg      PTR unsigned int 
  4396 ;; Registers used:
  4397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4403 ;;      Params:         0       0       0       0       0
  4404 ;;      Locals:         0       9       0       0       0
  4405 ;;      Temps:          0       6       0       0       0
  4406 ;;      Totals:         0      15       0       0       0
  4407 ;;Total ram usage:       15 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; Hardware stack levels required when called:    2
  4410 ;; This function calls:
  4411 ;;		___awdiv
  4412 ;;		___wmul
  4413 ;; This function is called by:
  4414 ;;		_mostrarLCD
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           
  4419                           ;psect for function _uint_to_array
  4420  0B34                     _uint_to_array:	
  4421                           
  4422                           ;incstack = 0
  4423                           ; Regs used in _uint_to_array: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4424                           ;uint_to_array@numero stored from wreg
  4425  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  4426  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  4427  0B36  00B6               	movwf	uint_to_array@numero
  4428                           
  4429                           ;LCD_8bits.c: 182:     uint16_t resultado[3] = {0,0,0};
  4430  0B37  3030               	movlw	uint_to_array@resultado& (0+255)
  4431  0B38  0084               	movwf	4
  4432  0B39  3006               	movlw	6
  4433  0B3A  00FF               	movwf	127
  4434  0B3B                     u3000:	
  4435  0B3B  1383               	bcf	3,7	;select IRP bank0
  4436  0B3C  0180               	clrf	0
  4437  0B3D  0A84               	incf	4,f
  4438  0B3E  0BFF               	decfsz	127,f
  4439  0B3F  2B3B               	goto	u3000
  4440                           
  4441                           ;LCD_8bits.c: 183:     resultado[0] = numero/100;
  4442  0B40  3064               	movlw	100
  4443  0B41  00A0               	movwf	___awdiv@divisor
  4444  0B42  3000               	movlw	0
  4445  0B43  00A1               	movwf	___awdiv@divisor+1
  4446  0B44  0836               	movf	uint_to_array@numero,w
  4447  0B45  00A8               	movwf	??_uint_to_array
  4448  0B46  01A9               	clrf	??_uint_to_array+1
  4449  0B47  0828               	movf	??_uint_to_array,w
  4450  0B48  00A2               	movwf	___awdiv@dividend
  4451  0B49  0829               	movf	??_uint_to_array+1,w
  4452  0B4A  00A3               	movwf	___awdiv@dividend+1
  4453  0B4B  120A  158A  20C3  120A  158A  	fcall	___awdiv
  4454  0B50  1283               	bcf	3,5	;RP0=0, select bank0
  4455  0B51  1303               	bcf	3,6	;RP1=0, select bank0
  4456  0B52  0821               	movf	?___awdiv+1,w
  4457  0B53  00B1               	movwf	uint_to_array@resultado+1
  4458  0B54  0820               	movf	?___awdiv,w
  4459  0B55  00B0               	movwf	uint_to_array@resultado
  4460                           
  4461                           ;LCD_8bits.c: 184:     uint8_t centenas = resultado[0];
  4462  0B56  0830               	movf	uint_to_array@resultado,w
  4463  0B57  00A8               	movwf	??_uint_to_array
  4464  0B58  0828               	movf	??_uint_to_array,w
  4465  0B59  00AF               	movwf	uint_to_array@centenas
  4466                           
  4467                           ;LCD_8bits.c: 185:     resultado[1] = (numero - (centenas *100))/10;
  4468  0B5A  300A               	movlw	10
  4469  0B5B  00A0               	movwf	___awdiv@divisor
  4470  0B5C  3000               	movlw	0
  4471  0B5D  00A1               	movwf	___awdiv@divisor+1
  4472  0B5E  082F               	movf	uint_to_array@centenas,w
  4473  0B5F  00A8               	movwf	??_uint_to_array
  4474  0B60  01A9               	clrf	??_uint_to_array+1
  4475  0B61  0828               	movf	??_uint_to_array,w
  4476  0B62  00F2               	movwf	___wmul@multiplier
  4477  0B63  0829               	movf	??_uint_to_array+1,w
  4478  0B64  00F3               	movwf	___wmul@multiplier+1
  4479  0B65  309C               	movlw	156
  4480  0B66  00F4               	movwf	___wmul@multiplicand
  4481  0B67  30FF               	movlw	255
  4482  0B68  00F5               	movwf	___wmul@multiplicand+1
  4483  0B69  160A  118A  2680  120A  158A  	fcall	___wmul
  4484  0B6E  1283               	bcf	3,5	;RP0=0, select bank0
  4485  0B6F  1303               	bcf	3,6	;RP1=0, select bank0
  4486  0B70  0836               	movf	uint_to_array@numero,w
  4487  0B71  0772               	addwf	?___wmul,w
  4488  0B72  00A2               	movwf	___awdiv@dividend
  4489  0B73  0873               	movf	?___wmul+1,w
  4490  0B74  1803               	skipnc
  4491  0B75  0A73               	incf	?___wmul+1,w
  4492  0B76  00A3               	movwf	___awdiv@dividend+1
  4493  0B77  120A  158A  20C3  120A  158A  	fcall	___awdiv
  4494  0B7C  1283               	bcf	3,5	;RP0=0, select bank0
  4495  0B7D  1303               	bcf	3,6	;RP1=0, select bank0
  4496  0B7E  0821               	movf	?___awdiv+1,w
  4497  0B7F  00B3               	movwf	uint_to_array@resultado+3
  4498  0B80  0820               	movf	?___awdiv,w
  4499  0B81  00B2               	movwf	uint_to_array@resultado+2
  4500                           
  4501                           ;LCD_8bits.c: 186:     uint8_t decenas = resultado[1];
  4502  0B82  0832               	movf	uint_to_array@resultado+2,w
  4503  0B83  00A8               	movwf	??_uint_to_array
  4504  0B84  0828               	movf	??_uint_to_array,w
  4505  0B85  00AE               	movwf	uint_to_array@decenas
  4506                           
  4507                           ;LCD_8bits.c: 187:     resultado[2] = numero -(centenas*100+decenas*10);
  4508  0B86  082F               	movf	uint_to_array@centenas,w
  4509  0B87  00A8               	movwf	??_uint_to_array
  4510  0B88  01A9               	clrf	??_uint_to_array+1
  4511  0B89  0828               	movf	??_uint_to_array,w
  4512  0B8A  00F2               	movwf	___wmul@multiplier
  4513  0B8B  0829               	movf	??_uint_to_array+1,w
  4514  0B8C  00F3               	movwf	___wmul@multiplier+1
  4515  0B8D  309C               	movlw	156
  4516  0B8E  00F4               	movwf	___wmul@multiplicand
  4517  0B8F  30FF               	movlw	255
  4518  0B90  00F5               	movwf	___wmul@multiplicand+1
  4519  0B91  160A  118A  2680  120A  158A  	fcall	___wmul
  4520  0B96  1283               	bcf	3,5	;RP0=0, select bank0
  4521  0B97  1303               	bcf	3,6	;RP1=0, select bank0
  4522  0B98  0836               	movf	uint_to_array@numero,w
  4523  0B99  0772               	addwf	?___wmul,w
  4524  0B9A  00AA               	movwf	??_uint_to_array+2
  4525  0B9B  0873               	movf	?___wmul+1,w
  4526  0B9C  1803               	skipnc
  4527  0B9D  0A73               	incf	?___wmul+1,w
  4528  0B9E  00AB               	movwf	??_uint_to_array+3
  4529  0B9F  082E               	movf	uint_to_array@decenas,w
  4530  0BA0  00AC               	movwf	??_uint_to_array+4
  4531  0BA1  01AD               	clrf	??_uint_to_array+5
  4532  0BA2  082C               	movf	??_uint_to_array+4,w
  4533  0BA3  00F2               	movwf	___wmul@multiplier
  4534  0BA4  082D               	movf	??_uint_to_array+5,w
  4535  0BA5  00F3               	movwf	___wmul@multiplier+1
  4536  0BA6  30F6               	movlw	246
  4537  0BA7  00F4               	movwf	___wmul@multiplicand
  4538  0BA8  30FF               	movlw	255
  4539  0BA9  00F5               	movwf	___wmul@multiplicand+1
  4540  0BAA  160A  118A  2680   	fcall	___wmul
  4541  0BAD  0872               	movf	?___wmul,w
  4542  0BAE  1283               	bcf	3,5	;RP0=0, select bank0
  4543  0BAF  1303               	bcf	3,6	;RP1=0, select bank0
  4544  0BB0  072A               	addwf	??_uint_to_array+2,w
  4545  0BB1  00B4               	movwf	uint_to_array@resultado+4
  4546  0BB2  0873               	movf	?___wmul+1,w
  4547  0BB3  1803               	skipnc
  4548  0BB4  0A73               	incf	?___wmul+1,w
  4549  0BB5  072B               	addwf	??_uint_to_array+3,w
  4550  0BB6  00B5               	movwf	uint_to_array@resultado+5
  4551                           
  4552                           ;LCD_8bits.c: 188:     return(resultado);
  4553  0BB7  3030               	movlw	(low (uint_to_array@resultado| 0))& (0+255)
  4554  0BB8  0008               	return
  4555  0BB9                     __end_of_uint_to_array:	
  4556                           
  4557                           	psect	text11
  4558  1680                     __ptext11:	
  4559 ;; *************** function ___wmul *****************
  4560 ;; Defined at:
  4561 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;  multiplier      2    2[COMMON] unsigned int 
  4564 ;;  multiplicand    2    4[COMMON] unsigned int 
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;  product         2    6[COMMON] unsigned int 
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  2    2[COMMON] unsigned int 
  4569 ;; Registers used:
  4570 ;;		wreg, status,2, status,0
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4576 ;;      Params:         4       0       0       0       0
  4577 ;;      Locals:         2       0       0       0       0
  4578 ;;      Temps:          0       0       0       0       0
  4579 ;;      Totals:         6       0       0       0       0
  4580 ;;Total ram usage:        6 bytes
  4581 ;; Hardware stack levels used:    1
  4582 ;; Hardware stack levels required when called:    1
  4583 ;; This function calls:
  4584 ;;		Nothing
  4585 ;; This function is called by:
  4586 ;;		_uint_to_array
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           
  4591                           ;psect for function ___wmul
  4592  1680                     ___wmul:	
  4593                           
  4594                           ;incstack = 0
  4595                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4596  1680  01F6               	clrf	___wmul@product
  4597  1681  01F7               	clrf	___wmul@product+1
  4598  1682                     l2548:	
  4599  1682  1C72               	btfss	___wmul@multiplier,0
  4600  1683  2E8A               	goto	l452
  4601  1684  0874               	movf	___wmul@multiplicand,w
  4602  1685  07F6               	addwf	___wmul@product,f
  4603  1686  1803               	skipnc
  4604  1687  0AF7               	incf	___wmul@product+1,f
  4605  1688  0875               	movf	___wmul@multiplicand+1,w
  4606  1689  07F7               	addwf	___wmul@product+1,f
  4607  168A                     l452:	
  4608  168A  3001               	movlw	1
  4609  168B                     u1475:	
  4610  168B  1003               	clrc
  4611  168C  0DF4               	rlf	___wmul@multiplicand,f
  4612  168D  0DF5               	rlf	___wmul@multiplicand+1,f
  4613  168E  3EFF               	addlw	-1
  4614  168F  1D03               	skipz
  4615  1690  2E8B               	goto	u1475
  4616  1691  3001               	movlw	1
  4617  1692                     u1485:	
  4618  1692  1003               	clrc
  4619  1693  0CF3               	rrf	___wmul@multiplier+1,f
  4620  1694  0CF2               	rrf	___wmul@multiplier,f
  4621  1695  3EFF               	addlw	-1
  4622  1696  1D03               	skipz
  4623  1697  2E92               	goto	u1485
  4624  1698  0872               	movf	___wmul@multiplier,w
  4625  1699  0473               	iorwf	___wmul@multiplier+1,w
  4626  169A  1D03               	btfss	3,2
  4627  169B  2E82               	goto	l2548
  4628  169C  0877               	movf	___wmul@product+1,w
  4629  169D  00F3               	movwf	?___wmul+1
  4630  169E  0876               	movf	___wmul@product,w
  4631  169F  00F2               	movwf	?___wmul
  4632  16A0  0008               	return
  4633  16A1                     __end_of___wmul:	
  4634                           
  4635                           	psect	text12
  4636  0F2E                     __ptext12:	
  4637 ;; *************** function _display_Uhrzeit *****************
  4638 ;; Defined at:
  4639 ;;		line 190 in file "main_Master.c"
  4640 ;; Parameters:    Size  Location     Type
  4641 ;;  fila            1    wreg     unsigned char 
  4642 ;;  columna         1    8[BANK0 ] unsigned char 
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;  fila            1   12[BANK0 ] unsigned char 
  4645 ;;  Uhr_d           1   18[BANK0 ] unsigned char 
  4646 ;;  Uhr_u           1   17[BANK0 ] unsigned char 
  4647 ;;  min_d           1   16[BANK0 ] unsigned char 
  4648 ;;  min_u           1   15[BANK0 ] unsigned char 
  4649 ;;  seg_d           1   14[BANK0 ] unsigned char 
  4650 ;;  seg_u           1   13[BANK0 ] unsigned char 
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4660 ;;      Params:         0       1       0       0       0
  4661 ;;      Locals:         0       7       0       0       0
  4662 ;;      Temps:          0       3       0       0       0
  4663 ;;      Totals:         0      11       0       0       0
  4664 ;;Total ram usage:       11 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; Hardware stack levels required when called:    3
  4667 ;; This function calls:
  4668 ;;		_LCD_Set_Cursor
  4669 ;;		_LCD_Write_Character
  4670 ;;		___awdiv
  4671 ;;		___awmod
  4672 ;; This function is called by:
  4673 ;;		_mostrarLCD
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           
  4678                           ;psect for function _display_Uhrzeit
  4679  0F2E                     _display_Uhrzeit:	
  4680                           
  4681                           ;incstack = 0
  4682                           ; Regs used in _display_Uhrzeit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4683                           ;display_Uhrzeit@fila stored from wreg
  4684  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  4685  0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  4686  0F30  00AC               	movwf	display_Uhrzeit@fila
  4687                           
  4688                           ;main_Master.c: 191:     char seg_u = seg%10;
  4689  0F31  300A               	movlw	10
  4690  0F32  00F2               	movwf	___awmod@divisor
  4691  0F33  3000               	movlw	0
  4692  0F34  00F3               	movwf	___awmod@divisor+1
  4693  0F35  0864               	movf	_seg,w
  4694  0F36  00A9               	movwf	??_display_Uhrzeit
  4695  0F37  01AA               	clrf	??_display_Uhrzeit+1
  4696  0F38  0829               	movf	??_display_Uhrzeit,w
  4697  0F39  00F4               	movwf	___awmod@dividend
  4698  0F3A  082A               	movf	??_display_Uhrzeit+1,w
  4699  0F3B  00F5               	movwf	___awmod@dividend+1
  4700  0F3C  160A  118A  27B5  120A  158A  	fcall	___awmod
  4701  0F41  0872               	movf	?___awmod,w
  4702  0F42  1283               	bcf	3,5	;RP0=0, select bank0
  4703  0F43  1303               	bcf	3,6	;RP1=0, select bank0
  4704  0F44  00AB               	movwf	??_display_Uhrzeit+2
  4705  0F45  082B               	movf	??_display_Uhrzeit+2,w
  4706  0F46  00AD               	movwf	display_Uhrzeit@seg_u
  4707                           
  4708                           ;main_Master.c: 192:     char seg_d = seg/10;
  4709  0F47  300A               	movlw	10
  4710  0F48  00A0               	movwf	___awdiv@divisor
  4711  0F49  3000               	movlw	0
  4712  0F4A  00A1               	movwf	___awdiv@divisor+1
  4713  0F4B  0864               	movf	_seg,w
  4714  0F4C  00A9               	movwf	??_display_Uhrzeit
  4715  0F4D  01AA               	clrf	??_display_Uhrzeit+1
  4716  0F4E  0829               	movf	??_display_Uhrzeit,w
  4717  0F4F  00A2               	movwf	___awdiv@dividend
  4718  0F50  082A               	movf	??_display_Uhrzeit+1,w
  4719  0F51  00A3               	movwf	___awdiv@dividend+1
  4720  0F52  120A  158A  20C3  120A  158A  	fcall	___awdiv
  4721  0F57  1283               	bcf	3,5	;RP0=0, select bank0
  4722  0F58  1303               	bcf	3,6	;RP1=0, select bank0
  4723  0F59  0820               	movf	?___awdiv,w
  4724  0F5A  00AB               	movwf	??_display_Uhrzeit+2
  4725  0F5B  082B               	movf	??_display_Uhrzeit+2,w
  4726  0F5C  00AE               	movwf	display_Uhrzeit@seg_d
  4727                           
  4728                           ;main_Master.c: 193:     char min_u = min%10;
  4729  0F5D  300A               	movlw	10
  4730  0F5E  00F2               	movwf	___awmod@divisor
  4731  0F5F  3000               	movlw	0
  4732  0F60  00F3               	movwf	___awmod@divisor+1
  4733  0F61  086E               	movf	_min,w
  4734  0F62  00A9               	movwf	??_display_Uhrzeit
  4735  0F63  01AA               	clrf	??_display_Uhrzeit+1
  4736  0F64  0829               	movf	??_display_Uhrzeit,w
  4737  0F65  00F4               	movwf	___awmod@dividend
  4738  0F66  082A               	movf	??_display_Uhrzeit+1,w
  4739  0F67  00F5               	movwf	___awmod@dividend+1
  4740  0F68  160A  118A  27B5  120A  158A  	fcall	___awmod
  4741  0F6D  0872               	movf	?___awmod,w
  4742  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  4743  0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  4744  0F70  00AB               	movwf	??_display_Uhrzeit+2
  4745  0F71  082B               	movf	??_display_Uhrzeit+2,w
  4746  0F72  00AF               	movwf	display_Uhrzeit@min_u
  4747                           
  4748                           ;main_Master.c: 194:     char min_d = min/10;
  4749  0F73  300A               	movlw	10
  4750  0F74  00A0               	movwf	___awdiv@divisor
  4751  0F75  3000               	movlw	0
  4752  0F76  00A1               	movwf	___awdiv@divisor+1
  4753  0F77  086E               	movf	_min,w
  4754  0F78  00A9               	movwf	??_display_Uhrzeit
  4755  0F79  01AA               	clrf	??_display_Uhrzeit+1
  4756  0F7A  0829               	movf	??_display_Uhrzeit,w
  4757  0F7B  00A2               	movwf	___awdiv@dividend
  4758  0F7C  082A               	movf	??_display_Uhrzeit+1,w
  4759  0F7D  00A3               	movwf	___awdiv@dividend+1
  4760  0F7E  120A  158A  20C3  120A  158A  	fcall	___awdiv
  4761  0F83  1283               	bcf	3,5	;RP0=0, select bank0
  4762  0F84  1303               	bcf	3,6	;RP1=0, select bank0
  4763  0F85  0820               	movf	?___awdiv,w
  4764  0F86  00AB               	movwf	??_display_Uhrzeit+2
  4765  0F87  082B               	movf	??_display_Uhrzeit+2,w
  4766  0F88  00B0               	movwf	display_Uhrzeit@min_d
  4767                           
  4768                           ;main_Master.c: 195:     char Uhr_u = hora%10;
  4769  0F89  300A               	movlw	10
  4770  0F8A  00F2               	movwf	___awmod@divisor
  4771  0F8B  3000               	movlw	0
  4772  0F8C  00F3               	movwf	___awmod@divisor+1
  4773  0F8D  086D               	movf	_hora,w
  4774  0F8E  00A9               	movwf	??_display_Uhrzeit
  4775  0F8F  01AA               	clrf	??_display_Uhrzeit+1
  4776  0F90  0829               	movf	??_display_Uhrzeit,w
  4777  0F91  00F4               	movwf	___awmod@dividend
  4778  0F92  082A               	movf	??_display_Uhrzeit+1,w
  4779  0F93  00F5               	movwf	___awmod@dividend+1
  4780  0F94  160A  118A  27B5  120A  158A  	fcall	___awmod
  4781  0F99  0872               	movf	?___awmod,w
  4782  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  4783  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  4784  0F9C  00AB               	movwf	??_display_Uhrzeit+2
  4785  0F9D  082B               	movf	??_display_Uhrzeit+2,w
  4786  0F9E  00B1               	movwf	display_Uhrzeit@Uhr_u
  4787                           
  4788                           ;main_Master.c: 196:     char Uhr_d = hora/10;
  4789  0F9F  300A               	movlw	10
  4790  0FA0  00A0               	movwf	___awdiv@divisor
  4791  0FA1  3000               	movlw	0
  4792  0FA2  00A1               	movwf	___awdiv@divisor+1
  4793  0FA3  086D               	movf	_hora,w
  4794  0FA4  00A9               	movwf	??_display_Uhrzeit
  4795  0FA5  01AA               	clrf	??_display_Uhrzeit+1
  4796  0FA6  0829               	movf	??_display_Uhrzeit,w
  4797  0FA7  00A2               	movwf	___awdiv@dividend
  4798  0FA8  082A               	movf	??_display_Uhrzeit+1,w
  4799  0FA9  00A3               	movwf	___awdiv@dividend+1
  4800  0FAA  120A  158A  20C3  120A  158A  	fcall	___awdiv
  4801  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  4802  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  4803  0FB1  0820               	movf	?___awdiv,w
  4804  0FB2  00AB               	movwf	??_display_Uhrzeit+2
  4805  0FB3  082B               	movf	??_display_Uhrzeit+2,w
  4806  0FB4  00B2               	movwf	display_Uhrzeit@Uhr_d
  4807                           
  4808                           ;main_Master.c: 198:     LCD_Set_Cursor(fila, columna);
  4809  0FB5  0828               	movf	display_Uhrzeit@columna,w
  4810  0FB6  00A9               	movwf	??_display_Uhrzeit
  4811  0FB7  0829               	movf	??_display_Uhrzeit,w
  4812  0FB8  00F5               	movwf	LCD_Set_Cursor@columna
  4813  0FB9  082C               	movf	display_Uhrzeit@fila,w
  4814  0FBA  120A  158A  2097  120A  158A  	fcall	_LCD_Set_Cursor
  4815                           
  4816                           ;main_Master.c: 199:     LCD_Write_Character(Uhr_d + '0');
  4817  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  4818  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  4819  0FC1  0832               	movf	display_Uhrzeit@Uhr_d,w
  4820  0FC2  3E30               	addlw	48
  4821  0FC3  160A  118A  2611  120A  158A  	fcall	_LCD_Write_Character
  4822                           
  4823                           ;main_Master.c: 200:     LCD_Write_Character(Uhr_u + '0');
  4824  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4825  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4826  0FCA  0831               	movf	display_Uhrzeit@Uhr_u,w
  4827  0FCB  3E30               	addlw	48
  4828  0FCC  160A  118A  2611  120A  158A  	fcall	_LCD_Write_Character
  4829                           
  4830                           ;main_Master.c: 201:     LCD_Write_Character(':');
  4831  0FD1  303A               	movlw	58
  4832  0FD2  160A  118A  2611  120A  158A  	fcall	_LCD_Write_Character
  4833                           
  4834                           ;main_Master.c: 202:     LCD_Write_Character(min_d + '0');
  4835  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  4836  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  4837  0FD9  0830               	movf	display_Uhrzeit@min_d,w
  4838  0FDA  3E30               	addlw	48
  4839  0FDB  160A  118A  2611  120A  158A  	fcall	_LCD_Write_Character
  4840                           
  4841                           ;main_Master.c: 203:     LCD_Write_Character(min_u + '0');
  4842  0FE0  1283               	bcf	3,5	;RP0=0, select bank0
  4843  0FE1  1303               	bcf	3,6	;RP1=0, select bank0
  4844  0FE2  082F               	movf	display_Uhrzeit@min_u,w
  4845  0FE3  3E30               	addlw	48
  4846  0FE4  160A  118A  2611  120A  158A  	fcall	_LCD_Write_Character
  4847                           
  4848                           ;main_Master.c: 204:     LCD_Write_Character(':');
  4849  0FE9  303A               	movlw	58
  4850  0FEA  160A  118A  2611  120A  158A  	fcall	_LCD_Write_Character
  4851                           
  4852                           ;main_Master.c: 205:     LCD_Write_Character(seg_d + '0');
  4853  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  4854  0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  4855  0FF1  082E               	movf	display_Uhrzeit@seg_d,w
  4856  0FF2  3E30               	addlw	48
  4857  0FF3  160A  118A  2611  120A  158A  	fcall	_LCD_Write_Character
  4858                           
  4859                           ;main_Master.c: 206:     LCD_Write_Character(seg_u + '0');
  4860  0FF8  1283               	bcf	3,5	;RP0=0, select bank0
  4861  0FF9  1303               	bcf	3,6	;RP1=0, select bank0
  4862  0FFA  082D               	movf	display_Uhrzeit@seg_u,w
  4863  0FFB  3E30               	addlw	48
  4864  0FFC  160A  118A  2611   	fcall	_LCD_Write_Character
  4865  0FFF  0008               	return
  4866  1000                     __end_of_display_Uhrzeit:	
  4867                           
  4868                           	psect	text13
  4869  06EB                     __ptext13:	
  4870 ;; *************** function _display_Datum *****************
  4871 ;; Defined at:
  4872 ;;		line 210 in file "main_Master.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  fila            1    wreg     unsigned char 
  4875 ;;  columna         1    8[BANK0 ] unsigned char 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;  fila            1   12[BANK0 ] unsigned char 
  4878 ;;  jahr_d          1   18[BANK0 ] unsigned char 
  4879 ;;  jahr_u          1   17[BANK0 ] unsigned char 
  4880 ;;  mes_d           1   16[BANK0 ] unsigned char 
  4881 ;;  mes_u           1   15[BANK0 ] unsigned char 
  4882 ;;  dia_d           1   14[BANK0 ] unsigned char 
  4883 ;;  dia_u           1   13[BANK0 ] unsigned char 
  4884 ;; Return value:  Size  Location     Type
  4885 ;;                  1    wreg      void 
  4886 ;; Registers used:
  4887 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4893 ;;      Params:         0       1       0       0       0
  4894 ;;      Locals:         0       7       0       0       0
  4895 ;;      Temps:          0       3       0       0       0
  4896 ;;      Totals:         0      11       0       0       0
  4897 ;;Total ram usage:       11 bytes
  4898 ;; Hardware stack levels used:    1
  4899 ;; Hardware stack levels required when called:    3
  4900 ;; This function calls:
  4901 ;;		_LCD_Set_Cursor
  4902 ;;		_LCD_Write_Character
  4903 ;;		_LCD_Write_String
  4904 ;;		___awdiv
  4905 ;;		___awmod
  4906 ;; This function is called by:
  4907 ;;		_mostrarLCD
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           
  4911                           
  4912                           ;psect for function _display_Datum
  4913  06EB                     _display_Datum:	
  4914                           
  4915                           ;incstack = 0
  4916                           ; Regs used in _display_Datum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4917                           ;display_Datum@fila stored from wreg
  4918  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  4919  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  4920  06ED  00AC               	movwf	display_Datum@fila
  4921                           
  4922                           ;main_Master.c: 211:     char dia_u = datum%10;
  4923  06EE  300A               	movlw	10
  4924  06EF  00F2               	movwf	___awmod@divisor
  4925  06F0  3000               	movlw	0
  4926  06F1  00F3               	movwf	___awmod@divisor+1
  4927  06F2  086B               	movf	_datum,w
  4928  06F3  00A9               	movwf	??_display_Datum
  4929  06F4  01AA               	clrf	??_display_Datum+1
  4930  06F5  0829               	movf	??_display_Datum,w
  4931  06F6  00F4               	movwf	___awmod@dividend
  4932  06F7  082A               	movf	??_display_Datum+1,w
  4933  06F8  00F5               	movwf	___awmod@dividend+1
  4934  06F9  160A  118A  27B5  120A  118A  	fcall	___awmod
  4935  06FE  0872               	movf	?___awmod,w
  4936  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  4937  0700  1303               	bcf	3,6	;RP1=0, select bank0
  4938  0701  00AB               	movwf	??_display_Datum+2
  4939  0702  082B               	movf	??_display_Datum+2,w
  4940  0703  00AD               	movwf	display_Datum@dia_u
  4941                           
  4942                           ;main_Master.c: 212:     char dia_d = datum/10;
  4943  0704  300A               	movlw	10
  4944  0705  00A0               	movwf	___awdiv@divisor
  4945  0706  3000               	movlw	0
  4946  0707  00A1               	movwf	___awdiv@divisor+1
  4947  0708  086B               	movf	_datum,w
  4948  0709  00A9               	movwf	??_display_Datum
  4949  070A  01AA               	clrf	??_display_Datum+1
  4950  070B  0829               	movf	??_display_Datum,w
  4951  070C  00A2               	movwf	___awdiv@dividend
  4952  070D  082A               	movf	??_display_Datum+1,w
  4953  070E  00A3               	movwf	___awdiv@dividend+1
  4954  070F  120A  158A  20C3  120A  118A  	fcall	___awdiv
  4955  0714  1283               	bcf	3,5	;RP0=0, select bank0
  4956  0715  1303               	bcf	3,6	;RP1=0, select bank0
  4957  0716  0820               	movf	?___awdiv,w
  4958  0717  00AB               	movwf	??_display_Datum+2
  4959  0718  082B               	movf	??_display_Datum+2,w
  4960  0719  00AE               	movwf	display_Datum@dia_d
  4961                           
  4962                           ;main_Master.c: 213:     char mes_u = mes%10;
  4963  071A  300A               	movlw	10
  4964  071B  00F2               	movwf	___awmod@divisor
  4965  071C  3000               	movlw	0
  4966  071D  00F3               	movwf	___awmod@divisor+1
  4967  071E  086A               	movf	_mes,w
  4968  071F  00A9               	movwf	??_display_Datum
  4969  0720  01AA               	clrf	??_display_Datum+1
  4970  0721  0829               	movf	??_display_Datum,w
  4971  0722  00F4               	movwf	___awmod@dividend
  4972  0723  082A               	movf	??_display_Datum+1,w
  4973  0724  00F5               	movwf	___awmod@dividend+1
  4974  0725  160A  118A  27B5  120A  118A  	fcall	___awmod
  4975  072A  0872               	movf	?___awmod,w
  4976  072B  1283               	bcf	3,5	;RP0=0, select bank0
  4977  072C  1303               	bcf	3,6	;RP1=0, select bank0
  4978  072D  00AB               	movwf	??_display_Datum+2
  4979  072E  082B               	movf	??_display_Datum+2,w
  4980  072F  00AF               	movwf	display_Datum@mes_u
  4981                           
  4982                           ;main_Master.c: 214:     char mes_d = mes/10;
  4983  0730  300A               	movlw	10
  4984  0731  00A0               	movwf	___awdiv@divisor
  4985  0732  3000               	movlw	0
  4986  0733  00A1               	movwf	___awdiv@divisor+1
  4987  0734  086A               	movf	_mes,w
  4988  0735  00A9               	movwf	??_display_Datum
  4989  0736  01AA               	clrf	??_display_Datum+1
  4990  0737  0829               	movf	??_display_Datum,w
  4991  0738  00A2               	movwf	___awdiv@dividend
  4992  0739  082A               	movf	??_display_Datum+1,w
  4993  073A  00A3               	movwf	___awdiv@dividend+1
  4994  073B  120A  158A  20C3  120A  118A  	fcall	___awdiv
  4995  0740  1283               	bcf	3,5	;RP0=0, select bank0
  4996  0741  1303               	bcf	3,6	;RP1=0, select bank0
  4997  0742  0820               	movf	?___awdiv,w
  4998  0743  00AB               	movwf	??_display_Datum+2
  4999  0744  082B               	movf	??_display_Datum+2,w
  5000  0745  00B0               	movwf	display_Datum@mes_d
  5001                           
  5002                           ;main_Master.c: 215:     char jahr_u = jahr%10;
  5003  0746  300A               	movlw	10
  5004  0747  00F2               	movwf	___awmod@divisor
  5005  0748  3000               	movlw	0
  5006  0749  00F3               	movwf	___awmod@divisor+1
  5007  074A  0869               	movf	_jahr,w
  5008  074B  00A9               	movwf	??_display_Datum
  5009  074C  01AA               	clrf	??_display_Datum+1
  5010  074D  0829               	movf	??_display_Datum,w
  5011  074E  00F4               	movwf	___awmod@dividend
  5012  074F  082A               	movf	??_display_Datum+1,w
  5013  0750  00F5               	movwf	___awmod@dividend+1
  5014  0751  160A  118A  27B5  120A  118A  	fcall	___awmod
  5015  0756  0872               	movf	?___awmod,w
  5016  0757  1283               	bcf	3,5	;RP0=0, select bank0
  5017  0758  1303               	bcf	3,6	;RP1=0, select bank0
  5018  0759  00AB               	movwf	??_display_Datum+2
  5019  075A  082B               	movf	??_display_Datum+2,w
  5020  075B  00B1               	movwf	display_Datum@jahr_u
  5021                           
  5022                           ;main_Master.c: 216:     char jahr_d = jahr/10;
  5023  075C  300A               	movlw	10
  5024  075D  00A0               	movwf	___awdiv@divisor
  5025  075E  3000               	movlw	0
  5026  075F  00A1               	movwf	___awdiv@divisor+1
  5027  0760  0869               	movf	_jahr,w
  5028  0761  00A9               	movwf	??_display_Datum
  5029  0762  01AA               	clrf	??_display_Datum+1
  5030  0763  0829               	movf	??_display_Datum,w
  5031  0764  00A2               	movwf	___awdiv@dividend
  5032  0765  082A               	movf	??_display_Datum+1,w
  5033  0766  00A3               	movwf	___awdiv@dividend+1
  5034  0767  120A  158A  20C3  120A  118A  	fcall	___awdiv
  5035  076C  1283               	bcf	3,5	;RP0=0, select bank0
  5036  076D  1303               	bcf	3,6	;RP1=0, select bank0
  5037  076E  0820               	movf	?___awdiv,w
  5038  076F  00AB               	movwf	??_display_Datum+2
  5039  0770  082B               	movf	??_display_Datum+2,w
  5040  0771  00B2               	movwf	display_Datum@jahr_d
  5041                           
  5042                           ;main_Master.c: 218:     LCD_Set_Cursor(fila, columna);
  5043  0772  0828               	movf	display_Datum@columna,w
  5044  0773  00A9               	movwf	??_display_Datum
  5045  0774  0829               	movf	??_display_Datum,w
  5046  0775  00F5               	movwf	LCD_Set_Cursor@columna
  5047  0776  082C               	movf	display_Datum@fila,w
  5048  0777  120A  158A  2097  120A  118A  	fcall	_LCD_Set_Cursor
  5049                           
  5050                           ;main_Master.c: 219:     LCD_Write_Character(dia_d + '0');
  5051  077C  1283               	bcf	3,5	;RP0=0, select bank0
  5052  077D  1303               	bcf	3,6	;RP1=0, select bank0
  5053  077E  082E               	movf	display_Datum@dia_d,w
  5054  077F  3E30               	addlw	48
  5055  0780  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  5056                           
  5057                           ;main_Master.c: 220:     LCD_Write_Character(dia_u + '0');
  5058  0785  1283               	bcf	3,5	;RP0=0, select bank0
  5059  0786  1303               	bcf	3,6	;RP1=0, select bank0
  5060  0787  082D               	movf	display_Datum@dia_u,w
  5061  0788  3E30               	addlw	48
  5062  0789  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  5063                           
  5064                           ;main_Master.c: 221:     LCD_Write_Character('/');
  5065  078E  302F               	movlw	47
  5066  078F  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  5067                           
  5068                           ;main_Master.c: 222:     LCD_Write_Character(mes_d + '0');
  5069  0794  1283               	bcf	3,5	;RP0=0, select bank0
  5070  0795  1303               	bcf	3,6	;RP1=0, select bank0
  5071  0796  0830               	movf	display_Datum@mes_d,w
  5072  0797  3E30               	addlw	48
  5073  0798  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  5074                           
  5075                           ;main_Master.c: 223:     LCD_Write_Character(mes_u + '0');
  5076  079D  1283               	bcf	3,5	;RP0=0, select bank0
  5077  079E  1303               	bcf	3,6	;RP1=0, select bank0
  5078  079F  082F               	movf	display_Datum@mes_u,w
  5079  07A0  3E30               	addlw	48
  5080  07A1  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  5081                           
  5082                           ;main_Master.c: 224:     LCD_Write_Character('/');
  5083  07A6  302F               	movlw	47
  5084  07A7  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  5085                           
  5086                           ;main_Master.c: 225:     LCD_Write_String("20");
  5087  07AC  3088               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  5088  07AD  160A  118A  26A1  120A  118A  	fcall	_LCD_Write_String
  5089                           
  5090                           ;main_Master.c: 226:     LCD_Write_Character(jahr_d + '0');
  5091  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  5092  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  5093  07B4  0832               	movf	display_Datum@jahr_d,w
  5094  07B5  3E30               	addlw	48
  5095  07B6  160A  118A  2611  120A  118A  	fcall	_LCD_Write_Character
  5096                           
  5097                           ;main_Master.c: 227:     LCD_Write_Character(jahr_u + '0');
  5098  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  5099  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  5100  07BD  0831               	movf	display_Datum@jahr_u,w
  5101  07BE  3E30               	addlw	48
  5102  07BF  160A  118A  2611   	fcall	_LCD_Write_Character
  5103  07C2  0008               	return
  5104  07C3                     __end_of_display_Datum:	
  5105                           
  5106                           	psect	text14
  5107  17B5                     __ptext14:	
  5108 ;; *************** function ___awmod *****************
  5109 ;; Defined at:
  5110 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;  divisor         2    2[COMMON] int 
  5113 ;;  dividend        2    4[COMMON] int 
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;  sign            1    8[COMMON] unsigned char 
  5116 ;;  counter         1    7[COMMON] unsigned char 
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  2    2[COMMON] int 
  5119 ;; Registers used:
  5120 ;;		wreg, status,2, status,0
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5126 ;;      Params:         4       0       0       0       0
  5127 ;;      Locals:         2       0       0       0       0
  5128 ;;      Temps:          1       0       0       0       0
  5129 ;;      Totals:         7       0       0       0       0
  5130 ;;Total ram usage:        7 bytes
  5131 ;; Hardware stack levels used:    1
  5132 ;; Hardware stack levels required when called:    1
  5133 ;; This function calls:
  5134 ;;		Nothing
  5135 ;; This function is called by:
  5136 ;;		_display_Uhrzeit
  5137 ;;		_display_Datum
  5138 ;;		_DEC_a_BCD
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           
  5143                           ;psect for function ___awmod
  5144  17B5                     ___awmod:	
  5145                           
  5146                           ;incstack = 0
  5147                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5148  17B5  01F8               	clrf	___awmod@sign
  5149  17B6  1FF5               	btfss	___awmod@dividend+1,7
  5150  17B7  2FBF               	goto	l2650
  5151  17B8  09F4               	comf	___awmod@dividend,f
  5152  17B9  09F5               	comf	___awmod@dividend+1,f
  5153  17BA  0AF4               	incf	___awmod@dividend,f
  5154  17BB  1903               	skipnz
  5155  17BC  0AF5               	incf	___awmod@dividend+1,f
  5156  17BD  01F8               	clrf	___awmod@sign
  5157  17BE  0AF8               	incf	___awmod@sign,f
  5158  17BF                     l2650:	
  5159  17BF  1FF3               	btfss	___awmod@divisor+1,7
  5160  17C0  2FC6               	goto	l2654
  5161  17C1  09F2               	comf	___awmod@divisor,f
  5162  17C2  09F3               	comf	___awmod@divisor+1,f
  5163  17C3  0AF2               	incf	___awmod@divisor,f
  5164  17C4  1903               	skipnz
  5165  17C5  0AF3               	incf	___awmod@divisor+1,f
  5166  17C6                     l2654:	
  5167  17C6  0872               	movf	___awmod@divisor,w
  5168  17C7  0473               	iorwf	___awmod@divisor+1,w
  5169  17C8  1903               	btfsc	3,2
  5170  17C9  2FF3               	goto	l2672
  5171  17CA  01F7               	clrf	___awmod@counter
  5172  17CB  0AF7               	incf	___awmod@counter,f
  5173  17CC                     l2662:	
  5174  17CC  1BF3               	btfsc	___awmod@divisor+1,7
  5175  17CD  2FDA               	goto	l2664
  5176  17CE  3001               	movlw	1
  5177  17CF                     u1725:	
  5178  17CF  1003               	clrc
  5179  17D0  0DF2               	rlf	___awmod@divisor,f
  5180  17D1  0DF3               	rlf	___awmod@divisor+1,f
  5181  17D2  3EFF               	addlw	-1
  5182  17D3  1D03               	skipz
  5183  17D4  2FCF               	goto	u1725
  5184  17D5  3001               	movlw	1
  5185  17D6  00F6               	movwf	??___awmod
  5186  17D7  0876               	movf	??___awmod,w
  5187  17D8  07F7               	addwf	___awmod@counter,f
  5188  17D9  2FCC               	goto	l2662
  5189  17DA                     l2664:	
  5190  17DA  0873               	movf	___awmod@divisor+1,w
  5191  17DB  0275               	subwf	___awmod@dividend+1,w
  5192  17DC  1D03               	skipz
  5193  17DD  2FE0               	goto	u1745
  5194  17DE  0872               	movf	___awmod@divisor,w
  5195  17DF  0274               	subwf	___awmod@dividend,w
  5196  17E0                     u1745:	
  5197  17E0  1C03               	skipc
  5198  17E1  2FE8               	goto	l2668
  5199  17E2  0872               	movf	___awmod@divisor,w
  5200  17E3  02F4               	subwf	___awmod@dividend,f
  5201  17E4  0873               	movf	___awmod@divisor+1,w
  5202  17E5  1C03               	skipc
  5203  17E6  03F5               	decf	___awmod@dividend+1,f
  5204  17E7  02F5               	subwf	___awmod@dividend+1,f
  5205  17E8                     l2668:	
  5206  17E8  3001               	movlw	1
  5207  17E9                     u1755:	
  5208  17E9  1003               	clrc
  5209  17EA  0CF3               	rrf	___awmod@divisor+1,f
  5210  17EB  0CF2               	rrf	___awmod@divisor,f
  5211  17EC  3EFF               	addlw	-1
  5212  17ED  1D03               	skipz
  5213  17EE  2FE9               	goto	u1755
  5214  17EF  3001               	movlw	1
  5215  17F0  02F7               	subwf	___awmod@counter,f
  5216  17F1  1D03               	btfss	3,2
  5217  17F2  2FDA               	goto	l2664
  5218  17F3                     l2672:	
  5219  17F3  0878               	movf	___awmod@sign,w
  5220  17F4  1903               	btfsc	3,2
  5221  17F5  2FFB               	goto	l2676
  5222  17F6  09F4               	comf	___awmod@dividend,f
  5223  17F7  09F5               	comf	___awmod@dividend+1,f
  5224  17F8  0AF4               	incf	___awmod@dividend,f
  5225  17F9  1903               	skipnz
  5226  17FA  0AF5               	incf	___awmod@dividend+1,f
  5227  17FB                     l2676:	
  5228  17FB  0875               	movf	___awmod@dividend+1,w
  5229  17FC  00F3               	movwf	?___awmod+1
  5230  17FD  0874               	movf	___awmod@dividend,w
  5231  17FE  00F2               	movwf	?___awmod
  5232  17FF  0008               	return
  5233  1800                     __end_of___awmod:	
  5234                           
  5235                           	psect	text15
  5236  08C3                     __ptext15:	
  5237 ;; *************** function ___awdiv *****************
  5238 ;; Defined at:
  5239 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;  divisor         2    0[BANK0 ] int 
  5242 ;;  dividend        2    2[BANK0 ] int 
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  quotient        2    6[BANK0 ] int 
  5245 ;;  sign            1    5[BANK0 ] unsigned char 
  5246 ;;  counter         1    4[BANK0 ] unsigned char 
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  2    0[BANK0 ] int 
  5249 ;; Registers used:
  5250 ;;		wreg, status,2, status,0
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5256 ;;      Params:         0       4       0       0       0
  5257 ;;      Locals:         0       4       0       0       0
  5258 ;;      Temps:          1       0       0       0       0
  5259 ;;      Totals:         1       8       0       0       0
  5260 ;;Total ram usage:        9 bytes
  5261 ;; Hardware stack levels used:    1
  5262 ;; Hardware stack levels required when called:    1
  5263 ;; This function calls:
  5264 ;;		Nothing
  5265 ;; This function is called by:
  5266 ;;		_display_Uhrzeit
  5267 ;;		_display_Datum
  5268 ;;		_uint_to_array
  5269 ;;		_DEC_a_BCD
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           
  5274                           ;psect for function ___awdiv
  5275  08C3                     ___awdiv:	
  5276                           
  5277                           ;incstack = 0
  5278                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5279  08C3  1283               	bcf	3,5	;RP0=0, select bank0
  5280  08C4  1303               	bcf	3,6	;RP1=0, select bank0
  5281  08C5  01A5               	clrf	___awdiv@sign
  5282  08C6  1FA1               	btfss	___awdiv@divisor+1,7
  5283  08C7  28CF               	goto	l4026
  5284  08C8  09A0               	comf	___awdiv@divisor,f
  5285  08C9  09A1               	comf	___awdiv@divisor+1,f
  5286  08CA  0AA0               	incf	___awdiv@divisor,f
  5287  08CB  1903               	skipnz
  5288  08CC  0AA1               	incf	___awdiv@divisor+1,f
  5289  08CD  01A5               	clrf	___awdiv@sign
  5290  08CE  0AA5               	incf	___awdiv@sign,f
  5291  08CF                     l4026:	
  5292  08CF  1FA3               	btfss	___awdiv@dividend+1,7
  5293  08D0  28DA               	goto	l4032
  5294  08D1  09A2               	comf	___awdiv@dividend,f
  5295  08D2  09A3               	comf	___awdiv@dividend+1,f
  5296  08D3  0AA2               	incf	___awdiv@dividend,f
  5297  08D4  1903               	skipnz
  5298  08D5  0AA3               	incf	___awdiv@dividend+1,f
  5299  08D6  3001               	movlw	1
  5300  08D7  00F8               	movwf	??___awdiv
  5301  08D8  0878               	movf	??___awdiv,w
  5302  08D9  06A5               	xorwf	___awdiv@sign,f
  5303  08DA                     l4032:	
  5304  08DA  01A6               	clrf	___awdiv@quotient
  5305  08DB  01A7               	clrf	___awdiv@quotient+1
  5306  08DC  0820               	movf	___awdiv@divisor,w
  5307  08DD  0421               	iorwf	___awdiv@divisor+1,w
  5308  08DE  1903               	btfsc	3,2
  5309  08DF  2911               	goto	l4054
  5310  08E0  01A4               	clrf	___awdiv@counter
  5311  08E1  0AA4               	incf	___awdiv@counter,f
  5312  08E2                     l4042:	
  5313  08E2  1BA1               	btfsc	___awdiv@divisor+1,7
  5314  08E3  28F0               	goto	l4044
  5315  08E4  3001               	movlw	1
  5316  08E5                     u2925:	
  5317  08E5  1003               	clrc
  5318  08E6  0DA0               	rlf	___awdiv@divisor,f
  5319  08E7  0DA1               	rlf	___awdiv@divisor+1,f
  5320  08E8  3EFF               	addlw	-1
  5321  08E9  1D03               	skipz
  5322  08EA  28E5               	goto	u2925
  5323  08EB  3001               	movlw	1
  5324  08EC  00F8               	movwf	??___awdiv
  5325  08ED  0878               	movf	??___awdiv,w
  5326  08EE  07A4               	addwf	___awdiv@counter,f
  5327  08EF  28E2               	goto	l4042
  5328  08F0                     l4044:	
  5329  08F0  3001               	movlw	1
  5330  08F1                     u2945:	
  5331  08F1  1003               	clrc
  5332  08F2  0DA6               	rlf	___awdiv@quotient,f
  5333  08F3  0DA7               	rlf	___awdiv@quotient+1,f
  5334  08F4  3EFF               	addlw	-1
  5335  08F5  1D03               	skipz
  5336  08F6  28F1               	goto	u2945
  5337  08F7  0821               	movf	___awdiv@divisor+1,w
  5338  08F8  0223               	subwf	___awdiv@dividend+1,w
  5339  08F9  1D03               	skipz
  5340  08FA  28FD               	goto	u2955
  5341  08FB  0820               	movf	___awdiv@divisor,w
  5342  08FC  0222               	subwf	___awdiv@dividend,w
  5343  08FD                     u2955:	
  5344  08FD  1C03               	skipc
  5345  08FE  2906               	goto	l4050
  5346  08FF  0820               	movf	___awdiv@divisor,w
  5347  0900  02A2               	subwf	___awdiv@dividend,f
  5348  0901  0821               	movf	___awdiv@divisor+1,w
  5349  0902  1C03               	skipc
  5350  0903  03A3               	decf	___awdiv@dividend+1,f
  5351  0904  02A3               	subwf	___awdiv@dividend+1,f
  5352  0905  1426               	bsf	___awdiv@quotient,0
  5353  0906                     l4050:	
  5354  0906  3001               	movlw	1
  5355  0907                     u2965:	
  5356  0907  1003               	clrc
  5357  0908  0CA1               	rrf	___awdiv@divisor+1,f
  5358  0909  0CA0               	rrf	___awdiv@divisor,f
  5359  090A  3EFF               	addlw	-1
  5360  090B  1D03               	skipz
  5361  090C  2907               	goto	u2965
  5362  090D  3001               	movlw	1
  5363  090E  02A4               	subwf	___awdiv@counter,f
  5364  090F  1D03               	btfss	3,2
  5365  0910  28F0               	goto	l4044
  5366  0911                     l4054:	
  5367  0911  0825               	movf	___awdiv@sign,w
  5368  0912  1903               	btfsc	3,2
  5369  0913  2919               	goto	l4058
  5370  0914  09A6               	comf	___awdiv@quotient,f
  5371  0915  09A7               	comf	___awdiv@quotient+1,f
  5372  0916  0AA6               	incf	___awdiv@quotient,f
  5373  0917  1903               	skipnz
  5374  0918  0AA7               	incf	___awdiv@quotient+1,f
  5375  0919                     l4058:	
  5376  0919  0827               	movf	___awdiv@quotient+1,w
  5377  091A  00A1               	movwf	?___awdiv+1
  5378  091B  0826               	movf	___awdiv@quotient,w
  5379  091C  00A0               	movwf	?___awdiv
  5380  091D  0008               	return
  5381  091E                     __end_of___awdiv:	
  5382                           
  5383                           	psect	text16
  5384  16A1                     __ptext16:	
  5385 ;; *************** function _LCD_Write_String *****************
  5386 ;; Defined at:
  5387 ;;		line 73 in file "LCD_8bits.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;  a               1    wreg     PTR unsigned char 
  5390 ;;		 -> STR_14(6), STR_13(16), STR_12(3), STR_11(4), 
  5391 ;;		 -> STR_10(13), STR_9(2), STR_8(2), STR_7(13), 
  5392 ;;		 -> STR_6(4), STR_5(3), STR_4(9), STR_3(17), 
  5393 ;;		 -> STR_2(10), STR_1(3), 
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  a               1    6[COMMON] PTR unsigned char 
  5396 ;;		 -> STR_14(6), STR_13(16), STR_12(3), STR_11(4), 
  5397 ;;		 -> STR_10(13), STR_9(2), STR_8(2), STR_7(13), 
  5398 ;;		 -> STR_6(4), STR_5(3), STR_4(9), STR_3(17), 
  5399 ;;		 -> STR_2(10), STR_1(3), 
  5400 ;;  n               2    4[COMMON] int 
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      void 
  5403 ;; Registers used:
  5404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5410 ;;      Params:         0       0       0       0       0
  5411 ;;      Locals:         3       0       0       0       0
  5412 ;;      Temps:          0       0       0       0       0
  5413 ;;      Totals:         3       0       0       0       0
  5414 ;;Total ram usage:        3 bytes
  5415 ;; Hardware stack levels used:    1
  5416 ;; Hardware stack levels required when called:    2
  5417 ;; This function calls:
  5418 ;;		_LCD_Write_Character
  5419 ;; This function is called by:
  5420 ;;		_display_Datum
  5421 ;;		_mostrarLCD
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           
  5426                           ;psect for function _LCD_Write_String
  5427  16A1                     _LCD_Write_String:	
  5428                           
  5429                           ;incstack = 0
  5430                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5431                           ;LCD_Write_String@a stored from wreg
  5432  16A1  00F6               	movwf	LCD_Write_String@a
  5433                           
  5434                           ;LCD_8bits.c: 74:     int n;;LCD_8bits.c: 75:     for(n = 0; a[n] != '\0'; n++){
  5435  16A2  01F4               	clrf	LCD_Write_String@n
  5436  16A3  01F5               	clrf	LCD_Write_String@n+1
  5437  16A4                     l2540:	
  5438  16A4  0874               	movf	LCD_Write_String@n,w
  5439  16A5  0776               	addwf	LCD_Write_String@a,w
  5440  16A6  0084               	movwf	4
  5441  16A7  120A  158A  2000  160A  118A  	fcall	stringdir
  5442  16AC  3A00               	xorlw	0
  5443  16AD  1903               	btfsc	3,2
  5444  16AE  0008               	return
  5445                           
  5446                           ;LCD_8bits.c: 76:         LCD_Write_Character(a[n]);
  5447  16AF  0874               	movf	LCD_Write_String@n,w
  5448  16B0  0776               	addwf	LCD_Write_String@a,w
  5449  16B1  0084               	movwf	4
  5450  16B2  120A  158A  2000  160A  118A  	fcall	stringdir
  5451  16B7  160A  118A  2611  160A  118A  	fcall	_LCD_Write_Character
  5452                           
  5453                           ;LCD_8bits.c: 77:     }
  5454  16BC  3001               	movlw	1
  5455  16BD  07F4               	addwf	LCD_Write_String@n,f
  5456  16BE  1803               	skipnc
  5457  16BF  0AF5               	incf	LCD_Write_String@n+1,f
  5458  16C0  3000               	movlw	0
  5459  16C1  07F5               	addwf	LCD_Write_String@n+1,f
  5460  16C2  2EA4               	goto	l2540
  5461  16C3                     __end_of_LCD_Write_String:	
  5462                           
  5463                           	psect	text17
  5464  0897                     __ptext17:	
  5465 ;; *************** function _LCD_Set_Cursor *****************
  5466 ;; Defined at:
  5467 ;;		line 80 in file "LCD_8bits.c"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;  linea           1    wreg     unsigned char 
  5470 ;;  columna         1    5[COMMON] unsigned char 
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;  linea           1    8[COMMON] unsigned char 
  5473 ;;  corrimiento     1    9[COMMON] unsigned char 
  5474 ;; Return value:  Size  Location     Type
  5475 ;;                  1    wreg      void 
  5476 ;; Registers used:
  5477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5483 ;;      Params:         1       0       0       0       0
  5484 ;;      Locals:         2       0       0       0       0
  5485 ;;      Temps:          2       0       0       0       0
  5486 ;;      Totals:         5       0       0       0       0
  5487 ;;Total ram usage:        5 bytes
  5488 ;; Hardware stack levels used:    1
  5489 ;; Hardware stack levels required when called:    2
  5490 ;; This function calls:
  5491 ;;		_LCD_Cmd
  5492 ;; This function is called by:
  5493 ;;		_display_Uhrzeit
  5494 ;;		_display_Datum
  5495 ;;		_mostrarLCD
  5496 ;;		_pressBoton2
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           
  5501                           ;psect for function _LCD_Set_Cursor
  5502  0897                     _LCD_Set_Cursor:	
  5503                           
  5504                           ;incstack = 0
  5505                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5506                           ;LCD_Set_Cursor@linea stored from wreg
  5507  0897  00F8               	movwf	LCD_Set_Cursor@linea
  5508                           
  5509                           ;LCD_8bits.c: 82:     switch (linea){
  5510  0898  28B2               	goto	l2528
  5511  0899                     l2518:	
  5512                           
  5513                           ;LCD_8bits.c: 84:             corrimiento = 0x80 + columna;
  5514  0899  0875               	movf	LCD_Set_Cursor@columna,w
  5515  089A  3E80               	addlw	128
  5516  089B  00F6               	movwf	??_LCD_Set_Cursor
  5517  089C  0876               	movf	??_LCD_Set_Cursor,w
  5518  089D  00F9               	movwf	LCD_Set_Cursor@corrimiento
  5519                           
  5520                           ;LCD_8bits.c: 85:             LCD_Cmd(corrimiento);
  5521  089E  0879               	movf	LCD_Set_Cursor@corrimiento,w
  5522  089F  160A  118A  274C   	fcall	_LCD_Cmd
  5523                           
  5524                           ;LCD_8bits.c: 86:             break;
  5525  08A2  0008               	return
  5526  08A3                     l2522:	
  5527                           
  5528                           ;LCD_8bits.c: 88:             corrimiento = 0x80 + 0x40 + columna;
  5529  08A3  0875               	movf	LCD_Set_Cursor@columna,w
  5530  08A4  3EC0               	addlw	192
  5531  08A5  00F6               	movwf	??_LCD_Set_Cursor
  5532  08A6  0876               	movf	??_LCD_Set_Cursor,w
  5533  08A7  00F9               	movwf	LCD_Set_Cursor@corrimiento
  5534                           
  5535                           ;LCD_8bits.c: 89:             LCD_Cmd(corrimiento);
  5536  08A8  0879               	movf	LCD_Set_Cursor@corrimiento,w
  5537  08A9  160A  118A  274C   	fcall	_LCD_Cmd
  5538                           
  5539                           ;LCD_8bits.c: 90:             break;
  5540  08AC  0008               	return
  5541  08AD                     l2526:	
  5542                           
  5543                           ;LCD_8bits.c: 92:             LCD_Cmd(0x80);
  5544  08AD  3080               	movlw	128
  5545  08AE  160A  118A  274C   	fcall	_LCD_Cmd
  5546                           
  5547                           ;LCD_8bits.c: 93:     }
  5548  08B1  0008               	return
  5549  08B2                     l2528:	
  5550  08B2  0878               	movf	LCD_Set_Cursor@linea,w
  5551  08B3  00F6               	movwf	??_LCD_Set_Cursor
  5552  08B4  01F7               	clrf	??_LCD_Set_Cursor+1
  5553                           
  5554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5555                           ; Switch size 1, requested type "simple"
  5556                           ; Number of cases is 1, Range of values is 0 to 0
  5557                           ; switch strategies available:
  5558                           ; Name         Instructions Cycles
  5559                           ; simple_byte            4     3 (average)
  5560                           ; direct_byte           11     8 (fixed)
  5561                           ; jumptable            260     6 (fixed)
  5562                           ;	Chosen strategy is simple_byte
  5563  08B5  0877               	movf	??_LCD_Set_Cursor+1,w
  5564  08B6  3A00               	xorlw	0	; case 0
  5565  08B7  1903               	skipnz
  5566  08B8  28BA               	goto	l4806
  5567  08B9  28AD               	goto	l2526
  5568  08BA                     l4806:	
  5569                           
  5570                           ; Switch size 1, requested type "simple"
  5571                           ; Number of cases is 2, Range of values is 1 to 2
  5572                           ; switch strategies available:
  5573                           ; Name         Instructions Cycles
  5574                           ; simple_byte            7     4 (average)
  5575                           ; direct_byte           17    11 (fixed)
  5576                           ; jumptable            263     9 (fixed)
  5577                           ;	Chosen strategy is simple_byte
  5578  08BA  0876               	movf	??_LCD_Set_Cursor,w
  5579  08BB  3A01               	xorlw	1	; case 1
  5580  08BC  1903               	skipnz
  5581  08BD  2899               	goto	l2518
  5582  08BE  3A03               	xorlw	3	; case 2
  5583  08BF  1903               	skipnz
  5584  08C0  28A3               	goto	l2522
  5585  08C1  28AD               	goto	l2526
  5586  08C2  0008               	return
  5587  08C3                     __end_of_LCD_Set_Cursor:	
  5588                           
  5589                           	psect	text18
  5590  051F                     __ptext18:	
  5591 ;; *************** function _get_Time *****************
  5592 ;; Defined at:
  5593 ;;		line 78 in file "RTC.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;		None
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;		None
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  1    wreg      void 
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0, pclath, cstack
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5607 ;;      Params:         0       0       0       0       0
  5608 ;;      Locals:         0       0       0       0       0
  5609 ;;      Temps:          0       1       0       0       0
  5610 ;;      Totals:         0       1       0       0       0
  5611 ;;Total ram usage:        1 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; Hardware stack levels required when called:    3
  5614 ;; This function calls:
  5615 ;;		_BCD_a_DEC
  5616 ;;		_I2C_Master_Read
  5617 ;;		_I2C_Master_Start
  5618 ;;		_I2C_Master_Stop
  5619 ;;		_I2C_Master_Write
  5620 ;; This function is called by:
  5621 ;;		_main
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           
  5626                           ;psect for function _get_Time
  5627  051F                     _get_Time:	
  5628                           
  5629                           ;RTC.c: 79:     I2C_Master_Start();
  5630                           
  5631                           ;incstack = 0
  5632                           ; Regs used in _get_Time: [wreg+status,2+status,0+pclath+cstack]
  5633  051F  160A  118A  25E9  120A  118A  	fcall	_I2C_Master_Start
  5634                           
  5635                           ;RTC.c: 80:     I2C_Master_Write(0xD0);
  5636  0524  30D0               	movlw	208
  5637  0525  00F2               	movwf	I2C_Master_Write@d
  5638  0526  3000               	movlw	0
  5639  0527  00F3               	movwf	I2C_Master_Write@d+1
  5640  0528  160A  118A  25F7  120A  118A  	fcall	_I2C_Master_Write
  5641                           
  5642                           ;RTC.c: 81:     I2C_Master_Write(0);
  5643  052D  3000               	movlw	0
  5644  052E  00F2               	movwf	I2C_Master_Write@d
  5645  052F  00F3               	movwf	I2C_Master_Write@d+1
  5646  0530  160A  118A  25F7  120A  118A  	fcall	_I2C_Master_Write
  5647                           
  5648                           ;RTC.c: 82:     I2C_Master_Stop();
  5649  0535  160A  118A  25F0  120A  118A  	fcall	_I2C_Master_Stop
  5650                           
  5651                           ;RTC.c: 83:     I2C_Master_Start();
  5652  053A  160A  118A  25E9  120A  118A  	fcall	_I2C_Master_Start
  5653                           
  5654                           ;RTC.c: 84:     I2C_Master_Write(0xD1);
  5655  053F  30D1               	movlw	209
  5656  0540  00F2               	movwf	I2C_Master_Write@d
  5657  0541  3000               	movlw	0
  5658  0542  00F3               	movwf	I2C_Master_Write@d+1
  5659  0543  160A  118A  25F7  120A  118A  	fcall	_I2C_Master_Write
  5660                           
  5661                           ;RTC.c: 85:     seg = BCD_a_DEC(I2C_Master_Read(0));
  5662  0548  3000               	movlw	0
  5663  0549  00F2               	movwf	I2C_Master_Read@a
  5664  054A  00F3               	movwf	I2C_Master_Read@a+1
  5665  054B  160A  118A  26EF  120A  118A  	fcall	_I2C_Master_Read
  5666  0550  0872               	movf	?_I2C_Master_Read,w
  5667  0551  160A  118A  266A  120A  118A  	fcall	_BCD_a_DEC
  5668  0556  1283               	bcf	3,5	;RP0=0, select bank0
  5669  0557  1303               	bcf	3,6	;RP1=0, select bank0
  5670  0558  00A0               	movwf	??_get_Time
  5671  0559  0820               	movf	??_get_Time,w
  5672  055A  00E4               	movwf	_seg
  5673                           
  5674                           ;RTC.c: 86:     I2C_Master_Stop();
  5675  055B  160A  118A  25F0  120A  118A  	fcall	_I2C_Master_Stop
  5676                           
  5677                           ;RTC.c: 88:     I2C_Master_Start();
  5678  0560  160A  118A  25E9  120A  118A  	fcall	_I2C_Master_Start
  5679                           
  5680                           ;RTC.c: 89:     I2C_Master_Write(0xD0);
  5681  0565  30D0               	movlw	208
  5682  0566  00F2               	movwf	I2C_Master_Write@d
  5683  0567  3000               	movlw	0
  5684  0568  00F3               	movwf	I2C_Master_Write@d+1
  5685  0569  160A  118A  25F7  120A  118A  	fcall	_I2C_Master_Write
  5686                           
  5687                           ;RTC.c: 90:     I2C_Master_Write(1);
  5688  056E  3001               	movlw	1
  5689  056F  00F2               	movwf	I2C_Master_Write@d
  5690  0570  3000               	movlw	0
  5691  0571  00F3               	movwf	I2C_Master_Write@d+1
  5692  0572  160A  118A  25F7  120A  118A  	fcall	_I2C_Master_Write
  5693                           
  5694                           ;RTC.c: 91:     I2C_Master_Stop();
  5695  0577  160A  118A  25F0  120A  118A  	fcall	_I2C_Master_Stop
  5696                           
  5697                           ;RTC.c: 92:     I2C_Master_Start();
  5698  057C  160A  118A  25E9  120A  118A  	fcall	_I2C_Master_Start
  5699                           
  5700                           ;RTC.c: 93:     I2C_Master_Write(0xD1);
  5701  0581  30D1               	movlw	209
  5702  0582  00F2               	movwf	I2C_Master_Write@d
  5703  0583  3000               	movlw	0
  5704  0584  00F3               	movwf	I2C_Master_Write@d+1
  5705  0585  160A  118A  25F7  120A  118A  	fcall	_I2C_Master_Write
  5706                           
  5707                           ;RTC.c: 94:     min = BCD_a_DEC(I2C_Master_Read(0));
  5708  058A  3000               	movlw	0
  5709  058B  00F2               	movwf	I2C_Master_Read@a
  5710  058C  00F3               	movwf	I2C_Master_Read@a+1
  5711  058D  160A  118A  26EF  120A  118A  	fcall	_I2C_Master_Read
  5712  0592  0872               	movf	?_I2C_Master_Read,w
  5713  0593  160A  118A  266A  120A  118A  	fcall	_BCD_a_DEC
  5714  0598  1283               	bcf	3,5	;RP0=0, select bank0
  5715  0599  1303               	bcf	3,6	;RP1=0, select bank0
  5716  059A  00A0               	movwf	??_get_Time
  5717  059B  0820               	movf	??_get_Time,w
  5718  059C  00EE               	movwf	_min
  5719                           
  5720                           ;RTC.c: 95:     I2C_Master_Stop();
  5721  059D  160A  118A  25F0  120A  118A  	fcall	_I2C_Master_Stop
  5722                           
  5723                           ;RTC.c: 97:     I2C_Master_Start();
  5724  05A2  160A  118A  25E9  120A  118A  	fcall	_I2C_Master_Start
  5725                           
  5726                           ;RTC.c: 98:     I2C_Master_Write(0xD0);
  5727  05A7  30D0               	movlw	208
  5728  05A8  00F2               	movwf	I2C_Master_Write@d
  5729  05A9  3000               	movlw	0
  5730  05AA  00F3               	movwf	I2C_Master_Write@d+1
  5731  05AB  160A  118A  25F7  120A  118A  	fcall	_I2C_Master_Write
  5732                           
  5733                           ;RTC.c: 99:     I2C_Master_Write(2);
  5734  05B0  3002               	movlw	2
  5735  05B1  00F2               	movwf	I2C_Master_Write@d
  5736  05B2  3000               	movlw	0
  5737  05B3  00F3               	movwf	I2C_Master_Write@d+1
  5738  05B4  160A  118A  25F7  120A  118A  	fcall	_I2C_Master_Write
  5739                           
  5740                           ;RTC.c: 100:     I2C_Master_Stop();
  5741  05B9  160A  118A  25F0  120A  118A  	fcall	_I2C_Master_Stop
  5742                           
  5743                           ;RTC.c: 101:     I2C_Master_Start();
  5744  05BE  160A  118A  25E9  120A  118A  	fcall	_I2C_Master_Start
  5745                           
  5746                           ;RTC.c: 102:     I2C_Master_Write(0xD1);
  5747  05C3  30D1               	movlw	209
  5748  05C4  00F2               	movwf	I2C_Master_Write@d
  5749  05C5  3000               	movlw	0
  5750  05C6  00F3               	movwf	I2C_Master_Write@d+1
  5751  05C7  160A  118A  25F7  120A  118A  	fcall	_I2C_Master_Write
  5752                           
  5753                           ;RTC.c: 103:     hora = BCD_a_DEC(I2C_Master_Read(0));
  5754  05CC  3000               	movlw	0
  5755  05CD  00F2               	movwf	I2C_Master_Read@a
  5756  05CE  00F3               	movwf	I2C_Master_Read@a+1
  5757  05CF  160A  118A  26EF  120A  118A  	fcall	_I2C_Master_Read
  5758  05D4  0872               	movf	?_I2C_Master_Read,w
  5759  05D5  160A  118A  266A  120A  118A  	fcall	_BCD_a_DEC
  5760  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  5761  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  5762  05DC  00A0               	movwf	??_get_Time
  5763  05DD  0820               	movf	??_get_Time,w
  5764  05DE  00ED               	movwf	_hora
  5765                           
  5766                           ;RTC.c: 104:     I2C_Master_Stop();
  5767  05DF  160A  118A  25F0  120A  118A  	fcall	_I2C_Master_Stop
  5768                           
  5769                           ;RTC.c: 107:     I2C_Master_Start();
  5770  05E4  160A  118A  25E9  120A  118A  	fcall	_I2C_Master_Start
  5771                           
  5772                           ;RTC.c: 108:     I2C_Master_Write(0xD0);
  5773  05E9  30D0               	movlw	208
  5774  05EA  00F2               	movwf	I2C_Master_Write@d
  5775  05EB  3000               	movlw	0
  5776  05EC  00F3               	movwf	I2C_Master_Write@d+1
  5777  05ED  160A  118A  25F7  120A  118A  	fcall	_I2C_Master_Write
  5778                           
  5779                           ;RTC.c: 109:     I2C_Master_Write(3);
  5780  05F2  3003               	movlw	3
  5781  05F3  00F2               	movwf	I2C_Master_Write@d
  5782  05F4  3000               	movlw	0
  5783  05F5  00F3               	movwf	I2C_Master_Write@d+1
  5784  05F6  160A  118A  25F7  120A  118A  	fcall	_I2C_Master_Write
  5785                           
  5786                           ;RTC.c: 110:     I2C_Master_Stop();
  5787  05FB  160A  118A  25F0  120A  118A  	fcall	_I2C_Master_Stop
  5788                           
  5789                           ;RTC.c: 111:     I2C_Master_Start();
  5790  0600  160A  118A  25E9  120A  118A  	fcall	_I2C_Master_Start
  5791                           
  5792                           ;RTC.c: 112:     I2C_Master_Write(0xD1);
  5793  0605  30D1               	movlw	209
  5794  0606  00F2               	movwf	I2C_Master_Write@d
  5795  0607  3000               	movlw	0
  5796  0608  00F3               	movwf	I2C_Master_Write@d+1
  5797  0609  160A  118A  25F7  120A  118A  	fcall	_I2C_Master_Write
  5798                           
  5799                           ;RTC.c: 113:     dia = BCD_a_DEC(I2C_Master_Read(0));
  5800  060E  3000               	movlw	0
  5801  060F  00F2               	movwf	I2C_Master_Read@a
  5802  0610  00F3               	movwf	I2C_Master_Read@a+1
  5803  0611  160A  118A  26EF  120A  118A  	fcall	_I2C_Master_Read
  5804  0616  0872               	movf	?_I2C_Master_Read,w
  5805  0617  160A  118A  266A  120A  118A  	fcall	_BCD_a_DEC
  5806  061C  1283               	bcf	3,5	;RP0=0, select bank0
  5807  061D  1303               	bcf	3,6	;RP1=0, select bank0
  5808  061E  00A0               	movwf	??_get_Time
  5809  061F  0820               	movf	??_get_Time,w
  5810  0620  00EC               	movwf	_dia
  5811                           
  5812                           ;RTC.c: 114:     I2C_Master_Stop();
  5813  0621  160A  118A  25F0  120A  118A  	fcall	_I2C_Master_Stop
  5814                           
  5815                           ;RTC.c: 116:     I2C_Master_Start();
  5816  0626  160A  118A  25E9  120A  118A  	fcall	_I2C_Master_Start
  5817                           
  5818                           ;RTC.c: 117:     I2C_Master_Write(0xD0);
  5819  062B  30D0               	movlw	208
  5820  062C  00F2               	movwf	I2C_Master_Write@d
  5821  062D  3000               	movlw	0
  5822  062E  00F3               	movwf	I2C_Master_Write@d+1
  5823  062F  160A  118A  25F7  120A  118A  	fcall	_I2C_Master_Write
  5824                           
  5825                           ;RTC.c: 118:     I2C_Master_Write(4);
  5826  0634  3004               	movlw	4
  5827  0635  00F2               	movwf	I2C_Master_Write@d
  5828  0636  3000               	movlw	0
  5829  0637  00F3               	movwf	I2C_Master_Write@d+1
  5830  0638  160A  118A  25F7  120A  118A  	fcall	_I2C_Master_Write
  5831                           
  5832                           ;RTC.c: 119:     I2C_Master_Stop();
  5833  063D  160A  118A  25F0  120A  118A  	fcall	_I2C_Master_Stop
  5834                           
  5835                           ;RTC.c: 120:     I2C_Master_Start();
  5836  0642  160A  118A  25E9  120A  118A  	fcall	_I2C_Master_Start
  5837                           
  5838                           ;RTC.c: 121:     I2C_Master_Write(0xD1);
  5839  0647  30D1               	movlw	209
  5840  0648  00F2               	movwf	I2C_Master_Write@d
  5841  0649  3000               	movlw	0
  5842  064A  00F3               	movwf	I2C_Master_Write@d+1
  5843  064B  160A  118A  25F7  120A  118A  	fcall	_I2C_Master_Write
  5844                           
  5845                           ;RTC.c: 122:     datum = BCD_a_DEC(I2C_Master_Read(0));
  5846  0650  3000               	movlw	0
  5847  0651  00F2               	movwf	I2C_Master_Read@a
  5848  0652  00F3               	movwf	I2C_Master_Read@a+1
  5849  0653  160A  118A  26EF  120A  118A  	fcall	_I2C_Master_Read
  5850  0658  0872               	movf	?_I2C_Master_Read,w
  5851  0659  160A  118A  266A  120A  118A  	fcall	_BCD_a_DEC
  5852  065E  1283               	bcf	3,5	;RP0=0, select bank0
  5853  065F  1303               	bcf	3,6	;RP1=0, select bank0
  5854  0660  00A0               	movwf	??_get_Time
  5855  0661  0820               	movf	??_get_Time,w
  5856  0662  00EB               	movwf	_datum
  5857                           
  5858                           ;RTC.c: 123:     I2C_Master_Stop();
  5859  0663  160A  118A  25F0  120A  118A  	fcall	_I2C_Master_Stop
  5860                           
  5861                           ;RTC.c: 125:     I2C_Master_Start();
  5862  0668  160A  118A  25E9  120A  118A  	fcall	_I2C_Master_Start
  5863                           
  5864                           ;RTC.c: 126:     I2C_Master_Write(0xD0);
  5865  066D  30D0               	movlw	208
  5866  066E  00F2               	movwf	I2C_Master_Write@d
  5867  066F  3000               	movlw	0
  5868  0670  00F3               	movwf	I2C_Master_Write@d+1
  5869  0671  160A  118A  25F7  120A  118A  	fcall	_I2C_Master_Write
  5870                           
  5871                           ;RTC.c: 127:     I2C_Master_Write(5);
  5872  0676  3005               	movlw	5
  5873  0677  00F2               	movwf	I2C_Master_Write@d
  5874  0678  3000               	movlw	0
  5875  0679  00F3               	movwf	I2C_Master_Write@d+1
  5876  067A  160A  118A  25F7  120A  118A  	fcall	_I2C_Master_Write
  5877                           
  5878                           ;RTC.c: 128:     I2C_Master_Stop();
  5879  067F  160A  118A  25F0  120A  118A  	fcall	_I2C_Master_Stop
  5880                           
  5881                           ;RTC.c: 129:     I2C_Master_Start();
  5882  0684  160A  118A  25E9  120A  118A  	fcall	_I2C_Master_Start
  5883                           
  5884                           ;RTC.c: 130:     I2C_Master_Write(0xD1);
  5885  0689  30D1               	movlw	209
  5886  068A  00F2               	movwf	I2C_Master_Write@d
  5887  068B  3000               	movlw	0
  5888  068C  00F3               	movwf	I2C_Master_Write@d+1
  5889  068D  160A  118A  25F7  120A  118A  	fcall	_I2C_Master_Write
  5890                           
  5891                           ;RTC.c: 131:     mes = BCD_a_DEC(I2C_Master_Read(0));
  5892  0692  3000               	movlw	0
  5893  0693  00F2               	movwf	I2C_Master_Read@a
  5894  0694  00F3               	movwf	I2C_Master_Read@a+1
  5895  0695  160A  118A  26EF  120A  118A  	fcall	_I2C_Master_Read
  5896  069A  0872               	movf	?_I2C_Master_Read,w
  5897  069B  160A  118A  266A  120A  118A  	fcall	_BCD_a_DEC
  5898  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  5899  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  5900  06A2  00A0               	movwf	??_get_Time
  5901  06A3  0820               	movf	??_get_Time,w
  5902  06A4  00EA               	movwf	_mes
  5903                           
  5904                           ;RTC.c: 132:     I2C_Master_Stop();
  5905  06A5  160A  118A  25F0  120A  118A  	fcall	_I2C_Master_Stop
  5906                           
  5907                           ;RTC.c: 134:     I2C_Master_Start();
  5908  06AA  160A  118A  25E9  120A  118A  	fcall	_I2C_Master_Start
  5909                           
  5910                           ;RTC.c: 135:     I2C_Master_Write(0xD0);
  5911  06AF  30D0               	movlw	208
  5912  06B0  00F2               	movwf	I2C_Master_Write@d
  5913  06B1  3000               	movlw	0
  5914  06B2  00F3               	movwf	I2C_Master_Write@d+1
  5915  06B3  160A  118A  25F7  120A  118A  	fcall	_I2C_Master_Write
  5916                           
  5917                           ;RTC.c: 136:     I2C_Master_Write(6);
  5918  06B8  3006               	movlw	6
  5919  06B9  00F2               	movwf	I2C_Master_Write@d
  5920  06BA  3000               	movlw	0
  5921  06BB  00F3               	movwf	I2C_Master_Write@d+1
  5922  06BC  160A  118A  25F7  120A  118A  	fcall	_I2C_Master_Write
  5923                           
  5924                           ;RTC.c: 137:     I2C_Master_Stop();
  5925  06C1  160A  118A  25F0  120A  118A  	fcall	_I2C_Master_Stop
  5926                           
  5927                           ;RTC.c: 138:     I2C_Master_Start();
  5928  06C6  160A  118A  25E9  120A  118A  	fcall	_I2C_Master_Start
  5929                           
  5930                           ;RTC.c: 139:     I2C_Master_Write(0xD1);
  5931  06CB  30D1               	movlw	209
  5932  06CC  00F2               	movwf	I2C_Master_Write@d
  5933  06CD  3000               	movlw	0
  5934  06CE  00F3               	movwf	I2C_Master_Write@d+1
  5935  06CF  160A  118A  25F7  120A  118A  	fcall	_I2C_Master_Write
  5936                           
  5937                           ;RTC.c: 140:     jahr = BCD_a_DEC(I2C_Master_Read(0));
  5938  06D4  3000               	movlw	0
  5939  06D5  00F2               	movwf	I2C_Master_Read@a
  5940  06D6  00F3               	movwf	I2C_Master_Read@a+1
  5941  06D7  160A  118A  26EF  120A  118A  	fcall	_I2C_Master_Read
  5942  06DC  0872               	movf	?_I2C_Master_Read,w
  5943  06DD  160A  118A  266A  120A  118A  	fcall	_BCD_a_DEC
  5944  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  5945  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  5946  06E4  00A0               	movwf	??_get_Time
  5947  06E5  0820               	movf	??_get_Time,w
  5948  06E6  00E9               	movwf	_jahr
  5949                           
  5950                           ;RTC.c: 141:     I2C_Master_Stop();
  5951  06E7  160A  118A  25F0   	fcall	_I2C_Master_Stop
  5952  06EA  0008               	return
  5953  06EB                     __end_of_get_Time:	
  5954                           
  5955                           	psect	text19
  5956  15F7                     __ptext19:	
  5957 ;; *************** function _I2C_Master_Write *****************
  5958 ;; Defined at:
  5959 ;;		line 65 in file "I2C.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;  d               2    2[COMMON] unsigned int 
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;		None
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  1    wreg      void 
  5966 ;; Registers used:
  5967 ;;		wreg, status,2, status,0, pclath, cstack
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5973 ;;      Params:         2       0       0       0       0
  5974 ;;      Locals:         0       0       0       0       0
  5975 ;;      Temps:          0       0       0       0       0
  5976 ;;      Totals:         2       0       0       0       0
  5977 ;;Total ram usage:        2 bytes
  5978 ;; Hardware stack levels used:    1
  5979 ;; Hardware stack levels required when called:    2
  5980 ;; This function calls:
  5981 ;;		_I2C_Master_Wait
  5982 ;; This function is called by:
  5983 ;;		_get_Time
  5984 ;;		_temp_objeto
  5985 ;;		_temp_ambiente
  5986 ;;		_get_hora
  5987 ;;		_Zeit_Datum_Set
  5988 ;; This function uses a non-reentrant model
  5989 ;;
  5990                           
  5991                           
  5992                           ;psect for function _I2C_Master_Write
  5993  15F7                     _I2C_Master_Write:	
  5994                           
  5995                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  5996                           
  5997                           ;incstack = 0
  5998                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  5999  15F7  160A  118A  25FF   	fcall	_I2C_Master_Wait
  6000                           
  6001                           ;I2C.c: 68:     SSPBUF = d;
  6002  15FA  0872               	movf	I2C_Master_Write@d,w
  6003  15FB  1283               	bcf	3,5	;RP0=0, select bank0
  6004  15FC  1303               	bcf	3,6	;RP1=0, select bank0
  6005  15FD  0093               	movwf	19	;volatile
  6006  15FE  0008               	return
  6007  15FF                     __end_of_I2C_Master_Write:	
  6008                           
  6009                           	psect	text20
  6010  15F0                     __ptext20:	
  6011 ;; *************** function _I2C_Master_Stop *****************
  6012 ;; Defined at:
  6013 ;;		line 55 in file "I2C.c"
  6014 ;; Parameters:    Size  Location     Type
  6015 ;;		None
  6016 ;; Auto vars:     Size  Location     Type
  6017 ;;		None
  6018 ;; Return value:  Size  Location     Type
  6019 ;;                  1    wreg      void 
  6020 ;; Registers used:
  6021 ;;		wreg, status,2, status,0, pclath, cstack
  6022 ;; Tracked objects:
  6023 ;;		On entry : 0/0
  6024 ;;		On exit  : 0/0
  6025 ;;		Unchanged: 0/0
  6026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6027 ;;      Params:         0       0       0       0       0
  6028 ;;      Locals:         0       0       0       0       0
  6029 ;;      Temps:          0       0       0       0       0
  6030 ;;      Totals:         0       0       0       0       0
  6031 ;;Total ram usage:        0 bytes
  6032 ;; Hardware stack levels used:    1
  6033 ;; Hardware stack levels required when called:    2
  6034 ;; This function calls:
  6035 ;;		_I2C_Master_Wait
  6036 ;; This function is called by:
  6037 ;;		_get_Time
  6038 ;;		_temp_objeto
  6039 ;;		_temp_ambiente
  6040 ;;		_get_hora
  6041 ;;		_Zeit_Datum_Set
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045                           
  6046                           ;psect for function _I2C_Master_Stop
  6047  15F0                     _I2C_Master_Stop:	
  6048                           
  6049                           ;I2C.c: 57:     I2C_Master_Wait();
  6050                           
  6051                           ;incstack = 0
  6052                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  6053  15F0  160A  118A  25FF   	fcall	_I2C_Master_Wait
  6054                           
  6055                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  6056  15F3  1683               	bsf	3,5	;RP0=1, select bank1
  6057  15F4  1303               	bcf	3,6	;RP1=0, select bank1
  6058  15F5  1511               	bsf	17,2	;volatile
  6059  15F6  0008               	return
  6060  15F7                     __end_of_I2C_Master_Stop:	
  6061                           
  6062                           	psect	text21
  6063  15E9                     __ptext21:	
  6064 ;; *************** function _I2C_Master_Start *****************
  6065 ;; Defined at:
  6066 ;;		line 39 in file "I2C.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;		None
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;		None
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      void 
  6073 ;; Registers used:
  6074 ;;		wreg, status,2, status,0, pclath, cstack
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6080 ;;      Params:         0       0       0       0       0
  6081 ;;      Locals:         0       0       0       0       0
  6082 ;;      Temps:          0       0       0       0       0
  6083 ;;      Totals:         0       0       0       0       0
  6084 ;;Total ram usage:        0 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; Hardware stack levels required when called:    2
  6087 ;; This function calls:
  6088 ;;		_I2C_Master_Wait
  6089 ;; This function is called by:
  6090 ;;		_get_Time
  6091 ;;		_temp_objeto
  6092 ;;		_temp_ambiente
  6093 ;;		_get_hora
  6094 ;;		_Zeit_Datum_Set
  6095 ;; This function uses a non-reentrant model
  6096 ;;
  6097                           
  6098                           
  6099                           ;psect for function _I2C_Master_Start
  6100  15E9                     _I2C_Master_Start:	
  6101                           
  6102                           ;I2C.c: 41:     I2C_Master_Wait();
  6103                           
  6104                           ;incstack = 0
  6105                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  6106  15E9  160A  118A  25FF   	fcall	_I2C_Master_Wait
  6107                           
  6108                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  6109  15EC  1683               	bsf	3,5	;RP0=1, select bank1
  6110  15ED  1303               	bcf	3,6	;RP1=0, select bank1
  6111  15EE  1411               	bsf	17,0	;volatile
  6112  15EF  0008               	return
  6113  15F0                     __end_of_I2C_Master_Start:	
  6114                           
  6115                           	psect	text22
  6116  16EF                     __ptext22:	
  6117 ;; *************** function _I2C_Master_Read *****************
  6118 ;; Defined at:
  6119 ;;		line 74 in file "I2C.c"
  6120 ;; Parameters:    Size  Location     Type
  6121 ;;  a               2    2[COMMON] unsigned short 
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;  temp            2    6[COMMON] unsigned short 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  2    2[COMMON] unsigned short 
  6126 ;; Registers used:
  6127 ;;		wreg, status,2, status,0, pclath, cstack
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6133 ;;      Params:         2       0       0       0       0
  6134 ;;      Locals:         2       0       0       0       0
  6135 ;;      Temps:          2       0       0       0       0
  6136 ;;      Totals:         6       0       0       0       0
  6137 ;;Total ram usage:        6 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; Hardware stack levels required when called:    2
  6140 ;; This function calls:
  6141 ;;		_I2C_Master_Wait
  6142 ;; This function is called by:
  6143 ;;		_get_Time
  6144 ;;		_temp_objeto
  6145 ;;		_temp_ambiente
  6146 ;;		_get_hora
  6147 ;; This function uses a non-reentrant model
  6148 ;;
  6149                           
  6150                           
  6151                           ;psect for function _I2C_Master_Read
  6152  16EF                     _I2C_Master_Read:	
  6153                           
  6154                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  6155                           
  6156                           ;incstack = 0
  6157                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  6158  16EF  160A  118A  25FF  160A  118A  	fcall	_I2C_Master_Wait
  6159                           
  6160                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  6161  16F4  1683               	bsf	3,5	;RP0=1, select bank1
  6162  16F5  1303               	bcf	3,6	;RP1=0, select bank1
  6163  16F6  1591               	bsf	17,3	;volatile
  6164                           
  6165                           ;I2C.c: 79:     I2C_Master_Wait();
  6166  16F7  160A  118A  25FF  160A  118A  	fcall	_I2C_Master_Wait
  6167                           
  6168                           ;I2C.c: 80:     temp = SSPBUF;
  6169  16FC  1283               	bcf	3,5	;RP0=0, select bank0
  6170  16FD  1303               	bcf	3,6	;RP1=0, select bank0
  6171  16FE  0813               	movf	19,w	;volatile
  6172  16FF  00F4               	movwf	??_I2C_Master_Read
  6173  1700  01F5               	clrf	??_I2C_Master_Read+1
  6174  1701  0874               	movf	??_I2C_Master_Read,w
  6175  1702  00F6               	movwf	I2C_Master_Read@temp
  6176  1703  0875               	movf	??_I2C_Master_Read+1,w
  6177  1704  00F7               	movwf	I2C_Master_Read@temp+1
  6178                           
  6179                           ;I2C.c: 81:     I2C_Master_Wait();
  6180  1705  160A  118A  25FF  160A  118A  	fcall	_I2C_Master_Wait
  6181                           
  6182                           ;I2C.c: 82:     if(a == 1){
  6183  170A  0372               	decf	I2C_Master_Read@a,w
  6184  170B  0473               	iorwf	I2C_Master_Read@a+1,w
  6185  170C  1D03               	btfss	3,2
  6186  170D  2F12               	goto	l282
  6187                           
  6188                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  6189  170E  1683               	bsf	3,5	;RP0=1, select bank1
  6190  170F  1303               	bcf	3,6	;RP1=0, select bank1
  6191  1710  1291               	bcf	17,5	;volatile
  6192                           
  6193                           ;I2C.c: 84:     }else{
  6194  1711  2F15               	goto	l283
  6195  1712                     l282:	
  6196                           
  6197                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  6198  1712  1683               	bsf	3,5	;RP0=1, select bank1
  6199  1713  1303               	bcf	3,6	;RP1=0, select bank1
  6200  1714  1691               	bsf	17,5	;volatile
  6201  1715                     l283:	
  6202                           ;I2C.c: 86:     }
  6203                           
  6204                           
  6205                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  6206  1715  1611               	bsf	17,4	;volatile
  6207                           
  6208                           ;I2C.c: 88:     return temp;
  6209  1716  0877               	movf	I2C_Master_Read@temp+1,w
  6210  1717  00F3               	movwf	?_I2C_Master_Read+1
  6211  1718  0876               	movf	I2C_Master_Read@temp,w
  6212  1719  00F2               	movwf	?_I2C_Master_Read
  6213  171A  0008               	return
  6214  171B                     __end_of_I2C_Master_Read:	
  6215                           
  6216                           	psect	text23
  6217  15FF                     __ptext23:	
  6218 ;; *************** function _I2C_Master_Wait *****************
  6219 ;; Defined at:
  6220 ;;		line 32 in file "I2C.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;		None
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;		None
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  1    wreg      void 
  6227 ;; Registers used:
  6228 ;;		wreg, status,2
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6234 ;;      Params:         0       0       0       0       0
  6235 ;;      Locals:         0       0       0       0       0
  6236 ;;      Temps:          0       0       0       0       0
  6237 ;;      Totals:         0       0       0       0       0
  6238 ;;Total ram usage:        0 bytes
  6239 ;; Hardware stack levels used:    1
  6240 ;; Hardware stack levels required when called:    1
  6241 ;; This function calls:
  6242 ;;		Nothing
  6243 ;; This function is called by:
  6244 ;;		_I2C_Master_Start
  6245 ;;		_I2C_Master_Stop
  6246 ;;		_I2C_Master_Write
  6247 ;;		_I2C_Master_Read
  6248 ;;		_I2C_Master_RepeatedStart
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252                           
  6253                           ;psect for function _I2C_Master_Wait
  6254  15FF                     _I2C_Master_Wait:	
  6255  15FF                     l264:	
  6256                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  6257                           
  6258                           ;incstack = 0
  6259                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  6260                           
  6261  15FF  1683               	bsf	3,5	;RP0=1, select bank1
  6262  1600  1303               	bcf	3,6	;RP1=0, select bank1
  6263  1601  1914               	btfsc	20,2	;volatile
  6264  1602  2DFF               	goto	l264
  6265  1603  0811               	movf	17,w	;volatile
  6266  1604  391F               	andlw	31
  6267  1605  1903               	btfsc	3,2
  6268  1606  0008               	return
  6269  1607  2DFF               	goto	l264
  6270  1608                     __end_of_I2C_Master_Wait:	
  6271                           
  6272                           	psect	text24
  6273  166A                     __ptext24:	
  6274 ;; *************** function _BCD_a_DEC *****************
  6275 ;; Defined at:
  6276 ;;		line 27 in file "RTC.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;  numBCD          1    wreg     unsigned char 
  6279 ;; Auto vars:     Size  Location     Type
  6280 ;;  numBCD          1    9[COMMON] unsigned char 
  6281 ;; Return value:  Size  Location     Type
  6282 ;;                  1    wreg      unsigned char 
  6283 ;; Registers used:
  6284 ;;		wreg, status,2, status,0, pclath, cstack
  6285 ;; Tracked objects:
  6286 ;;		On entry : 0/0
  6287 ;;		On exit  : 0/0
  6288 ;;		Unchanged: 0/0
  6289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6290 ;;      Params:         0       0       0       0       0
  6291 ;;      Locals:         1       0       0       0       0
  6292 ;;      Temps:          3       0       0       0       0
  6293 ;;      Totals:         4       0       0       0       0
  6294 ;;Total ram usage:        4 bytes
  6295 ;; Hardware stack levels used:    1
  6296 ;; Hardware stack levels required when called:    2
  6297 ;; This function calls:
  6298 ;;		___bmul
  6299 ;; This function is called by:
  6300 ;;		_get_Time
  6301 ;;		_get_hora
  6302 ;; This function uses a non-reentrant model
  6303 ;;
  6304                           
  6305                           
  6306                           ;psect for function _BCD_a_DEC
  6307  166A                     _BCD_a_DEC:	
  6308                           
  6309                           ;incstack = 0
  6310                           ; Regs used in _BCD_a_DEC: [wreg+status,2+status,0+pclath+cstack]
  6311                           ;BCD_a_DEC@numBCD stored from wreg
  6312  166A  00F9               	movwf	BCD_a_DEC@numBCD
  6313                           
  6314                           ;RTC.c: 28:     return (numBCD >> 4) * 10 + (numBCD & 0x0F);
  6315  166B  300F               	movlw	15
  6316  166C  0579               	andwf	BCD_a_DEC@numBCD,w
  6317  166D  00F6               	movwf	??_BCD_a_DEC
  6318  166E  300A               	movlw	10
  6319  166F  00F7               	movwf	??_BCD_a_DEC+1
  6320  1670  0877               	movf	??_BCD_a_DEC+1,w
  6321  1671  00F2               	movwf	___bmul@multiplicand
  6322  1672  0879               	movf	BCD_a_DEC@numBCD,w
  6323  1673  00F8               	movwf	??_BCD_a_DEC+2
  6324  1674  3004               	movlw	4
  6325  1675                     u1825:	
  6326  1675  1003               	clrc
  6327  1676  0CF8               	rrf	??_BCD_a_DEC+2,f
  6328  1677  3EFF               	addlw	-1
  6329  1678  1D03               	skipz
  6330  1679  2E75               	goto	u1825
  6331  167A  0878               	movf	??_BCD_a_DEC+2,w
  6332  167B  160A  118A  2632   	fcall	___bmul
  6333  167E  0776               	addwf	??_BCD_a_DEC,w
  6334  167F  0008               	return
  6335  1680                     __end_of_BCD_a_DEC:	
  6336                           
  6337                           	psect	text25
  6338  1632                     __ptext25:	
  6339 ;; *************** function ___bmul *****************
  6340 ;; Defined at:
  6341 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;  multiplier      1    wreg     unsigned char 
  6344 ;;  multiplicand    1    2[COMMON] unsigned char 
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;  multiplier      1    5[COMMON] unsigned char 
  6347 ;;  product         1    4[COMMON] unsigned char 
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  1    wreg      unsigned char 
  6350 ;; Registers used:
  6351 ;;		wreg, status,2, status,0
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6357 ;;      Params:         1       0       0       0       0
  6358 ;;      Locals:         2       0       0       0       0
  6359 ;;      Temps:          1       0       0       0       0
  6360 ;;      Totals:         4       0       0       0       0
  6361 ;;Total ram usage:        4 bytes
  6362 ;; Hardware stack levels used:    1
  6363 ;; Hardware stack levels required when called:    1
  6364 ;; This function calls:
  6365 ;;		Nothing
  6366 ;; This function is called by:
  6367 ;;		_BCD_a_DEC
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           
  6372                           ;psect for function ___bmul
  6373  1632                     ___bmul:	
  6374                           
  6375                           ;incstack = 0
  6376                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6377                           ;___bmul@multiplier stored from wreg
  6378  1632  00F5               	movwf	___bmul@multiplier
  6379  1633  01F4               	clrf	___bmul@product
  6380  1634                     l2562:	
  6381  1634  1C75               	btfss	___bmul@multiplier,0
  6382  1635  2E3A               	goto	l2566
  6383  1636  0872               	movf	___bmul@multiplicand,w
  6384  1637  00F3               	movwf	??___bmul
  6385  1638  0873               	movf	??___bmul,w
  6386  1639  07F4               	addwf	___bmul@product,f
  6387  163A                     l2566:	
  6388  163A  1003               	clrc
  6389  163B  0DF2               	rlf	___bmul@multiplicand,f
  6390  163C  1003               	clrc
  6391  163D  0CF5               	rrf	___bmul@multiplier,f
  6392  163E  0875               	movf	___bmul@multiplier,w
  6393  163F  1D03               	btfss	3,2
  6394  1640  2E34               	goto	l2562
  6395  1641  0874               	movf	___bmul@product,w
  6396  1642  0008               	return
  6397  1643                     __end_of___bmul:	
  6398                           
  6399                           	psect	text26
  6400  0AC0                     __ptext26:	
  6401 ;; *************** function _SetUp *****************
  6402 ;; Defined at:
  6403 ;;		line 135 in file "main_Master.c"
  6404 ;; Parameters:    Size  Location     Type
  6405 ;;		None
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;		None
  6408 ;; Return value:  Size  Location     Type
  6409 ;;                  1    wreg      void 
  6410 ;; Registers used:
  6411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6412 ;; Tracked objects:
  6413 ;;		On entry : 0/0
  6414 ;;		On exit  : 0/0
  6415 ;;		Unchanged: 0/0
  6416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6417 ;;      Params:         0       0       0       0       0
  6418 ;;      Locals:         0       0       0       0       0
  6419 ;;      Temps:          0       1       0       0       0
  6420 ;;      Totals:         0       1       0       0       0
  6421 ;;Total ram usage:        1 bytes
  6422 ;; Hardware stack levels used:    1
  6423 ;; Hardware stack levels required when called:    3
  6424 ;; This function calls:
  6425 ;;		_I2C_Master_Init
  6426 ;;		_LCD_Create_Char
  6427 ;;		_LCD_clear
  6428 ;;		_LCD_init
  6429 ;;		_OSC_config
  6430 ;; This function is called by:
  6431 ;;		_main
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           
  6436                           ;psect for function _SetUp
  6437  0AC0                     _SetUp:	
  6438                           
  6439                           ;main_Master.c: 136:     OSC_config(8000000);
  6440                           
  6441                           ;incstack = 0
  6442                           ; Regs used in _SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6443  0AC0  3000               	movlw	0
  6444  0AC1  00F5               	movwf	OSC_config@frecuencia+3
  6445  0AC2  307A               	movlw	122
  6446  0AC3  00F4               	movwf	OSC_config@frecuencia+2
  6447  0AC4  3012               	movlw	18
  6448  0AC5  00F3               	movwf	OSC_config@frecuencia+1
  6449  0AC6  3000               	movlw	0
  6450  0AC7  00F2               	movwf	OSC_config@frecuencia
  6451  0AC8  120A  158A  245E  120A  158A  	fcall	_OSC_config
  6452                           
  6453                           ;main_Master.c: 137:     TRISB = 0b00000110;
  6454  0ACD  3006               	movlw	6
  6455  0ACE  1683               	bsf	3,5	;RP0=1, select bank1
  6456  0ACF  1303               	bcf	3,6	;RP1=0, select bank1
  6457  0AD0  0086               	movwf	6	;volatile
  6458                           
  6459                           ;main_Master.c: 138:     ANSELH = 0;
  6460  0AD1  1683               	bsf	3,5	;RP0=1, select bank3
  6461  0AD2  1703               	bsf	3,6	;RP1=1, select bank3
  6462  0AD3  0189               	clrf	9	;volatile
  6463                           
  6464                           ;main_Master.c: 139:     WPUB = 0b00000110;
  6465  0AD4  3006               	movlw	6
  6466  0AD5  1683               	bsf	3,5	;RP0=1, select bank1
  6467  0AD6  1303               	bcf	3,6	;RP1=0, select bank1
  6468  0AD7  0095               	movwf	21	;volatile
  6469                           
  6470                           ;main_Master.c: 140:     OPTION_REGbits.nRBPU = 0;
  6471  0AD8  1381               	bcf	1,7	;volatile
  6472                           
  6473                           ;main_Master.c: 141:     IOCB = 0b00000110;
  6474  0AD9  3006               	movlw	6
  6475  0ADA  0096               	movwf	22	;volatile
  6476                           
  6477                           ;main_Master.c: 142:     INTCONbits.RBIE = 1;
  6478  0ADB  158B               	bsf	11,3	;volatile
  6479                           
  6480                           ;main_Master.c: 143:     INTCONbits.GIE = 1;
  6481  0ADC  178B               	bsf	11,7	;volatile
  6482                           
  6483                           ;main_Master.c: 144:     TRISD = 0;
  6484  0ADD  0188               	clrf	8	;volatile
  6485                           
  6486                           ;main_Master.c: 145:     TRISC0 = 0;
  6487  0ADE  1007               	bcf	7,0	;volatile
  6488                           
  6489                           ;main_Master.c: 146:     TRISC1 = 0;
  6490  0ADF  1087               	bcf	7,1	;volatile
  6491                           
  6492                           ;main_Master.c: 147:     LCD_init();
  6493  0AE0  120A  158A  217E  120A  158A  	fcall	_LCD_init
  6494                           
  6495                           ;main_Master.c: 148:     LCD_Create_Char(0, atilde);
  6496  0AE5  3011               	movlw	(low ((_atilde-__stringbase)| (0+32768)))& (0+255)
  6497  0AE6  1283               	bcf	3,5	;RP0=0, select bank0
  6498  0AE7  1303               	bcf	3,6	;RP1=0, select bank0
  6499  0AE8  00AE               	movwf	??_SetUp
  6500  0AE9  082E               	movf	??_SetUp,w
  6501  0AEA  00F5               	movwf	LCD_Create_Char@chardata
  6502  0AEB  3000               	movlw	0
  6503  0AEC  160A  118A  26C3  120A  158A  	fcall	_LCD_Create_Char
  6504                           
  6505                           ;main_Master.c: 149:     LCD_Create_Char(1, arrowr);
  6506  0AF1  3021               	movlw	(low ((_arrowr-__stringbase)| (0+32768)))& (0+255)
  6507  0AF2  1283               	bcf	3,5	;RP0=0, select bank0
  6508  0AF3  1303               	bcf	3,6	;RP1=0, select bank0
  6509  0AF4  00AE               	movwf	??_SetUp
  6510  0AF5  082E               	movf	??_SetUp,w
  6511  0AF6  00F5               	movwf	LCD_Create_Char@chardata
  6512  0AF7  3001               	movlw	1
  6513  0AF8  160A  118A  26C3  120A  158A  	fcall	_LCD_Create_Char
  6514                           
  6515                           ;main_Master.c: 150:     LCD_Create_Char(2, termometro);
  6516  0AFD  3009               	movlw	(low ((_termometro-__stringbase)| (0+32768)))& (0+255)
  6517  0AFE  1283               	bcf	3,5	;RP0=0, select bank0
  6518  0AFF  1303               	bcf	3,6	;RP1=0, select bank0
  6519  0B00  00AE               	movwf	??_SetUp
  6520  0B01  082E               	movf	??_SetUp,w
  6521  0B02  00F5               	movwf	LCD_Create_Char@chardata
  6522  0B03  3002               	movlw	2
  6523  0B04  160A  118A  26C3  120A  158A  	fcall	_LCD_Create_Char
  6524                           
  6525                           ;main_Master.c: 151:     LCD_Create_Char(3, gota);
  6526  0B09  3001               	movlw	(low ((_gota-__stringbase)| (0+32768)))& (0+255)
  6527  0B0A  1283               	bcf	3,5	;RP0=0, select bank0
  6528  0B0B  1303               	bcf	3,6	;RP1=0, select bank0
  6529  0B0C  00AE               	movwf	??_SetUp
  6530  0B0D  082E               	movf	??_SetUp,w
  6531  0B0E  00F5               	movwf	LCD_Create_Char@chardata
  6532  0B0F  3003               	movlw	3
  6533  0B10  160A  118A  26C3  120A  158A  	fcall	_LCD_Create_Char
  6534                           
  6535                           ;main_Master.c: 152:     LCD_Create_Char(4, arrowr_vacio);
  6536  0B15  3019               	movlw	(low ((_arrowr_vacio-__stringbase)| (0+32768)))& (0+255)
  6537  0B16  1283               	bcf	3,5	;RP0=0, select bank0
  6538  0B17  1303               	bcf	3,6	;RP1=0, select bank0
  6539  0B18  00AE               	movwf	??_SetUp
  6540  0B19  082E               	movf	??_SetUp,w
  6541  0B1A  00F5               	movwf	LCD_Create_Char@chardata
  6542  0B1B  3004               	movlw	4
  6543  0B1C  160A  118A  26C3  120A  158A  	fcall	_LCD_Create_Char
  6544                           
  6545                           ;main_Master.c: 153:     LCD_clear();
  6546  0B21  160A  118A  2654  120A  158A  	fcall	_LCD_clear
  6547                           
  6548                           ;main_Master.c: 154:     I2C_Master_Init(100000);
  6549  0B26  3000               	movlw	0
  6550  0B27  1283               	bcf	3,5	;RP0=0, select bank0
  6551  0B28  1303               	bcf	3,6	;RP1=0, select bank0
  6552  0B29  00A9               	movwf	I2C_Master_Init@c+3
  6553  0B2A  3001               	movlw	1
  6554  0B2B  00A8               	movwf	I2C_Master_Init@c+2
  6555  0B2C  3086               	movlw	134
  6556  0B2D  00A7               	movwf	I2C_Master_Init@c+1
  6557  0B2E  30A0               	movlw	160
  6558  0B2F  00A6               	movwf	I2C_Master_Init@c
  6559  0B30  160A  118A  277F   	fcall	_I2C_Master_Init
  6560  0B33  0008               	return
  6561  0B34                     __end_of_SetUp:	
  6562                           
  6563                           	psect	text27
  6564  0C5E                     __ptext27:	
  6565 ;; *************** function _OSC_config *****************
  6566 ;; Defined at:
  6567 ;;		line 158 in file "main_Master.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;  frecuencia      4    2[COMMON] unsigned long 
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;		None
  6572 ;; Return value:  Size  Location     Type
  6573 ;;                  1    wreg      void 
  6574 ;; Registers used:
  6575 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6581 ;;      Params:         4       0       0       0       0
  6582 ;;      Locals:         0       0       0       0       0
  6583 ;;      Temps:          0       0       0       0       0
  6584 ;;      Totals:         4       0       0       0       0
  6585 ;;Total ram usage:        4 bytes
  6586 ;; Hardware stack levels used:    1
  6587 ;; Hardware stack levels required when called:    1
  6588 ;; This function calls:
  6589 ;;		Nothing
  6590 ;; This function is called by:
  6591 ;;		_SetUp
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           
  6595                           
  6596                           ;psect for function _OSC_config
  6597  0C5E                     _OSC_config:	
  6598                           
  6599                           ;main_Master.c: 159:     switch(frecuencia){
  6600                           
  6601                           ;incstack = 0
  6602                           ; Regs used in _OSC_config: [wreg-fsr0h+status,2+status,0]
  6603  0C5E  2C9A               	goto	l2700
  6604  0C5F                     l2682:	
  6605                           
  6606                           ;main_Master.c: 161:             OSCCONbits.IRCF = 0b111;
  6607  0C5F  3070               	movlw	112
  6608  0C60  1683               	bsf	3,5	;RP0=1, select bank1
  6609  0C61  1303               	bcf	3,6	;RP1=0, select bank1
  6610  0C62  048F               	iorwf	15,f	;volatile
  6611                           
  6612                           ;main_Master.c: 162:             break;
  6613  0C63  0008               	return
  6614  0C64                     l2684:	
  6615                           
  6616                           ;main_Master.c: 164:             OSCCONbits.IRCF = 0b110;
  6617  0C64  1683               	bsf	3,5	;RP0=1, select bank1
  6618  0C65  1303               	bcf	3,6	;RP1=0, select bank1
  6619  0C66  080F               	movf	15,w	;volatile
  6620  0C67  398F               	andlw	-113
  6621  0C68  3860               	iorlw	96
  6622  0C69  008F               	movwf	15	;volatile
  6623                           
  6624                           ;main_Master.c: 165:             break;
  6625  0C6A  0008               	return
  6626  0C6B                     l2686:	
  6627                           
  6628                           ;main_Master.c: 167:             OSCCONbits.IRCF = 0b101;
  6629  0C6B  1683               	bsf	3,5	;RP0=1, select bank1
  6630  0C6C  1303               	bcf	3,6	;RP1=0, select bank1
  6631  0C6D  080F               	movf	15,w	;volatile
  6632  0C6E  398F               	andlw	-113
  6633  0C6F  3850               	iorlw	80
  6634  0C70  008F               	movwf	15	;volatile
  6635                           
  6636                           ;main_Master.c: 168:             break;
  6637  0C71  0008               	return
  6638  0C72                     l2688:	
  6639                           
  6640                           ;main_Master.c: 170:             OSCCONbits.IRCF = 0b100;
  6641  0C72  1683               	bsf	3,5	;RP0=1, select bank1
  6642  0C73  1303               	bcf	3,6	;RP1=0, select bank1
  6643  0C74  080F               	movf	15,w	;volatile
  6644  0C75  398F               	andlw	-113
  6645  0C76  3840               	iorlw	64
  6646  0C77  008F               	movwf	15	;volatile
  6647                           
  6648                           ;main_Master.c: 171:             break;
  6649  0C78  0008               	return
  6650  0C79                     l2690:	
  6651                           
  6652                           ;main_Master.c: 173:             OSCCONbits.IRCF = 0b011;
  6653  0C79  1683               	bsf	3,5	;RP0=1, select bank1
  6654  0C7A  1303               	bcf	3,6	;RP1=0, select bank1
  6655  0C7B  080F               	movf	15,w	;volatile
  6656  0C7C  398F               	andlw	-113
  6657  0C7D  3830               	iorlw	48
  6658  0C7E  008F               	movwf	15	;volatile
  6659                           
  6660                           ;main_Master.c: 174:             break;
  6661  0C7F  0008               	return
  6662  0C80                     l2692:	
  6663                           
  6664                           ;main_Master.c: 176:             OSCCONbits.IRCF = 0b010;
  6665  0C80  1683               	bsf	3,5	;RP0=1, select bank1
  6666  0C81  1303               	bcf	3,6	;RP1=0, select bank1
  6667  0C82  080F               	movf	15,w	;volatile
  6668  0C83  398F               	andlw	-113
  6669  0C84  3820               	iorlw	32
  6670  0C85  008F               	movwf	15	;volatile
  6671                           
  6672                           ;main_Master.c: 177:             break;
  6673  0C86  0008               	return
  6674  0C87                     l2694:	
  6675                           
  6676                           ;main_Master.c: 179:             OSCCONbits.IRCF = 0b001;
  6677  0C87  1683               	bsf	3,5	;RP0=1, select bank1
  6678  0C88  1303               	bcf	3,6	;RP1=0, select bank1
  6679  0C89  080F               	movf	15,w	;volatile
  6680  0C8A  398F               	andlw	-113
  6681  0C8B  3810               	iorlw	16
  6682  0C8C  008F               	movwf	15	;volatile
  6683                           
  6684                           ;main_Master.c: 180:             break;
  6685  0C8D  0008               	return
  6686  0C8E                     l2696:	
  6687                           
  6688                           ;main_Master.c: 182:             OSCCONbits.IRCF = 0b000;
  6689  0C8E  308F               	movlw	-113
  6690  0C8F  1683               	bsf	3,5	;RP0=1, select bank1
  6691  0C90  1303               	bcf	3,6	;RP1=0, select bank1
  6692  0C91  058F               	andwf	15,f	;volatile
  6693                           
  6694                           ;main_Master.c: 183:             break;
  6695  0C92  0008               	return
  6696  0C93                     l2698:	
  6697                           
  6698                           ;main_Master.c: 185:             OSCCONbits.IRCF = 0b110;
  6699  0C93  1683               	bsf	3,5	;RP0=1, select bank1
  6700  0C94  1303               	bcf	3,6	;RP1=0, select bank1
  6701  0C95  080F               	movf	15,w	;volatile
  6702  0C96  398F               	andlw	-113
  6703  0C97  3860               	iorlw	96
  6704  0C98  008F               	movwf	15	;volatile
  6705                           
  6706                           ;main_Master.c: 186:     }
  6707  0C99  0008               	return
  6708  0C9A                     l2700:	
  6709                           
  6710                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 9 sub-sw
      +                          itches
  6711                           ; Switch size 1, requested type "simple"
  6712                           ; Number of cases is 1, Range of values is 0 to 0
  6713                           ; switch strategies available:
  6714                           ; Name         Instructions Cycles
  6715                           ; simple_byte            4     3 (average)
  6716                           ; direct_byte           11     8 (fixed)
  6717                           ; jumptable            260     6 (fixed)
  6718                           ;	Chosen strategy is simple_byte
  6719  0C9A  0875               	movf	OSC_config@frecuencia+3,w
  6720  0C9B  3A00               	xorlw	0	; case 0
  6721  0C9C  1903               	skipnz
  6722  0C9D  2CEF               	goto	l4824
  6723  0C9E  2C93               	goto	l2698
  6724  0C9F                     l4808:	
  6725                           
  6726                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6727                           ; Switch size 1, requested type "simple"
  6728                           ; Number of cases is 1, Range of values is 125 to 125
  6729                           ; switch strategies available:
  6730                           ; Name         Instructions Cycles
  6731                           ; simple_byte            4     3 (average)
  6732                           ; direct_byte           14    11 (fixed)
  6733                           ; jumptable            263     9 (fixed)
  6734                           ;	Chosen strategy is simple_byte
  6735  0C9F  0873               	movf	OSC_config@frecuencia+1,w
  6736  0CA0  3A7D               	xorlw	125	; case 125
  6737  0CA1  1903               	skipnz
  6738  0CA2  2CA4               	goto	l4826
  6739  0CA3  2C93               	goto	l2698
  6740  0CA4                     l4826:	
  6741                           
  6742                           ; Switch size 1, requested type "simple"
  6743                           ; Number of cases is 1, Range of values is 0 to 0
  6744                           ; switch strategies available:
  6745                           ; Name         Instructions Cycles
  6746                           ; simple_byte            4     3 (average)
  6747                           ; direct_byte           11     8 (fixed)
  6748                           ; jumptable            260     6 (fixed)
  6749                           ;	Chosen strategy is simple_byte
  6750  0CA4  0872               	movf	OSC_config@frecuencia,w
  6751  0CA5  3A00               	xorlw	0	; case 0
  6752  0CA6  1903               	skipnz
  6753  0CA7  2C8E               	goto	l2696
  6754  0CA8  2C93               	goto	l2698
  6755  0CA9                     l4810:	
  6756                           
  6757                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6758                           ; Switch size 1, requested type "simple"
  6759                           ; Number of cases is 1, Range of values is 232 to 232
  6760                           ; switch strategies available:
  6761                           ; Name         Instructions Cycles
  6762                           ; simple_byte            4     3 (average)
  6763                           ; direct_byte           14    11 (fixed)
  6764                           ; jumptable            263     9 (fixed)
  6765                           ;	Chosen strategy is simple_byte
  6766  0CA9  0873               	movf	OSC_config@frecuencia+1,w
  6767  0CAA  3AE8               	xorlw	232	; case 232
  6768  0CAB  1903               	skipnz
  6769  0CAC  2CAE               	goto	l4828
  6770  0CAD  2C93               	goto	l2698
  6771  0CAE                     l4828:	
  6772                           
  6773                           ; Switch size 1, requested type "simple"
  6774                           ; Number of cases is 1, Range of values is 72 to 72
  6775                           ; switch strategies available:
  6776                           ; Name         Instructions Cycles
  6777                           ; simple_byte            4     3 (average)
  6778                           ; direct_byte           14    11 (fixed)
  6779                           ; jumptable            263     9 (fixed)
  6780                           ;	Chosen strategy is simple_byte
  6781  0CAE  0872               	movf	OSC_config@frecuencia,w
  6782  0CAF  3A48               	xorlw	72	; case 72
  6783  0CB0  1903               	skipnz
  6784  0CB1  2C87               	goto	l2694
  6785  0CB2  2C93               	goto	l2698
  6786  0CB3                     l4812:	
  6787                           
  6788                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6789                           ; Switch size 1, requested type "simple"
  6790                           ; Number of cases is 1, Range of values is 208 to 208
  6791                           ; switch strategies available:
  6792                           ; Name         Instructions Cycles
  6793                           ; simple_byte            4     3 (average)
  6794                           ; direct_byte           14    11 (fixed)
  6795                           ; jumptable            263     9 (fixed)
  6796                           ;	Chosen strategy is simple_byte
  6797  0CB3  0873               	movf	OSC_config@frecuencia+1,w
  6798  0CB4  3AD0               	xorlw	208	; case 208
  6799  0CB5  1903               	skipnz
  6800  0CB6  2CB8               	goto	l4830
  6801  0CB7  2C93               	goto	l2698
  6802  0CB8                     l4830:	
  6803                           
  6804                           ; Switch size 1, requested type "simple"
  6805                           ; Number of cases is 1, Range of values is 144 to 144
  6806                           ; switch strategies available:
  6807                           ; Name         Instructions Cycles
  6808                           ; simple_byte            4     3 (average)
  6809                           ; direct_byte           14    11 (fixed)
  6810                           ; jumptable            263     9 (fixed)
  6811                           ;	Chosen strategy is simple_byte
  6812  0CB8  0872               	movf	OSC_config@frecuencia,w
  6813  0CB9  3A90               	xorlw	144	; case 144
  6814  0CBA  1903               	skipnz
  6815  0CBB  2C80               	goto	l2692
  6816  0CBC  2C93               	goto	l2698
  6817  0CBD                     l4814:	
  6818                           
  6819                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6820                           ; Switch size 1, requested type "simple"
  6821                           ; Number of cases is 1, Range of values is 161 to 161
  6822                           ; switch strategies available:
  6823                           ; Name         Instructions Cycles
  6824                           ; simple_byte            4     3 (average)
  6825                           ; direct_byte           14    11 (fixed)
  6826                           ; jumptable            263     9 (fixed)
  6827                           ;	Chosen strategy is simple_byte
  6828  0CBD  0873               	movf	OSC_config@frecuencia+1,w
  6829  0CBE  3AA1               	xorlw	161	; case 161
  6830  0CBF  1903               	skipnz
  6831  0CC0  2CC2               	goto	l4832
  6832  0CC1  2C93               	goto	l2698
  6833  0CC2                     l4832:	
  6834                           
  6835                           ; Switch size 1, requested type "simple"
  6836                           ; Number of cases is 1, Range of values is 32 to 32
  6837                           ; switch strategies available:
  6838                           ; Name         Instructions Cycles
  6839                           ; simple_byte            4     3 (average)
  6840                           ; direct_byte           14    11 (fixed)
  6841                           ; jumptable            263     9 (fixed)
  6842                           ;	Chosen strategy is simple_byte
  6843  0CC2  0872               	movf	OSC_config@frecuencia,w
  6844  0CC3  3A20               	xorlw	32	; case 32
  6845  0CC4  1903               	skipnz
  6846  0CC5  2C79               	goto	l2690
  6847  0CC6  2C93               	goto	l2698
  6848  0CC7                     l4816:	
  6849                           
  6850                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6851                           ; Switch size 1, requested type "simple"
  6852                           ; Number of cases is 1, Range of values is 66 to 66
  6853                           ; switch strategies available:
  6854                           ; Name         Instructions Cycles
  6855                           ; simple_byte            4     3 (average)
  6856                           ; direct_byte           14    11 (fixed)
  6857                           ; jumptable            263     9 (fixed)
  6858                           ;	Chosen strategy is simple_byte
  6859  0CC7  0873               	movf	OSC_config@frecuencia+1,w
  6860  0CC8  3A42               	xorlw	66	; case 66
  6861  0CC9  1903               	skipnz
  6862  0CCA  2CCC               	goto	l4834
  6863  0CCB  2C93               	goto	l2698
  6864  0CCC                     l4834:	
  6865                           
  6866                           ; Switch size 1, requested type "simple"
  6867                           ; Number of cases is 1, Range of values is 64 to 64
  6868                           ; switch strategies available:
  6869                           ; Name         Instructions Cycles
  6870                           ; simple_byte            4     3 (average)
  6871                           ; direct_byte           14    11 (fixed)
  6872                           ; jumptable            263     9 (fixed)
  6873                           ;	Chosen strategy is simple_byte
  6874  0CCC  0872               	movf	OSC_config@frecuencia,w
  6875  0CCD  3A40               	xorlw	64	; case 64
  6876  0CCE  1903               	skipnz
  6877  0CCF  2C72               	goto	l2688
  6878  0CD0  2C93               	goto	l2698
  6879  0CD1                     l4818:	
  6880                           
  6881                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6882                           ; Switch size 1, requested type "simple"
  6883                           ; Number of cases is 1, Range of values is 132 to 132
  6884                           ; switch strategies available:
  6885                           ; Name         Instructions Cycles
  6886                           ; simple_byte            4     3 (average)
  6887                           ; direct_byte           14    11 (fixed)
  6888                           ; jumptable            263     9 (fixed)
  6889                           ;	Chosen strategy is simple_byte
  6890  0CD1  0873               	movf	OSC_config@frecuencia+1,w
  6891  0CD2  3A84               	xorlw	132	; case 132
  6892  0CD3  1903               	skipnz
  6893  0CD4  2CD6               	goto	l4836
  6894  0CD5  2C93               	goto	l2698
  6895  0CD6                     l4836:	
  6896                           
  6897                           ; Switch size 1, requested type "simple"
  6898                           ; Number of cases is 1, Range of values is 128 to 128
  6899                           ; switch strategies available:
  6900                           ; Name         Instructions Cycles
  6901                           ; simple_byte            4     3 (average)
  6902                           ; direct_byte           14    11 (fixed)
  6903                           ; jumptable            263     9 (fixed)
  6904                           ;	Chosen strategy is simple_byte
  6905  0CD6  0872               	movf	OSC_config@frecuencia,w
  6906  0CD7  3A80               	xorlw	128	; case 128
  6907  0CD8  1903               	skipnz
  6908  0CD9  2C6B               	goto	l2686
  6909  0CDA  2C93               	goto	l2698
  6910  0CDB                     l4820:	
  6911                           
  6912                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6913                           ; Switch size 1, requested type "simple"
  6914                           ; Number of cases is 1, Range of values is 9 to 9
  6915                           ; switch strategies available:
  6916                           ; Name         Instructions Cycles
  6917                           ; simple_byte            4     3 (average)
  6918                           ; direct_byte           14    11 (fixed)
  6919                           ; jumptable            263     9 (fixed)
  6920                           ;	Chosen strategy is simple_byte
  6921  0CDB  0873               	movf	OSC_config@frecuencia+1,w
  6922  0CDC  3A09               	xorlw	9	; case 9
  6923  0CDD  1903               	skipnz
  6924  0CDE  2CE0               	goto	l4838
  6925  0CDF  2C93               	goto	l2698
  6926  0CE0                     l4838:	
  6927                           
  6928                           ; Switch size 1, requested type "simple"
  6929                           ; Number of cases is 1, Range of values is 0 to 0
  6930                           ; switch strategies available:
  6931                           ; Name         Instructions Cycles
  6932                           ; simple_byte            4     3 (average)
  6933                           ; direct_byte           11     8 (fixed)
  6934                           ; jumptable            260     6 (fixed)
  6935                           ;	Chosen strategy is simple_byte
  6936  0CE0  0872               	movf	OSC_config@frecuencia,w
  6937  0CE1  3A00               	xorlw	0	; case 0
  6938  0CE2  1903               	skipnz
  6939  0CE3  2C64               	goto	l2684
  6940  0CE4  2C93               	goto	l2698
  6941  0CE5                     l4822:	
  6942                           
  6943                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6944                           ; Switch size 1, requested type "simple"
  6945                           ; Number of cases is 1, Range of values is 18 to 18
  6946                           ; switch strategies available:
  6947                           ; Name         Instructions Cycles
  6948                           ; simple_byte            4     3 (average)
  6949                           ; direct_byte           14    11 (fixed)
  6950                           ; jumptable            263     9 (fixed)
  6951                           ;	Chosen strategy is simple_byte
  6952  0CE5  0873               	movf	OSC_config@frecuencia+1,w
  6953  0CE6  3A12               	xorlw	18	; case 18
  6954  0CE7  1903               	skipnz
  6955  0CE8  2CEA               	goto	l4840
  6956  0CE9  2C93               	goto	l2698
  6957  0CEA                     l4840:	
  6958                           
  6959                           ; Switch size 1, requested type "simple"
  6960                           ; Number of cases is 1, Range of values is 0 to 0
  6961                           ; switch strategies available:
  6962                           ; Name         Instructions Cycles
  6963                           ; simple_byte            4     3 (average)
  6964                           ; direct_byte           11     8 (fixed)
  6965                           ; jumptable            260     6 (fixed)
  6966                           ;	Chosen strategy is simple_byte
  6967  0CEA  0872               	movf	OSC_config@frecuencia,w
  6968  0CEB  3A00               	xorlw	0	; case 0
  6969  0CEC  1903               	skipnz
  6970  0CED  2C5F               	goto	l2682
  6971  0CEE  2C93               	goto	l2698
  6972  0CEF                     l4824:	
  6973                           
  6974                           ; Switch size 1, requested type "simple"
  6975                           ; Number of cases is 8, Range of values is 0 to 122
  6976                           ; switch strategies available:
  6977                           ; Name         Instructions Cycles
  6978                           ; simple_byte           25    13 (average)
  6979                           ; jumptable            260     6 (fixed)
  6980                           ;	Chosen strategy is simple_byte
  6981  0CEF  0874               	movf	OSC_config@frecuencia+2,w
  6982  0CF0  3A00               	xorlw	0	; case 0
  6983  0CF1  1903               	skipnz
  6984  0CF2  2C9F               	goto	l4808
  6985  0CF3  3A01               	xorlw	1	; case 1
  6986  0CF4  1903               	skipnz
  6987  0CF5  2CA9               	goto	l4810
  6988  0CF6  3A02               	xorlw	2	; case 3
  6989  0CF7  1903               	skipnz
  6990  0CF8  2CB3               	goto	l4812
  6991  0CF9  3A04               	xorlw	4	; case 7
  6992  0CFA  1903               	skipnz
  6993  0CFB  2CBD               	goto	l4814
  6994  0CFC  3A08               	xorlw	8	; case 15
  6995  0CFD  1903               	skipnz
  6996  0CFE  2CC7               	goto	l4816
  6997  0CFF  3A11               	xorlw	17	; case 30
  6998  0D00  1903               	skipnz
  6999  0D01  2CD1               	goto	l4818
  7000  0D02  3A23               	xorlw	35	; case 61
  7001  0D03  1903               	skipnz
  7002  0D04  2CDB               	goto	l4820
  7003  0D05  3A47               	xorlw	71	; case 122
  7004  0D06  1903               	skipnz
  7005  0D07  2CE5               	goto	l4822
  7006  0D08  2C93               	goto	l2698
  7007  0D09  0008               	return
  7008  0D0A                     __end_of_OSC_config:	
  7009                           
  7010                           	psect	text28
  7011  097E                     __ptext28:	
  7012 ;; *************** function _LCD_init *****************
  7013 ;; Defined at:
  7014 ;;		line 44 in file "LCD_8bits.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;		None
  7017 ;; Auto vars:     Size  Location     Type
  7018 ;;		None
  7019 ;; Return value:  Size  Location     Type
  7020 ;;                  1    wreg      void 
  7021 ;; Registers used:
  7022 ;;		wreg, status,2, status,0, pclath, cstack
  7023 ;; Tracked objects:
  7024 ;;		On entry : 0/0
  7025 ;;		On exit  : 0/0
  7026 ;;		Unchanged: 0/0
  7027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7028 ;;      Params:         0       0       0       0       0
  7029 ;;      Locals:         0       0       0       0       0
  7030 ;;      Temps:          2       0       0       0       0
  7031 ;;      Totals:         2       0       0       0       0
  7032 ;;Total ram usage:        2 bytes
  7033 ;; Hardware stack levels used:    1
  7034 ;; Hardware stack levels required when called:    2
  7035 ;; This function calls:
  7036 ;;		_LCD_Cmd
  7037 ;; This function is called by:
  7038 ;;		_SetUp
  7039 ;; This function uses a non-reentrant model
  7040 ;;
  7041                           
  7042                           
  7043                           ;psect for function _LCD_init
  7044  097E                     _LCD_init:	
  7045                           
  7046                           ;LCD_8bits.c: 45:     _delay((unsigned long)((20)*(8000000/4000.0)));
  7047                           
  7048                           ;incstack = 0
  7049                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  7050  097E  3034               	movlw	52
  7051  097F  00F6               	movwf	??_LCD_init+1
  7052  0980  30F1               	movlw	241
  7053  0981  00F5               	movwf	??_LCD_init
  7054  0982                     u3267:	
  7055  0982  0BF5               	decfsz	??_LCD_init,f
  7056  0983  2982               	goto	u3267
  7057  0984  0BF6               	decfsz	??_LCD_init+1,f
  7058  0985  2982               	goto	u3267
  7059  0986  2987               	nop2
  7060                           
  7061                           ;LCD_8bits.c: 46:     LCD_Cmd(0x30);
  7062  0987  3030               	movlw	48
  7063  0988  160A  118A  274C  120A  158A  	fcall	_LCD_Cmd
  7064                           
  7065                           ;LCD_8bits.c: 47:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7066  098D  300D               	movlw	13
  7067  098E  00F6               	movwf	??_LCD_init+1
  7068  098F  30FB               	movlw	251
  7069  0990  00F5               	movwf	??_LCD_init
  7070  0991                     u3277:	
  7071  0991  0BF5               	decfsz	??_LCD_init,f
  7072  0992  2991               	goto	u3277
  7073  0993  0BF6               	decfsz	??_LCD_init+1,f
  7074  0994  2991               	goto	u3277
  7075  0995  2996               	nop2
  7076                           
  7077                           ;LCD_8bits.c: 48:     LCD_Cmd(0x30);
  7078  0996  3030               	movlw	48
  7079  0997  160A  118A  274C  120A  158A  	fcall	_LCD_Cmd
  7080                           
  7081                           ;LCD_8bits.c: 49:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7082  099C  3042               	movlw	66
  7083  099D  00F5               	movwf	??_LCD_init
  7084  099E                     u3287:	
  7085  099E  0BF5               	decfsz	??_LCD_init,f
  7086  099F  299E               	goto	u3287
  7087  09A0  0000               	nop
  7088                           
  7089                           ;LCD_8bits.c: 50:     LCD_Cmd(0x30);
  7090  09A1  3030               	movlw	48
  7091  09A2  160A  118A  274C  120A  158A  	fcall	_LCD_Cmd
  7092                           
  7093                           ;LCD_8bits.c: 51:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  7094  09A7  3042               	movlw	66
  7095  09A8  00F5               	movwf	??_LCD_init
  7096  09A9                     u3297:	
  7097  09A9  0BF5               	decfsz	??_LCD_init,f
  7098  09AA  29A9               	goto	u3297
  7099  09AB  0000               	nop
  7100                           
  7101                           ;LCD_8bits.c: 52:     LCD_Cmd(0x38);
  7102  09AC  3038               	movlw	56
  7103  09AD  160A  118A  274C  120A  158A  	fcall	_LCD_Cmd
  7104                           
  7105                           ;LCD_8bits.c: 53:     _delay((unsigned long)((53)*(8000000/4000000.0)));
  7106  09B2  3023               	movlw	35
  7107  09B3  00F5               	movwf	??_LCD_init
  7108  09B4                     u3307:	
  7109  09B4  0BF5               	decfsz	??_LCD_init,f
  7110  09B5  29B4               	goto	u3307
  7111                           
  7112                           ;LCD_8bits.c: 54:     LCD_Cmd(0x08);
  7113  09B6  3008               	movlw	8
  7114  09B7  160A  118A  274C  120A  158A  	fcall	_LCD_Cmd
  7115                           
  7116                           ;LCD_8bits.c: 55:     _delay((unsigned long)((53)*(8000000/4000000.0)));
  7117  09BC  3023               	movlw	35
  7118  09BD  00F5               	movwf	??_LCD_init
  7119  09BE                     u3317:	
  7120  09BE  0BF5               	decfsz	??_LCD_init,f
  7121  09BF  29BE               	goto	u3317
  7122                           
  7123                           ;LCD_8bits.c: 56:     LCD_Cmd(0x01);
  7124  09C0  3001               	movlw	1
  7125  09C1  160A  118A  274C  120A  158A  	fcall	_LCD_Cmd
  7126                           
  7127                           ;LCD_8bits.c: 57:     _delay((unsigned long)((3)*(8000000/4000.0)));
  7128  09C6  3008               	movlw	8
  7129  09C7  00F6               	movwf	??_LCD_init+1
  7130  09C8  30C9               	movlw	201
  7131  09C9  00F5               	movwf	??_LCD_init
  7132  09CA                     u3327:	
  7133  09CA  0BF5               	decfsz	??_LCD_init,f
  7134  09CB  29CA               	goto	u3327
  7135  09CC  0BF6               	decfsz	??_LCD_init+1,f
  7136  09CD  29CA               	goto	u3327
  7137  09CE  29CF               	nop2
  7138                           
  7139                           ;LCD_8bits.c: 58:     LCD_Cmd(0x06);
  7140  09CF  3006               	movlw	6
  7141  09D0  160A  118A  274C  120A  158A  	fcall	_LCD_Cmd
  7142                           
  7143                           ;LCD_8bits.c: 59:     _delay((unsigned long)((53)*(8000000/4000000.0)));
  7144  09D5  3023               	movlw	35
  7145  09D6  00F5               	movwf	??_LCD_init
  7146  09D7                     u3337:	
  7147  09D7  0BF5               	decfsz	??_LCD_init,f
  7148  09D8  29D7               	goto	u3337
  7149                           
  7150                           ;LCD_8bits.c: 60:     LCD_Cmd(0x0C);
  7151  09D9  300C               	movlw	12
  7152  09DA  160A  118A  274C  120A  158A  	fcall	_LCD_Cmd
  7153                           
  7154                           ;LCD_8bits.c: 61:     _delay((unsigned long)((53)*(8000000/4000000.0)));
  7155  09DF  3023               	movlw	35
  7156  09E0  00F5               	movwf	??_LCD_init
  7157  09E1                     u3347:	
  7158  09E1  0BF5               	decfsz	??_LCD_init,f
  7159  09E2  29E1               	goto	u3347
  7160  09E3  0008               	return
  7161  09E4                     __end_of_LCD_init:	
  7162                           
  7163                           	psect	text29
  7164  1654                     __ptext29:	
  7165 ;; *************** function _LCD_clear *****************
  7166 ;; Defined at:
  7167 ;;		line 32 in file "LCD_8bits.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;		None
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;		None
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  1    wreg      void 
  7174 ;; Registers used:
  7175 ;;		wreg, status,2, status,0, pclath, cstack
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7181 ;;      Params:         0       0       0       0       0
  7182 ;;      Locals:         0       0       0       0       0
  7183 ;;      Temps:          2       0       0       0       0
  7184 ;;      Totals:         2       0       0       0       0
  7185 ;;Total ram usage:        2 bytes
  7186 ;; Hardware stack levels used:    1
  7187 ;; Hardware stack levels required when called:    2
  7188 ;; This function calls:
  7189 ;;		_LCD_Cmd
  7190 ;; This function is called by:
  7191 ;;		_SetUp
  7192 ;;		_mostrarLCD
  7193 ;;		_pressBoton1
  7194 ;;		_pressBoton2
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198                           
  7199                           ;psect for function _LCD_clear
  7200  1654                     _LCD_clear:	
  7201                           
  7202                           ;LCD_8bits.c: 33:     LCD_Cmd(0x00);
  7203                           
  7204                           ;incstack = 0
  7205                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  7206  1654  3000               	movlw	0
  7207  1655  160A  118A  274C  160A  118A  	fcall	_LCD_Cmd
  7208                           
  7209                           ;LCD_8bits.c: 34:     LCD_Cmd(0x01);
  7210  165A  3001               	movlw	1
  7211  165B  160A  118A  274C  160A  118A  	fcall	_LCD_Cmd
  7212                           
  7213                           ;LCD_8bits.c: 35:     _delay((unsigned long)((4)*(8000000/4000.0)));
  7214  1660  300B               	movlw	11
  7215  1661  00F6               	movwf	??_LCD_clear+1
  7216  1662  3062               	movlw	98
  7217  1663  00F5               	movwf	??_LCD_clear
  7218  1664                     u3357:	
  7219  1664  0BF5               	decfsz	??_LCD_clear,f
  7220  1665  2E64               	goto	u3357
  7221  1666  0BF6               	decfsz	??_LCD_clear+1,f
  7222  1667  2E64               	goto	u3357
  7223  1668  0000               	nop
  7224  1669  0008               	return
  7225  166A                     __end_of_LCD_clear:	
  7226                           
  7227                           	psect	text30
  7228  16C3                     __ptext30:	
  7229 ;; *************** function _LCD_Create_Char *****************
  7230 ;; Defined at:
  7231 ;;		line 116 in file "LCD_8bits.c"
  7232 ;; Parameters:    Size  Location     Type
  7233 ;;  charnum         1    wreg     unsigned char 
  7234 ;;  chardata        1    5[COMMON] PTR const unsigned char 
  7235 ;;		 -> arrowr_vacio(8), gota(8), termometro(8), arrowr(8), 
  7236 ;;		 -> atilde(8), 
  7237 ;; Auto vars:     Size  Location     Type
  7238 ;;  charnum         1    7[COMMON] unsigned char 
  7239 ;;  n               1    8[COMMON] unsigned char 
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  1    wreg      void 
  7242 ;; Registers used:
  7243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7249 ;;      Params:         1       0       0       0       0
  7250 ;;      Locals:         2       0       0       0       0
  7251 ;;      Temps:          1       0       0       0       0
  7252 ;;      Totals:         4       0       0       0       0
  7253 ;;Total ram usage:        4 bytes
  7254 ;; Hardware stack levels used:    1
  7255 ;; Hardware stack levels required when called:    2
  7256 ;; This function calls:
  7257 ;;		_LCD_Cmd
  7258 ;;		_LCD_Write_Character
  7259 ;; This function is called by:
  7260 ;;		_SetUp
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           
  7265                           ;psect for function _LCD_Create_Char
  7266  16C3                     _LCD_Create_Char:	
  7267                           
  7268                           ;incstack = 0
  7269                           ; Regs used in _LCD_Create_Char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7270                           ;LCD_Create_Char@charnum stored from wreg
  7271  16C3  00F7               	movwf	LCD_Create_Char@charnum
  7272                           
  7273                           ;LCD_8bits.c: 117:  uint8_t n;;LCD_8bits.c: 118:  charnum &= 0x07;
  7274  16C4  3007               	movlw	7
  7275  16C5  00F6               	movwf	??_LCD_Create_Char
  7276  16C6  0876               	movf	??_LCD_Create_Char,w
  7277  16C7  05F7               	andwf	LCD_Create_Char@charnum,f
  7278                           
  7279                           ;LCD_8bits.c: 119:  LCD_Cmd(0x40 | (charnum << 3));
  7280  16C8  0877               	movf	LCD_Create_Char@charnum,w
  7281  16C9  00F6               	movwf	??_LCD_Create_Char
  7282  16CA  3002               	movlw	2
  7283  16CB                     u1785:	
  7284  16CB  1003               	clrc
  7285  16CC  0DF6               	rlf	??_LCD_Create_Char,f
  7286  16CD  3EFF               	addlw	-1
  7287  16CE  1D03               	skipz
  7288  16CF  2ECB               	goto	u1785
  7289  16D0  1003               	clrc
  7290  16D1  0D76               	rlf	??_LCD_Create_Char,w
  7291  16D2  3840               	iorlw	64
  7292  16D3  160A  118A  274C  160A  118A  	fcall	_LCD_Cmd
  7293                           
  7294                           ;LCD_8bits.c: 120:  for (n = 0; n < 8; n++)
  7295  16D8  01F8               	clrf	LCD_Create_Char@n
  7296  16D9                     l2804:	
  7297                           
  7298                           ;LCD_8bits.c: 121:   LCD_Write_Character(chardata[n]);
  7299  16D9  0878               	movf	LCD_Create_Char@n,w
  7300  16DA  0775               	addwf	LCD_Create_Char@chardata,w
  7301  16DB  0084               	movwf	4
  7302  16DC  120A  158A  2000  160A  118A  	fcall	stringdir
  7303  16E1  160A  118A  2611  160A  118A  	fcall	_LCD_Write_Character
  7304  16E6  3001               	movlw	1
  7305  16E7  00F6               	movwf	??_LCD_Create_Char
  7306  16E8  0876               	movf	??_LCD_Create_Char,w
  7307  16E9  07F8               	addwf	LCD_Create_Char@n,f
  7308  16EA  3008               	movlw	8
  7309  16EB  0278               	subwf	LCD_Create_Char@n,w
  7310  16EC  1803               	btfsc	3,0
  7311  16ED  0008               	return
  7312  16EE  2ED9               	goto	l2804
  7313  16EF                     __end_of_LCD_Create_Char:	
  7314                           
  7315                           	psect	text31
  7316  1611                     __ptext31:	
  7317 ;; *************** function _LCD_Write_Character *****************
  7318 ;; Defined at:
  7319 ;;		line 64 in file "LCD_8bits.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;  caracter        1    wreg     unsigned char 
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;  caracter        1    3[COMMON] unsigned char 
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  1    wreg      void 
  7326 ;; Registers used:
  7327 ;;		wreg
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7333 ;;      Params:         0       0       0       0       0
  7334 ;;      Locals:         1       0       0       0       0
  7335 ;;      Temps:          1       0       0       0       0
  7336 ;;      Totals:         2       0       0       0       0
  7337 ;;Total ram usage:        2 bytes
  7338 ;; Hardware stack levels used:    1
  7339 ;; Hardware stack levels required when called:    1
  7340 ;; This function calls:
  7341 ;;		Nothing
  7342 ;; This function is called by:
  7343 ;;		_display_Uhrzeit
  7344 ;;		_display_Datum
  7345 ;;		_mostrarLCD
  7346 ;;		_pressBoton2
  7347 ;;		_LCD_Write_String
  7348 ;;		_LCD_Create_Char
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352                           
  7353                           ;psect for function _LCD_Write_Character
  7354  1611                     _LCD_Write_Character:	
  7355                           
  7356                           ;incstack = 0
  7357                           ; Regs used in _LCD_Write_Character: [wreg]
  7358                           ;LCD_Write_Character@caracter stored from wreg
  7359  1611  00F3               	movwf	LCD_Write_Character@caracter
  7360                           
  7361                           ;LCD_8bits.c: 65:     PORTCbits.RC0 = 1;
  7362  1612  1283               	bcf	3,5	;RP0=0, select bank0
  7363  1613  1303               	bcf	3,6	;RP1=0, select bank0
  7364  1614  1407               	bsf	7,0	;volatile
  7365                           
  7366                           ;LCD_8bits.c: 67:     PORTD = caracter;
  7367  1615  0873               	movf	LCD_Write_Character@caracter,w
  7368  1616  0088               	movwf	8	;volatile
  7369                           
  7370                           ;LCD_8bits.c: 68:     PORTCbits.RC1 = 1;
  7371  1617  1487               	bsf	7,1	;volatile
  7372                           
  7373                           ;LCD_8bits.c: 69:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  7374  1618  301A               	movlw	26
  7375  1619  00F2               	movwf	??_LCD_Write_Character
  7376  161A                     u3367:	
  7377  161A  0BF2               	decfsz	??_LCD_Write_Character,f
  7378  161B  2E1A               	goto	u3367
  7379  161C  0000               	nop
  7380                           
  7381                           ;LCD_8bits.c: 70:     PORTCbits.RC1 = 0;
  7382  161D  1283               	bcf	3,5	;RP0=0, select bank0
  7383  161E  1303               	bcf	3,6	;RP1=0, select bank0
  7384  161F  1087               	bcf	7,1	;volatile
  7385  1620  0008               	return
  7386  1621                     __end_of_LCD_Write_Character:	
  7387                           
  7388                           	psect	text32
  7389  174C                     __ptext32:	
  7390 ;; *************** function _LCD_Cmd *****************
  7391 ;; Defined at:
  7392 ;;		line 21 in file "LCD_8bits.c"
  7393 ;; Parameters:    Size  Location     Type
  7394 ;;  comando         1    wreg     unsigned char 
  7395 ;; Auto vars:     Size  Location     Type
  7396 ;;  comando         1    4[COMMON] unsigned char 
  7397 ;; Return value:  Size  Location     Type
  7398 ;;                  1    wreg      void 
  7399 ;; Registers used:
  7400 ;;		wreg
  7401 ;; Tracked objects:
  7402 ;;		On entry : 0/0
  7403 ;;		On exit  : 0/0
  7404 ;;		Unchanged: 0/0
  7405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7406 ;;      Params:         0       0       0       0       0
  7407 ;;      Locals:         1       0       0       0       0
  7408 ;;      Temps:          2       0       0       0       0
  7409 ;;      Totals:         3       0       0       0       0
  7410 ;;Total ram usage:        3 bytes
  7411 ;; Hardware stack levels used:    1
  7412 ;; Hardware stack levels required when called:    1
  7413 ;; This function calls:
  7414 ;;		Nothing
  7415 ;; This function is called by:
  7416 ;;		_LCD_clear
  7417 ;;		_LCD_init
  7418 ;;		_LCD_Set_Cursor
  7419 ;;		_LCD_Create_Char
  7420 ;;		_LCD_home
  7421 ;;		_LCD_Shift_links
  7422 ;;		_LCD_Shift_rechts
  7423 ;;		_LCD_Cursor_rechts
  7424 ;;		_LCD_Cursor_links
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428                           
  7429                           ;psect for function _LCD_Cmd
  7430  174C                     _LCD_Cmd:	
  7431                           
  7432                           ;incstack = 0
  7433                           ; Regs used in _LCD_Cmd: [wreg]
  7434                           ;LCD_Cmd@comando stored from wreg
  7435  174C  00F4               	movwf	LCD_Cmd@comando
  7436                           
  7437                           ;LCD_8bits.c: 22:     PORTCbits.RC0 = 0;
  7438  174D  1283               	bcf	3,5	;RP0=0, select bank0
  7439  174E  1303               	bcf	3,6	;RP1=0, select bank0
  7440  174F  1007               	bcf	7,0	;volatile
  7441                           
  7442                           ;LCD_8bits.c: 23:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7443  1750  300D               	movlw	13
  7444  1751  00F3               	movwf	??_LCD_Cmd+1
  7445  1752  30FB               	movlw	251
  7446  1753  00F2               	movwf	??_LCD_Cmd
  7447  1754                     u3377:	
  7448  1754  0BF2               	decfsz	??_LCD_Cmd,f
  7449  1755  2F54               	goto	u3377
  7450  1756  0BF3               	decfsz	??_LCD_Cmd+1,f
  7451  1757  2F54               	goto	u3377
  7452  1758  2F59               	nop2
  7453                           
  7454                           ;LCD_8bits.c: 24:     PORTCbits.RC1 = 1;
  7455  1759  1283               	bcf	3,5	;RP0=0, select bank0
  7456  175A  1303               	bcf	3,6	;RP1=0, select bank0
  7457  175B  1487               	bsf	7,1	;volatile
  7458                           
  7459                           ;LCD_8bits.c: 25:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7460  175C  300D               	movlw	13
  7461  175D  00F3               	movwf	??_LCD_Cmd+1
  7462  175E  30FB               	movlw	251
  7463  175F  00F2               	movwf	??_LCD_Cmd
  7464  1760                     u3387:	
  7465  1760  0BF2               	decfsz	??_LCD_Cmd,f
  7466  1761  2F60               	goto	u3387
  7467  1762  0BF3               	decfsz	??_LCD_Cmd+1,f
  7468  1763  2F60               	goto	u3387
  7469  1764  2F65               	nop2
  7470                           
  7471                           ;LCD_8bits.c: 26:     PORTD = comando;
  7472  1765  0874               	movf	LCD_Cmd@comando,w
  7473  1766  1283               	bcf	3,5	;RP0=0, select bank0
  7474  1767  1303               	bcf	3,6	;RP1=0, select bank0
  7475  1768  0088               	movwf	8	;volatile
  7476                           
  7477                           ;LCD_8bits.c: 27:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7478  1769  300D               	movlw	13
  7479  176A  00F3               	movwf	??_LCD_Cmd+1
  7480  176B  30FB               	movlw	251
  7481  176C  00F2               	movwf	??_LCD_Cmd
  7482  176D                     u3397:	
  7483  176D  0BF2               	decfsz	??_LCD_Cmd,f
  7484  176E  2F6D               	goto	u3397
  7485  176F  0BF3               	decfsz	??_LCD_Cmd+1,f
  7486  1770  2F6D               	goto	u3397
  7487  1771  2F72               	nop2
  7488                           
  7489                           ;LCD_8bits.c: 28:     PORTCbits.RC1 = 0;
  7490  1772  1283               	bcf	3,5	;RP0=0, select bank0
  7491  1773  1303               	bcf	3,6	;RP1=0, select bank0
  7492  1774  1087               	bcf	7,1	;volatile
  7493                           
  7494                           ;LCD_8bits.c: 29:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7495  1775  300D               	movlw	13
  7496  1776  00F3               	movwf	??_LCD_Cmd+1
  7497  1777  30FB               	movlw	251
  7498  1778  00F2               	movwf	??_LCD_Cmd
  7499  1779                     u3407:	
  7500  1779  0BF2               	decfsz	??_LCD_Cmd,f
  7501  177A  2F79               	goto	u3407
  7502  177B  0BF3               	decfsz	??_LCD_Cmd+1,f
  7503  177C  2F79               	goto	u3407
  7504  177D  2F7E               	nop2
  7505  177E  0008               	return
  7506  177F                     __end_of_LCD_Cmd:	
  7507                           
  7508                           	psect	text33
  7509  177F                     __ptext33:	
  7510 ;; *************** function _I2C_Master_Init *****************
  7511 ;; Defined at:
  7512 ;;		line 16 in file "I2C.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;  c               4    6[BANK0 ] const unsigned long 
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;		None
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  1    wreg      void 
  7519 ;; Registers used:
  7520 ;;		wreg, status,2, status,0, pclath, cstack
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/0
  7523 ;;		On exit  : 0/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7526 ;;      Params:         0       4       0       0       0
  7527 ;;      Locals:         0       0       0       0       0
  7528 ;;      Temps:          0       4       0       0       0
  7529 ;;      Totals:         0       8       0       0       0
  7530 ;;Total ram usage:        8 bytes
  7531 ;; Hardware stack levels used:    1
  7532 ;; Hardware stack levels required when called:    2
  7533 ;; This function calls:
  7534 ;;		___lldiv
  7535 ;; This function is called by:
  7536 ;;		_SetUp
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540                           
  7541                           ;psect for function _I2C_Master_Init
  7542  177F                     _I2C_Master_Init:	
  7543                           
  7544                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  7545                           
  7546                           ;incstack = 0
  7547                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  7548  177F  3028               	movlw	40
  7549  1780  1283               	bcf	3,5	;RP0=0, select bank0
  7550  1781  1303               	bcf	3,6	;RP1=0, select bank0
  7551  1782  0094               	movwf	20	;volatile
  7552                           
  7553                           ;I2C.c: 19:     SSPCON2 = 0;
  7554  1783  1683               	bsf	3,5	;RP0=1, select bank1
  7555  1784  1303               	bcf	3,6	;RP1=0, select bank1
  7556  1785  0191               	clrf	17	;volatile
  7557                           
  7558                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  7559  1786  1283               	bcf	3,5	;RP0=0, select bank0
  7560  1787  1303               	bcf	3,6	;RP1=0, select bank0
  7561  1788  0826               	movf	I2C_Master_Init@c,w
  7562  1789  00AA               	movwf	??_I2C_Master_Init
  7563  178A  0827               	movf	I2C_Master_Init@c+1,w
  7564  178B  00AB               	movwf	??_I2C_Master_Init+1
  7565  178C  0828               	movf	I2C_Master_Init@c+2,w
  7566  178D  00AC               	movwf	??_I2C_Master_Init+2
  7567  178E  0829               	movf	I2C_Master_Init@c+3,w
  7568  178F  00AD               	movwf	??_I2C_Master_Init+3
  7569  1790  3002               	movlw	2
  7570  1791                     u2995:	
  7571  1791  1003               	clrc
  7572  1792  0DAA               	rlf	??_I2C_Master_Init,f
  7573  1793  0DAB               	rlf	??_I2C_Master_Init+1,f
  7574  1794  0DAC               	rlf	??_I2C_Master_Init+2,f
  7575  1795  0DAD               	rlf	??_I2C_Master_Init+3,f
  7576  1796  3EFF               	addlw	-1
  7577  1797  1D03               	skipz
  7578  1798  2F91               	goto	u2995
  7579  1799  082D               	movf	??_I2C_Master_Init+3,w
  7580  179A  00F5               	movwf	___lldiv@divisor+3
  7581  179B  082C               	movf	??_I2C_Master_Init+2,w
  7582  179C  00F4               	movwf	___lldiv@divisor+2
  7583  179D  082B               	movf	??_I2C_Master_Init+1,w
  7584  179E  00F3               	movwf	___lldiv@divisor+1
  7585  179F  082A               	movf	??_I2C_Master_Init,w
  7586  17A0  00F2               	movwf	___lldiv@divisor
  7587  17A1  3000               	movlw	0
  7588  17A2  00F9               	movwf	___lldiv@dividend+3
  7589  17A3  307A               	movlw	122
  7590  17A4  00F8               	movwf	___lldiv@dividend+2
  7591  17A5  3012               	movlw	18
  7592  17A6  00F7               	movwf	___lldiv@dividend+1
  7593  17A7  3000               	movlw	0
  7594  17A8  00F6               	movwf	___lldiv@dividend
  7595  17A9  120A  158A  211E   	fcall	___lldiv
  7596  17AC  0872               	movf	?___lldiv,w
  7597  17AD  3EFF               	addlw	255
  7598  17AE  1683               	bsf	3,5	;RP0=1, select bank1
  7599  17AF  1303               	bcf	3,6	;RP1=0, select bank1
  7600  17B0  0093               	movwf	19	;volatile
  7601                           
  7602                           ;I2C.c: 21:     SSPSTAT = 0;
  7603  17B1  0194               	clrf	20	;volatile
  7604                           
  7605                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  7606  17B2  1587               	bsf	7,3	;volatile
  7607                           
  7608                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  7609  17B3  1607               	bsf	7,4	;volatile
  7610  17B4  0008               	return
  7611  17B5                     __end_of_I2C_Master_Init:	
  7612                           
  7613                           	psect	text34
  7614  091E                     __ptext34:	
  7615 ;; *************** function ___lldiv *****************
  7616 ;; Defined at:
  7617 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;  divisor         4    2[COMMON] unsigned long 
  7620 ;;  dividend        4    6[COMMON] unsigned long 
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;  quotient        4    1[BANK0 ] unsigned long 
  7623 ;;  counter         1    5[BANK0 ] unsigned char 
  7624 ;; Return value:  Size  Location     Type
  7625 ;;                  4    2[COMMON] unsigned long 
  7626 ;; Registers used:
  7627 ;;		wreg, status,2, status,0
  7628 ;; Tracked objects:
  7629 ;;		On entry : 0/0
  7630 ;;		On exit  : 0/0
  7631 ;;		Unchanged: 0/0
  7632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7633 ;;      Params:         8       0       0       0       0
  7634 ;;      Locals:         0       5       0       0       0
  7635 ;;      Temps:          0       1       0       0       0
  7636 ;;      Totals:         8       6       0       0       0
  7637 ;;Total ram usage:       14 bytes
  7638 ;; Hardware stack levels used:    1
  7639 ;; Hardware stack levels required when called:    1
  7640 ;; This function calls:
  7641 ;;		Nothing
  7642 ;; This function is called by:
  7643 ;;		_I2C_Master_Init
  7644 ;; This function uses a non-reentrant model
  7645 ;;
  7646                           
  7647                           
  7648                           ;psect for function ___lldiv
  7649  091E                     ___lldiv:	
  7650                           
  7651                           ;incstack = 0
  7652                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7653  091E  3000               	movlw	0
  7654  091F  1283               	bcf	3,5	;RP0=0, select bank0
  7655  0920  1303               	bcf	3,6	;RP1=0, select bank0
  7656  0921  00A4               	movwf	___lldiv@quotient+3
  7657  0922  3000               	movlw	0
  7658  0923  00A3               	movwf	___lldiv@quotient+2
  7659  0924  3000               	movlw	0
  7660  0925  00A2               	movwf	___lldiv@quotient+1
  7661  0926  3000               	movlw	0
  7662  0927  00A1               	movwf	___lldiv@quotient
  7663  0928  0875               	movf	___lldiv@divisor+3,w
  7664  0929  0474               	iorwf	___lldiv@divisor+2,w
  7665  092A  0473               	iorwf	___lldiv@divisor+1,w
  7666  092B  0472               	iorwf	___lldiv@divisor,w
  7667  092C  1903               	skipnz
  7668  092D  2975               	goto	l4014
  7669  092E  01A5               	clrf	___lldiv@counter
  7670  092F  0AA5               	incf	___lldiv@counter,f
  7671  0930                     l4000:	
  7672  0930  1BF5               	btfsc	___lldiv@divisor+3,7
  7673  0931  2940               	goto	l4002
  7674  0932  3001               	movlw	1
  7675  0933  00A0               	movwf	??___lldiv
  7676  0934                     u2835:	
  7677  0934  1003               	clrc
  7678  0935  0DF2               	rlf	___lldiv@divisor,f
  7679  0936  0DF3               	rlf	___lldiv@divisor+1,f
  7680  0937  0DF4               	rlf	___lldiv@divisor+2,f
  7681  0938  0DF5               	rlf	___lldiv@divisor+3,f
  7682  0939  0BA0               	decfsz	??___lldiv,f
  7683  093A  2934               	goto	u2835
  7684  093B  3001               	movlw	1
  7685  093C  00A0               	movwf	??___lldiv
  7686  093D  0820               	movf	??___lldiv,w
  7687  093E  07A5               	addwf	___lldiv@counter,f
  7688  093F  2930               	goto	l4000
  7689  0940                     l4002:	
  7690  0940  3001               	movlw	1
  7691  0941  00A0               	movwf	??___lldiv
  7692  0942                     u2855:	
  7693  0942  1003               	clrc
  7694  0943  0DA1               	rlf	___lldiv@quotient,f
  7695  0944  0DA2               	rlf	___lldiv@quotient+1,f
  7696  0945  0DA3               	rlf	___lldiv@quotient+2,f
  7697  0946  0DA4               	rlf	___lldiv@quotient+3,f
  7698  0947  0BA0               	decfsz	??___lldiv,f
  7699  0948  2942               	goto	u2855
  7700  0949  0875               	movf	___lldiv@divisor+3,w
  7701  094A  0279               	subwf	___lldiv@dividend+3,w
  7702  094B  1D03               	skipz
  7703  094C  2957               	goto	u2865
  7704  094D  0874               	movf	___lldiv@divisor+2,w
  7705  094E  0278               	subwf	___lldiv@dividend+2,w
  7706  094F  1D03               	skipz
  7707  0950  2957               	goto	u2865
  7708  0951  0873               	movf	___lldiv@divisor+1,w
  7709  0952  0277               	subwf	___lldiv@dividend+1,w
  7710  0953  1D03               	skipz
  7711  0954  2957               	goto	u2865
  7712  0955  0872               	movf	___lldiv@divisor,w
  7713  0956  0276               	subwf	___lldiv@dividend,w
  7714  0957                     u2865:	
  7715  0957  1C03               	skipc
  7716  0958  2968               	goto	l4010
  7717  0959  0872               	movf	___lldiv@divisor,w
  7718  095A  02F6               	subwf	___lldiv@dividend,f
  7719  095B  0873               	movf	___lldiv@divisor+1,w
  7720  095C  1C03               	skipc
  7721  095D  0F73               	incfsz	___lldiv@divisor+1,w
  7722  095E  02F7               	subwf	___lldiv@dividend+1,f
  7723  095F  0874               	movf	___lldiv@divisor+2,w
  7724  0960  1C03               	skipc
  7725  0961  0F74               	incfsz	___lldiv@divisor+2,w
  7726  0962  02F8               	subwf	___lldiv@dividend+2,f
  7727  0963  0875               	movf	___lldiv@divisor+3,w
  7728  0964  1C03               	skipc
  7729  0965  0F75               	incfsz	___lldiv@divisor+3,w
  7730  0966  02F9               	subwf	___lldiv@dividend+3,f
  7731  0967  1421               	bsf	___lldiv@quotient,0
  7732  0968                     l4010:	
  7733  0968  3001               	movlw	1
  7734  0969                     u2875:	
  7735  0969  1003               	clrc
  7736  096A  0CF5               	rrf	___lldiv@divisor+3,f
  7737  096B  0CF4               	rrf	___lldiv@divisor+2,f
  7738  096C  0CF3               	rrf	___lldiv@divisor+1,f
  7739  096D  0CF2               	rrf	___lldiv@divisor,f
  7740  096E  3EFF               	addlw	-1
  7741  096F  1D03               	skipz
  7742  0970  2969               	goto	u2875
  7743  0971  3001               	movlw	1
  7744  0972  02A5               	subwf	___lldiv@counter,f
  7745  0973  1D03               	btfss	3,2
  7746  0974  2940               	goto	l4002
  7747  0975                     l4014:	
  7748  0975  0824               	movf	___lldiv@quotient+3,w
  7749  0976  00F5               	movwf	?___lldiv+3
  7750  0977  0823               	movf	___lldiv@quotient+2,w
  7751  0978  00F4               	movwf	?___lldiv+2
  7752  0979  0822               	movf	___lldiv@quotient+1,w
  7753  097A  00F3               	movwf	?___lldiv+1
  7754  097B  0821               	movf	___lldiv@quotient,w
  7755  097C  00F2               	movwf	?___lldiv
  7756  097D  0008               	return
  7757  097E                     __end_of___lldiv:	
  7758                           
  7759                           	psect	text35
  7760  1621                     __ptext35:	
  7761 ;; *************** function _ISR *****************
  7762 ;; Defined at:
  7763 ;;		line 110 in file "main_Master.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;		None
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;		None
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  1    wreg      void 
  7770 ;; Registers used:
  7771 ;;		wreg, status,2, status,0
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7777 ;;      Params:         0       0       0       0       0
  7778 ;;      Locals:         0       0       0       0       0
  7779 ;;      Temps:          2       0       0       0       0
  7780 ;;      Totals:         2       0       0       0       0
  7781 ;;Total ram usage:        2 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; This function calls:
  7784 ;;		Nothing
  7785 ;; This function is called by:
  7786 ;;		Interrupt level 1
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790                           
  7791                           ;psect for function _ISR
  7792  1621                     _ISR:	
  7793                           
  7794                           ;main_Master.c: 111:     if (INTCONbits.RBIF == 1 && INTCONbits.RBIE == 1){
  7795  1621  180B               	btfsc	11,0	;volatile
  7796  1622  1D8B               	btfss	11,3	;volatile
  7797  1623  2E2B               	goto	i1l107
  7798                           
  7799                           ;main_Master.c: 112:         INTCONbits.RBIF = 0;
  7800  1624  100B               	bcf	11,0	;volatile
  7801                           
  7802                           ;main_Master.c: 113:         if (banderaBoton == 0){
  7803  1625  087B               	movf	_banderaBoton,w
  7804  1626  1D03               	btfss	3,2
  7805  1627  2E2B               	goto	i1l107
  7806                           
  7807                           ;main_Master.c: 114:             banderaBoton = 1;
  7808  1628  01FB               	clrf	_banderaBoton
  7809  1629  0AFB               	incf	_banderaBoton,f
  7810                           
  7811                           ;main_Master.c: 115:             INTCONbits.RBIE = 0;
  7812  162A  118B               	bcf	11,3	;volatile
  7813  162B                     i1l107:	
  7814  162B  0871               	movf	??_ISR+1,w
  7815  162C  008A               	movwf	10
  7816  162D  0E70               	swapf	??_ISR^(0+4294967168),w
  7817  162E  0083               	movwf	3
  7818  162F  0EFE               	swapf	126,f
  7819  1630  0E7E               	swapf	126,w
  7820  1631  0009               	retfie
  7821  1632                     __end_of_ISR:	
  7822  007E                     btemp	set	126	;btemp
  7823  007E                     wtemp0	set	126
  7824                           
  7825                           	psect	intentry
  7826  0004                     __pintentry:	
  7827                           ;incstack = 0
  7828                           ; Regs used in _ISR: [wreg+status,2+status,0]
  7829                           
  7830  0004                     interrupt_function:	
  7831  007E                     saved_w	set	btemp
  7832  0004  00FE               	movwf	btemp
  7833  0005  0E03               	swapf	3,w
  7834  0006  00F0               	movwf	??_ISR
  7835  0007  080A               	movf	10,w
  7836  0008  00F1               	movwf	??_ISR+1
  7837  0009  160A  118A  2E21   	ljmp	_ISR


Data Sizes:
    Strings     105
    Constant    40
    Data        9
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     58      79
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Create_Char@chardata	PTR const unsigned char  size(1) Largest target is 8
		 -> arrowr_vacio(CODE[8]), gota(CODE[8]), termometro(CODE[8]), arrowr(CODE[8]), 
		 -> atilde(CODE[8]), 

    LCD_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_14(CODE[6]), STR_13(CODE[16]), STR_12(CODE[3]), STR_11(CODE[4]), 
		 -> STR_10(CODE[13]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[13]), 
		 -> STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[9]), STR_3(CODE[17]), 
		 -> STR_2(CODE[10]), STR_1(CODE[3]), 

    sp__uint_to_array	PTR unsigned int  size(1) Largest target is 6
		 -> uint_to_array@resultado(BANK0[6]), 

    obj_array	PTR unsigned int  size(1) Largest target is 6
		 -> NULL(NULL[0]), uint_to_array@resultado(BANK0[6]), 


Critical Paths under _main in COMMON

    _temp_objeto->___lwdiv
    _temp_ambiente->___lwdiv
    ___xxtofl->___lwdiv
    ___fltol->___lwdiv
    ___fladd->___lwdiv
    _pressBoton2->_LCD_Set_Cursor
    _pressBoton1->_LCD_clear
    _mostrarLCD->_LCD_Set_Cursor
    _uint_to_array->___awdiv
    _display_Uhrzeit->_LCD_Set_Cursor
    _display_Datum->_LCD_Set_Cursor
    ___awdiv->___wmul
    _LCD_Write_String->_LCD_Write_Character
    _LCD_Set_Cursor->_LCD_Cmd
    _get_Time->_BCD_a_DEC
    _BCD_a_DEC->___bmul
    _LCD_init->_LCD_Cmd
    _LCD_clear->_LCD_Cmd
    _LCD_Create_Char->_LCD_Cmd
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_temp_ambiente
    _main->_temp_objeto
    _temp_objeto->___fltol
    _temp_ambiente->___fltol
    ___fltol->___fladd
    ___fladd->___xxtofl
    _mostrarLCD->_uint_to_array
    _uint_to_array->___awdiv
    _display_Uhrzeit->___awdiv
    _display_Datum->___awdiv
    _SetUp->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   44520
                                             57 BANK0      1     1      0
                              _SetUp
                           _get_Time
                         _mostrarLCD
                        _pressBoton1
                        _pressBoton2
                      _temp_ambiente
                        _temp_objeto
 ---------------------------------------------------------------------------------
 (1) _temp_objeto                                         12    10      2    8713
                                             45 BANK0     12    10      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fladd
                            ___fltol
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _temp_ambiente                                       12    10      2    8713
                                             45 BANK0     12    10      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fladd
                            ___fltol
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 BANK0     14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     517
                                             34 BANK0     11     7      4
                            ___fladd (ARG)
                            ___lwdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2414
                                             14 BANK0     20    12      8
                            ___lwdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _pressBoton2                                          3     3      0    2307
                                              0 BANK0      3     3      0
                     _LCD_Set_Cursor
                _LCD_Write_Character
                          _LCD_clear
 ---------------------------------------------------------------------------------
 (1) _pressBoton1                                          2     2      0      22
                                              7 COMMON     2     2      0
                          _LCD_clear
 ---------------------------------------------------------------------------------
 (1) _mostrarLCD                                           4     4      0   18629
                                             23 BANK0      4     4      0
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                          _LCD_clear
                      _display_Datum
                    _display_Uhrzeit
                      _uint_to_array
 ---------------------------------------------------------------------------------
 (2) _uint_to_array                                       15    15      0    3011
                                              8 BANK0     15    15      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _display_Uhrzeit                                     11    10      1    6066
                                              8 BANK0     11    10      1
                     _LCD_Set_Cursor
                _LCD_Write_Character
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _display_Datum                                       11    10      1    6640
                                              8 BANK0     11    10      1
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1360
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    2065
                                              8 COMMON     1     1      0
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     3     3      0     574
                                              4 COMMON     3     3      0
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       5     4      1    2263
                                              5 COMMON     5     4      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _get_Time                                             1     1      0    4915
                                              0 BANK0      1     1      0
                          _BCD_a_DEC
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    3442
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2    1261
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BCD_a_DEC                                            4     4      0     212
                                              6 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SetUp                                                1     1      0    1221
                                             14 BANK0      1     1      0
                    _I2C_Master_Init
                    _LCD_Create_Char
                          _LCD_clear
                           _LCD_init
                         _OSC_config
 ---------------------------------------------------------------------------------
 (2) _OSC_config                                           4     0      4      98
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             2     2      0      22
                                              5 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            2     2      0      22
                                              5 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Create_Char                                      4     3      1     537
                                              5 COMMON     4     3      1
                            _LCD_Cmd
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Character                                  2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetUp
     _I2C_Master_Init
       ___lldiv
     _LCD_Create_Char
       _LCD_Cmd
       _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
     _LCD_init
       _LCD_Cmd
     _OSC_config
   _get_Time
     _BCD_a_DEC
       ___bmul
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _mostrarLCD
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     _LCD_Write_String
       _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
     _display_Datum
       _LCD_Set_Cursor
         _LCD_Cmd
       _LCD_Write_Character
       _LCD_Write_String
         _LCD_Write_Character
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _display_Uhrzeit
       _LCD_Set_Cursor
         _LCD_Cmd
       _LCD_Write_Character
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _uint_to_array
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _pressBoton1
     _LCD_clear
       _LCD_Cmd
   _pressBoton2
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
   _temp_ambiente
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___fladd
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___lwdiv
     ___xxtofl
       ___lwdiv (ARG)
   _temp_objeto
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___fladd
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___lwdiv
     ___xxtofl
       ___lwdiv (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3A      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5B      12        0.0%
ABS                  0      0      5B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 09 20:58:45 2020

                           pc 0002                ___bmul@product 0074       __end_of_LCD_Create_Char 16EF  
                 __CFG_CP$OFF 0000                  ___awdiv@sign 0025            __size_of_BCD_a_DEC 0016  
                          fsr 0004           ___wmul@multiplicand 0074            mostrarLCD@pantalla 003A  
                         l264 15FF                           l282 1712                           l283 1715  
                         l452 168A                           l645 0A33                           l751 03B9  
                         l745 0342                           l749 03DB                           l766 0494  
                         l787 0514                           l779 04FC                           l892 0C2E  
                         l893 0C38                           l885 0C18                           l879 0BD8  
                         _GIE 005F                  __CFG_CPD$OFF 0000                           _ISR 1621  
     __end_of_display_Uhrzeit 1000                           _dia 006C                           _mes 006A  
                         _min 006E                           _seg 0064                           fsr0 0004  
                         indf 0000                  ___awmod@sign 0078                ?_display_Datum 0028  
__size_of_LCD_Write_Character 0010               __end_of_LCD_Cmd 177F                  __CFG_LVP$OFF 0000  
                        ?_ISR 0070                _LCD_Set_Cursor 0897                  ___fltol@exp1 004C  
                        l3012 0337                          l3022 034C                          l4000 0930  
                        l3016 033A                          l4010 0968                          l4002 0940  
                        l3122 04B5                          l3114 04A6                          l3106 0486  
                        l3130 04BE                          l3140 04C9                          l3060 03C4  
                        l3052 0388                          l4014 0975                          l3062 03C6  
                        l3070 03D5                          l4032 08DA                          l3136 04C7  
                        l3128 04BC                          l3208 0C55                          l2522 08A3  
                        l4050 0906                          l4042 08E2                          l4026 08CF  
                        l3162 0510                          l4130 09EF                          l2700 0C9A  
                        l2540 16A4                          l4044 08F0                          l3412 0A67  
                        l3180 0BE7                          l2526 08AD                          l2518 0899  
                        l4054 0911                          l4230 0031                          l3406 0A5C  
                        l3502 0F18                          l3158 050C                          l3086 040A  
                        l3078 03E9                          l4150 0A1F                          l4134 09F8  
                        l3174 0BD0                          l2528 08B2                          l4320 0248  
                        l4232 0052                          l3424 0A7D                          l3088 040C  
                        l3096 041C                          l4160 0A42                          l4152 0A2F  
                        l3184 0BEB                          l2562 1634                          l4058 0919  
                        l2650 17BF                          l4314 0221                          l4242 008C  
                        l3418 0A72                          l3434 0A97                          l3442 0AAE  
                        l3194 0C2C                          l3186 0BFD                          l2804 16D9  
                        l2548 1682                          l4340 02B5                          l4332 0293  
                        l4308 020C                          l3436 0AAA                          l3196 0C1D  
                        l2566 163A                          l2662 17CC                          l2654 17C6  
                        l4326 0272                          l4342 02C4                          l3462 0E7F  
                        l2664 17DA                          l2672 17F3                          l4280 016B  
                        l4272 013B                          l4248 00BA                          l3480 0EC0  
                        l3472 0E9F                          l3464 0E81                          l2690 0C79  
                        l2682 0C5F                          l4266 0119                          l4258 00F4  
                        l2692 0C80                          l2684 0C64                          l2676 17FB  
                        l2668 17E8                          l3492 0EED                          l4356 1720  
                        l2694 0C87                          l2686 0C6B                          l3494 0EF9  
                        l2696 0C8E                          l2688 0C72                          l4296 01C5  
                        l4800 0F01                          l3488 0EE1                          l3496 0F12  
                        l2960 07D9                          l4810 0CA9                          l2698 0C93  
                        l4802 0A9F                          l2970 07FA                          l4820 0CDB  
                        l4812 0CB3                          l4804 02CC                          l4822 0CE5  
                        l4814 0CBD                          l4830 0CB8                          l4806 08BA  
                        l2966 07EF                          l2958 07CB                          l4840 0CEA  
                        l4816 0CC7                          l4832 0CC2                          l4808 0C9F  
                        l4824 0CEF                          l2992 0310                          l4818 0CD1  
                        l4834 0CCC                          l4826 0CA4                          l2994 0318  
                        l4836 0CD6                          l4828 0CAE                          l2988 030D  
                        l4838 0CE0                          STR_1 088D                          STR_2 0869  
                        STR_3 082E                          STR_4 0873                          STR_5 0890  
                        STR_6 0886                          STR_7 084F                          STR_8 0893  
                        STR_9 0895                          u2110 03A8                          u3000 0B3B  
                        u2120 03A9                          u2105 039C                          _IOCB 0096  
                        u2305 04A8                          u3025 0A01                          u2251 0447  
                        u2243 042E                          u2235 0410                          u2155 03CA  
                        u2260 045B                          u2252 0448                          u2405 04E6  
                        u2261 045C                          u2253 044D                          u2262 0461  
                        u2254 044E                          u3207 0ED8                          u2263 0462  
                        u2255 0453                          u3055 0A20                          u2256 0454  
                        u3217 0EF3                          u2505 0BF4                          u3307 09B4  
                        u1475 168B                          u3227 0F25                          u3317 09BE  
                        u1725 17CF                          u1485 1692                          u3237 0A86  
                        u3085 0A38                          u2525 0C10                          u3407 1779  
                        u3327 09CA                          u3247 0AB9                          u3167 0E12  
                        u3337 09D7                          u1825 1675                          u1745 17E0  
                        u3257 02A8                          u2545 0C25                          u3177 0D5D  
                        u3347 09E1                          u3267 0982                          u1755 17E9  
                        u3187 0E96                          u3357 1664                          u3277 0991  
                        u3197 0EB7                          u3367 161A                          u3287 099E  
                        u3377 1754                          u1785 16CB                          u3297 09A9  
                        u2585 0C40                          u2835 0934                          u3387 1760  
                        u1955 07CE                          _PEIE 005E                          u3397 176D  
                        u2925 08E5                          u2855 0942                          u1975 07DA  
                        u2865 0957                          u2945 08F1                          u1985 07E6  
                        u2875 0969                          u2955 08FD                          u1995 07F0  
                        u2965 0907                          u2995 1791                          _WPUB 0095  
                __CFG_WRT$OFF 0000             ?_LCD_Write_String 0070                          _jahr 0069  
                        _main 171B                          _gota 0806                          _hora 006D  
                        btemp 007E                 _uint_to_array 0B34         temp_ambiente@temp_LSB 0056  
       temp_ambiente@temp_MSB 0057                          start 000C            ??_LCD_Write_String 0074  
               __CFG_IESO$OFF 0000            __size_of_LCD_clear 0016             ___bmul@multiplier 0075  
                       ??_ISR 0070              ?_I2C_Master_Init 0026              ?_I2C_Master_Read 0072  
            ?_I2C_Master_Wait 0070              ?_I2C_Master_Stop 0070              __end_of_LCD_init 09E4  
               ___fltol@sign1 004B               __end_of___fladd 051F                         ?_main 0070  
             __end_of___awdiv 091E                         STR_10 085C                         STR_11 0882  
                       STR_12 088A                         STR_13 083F                         STR_14 087C  
               __CFG_WDTE$OFF 0000               __end_of___awmod 1800               __end_of___fltol 0A51  
             __end_of___lldiv 097E               ___awdiv@divisor 0020               __end_of___lwdiv 07FF  
                       i1l107 162B               ___awdiv@counter 0024                         _PORTD 0008  
                       _TRISB 0086                         _TRISD 0088                         _SSPIE 0463  
                       _SSPIF 0063                __CFG_FCMEN$OFF 0000        __end_of_LCD_Set_Cursor 08C3  
                       _SetUp 0AC0                         _ancho 0066                         _datum 006B  
                       _largo 0067                __CFG_BOREN$OFF 0000                   ?_OSC_config 0072  
                       pclath 000A             __end_of_BCD_a_DEC 1680                ?_uint_to_array 0070  
                       status 0003                         wtemp0 007E                __CFG_MCLRE$OFF 0000  
             __initialization 000F                  __end_of_main 174C                  __end_of_gota 080E  
            ?_LCD_Create_Char 0075                        ??_main 0059                     ??_LCD_Cmd 0072  
             ??_display_Datum 0029              ?_display_Uhrzeit 0028             ?_I2C_Master_Start 0070  
           ?_I2C_Master_Write 0072             __end_of_LCD_clear 166A                        ?_SetUp 0070  
             ?_LCD_Set_Cursor 0075            ??_I2C_Master_Start 0072            ??_I2C_Master_Write 0074  
                _banderaPUSH1 007A                  _banderaPUSH2 0060              ___awdiv@dividend 0022  
                      _ANSELH 0189                  _banderaBoton 007B                        _SSPADD 0093  
                      _TRISC0 0438                        _TRISC1 0439                        _TRISC3 043B  
                      _TRISC4 043C            uint_to_array@F1343 005A                        _SSPCON 0014  
                      _SSPBUF 0013              __end_of___xxtofl 0C5E   LCD_Write_Character@caracter 0073  
              __CFG_PWRTE$OFF 0000              __end_of_get_Time 06EB                        ___bmul 1632  
                   ??___fladd 0036                        ___wmul 1680                     ??___awdiv 0078  
                   ??___awmod 0076                     ??___fltol 0046                     ??___lldiv 0020  
                   ??___lwdiv 0076                        _atilde 0816                  ?_temp_objeto 004D  
                      _arrowr 0826                        _estado 0065              ___awdiv@quotient 0026  
             ___awmod@divisor 0072                        _tiempo 0068           __size_of_OSC_config 00AC  
             ___awmod@counter 0077                  ?_pressBoton1 0070                  ?_pressBoton2 0070  
                      saved_w 007E               ??_uint_to_array 0028                  ___xxtofl@arg 002A  
                ___xxtofl@exp 0029                  ___xxtofl@val 0020       __end_of__initialization 0029  
                   ?_LCD_init 0070                    ___fltol@f1 0042           ___bmul@multiplicand 0072  
              __pcstackCOMMON 0070                 __end_of_SetUp 0B34           _LCD_Write_Character 1611  
                __pidataBANK0 1608          display_Datum@columna 0028         __end_of_temp_ambiente 0DBF  
              _OPTION_REGbits 0081               _temperatura_obj 0062                       ??_SetUp 002E  
        ?_LCD_Write_Character 0070                LCD_Cmd@comando 0074                    __pbssBANK0 005A  
   LCD_Set_Cursor@corrimiento 0079                    ??_LCD_init 0075          __end_of_arrowr_vacio 0826  
                  __pmaintext 171B                       ?___bmul 0072                       ?___wmul 0072  
                  __pintentry 0004     __size_of_LCD_Write_String 0022               temp_objeto@temp 0054  
        OSC_config@frecuencia 0072           display_Uhrzeit@fila 002C                       _LCD_Cmd 174C  
                   ?___xxtofl 0020         ??_LCD_Write_Character 0072                     ?_get_Time 0070  
                     _SSPCON2 0091                       _SSPSTAT 0094                    __stringtab 0800  
                ??_OSC_config 0076                     _BCD_a_DEC 166A        uint_to_array@resultado 0030  
             __size_of___bmul 0011                       ___fladd 02F0                       ___awdiv 08C3  
                     ___awmod 17B5                       ___fltol 09E4                       ___lldiv 091E  
             __size_of___wmul 0021             display_Datum@fila 002C                       ___lwdiv 07C3  
            ??_LCD_Set_Cursor 0076                       __ptext1 0DBF                       __ptext2 0D0A  
                     __ptext3 0BB9                       __ptext4 07C3                       __ptext5 09E4  
                     __ptext6 02F0                       __ptext7 0E74                       __ptext8 0A51  
                     __ptext9 002D            __end_of_OSC_config 0D0A          __size_of_temp_objeto 00B5  
                __size_of_ISR 0011           uint_to_array@numero 0036                    ??___xxtofl 0024  
            ___awmod@dividend 0074      __size_of_I2C_Master_Init 0036      __size_of_I2C_Master_Read 002C  
    __size_of_I2C_Master_Wait 0009      __size_of_I2C_Master_Stop 0007          __size_of_pressBoton1 006F  
        __size_of_pressBoton2 00BA                    ??_get_Time 0020                     _LCD_clear 1654  
        end_of_initialization 0029     __size_of_I2C_Master_Start 0007     __size_of_I2C_Master_Write 0008  
             ___lldiv@divisor 0072                    ?_BCD_a_DEC 0070               ___lldiv@counter 0025  
            I2C_Master_Init@c 0026              I2C_Master_Read@a 0072                    _mostrarLCD 002D  
                   _PORTBbits 0006                     _PORTCbits 0007                    _termometro 080E  
                 ___fladd@grs 0041                 ___xxtofl@sign 0028      __size_of_LCD_Create_Char 002C  
                   _TRISCbits 0087         __end_of_display_Datum 07C3                    ?_LCD_clear 0070  
           LCD_Write_String@a 0076             LCD_Write_String@n 0074      __size_of_display_Uhrzeit 00D2  
           __size_of_LCD_init 0066                __end_of___bmul 1643         LCD_Set_Cursor@columna 0075  
              __end_of___wmul 16A1              _LCD_Write_String 16A1                __end_of_atilde 081E  
              __end_of_arrowr 082E                  _arrowr_vacio 081E           start_initialization 000F  
                 __end_of_ISR 1632           temp_objeto@temp_LSB 0056           temp_objeto@temp_MSB 0057  
           ??_I2C_Master_Init 002A             ??_I2C_Master_Read 0074             ??_I2C_Master_Wait 0072  
       __end_of_uint_to_array 0BB9             ??_I2C_Master_Stop 0072      __CFG_FOSC$INTRC_NOCLKOUT 0000  
                 ??_BCD_a_DEC 0076                      ??___bmul 0073       LCD_Create_Char@chardata 0075  
                    ??___wmul 0076                    init_fetch0 1643                   ?_mostrarLCD 0070  
                 __pdataBANK0 0066               BCD_a_DEC@numBCD 0079                     ___fladd@a 0032  
                   ___fladd@b 002E                      ?_LCD_Cmd 0070                   __pbssCOMMON 007A  
                   ___latbits 0002                 __pcstackBANK0 0020           display_Datum@jahr_d 0032  
         display_Datum@jahr_u 0031             __size_of___xxtofl 00A5                   ??_LCD_clear 0075  
           __size_of_get_Time 01CC             ??_LCD_Create_Char 0076              _I2C_Master_Start 15E9  
            _I2C_Master_Write 15F7        __size_of_temp_ambiente 00B5              ___lwdiv@dividend 0074  
       uint_to_array@centenas 002F             ??_display_Uhrzeit 0029                      ?___fladd 002E  
                    ?___awdiv 0020                      ?___awmod 0072                      ?___fltol 0042  
                    ?___lldiv 0072                      ?___lwdiv 0072                     __pstrings 0800  
 __end_of_LCD_Write_Character 1621             temp_ambiente@temp 0054                     _obj_array 0061  
              __size_of_SetUp 0074              ___lwdiv@quotient 0077          display_Uhrzeit@Uhr_d 0032  
        display_Uhrzeit@Uhr_u 0031           __size_of_mostrarLCD 02C3          display_Uhrzeit@min_d 0030  
        display_Uhrzeit@min_u 002F          display_Uhrzeit@seg_d 002E          display_Uhrzeit@seg_u 002D  
           interrupt_function 0004                ___wmul@product 0076                      _LCD_init 097E  
            LCD_Create_Char@n 0078                 ??_temp_objeto 004F                   __stringbase 0805  
           ___wmul@multiplier 0072                 ??_pressBoton1 0077                 ??_pressBoton2 0020  
               _temp_ambiente 0D0A              __size_of_LCD_Cmd 0033           I2C_Master_Read@temp 0076  
    __end_of_LCD_Write_String 16C3        LCD_Create_Char@charnum 0077              __size_of___fladd 022F  
            __size_of___awdiv 005B              __size_of___awmod 004B              __size_of___fltol 006D  
            __size_of___lldiv 0060              __size_of___lwdiv 003C            display_Datum@dia_d 002E  
          display_Datum@dia_u 002D            __end_of__stringtab 0806            display_Datum@mes_d 0030  
          display_Datum@mes_u 002F                ?_temp_ambiente 004D               _I2C_Master_Init 177F  
             _I2C_Master_Read 16EF                      ___xxtofl 0BB9           __end_of_temp_objeto 0E74  
        uint_to_array@decenas 002E               _I2C_Master_Wait 15FF               _I2C_Master_Stop 15F0  
             ___lwdiv@divisor 0072               ___lwdiv@counter 0079                      __ptext10 0B34  
                    __ptext11 1680                      __ptext20 15F0                      __ptext12 0F2E  
                    __ptext21 15E9                      __ptext13 06EB                      __ptext30 16C3  
                    __ptext22 16EF                      __ptext14 17B5                      __ptext31 1611  
                    __ptext23 15FF                      __ptext15 08C3                      __ptext32 174C  
                    __ptext24 166A                      __ptext16 16A1                      __ptext33 177F  
                    __ptext25 1632                      __ptext17 0897                      __ptext34 091E  
                    __ptext26 0AC0                      __ptext18 051F                      __ptext35 1621  
                    __ptext27 0C5E                      __ptext19 15F7                      __ptext28 097E  
                    __ptext29 1654                      _get_Time 051F             __CFG_BOR4V$BOR40V 0000  
     __size_of_LCD_Set_Cursor 002C           __end_of_pressBoton1 0AC0           __end_of_pressBoton2 0F2E  
               __size_of_main 0031        display_Uhrzeit@columna 0028        __size_of_display_Datum 00D8  
                ??_mostrarLCD 0037           LCD_Set_Cursor@linea 0078               _LCD_Create_Char 16C3  
    __end_of_I2C_Master_Start 15F0      __end_of_I2C_Master_Write 15FF                    _INTCONbits 000B  
                    init_ram0 1647               _display_Uhrzeit 0F2E                      intlevel1 0000  
          __end_of_mostrarLCD 02F0              ___lldiv@dividend 0076                     stringcode 0800  
                  _OSCCONbits 008F            __end_of_termometro 0816       __end_of_I2C_Master_Init 17B5  
     __end_of_I2C_Master_Read 171B       __end_of_I2C_Master_Wait 1608                   _temp_objeto 0DBF  
     __end_of_I2C_Master_Stop 15F7               ??_temp_ambiente 004F                   _temperatura 0063  
      __size_of_uint_to_array 0085              ___lldiv@quotient 0021             I2C_Master_Write@d 0072  
                 _pressBoton1 0A51                   _pressBoton2 0E74                      stringdir 0800  
                    stringtab 0800                   _SSPCON2bits 0091                 _display_Datum 06EB  
               ___fladd@signs 003E                    _OSC_config 0C5E                  ___fladd@aexp 003F  
                ___fladd@bexp 0040  

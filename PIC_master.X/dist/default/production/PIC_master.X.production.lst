

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 09 16:20:56 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.05
    56                           ; Generated 20/12/2018 GMT
    57                           ; 
    58                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  0088                     	;# 
   129  0089                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008F                     	;# 
   134  0090                     	;# 
   135  0091                     	;# 
   136  0092                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  0105                     	;# 
   153  0107                     	;# 
   154  0108                     	;# 
   155  0109                     	;# 
   156  010C                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0185                     	;# 
   162  0187                     	;# 
   163  0188                     	;# 
   164  0189                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0000                     	;# 
   168  0001                     	;# 
   169  0002                     	;# 
   170  0003                     	;# 
   171  0004                     	;# 
   172  0005                     	;# 
   173  0006                     	;# 
   174  0007                     	;# 
   175  0008                     	;# 
   176  0009                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000D                     	;# 
   181  000E                     	;# 
   182  000E                     	;# 
   183  000F                     	;# 
   184  0010                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0013                     	;# 
   188  0014                     	;# 
   189  0015                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  0081                     	;# 
   203  0085                     	;# 
   204  0086                     	;# 
   205  0087                     	;# 
   206  0088                     	;# 
   207  0089                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  0105                     	;# 
   231  0107                     	;# 
   232  0108                     	;# 
   233  0109                     	;# 
   234  010C                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  0185                     	;# 
   240  0187                     	;# 
   241  0188                     	;# 
   242  0189                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  008F                     	;# 
   290  0090                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009A                     	;# 
   303  009B                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  0105                     	;# 
   309  0107                     	;# 
   310  0108                     	;# 
   311  0109                     	;# 
   312  010C                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010E                     	;# 
   316  010F                     	;# 
   317  0185                     	;# 
   318  0187                     	;# 
   319  0188                     	;# 
   320  0189                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323  0000                     	;# 
   324  0001                     	;# 
   325  0002                     	;# 
   326  0003                     	;# 
   327  0004                     	;# 
   328  0005                     	;# 
   329  0006                     	;# 
   330  0007                     	;# 
   331  0008                     	;# 
   332  0009                     	;# 
   333  000A                     	;# 
   334  000B                     	;# 
   335  000C                     	;# 
   336  000D                     	;# 
   337  000E                     	;# 
   338  000E                     	;# 
   339  000F                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0014                     	;# 
   345  0015                     	;# 
   346  0015                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001B                     	;# 
   354  001C                     	;# 
   355  001D                     	;# 
   356  001E                     	;# 
   357  001F                     	;# 
   358  0081                     	;# 
   359  0085                     	;# 
   360  0086                     	;# 
   361  0087                     	;# 
   362  0088                     	;# 
   363  0089                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  008F                     	;# 
   368  0090                     	;# 
   369  0091                     	;# 
   370  0092                     	;# 
   371  0093                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0094                     	;# 
   375  0095                     	;# 
   376  0096                     	;# 
   377  0097                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009A                     	;# 
   381  009B                     	;# 
   382  009C                     	;# 
   383  009D                     	;# 
   384  009E                     	;# 
   385  009F                     	;# 
   386  0105                     	;# 
   387  0107                     	;# 
   388  0108                     	;# 
   389  0109                     	;# 
   390  010C                     	;# 
   391  010C                     	;# 
   392  010D                     	;# 
   393  010E                     	;# 
   394  010F                     	;# 
   395  0185                     	;# 
   396  0187                     	;# 
   397  0188                     	;# 
   398  0189                     	;# 
   399  018C                     	;# 
   400  018D                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  000E                     	;# 
   416  000E                     	;# 
   417  000F                     	;# 
   418  0010                     	;# 
   419  0011                     	;# 
   420  0012                     	;# 
   421  0013                     	;# 
   422  0014                     	;# 
   423  0015                     	;# 
   424  0015                     	;# 
   425  0016                     	;# 
   426  0017                     	;# 
   427  0018                     	;# 
   428  0019                     	;# 
   429  001A                     	;# 
   430  001B                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  001D                     	;# 
   434  001E                     	;# 
   435  001F                     	;# 
   436  0081                     	;# 
   437  0085                     	;# 
   438  0086                     	;# 
   439  0087                     	;# 
   440  0088                     	;# 
   441  0089                     	;# 
   442  008C                     	;# 
   443  008D                     	;# 
   444  008E                     	;# 
   445  008F                     	;# 
   446  0090                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0094                     	;# 
   453  0095                     	;# 
   454  0096                     	;# 
   455  0097                     	;# 
   456  0098                     	;# 
   457  0099                     	;# 
   458  009A                     	;# 
   459  009B                     	;# 
   460  009C                     	;# 
   461  009D                     	;# 
   462  009E                     	;# 
   463  009F                     	;# 
   464  0105                     	;# 
   465  0107                     	;# 
   466  0108                     	;# 
   467  0109                     	;# 
   468  010C                     	;# 
   469  010C                     	;# 
   470  010D                     	;# 
   471  010E                     	;# 
   472  010F                     	;# 
   473  0185                     	;# 
   474  0187                     	;# 
   475  0188                     	;# 
   476  0189                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479  0000                     	;# 
   480  0001                     	;# 
   481  0002                     	;# 
   482  0003                     	;# 
   483  0004                     	;# 
   484  0005                     	;# 
   485  0006                     	;# 
   486  0007                     	;# 
   487  0008                     	;# 
   488  0009                     	;# 
   489  000A                     	;# 
   490  000B                     	;# 
   491  000C                     	;# 
   492  000D                     	;# 
   493  000E                     	;# 
   494  000E                     	;# 
   495  000F                     	;# 
   496  0010                     	;# 
   497  0011                     	;# 
   498  0012                     	;# 
   499  0013                     	;# 
   500  0014                     	;# 
   501  0015                     	;# 
   502  0015                     	;# 
   503  0016                     	;# 
   504  0017                     	;# 
   505  0018                     	;# 
   506  0019                     	;# 
   507  001A                     	;# 
   508  001B                     	;# 
   509  001B                     	;# 
   510  001C                     	;# 
   511  001D                     	;# 
   512  001E                     	;# 
   513  001F                     	;# 
   514  0081                     	;# 
   515  0085                     	;# 
   516  0086                     	;# 
   517  0087                     	;# 
   518  0088                     	;# 
   519  0089                     	;# 
   520  008C                     	;# 
   521  008D                     	;# 
   522  008E                     	;# 
   523  008F                     	;# 
   524  0090                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0093                     	;# 
   529  0093                     	;# 
   530  0094                     	;# 
   531  0095                     	;# 
   532  0096                     	;# 
   533  0097                     	;# 
   534  0098                     	;# 
   535  0099                     	;# 
   536  009A                     	;# 
   537  009B                     	;# 
   538  009C                     	;# 
   539  009D                     	;# 
   540  009E                     	;# 
   541  009F                     	;# 
   542  0105                     	;# 
   543  0107                     	;# 
   544  0108                     	;# 
   545  0109                     	;# 
   546  010C                     	;# 
   547  010C                     	;# 
   548  010D                     	;# 
   549  010E                     	;# 
   550  010F                     	;# 
   551  0185                     	;# 
   552  0187                     	;# 
   553  0188                     	;# 
   554  0189                     	;# 
   555  018C                     	;# 
   556  018D                     	;# 
   557                           
   558                           	psect	idataBANK1
   559  1158                     __pidataBANK1:	
   560                           
   561                           ;initializer for _ancho
   562  1158  3401               	retlw	1
   563                           
   564                           ;initializer for _largo
   565  1159  3401               	retlw	1
   566                           
   567                           ;initializer for _tiempo
   568  115A  3405               	retlw	5
   569                           
   570                           ;initializer for _jahr
   571  115B  3414               	retlw	20
   572                           
   573                           ;initializer for _mes
   574  115C  3403               	retlw	3
   575                           
   576                           ;initializer for _datum
   577  115D  3406               	retlw	6
   578                           
   579                           ;initializer for _dia
   580  115E  3405               	retlw	5
   581                           
   582                           ;initializer for _hora
   583  115F  3410               	retlw	16
   584                           
   585                           ;initializer for _min
   586  1160  3415               	retlw	21
   587                           
   588                           	psect	strings
   589  1000                     __pstrings:	
   590  1000                     stringtab:	
   591  1000                     __stringtab:	
   592  1000                     stringcode:	
   593                           ;	String table - string pointers are 1 byte each
   594                           
   595  1000                     stringdir:	
   596  1000  3010               	movlw	high stringdir
   597  1001  008A               	movwf	10
   598  1002  0804               	movf	4,w
   599  1003  0A84               	incf	4,f
   600  1004  0782               	addwf	2,f
   601  1005                     __stringbase:	
   602  1005  3400               	retlw	0
   603  1006                     __end_of__stringtab:	
   604  1006                     _gota:	
   605  1006  3404               	retlw	4
   606  1007  340A               	retlw	10
   607  1008  340A               	retlw	10
   608  1009  3411               	retlw	17
   609  100A  3411               	retlw	17
   610  100B  3411               	retlw	17
   611  100C  340E               	retlw	14
   612  100D  3400               	retlw	0
   613  100E                     __end_of_gota:	
   614  100E                     _termometro:	
   615  100E  3404               	retlw	4
   616  100F  340A               	retlw	10
   617  1010  340A               	retlw	10
   618  1011  340E               	retlw	14
   619  1012  340E               	retlw	14
   620  1013  341F               	retlw	31
   621  1014  341F               	retlw	31
   622  1015  340E               	retlw	14
   623  1016                     __end_of_termometro:	
   624  1016                     _atilde:	
   625  1016  3402               	retlw	2
   626  1017  3404               	retlw	4
   627  1018  3400               	retlw	0
   628  1019  340E               	retlw	14
   629  101A  3401               	retlw	1
   630  101B  340F               	retlw	15
   631  101C  3411               	retlw	17
   632  101D  340F               	retlw	15
   633  101E                     __end_of_atilde:	
   634  101E                     _arrowr_vacio:	
   635  101E  3400               	retlw	0
   636  101F  3408               	retlw	8
   637  1020  340C               	retlw	12
   638  1021  340A               	retlw	10
   639  1022  3409               	retlw	9
   640  1023  340A               	retlw	10
   641  1024  340C               	retlw	12
   642  1025  3408               	retlw	8
   643  1026                     __end_of_arrowr_vacio:	
   644  1026                     _arrowr:	
   645  1026  3400               	retlw	0
   646  1027  3408               	retlw	8
   647  1028  340C               	retlw	12
   648  1029  340E               	retlw	14
   649  102A  340F               	retlw	15
   650  102B  340E               	retlw	14
   651  102C  340C               	retlw	12
   652  102D  3408               	retlw	8
   653  102E                     __end_of_arrowr:	
   654  0008                     _PORTD	set	8
   655  0007                     _PORTCbits	set	7
   656  0013                     _SSPBUF	set	19
   657  0014                     _SSPCON	set	20
   658  0006                     _PORTBbits	set	6
   659  000B                     _INTCONbits	set	11
   660  0063                     _SSPIF	set	99
   661  005E                     _PEIE	set	94
   662  005F                     _GIE	set	95
   663  0091                     _SSPCON2bits	set	145
   664  0087                     _TRISCbits	set	135
   665  0094                     _SSPSTAT	set	148
   666  0093                     _SSPADD	set	147
   667  0091                     _SSPCON2	set	145
   668  008F                     _OSCCONbits	set	143
   669  0088                     _TRISD	set	136
   670  0096                     _IOCB	set	150
   671  0081                     _OPTION_REGbits	set	129
   672  0095                     _WPUB	set	149
   673  0086                     _TRISB	set	134
   674  0463                     _SSPIE	set	1123
   675  043C                     _TRISC4	set	1084
   676  043B                     _TRISC3	set	1083
   677  0439                     _TRISC1	set	1081
   678  0438                     _TRISC0	set	1080
   679  0189                     _ANSELH	set	393
   680  102E                     STR_3:	
   681  102E  3454               	retlw	84	;'T'
   682  102F  3465               	retlw	101	;'e'
   683  1030  346D               	retlw	109	;'m'
   684  1031  3470               	retlw	112	;'p'
   685  1032  342E               	retlw	46	;'.'
   686  1033  3420               	retlw	32	;' '
   687  1034  3464               	retlw	100	;'d'
   688  1035  3465               	retlw	101	;'e'
   689  1036  346C               	retlw	108	;'l'
   690  1037  3420               	retlw	32	;' '
   691  1038  3453               	retlw	83	;'S'
   692  1039  3475               	retlw	117	;'u'
   693  103A  3465               	retlw	101	;'e'
   694  103B  346C               	retlw	108	;'l'
   695  103C  346F               	retlw	111	;'o'
   696  103D  343A               	retlw	58	;':'
   697  103E  3400               	retlw	0
   698  103F                     STR_13:	
   699  103F  3456               	retlw	86	;'V'
   700  1040  3461               	retlw	97	;'a'
   701  1041  346D               	retlw	109	;'m'
   702  1042  346F               	retlw	111	;'o'
   703  1043  346E               	retlw	110	;'n'
   704  1044  346F               	retlw	111	;'o'
   705  1045  3473               	retlw	115	;'s'
   706  1046  3420               	retlw	32	;' '
   707  1047  3450               	retlw	80	;'P'
   708  1048  3465               	retlw	101	;'e'
   709  1049  3472               	retlw	114	;'r'
   710  104A  3472               	retlw	114	;'r'
   711  104B  346F               	retlw	111	;'o'
   712  104C  3473               	retlw	115	;'s'
   713  104D  3421               	retlw	33	;'!'
   714  104E  3400               	retlw	0
   715  104F                     STR_7:	
   716  104F  3473               	retlw	115	;'s'
   717  1050  343A               	retlw	58	;':'
   718  1051  3420               	retlw	32	;' '
   719  1052  347C               	retlw	124	;'|'
   720  1053  3420               	retlw	32	;' '
   721  1054  3446               	retlw	70	;'F'
   722  1055  3472               	retlw	114	;'r'
   723  1056  3465               	retlw	101	;'e'
   724  1057  346E               	retlw	110	;'n'
   725  1058  3474               	retlw	116	;'t'
   726  1059  3465               	retlw	101	;'e'
   727  105A  343A               	retlw	58	;':'
   728  105B  3400               	retlw	0
   729  105C                     STR_10:	
   730  105C  3454               	retlw	84	;'T'
   731  105D  346F               	retlw	111	;'o'
   732  105E  346D               	retlw	109	;'m'
   733  105F  3461               	retlw	97	;'a'
   734  1060  3472               	retlw	114	;'r'
   735  1061  3420               	retlw	32	;' '
   736  1062  3464               	retlw	100	;'d'
   737  1063  3461               	retlw	97	;'a'
   738  1064  3474               	retlw	116	;'t'
   739  1065  346F               	retlw	111	;'o'
   740  1066  3473               	retlw	115	;'s'
   741  1067  343A               	retlw	58	;':'
   742  1068  3400               	retlw	0
   743  1069                     STR_2:	
   744  1069  3441               	retlw	65	;'A'
   745  106A  346D               	retlw	109	;'m'
   746  106B  3462               	retlw	98	;'b'
   747  106C  3469               	retlw	105	;'i'
   748  106D  3465               	retlw	101	;'e'
   749  106E  346E               	retlw	110	;'n'
   750  106F  3474               	retlw	116	;'t'
   751  1070  3465               	retlw	101	;'e'
   752  1071  343A               	retlw	58	;':'
   753  1072  3400               	retlw	0
   754  1073                     STR_4:	
   755  1073  3448               	retlw	72	;'H'
   756  1074  3475               	retlw	117	;'u'
   757  1075  346D               	retlw	109	;'m'
   758  1076  3465               	retlw	101	;'e'
   759  1077  3464               	retlw	100	;'d'
   760  1078  3461               	retlw	97	;'a'
   761  1079  3464               	retlw	100	;'d'
   762  107A  343A               	retlw	58	;':'
   763  107B  3400               	retlw	0
   764  107C                     STR_14:	
   765  107C  3445               	retlw	69	;'E'
   766  107D  3452               	retlw	82	;'R'
   767  107E  3452               	retlw	82	;'R'
   768  107F  344F               	retlw	79	;'O'
   769  1080  3452               	retlw	82	;'R'
   770  1081  3400               	retlw	0
   771  1082                     STR_11:	
   772  1082  346D               	retlw	109	;'m'
   773  1083  3469               	retlw	105	;'i'
   774  1084  346E               	retlw	110	;'n'
   775  1085  3400               	retlw	0
   776  1086                     STR_6:	
   777  1086  3441               	retlw	65	;'A'
   778  1087  3474               	retlw	116	;'t'
   779  1088  3472               	retlw	114	;'r'
   780  1089  3400               	retlw	0
   781  108A                     STR_12:	
   782  108A  3478               	retlw	120	;'x'
   783  108B  3420               	retlw	32	;' '
   784  108C  3400               	retlw	0
   785  108D                     STR_1:	
   786  108D  3432               	retlw	50	;'2'
   787  108E  3430               	retlw	48	;'0'
   788  108F  3400               	retlw	0
   789  1090                     STR_5:	
   790  1090  3438               	retlw	56	;'8'
   791  1091  3430               	retlw	48	;'0'
   792  1092  3400               	retlw	0
   793  1093                     STR_8:	
   794  1093  3433               	retlw	51	;'3'
   795  1094  3400               	retlw	0
   796  1095                     STR_9:	
   797  1095  3434               	retlw	52	;'4'
   798  1096  3400               	retlw	0
   799                           
   800                           ; #config settings
   801  0000                     
   802                           	psect	cinit
   803  000F                     start_initialization:	
   804  000F                     __initialization:	
   805                           
   806                           ; Initialize objects allocated to BANK1
   807  000F  1383               	bcf	3,7	;select IRP bank0
   808  0010  30C9               	movlw	low (__pdataBANK1+9)
   809  0011  00FD               	movwf	btemp+-1
   810  0012  3011               	movlw	high __pidataBANK1
   811  0013  00FE               	movwf	btemp
   812  0014  3058               	movlw	low __pidataBANK1
   813  0015  00FF               	movwf	btemp+1
   814  0016  30C0               	movlw	low __pdataBANK1
   815  0017  0084               	movwf	4
   816  0018  160A  118A  2186   	fcall	init_ram0
   817                           
   818                           ; Clear objects allocated to BANK1
   819  001B  1683               	bsf	3,5	;RP0=1, select bank1
   820  001C  1303               	bcf	3,6	;RP1=0, select bank1
   821  001D  01B4               	clrf	__pbssBANK1& (0+127)
   822  001E  01B5               	clrf	(__pbssBANK1+1)& (0+127)
   823  001F  01B6               	clrf	(__pbssBANK1+2)& (0+127)
   824  0020  01B7               	clrf	(__pbssBANK1+3)& (0+127)
   825  0021  01B8               	clrf	(__pbssBANK1+4)& (0+127)
   826  0022  01B9               	clrf	(__pbssBANK1+5)& (0+127)
   827  0023  01BA               	clrf	(__pbssBANK1+6)& (0+127)
   828  0024  01BB               	clrf	(__pbssBANK1+7)& (0+127)
   829  0025  01BC               	clrf	(__pbssBANK1+8)& (0+127)
   830  0026  01BD               	clrf	(__pbssBANK1+9)& (0+127)
   831  0027  01BE               	clrf	(__pbssBANK1+10)& (0+127)
   832  0028  01BF               	clrf	(__pbssBANK1+11)& (0+127)
   833                           
   834                           ; Clear objects allocated to COMMON
   835  0029  01FA               	clrf	__pbssCOMMON& (0+127)
   836  002A  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   837  002B                     end_of_initialization:	
   838                           ;End of C runtime variable initialization code
   839                           
   840  002B                     __end_of__initialization:	
   841  002B  0183               	clrf	3
   842  002C  160A  118A  2A99   	ljmp	_main	;jump to C main() function
   843                           
   844                           	psect	bssCOMMON
   845  007A                     __pbssCOMMON:	
   846  007A                     _obj_array:	
   847  007A                     	ds	1
   848  007B                     _seg:	
   849  007B                     	ds	1
   850                           
   851                           	psect	bssBANK1
   852  00B4                     __pbssBANK1:	
   853  00B4                     uint_to_array@F1343:	
   854  00B4                     	ds	6
   855  00BA                     _banderaPUSH2:	
   856  00BA                     	ds	1
   857  00BB                     _banderaPUSH1:	
   858  00BB                     	ds	1
   859  00BC                     _banderaBoton:	
   860  00BC                     	ds	1
   861  00BD                     _temperatura_obj:	
   862  00BD                     	ds	1
   863  00BE                     _temperatura:	
   864  00BE                     	ds	1
   865  00BF                     _estado:	
   866  00BF                     	ds	1
   867                           
   868                           	psect	dataBANK1
   869  00C0                     __pdataBANK1:	
   870  00C0                     _ancho:	
   871  00C0                     	ds	1
   872  00C1                     _largo:	
   873  00C1                     	ds	1
   874  00C2                     _tiempo:	
   875  00C2                     	ds	1
   876  00C3                     _jahr:	
   877  00C3                     	ds	1
   878  00C4                     _mes:	
   879  00C4                     	ds	1
   880  00C5                     _datum:	
   881  00C5                     	ds	1
   882  00C6                     _dia:	
   883  00C6                     	ds	1
   884  00C7                     _hora:	
   885  00C7                     	ds	1
   886  00C8                     _min:	
   887  00C8                     	ds	1
   888                           
   889                           	psect	inittext
   890  1182                     init_fetch0:	
   891                           ;	Called with low address in FSR and high address in W
   892                           
   893  1182  087E               	movf	126,w
   894  1183  008A               	movwf	10
   895  1184  087F               	movf	127,w
   896  1185  0082               	movwf	2
   897  1186                     init_ram0:	
   898                           ;Called with:
   899                           ;	high address of idata address in btemp 
   900                           ;	low address of idata address in btemp+1 
   901                           ;	low address of data in FSR
   902                           ;	high address + 1 of data in btemp-1
   903                           
   904  1186  2182  160A  118A   	fcall	init_fetch0
   905  1189  0080               	movwf	0
   906  118A  0A84               	incf	4,f
   907  118B  0804               	movf	4,w
   908  118C  067D               	xorwf	125,w
   909  118D  1903               	btfsc	3,2
   910  118E  3400               	retlw	0
   911  118F  0AFF               	incf	127,f
   912  1190  1903               	btfsc	3,2
   913  1191  0AFE               	incf	126,f
   914  1192  2986               	goto	init_ram0
   915                           
   916                           	psect	cstackBANK1
   917  00A0                     __pcstackBANK1:	
   918  00A0                     ?___fltol:	
   919  00A0                     ___fltol@f1:	
   920                           ; 4 bytes @ 0x0
   921                           
   922                           
   923                           ; 4 bytes @ 0x0
   924  00A0                     	ds	4
   925  00A4                     ??___fltol:	
   926                           
   927                           ; 1 bytes @ 0x4
   928  00A4                     	ds	5
   929  00A9                     ?_temp_ambiente:	
   930  00A9                     ?_temp_objeto:	
   931                           ; 2 bytes @ 0x9
   932                           
   933                           
   934                           ; 2 bytes @ 0x9
   935  00A9                     	ds	2
   936  00AB                     ??_temp_ambiente:	
   937  00AB                     ??_temp_objeto:	
   938                           ; 1 bytes @ 0xB
   939                           
   940                           
   941                           ; 1 bytes @ 0xB
   942  00AB                     	ds	3
   943  00AE                     temp_objeto@temp:	
   944  00AE                     temp_ambiente@temp:	
   945                           ; 2 bytes @ 0xE
   946                           
   947                           
   948                           ; 2 bytes @ 0xE
   949  00AE                     	ds	2
   950  00B0                     temp_objeto@temp_LSB:	
   951  00B0                     temp_ambiente@temp_LSB:	
   952                           ; 1 bytes @ 0x10
   953                           
   954                           
   955                           ; 1 bytes @ 0x10
   956  00B0                     	ds	1
   957  00B1                     temp_objeto@temp_MSB:	
   958  00B1                     temp_ambiente@temp_MSB:	
   959                           ; 2 bytes @ 0x11
   960                           
   961                           
   962                           ; 2 bytes @ 0x11
   963  00B1                     	ds	2
   964  00B3                     ??_main:	
   965                           
   966                           ; 1 bytes @ 0x13
   967  00B3                     	ds	1
   968                           
   969                           	psect	cstackCOMMON
   970  0070                     __pcstackCOMMON:	
   971  0070                     ?_SetUp:	
   972  0070                     ?_get_Time:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0070                     ?_mostrarLCD:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0070                     ?_pressBoton1:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0070                     ?_pressBoton2:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0070                     ?_LCD_init:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0070                     ?_LCD_clear:	
   988                           ; 1 bytes @ 0x0
   989                           
   990  0070                     ?_LCD_Write_Character:	
   991                           ; 1 bytes @ 0x0
   992                           
   993  0070                     ?_LCD_Write_String:	
   994                           ; 1 bytes @ 0x0
   995                           
   996  0070                     ?_uint_to_array:	
   997                           ; 1 bytes @ 0x0
   998                           
   999  0070                     ?_I2C_Master_Start:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002  0070                     ?_I2C_Master_Stop:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005  0070                     ?_ISR:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008  0070                     ??_ISR:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011  0070                     ?_main:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014  0070                     ?_BCD_a_DEC:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017  0070                     ?_I2C_Master_Wait:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020  0070                     ?_LCD_Cmd:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023                           
  1024                           ; 1 bytes @ 0x0
  1025  0070                     	ds	2
  1026  0072                     ?_OSC_config:	
  1027  0072                     ??_LCD_Write_Character:	
  1028                           ; 1 bytes @ 0x2
  1029                           
  1030  0072                     ??_I2C_Master_Start:	
  1031                           ; 1 bytes @ 0x2
  1032                           
  1033  0072                     ?_I2C_Master_Write:	
  1034                           ; 1 bytes @ 0x2
  1035                           
  1036  0072                     ??_I2C_Master_Stop:	
  1037                           ; 1 bytes @ 0x2
  1038                           
  1039  0072                     ??_I2C_Master_Wait:	
  1040                           ; 1 bytes @ 0x2
  1041                           
  1042  0072                     ??_LCD_Cmd:	
  1043                           ; 1 bytes @ 0x2
  1044                           
  1045  0072                     ?___bmul:	
  1046                           ; 1 bytes @ 0x2
  1047                           
  1048  0072                     ?_I2C_Master_Read:	
  1049                           ; 1 bytes @ 0x2
  1050                           
  1051  0072                     ?__Umul8_16:	
  1052                           ; 2 bytes @ 0x2
  1053                           
  1054  0072                     ?___wmul:	
  1055                           ; 2 bytes @ 0x2
  1056                           
  1057  0072                     ?___awmod:	
  1058                           ; 2 bytes @ 0x2
  1059                           
  1060  0072                     ?___lldiv:	
  1061                           ; 2 bytes @ 0x2
  1062                           
  1063  0072                     ?___xxtofl:	
  1064                           ; 4 bytes @ 0x2
  1065                           
  1066  0072                     ___bmul@multiplicand:	
  1067                           ; 4 bytes @ 0x2
  1068                           
  1069  0072                     __Umul8_16@multiplicand:	
  1070                           ; 1 bytes @ 0x2
  1071                           
  1072  0072                     I2C_Master_Write@d:	
  1073                           ; 1 bytes @ 0x2
  1074                           
  1075  0072                     I2C_Master_Read@a:	
  1076                           ; 2 bytes @ 0x2
  1077                           
  1078  0072                     ___wmul@multiplier:	
  1079                           ; 2 bytes @ 0x2
  1080                           
  1081  0072                     ___awmod@divisor:	
  1082                           ; 2 bytes @ 0x2
  1083                           
  1084  0072                     OSC_config@frecuencia:	
  1085                           ; 2 bytes @ 0x2
  1086                           
  1087  0072                     ___lldiv@divisor:	
  1088                           ; 4 bytes @ 0x2
  1089                           
  1090  0072                     ___xxtofl@val:	
  1091                           ; 4 bytes @ 0x2
  1092                           
  1093                           
  1094                           ; 4 bytes @ 0x2
  1095  0072                     	ds	1
  1096  0073                     ??___bmul:	
  1097  0073                     LCD_Write_Character@caracter:	
  1098                           ; 1 bytes @ 0x3
  1099                           
  1100                           
  1101                           ; 1 bytes @ 0x3
  1102  0073                     	ds	1
  1103  0074                     ??_LCD_Write_String:	
  1104  0074                     ??_I2C_Master_Write:	
  1105                           ; 1 bytes @ 0x4
  1106                           
  1107  0074                     ??_I2C_Master_Read:	
  1108                           ; 1 bytes @ 0x4
  1109                           
  1110  0074                     ??__Umul8_16:	
  1111                           ; 1 bytes @ 0x4
  1112                           
  1113  0074                     LCD_Cmd@comando:	
  1114                           ; 1 bytes @ 0x4
  1115                           
  1116  0074                     ___bmul@product:	
  1117                           ; 1 bytes @ 0x4
  1118                           
  1119  0074                     LCD_Write_String@n:	
  1120                           ; 1 bytes @ 0x4
  1121                           
  1122  0074                     ___wmul@multiplicand:	
  1123                           ; 2 bytes @ 0x4
  1124                           
  1125  0074                     ___awmod@dividend:	
  1126                           ; 2 bytes @ 0x4
  1127                           
  1128                           
  1129                           ; 2 bytes @ 0x4
  1130  0074                     	ds	1
  1131  0075                     ??_LCD_init:	
  1132  0075                     ?_LCD_Create_Char:	
  1133                           ; 1 bytes @ 0x5
  1134                           
  1135  0075                     ??_LCD_clear:	
  1136                           ; 1 bytes @ 0x5
  1137                           
  1138  0075                     ?_LCD_Set_Cursor:	
  1139                           ; 1 bytes @ 0x5
  1140                           
  1141  0075                     LCD_Set_Cursor@columna:	
  1142                           ; 1 bytes @ 0x5
  1143                           
  1144  0075                     LCD_Create_Char@chardata:	
  1145                           ; 1 bytes @ 0x5
  1146                           
  1147  0075                     ___bmul@multiplier:	
  1148                           ; 1 bytes @ 0x5
  1149                           
  1150                           
  1151                           ; 1 bytes @ 0x5
  1152  0075                     	ds	1
  1153  0076                     ??_OSC_config:	
  1154  0076                     ??_LCD_Create_Char:	
  1155                           ; 1 bytes @ 0x6
  1156                           
  1157  0076                     ??_LCD_Set_Cursor:	
  1158                           ; 1 bytes @ 0x6
  1159                           
  1160  0076                     ??_BCD_a_DEC:	
  1161                           ; 1 bytes @ 0x6
  1162                           
  1163  0076                     ??___wmul:	
  1164                           ; 1 bytes @ 0x6
  1165                           
  1166  0076                     ??___awmod:	
  1167                           ; 1 bytes @ 0x6
  1168                           
  1169  0076                     ??___xxtofl:	
  1170                           ; 1 bytes @ 0x6
  1171                           
  1172  0076                     LCD_Write_String@a:	
  1173                           ; 1 bytes @ 0x6
  1174                           
  1175  0076                     I2C_Master_Read@temp:	
  1176                           ; 1 bytes @ 0x6
  1177                           
  1178  0076                     ___wmul@product:	
  1179                           ; 2 bytes @ 0x6
  1180                           
  1181  0076                     ___lldiv@dividend:	
  1182                           ; 2 bytes @ 0x6
  1183                           
  1184                           
  1185                           ; 4 bytes @ 0x6
  1186  0076                     	ds	1
  1187  0077                     ??_pressBoton1:	
  1188  0077                     LCD_Create_Char@charnum:	
  1189                           ; 1 bytes @ 0x7
  1190                           
  1191  0077                     ___awmod@counter:	
  1192                           ; 1 bytes @ 0x7
  1193                           
  1194                           
  1195                           ; 1 bytes @ 0x7
  1196  0077                     	ds	1
  1197  0078                     ??___awdiv:	
  1198  0078                     LCD_Set_Cursor@linea:	
  1199                           ; 1 bytes @ 0x8
  1200                           
  1201  0078                     LCD_Create_Char@n:	
  1202                           ; 1 bytes @ 0x8
  1203                           
  1204  0078                     ___awmod@sign:	
  1205                           ; 1 bytes @ 0x8
  1206                           
  1207                           
  1208                           ; 1 bytes @ 0x8
  1209  0078                     	ds	1
  1210  0079                     BCD_a_DEC@numBCD:	
  1211  0079                     LCD_Set_Cursor@corrimiento:	
  1212                           ; 1 bytes @ 0x9
  1213                           
  1214                           
  1215                           ; 1 bytes @ 0x9
  1216  0079                     	ds	1
  1217                           
  1218                           	psect	cstackBANK0
  1219  0020                     __pcstackBANK0:	
  1220  0020                     ??_get_Time:	
  1221  0020                     ??_pressBoton2:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0020                     ??___lldiv:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0020                     ?___awdiv:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0020                     ___xxtofl@sign:	
  1231                           ; 2 bytes @ 0x0
  1232                           
  1233  0020                     ___awdiv@divisor:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0020                     __Umul8_16@product:	
  1237                           ; 2 bytes @ 0x0
  1238                           
  1239                           
  1240                           ; 2 bytes @ 0x0
  1241  0020                     	ds	1
  1242  0021                     ___xxtofl@exp:	
  1243  0021                     ___lldiv@quotient:	
  1244                           ; 1 bytes @ 0x1
  1245                           
  1246                           
  1247                           ; 4 bytes @ 0x1
  1248  0021                     	ds	1
  1249  0022                     ___awdiv@dividend:	
  1250  0022                     __Umul8_16@word_mpld:	
  1251                           ; 2 bytes @ 0x2
  1252                           
  1253  0022                     ___xxtofl@arg:	
  1254                           ; 2 bytes @ 0x2
  1255                           
  1256                           
  1257                           ; 4 bytes @ 0x2
  1258  0022                     	ds	2
  1259  0024                     ___awdiv@counter:	
  1260  0024                     __Umul8_16@multiplier:	
  1261                           ; 1 bytes @ 0x4
  1262                           
  1263                           
  1264                           ; 1 bytes @ 0x4
  1265  0024                     	ds	1
  1266  0025                     ___lldiv@counter:	
  1267  0025                     ___awdiv@sign:	
  1268                           ; 1 bytes @ 0x5
  1269                           
  1270                           
  1271                           ; 1 bytes @ 0x5
  1272  0025                     	ds	1
  1273  0026                     ?_I2C_Master_Init:	
  1274  0026                     ?___flmul:	
  1275                           ; 1 bytes @ 0x6
  1276                           
  1277  0026                     ___awdiv@quotient:	
  1278                           ; 4 bytes @ 0x6
  1279                           
  1280  0026                     I2C_Master_Init@c:	
  1281                           ; 2 bytes @ 0x6
  1282                           
  1283  0026                     ___flmul@b:	
  1284                           ; 4 bytes @ 0x6
  1285                           
  1286                           
  1287                           ; 4 bytes @ 0x6
  1288  0026                     	ds	2
  1289  0028                     ??_uint_to_array:	
  1290  0028                     ?_display_Uhrzeit:	
  1291                           ; 1 bytes @ 0x8
  1292                           
  1293  0028                     ?_display_Datum:	
  1294                           ; 1 bytes @ 0x8
  1295                           
  1296  0028                     display_Uhrzeit@columna:	
  1297                           ; 1 bytes @ 0x8
  1298                           
  1299  0028                     display_Datum@columna:	
  1300                           ; 1 bytes @ 0x8
  1301                           
  1302                           
  1303                           ; 1 bytes @ 0x8
  1304  0028                     	ds	1
  1305  0029                     ??_display_Uhrzeit:	
  1306  0029                     ??_display_Datum:	
  1307                           ; 1 bytes @ 0x9
  1308                           
  1309                           
  1310                           ; 1 bytes @ 0x9
  1311  0029                     	ds	1
  1312  002A                     ??_I2C_Master_Init:	
  1313  002A                     ___flmul@a:	
  1314                           ; 1 bytes @ 0xA
  1315                           
  1316                           
  1317                           ; 4 bytes @ 0xA
  1318  002A                     	ds	2
  1319  002C                     display_Uhrzeit@fila:	
  1320  002C                     display_Datum@fila:	
  1321                           ; 1 bytes @ 0xC
  1322                           
  1323                           
  1324                           ; 1 bytes @ 0xC
  1325  002C                     	ds	1
  1326  002D                     display_Uhrzeit@seg_u:	
  1327  002D                     display_Datum@dia_u:	
  1328                           ; 1 bytes @ 0xD
  1329                           
  1330                           
  1331                           ; 1 bytes @ 0xD
  1332  002D                     	ds	1
  1333  002E                     ??_SetUp:	
  1334  002E                     ??___flmul:	
  1335                           ; 1 bytes @ 0xE
  1336                           
  1337  002E                     display_Uhrzeit@seg_d:	
  1338                           ; 1 bytes @ 0xE
  1339                           
  1340  002E                     display_Datum@dia_d:	
  1341                           ; 1 bytes @ 0xE
  1342                           
  1343  002E                     uint_to_array@decenas:	
  1344                           ; 1 bytes @ 0xE
  1345                           
  1346                           
  1347                           ; 1 bytes @ 0xE
  1348  002E                     	ds	1
  1349  002F                     display_Uhrzeit@min_u:	
  1350  002F                     display_Datum@mes_u:	
  1351                           ; 1 bytes @ 0xF
  1352                           
  1353  002F                     uint_to_array@centenas:	
  1354                           ; 1 bytes @ 0xF
  1355                           
  1356                           
  1357                           ; 1 bytes @ 0xF
  1358  002F                     	ds	1
  1359  0030                     display_Uhrzeit@min_d:	
  1360  0030                     display_Datum@mes_d:	
  1361                           ; 1 bytes @ 0x10
  1362                           
  1363  0030                     uint_to_array@resultado:	
  1364                           ; 1 bytes @ 0x10
  1365                           
  1366                           
  1367                           ; 6 bytes @ 0x10
  1368  0030                     	ds	1
  1369  0031                     display_Uhrzeit@Uhr_u:	
  1370  0031                     display_Datum@jahr_u:	
  1371                           ; 1 bytes @ 0x11
  1372                           
  1373                           
  1374                           ; 1 bytes @ 0x11
  1375  0031                     	ds	1
  1376  0032                     display_Uhrzeit@Uhr_d:	
  1377  0032                     display_Datum@jahr_d:	
  1378                           ; 1 bytes @ 0x12
  1379                           
  1380                           
  1381                           ; 1 bytes @ 0x12
  1382  0032                     	ds	1
  1383  0033                     ___flmul@sign:	
  1384                           
  1385                           ; 1 bytes @ 0x13
  1386  0033                     	ds	1
  1387  0034                     ___flmul@aexp:	
  1388                           
  1389                           ; 1 bytes @ 0x14
  1390  0034                     	ds	1
  1391  0035                     ___flmul@grs:	
  1392                           
  1393                           ; 4 bytes @ 0x15
  1394  0035                     	ds	1
  1395  0036                     uint_to_array@numero:	
  1396                           
  1397                           ; 1 bytes @ 0x16
  1398  0036                     	ds	1
  1399  0037                     ??_mostrarLCD:	
  1400                           
  1401                           ; 1 bytes @ 0x17
  1402  0037                     	ds	2
  1403  0039                     ___flmul@bexp:	
  1404                           
  1405                           ; 1 bytes @ 0x19
  1406  0039                     	ds	1
  1407  003A                     mostrarLCD@pantalla:	
  1408  003A                     ___flmul@prod:	
  1409                           ; 1 bytes @ 0x1A
  1410                           
  1411                           
  1412                           ; 4 bytes @ 0x1A
  1413  003A                     	ds	4
  1414  003E                     ___flmul@temp:	
  1415                           
  1416                           ; 2 bytes @ 0x1E
  1417  003E                     	ds	2
  1418  0040                     ?___fladd:	
  1419  0040                     ___fladd@b:	
  1420                           ; 4 bytes @ 0x20
  1421                           
  1422                           
  1423                           ; 4 bytes @ 0x20
  1424  0040                     	ds	4
  1425  0044                     ___fladd@a:	
  1426                           
  1427                           ; 4 bytes @ 0x24
  1428  0044                     	ds	4
  1429  0048                     ??___fladd:	
  1430                           
  1431                           ; 1 bytes @ 0x28
  1432  0048                     	ds	8
  1433  0050                     ___fladd@signs:	
  1434                           
  1435                           ; 1 bytes @ 0x30
  1436  0050                     	ds	1
  1437  0051                     ___fladd@aexp:	
  1438                           
  1439                           ; 1 bytes @ 0x31
  1440  0051                     	ds	1
  1441  0052                     ___fladd@bexp:	
  1442                           
  1443                           ; 1 bytes @ 0x32
  1444  0052                     	ds	1
  1445  0053                     ___fladd@grs:	
  1446                           
  1447                           ; 1 bytes @ 0x33
  1448  0053                     	ds	1
  1449  0054                     ?___fldiv:	
  1450  0054                     ___fldiv@a:	
  1451                           ; 4 bytes @ 0x34
  1452                           
  1453                           
  1454                           ; 4 bytes @ 0x34
  1455  0054                     	ds	4
  1456  0058                     ___fldiv@b:	
  1457                           
  1458                           ; 4 bytes @ 0x38
  1459  0058                     	ds	4
  1460  005C                     ??___fldiv:	
  1461                           
  1462                           ; 1 bytes @ 0x3C
  1463  005C                     	ds	5
  1464  0061                     ___fldiv@rem:	
  1465                           
  1466                           ; 4 bytes @ 0x41
  1467  0061                     	ds	4
  1468  0065                     ___fldiv@sign:	
  1469                           
  1470                           ; 1 bytes @ 0x45
  1471  0065                     	ds	1
  1472  0066                     ___fldiv@new_exp:	
  1473                           
  1474                           ; 2 bytes @ 0x46
  1475  0066                     	ds	2
  1476  0068                     ___fldiv@grs:	
  1477                           
  1478                           ; 4 bytes @ 0x48
  1479  0068                     	ds	4
  1480  006C                     ___fldiv@bexp:	
  1481                           
  1482                           ; 1 bytes @ 0x4C
  1483  006C                     	ds	1
  1484  006D                     ___fldiv@aexp:	
  1485                           
  1486                           ; 1 bytes @ 0x4D
  1487  006D                     	ds	1
  1488  006E                     ___fltol@sign1:	
  1489                           
  1490                           ; 1 bytes @ 0x4E
  1491  006E                     	ds	1
  1492  006F                     ___fltol@exp1:	
  1493                           
  1494                           ; 1 bytes @ 0x4F
  1495  006F                     	ds	1
  1496                           
  1497                           	psect	maintext
  1498  1299                     __pmaintext:	
  1499 ;;
  1500 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1501 ;;
  1502 ;; *************** function _main *****************
  1503 ;; Defined at:
  1504 ;;		line 120 in file "main_Master.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;		None
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;		None
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1513 ;; Tracked objects:
  1514 ;;		On entry : B00/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1518 ;;      Params:         0       0       0       0       0
  1519 ;;      Locals:         0       0       0       0       0
  1520 ;;      Temps:          0       0       1       0       0
  1521 ;;      Totals:         0       0       1       0       0
  1522 ;;Total ram usage:        1 bytes
  1523 ;; Hardware stack levels required when called:    5
  1524 ;; This function calls:
  1525 ;;		_SetUp
  1526 ;;		_get_Time
  1527 ;;		_mostrarLCD
  1528 ;;		_pressBoton1
  1529 ;;		_pressBoton2
  1530 ;;		_temp_ambiente
  1531 ;;		_temp_objeto
  1532 ;; This function is called by:
  1533 ;;		Startup code after reset
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           
  1538                           ;psect for function _main
  1539  1299                     _main:	
  1540                           
  1541                           ;main_Master.c: 121:     SetUp();
  1542                           
  1543                           ;incstack = 0
  1544                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1545  1299  160A  118A  249F  160A  118A  	fcall	_SetUp
  1546  129E                     l5036:	
  1547                           
  1548                           ;main_Master.c: 124:         get_Time();
  1549  129E  120A  118A  2601  160A  118A  	fcall	_get_Time
  1550                           
  1551                           ;main_Master.c: 125:         temperatura = temp_ambiente();
  1552  12A3  120A  158A  20A8  160A  118A  	fcall	_temp_ambiente
  1553  12A8  1683               	bsf	3,5	;RP0=1, select bank1
  1554  12A9  1303               	bcf	3,6	;RP1=0, select bank1
  1555  12AA  0829               	movf	?_temp_ambiente^(0+128),w
  1556  12AB  00B3               	movwf	??_main^(0+128)
  1557  12AC  0833               	movf	??_main^(0+128),w
  1558  12AD  00BE               	movwf	_temperatura^(0+128)
  1559                           
  1560                           ;main_Master.c: 126:         temperatura_obj = temp_objeto();
  1561  12AE  120A  158A  2182  160A  118A  	fcall	_temp_objeto
  1562  12B3  1683               	bsf	3,5	;RP0=1, select bank1
  1563  12B4  1303               	bcf	3,6	;RP1=0, select bank1
  1564  12B5  0829               	movf	?_temp_objeto^(0+128),w
  1565  12B6  00B3               	movwf	??_main^(0+128)
  1566  12B7  0833               	movf	??_main^(0+128),w
  1567  12B8  00BD               	movwf	_temperatura_obj^(0+128)
  1568                           
  1569                           ;main_Master.c: 129:         mostrarLCD(estado);
  1570  12B9  083F               	movf	_estado^(0+128),w
  1571  12BA  120A  118A  2344  160A  118A  	fcall	_mostrarLCD
  1572                           
  1573                           ;main_Master.c: 130:         pressBoton1();
  1574  12BF  160A  118A  2513  160A  118A  	fcall	_pressBoton1
  1575                           
  1576                           ;main_Master.c: 131:         pressBoton2();
  1577  12C4  160A  118A  273E  160A  118A  	fcall	_pressBoton2
  1578  12C9  2A9E               	goto	l5036
  1579  12CA                     __end_of_main:	
  1580                           
  1581                           	psect	text1
  1582  0982                     __ptext1:	
  1583 ;; *************** function _temp_objeto *****************
  1584 ;; Defined at:
  1585 ;;		line 16 in file "Temperatura_I2C.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;		None
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  temp_MSB        2   17[BANK1 ] unsigned int 
  1590 ;;  temp            2   14[BANK1 ] unsigned int 
  1591 ;;  temp_LSB        1   16[BANK1 ] unsigned char 
  1592 ;;  PEC             1    0        unsigned char 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  2    9[BANK1 ] unsigned int 
  1595 ;; Registers used:
  1596 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1602 ;;      Params:         0       0       2       0       0
  1603 ;;      Locals:         0       0       6       0       0
  1604 ;;      Temps:          0       0       2       0       0
  1605 ;;      Totals:         0       0      10       0       0
  1606 ;;Total ram usage:       10 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; Hardware stack levels required when called:    3
  1609 ;; This function calls:
  1610 ;;		_I2C_Master_Read
  1611 ;;		_I2C_Master_Start
  1612 ;;		_I2C_Master_Stop
  1613 ;;		_I2C_Master_Write
  1614 ;;		___fladd
  1615 ;;		___fldiv
  1616 ;;		___flmul
  1617 ;;		___fltol
  1618 ;;		___xxtofl
  1619 ;; This function is called by:
  1620 ;;		_main
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           
  1625                           ;psect for function _temp_objeto
  1626  0982                     _temp_objeto:	
  1627                           
  1628                           ;Temperatura_I2C.c: 17:     uint16_t temp_MSB;;Temperatura_I2C.c: 18:     uint8_t temp_L
      +                          SB;;Temperatura_I2C.c: 19:     uint8_t PEC;;Temperatura_I2C.c: 20:     uint16_t temp;;Te
      +                          mperatura_I2C.c: 21:     I2C_Master_Start();
  1629                           
  1630                           ;incstack = 0
  1631                           ; Regs used in _temp_objeto: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1632  0982  160A  118A  2139  120A  158A  	fcall	_I2C_Master_Start
  1633                           
  1634                           ;Temperatura_I2C.c: 22:     I2C_Master_Write(0x00);
  1635  0987  3000               	movlw	0
  1636  0988  00F2               	movwf	I2C_Master_Write@d
  1637  0989  00F3               	movwf	I2C_Master_Write@d+1
  1638  098A  160A  118A  2147  120A  158A  	fcall	_I2C_Master_Write
  1639                           
  1640                           ;Temperatura_I2C.c: 23:     I2C_Master_Write(0x07);
  1641  098F  3007               	movlw	7
  1642  0990  00F2               	movwf	I2C_Master_Write@d
  1643  0991  3000               	movlw	0
  1644  0992  00F3               	movwf	I2C_Master_Write@d+1
  1645  0993  160A  118A  2147  120A  158A  	fcall	_I2C_Master_Write
  1646                           
  1647                           ;Temperatura_I2C.c: 26:     I2C_Master_Start();
  1648  0998  160A  118A  2139  120A  158A  	fcall	_I2C_Master_Start
  1649                           
  1650                           ;Temperatura_I2C.c: 27:     I2C_Master_Write(0x01);
  1651  099D  3001               	movlw	1
  1652  099E  00F2               	movwf	I2C_Master_Write@d
  1653  099F  3000               	movlw	0
  1654  09A0  00F3               	movwf	I2C_Master_Write@d+1
  1655  09A1  160A  118A  2147  120A  158A  	fcall	_I2C_Master_Write
  1656                           
  1657                           ;Temperatura_I2C.c: 28:     temp_LSB = I2C_Master_Read(0);
  1658  09A6  3000               	movlw	0
  1659  09A7  00F2               	movwf	I2C_Master_Read@a
  1660  09A8  00F3               	movwf	I2C_Master_Read@a+1
  1661  09A9  160A  118A  2241  120A  158A  	fcall	_I2C_Master_Read
  1662  09AE  0872               	movf	?_I2C_Master_Read,w
  1663  09AF  1683               	bsf	3,5	;RP0=1, select bank1
  1664  09B0  1303               	bcf	3,6	;RP1=0, select bank1
  1665  09B1  00AB               	movwf	??_temp_objeto^(0+128)
  1666  09B2  082B               	movf	??_temp_objeto^(0+128),w
  1667  09B3  00B0               	movwf	temp_objeto@temp_LSB^(0+128)
  1668                           
  1669                           ;Temperatura_I2C.c: 29:     temp_MSB = I2C_Master_Read(0);
  1670  09B4  3000               	movlw	0
  1671  09B5  00F2               	movwf	I2C_Master_Read@a
  1672  09B6  00F3               	movwf	I2C_Master_Read@a+1
  1673  09B7  160A  118A  2241  120A  158A  	fcall	_I2C_Master_Read
  1674  09BC  0873               	movf	?_I2C_Master_Read+1,w
  1675  09BD  1683               	bsf	3,5	;RP0=1, select bank1
  1676  09BE  1303               	bcf	3,6	;RP1=0, select bank1
  1677  09BF  00B2               	movwf	(temp_objeto@temp_MSB+1)^(0+128)
  1678  09C0  0872               	movf	?_I2C_Master_Read,w
  1679  09C1  00B1               	movwf	temp_objeto@temp_MSB^(0+128)
  1680  09C2  3000               	movlw	0
  1681  09C3  00F2               	movwf	I2C_Master_Read@a
  1682  09C4  00F3               	movwf	I2C_Master_Read@a+1
  1683  09C5  160A  118A  2241  120A  158A  	fcall	_I2C_Master_Read
  1684                           
  1685                           ;Temperatura_I2C.c: 31:     I2C_Master_Stop();
  1686  09CA  160A  118A  2140  120A  158A  	fcall	_I2C_Master_Stop
  1687                           
  1688                           ;Temperatura_I2C.c: 32:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1689  09CF  3082               	movlw	130
  1690  09D0  1683               	bsf	3,5	;RP0=1, select bank1
  1691  09D1  1303               	bcf	3,6	;RP1=0, select bank1
  1692  09D2  00AC               	movwf	(??_temp_objeto^(0+128)+1)
  1693  09D3  30DD               	movlw	221
  1694  09D4  00AB               	movwf	??_temp_objeto^(0+128)
  1695  09D5                     u4737:	
  1696  09D5  0BAB               	decfsz	??_temp_objeto^(0+128),f
  1697  09D6  29D5               	goto	u4737
  1698  09D7  0BAC               	decfsz	(??_temp_objeto^(0+128)+1),f
  1699  09D8  29D5               	goto	u4737
  1700                           
  1701                           ;Temperatura_I2C.c: 34:     temp_MSB = temp_MSB <<8;
  1702  09D9  1683               	bsf	3,5	;RP0=1, select bank1
  1703  09DA  1303               	bcf	3,6	;RP1=0, select bank1
  1704  09DB  0831               	movf	temp_objeto@temp_MSB^(0+128),w
  1705  09DC  00AC               	movwf	(??_temp_objeto^(0+128)+1)
  1706  09DD  01AB               	clrf	??_temp_objeto^(0+128)
  1707  09DE  082B               	movf	??_temp_objeto^(0+128),w
  1708  09DF  00B1               	movwf	temp_objeto@temp_MSB^(0+128)
  1709  09E0  082C               	movf	(??_temp_objeto+1)^(0+128),w
  1710  09E1  00B2               	movwf	(temp_objeto@temp_MSB+1)^(0+128)
  1711                           
  1712                           ;Temperatura_I2C.c: 35:     temp = (((temp_MSB+temp_LSB)*0.2)-273.15)/100;
  1713  09E2  0830               	movf	temp_objeto@temp_LSB^(0+128),w
  1714  09E3  0731               	addwf	temp_objeto@temp_MSB^(0+128),w
  1715  09E4  00F2               	movwf	___xxtofl@val
  1716  09E5  0832               	movf	(temp_objeto@temp_MSB+1)^(0+128),w
  1717  09E6  1803               	skipnc
  1718  09E7  0A32               	incf	(temp_objeto@temp_MSB+1)^(0+128),w
  1719  09E8  00F3               	movwf	___xxtofl@val+1
  1720  09E9  01F4               	clrf	___xxtofl@val+2
  1721  09EA  01F5               	clrf	___xxtofl@val+3
  1722  09EB  3000               	movlw	0
  1723  09EC  120A  158A  2003  120A  158A  	fcall	___xxtofl
  1724  09F1  0875               	movf	?___xxtofl+3,w
  1725  09F2  1283               	bcf	3,5	;RP0=0, select bank0
  1726  09F3  1303               	bcf	3,6	;RP1=0, select bank0
  1727  09F4  00AD               	movwf	___flmul@a+3
  1728  09F5  0874               	movf	?___xxtofl+2,w
  1729  09F6  00AC               	movwf	___flmul@a+2
  1730  09F7  0873               	movf	?___xxtofl+1,w
  1731  09F8  00AB               	movwf	___flmul@a+1
  1732  09F9  0872               	movf	?___xxtofl,w
  1733  09FA  00AA               	movwf	___flmul@a
  1734  09FB  303E               	movlw	62
  1735  09FC  00A9               	movwf	___flmul@b+3
  1736  09FD  304C               	movlw	76
  1737  09FE  00A8               	movwf	___flmul@b+2
  1738  09FF  30CC               	movlw	204
  1739  0A00  00A7               	movwf	___flmul@b+1
  1740  0A01  30CD               	movlw	205
  1741  0A02  00A6               	movwf	___flmul@b
  1742  0A03  120A  118A  202F  120A  158A  	fcall	___flmul
  1743  0A08  1283               	bcf	3,5	;RP0=0, select bank0
  1744  0A09  1303               	bcf	3,6	;RP1=0, select bank0
  1745  0A0A  0829               	movf	?___flmul+3,w
  1746  0A0B  00C7               	movwf	___fladd@a+3
  1747  0A0C  0828               	movf	?___flmul+2,w
  1748  0A0D  00C6               	movwf	___fladd@a+2
  1749  0A0E  0827               	movf	?___flmul+1,w
  1750  0A0F  00C5               	movwf	___fladd@a+1
  1751  0A10  0826               	movf	?___flmul,w
  1752  0A11  00C4               	movwf	___fladd@a
  1753  0A12  30C3               	movlw	195
  1754  0A13  00C3               	movwf	___fladd@b+3
  1755  0A14  3088               	movlw	136
  1756  0A15  00C2               	movwf	___fladd@b+2
  1757  0A16  3093               	movlw	147
  1758  0A17  00C1               	movwf	___fladd@b+1
  1759  0A18  3033               	movlw	51
  1760  0A19  00C0               	movwf	___fladd@b
  1761  0A1A  120A  158A  25D1  120A  158A  	fcall	___fladd
  1762  0A1F  1283               	bcf	3,5	;RP0=0, select bank0
  1763  0A20  1303               	bcf	3,6	;RP1=0, select bank0
  1764  0A21  0843               	movf	?___fladd+3,w
  1765  0A22  00DB               	movwf	___fldiv@b+3
  1766  0A23  0842               	movf	?___fladd+2,w
  1767  0A24  00DA               	movwf	___fldiv@b+2
  1768  0A25  0841               	movf	?___fladd+1,w
  1769  0A26  00D9               	movwf	___fldiv@b+1
  1770  0A27  0840               	movf	?___fladd,w
  1771  0A28  00D8               	movwf	___fldiv@b
  1772  0A29  3042               	movlw	66
  1773  0A2A  00D7               	movwf	___fldiv@a+3
  1774  0A2B  30C8               	movlw	200
  1775  0A2C  00D6               	movwf	___fldiv@a+2
  1776  0A2D  3000               	movlw	0
  1777  0A2E  00D5               	movwf	___fldiv@a+1
  1778  0A2F  3000               	movlw	0
  1779  0A30  00D4               	movwf	___fldiv@a
  1780  0A31  120A  158A  242E  120A  158A  	fcall	___fldiv
  1781  0A36  1283               	bcf	3,5	;RP0=0, select bank0
  1782  0A37  1303               	bcf	3,6	;RP1=0, select bank0
  1783  0A38  0857               	movf	?___fldiv+3,w
  1784  0A39  1683               	bsf	3,5	;RP0=1, select bank1
  1785  0A3A  1303               	bcf	3,6	;RP1=0, select bank1
  1786  0A3B  00A3               	movwf	(___fltol@f1+3)^(0+128)
  1787  0A3C  1283               	bcf	3,5	;RP0=0, select bank0
  1788  0A3D  1303               	bcf	3,6	;RP1=0, select bank0
  1789  0A3E  0856               	movf	?___fldiv+2,w
  1790  0A3F  1683               	bsf	3,5	;RP0=1, select bank1
  1791  0A40  1303               	bcf	3,6	;RP1=0, select bank1
  1792  0A41  00A2               	movwf	(___fltol@f1+2)^(0+128)
  1793  0A42  1283               	bcf	3,5	;RP0=0, select bank0
  1794  0A43  1303               	bcf	3,6	;RP1=0, select bank0
  1795  0A44  0855               	movf	?___fldiv+1,w
  1796  0A45  1683               	bsf	3,5	;RP0=1, select bank1
  1797  0A46  1303               	bcf	3,6	;RP1=0, select bank1
  1798  0A47  00A1               	movwf	(___fltol@f1+1)^(0+128)
  1799  0A48  1283               	bcf	3,5	;RP0=0, select bank0
  1800  0A49  1303               	bcf	3,6	;RP1=0, select bank0
  1801  0A4A  0854               	movf	?___fldiv,w
  1802  0A4B  1683               	bsf	3,5	;RP0=1, select bank1
  1803  0A4C  1303               	bcf	3,6	;RP1=0, select bank1
  1804  0A4D  00A0               	movwf	___fltol@f1^(0+128)
  1805  0A4E  160A  118A  258A   	fcall	___fltol
  1806  0A51  1683               	bsf	3,5	;RP0=1, select bank1
  1807  0A52  1303               	bcf	3,6	;RP1=0, select bank1
  1808  0A53  0821               	movf	(?___fltol+1)^(0+128),w
  1809  0A54  00AF               	movwf	(temp_objeto@temp+1)^(0+128)
  1810  0A55  0820               	movf	?___fltol^(0+128),w
  1811  0A56  00AE               	movwf	temp_objeto@temp^(0+128)
  1812                           
  1813                           ;Temperatura_I2C.c: 36:     return(temp);
  1814  0A57  082F               	movf	(temp_objeto@temp+1)^(0+128),w
  1815  0A58  00AA               	movwf	(?_temp_objeto+1)^(0+128)
  1816  0A59  082E               	movf	temp_objeto@temp^(0+128),w
  1817  0A5A  00A9               	movwf	?_temp_objeto^(0+128)
  1818  0A5B  0008               	return
  1819  0A5C                     __end_of_temp_objeto:	
  1820                           
  1821                           	psect	text2
  1822  08A8                     __ptext2:	
  1823 ;; *************** function _temp_ambiente *****************
  1824 ;; Defined at:
  1825 ;;		line 39 in file "Temperatura_I2C.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  temp_MSB        2   17[BANK1 ] unsigned int 
  1830 ;;  temp            2   14[BANK1 ] unsigned int 
  1831 ;;  temp_LSB        1   16[BANK1 ] unsigned char 
  1832 ;;  PEC             1    0        unsigned char 
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  2    9[BANK1 ] unsigned int 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1842 ;;      Params:         0       0       2       0       0
  1843 ;;      Locals:         0       0       6       0       0
  1844 ;;      Temps:          0       0       2       0       0
  1845 ;;      Totals:         0       0      10       0       0
  1846 ;;Total ram usage:       10 bytes
  1847 ;; Hardware stack levels used:    1
  1848 ;; Hardware stack levels required when called:    3
  1849 ;; This function calls:
  1850 ;;		_I2C_Master_Read
  1851 ;;		_I2C_Master_Start
  1852 ;;		_I2C_Master_Stop
  1853 ;;		_I2C_Master_Write
  1854 ;;		___fladd
  1855 ;;		___fldiv
  1856 ;;		___flmul
  1857 ;;		___fltol
  1858 ;;		___xxtofl
  1859 ;; This function is called by:
  1860 ;;		_main
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           
  1865                           ;psect for function _temp_ambiente
  1866  08A8                     _temp_ambiente:	
  1867                           
  1868                           ;Temperatura_I2C.c: 40:     uint16_t temp_MSB;;Temperatura_I2C.c: 41:     uint8_t temp_L
      +                          SB;;Temperatura_I2C.c: 42:     uint8_t PEC;;Temperatura_I2C.c: 43:     uint16_t temp;;Te
      +                          mperatura_I2C.c: 44:     I2C_Master_Start();
  1869                           
  1870                           ;incstack = 0
  1871                           ; Regs used in _temp_ambiente: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1872  08A8  160A  118A  2139  120A  158A  	fcall	_I2C_Master_Start
  1873                           
  1874                           ;Temperatura_I2C.c: 45:     I2C_Master_Write(0x00);
  1875  08AD  3000               	movlw	0
  1876  08AE  00F2               	movwf	I2C_Master_Write@d
  1877  08AF  00F3               	movwf	I2C_Master_Write@d+1
  1878  08B0  160A  118A  2147  120A  158A  	fcall	_I2C_Master_Write
  1879                           
  1880                           ;Temperatura_I2C.c: 46:     I2C_Master_Write(0x06);
  1881  08B5  3006               	movlw	6
  1882  08B6  00F2               	movwf	I2C_Master_Write@d
  1883  08B7  3000               	movlw	0
  1884  08B8  00F3               	movwf	I2C_Master_Write@d+1
  1885  08B9  160A  118A  2147  120A  158A  	fcall	_I2C_Master_Write
  1886                           
  1887                           ;Temperatura_I2C.c: 49:     I2C_Master_Start();
  1888  08BE  160A  118A  2139  120A  158A  	fcall	_I2C_Master_Start
  1889                           
  1890                           ;Temperatura_I2C.c: 50:     I2C_Master_Write(0x01);
  1891  08C3  3001               	movlw	1
  1892  08C4  00F2               	movwf	I2C_Master_Write@d
  1893  08C5  3000               	movlw	0
  1894  08C6  00F3               	movwf	I2C_Master_Write@d+1
  1895  08C7  160A  118A  2147  120A  158A  	fcall	_I2C_Master_Write
  1896                           
  1897                           ;Temperatura_I2C.c: 51:     temp_LSB = I2C_Master_Read(0);
  1898  08CC  3000               	movlw	0
  1899  08CD  00F2               	movwf	I2C_Master_Read@a
  1900  08CE  00F3               	movwf	I2C_Master_Read@a+1
  1901  08CF  160A  118A  2241  120A  158A  	fcall	_I2C_Master_Read
  1902  08D4  0872               	movf	?_I2C_Master_Read,w
  1903  08D5  1683               	bsf	3,5	;RP0=1, select bank1
  1904  08D6  1303               	bcf	3,6	;RP1=0, select bank1
  1905  08D7  00AB               	movwf	??_temp_ambiente^(0+128)
  1906  08D8  082B               	movf	??_temp_ambiente^(0+128),w
  1907  08D9  00B0               	movwf	temp_ambiente@temp_LSB^(0+128)
  1908                           
  1909                           ;Temperatura_I2C.c: 52:     temp_MSB = I2C_Master_Read(0);
  1910  08DA  3000               	movlw	0
  1911  08DB  00F2               	movwf	I2C_Master_Read@a
  1912  08DC  00F3               	movwf	I2C_Master_Read@a+1
  1913  08DD  160A  118A  2241  120A  158A  	fcall	_I2C_Master_Read
  1914  08E2  0873               	movf	?_I2C_Master_Read+1,w
  1915  08E3  1683               	bsf	3,5	;RP0=1, select bank1
  1916  08E4  1303               	bcf	3,6	;RP1=0, select bank1
  1917  08E5  00B2               	movwf	(temp_ambiente@temp_MSB+1)^(0+128)
  1918  08E6  0872               	movf	?_I2C_Master_Read,w
  1919  08E7  00B1               	movwf	temp_ambiente@temp_MSB^(0+128)
  1920  08E8  3000               	movlw	0
  1921  08E9  00F2               	movwf	I2C_Master_Read@a
  1922  08EA  00F3               	movwf	I2C_Master_Read@a+1
  1923  08EB  160A  118A  2241  120A  158A  	fcall	_I2C_Master_Read
  1924                           
  1925                           ;Temperatura_I2C.c: 54:     I2C_Master_Stop();
  1926  08F0  160A  118A  2140  120A  158A  	fcall	_I2C_Master_Stop
  1927                           
  1928                           ;Temperatura_I2C.c: 55:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1929  08F5  3082               	movlw	130
  1930  08F6  1683               	bsf	3,5	;RP0=1, select bank1
  1931  08F7  1303               	bcf	3,6	;RP1=0, select bank1
  1932  08F8  00AC               	movwf	(??_temp_ambiente^(0+128)+1)
  1933  08F9  30DD               	movlw	221
  1934  08FA  00AB               	movwf	??_temp_ambiente^(0+128)
  1935  08FB                     u4747:	
  1936  08FB  0BAB               	decfsz	??_temp_ambiente^(0+128),f
  1937  08FC  28FB               	goto	u4747
  1938  08FD  0BAC               	decfsz	(??_temp_ambiente^(0+128)+1),f
  1939  08FE  28FB               	goto	u4747
  1940                           
  1941                           ;Temperatura_I2C.c: 57:     temp_MSB = temp_MSB <<8;
  1942  08FF  1683               	bsf	3,5	;RP0=1, select bank1
  1943  0900  1303               	bcf	3,6	;RP1=0, select bank1
  1944  0901  0831               	movf	temp_ambiente@temp_MSB^(0+128),w
  1945  0902  00AC               	movwf	(??_temp_ambiente^(0+128)+1)
  1946  0903  01AB               	clrf	??_temp_ambiente^(0+128)
  1947  0904  082B               	movf	??_temp_ambiente^(0+128),w
  1948  0905  00B1               	movwf	temp_ambiente@temp_MSB^(0+128)
  1949  0906  082C               	movf	(??_temp_ambiente+1)^(0+128),w
  1950  0907  00B2               	movwf	(temp_ambiente@temp_MSB+1)^(0+128)
  1951                           
  1952                           ;Temperatura_I2C.c: 58:     temp = (((temp_MSB+temp_LSB)*0.2)-273.15)/100;
  1953  0908  0830               	movf	temp_ambiente@temp_LSB^(0+128),w
  1954  0909  0731               	addwf	temp_ambiente@temp_MSB^(0+128),w
  1955  090A  00F2               	movwf	___xxtofl@val
  1956  090B  0832               	movf	(temp_ambiente@temp_MSB+1)^(0+128),w
  1957  090C  1803               	skipnc
  1958  090D  0A32               	incf	(temp_ambiente@temp_MSB+1)^(0+128),w
  1959  090E  00F3               	movwf	___xxtofl@val+1
  1960  090F  01F4               	clrf	___xxtofl@val+2
  1961  0910  01F5               	clrf	___xxtofl@val+3
  1962  0911  3000               	movlw	0
  1963  0912  120A  158A  2003  120A  158A  	fcall	___xxtofl
  1964  0917  0875               	movf	?___xxtofl+3,w
  1965  0918  1283               	bcf	3,5	;RP0=0, select bank0
  1966  0919  1303               	bcf	3,6	;RP1=0, select bank0
  1967  091A  00AD               	movwf	___flmul@a+3
  1968  091B  0874               	movf	?___xxtofl+2,w
  1969  091C  00AC               	movwf	___flmul@a+2
  1970  091D  0873               	movf	?___xxtofl+1,w
  1971  091E  00AB               	movwf	___flmul@a+1
  1972  091F  0872               	movf	?___xxtofl,w
  1973  0920  00AA               	movwf	___flmul@a
  1974  0921  303E               	movlw	62
  1975  0922  00A9               	movwf	___flmul@b+3
  1976  0923  304C               	movlw	76
  1977  0924  00A8               	movwf	___flmul@b+2
  1978  0925  30CC               	movlw	204
  1979  0926  00A7               	movwf	___flmul@b+1
  1980  0927  30CD               	movlw	205
  1981  0928  00A6               	movwf	___flmul@b
  1982  0929  120A  118A  202F  120A  158A  	fcall	___flmul
  1983  092E  1283               	bcf	3,5	;RP0=0, select bank0
  1984  092F  1303               	bcf	3,6	;RP1=0, select bank0
  1985  0930  0829               	movf	?___flmul+3,w
  1986  0931  00C7               	movwf	___fladd@a+3
  1987  0932  0828               	movf	?___flmul+2,w
  1988  0933  00C6               	movwf	___fladd@a+2
  1989  0934  0827               	movf	?___flmul+1,w
  1990  0935  00C5               	movwf	___fladd@a+1
  1991  0936  0826               	movf	?___flmul,w
  1992  0937  00C4               	movwf	___fladd@a
  1993  0938  30C3               	movlw	195
  1994  0939  00C3               	movwf	___fladd@b+3
  1995  093A  3088               	movlw	136
  1996  093B  00C2               	movwf	___fladd@b+2
  1997  093C  3093               	movlw	147
  1998  093D  00C1               	movwf	___fladd@b+1
  1999  093E  3033               	movlw	51
  2000  093F  00C0               	movwf	___fladd@b
  2001  0940  120A  158A  25D1  120A  158A  	fcall	___fladd
  2002  0945  1283               	bcf	3,5	;RP0=0, select bank0
  2003  0946  1303               	bcf	3,6	;RP1=0, select bank0
  2004  0947  0843               	movf	?___fladd+3,w
  2005  0948  00DB               	movwf	___fldiv@b+3
  2006  0949  0842               	movf	?___fladd+2,w
  2007  094A  00DA               	movwf	___fldiv@b+2
  2008  094B  0841               	movf	?___fladd+1,w
  2009  094C  00D9               	movwf	___fldiv@b+1
  2010  094D  0840               	movf	?___fladd,w
  2011  094E  00D8               	movwf	___fldiv@b
  2012  094F  3042               	movlw	66
  2013  0950  00D7               	movwf	___fldiv@a+3
  2014  0951  30C8               	movlw	200
  2015  0952  00D6               	movwf	___fldiv@a+2
  2016  0953  3000               	movlw	0
  2017  0954  00D5               	movwf	___fldiv@a+1
  2018  0955  3000               	movlw	0
  2019  0956  00D4               	movwf	___fldiv@a
  2020  0957  120A  158A  242E  120A  158A  	fcall	___fldiv
  2021  095C  1283               	bcf	3,5	;RP0=0, select bank0
  2022  095D  1303               	bcf	3,6	;RP1=0, select bank0
  2023  095E  0857               	movf	?___fldiv+3,w
  2024  095F  1683               	bsf	3,5	;RP0=1, select bank1
  2025  0960  1303               	bcf	3,6	;RP1=0, select bank1
  2026  0961  00A3               	movwf	(___fltol@f1+3)^(0+128)
  2027  0962  1283               	bcf	3,5	;RP0=0, select bank0
  2028  0963  1303               	bcf	3,6	;RP1=0, select bank0
  2029  0964  0856               	movf	?___fldiv+2,w
  2030  0965  1683               	bsf	3,5	;RP0=1, select bank1
  2031  0966  1303               	bcf	3,6	;RP1=0, select bank1
  2032  0967  00A2               	movwf	(___fltol@f1+2)^(0+128)
  2033  0968  1283               	bcf	3,5	;RP0=0, select bank0
  2034  0969  1303               	bcf	3,6	;RP1=0, select bank0
  2035  096A  0855               	movf	?___fldiv+1,w
  2036  096B  1683               	bsf	3,5	;RP0=1, select bank1
  2037  096C  1303               	bcf	3,6	;RP1=0, select bank1
  2038  096D  00A1               	movwf	(___fltol@f1+1)^(0+128)
  2039  096E  1283               	bcf	3,5	;RP0=0, select bank0
  2040  096F  1303               	bcf	3,6	;RP1=0, select bank0
  2041  0970  0854               	movf	?___fldiv,w
  2042  0971  1683               	bsf	3,5	;RP0=1, select bank1
  2043  0972  1303               	bcf	3,6	;RP1=0, select bank1
  2044  0973  00A0               	movwf	___fltol@f1^(0+128)
  2045  0974  160A  118A  258A   	fcall	___fltol
  2046  0977  1683               	bsf	3,5	;RP0=1, select bank1
  2047  0978  1303               	bcf	3,6	;RP1=0, select bank1
  2048  0979  0821               	movf	(?___fltol+1)^(0+128),w
  2049  097A  00AF               	movwf	(temp_ambiente@temp+1)^(0+128)
  2050  097B  0820               	movf	?___fltol^(0+128),w
  2051  097C  00AE               	movwf	temp_ambiente@temp^(0+128)
  2052                           
  2053                           ;Temperatura_I2C.c: 59:     return(temp);
  2054  097D  082F               	movf	(temp_ambiente@temp+1)^(0+128),w
  2055  097E  00AA               	movwf	(?_temp_ambiente+1)^(0+128)
  2056  097F  082E               	movf	temp_ambiente@temp^(0+128),w
  2057  0980  00A9               	movwf	?_temp_ambiente^(0+128)
  2058  0981  0008               	return
  2059  0982                     __end_of_temp_ambiente:	
  2060                           
  2061                           	psect	text3
  2062  0803                     __ptext3:	
  2063 ;; *************** function ___xxtofl *****************
  2064 ;; Defined at:
  2065 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  sign            1    wreg     unsigned char 
  2068 ;;  val             4    2[COMMON] long 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  sign            1    0[BANK0 ] unsigned char 
  2071 ;;  arg             4    2[BANK0 ] unsigned long 
  2072 ;;  exp             1    1[BANK0 ] unsigned char 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  4    2[COMMON] unsigned char 
  2075 ;; Registers used:
  2076 ;;		wreg, status,2, status,0
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2082 ;;      Params:         4       0       0       0       0
  2083 ;;      Locals:         0       6       0       0       0
  2084 ;;      Temps:          4       0       0       0       0
  2085 ;;      Totals:         8       6       0       0       0
  2086 ;;Total ram usage:       14 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    1
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_temp_objeto
  2093 ;;		_temp_ambiente
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           
  2098                           ;psect for function ___xxtofl
  2099  0803                     ___xxtofl:	
  2100                           
  2101                           ;incstack = 0
  2102                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2103                           ;___xxtofl@sign stored from wreg
  2104  0803  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0804  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0805  00A0               	movwf	___xxtofl@sign
  2107  0806  0820               	movf	___xxtofl@sign,w
  2108  0807  1D03               	btfss	3,2
  2109  0808  1FF5               	btfss	___xxtofl@val+3,7
  2110  0809  281A               	goto	l3714
  2111  080A  0972               	comf	___xxtofl@val,w
  2112  080B  00A2               	movwf	___xxtofl@arg
  2113  080C  0973               	comf	___xxtofl@val+1,w
  2114  080D  00A3               	movwf	___xxtofl@arg+1
  2115  080E  0974               	comf	___xxtofl@val+2,w
  2116  080F  00A4               	movwf	___xxtofl@arg+2
  2117  0810  0975               	comf	___xxtofl@val+3,w
  2118  0811  00A5               	movwf	___xxtofl@arg+3
  2119  0812  0AA2               	incf	___xxtofl@arg,f
  2120  0813  1903               	skipnz
  2121  0814  0AA3               	incf	___xxtofl@arg+1,f
  2122  0815  1903               	skipnz
  2123  0816  0AA4               	incf	___xxtofl@arg+2,f
  2124  0817  1903               	skipnz
  2125  0818  0AA5               	incf	___xxtofl@arg+3,f
  2126  0819  2822               	goto	l879
  2127  081A                     l3714:	
  2128  081A  0875               	movf	___xxtofl@val+3,w
  2129  081B  00A5               	movwf	___xxtofl@arg+3
  2130  081C  0874               	movf	___xxtofl@val+2,w
  2131  081D  00A4               	movwf	___xxtofl@arg+2
  2132  081E  0873               	movf	___xxtofl@val+1,w
  2133  081F  00A3               	movwf	___xxtofl@arg+1
  2134  0820  0872               	movf	___xxtofl@val,w
  2135  0821  00A2               	movwf	___xxtofl@arg
  2136  0822                     l879:	
  2137  0822  0875               	movf	___xxtofl@val+3,w
  2138  0823  0474               	iorwf	___xxtofl@val+2,w
  2139  0824  0473               	iorwf	___xxtofl@val+1,w
  2140  0825  0472               	iorwf	___xxtofl@val,w
  2141  0826  1D03               	skipz
  2142  0827  2831               	goto	l3720
  2143  0828  3000               	movlw	0
  2144  0829  00F5               	movwf	?___xxtofl+3
  2145  082A  3000               	movlw	0
  2146  082B  00F4               	movwf	?___xxtofl+2
  2147  082C  3000               	movlw	0
  2148  082D  00F3               	movwf	?___xxtofl+1
  2149  082E  3000               	movlw	0
  2150  082F  00F2               	movwf	?___xxtofl
  2151  0830  0008               	return
  2152  0831                     l3720:	
  2153  0831  3096               	movlw	150
  2154  0832  00F6               	movwf	??___xxtofl
  2155  0833  0876               	movf	??___xxtofl,w
  2156  0834  00A1               	movwf	___xxtofl@exp
  2157  0835                     l3724:	
  2158  0835  30FE               	movlw	254
  2159  0836  0525               	andwf	___xxtofl@arg+3,w
  2160  0837  1903               	btfsc	3,2
  2161  0838  2862               	goto	l885
  2162  0839  3001               	movlw	1
  2163  083A  00F6               	movwf	??___xxtofl
  2164  083B  0876               	movf	??___xxtofl,w
  2165  083C  07A1               	addwf	___xxtofl@exp,f
  2166  083D  3001               	movlw	1
  2167  083E                     u3745:	
  2168  083E  1003               	clrc
  2169  083F  0CA5               	rrf	___xxtofl@arg+3,f
  2170  0840  0CA4               	rrf	___xxtofl@arg+2,f
  2171  0841  0CA3               	rrf	___xxtofl@arg+1,f
  2172  0842  0CA2               	rrf	___xxtofl@arg,f
  2173  0843  3EFF               	addlw	-1
  2174  0844  1D03               	skipz
  2175  0845  283E               	goto	u3745
  2176  0846  2835               	goto	l3724
  2177  0847                     l3726:	
  2178  0847  3001               	movlw	1
  2179  0848  00F6               	movwf	??___xxtofl
  2180  0849  0876               	movf	??___xxtofl,w
  2181  084A  07A1               	addwf	___xxtofl@exp,f
  2182  084B  3001               	movlw	1
  2183  084C  07A2               	addwf	___xxtofl@arg,f
  2184  084D  3000               	movlw	0
  2185  084E  1803               	skipnc
  2186  084F  3001               	movlw	1
  2187  0850  07A3               	addwf	___xxtofl@arg+1,f
  2188  0851  3000               	movlw	0
  2189  0852  1803               	skipnc
  2190  0853  3001               	movlw	1
  2191  0854  07A4               	addwf	___xxtofl@arg+2,f
  2192  0855  3000               	movlw	0
  2193  0856  1803               	skipnc
  2194  0857  3001               	movlw	1
  2195  0858  07A5               	addwf	___xxtofl@arg+3,f
  2196  0859  3001               	movlw	1
  2197  085A                     u3765:	
  2198  085A  1003               	clrc
  2199  085B  0CA5               	rrf	___xxtofl@arg+3,f
  2200  085C  0CA4               	rrf	___xxtofl@arg+2,f
  2201  085D  0CA3               	rrf	___xxtofl@arg+1,f
  2202  085E  0CA2               	rrf	___xxtofl@arg,f
  2203  085F  3EFF               	addlw	-1
  2204  0860  1D03               	skipz
  2205  0861  285A               	goto	u3765
  2206  0862                     l885:	
  2207  0862  30FF               	movlw	255
  2208  0863  0525               	andwf	___xxtofl@arg+3,w
  2209  0864  1903               	btfsc	3,2
  2210  0865  2876               	goto	l3734
  2211  0866  2847               	goto	l3726
  2212  0867                     l3736:	
  2213  0867  3002               	movlw	2
  2214  0868  0221               	subwf	___xxtofl@exp,w
  2215  0869  1C03               	btfss	3,0
  2216  086A  2878               	goto	l892
  2217  086B  3001               	movlw	1
  2218  086C  02A1               	subwf	___xxtofl@exp,f
  2219  086D  3001               	movlw	1
  2220  086E  00F6               	movwf	??___xxtofl
  2221  086F                     u3785:	
  2222  086F  1003               	clrc
  2223  0870  0DA2               	rlf	___xxtofl@arg,f
  2224  0871  0DA3               	rlf	___xxtofl@arg+1,f
  2225  0872  0DA4               	rlf	___xxtofl@arg+2,f
  2226  0873  0DA5               	rlf	___xxtofl@arg+3,f
  2227  0874  0BF6               	decfsz	??___xxtofl,f
  2228  0875  286F               	goto	u3785
  2229  0876                     l3734:	
  2230  0876  1FA4               	btfss	___xxtofl@arg+2,7
  2231  0877  2867               	goto	l3736
  2232  0878                     l892:	
  2233  0878  1821               	btfsc	___xxtofl@exp,0
  2234  0879  2882               	goto	l893
  2235  087A  30FF               	movlw	255
  2236  087B  05A2               	andwf	___xxtofl@arg,f
  2237  087C  30FF               	movlw	255
  2238  087D  05A3               	andwf	___xxtofl@arg+1,f
  2239  087E  307F               	movlw	127
  2240  087F  05A4               	andwf	___xxtofl@arg+2,f
  2241  0880  30FF               	movlw	255
  2242  0881  05A5               	andwf	___xxtofl@arg+3,f
  2243  0882                     l893:	
  2244  0882  1003               	clrc
  2245  0883  0CA1               	rrf	___xxtofl@exp,f
  2246  0884  0821               	movf	___xxtofl@exp,w
  2247  0885  00F6               	movwf	??___xxtofl
  2248  0886  01F7               	clrf	??___xxtofl+1
  2249  0887  01F8               	clrf	??___xxtofl+2
  2250  0888  01F9               	clrf	??___xxtofl+3
  2251  0889  3018               	movlw	24
  2252  088A                     u3825:	
  2253  088A  1003               	clrc
  2254  088B  0DF6               	rlf	??___xxtofl,f
  2255  088C  0DF7               	rlf	??___xxtofl+1,f
  2256  088D  0DF8               	rlf	??___xxtofl+2,f
  2257  088E  0DF9               	rlf	??___xxtofl+3,f
  2258  088F  3EFF               	addlw	-1
  2259  0890  1D03               	skipz
  2260  0891  288A               	goto	u3825
  2261  0892  0876               	movf	??___xxtofl,w
  2262  0893  04A2               	iorwf	___xxtofl@arg,f
  2263  0894  0877               	movf	??___xxtofl+1,w
  2264  0895  04A3               	iorwf	___xxtofl@arg+1,f
  2265  0896  0878               	movf	??___xxtofl+2,w
  2266  0897  04A4               	iorwf	___xxtofl@arg+2,f
  2267  0898  0879               	movf	??___xxtofl+3,w
  2268  0899  04A5               	iorwf	___xxtofl@arg+3,f
  2269  089A  0820               	movf	___xxtofl@sign,w
  2270  089B  1D03               	btfss	3,2
  2271  089C  1FF5               	btfss	___xxtofl@val+3,7
  2272  089D  289F               	goto	l3748
  2273  089E  17A5               	bsf	___xxtofl@arg+3,7
  2274  089F                     l3748:	
  2275  089F  0825               	movf	___xxtofl@arg+3,w
  2276  08A0  00F5               	movwf	?___xxtofl+3
  2277  08A1  0824               	movf	___xxtofl@arg+2,w
  2278  08A2  00F4               	movwf	?___xxtofl+2
  2279  08A3  0823               	movf	___xxtofl@arg+1,w
  2280  08A4  00F3               	movwf	?___xxtofl+1
  2281  08A5  0822               	movf	___xxtofl@arg,w
  2282  08A6  00F2               	movwf	?___xxtofl
  2283  08A7  0008               	return
  2284  08A8                     __end_of___xxtofl:	
  2285                           
  2286                           	psect	text4
  2287  158A                     __ptext4:	
  2288 ;; *************** function ___fltol *****************
  2289 ;; Defined at:
  2290 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  f1              4    0[BANK1 ] unsigned char 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  exp1            1   79[BANK0 ] unsigned char 
  2295 ;;  sign1           1   78[BANK0 ] unsigned char 
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  4    0[BANK1 ] long 
  2298 ;; Registers used:
  2299 ;;		wreg, status,2, status,0
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2305 ;;      Params:         0       0       4       0       0
  2306 ;;      Locals:         0       2       0       0       0
  2307 ;;      Temps:          0       0       5       0       0
  2308 ;;      Totals:         0       2       9       0       0
  2309 ;;Total ram usage:       11 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; Hardware stack levels required when called:    1
  2312 ;; This function calls:
  2313 ;;		Nothing
  2314 ;; This function is called by:
  2315 ;;		_temp_objeto
  2316 ;;		_temp_ambiente
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           
  2321                           ;psect for function ___fltol
  2322  158A                     ___fltol:	
  2323                           
  2324                           ;incstack = 0
  2325                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2326  158A  1003               	clrc
  2327  158B  1683               	bsf	3,5	;RP0=1, select bank1
  2328  158C  1303               	bcf	3,6	;RP1=0, select bank1
  2329  158D  0D22               	rlf	(___fltol@f1+2)^(0+128),w
  2330  158E  0D23               	rlf	(___fltol@f1+3)^(0+128),w
  2331  158F  00A4               	movwf	??___fltol^(0+128)
  2332  1590  0824               	movf	??___fltol^(0+128),w
  2333  1591  1283               	bcf	3,5	;RP0=0, select bank0
  2334  1592  1303               	bcf	3,6	;RP1=0, select bank0
  2335  1593  00EF               	movwf	___fltol@exp1
  2336  1594  086F               	movf	___fltol@exp1,w
  2337  1595  1D03               	btfss	3,2
  2338  1596  2DA2               	goto	l3202
  2339  1597                     l3198:	
  2340  1597  3000               	movlw	0
  2341  1598  1683               	bsf	3,5	;RP0=1, select bank1
  2342  1599  1303               	bcf	3,6	;RP1=0, select bank1
  2343  159A  00A3               	movwf	(?___fltol+3)^(0+128)
  2344  159B  3000               	movlw	0
  2345  159C  00A2               	movwf	(?___fltol+2)^(0+128)
  2346  159D  3000               	movlw	0
  2347  159E  00A1               	movwf	(?___fltol+1)^(0+128)
  2348  159F  3000               	movlw	0
  2349  15A0  00A0               	movwf	?___fltol^(0+128)
  2350  15A1  0008               	return
  2351  15A2                     l3202:	
  2352  15A2  1683               	bsf	3,5	;RP0=1, select bank1
  2353  15A3  1303               	bcf	3,6	;RP1=0, select bank1
  2354  15A4  0820               	movf	___fltol@f1^(0+128),w
  2355  15A5  00A4               	movwf	??___fltol^(0+128)
  2356  15A6  0821               	movf	(___fltol@f1+1)^(0+128),w
  2357  15A7  00A5               	movwf	(??___fltol^(0+128)+1)
  2358  15A8  0822               	movf	(___fltol@f1+2)^(0+128),w
  2359  15A9  00A6               	movwf	(??___fltol^(0+128)+2)
  2360  15AA  0823               	movf	(___fltol@f1+3)^(0+128),w
  2361  15AB  00A7               	movwf	(??___fltol^(0+128)+3)
  2362  15AC  301F               	movlw	31
  2363  15AD                     u2505:	
  2364  15AD  1003               	clrc
  2365  15AE  0CA7               	rrf	(??___fltol^(0+128)+3),f
  2366  15AF  0CA6               	rrf	(??___fltol^(0+128)+2),f
  2367  15B0  0CA5               	rrf	(??___fltol^(0+128)+1),f
  2368  15B1  0CA4               	rrf	??___fltol^(0+128),f
  2369  15B2  3EFF               	addlw	-1
  2370  15B3  1D03               	skipz
  2371  15B4  2DAD               	goto	u2505
  2372  15B5  0824               	movf	??___fltol^(0+128),w
  2373  15B6  00A8               	movwf	(??___fltol+4)^(0+128)
  2374  15B7  0828               	movf	(??___fltol+4)^(0+128),w
  2375  15B8  1283               	bcf	3,5	;RP0=0, select bank0
  2376  15B9  1303               	bcf	3,6	;RP1=0, select bank0
  2377  15BA  00EE               	movwf	___fltol@sign1
  2378  15BB  1683               	bsf	3,5	;RP0=1, select bank1
  2379  15BC  1303               	bcf	3,6	;RP1=0, select bank1
  2380  15BD  17A2               	bsf	(___fltol@f1^(0+128)+2),7
  2381  15BE  30FF               	movlw	255
  2382  15BF  05A0               	andwf	___fltol@f1^(0+128),f
  2383  15C0  30FF               	movlw	255
  2384  15C1  05A1               	andwf	(___fltol@f1+1)^(0+128),f
  2385  15C2  30FF               	movlw	255
  2386  15C3  05A2               	andwf	(___fltol@f1+2)^(0+128),f
  2387  15C4  3000               	movlw	0
  2388  15C5  05A3               	andwf	(___fltol@f1+3)^(0+128),f
  2389  15C6  3096               	movlw	150
  2390  15C7  1283               	bcf	3,5	;RP0=0, select bank0
  2391  15C8  1303               	bcf	3,6	;RP1=0, select bank0
  2392  15C9  02EF               	subwf	___fltol@exp1,f
  2393  15CA  1FEF               	btfss	___fltol@exp1,7
  2394  15CB  2DE5               	goto	l3220
  2395  15CC  086F               	movf	___fltol@exp1,w
  2396  15CD  3A80               	xorlw	128
  2397  15CE  3E97               	addlw	151
  2398  15CF  1C03               	btfss	3,0
  2399  15D0  2D97               	goto	l3198
  2400  15D1                     l3218:	
  2401  15D1  3001               	movlw	1
  2402  15D2                     u2535:	
  2403  15D2  1003               	clrc
  2404  15D3  1683               	bsf	3,5	;RP0=1, select bank1
  2405  15D4  1303               	bcf	3,6	;RP1=0, select bank1
  2406  15D5  0CA3               	rrf	(___fltol@f1+3)^(0+128),f
  2407  15D6  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
  2408  15D7  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
  2409  15D8  0CA0               	rrf	___fltol@f1^(0+128),f
  2410  15D9  3EFF               	addlw	-1
  2411  15DA  1D03               	skipz
  2412  15DB  2DD2               	goto	u2535
  2413  15DC  3001               	movlw	1
  2414  15DD  00A4               	movwf	??___fltol^(0+128)
  2415  15DE  0824               	movf	??___fltol^(0+128),w
  2416  15DF  1283               	bcf	3,5	;RP0=0, select bank0
  2417  15E0  1303               	bcf	3,6	;RP1=0, select bank0
  2418  15E1  07EF               	addwf	___fltol@exp1,f
  2419  15E2  1903               	btfsc	3,2
  2420  15E3  2DFC               	goto	l3228
  2421  15E4  2DD1               	goto	l3218
  2422  15E5                     l3220:	
  2423  15E5  3020               	movlw	32
  2424  15E6  026F               	subwf	___fltol@exp1,w
  2425  15E7  1803               	btfsc	3,0
  2426  15E8  2D97               	goto	l3198
  2427  15E9                     l645:	
  2428  15E9  086F               	movf	___fltol@exp1,w
  2429  15EA  1903               	btfsc	3,2
  2430  15EB  2DFC               	goto	l3228
  2431  15EC  3001               	movlw	1
  2432  15ED  1683               	bsf	3,5	;RP0=1, select bank1
  2433  15EE  1303               	bcf	3,6	;RP1=0, select bank1
  2434  15EF  00A4               	movwf	??___fltol^(0+128)
  2435  15F0                     u2565:	
  2436  15F0  1003               	clrc
  2437  15F1  0DA0               	rlf	___fltol@f1^(0+128),f
  2438  15F2  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
  2439  15F3  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
  2440  15F4  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
  2441  15F5  0BA4               	decfsz	??___fltol^(0+128),f
  2442  15F6  2DF0               	goto	u2565
  2443  15F7  3001               	movlw	1
  2444  15F8  1283               	bcf	3,5	;RP0=0, select bank0
  2445  15F9  1303               	bcf	3,6	;RP1=0, select bank0
  2446  15FA  02EF               	subwf	___fltol@exp1,f
  2447  15FB  2DE9               	goto	l645
  2448  15FC                     l3228:	
  2449  15FC  086E               	movf	___fltol@sign1,w
  2450  15FD  1903               	btfsc	3,2
  2451  15FE  0008               	return
  2452  15FF  1683               	bsf	3,5	;RP0=1, select bank1
  2453  1600  1303               	bcf	3,6	;RP1=0, select bank1
  2454  1601  09A0               	comf	___fltol@f1^(0+128),f
  2455  1602  09A1               	comf	(___fltol@f1+1)^(0+128),f
  2456  1603  09A2               	comf	(___fltol@f1+2)^(0+128),f
  2457  1604  09A3               	comf	(___fltol@f1+3)^(0+128),f
  2458  1605  0AA0               	incf	___fltol@f1^(0+128),f
  2459  1606  1903               	skipnz
  2460  1607  0AA1               	incf	(___fltol@f1+1)^(0+128),f
  2461  1608  1903               	skipnz
  2462  1609  0AA2               	incf	(___fltol@f1+2)^(0+128),f
  2463  160A  1903               	skipnz
  2464  160B  0AA3               	incf	(___fltol@f1+3)^(0+128),f
  2465  160C  0008               	return
  2466  160D                     __end_of___fltol:	
  2467                           
  2468                           	psect	text5
  2469  002F                     __ptext5:	
  2470 ;; *************** function ___flmul *****************
  2471 ;; Defined at:
  2472 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  b               4    6[BANK0 ] long 
  2475 ;;  a               4   10[BANK0 ] long 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  prod            4   26[BANK0 ] struct .
  2478 ;;  grs             4   21[BANK0 ] unsigned long 
  2479 ;;  temp            2   30[BANK0 ] struct .
  2480 ;;  bexp            1   25[BANK0 ] unsigned char 
  2481 ;;  aexp            1   20[BANK0 ] unsigned char 
  2482 ;;  sign            1   19[BANK0 ] unsigned char 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  4    6[BANK0 ] unsigned char 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2492 ;;      Params:         0       8       0       0       0
  2493 ;;      Locals:         0      13       0       0       0
  2494 ;;      Temps:          0       5       0       0       0
  2495 ;;      Totals:         0      26       0       0       0
  2496 ;;Total ram usage:       26 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; Hardware stack levels required when called:    2
  2499 ;; This function calls:
  2500 ;;		__Umul8_16
  2501 ;; This function is called by:
  2502 ;;		_temp_objeto
  2503 ;;		_temp_ambiente
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           
  2508                           ;psect for function ___flmul
  2509  002F                     ___flmul:	
  2510                           
  2511                           ;incstack = 0
  2512                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2513  002F  1283               	bcf	3,5	;RP0=0, select bank0
  2514  0030  1303               	bcf	3,6	;RP1=0, select bank0
  2515  0031  0829               	movf	___flmul@b+3,w
  2516  0032  3980               	andlw	128
  2517  0033  00AE               	movwf	??___flmul
  2518  0034  082E               	movf	??___flmul,w
  2519  0035  00B3               	movwf	___flmul@sign
  2520  0036  0829               	movf	___flmul@b+3,w
  2521  0037  00AE               	movwf	??___flmul
  2522  0038  072E               	addwf	??___flmul,w
  2523  0039  00AF               	movwf	??___flmul+1
  2524  003A  082F               	movf	??___flmul+1,w
  2525  003B  00B9               	movwf	___flmul@bexp
  2526  003C  1BA8               	btfsc	___flmul@b+2,7
  2527  003D  1439               	bsf	___flmul@bexp,0
  2528  003E  0839               	movf	___flmul@bexp,w
  2529  003F  1903               	btfsc	3,2
  2530  0040  284E               	goto	l4720
  2531  0041  0A39               	incf	___flmul@bexp,w
  2532  0042  1D03               	btfss	3,2
  2533  0043  284C               	goto	l4718
  2534  0044  3000               	movlw	0
  2535  0045  00A9               	movwf	___flmul@b+3
  2536  0046  3000               	movlw	0
  2537  0047  00A8               	movwf	___flmul@b+2
  2538  0048  3000               	movlw	0
  2539  0049  00A7               	movwf	___flmul@b+1
  2540  004A  3000               	movlw	0
  2541  004B  00A6               	movwf	___flmul@b
  2542  004C                     l4718:	
  2543  004C  17A8               	bsf	___flmul@b+2,7
  2544  004D  2856               	goto	l4722
  2545  004E                     l4720:	
  2546  004E  3000               	movlw	0
  2547  004F  00A9               	movwf	___flmul@b+3
  2548  0050  3000               	movlw	0
  2549  0051  00A8               	movwf	___flmul@b+2
  2550  0052  3000               	movlw	0
  2551  0053  00A7               	movwf	___flmul@b+1
  2552  0054  3000               	movlw	0
  2553  0055  00A6               	movwf	___flmul@b
  2554  0056                     l4722:	
  2555  0056  082D               	movf	___flmul@a+3,w
  2556  0057  3980               	andlw	128
  2557  0058  00AE               	movwf	??___flmul
  2558  0059  082E               	movf	??___flmul,w
  2559  005A  06B3               	xorwf	___flmul@sign,f
  2560  005B  082D               	movf	___flmul@a+3,w
  2561  005C  00AE               	movwf	??___flmul
  2562  005D  072E               	addwf	??___flmul,w
  2563  005E  00AF               	movwf	??___flmul+1
  2564  005F  082F               	movf	??___flmul+1,w
  2565  0060  00B4               	movwf	___flmul@aexp
  2566  0061  1BAC               	btfsc	___flmul@a+2,7
  2567  0062  1434               	bsf	___flmul@aexp,0
  2568  0063  0834               	movf	___flmul@aexp,w
  2569  0064  1903               	btfsc	3,2
  2570  0065  2873               	goto	l4738
  2571  0066  0A34               	incf	___flmul@aexp,w
  2572  0067  1D03               	btfss	3,2
  2573  0068  2871               	goto	l4736
  2574  0069  3000               	movlw	0
  2575  006A  00AD               	movwf	___flmul@a+3
  2576  006B  3000               	movlw	0
  2577  006C  00AC               	movwf	___flmul@a+2
  2578  006D  3000               	movlw	0
  2579  006E  00AB               	movwf	___flmul@a+1
  2580  006F  3000               	movlw	0
  2581  0070  00AA               	movwf	___flmul@a
  2582  0071                     l4736:	
  2583  0071  17AC               	bsf	___flmul@a+2,7
  2584  0072  287B               	goto	l4740
  2585  0073                     l4738:	
  2586  0073  3000               	movlw	0
  2587  0074  00AD               	movwf	___flmul@a+3
  2588  0075  3000               	movlw	0
  2589  0076  00AC               	movwf	___flmul@a+2
  2590  0077  3000               	movlw	0
  2591  0078  00AB               	movwf	___flmul@a+1
  2592  0079  3000               	movlw	0
  2593  007A  00AA               	movwf	___flmul@a
  2594  007B                     l4740:	
  2595  007B  0834               	movf	___flmul@aexp,w
  2596  007C  1D03               	btfss	3,2
  2597  007D  0839               	movf	___flmul@bexp,w
  2598  007E  1D03               	btfss	3,2
  2599  007F  2889               	goto	l4748
  2600  0080  3000               	movlw	0
  2601  0081  00A9               	movwf	?___flmul+3
  2602  0082  3000               	movlw	0
  2603  0083  00A8               	movwf	?___flmul+2
  2604  0084  3000               	movlw	0
  2605  0085  00A7               	movwf	?___flmul+1
  2606  0086  3000               	movlw	0
  2607  0087  00A6               	movwf	?___flmul
  2608  0088  0008               	return
  2609  0089                     l4748:	
  2610  0089  0826               	movf	___flmul@b,w
  2611  008A  00AE               	movwf	??___flmul
  2612  008B  082E               	movf	??___flmul,w
  2613  008C  00F2               	movwf	__Umul8_16@multiplicand
  2614  008D  082C               	movf	___flmul@a+2,w
  2615  008E  120A  118A  27D9  120A  118A  	fcall	__Umul8_16
  2616  0093  0873               	movf	?__Umul8_16+1,w
  2617  0094  1283               	bcf	3,5	;RP0=0, select bank0
  2618  0095  1303               	bcf	3,6	;RP1=0, select bank0
  2619  0096  00BF               	movwf	___flmul@temp+1
  2620  0097  0872               	movf	?__Umul8_16,w
  2621  0098  00BE               	movwf	___flmul@temp
  2622  0099  083E               	movf	___flmul@temp,w
  2623  009A  00AE               	movwf	??___flmul
  2624  009B  01AF               	clrf	??___flmul+1
  2625  009C  01B0               	clrf	??___flmul+2
  2626  009D  01B1               	clrf	??___flmul+3
  2627  009E  0831               	movf	??___flmul+3,w
  2628  009F  00B8               	movwf	___flmul@grs+3
  2629  00A0  0830               	movf	??___flmul+2,w
  2630  00A1  00B7               	movwf	___flmul@grs+2
  2631  00A2  082F               	movf	??___flmul+1,w
  2632  00A3  00B6               	movwf	___flmul@grs+1
  2633  00A4  082E               	movf	??___flmul,w
  2634  00A5  00B5               	movwf	___flmul@grs
  2635  00A6  083F               	movf	___flmul@temp+1,w
  2636  00A7  00AE               	movwf	??___flmul
  2637  00A8  01AF               	clrf	??___flmul+1
  2638  00A9  01B0               	clrf	??___flmul+2
  2639  00AA  01B1               	clrf	??___flmul+3
  2640  00AB  0831               	movf	??___flmul+3,w
  2641  00AC  00BD               	movwf	___flmul@prod+3
  2642  00AD  0830               	movf	??___flmul+2,w
  2643  00AE  00BC               	movwf	___flmul@prod+2
  2644  00AF  082F               	movf	??___flmul+1,w
  2645  00B0  00BB               	movwf	___flmul@prod+1
  2646  00B1  082E               	movf	??___flmul,w
  2647  00B2  00BA               	movwf	___flmul@prod
  2648  00B3  0827               	movf	___flmul@b+1,w
  2649  00B4  00AE               	movwf	??___flmul
  2650  00B5  082E               	movf	??___flmul,w
  2651  00B6  00F2               	movwf	__Umul8_16@multiplicand
  2652  00B7  082B               	movf	___flmul@a+1,w
  2653  00B8  120A  118A  27D9  120A  118A  	fcall	__Umul8_16
  2654  00BD  0873               	movf	?__Umul8_16+1,w
  2655  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  2656  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  2657  00C0  00BF               	movwf	___flmul@temp+1
  2658  00C1  0872               	movf	?__Umul8_16,w
  2659  00C2  00BE               	movwf	___flmul@temp
  2660  00C3  083E               	movf	___flmul@temp,w
  2661  00C4  00AE               	movwf	??___flmul
  2662  00C5  01AF               	clrf	??___flmul+1
  2663  00C6  01B0               	clrf	??___flmul+2
  2664  00C7  01B1               	clrf	??___flmul+3
  2665  00C8  082E               	movf	??___flmul,w
  2666  00C9  07B5               	addwf	___flmul@grs,f
  2667  00CA  082F               	movf	??___flmul+1,w
  2668  00CB  1103               	clrz
  2669  00CC  1803               	skipnc
  2670  00CD  3E01               	addlw	1
  2671  00CE  1D03               	btfss	3,2
  2672  00CF  07B6               	addwf	___flmul@grs+1,f
  2673  00D0  0830               	movf	??___flmul+2,w
  2674  00D1  1103               	clrz
  2675  00D2  1803               	skipnc
  2676  00D3  3E01               	addlw	1
  2677  00D4  1D03               	btfss	3,2
  2678  00D5  07B7               	addwf	___flmul@grs+2,f
  2679  00D6  0831               	movf	??___flmul+3,w
  2680  00D7  1103               	clrz
  2681  00D8  1803               	skipnc
  2682  00D9  3E01               	addlw	1
  2683  00DA  1D03               	btfss	3,2
  2684  00DB  07B8               	addwf	___flmul@grs+3,f
  2685  00DC  083F               	movf	___flmul@temp+1,w
  2686  00DD  00AE               	movwf	??___flmul
  2687  00DE  01AF               	clrf	??___flmul+1
  2688  00DF  01B0               	clrf	??___flmul+2
  2689  00E0  01B1               	clrf	??___flmul+3
  2690  00E1  082E               	movf	??___flmul,w
  2691  00E2  07BA               	addwf	___flmul@prod,f
  2692  00E3  082F               	movf	??___flmul+1,w
  2693  00E4  1103               	clrz
  2694  00E5  1803               	skipnc
  2695  00E6  3E01               	addlw	1
  2696  00E7  1D03               	btfss	3,2
  2697  00E8  07BB               	addwf	___flmul@prod+1,f
  2698  00E9  0830               	movf	??___flmul+2,w
  2699  00EA  1103               	clrz
  2700  00EB  1803               	skipnc
  2701  00EC  3E01               	addlw	1
  2702  00ED  1D03               	btfss	3,2
  2703  00EE  07BC               	addwf	___flmul@prod+2,f
  2704  00EF  0831               	movf	??___flmul+3,w
  2705  00F0  1103               	clrz
  2706  00F1  1803               	skipnc
  2707  00F2  3E01               	addlw	1
  2708  00F3  1D03               	btfss	3,2
  2709  00F4  07BD               	addwf	___flmul@prod+3,f
  2710  00F5  0828               	movf	___flmul@b+2,w
  2711  00F6  00AE               	movwf	??___flmul
  2712  00F7  082E               	movf	??___flmul,w
  2713  00F8  00F2               	movwf	__Umul8_16@multiplicand
  2714  00F9  082A               	movf	___flmul@a,w
  2715  00FA  120A  118A  27D9  120A  118A  	fcall	__Umul8_16
  2716  00FF  0873               	movf	?__Umul8_16+1,w
  2717  0100  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0101  1303               	bcf	3,6	;RP1=0, select bank0
  2719  0102  00BF               	movwf	___flmul@temp+1
  2720  0103  0872               	movf	?__Umul8_16,w
  2721  0104  00BE               	movwf	___flmul@temp
  2722  0105  083E               	movf	___flmul@temp,w
  2723  0106  00AE               	movwf	??___flmul
  2724  0107  01AF               	clrf	??___flmul+1
  2725  0108  01B0               	clrf	??___flmul+2
  2726  0109  01B1               	clrf	??___flmul+3
  2727  010A  082E               	movf	??___flmul,w
  2728  010B  07B5               	addwf	___flmul@grs,f
  2729  010C  082F               	movf	??___flmul+1,w
  2730  010D  1103               	clrz
  2731  010E  1803               	skipnc
  2732  010F  3E01               	addlw	1
  2733  0110  1D03               	btfss	3,2
  2734  0111  07B6               	addwf	___flmul@grs+1,f
  2735  0112  0830               	movf	??___flmul+2,w
  2736  0113  1103               	clrz
  2737  0114  1803               	skipnc
  2738  0115  3E01               	addlw	1
  2739  0116  1D03               	btfss	3,2
  2740  0117  07B7               	addwf	___flmul@grs+2,f
  2741  0118  0831               	movf	??___flmul+3,w
  2742  0119  1103               	clrz
  2743  011A  1803               	skipnc
  2744  011B  3E01               	addlw	1
  2745  011C  1D03               	btfss	3,2
  2746  011D  07B8               	addwf	___flmul@grs+3,f
  2747  011E  083F               	movf	___flmul@temp+1,w
  2748  011F  00AE               	movwf	??___flmul
  2749  0120  01AF               	clrf	??___flmul+1
  2750  0121  01B0               	clrf	??___flmul+2
  2751  0122  01B1               	clrf	??___flmul+3
  2752  0123  082E               	movf	??___flmul,w
  2753  0124  07BA               	addwf	___flmul@prod,f
  2754  0125  082F               	movf	??___flmul+1,w
  2755  0126  1103               	clrz
  2756  0127  1803               	skipnc
  2757  0128  3E01               	addlw	1
  2758  0129  1D03               	btfss	3,2
  2759  012A  07BB               	addwf	___flmul@prod+1,f
  2760  012B  0830               	movf	??___flmul+2,w
  2761  012C  1103               	clrz
  2762  012D  1803               	skipnc
  2763  012E  3E01               	addlw	1
  2764  012F  1D03               	btfss	3,2
  2765  0130  07BC               	addwf	___flmul@prod+2,f
  2766  0131  0831               	movf	??___flmul+3,w
  2767  0132  1103               	clrz
  2768  0133  1803               	skipnc
  2769  0134  3E01               	addlw	1
  2770  0135  1D03               	btfss	3,2
  2771  0136  07BD               	addwf	___flmul@prod+3,f
  2772  0137  3008               	movlw	8
  2773  0138  00AE               	movwf	??___flmul
  2774  0139                     u4435:	
  2775  0139  1003               	clrc
  2776  013A  0DB5               	rlf	___flmul@grs,f
  2777  013B  0DB6               	rlf	___flmul@grs+1,f
  2778  013C  0DB7               	rlf	___flmul@grs+2,f
  2779  013D  0DB8               	rlf	___flmul@grs+3,f
  2780  013E  0BAE               	decfsz	??___flmul,f
  2781  013F  2939               	goto	u4435
  2782  0140  0827               	movf	___flmul@b+1,w
  2783  0141  00AE               	movwf	??___flmul
  2784  0142  082E               	movf	??___flmul,w
  2785  0143  00F2               	movwf	__Umul8_16@multiplicand
  2786  0144  082A               	movf	___flmul@a,w
  2787  0145  120A  118A  27D9  120A  118A  	fcall	__Umul8_16
  2788  014A  0873               	movf	?__Umul8_16+1,w
  2789  014B  1283               	bcf	3,5	;RP0=0, select bank0
  2790  014C  1303               	bcf	3,6	;RP1=0, select bank0
  2791  014D  00BF               	movwf	___flmul@temp+1
  2792  014E  0872               	movf	?__Umul8_16,w
  2793  014F  00BE               	movwf	___flmul@temp
  2794  0150  083E               	movf	___flmul@temp,w
  2795  0151  00AE               	movwf	??___flmul
  2796  0152  083F               	movf	___flmul@temp+1,w
  2797  0153  00AF               	movwf	??___flmul+1
  2798  0154  01B0               	clrf	??___flmul+2
  2799  0155  01B1               	clrf	??___flmul+3
  2800  0156  082E               	movf	??___flmul,w
  2801  0157  07B5               	addwf	___flmul@grs,f
  2802  0158  082F               	movf	??___flmul+1,w
  2803  0159  1103               	clrz
  2804  015A  1803               	skipnc
  2805  015B  3E01               	addlw	1
  2806  015C  1D03               	btfss	3,2
  2807  015D  07B6               	addwf	___flmul@grs+1,f
  2808  015E  0830               	movf	??___flmul+2,w
  2809  015F  1103               	clrz
  2810  0160  1803               	skipnc
  2811  0161  3E01               	addlw	1
  2812  0162  1D03               	btfss	3,2
  2813  0163  07B7               	addwf	___flmul@grs+2,f
  2814  0164  0831               	movf	??___flmul+3,w
  2815  0165  1103               	clrz
  2816  0166  1803               	skipnc
  2817  0167  3E01               	addlw	1
  2818  0168  1D03               	btfss	3,2
  2819  0169  07B8               	addwf	___flmul@grs+3,f
  2820  016A  0826               	movf	___flmul@b,w
  2821  016B  00AE               	movwf	??___flmul
  2822  016C  082E               	movf	??___flmul,w
  2823  016D  00F2               	movwf	__Umul8_16@multiplicand
  2824  016E  082B               	movf	___flmul@a+1,w
  2825  016F  120A  118A  27D9  120A  118A  	fcall	__Umul8_16
  2826  0174  0873               	movf	?__Umul8_16+1,w
  2827  0175  1283               	bcf	3,5	;RP0=0, select bank0
  2828  0176  1303               	bcf	3,6	;RP1=0, select bank0
  2829  0177  00BF               	movwf	___flmul@temp+1
  2830  0178  0872               	movf	?__Umul8_16,w
  2831  0179  00BE               	movwf	___flmul@temp
  2832  017A  083E               	movf	___flmul@temp,w
  2833  017B  00AE               	movwf	??___flmul
  2834  017C  083F               	movf	___flmul@temp+1,w
  2835  017D  00AF               	movwf	??___flmul+1
  2836  017E  01B0               	clrf	??___flmul+2
  2837  017F  01B1               	clrf	??___flmul+3
  2838  0180  082E               	movf	??___flmul,w
  2839  0181  07B5               	addwf	___flmul@grs,f
  2840  0182  082F               	movf	??___flmul+1,w
  2841  0183  1103               	clrz
  2842  0184  1803               	skipnc
  2843  0185  3E01               	addlw	1
  2844  0186  1D03               	btfss	3,2
  2845  0187  07B6               	addwf	___flmul@grs+1,f
  2846  0188  0830               	movf	??___flmul+2,w
  2847  0189  1103               	clrz
  2848  018A  1803               	skipnc
  2849  018B  3E01               	addlw	1
  2850  018C  1D03               	btfss	3,2
  2851  018D  07B7               	addwf	___flmul@grs+2,f
  2852  018E  0831               	movf	??___flmul+3,w
  2853  018F  1103               	clrz
  2854  0190  1803               	skipnc
  2855  0191  3E01               	addlw	1
  2856  0192  1D03               	btfss	3,2
  2857  0193  07B8               	addwf	___flmul@grs+3,f
  2858  0194  3008               	movlw	8
  2859  0195  00AE               	movwf	??___flmul
  2860  0196                     u4465:	
  2861  0196  1003               	clrc
  2862  0197  0DB5               	rlf	___flmul@grs,f
  2863  0198  0DB6               	rlf	___flmul@grs+1,f
  2864  0199  0DB7               	rlf	___flmul@grs+2,f
  2865  019A  0DB8               	rlf	___flmul@grs+3,f
  2866  019B  0BAE               	decfsz	??___flmul,f
  2867  019C  2996               	goto	u4465
  2868  019D  0826               	movf	___flmul@b,w
  2869  019E  00AE               	movwf	??___flmul
  2870  019F  082E               	movf	??___flmul,w
  2871  01A0  00F2               	movwf	__Umul8_16@multiplicand
  2872  01A1  082A               	movf	___flmul@a,w
  2873  01A2  120A  118A  27D9  120A  118A  	fcall	__Umul8_16
  2874  01A7  0873               	movf	?__Umul8_16+1,w
  2875  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2876  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2877  01AA  00BF               	movwf	___flmul@temp+1
  2878  01AB  0872               	movf	?__Umul8_16,w
  2879  01AC  00BE               	movwf	___flmul@temp
  2880  01AD  083E               	movf	___flmul@temp,w
  2881  01AE  00AE               	movwf	??___flmul
  2882  01AF  083F               	movf	___flmul@temp+1,w
  2883  01B0  00AF               	movwf	??___flmul+1
  2884  01B1  01B0               	clrf	??___flmul+2
  2885  01B2  01B1               	clrf	??___flmul+3
  2886  01B3  082E               	movf	??___flmul,w
  2887  01B4  07B5               	addwf	___flmul@grs,f
  2888  01B5  082F               	movf	??___flmul+1,w
  2889  01B6  1103               	clrz
  2890  01B7  1803               	skipnc
  2891  01B8  3E01               	addlw	1
  2892  01B9  1D03               	btfss	3,2
  2893  01BA  07B6               	addwf	___flmul@grs+1,f
  2894  01BB  0830               	movf	??___flmul+2,w
  2895  01BC  1103               	clrz
  2896  01BD  1803               	skipnc
  2897  01BE  3E01               	addlw	1
  2898  01BF  1D03               	btfss	3,2
  2899  01C0  07B7               	addwf	___flmul@grs+2,f
  2900  01C1  0831               	movf	??___flmul+3,w
  2901  01C2  1103               	clrz
  2902  01C3  1803               	skipnc
  2903  01C4  3E01               	addlw	1
  2904  01C5  1D03               	btfss	3,2
  2905  01C6  07B8               	addwf	___flmul@grs+3,f
  2906  01C7  0827               	movf	___flmul@b+1,w
  2907  01C8  00AE               	movwf	??___flmul
  2908  01C9  082E               	movf	??___flmul,w
  2909  01CA  00F2               	movwf	__Umul8_16@multiplicand
  2910  01CB  082C               	movf	___flmul@a+2,w
  2911  01CC  120A  118A  27D9  120A  118A  	fcall	__Umul8_16
  2912  01D1  0873               	movf	?__Umul8_16+1,w
  2913  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  2914  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  2915  01D4  00BF               	movwf	___flmul@temp+1
  2916  01D5  0872               	movf	?__Umul8_16,w
  2917  01D6  00BE               	movwf	___flmul@temp
  2918  01D7  083E               	movf	___flmul@temp,w
  2919  01D8  00AE               	movwf	??___flmul
  2920  01D9  083F               	movf	___flmul@temp+1,w
  2921  01DA  00AF               	movwf	??___flmul+1
  2922  01DB  01B0               	clrf	??___flmul+2
  2923  01DC  01B1               	clrf	??___flmul+3
  2924  01DD  082E               	movf	??___flmul,w
  2925  01DE  07BA               	addwf	___flmul@prod,f
  2926  01DF  082F               	movf	??___flmul+1,w
  2927  01E0  1103               	clrz
  2928  01E1  1803               	skipnc
  2929  01E2  3E01               	addlw	1
  2930  01E3  1D03               	btfss	3,2
  2931  01E4  07BB               	addwf	___flmul@prod+1,f
  2932  01E5  0830               	movf	??___flmul+2,w
  2933  01E6  1103               	clrz
  2934  01E7  1803               	skipnc
  2935  01E8  3E01               	addlw	1
  2936  01E9  1D03               	btfss	3,2
  2937  01EA  07BC               	addwf	___flmul@prod+2,f
  2938  01EB  0831               	movf	??___flmul+3,w
  2939  01EC  1103               	clrz
  2940  01ED  1803               	skipnc
  2941  01EE  3E01               	addlw	1
  2942  01EF  1D03               	btfss	3,2
  2943  01F0  07BD               	addwf	___flmul@prod+3,f
  2944  01F1  0828               	movf	___flmul@b+2,w
  2945  01F2  00AE               	movwf	??___flmul
  2946  01F3  082E               	movf	??___flmul,w
  2947  01F4  00F2               	movwf	__Umul8_16@multiplicand
  2948  01F5  082B               	movf	___flmul@a+1,w
  2949  01F6  120A  118A  27D9  120A  118A  	fcall	__Umul8_16
  2950  01FB  0873               	movf	?__Umul8_16+1,w
  2951  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  2952  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  2953  01FE  00BF               	movwf	___flmul@temp+1
  2954  01FF  0872               	movf	?__Umul8_16,w
  2955  0200  00BE               	movwf	___flmul@temp
  2956  0201  083E               	movf	___flmul@temp,w
  2957  0202  00AE               	movwf	??___flmul
  2958  0203  083F               	movf	___flmul@temp+1,w
  2959  0204  00AF               	movwf	??___flmul+1
  2960  0205  01B0               	clrf	??___flmul+2
  2961  0206  01B1               	clrf	??___flmul+3
  2962  0207  082E               	movf	??___flmul,w
  2963  0208  07BA               	addwf	___flmul@prod,f
  2964  0209  082F               	movf	??___flmul+1,w
  2965  020A  1103               	clrz
  2966  020B  1803               	skipnc
  2967  020C  3E01               	addlw	1
  2968  020D  1D03               	btfss	3,2
  2969  020E  07BB               	addwf	___flmul@prod+1,f
  2970  020F  0830               	movf	??___flmul+2,w
  2971  0210  1103               	clrz
  2972  0211  1803               	skipnc
  2973  0212  3E01               	addlw	1
  2974  0213  1D03               	btfss	3,2
  2975  0214  07BC               	addwf	___flmul@prod+2,f
  2976  0215  0831               	movf	??___flmul+3,w
  2977  0216  1103               	clrz
  2978  0217  1803               	skipnc
  2979  0218  3E01               	addlw	1
  2980  0219  1D03               	btfss	3,2
  2981  021A  07BD               	addwf	___flmul@prod+3,f
  2982  021B  0828               	movf	___flmul@b+2,w
  2983  021C  00AE               	movwf	??___flmul
  2984  021D  082E               	movf	??___flmul,w
  2985  021E  00F2               	movwf	__Umul8_16@multiplicand
  2986  021F  082C               	movf	___flmul@a+2,w
  2987  0220  120A  118A  27D9  120A  118A  	fcall	__Umul8_16
  2988  0225  0873               	movf	?__Umul8_16+1,w
  2989  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2990  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2991  0228  00BF               	movwf	___flmul@temp+1
  2992  0229  0872               	movf	?__Umul8_16,w
  2993  022A  00BE               	movwf	___flmul@temp
  2994  022B  083E               	movf	___flmul@temp,w
  2995  022C  00AE               	movwf	??___flmul
  2996  022D  083F               	movf	___flmul@temp+1,w
  2997  022E  00AF               	movwf	??___flmul+1
  2998  022F  01B0               	clrf	??___flmul+2
  2999  0230  01B1               	clrf	??___flmul+3
  3000  0231  3008               	movlw	8
  3001  0232                     u4505:	
  3002  0232  1003               	clrc
  3003  0233  0DAE               	rlf	??___flmul,f
  3004  0234  0DAF               	rlf	??___flmul+1,f
  3005  0235  0DB0               	rlf	??___flmul+2,f
  3006  0236  0DB1               	rlf	??___flmul+3,f
  3007  0237  3EFF               	addlw	-1
  3008  0238  1D03               	skipz
  3009  0239  2A32               	goto	u4505
  3010  023A  082E               	movf	??___flmul,w
  3011  023B  07BA               	addwf	___flmul@prod,f
  3012  023C  082F               	movf	??___flmul+1,w
  3013  023D  1103               	clrz
  3014  023E  1803               	skipnc
  3015  023F  3E01               	addlw	1
  3016  0240  1D03               	btfss	3,2
  3017  0241  07BB               	addwf	___flmul@prod+1,f
  3018  0242  0830               	movf	??___flmul+2,w
  3019  0243  1103               	clrz
  3020  0244  1803               	skipnc
  3021  0245  3E01               	addlw	1
  3022  0246  1D03               	btfss	3,2
  3023  0247  07BC               	addwf	___flmul@prod+2,f
  3024  0248  0831               	movf	??___flmul+3,w
  3025  0249  1103               	clrz
  3026  024A  1803               	skipnc
  3027  024B  3E01               	addlw	1
  3028  024C  1D03               	btfss	3,2
  3029  024D  07BD               	addwf	___flmul@prod+3,f
  3030  024E  0835               	movf	___flmul@grs,w
  3031  024F  00AE               	movwf	??___flmul
  3032  0250  0836               	movf	___flmul@grs+1,w
  3033  0251  00AF               	movwf	??___flmul+1
  3034  0252  0837               	movf	___flmul@grs+2,w
  3035  0253  00B0               	movwf	??___flmul+2
  3036  0254  0838               	movf	___flmul@grs+3,w
  3037  0255  00B1               	movwf	??___flmul+3
  3038  0256  3018               	movlw	24
  3039  0257                     u4525:	
  3040  0257  1003               	clrc
  3041  0258  0CB1               	rrf	??___flmul+3,f
  3042  0259  0CB0               	rrf	??___flmul+2,f
  3043  025A  0CAF               	rrf	??___flmul+1,f
  3044  025B  0CAE               	rrf	??___flmul,f
  3045  025C  3EFF               	addlw	-1
  3046  025D  1D03               	skipz
  3047  025E  2A57               	goto	u4525
  3048  025F  082E               	movf	??___flmul,w
  3049  0260  07BA               	addwf	___flmul@prod,f
  3050  0261  082F               	movf	??___flmul+1,w
  3051  0262  1103               	clrz
  3052  0263  1803               	skipnc
  3053  0264  3E01               	addlw	1
  3054  0265  1D03               	btfss	3,2
  3055  0266  07BB               	addwf	___flmul@prod+1,f
  3056  0267  0830               	movf	??___flmul+2,w
  3057  0268  1103               	clrz
  3058  0269  1803               	skipnc
  3059  026A  3E01               	addlw	1
  3060  026B  1D03               	btfss	3,2
  3061  026C  07BC               	addwf	___flmul@prod+2,f
  3062  026D  0831               	movf	??___flmul+3,w
  3063  026E  1103               	clrz
  3064  026F  1803               	skipnc
  3065  0270  3E01               	addlw	1
  3066  0271  1D03               	btfss	3,2
  3067  0272  07BD               	addwf	___flmul@prod+3,f
  3068  0273  3008               	movlw	8
  3069  0274  00AE               	movwf	??___flmul
  3070  0275                     u4545:	
  3071  0275  1003               	clrc
  3072  0276  0DB5               	rlf	___flmul@grs,f
  3073  0277  0DB6               	rlf	___flmul@grs+1,f
  3074  0278  0DB7               	rlf	___flmul@grs+2,f
  3075  0279  0DB8               	rlf	___flmul@grs+3,f
  3076  027A  0BAE               	decfsz	??___flmul,f
  3077  027B  2A75               	goto	u4545
  3078  027C  0839               	movf	___flmul@bexp,w
  3079  027D  0734               	addwf	___flmul@aexp,w
  3080  027E  00AE               	movwf	??___flmul
  3081  027F  01AF               	clrf	??___flmul+1
  3082  0280  0DAF               	rlf	??___flmul+1,f
  3083  0281  082E               	movf	??___flmul,w
  3084  0282  3E82               	addlw	130
  3085  0283  00BE               	movwf	___flmul@temp
  3086  0284  082F               	movf	??___flmul+1,w
  3087  0285  1803               	skipnc
  3088  0286  3E01               	addlw	1
  3089  0287  3EFF               	addlw	255
  3090  0288  00BF               	movwf	___flmul@temp+1
  3091  0289                     l4800:	
  3092  0289  1BBC               	btfsc	___flmul@prod+2,7
  3093  028A  2AA6               	goto	l4802
  3094  028B  3001               	movlw	1
  3095  028C  00AE               	movwf	??___flmul
  3096  028D                     u4555:	
  3097  028D  1003               	clrc
  3098  028E  0DBA               	rlf	___flmul@prod,f
  3099  028F  0DBB               	rlf	___flmul@prod+1,f
  3100  0290  0DBC               	rlf	___flmul@prod+2,f
  3101  0291  0DBD               	rlf	___flmul@prod+3,f
  3102  0292  0BAE               	decfsz	??___flmul,f
  3103  0293  2A8D               	goto	u4555
  3104  0294  1BB8               	btfsc	___flmul@grs+3,7
  3105  0295  143A               	bsf	___flmul@prod,0
  3106  0296  3001               	movlw	1
  3107  0297  00AE               	movwf	??___flmul
  3108  0298                     u4575:	
  3109  0298  1003               	clrc
  3110  0299  0DB5               	rlf	___flmul@grs,f
  3111  029A  0DB6               	rlf	___flmul@grs+1,f
  3112  029B  0DB7               	rlf	___flmul@grs+2,f
  3113  029C  0DB8               	rlf	___flmul@grs+3,f
  3114  029D  0BAE               	decfsz	??___flmul,f
  3115  029E  2A98               	goto	u4575
  3116  029F  30FF               	movlw	255
  3117  02A0  07BE               	addwf	___flmul@temp,f
  3118  02A1  1803               	skipnc
  3119  02A2  0ABF               	incf	___flmul@temp+1,f
  3120  02A3  30FF               	movlw	255
  3121  02A4  07BF               	addwf	___flmul@temp+1,f
  3122  02A5  2A89               	goto	l4800
  3123  02A6                     l4802:	
  3124  02A6  01B4               	clrf	___flmul@aexp
  3125  02A7  1FB8               	btfss	___flmul@grs+3,7
  3126  02A8  2ABF               	goto	l4812
  3127  02A9  30FF               	movlw	255
  3128  02AA  0535               	andwf	___flmul@grs,w
  3129  02AB  00AE               	movwf	??___flmul
  3130  02AC  30FF               	movlw	255
  3131  02AD  0536               	andwf	___flmul@grs+1,w
  3132  02AE  00AF               	movwf	??___flmul+1
  3133  02AF  30FF               	movlw	255
  3134  02B0  0537               	andwf	___flmul@grs+2,w
  3135  02B1  00B0               	movwf	??___flmul+2
  3136  02B2  307F               	movlw	127
  3137  02B3  0538               	andwf	___flmul@grs+3,w
  3138  02B4  00B1               	movwf	??___flmul+3
  3139  02B5  0831               	movf	??___flmul+3,w
  3140  02B6  0430               	iorwf	??___flmul+2,w
  3141  02B7  042F               	iorwf	??___flmul+1,w
  3142  02B8  042E               	iorwf	??___flmul,w
  3143  02B9  1903               	skipnz
  3144  02BA  183A               	btfsc	___flmul@prod,0
  3145  02BB  2ABD               	goto	l4808
  3146  02BC  2ABF               	goto	l4812
  3147  02BD                     l4808:	
  3148  02BD  01B4               	clrf	___flmul@aexp
  3149  02BE  0AB4               	incf	___flmul@aexp,f
  3150  02BF                     l4812:	
  3151  02BF  0834               	movf	___flmul@aexp,w
  3152  02C0  1903               	btfsc	3,2
  3153  02C1  2AF1               	goto	l4822
  3154  02C2  3001               	movlw	1
  3155  02C3  07BA               	addwf	___flmul@prod,f
  3156  02C4  3000               	movlw	0
  3157  02C5  1803               	skipnc
  3158  02C6  3001               	movlw	1
  3159  02C7  07BB               	addwf	___flmul@prod+1,f
  3160  02C8  3000               	movlw	0
  3161  02C9  1803               	skipnc
  3162  02CA  3001               	movlw	1
  3163  02CB  07BC               	addwf	___flmul@prod+2,f
  3164  02CC  3000               	movlw	0
  3165  02CD  1803               	skipnc
  3166  02CE  3001               	movlw	1
  3167  02CF  07BD               	addwf	___flmul@prod+3,f
  3168  02D0  1C3D               	btfss	___flmul@prod+3,0
  3169  02D1  2AF1               	goto	l4822
  3170  02D2  083A               	movf	___flmul@prod,w
  3171  02D3  00AE               	movwf	??___flmul
  3172  02D4  083B               	movf	___flmul@prod+1,w
  3173  02D5  00AF               	movwf	??___flmul+1
  3174  02D6  083C               	movf	___flmul@prod+2,w
  3175  02D7  00B0               	movwf	??___flmul+2
  3176  02D8  083D               	movf	___flmul@prod+3,w
  3177  02D9  00B1               	movwf	??___flmul+3
  3178  02DA  3001               	movlw	1
  3179  02DB  00B2               	movwf	??___flmul+4
  3180  02DC                     u4645:	
  3181  02DC  0D31               	rlf	??___flmul+3,w
  3182  02DD  0CB1               	rrf	??___flmul+3,f
  3183  02DE  0CB0               	rrf	??___flmul+2,f
  3184  02DF  0CAF               	rrf	??___flmul+1,f
  3185  02E0  0CAE               	rrf	??___flmul,f
  3186  02E1  0BB2               	decfsz	??___flmul+4,f
  3187  02E2  2ADC               	goto	u4645
  3188  02E3  0831               	movf	??___flmul+3,w
  3189  02E4  00BD               	movwf	___flmul@prod+3
  3190  02E5  0830               	movf	??___flmul+2,w
  3191  02E6  00BC               	movwf	___flmul@prod+2
  3192  02E7  082F               	movf	??___flmul+1,w
  3193  02E8  00BB               	movwf	___flmul@prod+1
  3194  02E9  082E               	movf	??___flmul,w
  3195  02EA  00BA               	movwf	___flmul@prod
  3196  02EB  3001               	movlw	1
  3197  02EC  07BE               	addwf	___flmul@temp,f
  3198  02ED  1803               	skipnc
  3199  02EE  0ABF               	incf	___flmul@temp+1,f
  3200  02EF  3000               	movlw	0
  3201  02F0  07BF               	addwf	___flmul@temp+1,f
  3202  02F1                     l4822:	
  3203  02F1  083F               	movf	___flmul@temp+1,w
  3204  02F2  3A80               	xorlw	128
  3205  02F3  00FF               	movwf	127
  3206  02F4  3080               	movlw	128
  3207  02F5  027F               	subwf	127,w
  3208  02F6  1D03               	skipz
  3209  02F7  2AFA               	goto	u4655
  3210  02F8  30FF               	movlw	255
  3211  02F9  023E               	subwf	___flmul@temp,w
  3212  02FA                     u4655:	
  3213  02FA  1C03               	skipc
  3214  02FB  2B07               	goto	l4826
  3215  02FC  307F               	movlw	127
  3216  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  3217  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  3218  02FF  00BD               	movwf	___flmul@prod+3
  3219  0300  3080               	movlw	128
  3220  0301  00BC               	movwf	___flmul@prod+2
  3221  0302  3000               	movlw	0
  3222  0303  00BB               	movwf	___flmul@prod+1
  3223  0304  3000               	movlw	0
  3224  0305  00BA               	movwf	___flmul@prod
  3225  0306  2B37               	goto	l853
  3226  0307                     l4826:	
  3227  0307  1283               	bcf	3,5	;RP0=0, select bank0
  3228  0308  1303               	bcf	3,6	;RP1=0, select bank0
  3229  0309  083F               	movf	___flmul@temp+1,w
  3230  030A  3A80               	xorlw	128
  3231  030B  00FF               	movwf	127
  3232  030C  3080               	movlw	128
  3233  030D  027F               	subwf	127,w
  3234  030E  1D03               	skipz
  3235  030F  2B12               	goto	u4665
  3236  0310  3001               	movlw	1
  3237  0311  023E               	subwf	___flmul@temp,w
  3238  0312                     u4665:	
  3239  0312  1803               	skipnc
  3240  0313  2B20               	goto	l4832
  3241  0314  3000               	movlw	0
  3242  0315  1283               	bcf	3,5	;RP0=0, select bank0
  3243  0316  1303               	bcf	3,6	;RP1=0, select bank0
  3244  0317  00BD               	movwf	___flmul@prod+3
  3245  0318  3000               	movlw	0
  3246  0319  00BC               	movwf	___flmul@prod+2
  3247  031A  3000               	movlw	0
  3248  031B  00BB               	movwf	___flmul@prod+1
  3249  031C  3000               	movlw	0
  3250  031D  00BA               	movwf	___flmul@prod
  3251  031E  01B3               	clrf	___flmul@sign
  3252  031F  2B37               	goto	l853
  3253  0320                     l4832:	
  3254  0320  1283               	bcf	3,5	;RP0=0, select bank0
  3255  0321  1303               	bcf	3,6	;RP1=0, select bank0
  3256  0322  083E               	movf	___flmul@temp,w
  3257  0323  00AE               	movwf	??___flmul
  3258  0324  082E               	movf	??___flmul,w
  3259  0325  00B9               	movwf	___flmul@bexp
  3260  0326  30FF               	movlw	255
  3261  0327  05BA               	andwf	___flmul@prod,f
  3262  0328  30FF               	movlw	255
  3263  0329  05BB               	andwf	___flmul@prod+1,f
  3264  032A  307F               	movlw	127
  3265  032B  05BC               	andwf	___flmul@prod+2,f
  3266  032C  3000               	movlw	0
  3267  032D  05BD               	andwf	___flmul@prod+3,f
  3268  032E  1839               	btfsc	___flmul@bexp,0
  3269  032F  17BC               	bsf	___flmul@prod+2,7
  3270  0330  0839               	movf	___flmul@bexp,w
  3271  0331  00AE               	movwf	??___flmul
  3272  0332  1003               	clrc
  3273  0333  0C2E               	rrf	??___flmul,w
  3274  0334  00AF               	movwf	??___flmul+1
  3275  0335  082F               	movf	??___flmul+1,w
  3276  0336  00BD               	movwf	___flmul@prod+3
  3277  0337                     l853:	
  3278  0337  0833               	movf	___flmul@sign,w
  3279  0338  00AE               	movwf	??___flmul
  3280  0339  082E               	movf	??___flmul,w
  3281  033A  04BD               	iorwf	___flmul@prod+3,f
  3282  033B  083D               	movf	___flmul@prod+3,w
  3283  033C  00A9               	movwf	?___flmul+3
  3284  033D  083C               	movf	___flmul@prod+2,w
  3285  033E  00A8               	movwf	?___flmul+2
  3286  033F  083B               	movf	___flmul@prod+1,w
  3287  0340  00A7               	movwf	?___flmul+1
  3288  0341  083A               	movf	___flmul@prod,w
  3289  0342  00A6               	movwf	?___flmul
  3290  0343  0008               	return
  3291  0344                     __end_of___flmul:	
  3292                           
  3293                           	psect	text6
  3294  07D9                     __ptext6:	
  3295 ;; *************** function __Umul8_16 *****************
  3296 ;; Defined at:
  3297 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  multiplier      1    wreg     unsigned char 
  3300 ;;  multiplicand    1    2[COMMON] unsigned char 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  multiplier      1    4[BANK0 ] unsigned char 
  3303 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  3304 ;;  product         2    0[BANK0 ] unsigned int 
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  2    2[COMMON] unsigned int 
  3307 ;; Registers used:
  3308 ;;		wreg, status,2, status,0
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3314 ;;      Params:         2       0       0       0       0
  3315 ;;      Locals:         0       5       0       0       0
  3316 ;;      Temps:          2       0       0       0       0
  3317 ;;      Totals:         4       5       0       0       0
  3318 ;;Total ram usage:        9 bytes
  3319 ;; Hardware stack levels used:    1
  3320 ;; Hardware stack levels required when called:    1
  3321 ;; This function calls:
  3322 ;;		Nothing
  3323 ;; This function is called by:
  3324 ;;		___flmul
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           
  3329                           ;psect for function __Umul8_16
  3330  07D9                     __Umul8_16:	
  3331                           
  3332                           ;incstack = 0
  3333                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3334                           ;__Umul8_16@multiplier stored from wreg
  3335  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  3336  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  3337  07DB  00A4               	movwf	__Umul8_16@multiplier
  3338  07DC  01A0               	clrf	__Umul8_16@product
  3339  07DD  01A1               	clrf	__Umul8_16@product+1
  3340  07DE  0872               	movf	__Umul8_16@multiplicand,w
  3341  07DF  00F4               	movwf	??__Umul8_16
  3342  07E0  01F5               	clrf	??__Umul8_16+1
  3343  07E1  0874               	movf	??__Umul8_16,w
  3344  07E2  00A2               	movwf	__Umul8_16@word_mpld
  3345  07E3  0875               	movf	??__Umul8_16+1,w
  3346  07E4  00A3               	movwf	__Umul8_16@word_mpld+1
  3347  07E5                     l4628:	
  3348  07E5  1C24               	btfss	__Umul8_16@multiplier,0
  3349  07E6  2FED               	goto	l898
  3350  07E7  0822               	movf	__Umul8_16@word_mpld,w
  3351  07E8  07A0               	addwf	__Umul8_16@product,f
  3352  07E9  1803               	skipnc
  3353  07EA  0AA1               	incf	__Umul8_16@product+1,f
  3354  07EB  0823               	movf	__Umul8_16@word_mpld+1,w
  3355  07EC  07A1               	addwf	__Umul8_16@product+1,f
  3356  07ED                     l898:	
  3357  07ED  3001               	movlw	1
  3358  07EE                     u4275:	
  3359  07EE  1003               	clrc
  3360  07EF  0DA2               	rlf	__Umul8_16@word_mpld,f
  3361  07F0  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  3362  07F1  3EFF               	addlw	-1
  3363  07F2  1D03               	skipz
  3364  07F3  2FEE               	goto	u4275
  3365  07F4  1003               	clrc
  3366  07F5  0CA4               	rrf	__Umul8_16@multiplier,f
  3367  07F6  0824               	movf	__Umul8_16@multiplier,w
  3368  07F7  1D03               	btfss	3,2
  3369  07F8  2FE5               	goto	l4628
  3370  07F9  0821               	movf	__Umul8_16@product+1,w
  3371  07FA  00F3               	movwf	?__Umul8_16+1
  3372  07FB  0820               	movf	__Umul8_16@product,w
  3373  07FC  00F2               	movwf	?__Umul8_16
  3374  07FD  0008               	return
  3375  07FE                     __end_of__Umul8_16:	
  3376                           
  3377                           	psect	text7
  3378  0C2E                     __ptext7:	
  3379 ;; *************** function ___fldiv *****************
  3380 ;; Defined at:
  3381 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  a               4   52[BANK0 ] unsigned int 
  3384 ;;  b               4   56[BANK0 ] unsigned int 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  grs             4   72[BANK0 ] unsigned long 
  3387 ;;  rem             4   65[BANK0 ] unsigned long 
  3388 ;;  new_exp         2   70[BANK0 ] int 
  3389 ;;  aexp            1   77[BANK0 ] unsigned char 
  3390 ;;  bexp            1   76[BANK0 ] unsigned char 
  3391 ;;  sign            1   69[BANK0 ] unsigned char 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  4   52[BANK0 ] unsigned char 
  3394 ;; Registers used:
  3395 ;;		wreg, status,2, status,0, btemp+1
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3401 ;;      Params:         0       8       0       0       0
  3402 ;;      Locals:         0      13       0       0       0
  3403 ;;      Temps:          0       5       0       0       0
  3404 ;;      Totals:         0      26       0       0       0
  3405 ;;Total ram usage:       26 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; Hardware stack levels required when called:    1
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_temp_objeto
  3412 ;;		_temp_ambiente
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           
  3417                           ;psect for function ___fldiv
  3418  0C2E                     ___fldiv:	
  3419                           
  3420                           ;incstack = 0
  3421                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3422  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  3423  0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  3424  0C30  085B               	movf	___fldiv@b+3,w
  3425  0C31  3980               	andlw	128
  3426  0C32  00DC               	movwf	??___fldiv
  3427  0C33  085C               	movf	??___fldiv,w
  3428  0C34  00E5               	movwf	___fldiv@sign
  3429  0C35  085B               	movf	___fldiv@b+3,w
  3430  0C36  00DC               	movwf	??___fldiv
  3431  0C37  075C               	addwf	??___fldiv,w
  3432  0C38  00DD               	movwf	??___fldiv+1
  3433  0C39  085D               	movf	??___fldiv+1,w
  3434  0C3A  00EC               	movwf	___fldiv@bexp
  3435  0C3B  1BDA               	btfsc	___fldiv@b+2,7
  3436  0C3C  146C               	bsf	___fldiv@bexp,0
  3437  0C3D  086C               	movf	___fldiv@bexp,w
  3438  0C3E  1903               	btfsc	3,2
  3439  0C3F  2C4E               	goto	l3444
  3440  0C40  0A6C               	incf	___fldiv@bexp,w
  3441  0C41  1D03               	btfss	3,2
  3442  0C42  2C4B               	goto	l3440
  3443  0C43  3000               	movlw	0
  3444  0C44  00DB               	movwf	___fldiv@b+3
  3445  0C45  3000               	movlw	0
  3446  0C46  00DA               	movwf	___fldiv@b+2
  3447  0C47  3000               	movlw	0
  3448  0C48  00D9               	movwf	___fldiv@b+1
  3449  0C49  3000               	movlw	0
  3450  0C4A  00D8               	movwf	___fldiv@b
  3451  0C4B                     l3440:	
  3452  0C4B  17DA               	bsf	___fldiv@b+2,7
  3453  0C4C  01DB               	clrf	___fldiv@b+3
  3454  0C4D  2C56               	goto	l3446
  3455  0C4E                     l3444:	
  3456  0C4E  3000               	movlw	0
  3457  0C4F  00DB               	movwf	___fldiv@b+3
  3458  0C50  3000               	movlw	0
  3459  0C51  00DA               	movwf	___fldiv@b+2
  3460  0C52  3000               	movlw	0
  3461  0C53  00D9               	movwf	___fldiv@b+1
  3462  0C54  3000               	movlw	0
  3463  0C55  00D8               	movwf	___fldiv@b
  3464  0C56                     l3446:	
  3465  0C56  0857               	movf	___fldiv@a+3,w
  3466  0C57  3980               	andlw	128
  3467  0C58  00DC               	movwf	??___fldiv
  3468  0C59  085C               	movf	??___fldiv,w
  3469  0C5A  06E5               	xorwf	___fldiv@sign,f
  3470  0C5B  0857               	movf	___fldiv@a+3,w
  3471  0C5C  00DC               	movwf	??___fldiv
  3472  0C5D  075C               	addwf	??___fldiv,w
  3473  0C5E  00DD               	movwf	??___fldiv+1
  3474  0C5F  085D               	movf	??___fldiv+1,w
  3475  0C60  00ED               	movwf	___fldiv@aexp
  3476  0C61  1BD6               	btfsc	___fldiv@a+2,7
  3477  0C62  146D               	bsf	___fldiv@aexp,0
  3478  0C63  086D               	movf	___fldiv@aexp,w
  3479  0C64  1903               	btfsc	3,2
  3480  0C65  2C74               	goto	l3464
  3481  0C66  0A6D               	incf	___fldiv@aexp,w
  3482  0C67  1D03               	btfss	3,2
  3483  0C68  2C71               	goto	l3460
  3484  0C69  3000               	movlw	0
  3485  0C6A  00D7               	movwf	___fldiv@a+3
  3486  0C6B  3000               	movlw	0
  3487  0C6C  00D6               	movwf	___fldiv@a+2
  3488  0C6D  3000               	movlw	0
  3489  0C6E  00D5               	movwf	___fldiv@a+1
  3490  0C6F  3000               	movlw	0
  3491  0C70  00D4               	movwf	___fldiv@a
  3492  0C71                     l3460:	
  3493  0C71  17D6               	bsf	___fldiv@a+2,7
  3494  0C72  01D7               	clrf	___fldiv@a+3
  3495  0C73  2C7C               	goto	l801
  3496  0C74                     l3464:	
  3497  0C74  3000               	movlw	0
  3498  0C75  00D7               	movwf	___fldiv@a+3
  3499  0C76  3000               	movlw	0
  3500  0C77  00D6               	movwf	___fldiv@a+2
  3501  0C78  3000               	movlw	0
  3502  0C79  00D5               	movwf	___fldiv@a+1
  3503  0C7A  3000               	movlw	0
  3504  0C7B  00D4               	movwf	___fldiv@a
  3505  0C7C                     l801:	
  3506  0C7C  0857               	movf	___fldiv@a+3,w
  3507  0C7D  0456               	iorwf	___fldiv@a+2,w
  3508  0C7E  0455               	iorwf	___fldiv@a+1,w
  3509  0C7F  0454               	iorwf	___fldiv@a,w
  3510  0C80  1D03               	skipz
  3511  0C81  2C9B               	goto	l3474
  3512  0C82  3000               	movlw	0
  3513  0C83  00DB               	movwf	___fldiv@b+3
  3514  0C84  3000               	movlw	0
  3515  0C85  00DA               	movwf	___fldiv@b+2
  3516  0C86  3000               	movlw	0
  3517  0C87  00D9               	movwf	___fldiv@b+1
  3518  0C88  3000               	movlw	0
  3519  0C89  00D8               	movwf	___fldiv@b
  3520  0C8A  3080               	movlw	128
  3521  0C8B  04DA               	iorwf	___fldiv@b+2,f
  3522  0C8C  307F               	movlw	127
  3523  0C8D  04DB               	iorwf	___fldiv@b+3,f
  3524  0C8E                     L1:	
  3525  0C8E  0865               	movf	___fldiv@sign,w
  3526  0C8F  00DC               	movwf	??___fldiv
  3527  0C90  085C               	movf	??___fldiv,w
  3528  0C91  04DB               	iorwf	___fldiv@b+3,f
  3529  0C92  085B               	movf	___fldiv@b+3,w
  3530  0C93  00D7               	movwf	?___fldiv+3
  3531  0C94  085A               	movf	___fldiv@b+2,w
  3532  0C95  00D6               	movwf	?___fldiv+2
  3533  0C96  0859               	movf	___fldiv@b+1,w
  3534  0C97  00D5               	movwf	?___fldiv+1
  3535  0C98  0858               	movf	___fldiv@b,w
  3536  0C99  00D4               	movwf	?___fldiv
  3537  0C9A  0008               	return
  3538  0C9B                     l3474:	
  3539  0C9B  086C               	movf	___fldiv@bexp,w
  3540  0C9C  1D03               	btfss	3,2
  3541  0C9D  2CA7               	goto	l3480
  3542  0C9E  3000               	movlw	0
  3543  0C9F  00D7               	movwf	?___fldiv+3
  3544  0CA0  3000               	movlw	0
  3545  0CA1  00D6               	movwf	?___fldiv+2
  3546  0CA2  3000               	movlw	0
  3547  0CA3  00D5               	movwf	?___fldiv+1
  3548  0CA4  3000               	movlw	0
  3549  0CA5  00D4               	movwf	?___fldiv
  3550  0CA6  0008               	return
  3551  0CA7                     l3480:	
  3552  0CA7  086C               	movf	___fldiv@bexp,w
  3553  0CA8  00DC               	movwf	??___fldiv
  3554  0CA9  01DD               	clrf	??___fldiv+1
  3555  0CAA  085D               	movf	??___fldiv+1,w
  3556  0CAB  00DF               	movwf	??___fldiv+3
  3557  0CAC  086D               	movf	___fldiv@aexp,w
  3558  0CAD  025C               	subwf	??___fldiv,w
  3559  0CAE  00DE               	movwf	??___fldiv+2
  3560  0CAF  1C03               	skipc
  3561  0CB0  03DF               	decf	??___fldiv+3,f
  3562  0CB1  085E               	movf	??___fldiv+2,w
  3563  0CB2  3E7F               	addlw	127
  3564  0CB3  00E6               	movwf	___fldiv@new_exp
  3565  0CB4  085F               	movf	??___fldiv+3,w
  3566  0CB5  1803               	skipnc
  3567  0CB6  3E01               	addlw	1
  3568  0CB7  3E00               	addlw	0
  3569  0CB8  00E7               	movwf	___fldiv@new_exp+1
  3570  0CB9  085B               	movf	___fldiv@b+3,w
  3571  0CBA  00E4               	movwf	___fldiv@rem+3
  3572  0CBB  085A               	movf	___fldiv@b+2,w
  3573  0CBC  00E3               	movwf	___fldiv@rem+2
  3574  0CBD  0859               	movf	___fldiv@b+1,w
  3575  0CBE  00E2               	movwf	___fldiv@rem+1
  3576  0CBF  0858               	movf	___fldiv@b,w
  3577  0CC0  00E1               	movwf	___fldiv@rem
  3578  0CC1  3000               	movlw	0
  3579  0CC2  00DB               	movwf	___fldiv@b+3
  3580  0CC3  3000               	movlw	0
  3581  0CC4  00DA               	movwf	___fldiv@b+2
  3582  0CC5  3000               	movlw	0
  3583  0CC6  00D9               	movwf	___fldiv@b+1
  3584  0CC7  3000               	movlw	0
  3585  0CC8  00D8               	movwf	___fldiv@b
  3586  0CC9  3000               	movlw	0
  3587  0CCA  00EB               	movwf	___fldiv@grs+3
  3588  0CCB  3000               	movlw	0
  3589  0CCC  00EA               	movwf	___fldiv@grs+2
  3590  0CCD  3000               	movlw	0
  3591  0CCE  00E9               	movwf	___fldiv@grs+1
  3592  0CCF  3000               	movlw	0
  3593  0CD0  00E8               	movwf	___fldiv@grs
  3594  0CD1  01ED               	clrf	___fldiv@aexp
  3595  0CD2                     l3508:	
  3596  0CD2  301A               	movlw	26
  3597  0CD3  026D               	subwf	___fldiv@aexp,w
  3598  0CD4  1803               	btfsc	3,0
  3599  0CD5  2D1A               	goto	l3510
  3600  0CD6  086D               	movf	___fldiv@aexp,w
  3601  0CD7  1903               	btfsc	3,2
  3602  0CD8  2CF6               	goto	l3500
  3603  0CD9  3001               	movlw	1
  3604  0CDA  00DC               	movwf	??___fldiv
  3605  0CDB                     u3145:	
  3606  0CDB  1003               	clrc
  3607  0CDC  0DE1               	rlf	___fldiv@rem,f
  3608  0CDD  0DE2               	rlf	___fldiv@rem+1,f
  3609  0CDE  0DE3               	rlf	___fldiv@rem+2,f
  3610  0CDF  0DE4               	rlf	___fldiv@rem+3,f
  3611  0CE0  0BDC               	decfsz	??___fldiv,f
  3612  0CE1  2CDB               	goto	u3145
  3613  0CE2  3001               	movlw	1
  3614  0CE3  00DC               	movwf	??___fldiv
  3615  0CE4                     u3155:	
  3616  0CE4  1003               	clrc
  3617  0CE5  0DD8               	rlf	___fldiv@b,f
  3618  0CE6  0DD9               	rlf	___fldiv@b+1,f
  3619  0CE7  0DDA               	rlf	___fldiv@b+2,f
  3620  0CE8  0DDB               	rlf	___fldiv@b+3,f
  3621  0CE9  0BDC               	decfsz	??___fldiv,f
  3622  0CEA  2CE4               	goto	u3155
  3623  0CEB  1BEB               	btfsc	___fldiv@grs+3,7
  3624  0CEC  1458               	bsf	___fldiv@b,0
  3625  0CED  3001               	movlw	1
  3626  0CEE  00DC               	movwf	??___fldiv
  3627  0CEF                     u3175:	
  3628  0CEF  1003               	clrc
  3629  0CF0  0DE8               	rlf	___fldiv@grs,f
  3630  0CF1  0DE9               	rlf	___fldiv@grs+1,f
  3631  0CF2  0DEA               	rlf	___fldiv@grs+2,f
  3632  0CF3  0DEB               	rlf	___fldiv@grs+3,f
  3633  0CF4  0BDC               	decfsz	??___fldiv,f
  3634  0CF5  2CEF               	goto	u3175
  3635  0CF6                     l3500:	
  3636  0CF6  0857               	movf	___fldiv@a+3,w
  3637  0CF7  0264               	subwf	___fldiv@rem+3,w
  3638  0CF8  1D03               	skipz
  3639  0CF9  2D04               	goto	u3185
  3640  0CFA  0856               	movf	___fldiv@a+2,w
  3641  0CFB  0263               	subwf	___fldiv@rem+2,w
  3642  0CFC  1D03               	skipz
  3643  0CFD  2D04               	goto	u3185
  3644  0CFE  0855               	movf	___fldiv@a+1,w
  3645  0CFF  0262               	subwf	___fldiv@rem+1,w
  3646  0D00  1D03               	skipz
  3647  0D01  2D04               	goto	u3185
  3648  0D02  0854               	movf	___fldiv@a,w
  3649  0D03  0261               	subwf	___fldiv@rem,w
  3650  0D04                     u3185:	
  3651  0D04  1C03               	skipc
  3652  0D05  2D15               	goto	l3506
  3653  0D06  176B               	bsf	___fldiv@grs+3,6
  3654  0D07  0854               	movf	___fldiv@a,w
  3655  0D08  02E1               	subwf	___fldiv@rem,f
  3656  0D09  0855               	movf	___fldiv@a+1,w
  3657  0D0A  1C03               	skipc
  3658  0D0B  0F55               	incfsz	___fldiv@a+1,w
  3659  0D0C  02E2               	subwf	___fldiv@rem+1,f
  3660  0D0D  0856               	movf	___fldiv@a+2,w
  3661  0D0E  1C03               	skipc
  3662  0D0F  0F56               	incfsz	___fldiv@a+2,w
  3663  0D10  02E3               	subwf	___fldiv@rem+2,f
  3664  0D11  0857               	movf	___fldiv@a+3,w
  3665  0D12  1C03               	skipc
  3666  0D13  0F57               	incfsz	___fldiv@a+3,w
  3667  0D14  02E4               	subwf	___fldiv@rem+3,f
  3668  0D15                     l3506:	
  3669  0D15  3001               	movlw	1
  3670  0D16  00DC               	movwf	??___fldiv
  3671  0D17  085C               	movf	??___fldiv,w
  3672  0D18  07ED               	addwf	___fldiv@aexp,f
  3673  0D19  2CD2               	goto	l3508
  3674  0D1A                     l3510:	
  3675  0D1A  0864               	movf	___fldiv@rem+3,w
  3676  0D1B  0463               	iorwf	___fldiv@rem+2,w
  3677  0D1C  0462               	iorwf	___fldiv@rem+1,w
  3678  0D1D  0461               	iorwf	___fldiv@rem,w
  3679  0D1E  1D03               	btfss	3,2
  3680  0D1F  1468               	bsf	___fldiv@grs,0
  3681  0D20                     l3524:	
  3682  0D20  1BDA               	btfsc	___fldiv@b+2,7
  3683  0D21  2D3D               	goto	l3526
  3684  0D22  3001               	movlw	1
  3685  0D23  00DC               	movwf	??___fldiv
  3686  0D24                     u3215:	
  3687  0D24  1003               	clrc
  3688  0D25  0DD8               	rlf	___fldiv@b,f
  3689  0D26  0DD9               	rlf	___fldiv@b+1,f
  3690  0D27  0DDA               	rlf	___fldiv@b+2,f
  3691  0D28  0DDB               	rlf	___fldiv@b+3,f
  3692  0D29  0BDC               	decfsz	??___fldiv,f
  3693  0D2A  2D24               	goto	u3215
  3694  0D2B  1BEB               	btfsc	___fldiv@grs+3,7
  3695  0D2C  1458               	bsf	___fldiv@b,0
  3696  0D2D  3001               	movlw	1
  3697  0D2E  00DC               	movwf	??___fldiv
  3698  0D2F                     u3235:	
  3699  0D2F  1003               	clrc
  3700  0D30  0DE8               	rlf	___fldiv@grs,f
  3701  0D31  0DE9               	rlf	___fldiv@grs+1,f
  3702  0D32  0DEA               	rlf	___fldiv@grs+2,f
  3703  0D33  0DEB               	rlf	___fldiv@grs+3,f
  3704  0D34  0BDC               	decfsz	??___fldiv,f
  3705  0D35  2D2F               	goto	u3235
  3706  0D36  30FF               	movlw	255
  3707  0D37  07E6               	addwf	___fldiv@new_exp,f
  3708  0D38  1803               	skipnc
  3709  0D39  0AE7               	incf	___fldiv@new_exp+1,f
  3710  0D3A  30FF               	movlw	255
  3711  0D3B  07E7               	addwf	___fldiv@new_exp+1,f
  3712  0D3C  2D20               	goto	l3524
  3713  0D3D                     l3526:	
  3714  0D3D  01ED               	clrf	___fldiv@aexp
  3715  0D3E  1FEB               	btfss	___fldiv@grs+3,7
  3716  0D3F  2D56               	goto	l3536
  3717  0D40  30FF               	movlw	255
  3718  0D41  0568               	andwf	___fldiv@grs,w
  3719  0D42  00DC               	movwf	??___fldiv
  3720  0D43  30FF               	movlw	255
  3721  0D44  0569               	andwf	___fldiv@grs+1,w
  3722  0D45  00DD               	movwf	??___fldiv+1
  3723  0D46  30FF               	movlw	255
  3724  0D47  056A               	andwf	___fldiv@grs+2,w
  3725  0D48  00DE               	movwf	??___fldiv+2
  3726  0D49  307F               	movlw	127
  3727  0D4A  056B               	andwf	___fldiv@grs+3,w
  3728  0D4B  00DF               	movwf	??___fldiv+3
  3729  0D4C  085F               	movf	??___fldiv+3,w
  3730  0D4D  045E               	iorwf	??___fldiv+2,w
  3731  0D4E  045D               	iorwf	??___fldiv+1,w
  3732  0D4F  045C               	iorwf	??___fldiv,w
  3733  0D50  1903               	skipnz
  3734  0D51  1858               	btfsc	___fldiv@b,0
  3735  0D52  2D54               	goto	l3532
  3736  0D53  2D56               	goto	l3536
  3737  0D54                     l3532:	
  3738  0D54  01ED               	clrf	___fldiv@aexp
  3739  0D55  0AED               	incf	___fldiv@aexp,f
  3740  0D56                     l3536:	
  3741  0D56  086D               	movf	___fldiv@aexp,w
  3742  0D57  1903               	btfsc	3,2
  3743  0D58  2D88               	goto	l3546
  3744  0D59  3001               	movlw	1
  3745  0D5A  07D8               	addwf	___fldiv@b,f
  3746  0D5B  3000               	movlw	0
  3747  0D5C  1803               	skipnc
  3748  0D5D  3001               	movlw	1
  3749  0D5E  07D9               	addwf	___fldiv@b+1,f
  3750  0D5F  3000               	movlw	0
  3751  0D60  1803               	skipnc
  3752  0D61  3001               	movlw	1
  3753  0D62  07DA               	addwf	___fldiv@b+2,f
  3754  0D63  3000               	movlw	0
  3755  0D64  1803               	skipnc
  3756  0D65  3001               	movlw	1
  3757  0D66  07DB               	addwf	___fldiv@b+3,f
  3758  0D67  1C5B               	btfss	___fldiv@b+3,0
  3759  0D68  2D88               	goto	l3546
  3760  0D69  0858               	movf	___fldiv@b,w
  3761  0D6A  00DC               	movwf	??___fldiv
  3762  0D6B  0859               	movf	___fldiv@b+1,w
  3763  0D6C  00DD               	movwf	??___fldiv+1
  3764  0D6D  085A               	movf	___fldiv@b+2,w
  3765  0D6E  00DE               	movwf	??___fldiv+2
  3766  0D6F  085B               	movf	___fldiv@b+3,w
  3767  0D70  00DF               	movwf	??___fldiv+3
  3768  0D71  3001               	movlw	1
  3769  0D72  00E0               	movwf	??___fldiv+4
  3770  0D73                     u3305:	
  3771  0D73  0D5F               	rlf	??___fldiv+3,w
  3772  0D74  0CDF               	rrf	??___fldiv+3,f
  3773  0D75  0CDE               	rrf	??___fldiv+2,f
  3774  0D76  0CDD               	rrf	??___fldiv+1,f
  3775  0D77  0CDC               	rrf	??___fldiv,f
  3776  0D78  0BE0               	decfsz	??___fldiv+4,f
  3777  0D79  2D73               	goto	u3305
  3778  0D7A  085F               	movf	??___fldiv+3,w
  3779  0D7B  00DB               	movwf	___fldiv@b+3
  3780  0D7C  085E               	movf	??___fldiv+2,w
  3781  0D7D  00DA               	movwf	___fldiv@b+2
  3782  0D7E  085D               	movf	??___fldiv+1,w
  3783  0D7F  00D9               	movwf	___fldiv@b+1
  3784  0D80  085C               	movf	??___fldiv,w
  3785  0D81  00D8               	movwf	___fldiv@b
  3786  0D82  3001               	movlw	1
  3787  0D83  07E6               	addwf	___fldiv@new_exp,f
  3788  0D84  1803               	skipnc
  3789  0D85  0AE7               	incf	___fldiv@new_exp+1,f
  3790  0D86  3000               	movlw	0
  3791  0D87  07E7               	addwf	___fldiv@new_exp+1,f
  3792  0D88                     l3546:	
  3793  0D88  0867               	movf	___fldiv@new_exp+1,w
  3794  0D89  3A80               	xorlw	128
  3795  0D8A  00FF               	movwf	127
  3796  0D8B  3080               	movlw	128
  3797  0D8C  027F               	subwf	127,w
  3798  0D8D  1D03               	skipz
  3799  0D8E  2D91               	goto	u3315
  3800  0D8F  30FF               	movlw	255
  3801  0D90  0266               	subwf	___fldiv@new_exp,w
  3802  0D91                     u3315:	
  3803  0D91  1C03               	skipc
  3804  0D92  2DA1               	goto	l3550
  3805  0D93  30FF               	movlw	255
  3806  0D94  1283               	bcf	3,5	;RP0=0, select bank0
  3807  0D95  1303               	bcf	3,6	;RP1=0, select bank0
  3808  0D96  00E6               	movwf	___fldiv@new_exp
  3809  0D97  3000               	movlw	0
  3810  0D98  00E7               	movwf	___fldiv@new_exp+1
  3811  0D99  3000               	movlw	0
  3812  0D9A  00DB               	movwf	___fldiv@b+3
  3813  0D9B  3000               	movlw	0
  3814  0D9C  00DA               	movwf	___fldiv@b+2
  3815  0D9D  3000               	movlw	0
  3816  0D9E  00D9               	movwf	___fldiv@b+1
  3817  0D9F  3000               	movlw	0
  3818  0DA0  00D8               	movwf	___fldiv@b
  3819  0DA1                     l3550:	
  3820  0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  3821  0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  3822  0DA3  0867               	movf	___fldiv@new_exp+1,w
  3823  0DA4  3A80               	xorlw	128
  3824  0DA5  00FF               	movwf	127
  3825  0DA6  3080               	movlw	128
  3826  0DA7  027F               	subwf	127,w
  3827  0DA8  1D03               	skipz
  3828  0DA9  2DAC               	goto	u3325
  3829  0DAA  3001               	movlw	1
  3830  0DAB  0266               	subwf	___fldiv@new_exp,w
  3831  0DAC                     u3325:	
  3832  0DAC  1803               	skipnc
  3833  0DAD  2DBB               	goto	l823
  3834  0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  3835  0DAF  1303               	bcf	3,6	;RP1=0, select bank0
  3836  0DB0  01E6               	clrf	___fldiv@new_exp
  3837  0DB1  01E7               	clrf	___fldiv@new_exp+1
  3838  0DB2  3000               	movlw	0
  3839  0DB3  00DB               	movwf	___fldiv@b+3
  3840  0DB4  3000               	movlw	0
  3841  0DB5  00DA               	movwf	___fldiv@b+2
  3842  0DB6  3000               	movlw	0
  3843  0DB7  00D9               	movwf	___fldiv@b+1
  3844  0DB8  3000               	movlw	0
  3845  0DB9  00D8               	movwf	___fldiv@b
  3846  0DBA  01E5               	clrf	___fldiv@sign
  3847  0DBB                     l823:	
  3848  0DBB  1283               	bcf	3,5	;RP0=0, select bank0
  3849  0DBC  1303               	bcf	3,6	;RP1=0, select bank0
  3850  0DBD  0866               	movf	___fldiv@new_exp,w
  3851  0DBE  00DC               	movwf	??___fldiv
  3852  0DBF  085C               	movf	??___fldiv,w
  3853  0DC0  00EC               	movwf	___fldiv@bexp
  3854  0DC1  1C6C               	btfss	___fldiv@bexp,0
  3855  0DC2  2DC5               	goto	l3562
  3856  0DC3  17DA               	bsf	___fldiv@b+2,7
  3857  0DC4  2DC9               	goto	l825
  3858  0DC5                     l3562:	
  3859  0DC5  307F               	movlw	127
  3860  0DC6  00DC               	movwf	??___fldiv
  3861  0DC7  085C               	movf	??___fldiv,w
  3862  0DC8  05DA               	andwf	___fldiv@b+2,f
  3863  0DC9                     l825:	
  3864  0DC9  086C               	movf	___fldiv@bexp,w
  3865  0DCA  00DC               	movwf	??___fldiv
  3866  0DCB  1003               	clrc
  3867  0DCC  0C5C               	rrf	??___fldiv,w
  3868  0DCD  00DD               	movwf	??___fldiv+1
  3869  0DCE  085D               	movf	??___fldiv+1,w
  3870  0DCF  00DB               	movwf	___fldiv@b+3
  3871  0DD0  2C8E               	goto	L1
  3872  0DD1                     __end_of___fldiv:	
  3873                           
  3874                           	psect	text8
  3875  0DD1                     __ptext8:	
  3876 ;; *************** function ___fladd *****************
  3877 ;; Defined at:
  3878 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  b               4   32[BANK0 ] unsigned char 
  3881 ;;  a               4   36[BANK0 ] unsigned char 
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;  grs             1   51[BANK0 ] unsigned char 
  3884 ;;  bexp            1   50[BANK0 ] unsigned char 
  3885 ;;  aexp            1   49[BANK0 ] unsigned char 
  3886 ;;  signs           1   48[BANK0 ] unsigned char 
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  4   32[BANK0 ] unsigned char 
  3889 ;; Registers used:
  3890 ;;		wreg, status,2, status,0, btemp+1
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3896 ;;      Params:         0       8       0       0       0
  3897 ;;      Locals:         0       4       0       0       0
  3898 ;;      Temps:          0       8       0       0       0
  3899 ;;      Totals:         0      20       0       0       0
  3900 ;;Total ram usage:       20 bytes
  3901 ;; Hardware stack levels used:    1
  3902 ;; Hardware stack levels required when called:    1
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		_temp_objeto
  3907 ;;		_temp_ambiente
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           
  3912                           ;psect for function ___fladd
  3913  0DD1                     ___fladd:	
  3914                           
  3915                           ;incstack = 0
  3916                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3917  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  3918  0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  3919  0DD3  0843               	movf	___fladd@b+3,w
  3920  0DD4  3980               	andlw	128
  3921  0DD5  00C8               	movwf	??___fladd
  3922  0DD6  0848               	movf	??___fladd,w
  3923  0DD7  00D0               	movwf	___fladd@signs
  3924  0DD8  0843               	movf	___fladd@b+3,w
  3925  0DD9  00C8               	movwf	??___fladd
  3926  0DDA  0748               	addwf	??___fladd,w
  3927  0DDB  00C9               	movwf	??___fladd+1
  3928  0DDC  0849               	movf	??___fladd+1,w
  3929  0DDD  00D2               	movwf	___fladd@bexp
  3930  0DDE  1BC2               	btfsc	___fladd@b+2,7
  3931  0DDF  1452               	bsf	___fladd@bexp,0
  3932  0DE0  0852               	movf	___fladd@bexp,w
  3933  0DE1  1903               	btfsc	3,2
  3934  0DE2  2DF1               	goto	l3250
  3935  0DE3  0A52               	incf	___fladd@bexp,w
  3936  0DE4  1D03               	btfss	3,2
  3937  0DE5  2DEE               	goto	l3246
  3938  0DE6  3000               	movlw	0
  3939  0DE7  00C3               	movwf	___fladd@b+3
  3940  0DE8  3000               	movlw	0
  3941  0DE9  00C2               	movwf	___fladd@b+2
  3942  0DEA  3000               	movlw	0
  3943  0DEB  00C1               	movwf	___fladd@b+1
  3944  0DEC  3000               	movlw	0
  3945  0DED  00C0               	movwf	___fladd@b
  3946  0DEE                     l3246:	
  3947  0DEE  17C2               	bsf	___fladd@b+2,7
  3948  0DEF  01C3               	clrf	___fladd@b+3
  3949  0DF0  2DF9               	goto	l3252
  3950  0DF1                     l3250:	
  3951  0DF1  3000               	movlw	0
  3952  0DF2  00C3               	movwf	___fladd@b+3
  3953  0DF3  3000               	movlw	0
  3954  0DF4  00C2               	movwf	___fladd@b+2
  3955  0DF5  3000               	movlw	0
  3956  0DF6  00C1               	movwf	___fladd@b+1
  3957  0DF7  3000               	movlw	0
  3958  0DF8  00C0               	movwf	___fladd@b
  3959  0DF9                     l3252:	
  3960  0DF9  0847               	movf	___fladd@a+3,w
  3961  0DFA  3980               	andlw	128
  3962  0DFB  00C8               	movwf	??___fladd
  3963  0DFC  0848               	movf	??___fladd,w
  3964  0DFD  00D1               	movwf	___fladd@aexp
  3965  0DFE  0851               	movf	___fladd@aexp,w
  3966  0DFF  0650               	xorwf	___fladd@signs,w
  3967  0E00  1D03               	btfss	3,2
  3968  0E01  1750               	bsf	___fladd@signs,6
  3969  0E02  0847               	movf	___fladd@a+3,w
  3970  0E03  00C8               	movwf	??___fladd
  3971  0E04  0748               	addwf	??___fladd,w
  3972  0E05  00C9               	movwf	??___fladd+1
  3973  0E06  0849               	movf	??___fladd+1,w
  3974  0E07  00D1               	movwf	___fladd@aexp
  3975  0E08  1BC6               	btfsc	___fladd@a+2,7
  3976  0E09  1451               	bsf	___fladd@aexp,0
  3977  0E0A  0851               	movf	___fladd@aexp,w
  3978  0E0B  1903               	btfsc	3,2
  3979  0E0C  2E1B               	goto	l3274
  3980  0E0D  0A51               	incf	___fladd@aexp,w
  3981  0E0E  1D03               	btfss	3,2
  3982  0E0F  2E18               	goto	l3270
  3983  0E10  3000               	movlw	0
  3984  0E11  00C7               	movwf	___fladd@a+3
  3985  0E12  3000               	movlw	0
  3986  0E13  00C6               	movwf	___fladd@a+2
  3987  0E14  3000               	movlw	0
  3988  0E15  00C5               	movwf	___fladd@a+1
  3989  0E16  3000               	movlw	0
  3990  0E17  00C4               	movwf	___fladd@a
  3991  0E18                     l3270:	
  3992  0E18  17C6               	bsf	___fladd@a+2,7
  3993  0E19  01C7               	clrf	___fladd@a+3
  3994  0E1A  2E23               	goto	l745
  3995  0E1B                     l3274:	
  3996  0E1B  3000               	movlw	0
  3997  0E1C  00C7               	movwf	___fladd@a+3
  3998  0E1D  3000               	movlw	0
  3999  0E1E  00C6               	movwf	___fladd@a+2
  4000  0E1F  3000               	movlw	0
  4001  0E20  00C5               	movwf	___fladd@a+1
  4002  0E21  3000               	movlw	0
  4003  0E22  00C4               	movwf	___fladd@a
  4004  0E23                     l745:	
  4005  0E23  0852               	movf	___fladd@bexp,w
  4006  0E24  0251               	subwf	___fladd@aexp,w
  4007  0E25  1803               	skipnc
  4008  0E26  2E69               	goto	l3310
  4009  0E27  1F50               	btfss	___fladd@signs,6
  4010  0E28  2E2D               	goto	l3280
  4011  0E29  3080               	movlw	128
  4012  0E2A  00C8               	movwf	??___fladd
  4013  0E2B  0848               	movf	??___fladd,w
  4014  0E2C  06D0               	xorwf	___fladd@signs,f
  4015  0E2D                     l3280:	
  4016  0E2D  0852               	movf	___fladd@bexp,w
  4017  0E2E  00C8               	movwf	??___fladd
  4018  0E2F  0848               	movf	??___fladd,w
  4019  0E30  00D3               	movwf	___fladd@grs
  4020  0E31  0851               	movf	___fladd@aexp,w
  4021  0E32  00C8               	movwf	??___fladd
  4022  0E33  0848               	movf	??___fladd,w
  4023  0E34  00D2               	movwf	___fladd@bexp
  4024  0E35  0853               	movf	___fladd@grs,w
  4025  0E36  00C8               	movwf	??___fladd
  4026  0E37  0848               	movf	??___fladd,w
  4027  0E38  00D1               	movwf	___fladd@aexp
  4028  0E39  0840               	movf	___fladd@b,w
  4029  0E3A  00C8               	movwf	??___fladd
  4030  0E3B  0848               	movf	??___fladd,w
  4031  0E3C  00D3               	movwf	___fladd@grs
  4032  0E3D  0844               	movf	___fladd@a,w
  4033  0E3E  00C8               	movwf	??___fladd
  4034  0E3F  0848               	movf	??___fladd,w
  4035  0E40  00C0               	movwf	___fladd@b
  4036  0E41  0853               	movf	___fladd@grs,w
  4037  0E42  00C8               	movwf	??___fladd
  4038  0E43  0848               	movf	??___fladd,w
  4039  0E44  00C4               	movwf	___fladd@a
  4040  0E45  0841               	movf	___fladd@b+1,w
  4041  0E46  00C8               	movwf	??___fladd
  4042  0E47  0848               	movf	??___fladd,w
  4043  0E48  00D3               	movwf	___fladd@grs
  4044  0E49  0845               	movf	___fladd@a+1,w
  4045  0E4A  00C8               	movwf	??___fladd
  4046  0E4B  0848               	movf	??___fladd,w
  4047  0E4C  00C1               	movwf	___fladd@b+1
  4048  0E4D  0853               	movf	___fladd@grs,w
  4049  0E4E  00C8               	movwf	??___fladd
  4050  0E4F  0848               	movf	??___fladd,w
  4051  0E50  00C5               	movwf	___fladd@a+1
  4052  0E51  0842               	movf	___fladd@b+2,w
  4053  0E52  00C8               	movwf	??___fladd
  4054  0E53  0848               	movf	??___fladd,w
  4055  0E54  00D3               	movwf	___fladd@grs
  4056  0E55  0846               	movf	___fladd@a+2,w
  4057  0E56  00C8               	movwf	??___fladd
  4058  0E57  0848               	movf	??___fladd,w
  4059  0E58  00C2               	movwf	___fladd@b+2
  4060  0E59  0853               	movf	___fladd@grs,w
  4061  0E5A  00C8               	movwf	??___fladd
  4062  0E5B  0848               	movf	??___fladd,w
  4063  0E5C  00C6               	movwf	___fladd@a+2
  4064  0E5D  0843               	movf	___fladd@b+3,w
  4065  0E5E  00C8               	movwf	??___fladd
  4066  0E5F  0848               	movf	??___fladd,w
  4067  0E60  00D3               	movwf	___fladd@grs
  4068  0E61  0847               	movf	___fladd@a+3,w
  4069  0E62  00C8               	movwf	??___fladd
  4070  0E63  0848               	movf	??___fladd,w
  4071  0E64  00C3               	movwf	___fladd@b+3
  4072  0E65  0853               	movf	___fladd@grs,w
  4073  0E66  00C8               	movwf	??___fladd
  4074  0E67  0848               	movf	??___fladd,w
  4075  0E68  00C7               	movwf	___fladd@a+3
  4076  0E69                     l3310:	
  4077  0E69  01D3               	clrf	___fladd@grs
  4078  0E6A  0851               	movf	___fladd@aexp,w
  4079  0E6B  00C8               	movwf	??___fladd
  4080  0E6C  01C9               	clrf	??___fladd+1
  4081  0E6D  0849               	movf	??___fladd+1,w
  4082  0E6E  00CB               	movwf	??___fladd+3
  4083  0E6F  0852               	movf	___fladd@bexp,w
  4084  0E70  0248               	subwf	??___fladd,w
  4085  0E71  00CA               	movwf	??___fladd+2
  4086  0E72  1C03               	skipc
  4087  0E73  03CB               	decf	??___fladd+3,f
  4088  0E74  084B               	movf	??___fladd+3,w
  4089  0E75  3A80               	xorlw	128
  4090  0E76  00FF               	movwf	127
  4091  0E77  3080               	movlw	128
  4092  0E78  027F               	subwf	127,w
  4093  0E79  1D03               	skipz
  4094  0E7A  2E7D               	goto	u2685
  4095  0E7B  301A               	movlw	26
  4096  0E7C  024A               	subwf	??___fladd+2,w
  4097  0E7D                     u2685:	
  4098  0E7D  1C03               	skipc
  4099  0E7E  2EB6               	goto	l3328
  4100  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  4101  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  4102  0E81  0843               	movf	___fladd@b+3,w
  4103  0E82  0442               	iorwf	___fladd@b+2,w
  4104  0E83  0441               	iorwf	___fladd@b+1,w
  4105  0E84  0440               	iorwf	___fladd@b,w
  4106  0E85  1903               	btfsc	3,2
  4107  0E86  2E89               	goto	u2690
  4108  0E87  3001               	movlw	1
  4109  0E88  2E8A               	goto	u2700
  4110  0E89                     u2690:	
  4111  0E89  3000               	movlw	0
  4112  0E8A                     u2700:	
  4113  0E8A  00C8               	movwf	??___fladd
  4114  0E8B  0848               	movf	??___fladd,w
  4115  0E8C  00D3               	movwf	___fladd@grs
  4116  0E8D  3000               	movlw	0
  4117  0E8E  00C3               	movwf	___fladd@b+3
  4118  0E8F  3000               	movlw	0
  4119  0E90  00C2               	movwf	___fladd@b+2
  4120  0E91  3000               	movlw	0
  4121  0E92  00C1               	movwf	___fladd@b+1
  4122  0E93  3000               	movlw	0
  4123  0E94  00C0               	movwf	___fladd@b
  4124  0E95  0851               	movf	___fladd@aexp,w
  4125  0E96  00C8               	movwf	??___fladd
  4126  0E97  0848               	movf	??___fladd,w
  4127  0E98  00D2               	movwf	___fladd@bexp
  4128  0E99  2EBC               	goto	l749
  4129  0E9A                     l751:	
  4130  0E9A  1C53               	btfss	___fladd@grs,0
  4131  0E9B  2EA5               	goto	l3318
  4132  0E9C  0853               	movf	___fladd@grs,w
  4133  0E9D  00C8               	movwf	??___fladd
  4134  0E9E  1003               	clrc
  4135  0E9F  0C48               	rrf	??___fladd,w
  4136  0EA0  3801               	iorlw	1
  4137  0EA1  00C9               	movwf	??___fladd+1
  4138  0EA2  0849               	movf	??___fladd+1,w
  4139  0EA3  00D3               	movwf	___fladd@grs
  4140  0EA4  2EA7               	goto	l3320
  4141  0EA5                     l3318:	
  4142  0EA5  1003               	clrc
  4143  0EA6  0CD3               	rrf	___fladd@grs,f
  4144  0EA7                     l3320:	
  4145  0EA7  1840               	btfsc	___fladd@b,0
  4146  0EA8  17D3               	bsf	___fladd@grs,7
  4147  0EA9  3001               	movlw	1
  4148  0EAA  00C8               	movwf	??___fladd
  4149  0EAB                     u2735:	
  4150  0EAB  0D43               	rlf	___fladd@b+3,w
  4151  0EAC  0CC3               	rrf	___fladd@b+3,f
  4152  0EAD  0CC2               	rrf	___fladd@b+2,f
  4153  0EAE  0CC1               	rrf	___fladd@b+1,f
  4154  0EAF  0CC0               	rrf	___fladd@b,f
  4155  0EB0  0BC8               	decfsz	??___fladd& (0+127),f
  4156  0EB1  2EAB               	goto	u2735
  4157  0EB2  3001               	movlw	1
  4158  0EB3  00C8               	movwf	??___fladd
  4159  0EB4  0848               	movf	??___fladd,w
  4160  0EB5  07D2               	addwf	___fladd@bexp,f
  4161  0EB6                     l3328:	
  4162  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  4163  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  4164  0EB8  0851               	movf	___fladd@aexp,w
  4165  0EB9  0252               	subwf	___fladd@bexp,w
  4166  0EBA  1C03               	skipc
  4167  0EBB  2E9A               	goto	l751
  4168  0EBC                     l749:	
  4169  0EBC  1B50               	btfsc	___fladd@signs,6
  4170  0EBD  2EFD               	goto	l3354
  4171  0EBE  0852               	movf	___fladd@bexp,w
  4172  0EBF  1D03               	btfss	3,2
  4173  0EC0  2ECA               	goto	l3336
  4174  0EC1  3000               	movlw	0
  4175  0EC2  00C3               	movwf	?___fladd+3
  4176  0EC3  3000               	movlw	0
  4177  0EC4  00C2               	movwf	?___fladd+2
  4178  0EC5  3000               	movlw	0
  4179  0EC6  00C1               	movwf	?___fladd+1
  4180  0EC7  3000               	movlw	0
  4181  0EC8  00C0               	movwf	?___fladd
  4182  0EC9  0008               	return
  4183  0ECA                     l3336:	
  4184  0ECA  0844               	movf	___fladd@a,w
  4185  0ECB  07C0               	addwf	___fladd@b,f
  4186  0ECC  0845               	movf	___fladd@a+1,w
  4187  0ECD  1103               	clrz
  4188  0ECE  1803               	skipnc
  4189  0ECF  3E01               	addlw	1
  4190  0ED0  1D03               	btfss	3,2
  4191  0ED1  07C1               	addwf	___fladd@b+1,f
  4192  0ED2  0846               	movf	___fladd@a+2,w
  4193  0ED3  1103               	clrz
  4194  0ED4  1803               	skipnc
  4195  0ED5  3E01               	addlw	1
  4196  0ED6  1D03               	btfss	3,2
  4197  0ED7  07C2               	addwf	___fladd@b+2,f
  4198  0ED8  0847               	movf	___fladd@a+3,w
  4199  0ED9  1103               	clrz
  4200  0EDA  1803               	skipnc
  4201  0EDB  3E01               	addlw	1
  4202  0EDC  1D03               	btfss	3,2
  4203  0EDD  07C3               	addwf	___fladd@b+3,f
  4204  0EDE  1C43               	btfss	___fladd@b+3,0
  4205  0EDF  2F9F               	goto	l3388
  4206  0EE0  1C53               	btfss	___fladd@grs,0
  4207  0EE1  2EEB               	goto	l3344
  4208  0EE2  0853               	movf	___fladd@grs,w
  4209  0EE3  00C8               	movwf	??___fladd
  4210  0EE4  1003               	clrc
  4211  0EE5  0C48               	rrf	??___fladd,w
  4212  0EE6  3801               	iorlw	1
  4213  0EE7  00C9               	movwf	??___fladd+1
  4214  0EE8  0849               	movf	??___fladd+1,w
  4215  0EE9  00D3               	movwf	___fladd@grs
  4216  0EEA  2EED               	goto	l3346
  4217  0EEB                     l3344:	
  4218  0EEB  1003               	clrc
  4219  0EEC  0CD3               	rrf	___fladd@grs,f
  4220  0EED                     l3346:	
  4221  0EED  1840               	btfsc	___fladd@b,0
  4222  0EEE  17D3               	bsf	___fladd@grs,7
  4223  0EEF  3001               	movlw	1
  4224  0EF0  00C8               	movwf	??___fladd
  4225  0EF1                     u2815:	
  4226  0EF1  0D43               	rlf	___fladd@b+3,w
  4227  0EF2  0CC3               	rrf	___fladd@b+3,f
  4228  0EF3  0CC2               	rrf	___fladd@b+2,f
  4229  0EF4  0CC1               	rrf	___fladd@b+1,f
  4230  0EF5  0CC0               	rrf	___fladd@b,f
  4231  0EF6  0BC8               	decfsz	??___fladd& (0+127),f
  4232  0EF7  2EF1               	goto	u2815
  4233  0EF8  3001               	movlw	1
  4234  0EF9  00C8               	movwf	??___fladd
  4235  0EFA  0848               	movf	??___fladd,w
  4236  0EFB  07D2               	addwf	___fladd@bexp,f
  4237  0EFC  2F9F               	goto	l3388
  4238  0EFD                     l3354:	
  4239  0EFD  0843               	movf	___fladd@b+3,w
  4240  0EFE  3A80               	xorlw	128
  4241  0EFF  00FF               	movwf	127
  4242  0F00  0847               	movf	___fladd@a+3,w
  4243  0F01  3A80               	xorlw	128
  4244  0F02  027F               	subwf	127,w
  4245  0F03  1D03               	skipz
  4246  0F04  2F0F               	goto	u2823
  4247  0F05  0846               	movf	___fladd@a+2,w
  4248  0F06  0242               	subwf	___fladd@b+2,w
  4249  0F07  1D03               	skipz
  4250  0F08  2F0F               	goto	u2823
  4251  0F09  0845               	movf	___fladd@a+1,w
  4252  0F0A  0241               	subwf	___fladd@b+1,w
  4253  0F0B  1D03               	skipz
  4254  0F0C  2F0F               	goto	u2823
  4255  0F0D  0844               	movf	___fladd@a,w
  4256  0F0E  0240               	subwf	___fladd@b,w
  4257  0F0F                     u2823:	
  4258  0F0F  1803               	skipnc
  4259  0F10  2F67               	goto	l3364
  4260  0F11  30FF               	movlw	255
  4261  0F12  00C8               	movwf	??___fladd
  4262  0F13  30FF               	movlw	255
  4263  0F14  00C9               	movwf	??___fladd+1
  4264  0F15  30FF               	movlw	255
  4265  0F16  00CA               	movwf	??___fladd+2
  4266  0F17  30FF               	movlw	255
  4267  0F18  00CB               	movwf	??___fladd+3
  4268  0F19  0844               	movf	___fladd@a,w
  4269  0F1A  00CC               	movwf	??___fladd+4
  4270  0F1B  0845               	movf	___fladd@a+1,w
  4271  0F1C  00CD               	movwf	??___fladd+5
  4272  0F1D  0846               	movf	___fladd@a+2,w
  4273  0F1E  00CE               	movwf	??___fladd+6
  4274  0F1F  0847               	movf	___fladd@a+3,w
  4275  0F20  00CF               	movwf	??___fladd+7
  4276  0F21  0840               	movf	___fladd@b,w
  4277  0F22  02CC               	subwf	??___fladd+4,f
  4278  0F23  0841               	movf	___fladd@b+1,w
  4279  0F24  1C03               	skipc
  4280  0F25  0F41               	incfsz	___fladd@b+1,w
  4281  0F26  2F28               	goto	u2831
  4282  0F27  2F29               	goto	u2832
  4283  0F28                     u2831:	
  4284  0F28  02CD               	subwf	??___fladd+5,f
  4285  0F29                     u2832:	
  4286  0F29  0842               	movf	___fladd@b+2,w
  4287  0F2A  1C03               	skipc
  4288  0F2B  0F42               	incfsz	___fladd@b+2,w
  4289  0F2C  2F2E               	goto	u2833
  4290  0F2D  2F2F               	goto	u2834
  4291  0F2E                     u2833:	
  4292  0F2E  02CE               	subwf	??___fladd+6,f
  4293  0F2F                     u2834:	
  4294  0F2F  0843               	movf	___fladd@b+3,w
  4295  0F30  1C03               	skipc
  4296  0F31  0F43               	incfsz	___fladd@b+3,w
  4297  0F32  2F34               	goto	u2835
  4298  0F33  2F35               	goto	u2836
  4299  0F34                     u2835:	
  4300  0F34  02CF               	subwf	??___fladd+7,f
  4301  0F35                     u2836:	
  4302  0F35  084C               	movf	??___fladd+4,w
  4303  0F36  07C8               	addwf	??___fladd,f
  4304  0F37  084D               	movf	??___fladd+5,w
  4305  0F38  1803               	skipnc
  4306  0F39  0F4D               	incfsz	??___fladd+5,w
  4307  0F3A  2F3C               	goto	u2840
  4308  0F3B  2F3D               	goto	u2841
  4309  0F3C                     u2840:	
  4310  0F3C  07C9               	addwf	??___fladd+1,f
  4311  0F3D                     u2841:	
  4312  0F3D  084E               	movf	??___fladd+6,w
  4313  0F3E  1803               	skipnc
  4314  0F3F  0F4E               	incfsz	??___fladd+6,w
  4315  0F40  2F42               	goto	u2842
  4316  0F41  2F43               	goto	u2843
  4317  0F42                     u2842:	
  4318  0F42  07CA               	addwf	??___fladd+2,f
  4319  0F43                     u2843:	
  4320  0F43  084F               	movf	??___fladd+7,w
  4321  0F44  1803               	skipnc
  4322  0F45  0A4F               	incf	??___fladd+7,w
  4323  0F46  07CB               	addwf	??___fladd+3,f
  4324  0F47  084B               	movf	??___fladd+3,w
  4325  0F48  00C3               	movwf	___fladd@b+3
  4326  0F49  084A               	movf	??___fladd+2,w
  4327  0F4A  00C2               	movwf	___fladd@b+2
  4328  0F4B  0849               	movf	??___fladd+1,w
  4329  0F4C  00C1               	movwf	___fladd@b+1
  4330  0F4D  0848               	movf	??___fladd,w
  4331  0F4E  00C0               	movwf	___fladd@b
  4332  0F4F  3080               	movlw	128
  4333  0F50  00C8               	movwf	??___fladd
  4334  0F51  0848               	movf	??___fladd,w
  4335  0F52  06D0               	xorwf	___fladd@signs,f
  4336  0F53  09D3               	comf	___fladd@grs,f
  4337  0F54  0AD3               	incf	___fladd@grs,f
  4338  0F55  0853               	movf	___fladd@grs,w
  4339  0F56  1D03               	btfss	3,2
  4340  0F57  2F75               	goto	l766
  4341  0F58  3001               	movlw	1
  4342  0F59  07C0               	addwf	___fladd@b,f
  4343  0F5A  3000               	movlw	0
  4344  0F5B  1803               	skipnc
  4345  0F5C  3001               	movlw	1
  4346  0F5D  07C1               	addwf	___fladd@b+1,f
  4347  0F5E  3000               	movlw	0
  4348  0F5F  1803               	skipnc
  4349  0F60  3001               	movlw	1
  4350  0F61  07C2               	addwf	___fladd@b+2,f
  4351  0F62  3000               	movlw	0
  4352  0F63  1803               	skipnc
  4353  0F64  3001               	movlw	1
  4354  0F65  07C3               	addwf	___fladd@b+3,f
  4355  0F66  2F75               	goto	l766
  4356  0F67                     l3364:	
  4357  0F67  0844               	movf	___fladd@a,w
  4358  0F68  02C0               	subwf	___fladd@b,f
  4359  0F69  0845               	movf	___fladd@a+1,w
  4360  0F6A  1C03               	skipc
  4361  0F6B  0F45               	incfsz	___fladd@a+1,w
  4362  0F6C  02C1               	subwf	___fladd@b+1,f
  4363  0F6D  0846               	movf	___fladd@a+2,w
  4364  0F6E  1C03               	skipc
  4365  0F6F  0F46               	incfsz	___fladd@a+2,w
  4366  0F70  02C2               	subwf	___fladd@b+2,f
  4367  0F71  0847               	movf	___fladd@a+3,w
  4368  0F72  1C03               	skipc
  4369  0F73  0F47               	incfsz	___fladd@a+3,w
  4370  0F74  02C3               	subwf	___fladd@b+3,f
  4371  0F75                     l766:	
  4372  0F75  0843               	movf	___fladd@b+3,w
  4373  0F76  0442               	iorwf	___fladd@b+2,w
  4374  0F77  0441               	iorwf	___fladd@b+1,w
  4375  0F78  0440               	iorwf	___fladd@b,w
  4376  0F79  1D03               	skipz
  4377  0F7A  2F9D               	goto	l3386
  4378  0F7B  0853               	movf	___fladd@grs,w
  4379  0F7C  1D03               	btfss	3,2
  4380  0F7D  2F9D               	goto	l3386
  4381  0F7E  3000               	movlw	0
  4382  0F7F  00C3               	movwf	?___fladd+3
  4383  0F80  3000               	movlw	0
  4384  0F81  00C2               	movwf	?___fladd+2
  4385  0F82  3000               	movlw	0
  4386  0F83  00C1               	movwf	?___fladd+1
  4387  0F84  3000               	movlw	0
  4388  0F85  00C0               	movwf	?___fladd
  4389  0F86  0008               	return
  4390  0F87                     l3372:	
  4391  0F87  3001               	movlw	1
  4392  0F88  00C8               	movwf	??___fladd
  4393  0F89                     u2885:	
  4394  0F89  1003               	clrc
  4395  0F8A  0DC0               	rlf	___fladd@b,f
  4396  0F8B  0DC1               	rlf	___fladd@b+1,f
  4397  0F8C  0DC2               	rlf	___fladd@b+2,f
  4398  0F8D  0DC3               	rlf	___fladd@b+3,f
  4399  0F8E  0BC8               	decfsz	??___fladd,f
  4400  0F8F  2F89               	goto	u2885
  4401  0F90  1BD3               	btfsc	___fladd@grs,7
  4402  0F91  1440               	bsf	___fladd@b,0
  4403  0F92  1C53               	btfss	___fladd@grs,0
  4404  0F93  2F96               	goto	l3380
  4405  0F94  1403               	setc
  4406  0F95  2F97               	goto	L2
  4407  0F96                     l3380:	
  4408  0F96  1003               	clrc
  4409  0F97                     L2:	
  4410  0F97  0DD3               	rlf	___fladd@grs,f
  4411  0F98  0852               	movf	___fladd@bexp,w
  4412  0F99  1903               	btfsc	3,2
  4413  0F9A  2F9D               	goto	l3386
  4414  0F9B  3001               	movlw	1
  4415  0F9C  02D2               	subwf	___fladd@bexp,f
  4416  0F9D                     l3386:	
  4417  0F9D  1FC2               	btfss	___fladd@b+2,7
  4418  0F9E  2F87               	goto	l3372
  4419  0F9F                     l3388:	
  4420  0F9F  01D1               	clrf	___fladd@aexp
  4421  0FA0  1FD3               	btfss	___fladd@grs,7
  4422  0FA1  2FAA               	goto	l3398
  4423  0FA2  0853               	movf	___fladd@grs,w
  4424  0FA3  397F               	andlw	127
  4425  0FA4  1903               	btfsc	3,2
  4426  0FA5  1840               	btfsc	___fladd@b,0
  4427  0FA6  2FA8               	goto	l3394
  4428  0FA7  2FAA               	goto	l3398
  4429  0FA8                     l3394:	
  4430  0FA8  01D1               	clrf	___fladd@aexp
  4431  0FA9  0AD1               	incf	___fladd@aexp,f
  4432  0FAA                     l3398:	
  4433  0FAA  0851               	movf	___fladd@aexp,w
  4434  0FAB  1903               	btfsc	3,2
  4435  0FAC  2FDD               	goto	l779
  4436  0FAD  3001               	movlw	1
  4437  0FAE  07C0               	addwf	___fladd@b,f
  4438  0FAF  3000               	movlw	0
  4439  0FB0  1803               	skipnc
  4440  0FB1  3001               	movlw	1
  4441  0FB2  07C1               	addwf	___fladd@b+1,f
  4442  0FB3  3000               	movlw	0
  4443  0FB4  1803               	skipnc
  4444  0FB5  3001               	movlw	1
  4445  0FB6  07C2               	addwf	___fladd@b+2,f
  4446  0FB7  3000               	movlw	0
  4447  0FB8  1803               	skipnc
  4448  0FB9  3001               	movlw	1
  4449  0FBA  07C3               	addwf	___fladd@b+3,f
  4450  0FBB  1C43               	btfss	___fladd@b+3,0
  4451  0FBC  2FDD               	goto	l779
  4452  0FBD  0840               	movf	___fladd@b,w
  4453  0FBE  00C8               	movwf	??___fladd
  4454  0FBF  0841               	movf	___fladd@b+1,w
  4455  0FC0  00C9               	movwf	??___fladd+1
  4456  0FC1  0842               	movf	___fladd@b+2,w
  4457  0FC2  00CA               	movwf	??___fladd+2
  4458  0FC3  0843               	movf	___fladd@b+3,w
  4459  0FC4  00CB               	movwf	??___fladd+3
  4460  0FC5  3001               	movlw	1
  4461  0FC6  00CC               	movwf	??___fladd+4
  4462  0FC7                     u2985:	
  4463  0FC7  0D4B               	rlf	??___fladd+3,w
  4464  0FC8  0CCB               	rrf	??___fladd+3,f
  4465  0FC9  0CCA               	rrf	??___fladd+2,f
  4466  0FCA  0CC9               	rrf	??___fladd+1,f
  4467  0FCB  0CC8               	rrf	??___fladd,f
  4468  0FCC  0BCC               	decfsz	??___fladd+4,f
  4469  0FCD  2FC7               	goto	u2985
  4470  0FCE  084B               	movf	??___fladd+3,w
  4471  0FCF  00C3               	movwf	___fladd@b+3
  4472  0FD0  084A               	movf	??___fladd+2,w
  4473  0FD1  00C2               	movwf	___fladd@b+2
  4474  0FD2  0849               	movf	??___fladd+1,w
  4475  0FD3  00C1               	movwf	___fladd@b+1
  4476  0FD4  0848               	movf	??___fladd,w
  4477  0FD5  00C0               	movwf	___fladd@b
  4478  0FD6  0A52               	incf	___fladd@bexp,w
  4479  0FD7  1903               	btfsc	3,2
  4480  0FD8  2FDD               	goto	l779
  4481  0FD9  3001               	movlw	1
  4482  0FDA  00C8               	movwf	??___fladd
  4483  0FDB  0848               	movf	??___fladd,w
  4484  0FDC  07D2               	addwf	___fladd@bexp,f
  4485  0FDD                     l779:	
  4486  0FDD  0A52               	incf	___fladd@bexp,w
  4487  0FDE  1D03               	btfss	3,2
  4488  0FDF  0852               	movf	___fladd@bexp,w
  4489  0FE0  1D03               	btfss	3,2
  4490  0FE1  2FED               	goto	l3416
  4491  0FE2  3000               	movlw	0
  4492  0FE3  00C3               	movwf	___fladd@b+3
  4493  0FE4  3000               	movlw	0
  4494  0FE5  00C2               	movwf	___fladd@b+2
  4495  0FE6  3000               	movlw	0
  4496  0FE7  00C1               	movwf	___fladd@b+1
  4497  0FE8  3000               	movlw	0
  4498  0FE9  00C0               	movwf	___fladd@b
  4499  0FEA  0852               	movf	___fladd@bexp,w
  4500  0FEB  1903               	btfsc	3,2
  4501  0FEC  01D0               	clrf	___fladd@signs
  4502  0FED                     l3416:	
  4503  0FED  1C52               	btfss	___fladd@bexp,0
  4504  0FEE  2FF1               	goto	l3420
  4505  0FEF  17C2               	bsf	___fladd@b+2,7
  4506  0FF0  2FF5               	goto	l787
  4507  0FF1                     l3420:	
  4508  0FF1  307F               	movlw	127
  4509  0FF2  00C8               	movwf	??___fladd
  4510  0FF3  0848               	movf	??___fladd,w
  4511  0FF4  05C2               	andwf	___fladd@b+2,f
  4512  0FF5                     l787:	
  4513  0FF5  0852               	movf	___fladd@bexp,w
  4514  0FF6  00C8               	movwf	??___fladd
  4515  0FF7  1003               	clrc
  4516  0FF8  0C48               	rrf	??___fladd,w
  4517  0FF9  00C9               	movwf	??___fladd+1
  4518  0FFA  0849               	movf	??___fladd+1,w
  4519  0FFB  00C3               	movwf	___fladd@b+3
  4520  0FFC  1FD0               	btfss	___fladd@signs,7
  4521  0FFD  0008               	return
  4522  0FFE  17C3               	bsf	___fladd@b+3,7
  4523  0FFF  0008               	return
  4524  1000                     __end_of___fladd:	
  4525                           
  4526                           	psect	text9
  4527  173E                     __ptext9:	
  4528 ;; *************** function _pressBoton2 *****************
  4529 ;; Defined at:
  4530 ;;		line 399 in file "main_Master.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;		None
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;		None
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      void 
  4537 ;; Registers used:
  4538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4544 ;;      Params:         0       0       0       0       0
  4545 ;;      Locals:         0       0       0       0       0
  4546 ;;      Temps:          0       3       0       0       0
  4547 ;;      Totals:         0       3       0       0       0
  4548 ;;Total ram usage:        3 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    3
  4551 ;; This function calls:
  4552 ;;		_LCD_Set_Cursor
  4553 ;;		_LCD_Write_Character
  4554 ;;		_LCD_clear
  4555 ;; This function is called by:
  4556 ;;		_main
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560                           
  4561                           ;psect for function _pressBoton2
  4562  173E                     _pressBoton2:	
  4563                           
  4564                           ;main_Master.c: 400:     if (banderaBoton == 1){
  4565                           
  4566                           ;incstack = 0
  4567                           ; Regs used in _pressBoton2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4568  173E  1683               	bsf	3,5	;RP0=1, select bank1
  4569  173F  1303               	bcf	3,6	;RP1=0, select bank1
  4570  1740  033C               	decf	_banderaBoton^(0+128),w
  4571  1741  1D03               	btfss	3,2
  4572  1742  2FEA               	goto	l4044
  4573                           
  4574                           ;main_Master.c: 401:         if (banderaPUSH2 == 0){
  4575  1743  083A               	movf	_banderaPUSH2^(0+128),w
  4576  1744  1D03               	btfss	3,2
  4577  1745  2FEA               	goto	l4044
  4578                           
  4579                           ;main_Master.c: 402:             if (PORTBbits.RB2 == 0){
  4580  1746  1283               	bcf	3,5	;RP0=0, select bank0
  4581  1747  1303               	bcf	3,6	;RP1=0, select bank0
  4582  1748  1D06               	btfss	6,2	;volatile
  4583  1749  2FC7               	goto	l4036
  4584  174A  2FE4               	goto	l4038
  4585  174B                     l4004:	
  4586                           
  4587                           ;main_Master.c: 405:                         estado = 6;
  4588  174B  3006               	movlw	6
  4589  174C  2FB5               	goto	L7
  4590  174D                     l4006:	
  4591                           ;main_Master.c: 406:                         break;
  4592                           
  4593                           
  4594                           ;main_Master.c: 408:                         LCD_Set_Cursor(2,0);
  4595  174D  01F5               	clrf	LCD_Set_Cursor@columna
  4596  174E  3002               	movlw	2
  4597  174F  160A  118A  226D  160A  118A  	fcall	_LCD_Set_Cursor
  4598                           
  4599                           ;main_Master.c: 409:                         LCD_Write_Character(1);
  4600  1754  3001               	movlw	1
  4601  1755  160A  118A  2161  160A  118A  	fcall	_LCD_Write_Character
  4602                           
  4603                           ;main_Master.c: 410:                         _delay((unsigned long)((100)*(8000000/4000.
      +                          0)));
  4604  175A  3002               	movlw	2
  4605  175B  1283               	bcf	3,5	;RP0=0, select bank0
  4606  175C  1303               	bcf	3,6	;RP1=0, select bank0
  4607  175D  00A2               	movwf	??_pressBoton2+2
  4608  175E  3004               	movlw	4
  4609  175F  00A1               	movwf	??_pressBoton2+1
  4610  1760  30B9               	movlw	185
  4611  1761  00A0               	movwf	??_pressBoton2
  4612  1762                     u4757:	
  4613  1762  0BA0               	decfsz	??_pressBoton2,f
  4614  1763  2F62               	goto	u4757
  4615  1764  0BA1               	decfsz	??_pressBoton2+1,f
  4616  1765  2F62               	goto	u4757
  4617  1766  0BA2               	decfsz	??_pressBoton2+2,f
  4618  1767  2F62               	goto	u4757
  4619  1768  2F69               	nop2
  4620                           
  4621                           ;main_Master.c: 411:                         estado = 7;
  4622  1769  3007               	movlw	7
  4623  176A  2FB3               	goto	L8
  4624  176B                     l4014:	
  4625                           ;main_Master.c: 412:                         break;
  4626                           
  4627                           
  4628                           ;main_Master.c: 414:                         LCD_Set_Cursor(2,7);
  4629  176B  3007               	movlw	7
  4630  176C  00A0               	movwf	??_pressBoton2
  4631  176D  0820               	movf	??_pressBoton2,w
  4632  176E  00F5               	movwf	LCD_Set_Cursor@columna
  4633  176F  3002               	movlw	2
  4634  1770  160A  118A  226D  160A  118A  	fcall	_LCD_Set_Cursor
  4635                           
  4636                           ;main_Master.c: 415:                         LCD_Write_Character(1);
  4637  1775  3001               	movlw	1
  4638  1776  160A  118A  2161  160A  118A  	fcall	_LCD_Write_Character
  4639                           
  4640                           ;main_Master.c: 416:                         _delay((unsigned long)((100)*(8000000/4000.
      +                          0)));
  4641  177B  3002               	movlw	2
  4642  177C  1283               	bcf	3,5	;RP0=0, select bank0
  4643  177D  1303               	bcf	3,6	;RP1=0, select bank0
  4644  177E  00A2               	movwf	??_pressBoton2+2
  4645  177F  3004               	movlw	4
  4646  1780  00A1               	movwf	??_pressBoton2+1
  4647  1781  30B9               	movlw	185
  4648  1782  00A0               	movwf	??_pressBoton2
  4649  1783                     u4767:	
  4650  1783  0BA0               	decfsz	??_pressBoton2,f
  4651  1784  2F83               	goto	u4767
  4652  1785  0BA1               	decfsz	??_pressBoton2+1,f
  4653  1786  2F83               	goto	u4767
  4654  1787  0BA2               	decfsz	??_pressBoton2+2,f
  4655  1788  2F83               	goto	u4767
  4656  1789  2F8A               	nop2
  4657                           
  4658                           ;main_Master.c: 417:                         estado = 8;
  4659  178A  3008               	movlw	8
  4660  178B  2FB3               	goto	L8
  4661  178C                     l4022:	
  4662                           ;main_Master.c: 418:                         break;
  4663                           
  4664                           
  4665                           ;main_Master.c: 420:                         LCD_Set_Cursor(2,10);
  4666  178C  300A               	movlw	10
  4667  178D  00A0               	movwf	??_pressBoton2
  4668  178E  0820               	movf	??_pressBoton2,w
  4669  178F  00F5               	movwf	LCD_Set_Cursor@columna
  4670  1790  3002               	movlw	2
  4671  1791  160A  118A  226D  160A  118A  	fcall	_LCD_Set_Cursor
  4672                           
  4673                           ;main_Master.c: 421:                         LCD_Write_Character(1);
  4674  1796  3001               	movlw	1
  4675  1797  160A  118A  2161  160A  118A  	fcall	_LCD_Write_Character
  4676                           
  4677                           ;main_Master.c: 422:                         _delay((unsigned long)((100)*(8000000/4000.
      +                          0)));
  4678  179C  3002               	movlw	2
  4679  179D  1283               	bcf	3,5	;RP0=0, select bank0
  4680  179E  1303               	bcf	3,6	;RP1=0, select bank0
  4681  179F  00A2               	movwf	??_pressBoton2+2
  4682  17A0  3004               	movlw	4
  4683  17A1  00A1               	movwf	??_pressBoton2+1
  4684  17A2  30B9               	movlw	185
  4685  17A3  00A0               	movwf	??_pressBoton2
  4686  17A4                     u4777:	
  4687  17A4  0BA0               	decfsz	??_pressBoton2,f
  4688  17A5  2FA4               	goto	u4777
  4689  17A6  0BA1               	decfsz	??_pressBoton2+1,f
  4690  17A7  2FA4               	goto	u4777
  4691  17A8  0BA2               	decfsz	??_pressBoton2+2,f
  4692  17A9  2FA4               	goto	u4777
  4693  17AA  2FAB               	nop2
  4694                           
  4695                           ;main_Master.c: 423:                         estado = 9;
  4696  17AB  3009               	movlw	9
  4697  17AC  2FB3               	goto	L8
  4698  17AD                     l4030:	
  4699                           ;main_Master.c: 424:                         break;
  4700                           
  4701                           
  4702                           ;main_Master.c: 426:                         LCD_clear();
  4703  17AD  160A  118A  21A6  160A  118A  	fcall	_LCD_clear
  4704                           
  4705                           ;main_Master.c: 427:                         estado = 10;
  4706  17B2  300A               	movlw	10
  4707  17B3                     L8:	
  4708  17B3  1283               	bcf	3,5	;RP0=0, select bank0
  4709  17B4  1303               	bcf	3,6	;RP1=0, select bank0
  4710  17B5                     L7:	
  4711  17B5  00A0               	movwf	??_pressBoton2
  4712  17B6  0820               	movf	??_pressBoton2,w
  4713  17B7  1683               	bsf	3,5	;RP0=1, select bank1
  4714  17B8  1303               	bcf	3,6	;RP1=0, select bank1
  4715  17B9  00BF               	movwf	_estado^(0+128)
  4716                           
  4717                           ;main_Master.c: 428:                         break;
  4718  17BA  2FE4               	goto	l4038
  4719  17BB                     l4034:	
  4720                           
  4721                           ;main_Master.c: 430:                         _delay((unsigned long)((10)*(8000000/4000.0
      +                          )));
  4722  17BB  301A               	movlw	26
  4723  17BC  1283               	bcf	3,5	;RP0=0, select bank0
  4724  17BD  1303               	bcf	3,6	;RP1=0, select bank0
  4725  17BE  00A1               	movwf	??_pressBoton2+1
  4726  17BF  30F7               	movlw	247
  4727  17C0  00A0               	movwf	??_pressBoton2
  4728  17C1                     u4787:	
  4729  17C1  0BA0               	decfsz	??_pressBoton2,f
  4730  17C2  2FC1               	goto	u4787
  4731  17C3  0BA1               	decfsz	??_pressBoton2+1,f
  4732  17C4  2FC1               	goto	u4787
  4733  17C5  2FC6               	nop2
  4734                           
  4735                           ;main_Master.c: 431:                 }
  4736  17C6  2FE4               	goto	l4038
  4737  17C7                     l4036:	
  4738  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  4739  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  4740  17C9  083F               	movf	_estado^(0+128),w
  4741  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  4742  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  4743  17CC  00A0               	movwf	??_pressBoton2
  4744  17CD  01A1               	clrf	??_pressBoton2+1
  4745                           
  4746                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4747                           ; Switch size 1, requested type "simple"
  4748                           ; Number of cases is 1, Range of values is 0 to 0
  4749                           ; switch strategies available:
  4750                           ; Name         Instructions Cycles
  4751                           ; simple_byte            4     3 (average)
  4752                           ; direct_byte           11     8 (fixed)
  4753                           ; jumptable            260     6 (fixed)
  4754                           ;	Chosen strategy is simple_byte
  4755  17CE  0821               	movf	??_pressBoton2+1,w
  4756  17CF  3A00               	xorlw	0	; case 0
  4757  17D0  1903               	skipnz
  4758  17D1  2FD3               	goto	l5490
  4759  17D2  2FBB               	goto	l4034
  4760  17D3                     l5490:	
  4761                           
  4762                           ; Switch size 1, requested type "simple"
  4763                           ; Number of cases is 5, Range of values is 5 to 9
  4764                           ; switch strategies available:
  4765                           ; Name         Instructions Cycles
  4766                           ; simple_byte           16     9 (average)
  4767                           ; direct_byte           26    11 (fixed)
  4768                           ; jumptable            263     9 (fixed)
  4769                           ;	Chosen strategy is simple_byte
  4770  17D3  0820               	movf	??_pressBoton2,w
  4771  17D4  3A05               	xorlw	5	; case 5
  4772  17D5  1903               	skipnz
  4773  17D6  2F4B               	goto	l4004
  4774  17D7  3A03               	xorlw	3	; case 6
  4775  17D8  1903               	skipnz
  4776  17D9  2F4D               	goto	l4006
  4777  17DA  3A01               	xorlw	1	; case 7
  4778  17DB  1903               	skipnz
  4779  17DC  2F6B               	goto	l4014
  4780  17DD  3A0F               	xorlw	15	; case 8
  4781  17DE  1903               	skipnz
  4782  17DF  2F8C               	goto	l4022
  4783  17E0  3A01               	xorlw	1	; case 9
  4784  17E1  1903               	skipnz
  4785  17E2  2FAD               	goto	l4030
  4786  17E3  2FBB               	goto	l4034
  4787  17E4                     l4038:	
  4788                           
  4789                           ;main_Master.c: 433:                 banderaBoton = 0;
  4790  17E4  1683               	bsf	3,5	;RP0=1, select bank1
  4791  17E5  1303               	bcf	3,6	;RP1=0, select bank1
  4792  17E6  01BC               	clrf	_banderaBoton^(0+128)
  4793                           
  4794                           ;main_Master.c: 434:                 banderaPUSH2 = 1;
  4795  17E7  01BA               	clrf	_banderaPUSH2^(0+128)
  4796  17E8  0ABA               	incf	_banderaPUSH2^(0+128),f
  4797                           
  4798                           ;main_Master.c: 435:                 INTCONbits.RBIE = 1;
  4799  17E9  158B               	bsf	11,3	;volatile
  4800  17EA                     l4044:	
  4801                           
  4802                           ;main_Master.c: 438:     if (banderaPUSH2 == 1){
  4803  17EA  033A               	decf	_banderaPUSH2^(0+128),w
  4804  17EB  1D03               	btfss	3,2
  4805  17EC  0008               	return
  4806                           
  4807                           ;main_Master.c: 439:         if (PORTBbits.RB2 == 1){
  4808  17ED  1283               	bcf	3,5	;RP0=0, select bank0
  4809  17EE  1303               	bcf	3,6	;RP1=0, select bank0
  4810  17EF  1D06               	btfss	6,2	;volatile
  4811  17F0  0008               	return
  4812                           
  4813                           ;main_Master.c: 440:         _delay((unsigned long)((10)*(8000000/4000.0)));
  4814  17F1  301A               	movlw	26
  4815  17F2  1283               	bcf	3,5	;RP0=0, select bank0
  4816  17F3  1303               	bcf	3,6	;RP1=0, select bank0
  4817  17F4  00A1               	movwf	??_pressBoton2+1
  4818  17F5  30F7               	movlw	247
  4819  17F6  00A0               	movwf	??_pressBoton2
  4820  17F7                     u4797:	
  4821  17F7  0BA0               	decfsz	??_pressBoton2,f
  4822  17F8  2FF7               	goto	u4797
  4823  17F9  0BA1               	decfsz	??_pressBoton2+1,f
  4824  17FA  2FF7               	goto	u4797
  4825  17FB  2FFC               	nop2
  4826                           
  4827                           ;main_Master.c: 441:         banderaPUSH2 = 0;
  4828  17FC  1683               	bsf	3,5	;RP0=1, select bank1
  4829  17FD  1303               	bcf	3,6	;RP1=0, select bank1
  4830  17FE  01BA               	clrf	_banderaPUSH2^(0+128)
  4831  17FF  0008               	return
  4832  1800                     __end_of_pressBoton2:	
  4833                           
  4834                           	psect	text10
  4835  1513                     __ptext10:	
  4836 ;; *************** function _pressBoton1 *****************
  4837 ;; Defined at:
  4838 ;;		line 354 in file "main_Master.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;		None
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;		None
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  1    wreg      void 
  4845 ;; Registers used:
  4846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4852 ;;      Params:         0       0       0       0       0
  4853 ;;      Locals:         0       0       0       0       0
  4854 ;;      Temps:          2       0       0       0       0
  4855 ;;      Totals:         2       0       0       0       0
  4856 ;;Total ram usage:        2 bytes
  4857 ;; Hardware stack levels used:    1
  4858 ;; Hardware stack levels required when called:    3
  4859 ;; This function calls:
  4860 ;;		_LCD_clear
  4861 ;; This function is called by:
  4862 ;;		_main
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           
  4867                           ;psect for function _pressBoton1
  4868  1513                     _pressBoton1:	
  4869                           
  4870                           ;main_Master.c: 355:     if (banderaBoton == 1){
  4871                           
  4872                           ;incstack = 0
  4873                           ; Regs used in _pressBoton1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4874  1513  1683               	bsf	3,5	;RP0=1, select bank1
  4875  1514  1303               	bcf	3,6	;RP1=0, select bank1
  4876  1515  033C               	decf	_banderaBoton^(0+128),w
  4877  1516  1D03               	btfss	3,2
  4878  1517  2D74               	goto	l3982
  4879                           
  4880                           ;main_Master.c: 356:         if (banderaPUSH1 == 0){
  4881  1518  083B               	movf	_banderaPUSH1^(0+128),w
  4882  1519  1D03               	btfss	3,2
  4883  151A  2D74               	goto	l3982
  4884                           
  4885                           ;main_Master.c: 357:             if (PORTBbits.RB1 == 0){
  4886  151B  1283               	bcf	3,5	;RP0=0, select bank0
  4887  151C  1303               	bcf	3,6	;RP1=0, select bank0
  4888  151D  1C86               	btfss	6,1	;volatile
  4889  151E  2D5B               	goto	l3974
  4890  151F  2D74               	goto	l3982
  4891  1520                     l3946:	
  4892                           
  4893                           ;main_Master.c: 360:                         tiempo ++;
  4894  1520  3001               	movlw	1
  4895  1521  00F7               	movwf	??_pressBoton1
  4896  1522  0877               	movf	??_pressBoton1,w
  4897  1523  07C2               	addwf	_tiempo^(0+128),f
  4898                           
  4899                           ;main_Master.c: 361:                         if (tiempo > 9){
  4900  1524  300A               	movlw	10
  4901  1525  0242               	subwf	_tiempo^(0+128),w
  4902  1526  1C03               	skipc
  4903  1527  2D70               	goto	l3976
  4904                           
  4905                           ;main_Master.c: 362:                             tiempo = 1;
  4906  1528  01C2               	clrf	_tiempo^(0+128)
  4907  1529  0AC2               	incf	_tiempo^(0+128),f
  4908  152A  2D70               	goto	l3976
  4909  152B                     l3952:	
  4910                           
  4911                           ;main_Master.c: 366:                         largo ++;
  4912  152B  3001               	movlw	1
  4913  152C  00F7               	movwf	??_pressBoton1
  4914  152D  0877               	movf	??_pressBoton1,w
  4915  152E  07C1               	addwf	_largo^(0+128),f
  4916                           
  4917                           ;main_Master.c: 367:                         if (largo > 8){
  4918  152F  3009               	movlw	9
  4919  1530  0241               	subwf	_largo^(0+128),w
  4920  1531  1C03               	skipc
  4921  1532  2D70               	goto	l3976
  4922                           
  4923                           ;main_Master.c: 368:                             largo = 1;
  4924  1533  01C1               	clrf	_largo^(0+128)
  4925  1534  0AC1               	incf	_largo^(0+128),f
  4926  1535  2D70               	goto	l3976
  4927  1536                     l3958:	
  4928                           
  4929                           ;main_Master.c: 372:                         ancho ++;
  4930  1536  3001               	movlw	1
  4931  1537  00F7               	movwf	??_pressBoton1
  4932  1538  0877               	movf	??_pressBoton1,w
  4933  1539  07C0               	addwf	_ancho^(0+128),f
  4934                           
  4935                           ;main_Master.c: 373:                         if (ancho > 8){
  4936  153A  3009               	movlw	9
  4937  153B  0240               	subwf	_ancho^(0+128),w
  4938  153C  1C03               	skipc
  4939  153D  2D70               	goto	l3976
  4940                           
  4941                           ;main_Master.c: 374:                             ancho = 1;
  4942  153E  01C0               	clrf	_ancho^(0+128)
  4943  153F  0AC0               	incf	_ancho^(0+128),f
  4944  1540  2D70               	goto	l3976
  4945  1541                     l3964:	
  4946                           
  4947                           ;main_Master.c: 378:                         LCD_clear();
  4948  1541  160A  118A  21A6  160A  118A  	fcall	_LCD_clear
  4949                           
  4950                           ;main_Master.c: 379:                     _delay((unsigned long)((10)*(8000000/4000.0)));
  4951  1546  301A               	movlw	26
  4952  1547  00F8               	movwf	??_pressBoton1+1
  4953  1548  30F8               	movlw	248
  4954  1549  00F7               	movwf	??_pressBoton1
  4955  154A                     u4807:	
  4956  154A  0BF7               	decfsz	??_pressBoton1,f
  4957  154B  2D4A               	goto	u4807
  4958  154C  0BF8               	decfsz	??_pressBoton1+1,f
  4959  154D  2D4A               	goto	u4807
  4960  154E  0000               	nop
  4961                           
  4962                           ;main_Master.c: 380:                     estado ++;
  4963  154F  3001               	movlw	1
  4964  1550  00F7               	movwf	??_pressBoton1
  4965  1551  0877               	movf	??_pressBoton1,w
  4966  1552  1683               	bsf	3,5	;RP0=1, select bank1
  4967  1553  1303               	bcf	3,6	;RP1=0, select bank1
  4968  1554  07BF               	addwf	_estado^(0+128),f
  4969                           
  4970                           ;main_Master.c: 381:                     if (estado > 5){
  4971  1555  3006               	movlw	6
  4972  1556  023F               	subwf	_estado^(0+128),w
  4973  1557  1C03               	skipc
  4974  1558  2D70               	goto	l3976
  4975                           
  4976                           ;main_Master.c: 382:                         estado = 0;
  4977  1559  01BF               	clrf	_estado^(0+128)
  4978  155A  2D70               	goto	l3976
  4979  155B                     l3974:	
  4980  155B  1683               	bsf	3,5	;RP0=1, select bank1
  4981  155C  1303               	bcf	3,6	;RP1=0, select bank1
  4982  155D  083F               	movf	_estado^(0+128),w
  4983  155E  00F7               	movwf	??_pressBoton1
  4984  155F  01F8               	clrf	??_pressBoton1+1
  4985                           
  4986                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4987                           ; Switch size 1, requested type "simple"
  4988                           ; Number of cases is 1, Range of values is 0 to 0
  4989                           ; switch strategies available:
  4990                           ; Name         Instructions Cycles
  4991                           ; simple_byte            4     3 (average)
  4992                           ; direct_byte           11     8 (fixed)
  4993                           ; jumptable            260     6 (fixed)
  4994                           ;	Chosen strategy is simple_byte
  4995  1560  0878               	movf	??_pressBoton1+1,w
  4996  1561  3A00               	xorlw	0	; case 0
  4997  1562  1903               	skipnz
  4998  1563  2D65               	goto	l5492
  4999  1564  2D41               	goto	l3964
  5000  1565                     l5492:	
  5001                           
  5002                           ; Switch size 1, requested type "simple"
  5003                           ; Number of cases is 3, Range of values is 6 to 8
  5004                           ; switch strategies available:
  5005                           ; Name         Instructions Cycles
  5006                           ; simple_byte           10     6 (average)
  5007                           ; direct_byte           20    11 (fixed)
  5008                           ; jumptable            263     9 (fixed)
  5009                           ;	Chosen strategy is simple_byte
  5010  1565  0877               	movf	??_pressBoton1,w
  5011  1566  3A06               	xorlw	6	; case 6
  5012  1567  1903               	skipnz
  5013  1568  2D20               	goto	l3946
  5014  1569  3A01               	xorlw	1	; case 7
  5015  156A  1903               	skipnz
  5016  156B  2D2B               	goto	l3952
  5017  156C  3A0F               	xorlw	15	; case 8
  5018  156D  1903               	skipnz
  5019  156E  2D36               	goto	l3958
  5020  156F  2D41               	goto	l3964
  5021  1570                     l3976:	
  5022                           
  5023                           ;main_Master.c: 385:                 banderaBoton = 0;
  5024  1570  01BC               	clrf	_banderaBoton^(0+128)
  5025                           
  5026                           ;main_Master.c: 386:                 banderaPUSH1 = 1;
  5027  1571  01BB               	clrf	_banderaPUSH1^(0+128)
  5028  1572  0ABB               	incf	_banderaPUSH1^(0+128),f
  5029                           
  5030                           ;main_Master.c: 387:                 INTCONbits.RBIE = 1;
  5031  1573  158B               	bsf	11,3	;volatile
  5032  1574                     l3982:	
  5033                           
  5034                           ;main_Master.c: 391:     if (banderaPUSH1 == 1){
  5035  1574  1683               	bsf	3,5	;RP0=1, select bank1
  5036  1575  1303               	bcf	3,6	;RP1=0, select bank1
  5037  1576  033B               	decf	_banderaPUSH1^(0+128),w
  5038  1577  1D03               	btfss	3,2
  5039  1578  0008               	return
  5040                           
  5041                           ;main_Master.c: 392:         if (PORTBbits.RB1 == 1){
  5042  1579  1283               	bcf	3,5	;RP0=0, select bank0
  5043  157A  1303               	bcf	3,6	;RP1=0, select bank0
  5044  157B  1C86               	btfss	6,1	;volatile
  5045  157C  0008               	return
  5046                           
  5047                           ;main_Master.c: 393:         _delay((unsigned long)((10)*(8000000/4000.0)));
  5048  157D  301A               	movlw	26
  5049  157E  00F8               	movwf	??_pressBoton1+1
  5050  157F  30F8               	movlw	248
  5051  1580  00F7               	movwf	??_pressBoton1
  5052  1581                     u4817:	
  5053  1581  0BF7               	decfsz	??_pressBoton1,f
  5054  1582  2D81               	goto	u4817
  5055  1583  0BF8               	decfsz	??_pressBoton1+1,f
  5056  1584  2D81               	goto	u4817
  5057  1585  0000               	nop
  5058                           
  5059                           ;main_Master.c: 394:         banderaPUSH1 = 0;
  5060  1586  1683               	bsf	3,5	;RP0=1, select bank1
  5061  1587  1303               	bcf	3,6	;RP1=0, select bank1
  5062  1588  01BB               	clrf	_banderaPUSH1^(0+128)
  5063  1589  0008               	return
  5064  158A                     __end_of_pressBoton1:	
  5065                           
  5066                           	psect	text11
  5067  0344                     __ptext11:	
  5068 ;; *************** function _mostrarLCD *****************
  5069 ;; Defined at:
  5070 ;;		line 234 in file "main_Master.c"
  5071 ;; Parameters:    Size  Location     Type
  5072 ;;  pantalla        1    wreg     unsigned char 
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;  pantalla        1   26[BANK0 ] unsigned char 
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  1    wreg      void 
  5077 ;; Registers used:
  5078 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5084 ;;      Params:         0       0       0       0       0
  5085 ;;      Locals:         0       1       0       0       0
  5086 ;;      Temps:          0       3       0       0       0
  5087 ;;      Totals:         0       4       0       0       0
  5088 ;;Total ram usage:        4 bytes
  5089 ;; Hardware stack levels used:    1
  5090 ;; Hardware stack levels required when called:    4
  5091 ;; This function calls:
  5092 ;;		_LCD_Set_Cursor
  5093 ;;		_LCD_Write_Character
  5094 ;;		_LCD_Write_String
  5095 ;;		_LCD_clear
  5096 ;;		_display_Datum
  5097 ;;		_display_Uhrzeit
  5098 ;;		_uint_to_array
  5099 ;; This function is called by:
  5100 ;;		_main
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           
  5105                           ;psect for function _mostrarLCD
  5106  0344                     _mostrarLCD:	
  5107                           
  5108                           ;incstack = 0
  5109                           ; Regs used in _mostrarLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5110                           ;mostrarLCD@pantalla stored from wreg
  5111  0344  1283               	bcf	3,5	;RP0=0, select bank0
  5112  0345  1303               	bcf	3,6	;RP1=0, select bank0
  5113  0346  00BA               	movwf	mostrarLCD@pantalla
  5114                           
  5115                           ;main_Master.c: 235:     switch(pantalla){
  5116  0347  2DD5               	goto	l5022
  5117  0348                     l4910:	
  5118                           
  5119                           ;main_Master.c: 237:             display_Uhrzeit(2,4);
  5120  0348  3004               	movlw	4
  5121  0349  00B7               	movwf	??_mostrarLCD
  5122  034A  0837               	movf	??_mostrarLCD,w
  5123  034B  00A8               	movwf	display_Uhrzeit@columna
  5124  034C  3002               	movlw	2
  5125  034D  120A  158A  225C  120A  118A  	fcall	_display_Uhrzeit
  5126                           
  5127                           ;main_Master.c: 238:             display_Datum(1,3);
  5128  0352  3003               	movlw	3
  5129  0353  1283               	bcf	3,5	;RP0=0, select bank0
  5130  0354  1303               	bcf	3,6	;RP1=0, select bank0
  5131  0355  00B7               	movwf	??_mostrarLCD
  5132  0356  0837               	movf	??_mostrarLCD,w
  5133  0357  00A8               	movwf	display_Datum@columna
  5134  0358  3001               	movlw	1
  5135  0359  120A  158A  233E  120A  118A  	fcall	_display_Datum
  5136                           
  5137                           ;main_Master.c: 239:             LCD_Set_Cursor(2, 15);
  5138  035E  300F               	movlw	15
  5139  035F  1283               	bcf	3,5	;RP0=0, select bank0
  5140  0360  1303               	bcf	3,6	;RP1=0, select bank0
  5141  0361  00B7               	movwf	??_mostrarLCD
  5142  0362  0837               	movf	??_mostrarLCD,w
  5143  0363  00F5               	movwf	LCD_Set_Cursor@columna
  5144  0364  3002               	movlw	2
  5145  0365  160A  118A  226D   	fcall	_LCD_Set_Cursor
  5146                           
  5147                           ;main_Master.c: 240:             break;
  5148  0368  0008               	return
  5149  0369                     l4912:	
  5150                           
  5151                           ;main_Master.c: 242:             LCD_Set_Cursor(1,0);
  5152  0369  01F5               	clrf	LCD_Set_Cursor@columna
  5153  036A  3001               	movlw	1
  5154  036B  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5155                           
  5156                           ;main_Master.c: 243:             LCD_Write_String("Ambiente:");
  5157  0370  3064               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  5158  0371  160A  118A  21F3  120A  118A  	fcall	_LCD_Write_String
  5159                           
  5160                           ;main_Master.c: 244:             LCD_Set_Cursor(2,5);
  5161  0376  3005               	movlw	5
  5162  0377  1283               	bcf	3,5	;RP0=0, select bank0
  5163  0378  1303               	bcf	3,6	;RP1=0, select bank0
  5164  0379  00B7               	movwf	??_mostrarLCD
  5165  037A  0837               	movf	??_mostrarLCD,w
  5166  037B  00F5               	movwf	LCD_Set_Cursor@columna
  5167  037C  3002               	movlw	2
  5168  037D  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5169                           
  5170                           ;main_Master.c: 245:             LCD_Write_Character(2);
  5171  0382  3002               	movlw	2
  5172  0383  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5173                           
  5174                           ;main_Master.c: 246:             obj_array = uint_to_array(temperatura);
  5175  0388  1683               	bsf	3,5	;RP0=1, select bank1
  5176  0389  1303               	bcf	3,6	;RP1=0, select bank1
  5177  038A  083E               	movf	_temperatura^(0+128),w
  5178  038B  160A  118A  260D  120A  118A  	fcall	_uint_to_array
  5179  0390  1283               	bcf	3,5	;RP0=0, select bank0
  5180  0391  1303               	bcf	3,6	;RP1=0, select bank0
  5181  0392  00B7               	movwf	??_mostrarLCD
  5182  0393  0837               	movf	??_mostrarLCD,w
  5183  0394  00FA               	movwf	_obj_array
  5184                           
  5185                           ;main_Master.c: 247:             if (obj_array[0] == 0){
  5186  0395  087A               	movf	_obj_array,w
  5187  0396  0084               	movwf	4
  5188  0397  1383               	bcf	3,7	;select IRP bank0
  5189  0398  0800               	movf	0,w
  5190  0399  00B7               	movwf	??_mostrarLCD
  5191  039A  0A84               	incf	4,f
  5192  039B  0800               	movf	0,w
  5193  039C  00B8               	movwf	??_mostrarLCD+1
  5194  039D  0837               	movf	??_mostrarLCD,w
  5195  039E  0438               	iorwf	??_mostrarLCD+1,w
  5196  039F  1D03               	btfss	3,2
  5197  03A0  2BA3               	goto	l4922
  5198                           
  5199                           ;main_Master.c: 248:                 LCD_Write_Character(' ');
  5200  03A1  3020               	movlw	32
  5201  03A2  2BA7               	goto	L9
  5202  03A3                     l4922:	
  5203                           ;main_Master.c: 249:             }
  5204                           
  5205                           
  5206                           ;main_Master.c: 251:                 LCD_Write_Character('0' + obj_array[0]);
  5207  03A3  087A               	movf	_obj_array,w
  5208  03A4  0084               	movwf	4
  5209  03A5  0800               	movf	0,w
  5210  03A6  3E30               	addlw	48
  5211  03A7                     L9:	
  5212  03A7  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5213                           
  5214                           ;main_Master.c: 253:             LCD_Write_Character('0' + obj_array[1]);
  5215                           
  5216                           ;main_Master.c: 252:             }
  5217  03AC  087A               	movf	_obj_array,w
  5218  03AD  3E02               	addlw	2
  5219  03AE  0084               	movwf	4
  5220  03AF  1383               	bcf	3,7	;select IRP bank0
  5221  03B0  0800               	movf	0,w
  5222  03B1  3E30               	addlw	48
  5223  03B2  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5224                           
  5225                           ;main_Master.c: 254:             LCD_Write_Character('0' + obj_array[2]);
  5226  03B7  087A               	movf	_obj_array,w
  5227  03B8  3E04               	addlw	4
  5228  03B9  0084               	movwf	4
  5229  03BA  1383               	bcf	3,7	;select IRP bank0
  5230  03BB  0800               	movf	0,w
  5231  03BC  3E30               	addlw	48
  5232  03BD  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5233                           
  5234                           ;main_Master.c: 255:             LCD_Write_Character(223);
  5235  03C2  30DF               	movlw	223
  5236  03C3  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5237                           
  5238                           ;main_Master.c: 256:             LCD_Write_Character('C');
  5239  03C8  3043               	movlw	67
  5240  03C9  160A  118A  2161   	fcall	_LCD_Write_Character
  5241                           
  5242                           ;main_Master.c: 257:             break;
  5243  03CC  0008               	return
  5244  03CD                     l4928:	
  5245                           
  5246                           ;main_Master.c: 259:             LCD_Set_Cursor(1,0);
  5247  03CD  01F5               	clrf	LCD_Set_Cursor@columna
  5248  03CE  3001               	movlw	1
  5249  03CF  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5250                           
  5251                           ;main_Master.c: 260:             LCD_Write_String("Temp. del Suelo:");
  5252  03D4  3029               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  5253  03D5  160A  118A  21F3  120A  118A  	fcall	_LCD_Write_String
  5254                           
  5255                           ;main_Master.c: 261:             LCD_Set_Cursor(2,5);
  5256  03DA  3005               	movlw	5
  5257  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  5258  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  5259  03DD  00B7               	movwf	??_mostrarLCD
  5260  03DE  0837               	movf	??_mostrarLCD,w
  5261  03DF  00F5               	movwf	LCD_Set_Cursor@columna
  5262  03E0  3002               	movlw	2
  5263  03E1  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5264                           
  5265                           ;main_Master.c: 262:             LCD_Write_Character(2);
  5266  03E6  3002               	movlw	2
  5267  03E7  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5268                           
  5269                           ;main_Master.c: 263:             obj_array = uint_to_array(temperatura_obj);
  5270  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  5271  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  5272  03EE  083D               	movf	_temperatura_obj^(0+128),w
  5273  03EF  160A  118A  260D  120A  118A  	fcall	_uint_to_array
  5274  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  5275  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  5276  03F6  00B7               	movwf	??_mostrarLCD
  5277  03F7  0837               	movf	??_mostrarLCD,w
  5278  03F8  00FA               	movwf	_obj_array
  5279                           
  5280                           ;main_Master.c: 264:             if (obj_array[0] == 0){
  5281  03F9  087A               	movf	_obj_array,w
  5282  03FA  0084               	movwf	4
  5283  03FB  1383               	bcf	3,7	;select IRP bank0
  5284  03FC  0800               	movf	0,w
  5285  03FD  00B7               	movwf	??_mostrarLCD
  5286  03FE  0A84               	incf	4,f
  5287  03FF  0800               	movf	0,w
  5288  0400  00B8               	movwf	??_mostrarLCD+1
  5289  0401  0837               	movf	??_mostrarLCD,w
  5290  0402  0438               	iorwf	??_mostrarLCD+1,w
  5291  0403  1D03               	btfss	3,2
  5292  0404  2C07               	goto	l4938
  5293                           
  5294                           ;main_Master.c: 265:                 LCD_Write_Character(' ');
  5295  0405  3020               	movlw	32
  5296  0406  2C0B               	goto	L10
  5297  0407                     l4938:	
  5298                           ;main_Master.c: 266:             }
  5299                           
  5300                           
  5301                           ;main_Master.c: 268:                 LCD_Write_Character('0' + obj_array[0]);
  5302  0407  087A               	movf	_obj_array,w
  5303  0408  0084               	movwf	4
  5304  0409  0800               	movf	0,w
  5305  040A  3E30               	addlw	48
  5306  040B                     L10:	
  5307  040B  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5308                           
  5309                           ;main_Master.c: 271:             if (obj_array[1] == 0 && obj_array[0] == 0){
  5310  0410  087A               	movf	_obj_array,w
  5311  0411  3E02               	addlw	2
  5312  0412  0084               	movwf	4
  5313  0413  1383               	bcf	3,7	;select IRP bank0
  5314  0414  0800               	movf	0,w
  5315  0415  1283               	bcf	3,5	;RP0=0, select bank0
  5316  0416  1303               	bcf	3,6	;RP1=0, select bank0
  5317  0417  00B7               	movwf	??_mostrarLCD
  5318  0418  0A84               	incf	4,f
  5319  0419  0800               	movf	0,w
  5320  041A  00B8               	movwf	??_mostrarLCD+1
  5321  041B  0837               	movf	??_mostrarLCD,w
  5322  041C  0438               	iorwf	??_mostrarLCD+1,w
  5323  041D  1D03               	btfss	3,2
  5324  041E  2C2C               	goto	l4946
  5325  041F  087A               	movf	_obj_array,w
  5326  0420  0084               	movwf	4
  5327  0421  0800               	movf	0,w
  5328  0422  00B7               	movwf	??_mostrarLCD
  5329  0423  0A84               	incf	4,f
  5330  0424  0800               	movf	0,w
  5331  0425  00B8               	movwf	??_mostrarLCD+1
  5332  0426  0837               	movf	??_mostrarLCD,w
  5333  0427  0438               	iorwf	??_mostrarLCD+1,w
  5334  0428  1D03               	btfss	3,2
  5335  0429  2C2C               	goto	l4946
  5336                           
  5337                           ;main_Master.c: 272:                 LCD_Write_Character(' ');
  5338  042A  3020               	movlw	32
  5339  042B  2C31               	goto	L11
  5340  042C                     l4946:	
  5341                           ;main_Master.c: 273:             }
  5342                           
  5343                           
  5344                           ;main_Master.c: 275:                 LCD_Write_Character('0' + obj_array[1]);
  5345  042C  087A               	movf	_obj_array,w
  5346  042D  3E02               	addlw	2
  5347  042E  0084               	movwf	4
  5348  042F  0800               	movf	0,w
  5349  0430  3E30               	addlw	48
  5350  0431                     L11:	
  5351  0431  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5352                           
  5353                           ;main_Master.c: 277:             LCD_Write_Character('0' + obj_array[2]);
  5354                           
  5355                           ;main_Master.c: 276:             }
  5356  0436  087A               	movf	_obj_array,w
  5357  0437  3E04               	addlw	4
  5358  0438  0084               	movwf	4
  5359  0439  1383               	bcf	3,7	;select IRP bank0
  5360  043A  0800               	movf	0,w
  5361  043B  3E30               	addlw	48
  5362  043C  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5363                           
  5364                           ;main_Master.c: 278:             LCD_Write_Character(223);
  5365  0441  30DF               	movlw	223
  5366  0442  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5367                           
  5368                           ;main_Master.c: 279:             LCD_Write_Character('C');
  5369  0447  3043               	movlw	67
  5370  0448  160A  118A  2161   	fcall	_LCD_Write_Character
  5371                           
  5372                           ;main_Master.c: 280:             break;
  5373  044B  0008               	return
  5374  044C                     l4952:	
  5375                           
  5376                           ;main_Master.c: 282:             LCD_Set_Cursor(1,0);
  5377  044C  01F5               	clrf	LCD_Set_Cursor@columna
  5378  044D  3001               	movlw	1
  5379  044E  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5380                           
  5381                           ;main_Master.c: 283:             LCD_Write_String("Humedad:");
  5382  0453  306E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  5383  0454  160A  118A  21F3  120A  118A  	fcall	_LCD_Write_String
  5384                           
  5385                           ;main_Master.c: 284:             LCD_Set_Cursor(2,4);
  5386  0459  3004               	movlw	4
  5387  045A  1283               	bcf	3,5	;RP0=0, select bank0
  5388  045B  1303               	bcf	3,6	;RP1=0, select bank0
  5389  045C  00B7               	movwf	??_mostrarLCD
  5390  045D  0837               	movf	??_mostrarLCD,w
  5391  045E  00F5               	movwf	LCD_Set_Cursor@columna
  5392  045F  3002               	movlw	2
  5393  0460  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5394                           
  5395                           ;main_Master.c: 285:             LCD_Write_Character(3);
  5396  0465  3003               	movlw	3
  5397  0466  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5398                           
  5399                           ;main_Master.c: 286:             LCD_Write_Character(' ');
  5400  046B  3020               	movlw	32
  5401  046C  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5402                           
  5403                           ;main_Master.c: 287:             LCD_Write_String("80");
  5404  0471  308B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  5405  0472  160A  118A  21F3  120A  118A  	fcall	_LCD_Write_String
  5406                           
  5407                           ;main_Master.c: 288:             LCD_Write_Character('%');
  5408  0477  3025               	movlw	37
  5409  0478  160A  118A  2161   	fcall	_LCD_Write_Character
  5410                           
  5411                           ;main_Master.c: 289:             break;
  5412  047B  0008               	return
  5413  047C                     l4960:	
  5414                           
  5415                           ;main_Master.c: 291:             LCD_Set_Cursor(1,0);
  5416  047C  01F5               	clrf	LCD_Set_Cursor@columna
  5417  047D  3001               	movlw	1
  5418  047E  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5419                           
  5420                           ;main_Master.c: 292:             LCD_Write_String("Atr");
  5421  0483  3081               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  5422  0484  160A  118A  21F3  120A  118A  	fcall	_LCD_Write_String
  5423                           
  5424                           ;main_Master.c: 293:             LCD_Write_Character(0);
  5425  0489  3000               	movlw	0
  5426  048A  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5427                           
  5428                           ;main_Master.c: 294:             LCD_Write_String("s: | Frente:");
  5429  048F  304A               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  5430  0490  160A  118A  21F3  120A  118A  	fcall	_LCD_Write_String
  5431                           
  5432                           ;main_Master.c: 295:             LCD_Set_Cursor(2,2);
  5433  0495  3002               	movlw	2
  5434  0496  1283               	bcf	3,5	;RP0=0, select bank0
  5435  0497  1303               	bcf	3,6	;RP1=0, select bank0
  5436  0498  00B7               	movwf	??_mostrarLCD
  5437  0499  0837               	movf	??_mostrarLCD,w
  5438  049A  00F5               	movwf	LCD_Set_Cursor@columna
  5439  049B  3002               	movlw	2
  5440  049C  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5441                           
  5442                           ;main_Master.c: 296:             LCD_Write_String("3");
  5443  04A1  308E               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  5444  04A2  160A  118A  21F3  120A  118A  	fcall	_LCD_Write_String
  5445                           
  5446                           ;main_Master.c: 297:             LCD_Write_Character('m');
  5447  04A7  306D               	movlw	109
  5448  04A8  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5449                           
  5450                           ;main_Master.c: 298:             LCD_Set_Cursor(2,7);
  5451  04AD  3007               	movlw	7
  5452  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  5453  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  5454  04B0  00B7               	movwf	??_mostrarLCD
  5455  04B1  0837               	movf	??_mostrarLCD,w
  5456  04B2  00F5               	movwf	LCD_Set_Cursor@columna
  5457  04B3  3002               	movlw	2
  5458  04B4  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5459                           
  5460                           ;main_Master.c: 299:             LCD_Write_Character('|');
  5461  04B9  307C               	movlw	124
  5462  04BA  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5463                           
  5464                           ;main_Master.c: 300:             LCD_Set_Cursor(2,11);
  5465  04BF  300B               	movlw	11
  5466  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  5467  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  5468  04C2  00B7               	movwf	??_mostrarLCD
  5469  04C3  0837               	movf	??_mostrarLCD,w
  5470  04C4  00F5               	movwf	LCD_Set_Cursor@columna
  5471  04C5  3002               	movlw	2
  5472  04C6  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5473                           
  5474                           ;main_Master.c: 301:             LCD_Write_String("4");
  5475  04CB  3090               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  5476  04CC  160A  118A  21F3  120A  118A  	fcall	_LCD_Write_String
  5477                           
  5478                           ;main_Master.c: 302:             LCD_Write_Character('m');
  5479  04D1  306D               	movlw	109
  5480  04D2  160A  118A  2161   	fcall	_LCD_Write_Character
  5481                           
  5482                           ;main_Master.c: 303:             break;
  5483  04D5  0008               	return
  5484  04D6                     l4976:	
  5485                           
  5486                           ;main_Master.c: 305:             LCD_Set_Cursor(1, 0);
  5487  04D6  01F5               	clrf	LCD_Set_Cursor@columna
  5488  04D7  3001               	movlw	1
  5489  04D8  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5490                           
  5491                           ;main_Master.c: 306:             LCD_Write_String("Tomar datos:");
  5492  04DD  3057               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  5493  04DE  160A  118A  21F3  120A  118A  	fcall	_LCD_Write_String
  5494                           
  5495                           ;main_Master.c: 307:             LCD_Set_Cursor(2,1);
  5496  04E3  01F5               	clrf	LCD_Set_Cursor@columna
  5497  04E4  0AF5               	incf	LCD_Set_Cursor@columna,f
  5498  04E5  3002               	movlw	2
  5499  04E6  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5500                           
  5501                           ;main_Master.c: 308:             LCD_Write_Character(tiempo + '0');
  5502  04EB  1683               	bsf	3,5	;RP0=1, select bank1
  5503  04EC  1303               	bcf	3,6	;RP1=0, select bank1
  5504  04ED  0842               	movf	_tiempo^(0+128),w
  5505  04EE  3E30               	addlw	48
  5506  04EF  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5507                           
  5508                           ;main_Master.c: 309:             LCD_Write_String("min");
  5509  04F4  307D               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  5510  04F5  160A  118A  21F3  120A  118A  	fcall	_LCD_Write_String
  5511                           
  5512                           ;main_Master.c: 310:             LCD_Set_Cursor(2,8);
  5513  04FA  3008               	movlw	8
  5514  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  5515  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  5516  04FD  00B7               	movwf	??_mostrarLCD
  5517  04FE  0837               	movf	??_mostrarLCD,w
  5518  04FF  00F5               	movwf	LCD_Set_Cursor@columna
  5519  0500  3002               	movlw	2
  5520  0501  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5521                           
  5522                           ;main_Master.c: 311:             LCD_Write_Character('0' + largo);
  5523  0506  1683               	bsf	3,5	;RP0=1, select bank1
  5524  0507  1303               	bcf	3,6	;RP1=0, select bank1
  5525  0508  0841               	movf	_largo^(0+128),w
  5526  0509  3E30               	addlw	48
  5527  050A  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5528                           
  5529                           ;main_Master.c: 312:             LCD_Write_String("x ");
  5530  050F  3085               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  5531  0510  160A  118A  21F3  120A  118A  	fcall	_LCD_Write_String
  5532                           
  5533                           ;main_Master.c: 313:             LCD_Write_Character('0' + ancho);
  5534  0515  1683               	bsf	3,5	;RP0=1, select bank1
  5535  0516  1303               	bcf	3,6	;RP1=0, select bank1
  5536  0517  0840               	movf	_ancho^(0+128),w
  5537  0518  3E30               	addlw	48
  5538  0519  160A  118A  2161   	fcall	_LCD_Write_Character
  5539                           
  5540                           ;main_Master.c: 314:             break;
  5541  051C  0008               	return
  5542  051D                     l4988:	
  5543                           
  5544                           ;main_Master.c: 316:             LCD_Set_Cursor(2,0);
  5545  051D  01F5               	clrf	LCD_Set_Cursor@columna
  5546  051E  3002               	movlw	2
  5547  051F  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5548                           
  5549                           ;main_Master.c: 317:             LCD_Write_Character(4);
  5550  0524  3004               	movlw	4
  5551  0525  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5552                           
  5553                           ;main_Master.c: 318:             LCD_Write_Character(tiempo + '0');
  5554  052A  1683               	bsf	3,5	;RP0=1, select bank1
  5555  052B  1303               	bcf	3,6	;RP1=0, select bank1
  5556  052C  0842               	movf	_tiempo^(0+128),w
  5557  052D  3E30               	addlw	48
  5558  052E  160A  118A  2161   	fcall	_LCD_Write_Character
  5559                           
  5560                           ;main_Master.c: 319:             break;
  5561  0531  0008               	return
  5562  0532                     l4994:	
  5563                           
  5564                           ;main_Master.c: 321:             LCD_Set_Cursor(2,0);
  5565  0532  01F5               	clrf	LCD_Set_Cursor@columna
  5566  0533  3002               	movlw	2
  5567  0534  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5568                           
  5569                           ;main_Master.c: 322:             LCD_Write_Character(' ');
  5570  0539  3020               	movlw	32
  5571  053A  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5572                           
  5573                           ;main_Master.c: 323:             LCD_Set_Cursor(2,7);
  5574  053F  3007               	movlw	7
  5575  0540  1283               	bcf	3,5	;RP0=0, select bank0
  5576  0541  1303               	bcf	3,6	;RP1=0, select bank0
  5577  0542  00B7               	movwf	??_mostrarLCD
  5578  0543  0837               	movf	??_mostrarLCD,w
  5579  0544  00F5               	movwf	LCD_Set_Cursor@columna
  5580  0545  3002               	movlw	2
  5581  0546  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5582                           
  5583                           ;main_Master.c: 324:             LCD_Write_Character(4);
  5584  054B  3004               	movlw	4
  5585  054C  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5586                           
  5587                           ;main_Master.c: 325:             LCD_Write_Character('0' + largo);
  5588  0551  1683               	bsf	3,5	;RP0=1, select bank1
  5589  0552  1303               	bcf	3,6	;RP1=0, select bank1
  5590  0553  0841               	movf	_largo^(0+128),w
  5591  0554  3E30               	addlw	48
  5592  0555  160A  118A  2161   	fcall	_LCD_Write_Character
  5593                           
  5594                           ;main_Master.c: 326:             break;
  5595  0558  0008               	return
  5596  0559                     l5000:	
  5597                           
  5598                           ;main_Master.c: 328:             LCD_Set_Cursor(2,7);
  5599  0559  3007               	movlw	7
  5600  055A  00B7               	movwf	??_mostrarLCD
  5601  055B  0837               	movf	??_mostrarLCD,w
  5602  055C  00F5               	movwf	LCD_Set_Cursor@columna
  5603  055D  3002               	movlw	2
  5604  055E  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5605                           
  5606                           ;main_Master.c: 329:             LCD_Write_Character(' ');
  5607  0563  3020               	movlw	32
  5608  0564  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5609                           
  5610                           ;main_Master.c: 330:             LCD_Set_Cursor(2,10);
  5611  0569  300A               	movlw	10
  5612  056A  1283               	bcf	3,5	;RP0=0, select bank0
  5613  056B  1303               	bcf	3,6	;RP1=0, select bank0
  5614  056C  00B7               	movwf	??_mostrarLCD
  5615  056D  0837               	movf	??_mostrarLCD,w
  5616  056E  00F5               	movwf	LCD_Set_Cursor@columna
  5617  056F  3002               	movlw	2
  5618  0570  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5619                           
  5620                           ;main_Master.c: 331:             LCD_Write_Character(4);
  5621  0575  3004               	movlw	4
  5622  0576  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5623                           
  5624                           ;main_Master.c: 332:             LCD_Write_Character('0' + ancho);
  5625  057B  1683               	bsf	3,5	;RP0=1, select bank1
  5626  057C  1303               	bcf	3,6	;RP1=0, select bank1
  5627  057D  0840               	movf	_ancho^(0+128),w
  5628  057E  3E30               	addlw	48
  5629  057F  160A  118A  2161   	fcall	_LCD_Write_Character
  5630                           
  5631                           ;main_Master.c: 333:             break;
  5632  0582  0008               	return
  5633  0583                     l5006:	
  5634                           
  5635                           ;main_Master.c: 335:             LCD_Set_Cursor(2,10);
  5636  0583  300A               	movlw	10
  5637  0584  00B7               	movwf	??_mostrarLCD
  5638  0585  0837               	movf	??_mostrarLCD,w
  5639  0586  00F5               	movwf	LCD_Set_Cursor@columna
  5640  0587  3002               	movlw	2
  5641  0588  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5642                           
  5643                           ;main_Master.c: 336:             LCD_Write_Character(' ');
  5644  058D  3020               	movlw	32
  5645  058E  160A  118A  2161  120A  118A  	fcall	_LCD_Write_Character
  5646                           
  5647                           ;main_Master.c: 337:             LCD_Set_Cursor(2,15);
  5648  0593  300F               	movlw	15
  5649  0594  1283               	bcf	3,5	;RP0=0, select bank0
  5650  0595  1303               	bcf	3,6	;RP1=0, select bank0
  5651  0596  00B7               	movwf	??_mostrarLCD
  5652  0597  0837               	movf	??_mostrarLCD,w
  5653  0598  00F5               	movwf	LCD_Set_Cursor@columna
  5654  0599  3002               	movlw	2
  5655  059A  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5656                           
  5657                           ;main_Master.c: 338:             LCD_Write_Character(1);
  5658  059F  3001               	movlw	1
  5659  05A0  160A  118A  2161   	fcall	_LCD_Write_Character
  5660                           
  5661                           ;main_Master.c: 339:             break;
  5662  05A3  0008               	return
  5663  05A4                     l5012:	
  5664                           
  5665                           ;main_Master.c: 341:             LCD_Set_Cursor(1,0);
  5666  05A4  01F5               	clrf	LCD_Set_Cursor@columna
  5667  05A5  3001               	movlw	1
  5668  05A6  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5669                           
  5670                           ;main_Master.c: 342:             LCD_Write_String("Vamonos Perros!");
  5671  05AB  303A               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  5672  05AC  160A  118A  21F3  120A  118A  	fcall	_LCD_Write_String
  5673                           
  5674                           ;main_Master.c: 344:             _delay((unsigned long)((500)*(8000000/4000.0)));
  5675  05B1  3006               	movlw	6
  5676  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  5677  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  5678  05B4  00B9               	movwf	??_mostrarLCD+2
  5679  05B5  3013               	movlw	19
  5680  05B6  00B8               	movwf	??_mostrarLCD+1
  5681  05B7  30AD               	movlw	173
  5682  05B8  00B7               	movwf	??_mostrarLCD
  5683  05B9                     u4827:	
  5684  05B9  0BB7               	decfsz	??_mostrarLCD,f
  5685  05BA  2DB9               	goto	u4827
  5686  05BB  0BB8               	decfsz	??_mostrarLCD+1,f
  5687  05BC  2DB9               	goto	u4827
  5688  05BD  0BB9               	decfsz	??_mostrarLCD+2,f
  5689  05BE  2DB9               	goto	u4827
  5690                           
  5691                           ;main_Master.c: 345:             LCD_clear();
  5692  05BF  160A  118A  21A6   	fcall	_LCD_clear
  5693                           
  5694                           ;main_Master.c: 346:             estado = 0;
  5695  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  5696  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  5697  05C4  01BF               	clrf	_estado^(0+128)
  5698                           
  5699                           ;main_Master.c: 347:             break;
  5700  05C5  0008               	return
  5701  05C6                     l5020:	
  5702                           
  5703                           ;main_Master.c: 349:             LCD_Set_Cursor(1,9);
  5704  05C6  3009               	movlw	9
  5705  05C7  00B7               	movwf	??_mostrarLCD
  5706  05C8  0837               	movf	??_mostrarLCD,w
  5707  05C9  00F5               	movwf	LCD_Set_Cursor@columna
  5708  05CA  3001               	movlw	1
  5709  05CB  160A  118A  226D  120A  118A  	fcall	_LCD_Set_Cursor
  5710                           
  5711                           ;main_Master.c: 350:             LCD_Write_String("ERROR");
  5712  05D0  3077               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  5713  05D1  160A  118A  21F3   	fcall	_LCD_Write_String
  5714                           
  5715                           ;main_Master.c: 351:     }
  5716  05D4  0008               	return
  5717  05D5                     l5022:	
  5718  05D5  083A               	movf	mostrarLCD@pantalla,w
  5719  05D6  00B7               	movwf	??_mostrarLCD
  5720  05D7  01B8               	clrf	??_mostrarLCD+1
  5721                           
  5722                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5723                           ; Switch size 1, requested type "simple"
  5724                           ; Number of cases is 1, Range of values is 0 to 0
  5725                           ; switch strategies available:
  5726                           ; Name         Instructions Cycles
  5727                           ; simple_byte            4     3 (average)
  5728                           ; direct_byte           11     8 (fixed)
  5729                           ; jumptable            260     6 (fixed)
  5730                           ;	Chosen strategy is simple_byte
  5731  05D8  0838               	movf	??_mostrarLCD+1,w
  5732  05D9  3A00               	xorlw	0	; case 0
  5733  05DA  1903               	skipnz
  5734  05DB  2DDD               	goto	l5494
  5735  05DC  2DC6               	goto	l5020
  5736  05DD                     l5494:	
  5737                           
  5738                           ; Switch size 1, requested type "simple"
  5739                           ; Number of cases is 11, Range of values is 0 to 10
  5740                           ; switch strategies available:
  5741                           ; Name         Instructions Cycles
  5742                           ; simple_byte           34    18 (average)
  5743                           ; direct_byte           41     8 (fixed)
  5744                           ; jumptable            260     6 (fixed)
  5745                           ;	Chosen strategy is simple_byte
  5746  05DD  0837               	movf	??_mostrarLCD,w
  5747  05DE  3A00               	xorlw	0	; case 0
  5748  05DF  1903               	skipnz
  5749  05E0  2B48               	goto	l4910
  5750  05E1  3A01               	xorlw	1	; case 1
  5751  05E2  1903               	skipnz
  5752  05E3  2B69               	goto	l4912
  5753  05E4  3A03               	xorlw	3	; case 2
  5754  05E5  1903               	skipnz
  5755  05E6  2BCD               	goto	l4928
  5756  05E7  3A01               	xorlw	1	; case 3
  5757  05E8  1903               	skipnz
  5758  05E9  2C4C               	goto	l4952
  5759  05EA  3A07               	xorlw	7	; case 4
  5760  05EB  1903               	skipnz
  5761  05EC  2C7C               	goto	l4960
  5762  05ED  3A01               	xorlw	1	; case 5
  5763  05EE  1903               	skipnz
  5764  05EF  2CD6               	goto	l4976
  5765  05F0  3A03               	xorlw	3	; case 6
  5766  05F1  1903               	skipnz
  5767  05F2  2D1D               	goto	l4988
  5768  05F3  3A01               	xorlw	1	; case 7
  5769  05F4  1903               	skipnz
  5770  05F5  2D32               	goto	l4994
  5771  05F6  3A0F               	xorlw	15	; case 8
  5772  05F7  1903               	skipnz
  5773  05F8  2D59               	goto	l5000
  5774  05F9  3A01               	xorlw	1	; case 9
  5775  05FA  1903               	skipnz
  5776  05FB  2D83               	goto	l5006
  5777  05FC  3A03               	xorlw	3	; case 10
  5778  05FD  1903               	skipnz
  5779  05FE  2DA4               	goto	l5012
  5780  05FF  2DC6               	goto	l5020
  5781  0600  0008               	return
  5782  0601                     __end_of_mostrarLCD:	
  5783                           
  5784                           	psect	text12
  5785  160D                     __ptext12:	
  5786 ;; *************** function _uint_to_array *****************
  5787 ;; Defined at:
  5788 ;;		line 181 in file "LCD_8bits.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;  numero          1    wreg     unsigned char 
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;  numero          1   22[BANK0 ] unsigned char 
  5793 ;;  resultado       6   16[BANK0 ] unsigned int [3]
  5794 ;;  centenas        1   15[BANK0 ] unsigned char 
  5795 ;;  decenas         1   14[BANK0 ] unsigned char 
  5796 ;; Return value:  Size  Location     Type
  5797 ;;                  1    wreg      PTR unsigned int 
  5798 ;; Registers used:
  5799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5800 ;; Tracked objects:
  5801 ;;		On entry : 0/0
  5802 ;;		On exit  : 0/0
  5803 ;;		Unchanged: 0/0
  5804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5805 ;;      Params:         0       0       0       0       0
  5806 ;;      Locals:         0       9       0       0       0
  5807 ;;      Temps:          0       6       0       0       0
  5808 ;;      Totals:         0      15       0       0       0
  5809 ;;Total ram usage:       15 bytes
  5810 ;; Hardware stack levels used:    1
  5811 ;; Hardware stack levels required when called:    2
  5812 ;; This function calls:
  5813 ;;		___awdiv
  5814 ;;		___wmul
  5815 ;; This function is called by:
  5816 ;;		_mostrarLCD
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           
  5821                           ;psect for function _uint_to_array
  5822  160D                     _uint_to_array:	
  5823                           
  5824                           ;incstack = 0
  5825                           ; Regs used in _uint_to_array: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5826                           ;uint_to_array@numero stored from wreg
  5827  160D  1283               	bcf	3,5	;RP0=0, select bank0
  5828  160E  1303               	bcf	3,6	;RP1=0, select bank0
  5829  160F  00B6               	movwf	uint_to_array@numero
  5830                           
  5831                           ;LCD_8bits.c: 182:     uint16_t resultado[3] = {0,0,0};
  5832  1610  3030               	movlw	uint_to_array@resultado& (0+255)
  5833  1611  0084               	movwf	4
  5834  1612  3006               	movlw	6
  5835  1613  00FF               	movwf	127
  5836  1614                     u4300:	
  5837  1614  1383               	bcf	3,7	;select IRP bank0
  5838  1615  0180               	clrf	0
  5839  1616  0A84               	incf	4,f
  5840  1617  0BFF               	decfsz	127,f
  5841  1618  2E14               	goto	u4300
  5842                           
  5843                           ;LCD_8bits.c: 183:     resultado[0] = numero/100;
  5844  1619  3064               	movlw	100
  5845  161A  00A0               	movwf	___awdiv@divisor
  5846  161B  3000               	movlw	0
  5847  161C  00A1               	movwf	___awdiv@divisor+1
  5848  161D  0836               	movf	uint_to_array@numero,w
  5849  161E  00A8               	movwf	??_uint_to_array
  5850  161F  01A9               	clrf	??_uint_to_array+1
  5851  1620  0828               	movf	??_uint_to_array,w
  5852  1621  00A2               	movwf	___awdiv@dividend
  5853  1622  0829               	movf	??_uint_to_array+1,w
  5854  1623  00A3               	movwf	___awdiv@dividend+1
  5855  1624  160A  118A  237E  160A  118A  	fcall	___awdiv
  5856  1629  1283               	bcf	3,5	;RP0=0, select bank0
  5857  162A  1303               	bcf	3,6	;RP1=0, select bank0
  5858  162B  0821               	movf	?___awdiv+1,w
  5859  162C  00B1               	movwf	uint_to_array@resultado+1
  5860  162D  0820               	movf	?___awdiv,w
  5861  162E  00B0               	movwf	uint_to_array@resultado
  5862                           
  5863                           ;LCD_8bits.c: 184:     uint8_t centenas = resultado[0];
  5864  162F  0830               	movf	uint_to_array@resultado,w
  5865  1630  00A8               	movwf	??_uint_to_array
  5866  1631  0828               	movf	??_uint_to_array,w
  5867  1632  00AF               	movwf	uint_to_array@centenas
  5868                           
  5869                           ;LCD_8bits.c: 185:     resultado[1] = (numero - (centenas *100))/10;
  5870  1633  300A               	movlw	10
  5871  1634  00A0               	movwf	___awdiv@divisor
  5872  1635  3000               	movlw	0
  5873  1636  00A1               	movwf	___awdiv@divisor+1
  5874  1637  082F               	movf	uint_to_array@centenas,w
  5875  1638  00A8               	movwf	??_uint_to_array
  5876  1639  01A9               	clrf	??_uint_to_array+1
  5877  163A  0828               	movf	??_uint_to_array,w
  5878  163B  00F2               	movwf	___wmul@multiplier
  5879  163C  0829               	movf	??_uint_to_array+1,w
  5880  163D  00F3               	movwf	___wmul@multiplier+1
  5881  163E  309C               	movlw	156
  5882  163F  00F4               	movwf	___wmul@multiplicand
  5883  1640  30FF               	movlw	255
  5884  1641  00F5               	movwf	___wmul@multiplicand+1
  5885  1642  160A  118A  21D2  160A  118A  	fcall	___wmul
  5886  1647  1283               	bcf	3,5	;RP0=0, select bank0
  5887  1648  1303               	bcf	3,6	;RP1=0, select bank0
  5888  1649  0836               	movf	uint_to_array@numero,w
  5889  164A  0772               	addwf	?___wmul,w
  5890  164B  00A2               	movwf	___awdiv@dividend
  5891  164C  0873               	movf	?___wmul+1,w
  5892  164D  1803               	skipnc
  5893  164E  0A73               	incf	?___wmul+1,w
  5894  164F  00A3               	movwf	___awdiv@dividend+1
  5895  1650  160A  118A  237E  160A  118A  	fcall	___awdiv
  5896  1655  1283               	bcf	3,5	;RP0=0, select bank0
  5897  1656  1303               	bcf	3,6	;RP1=0, select bank0
  5898  1657  0821               	movf	?___awdiv+1,w
  5899  1658  00B3               	movwf	uint_to_array@resultado+3
  5900  1659  0820               	movf	?___awdiv,w
  5901  165A  00B2               	movwf	uint_to_array@resultado+2
  5902                           
  5903                           ;LCD_8bits.c: 186:     uint8_t decenas = resultado[1];
  5904  165B  0832               	movf	uint_to_array@resultado+2,w
  5905  165C  00A8               	movwf	??_uint_to_array
  5906  165D  0828               	movf	??_uint_to_array,w
  5907  165E  00AE               	movwf	uint_to_array@decenas
  5908                           
  5909                           ;LCD_8bits.c: 187:     resultado[2] = numero -(centenas*100+decenas*10);
  5910  165F  082F               	movf	uint_to_array@centenas,w
  5911  1660  00A8               	movwf	??_uint_to_array
  5912  1661  01A9               	clrf	??_uint_to_array+1
  5913  1662  0828               	movf	??_uint_to_array,w
  5914  1663  00F2               	movwf	___wmul@multiplier
  5915  1664  0829               	movf	??_uint_to_array+1,w
  5916  1665  00F3               	movwf	___wmul@multiplier+1
  5917  1666  309C               	movlw	156
  5918  1667  00F4               	movwf	___wmul@multiplicand
  5919  1668  30FF               	movlw	255
  5920  1669  00F5               	movwf	___wmul@multiplicand+1
  5921  166A  160A  118A  21D2  160A  118A  	fcall	___wmul
  5922  166F  1283               	bcf	3,5	;RP0=0, select bank0
  5923  1670  1303               	bcf	3,6	;RP1=0, select bank0
  5924  1671  0836               	movf	uint_to_array@numero,w
  5925  1672  0772               	addwf	?___wmul,w
  5926  1673  00AA               	movwf	??_uint_to_array+2
  5927  1674  0873               	movf	?___wmul+1,w
  5928  1675  1803               	skipnc
  5929  1676  0A73               	incf	?___wmul+1,w
  5930  1677  00AB               	movwf	??_uint_to_array+3
  5931  1678  082E               	movf	uint_to_array@decenas,w
  5932  1679  00AC               	movwf	??_uint_to_array+4
  5933  167A  01AD               	clrf	??_uint_to_array+5
  5934  167B  082C               	movf	??_uint_to_array+4,w
  5935  167C  00F2               	movwf	___wmul@multiplier
  5936  167D  082D               	movf	??_uint_to_array+5,w
  5937  167E  00F3               	movwf	___wmul@multiplier+1
  5938  167F  30F6               	movlw	246
  5939  1680  00F4               	movwf	___wmul@multiplicand
  5940  1681  30FF               	movlw	255
  5941  1682  00F5               	movwf	___wmul@multiplicand+1
  5942  1683  160A  118A  21D2   	fcall	___wmul
  5943  1686  0872               	movf	?___wmul,w
  5944  1687  1283               	bcf	3,5	;RP0=0, select bank0
  5945  1688  1303               	bcf	3,6	;RP1=0, select bank0
  5946  1689  072A               	addwf	??_uint_to_array+2,w
  5947  168A  00B4               	movwf	uint_to_array@resultado+4
  5948  168B  0873               	movf	?___wmul+1,w
  5949  168C  1803               	skipnc
  5950  168D  0A73               	incf	?___wmul+1,w
  5951  168E  072B               	addwf	??_uint_to_array+3,w
  5952  168F  00B5               	movwf	uint_to_array@resultado+5
  5953                           
  5954                           ;LCD_8bits.c: 188:     return(resultado);
  5955  1690  3030               	movlw	(low (uint_to_array@resultado| 0))& (0+255)
  5956  1691  0008               	return
  5957  1692                     __end_of_uint_to_array:	
  5958                           
  5959                           	psect	text13
  5960  11D2                     __ptext13:	
  5961 ;; *************** function ___wmul *****************
  5962 ;; Defined at:
  5963 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;  multiplier      2    2[COMMON] unsigned int 
  5966 ;;  multiplicand    2    4[COMMON] unsigned int 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;  product         2    6[COMMON] unsigned int 
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  2    2[COMMON] unsigned int 
  5971 ;; Registers used:
  5972 ;;		wreg, status,2, status,0
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5978 ;;      Params:         4       0       0       0       0
  5979 ;;      Locals:         2       0       0       0       0
  5980 ;;      Temps:          0       0       0       0       0
  5981 ;;      Totals:         6       0       0       0       0
  5982 ;;Total ram usage:        6 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:    1
  5985 ;; This function calls:
  5986 ;;		Nothing
  5987 ;; This function is called by:
  5988 ;;		_uint_to_array
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           
  5993                           ;psect for function ___wmul
  5994  11D2                     ___wmul:	
  5995                           
  5996                           ;incstack = 0
  5997                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5998  11D2  01F6               	clrf	___wmul@product
  5999  11D3  01F7               	clrf	___wmul@product+1
  6000  11D4                     l2818:	
  6001  11D4  1C72               	btfss	___wmul@multiplier,0
  6002  11D5  29DC               	goto	l452
  6003  11D6  0874               	movf	___wmul@multiplicand,w
  6004  11D7  07F6               	addwf	___wmul@product,f
  6005  11D8  1803               	skipnc
  6006  11D9  0AF7               	incf	___wmul@product+1,f
  6007  11DA  0875               	movf	___wmul@multiplicand+1,w
  6008  11DB  07F7               	addwf	___wmul@product+1,f
  6009  11DC                     l452:	
  6010  11DC  3001               	movlw	1
  6011  11DD                     u2095:	
  6012  11DD  1003               	clrc
  6013  11DE  0DF4               	rlf	___wmul@multiplicand,f
  6014  11DF  0DF5               	rlf	___wmul@multiplicand+1,f
  6015  11E0  3EFF               	addlw	-1
  6016  11E1  1D03               	skipz
  6017  11E2  29DD               	goto	u2095
  6018  11E3  3001               	movlw	1
  6019  11E4                     u2105:	
  6020  11E4  1003               	clrc
  6021  11E5  0CF3               	rrf	___wmul@multiplier+1,f
  6022  11E6  0CF2               	rrf	___wmul@multiplier,f
  6023  11E7  3EFF               	addlw	-1
  6024  11E8  1D03               	skipz
  6025  11E9  29E4               	goto	u2105
  6026  11EA  0872               	movf	___wmul@multiplier,w
  6027  11EB  0473               	iorwf	___wmul@multiplier+1,w
  6028  11EC  1D03               	btfss	3,2
  6029  11ED  29D4               	goto	l2818
  6030  11EE  0877               	movf	___wmul@product+1,w
  6031  11EF  00F3               	movwf	?___wmul+1
  6032  11F0  0876               	movf	___wmul@product,w
  6033  11F1  00F2               	movwf	?___wmul
  6034  11F2  0008               	return
  6035  11F3                     __end_of___wmul:	
  6036                           
  6037                           	psect	text14
  6038  0A5C                     __ptext14:	
  6039 ;; *************** function _display_Uhrzeit *****************
  6040 ;; Defined at:
  6041 ;;		line 193 in file "main_Master.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;  fila            1    wreg     unsigned char 
  6044 ;;  columna         1    8[BANK0 ] unsigned char 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;  fila            1   12[BANK0 ] unsigned char 
  6047 ;;  Uhr_d           1   18[BANK0 ] unsigned char 
  6048 ;;  Uhr_u           1   17[BANK0 ] unsigned char 
  6049 ;;  min_d           1   16[BANK0 ] unsigned char 
  6050 ;;  min_u           1   15[BANK0 ] unsigned char 
  6051 ;;  seg_d           1   14[BANK0 ] unsigned char 
  6052 ;;  seg_u           1   13[BANK0 ] unsigned char 
  6053 ;; Return value:  Size  Location     Type
  6054 ;;                  1    wreg      void 
  6055 ;; Registers used:
  6056 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6057 ;; Tracked objects:
  6058 ;;		On entry : 0/0
  6059 ;;		On exit  : 0/0
  6060 ;;		Unchanged: 0/0
  6061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6062 ;;      Params:         0       1       0       0       0
  6063 ;;      Locals:         0       7       0       0       0
  6064 ;;      Temps:          0       3       0       0       0
  6065 ;;      Totals:         0      11       0       0       0
  6066 ;;Total ram usage:       11 bytes
  6067 ;; Hardware stack levels used:    1
  6068 ;; Hardware stack levels required when called:    3
  6069 ;; This function calls:
  6070 ;;		_LCD_Set_Cursor
  6071 ;;		_LCD_Write_Character
  6072 ;;		___awdiv
  6073 ;;		___awmod
  6074 ;; This function is called by:
  6075 ;;		_mostrarLCD
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           
  6080                           ;psect for function _display_Uhrzeit
  6081  0A5C                     _display_Uhrzeit:	
  6082                           
  6083                           ;incstack = 0
  6084                           ; Regs used in _display_Uhrzeit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6085                           ;display_Uhrzeit@fila stored from wreg
  6086  0A5C  1283               	bcf	3,5	;RP0=0, select bank0
  6087  0A5D  1303               	bcf	3,6	;RP1=0, select bank0
  6088  0A5E  00AC               	movwf	display_Uhrzeit@fila
  6089                           
  6090                           ;main_Master.c: 194:     char seg_u = seg%10;
  6091  0A5F  300A               	movlw	10
  6092  0A60  00F2               	movwf	___awmod@divisor
  6093  0A61  3000               	movlw	0
  6094  0A62  00F3               	movwf	___awmod@divisor+1
  6095  0A63  087B               	movf	_seg,w
  6096  0A64  00A9               	movwf	??_display_Uhrzeit
  6097  0A65  01AA               	clrf	??_display_Uhrzeit+1
  6098  0A66  0829               	movf	??_display_Uhrzeit,w
  6099  0A67  00F4               	movwf	___awmod@dividend
  6100  0A68  082A               	movf	??_display_Uhrzeit+1,w
  6101  0A69  00F5               	movwf	___awmod@dividend+1
  6102  0A6A  160A  118A  2333  120A  158A  	fcall	___awmod
  6103  0A6F  0872               	movf	?___awmod,w
  6104  0A70  1283               	bcf	3,5	;RP0=0, select bank0
  6105  0A71  1303               	bcf	3,6	;RP1=0, select bank0
  6106  0A72  00AB               	movwf	??_display_Uhrzeit+2
  6107  0A73  082B               	movf	??_display_Uhrzeit+2,w
  6108  0A74  00AD               	movwf	display_Uhrzeit@seg_u
  6109                           
  6110                           ;main_Master.c: 195:     char seg_d = seg/10;
  6111  0A75  300A               	movlw	10
  6112  0A76  00A0               	movwf	___awdiv@divisor
  6113  0A77  3000               	movlw	0
  6114  0A78  00A1               	movwf	___awdiv@divisor+1
  6115  0A79  087B               	movf	_seg,w
  6116  0A7A  00A9               	movwf	??_display_Uhrzeit
  6117  0A7B  01AA               	clrf	??_display_Uhrzeit+1
  6118  0A7C  0829               	movf	??_display_Uhrzeit,w
  6119  0A7D  00A2               	movwf	___awdiv@dividend
  6120  0A7E  082A               	movf	??_display_Uhrzeit+1,w
  6121  0A7F  00A3               	movwf	___awdiv@dividend+1
  6122  0A80  160A  118A  237E  120A  158A  	fcall	___awdiv
  6123  0A85  1283               	bcf	3,5	;RP0=0, select bank0
  6124  0A86  1303               	bcf	3,6	;RP1=0, select bank0
  6125  0A87  0820               	movf	?___awdiv,w
  6126  0A88  00AB               	movwf	??_display_Uhrzeit+2
  6127  0A89  082B               	movf	??_display_Uhrzeit+2,w
  6128  0A8A  00AE               	movwf	display_Uhrzeit@seg_d
  6129                           
  6130                           ;main_Master.c: 196:     char min_u = min%10;
  6131  0A8B  300A               	movlw	10
  6132  0A8C  00F2               	movwf	___awmod@divisor
  6133  0A8D  3000               	movlw	0
  6134  0A8E  00F3               	movwf	___awmod@divisor+1
  6135  0A8F  1683               	bsf	3,5	;RP0=1, select bank1
  6136  0A90  1303               	bcf	3,6	;RP1=0, select bank1
  6137  0A91  0848               	movf	_min^(0+128),w
  6138  0A92  1283               	bcf	3,5	;RP0=0, select bank0
  6139  0A93  1303               	bcf	3,6	;RP1=0, select bank0
  6140  0A94  00A9               	movwf	??_display_Uhrzeit
  6141  0A95  01AA               	clrf	??_display_Uhrzeit+1
  6142  0A96  0829               	movf	??_display_Uhrzeit,w
  6143  0A97  00F4               	movwf	___awmod@dividend
  6144  0A98  082A               	movf	??_display_Uhrzeit+1,w
  6145  0A99  00F5               	movwf	___awmod@dividend+1
  6146  0A9A  160A  118A  2333  120A  158A  	fcall	___awmod
  6147  0A9F  0872               	movf	?___awmod,w
  6148  0AA0  1283               	bcf	3,5	;RP0=0, select bank0
  6149  0AA1  1303               	bcf	3,6	;RP1=0, select bank0
  6150  0AA2  00AB               	movwf	??_display_Uhrzeit+2
  6151  0AA3  082B               	movf	??_display_Uhrzeit+2,w
  6152  0AA4  00AF               	movwf	display_Uhrzeit@min_u
  6153                           
  6154                           ;main_Master.c: 197:     char min_d = min/10;
  6155  0AA5  300A               	movlw	10
  6156  0AA6  00A0               	movwf	___awdiv@divisor
  6157  0AA7  3000               	movlw	0
  6158  0AA8  00A1               	movwf	___awdiv@divisor+1
  6159  0AA9  1683               	bsf	3,5	;RP0=1, select bank1
  6160  0AAA  1303               	bcf	3,6	;RP1=0, select bank1
  6161  0AAB  0848               	movf	_min^(0+128),w
  6162  0AAC  1283               	bcf	3,5	;RP0=0, select bank0
  6163  0AAD  1303               	bcf	3,6	;RP1=0, select bank0
  6164  0AAE  00A9               	movwf	??_display_Uhrzeit
  6165  0AAF  01AA               	clrf	??_display_Uhrzeit+1
  6166  0AB0  0829               	movf	??_display_Uhrzeit,w
  6167  0AB1  00A2               	movwf	___awdiv@dividend
  6168  0AB2  082A               	movf	??_display_Uhrzeit+1,w
  6169  0AB3  00A3               	movwf	___awdiv@dividend+1
  6170  0AB4  160A  118A  237E  120A  158A  	fcall	___awdiv
  6171  0AB9  1283               	bcf	3,5	;RP0=0, select bank0
  6172  0ABA  1303               	bcf	3,6	;RP1=0, select bank0
  6173  0ABB  0820               	movf	?___awdiv,w
  6174  0ABC  00AB               	movwf	??_display_Uhrzeit+2
  6175  0ABD  082B               	movf	??_display_Uhrzeit+2,w
  6176  0ABE  00B0               	movwf	display_Uhrzeit@min_d
  6177                           
  6178                           ;main_Master.c: 198:     char Uhr_u = hora%10;
  6179  0ABF  300A               	movlw	10
  6180  0AC0  00F2               	movwf	___awmod@divisor
  6181  0AC1  3000               	movlw	0
  6182  0AC2  00F3               	movwf	___awmod@divisor+1
  6183  0AC3  1683               	bsf	3,5	;RP0=1, select bank1
  6184  0AC4  1303               	bcf	3,6	;RP1=0, select bank1
  6185  0AC5  0847               	movf	_hora^(0+128),w
  6186  0AC6  1283               	bcf	3,5	;RP0=0, select bank0
  6187  0AC7  1303               	bcf	3,6	;RP1=0, select bank0
  6188  0AC8  00A9               	movwf	??_display_Uhrzeit
  6189  0AC9  01AA               	clrf	??_display_Uhrzeit+1
  6190  0ACA  0829               	movf	??_display_Uhrzeit,w
  6191  0ACB  00F4               	movwf	___awmod@dividend
  6192  0ACC  082A               	movf	??_display_Uhrzeit+1,w
  6193  0ACD  00F5               	movwf	___awmod@dividend+1
  6194  0ACE  160A  118A  2333  120A  158A  	fcall	___awmod
  6195  0AD3  0872               	movf	?___awmod,w
  6196  0AD4  1283               	bcf	3,5	;RP0=0, select bank0
  6197  0AD5  1303               	bcf	3,6	;RP1=0, select bank0
  6198  0AD6  00AB               	movwf	??_display_Uhrzeit+2
  6199  0AD7  082B               	movf	??_display_Uhrzeit+2,w
  6200  0AD8  00B1               	movwf	display_Uhrzeit@Uhr_u
  6201                           
  6202                           ;main_Master.c: 199:     char Uhr_d = hora/10;
  6203  0AD9  300A               	movlw	10
  6204  0ADA  00A0               	movwf	___awdiv@divisor
  6205  0ADB  3000               	movlw	0
  6206  0ADC  00A1               	movwf	___awdiv@divisor+1
  6207  0ADD  1683               	bsf	3,5	;RP0=1, select bank1
  6208  0ADE  1303               	bcf	3,6	;RP1=0, select bank1
  6209  0ADF  0847               	movf	_hora^(0+128),w
  6210  0AE0  1283               	bcf	3,5	;RP0=0, select bank0
  6211  0AE1  1303               	bcf	3,6	;RP1=0, select bank0
  6212  0AE2  00A9               	movwf	??_display_Uhrzeit
  6213  0AE3  01AA               	clrf	??_display_Uhrzeit+1
  6214  0AE4  0829               	movf	??_display_Uhrzeit,w
  6215  0AE5  00A2               	movwf	___awdiv@dividend
  6216  0AE6  082A               	movf	??_display_Uhrzeit+1,w
  6217  0AE7  00A3               	movwf	___awdiv@dividend+1
  6218  0AE8  160A  118A  237E  120A  158A  	fcall	___awdiv
  6219  0AED  1283               	bcf	3,5	;RP0=0, select bank0
  6220  0AEE  1303               	bcf	3,6	;RP1=0, select bank0
  6221  0AEF  0820               	movf	?___awdiv,w
  6222  0AF0  00AB               	movwf	??_display_Uhrzeit+2
  6223  0AF1  082B               	movf	??_display_Uhrzeit+2,w
  6224  0AF2  00B2               	movwf	display_Uhrzeit@Uhr_d
  6225                           
  6226                           ;main_Master.c: 201:     LCD_Set_Cursor(fila, columna);
  6227  0AF3  0828               	movf	display_Uhrzeit@columna,w
  6228  0AF4  00A9               	movwf	??_display_Uhrzeit
  6229  0AF5  0829               	movf	??_display_Uhrzeit,w
  6230  0AF6  00F5               	movwf	LCD_Set_Cursor@columna
  6231  0AF7  082C               	movf	display_Uhrzeit@fila,w
  6232  0AF8  160A  118A  226D  120A  158A  	fcall	_LCD_Set_Cursor
  6233                           
  6234                           ;main_Master.c: 202:     LCD_Write_Character(Uhr_d + '0');
  6235  0AFD  1283               	bcf	3,5	;RP0=0, select bank0
  6236  0AFE  1303               	bcf	3,6	;RP1=0, select bank0
  6237  0AFF  0832               	movf	display_Uhrzeit@Uhr_d,w
  6238  0B00  3E30               	addlw	48
  6239  0B01  160A  118A  2161  120A  158A  	fcall	_LCD_Write_Character
  6240                           
  6241                           ;main_Master.c: 203:     LCD_Write_Character(Uhr_u + '0');
  6242  0B06  1283               	bcf	3,5	;RP0=0, select bank0
  6243  0B07  1303               	bcf	3,6	;RP1=0, select bank0
  6244  0B08  0831               	movf	display_Uhrzeit@Uhr_u,w
  6245  0B09  3E30               	addlw	48
  6246  0B0A  160A  118A  2161  120A  158A  	fcall	_LCD_Write_Character
  6247                           
  6248                           ;main_Master.c: 204:     LCD_Write_Character(':');
  6249  0B0F  303A               	movlw	58
  6250  0B10  160A  118A  2161  120A  158A  	fcall	_LCD_Write_Character
  6251                           
  6252                           ;main_Master.c: 205:     LCD_Write_Character(min_d + '0');
  6253  0B15  1283               	bcf	3,5	;RP0=0, select bank0
  6254  0B16  1303               	bcf	3,6	;RP1=0, select bank0
  6255  0B17  0830               	movf	display_Uhrzeit@min_d,w
  6256  0B18  3E30               	addlw	48
  6257  0B19  160A  118A  2161  120A  158A  	fcall	_LCD_Write_Character
  6258                           
  6259                           ;main_Master.c: 206:     LCD_Write_Character(min_u + '0');
  6260  0B1E  1283               	bcf	3,5	;RP0=0, select bank0
  6261  0B1F  1303               	bcf	3,6	;RP1=0, select bank0
  6262  0B20  082F               	movf	display_Uhrzeit@min_u,w
  6263  0B21  3E30               	addlw	48
  6264  0B22  160A  118A  2161  120A  158A  	fcall	_LCD_Write_Character
  6265                           
  6266                           ;main_Master.c: 207:     LCD_Write_Character(':');
  6267  0B27  303A               	movlw	58
  6268  0B28  160A  118A  2161  120A  158A  	fcall	_LCD_Write_Character
  6269                           
  6270                           ;main_Master.c: 208:     LCD_Write_Character(seg_d + '0');
  6271  0B2D  1283               	bcf	3,5	;RP0=0, select bank0
  6272  0B2E  1303               	bcf	3,6	;RP1=0, select bank0
  6273  0B2F  082E               	movf	display_Uhrzeit@seg_d,w
  6274  0B30  3E30               	addlw	48
  6275  0B31  160A  118A  2161  120A  158A  	fcall	_LCD_Write_Character
  6276                           
  6277                           ;main_Master.c: 209:     LCD_Write_Character(seg_u + '0');
  6278  0B36  1283               	bcf	3,5	;RP0=0, select bank0
  6279  0B37  1303               	bcf	3,6	;RP1=0, select bank0
  6280  0B38  082D               	movf	display_Uhrzeit@seg_u,w
  6281  0B39  3E30               	addlw	48
  6282  0B3A  160A  118A  2161   	fcall	_LCD_Write_Character
  6283  0B3D  0008               	return
  6284  0B3E                     __end_of_display_Uhrzeit:	
  6285                           
  6286                           	psect	text15
  6287  0B3E                     __ptext15:	
  6288 ;; *************** function _display_Datum *****************
  6289 ;; Defined at:
  6290 ;;		line 213 in file "main_Master.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;  fila            1    wreg     unsigned char 
  6293 ;;  columna         1    8[BANK0 ] unsigned char 
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;  fila            1   12[BANK0 ] unsigned char 
  6296 ;;  jahr_d          1   18[BANK0 ] unsigned char 
  6297 ;;  jahr_u          1   17[BANK0 ] unsigned char 
  6298 ;;  mes_d           1   16[BANK0 ] unsigned char 
  6299 ;;  mes_u           1   15[BANK0 ] unsigned char 
  6300 ;;  dia_d           1   14[BANK0 ] unsigned char 
  6301 ;;  dia_u           1   13[BANK0 ] unsigned char 
  6302 ;; Return value:  Size  Location     Type
  6303 ;;                  1    wreg      void 
  6304 ;; Registers used:
  6305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6306 ;; Tracked objects:
  6307 ;;		On entry : 0/0
  6308 ;;		On exit  : 0/0
  6309 ;;		Unchanged: 0/0
  6310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6311 ;;      Params:         0       1       0       0       0
  6312 ;;      Locals:         0       7       0       0       0
  6313 ;;      Temps:          0       3       0       0       0
  6314 ;;      Totals:         0      11       0       0       0
  6315 ;;Total ram usage:       11 bytes
  6316 ;; Hardware stack levels used:    1
  6317 ;; Hardware stack levels required when called:    3
  6318 ;; This function calls:
  6319 ;;		_LCD_Set_Cursor
  6320 ;;		_LCD_Write_Character
  6321 ;;		_LCD_Write_String
  6322 ;;		___awdiv
  6323 ;;		___awmod
  6324 ;; This function is called by:
  6325 ;;		_mostrarLCD
  6326 ;; This function uses a non-reentrant model
  6327 ;;
  6328                           
  6329                           
  6330                           ;psect for function _display_Datum
  6331  0B3E                     _display_Datum:	
  6332                           
  6333                           ;incstack = 0
  6334                           ; Regs used in _display_Datum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6335                           ;display_Datum@fila stored from wreg
  6336  0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  6337  0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  6338  0B40  00AC               	movwf	display_Datum@fila
  6339                           
  6340                           ;main_Master.c: 214:     char dia_u = datum%10;
  6341  0B41  300A               	movlw	10
  6342  0B42  00F2               	movwf	___awmod@divisor
  6343  0B43  3000               	movlw	0
  6344  0B44  00F3               	movwf	___awmod@divisor+1
  6345  0B45  1683               	bsf	3,5	;RP0=1, select bank1
  6346  0B46  1303               	bcf	3,6	;RP1=0, select bank1
  6347  0B47  0845               	movf	_datum^(0+128),w
  6348  0B48  1283               	bcf	3,5	;RP0=0, select bank0
  6349  0B49  1303               	bcf	3,6	;RP1=0, select bank0
  6350  0B4A  00A9               	movwf	??_display_Datum
  6351  0B4B  01AA               	clrf	??_display_Datum+1
  6352  0B4C  0829               	movf	??_display_Datum,w
  6353  0B4D  00F4               	movwf	___awmod@dividend
  6354  0B4E  082A               	movf	??_display_Datum+1,w
  6355  0B4F  00F5               	movwf	___awmod@dividend+1
  6356  0B50  160A  118A  2333  120A  158A  	fcall	___awmod
  6357  0B55  0872               	movf	?___awmod,w
  6358  0B56  1283               	bcf	3,5	;RP0=0, select bank0
  6359  0B57  1303               	bcf	3,6	;RP1=0, select bank0
  6360  0B58  00AB               	movwf	??_display_Datum+2
  6361  0B59  082B               	movf	??_display_Datum+2,w
  6362  0B5A  00AD               	movwf	display_Datum@dia_u
  6363                           
  6364                           ;main_Master.c: 215:     char dia_d = datum/10;
  6365  0B5B  300A               	movlw	10
  6366  0B5C  00A0               	movwf	___awdiv@divisor
  6367  0B5D  3000               	movlw	0
  6368  0B5E  00A1               	movwf	___awdiv@divisor+1
  6369  0B5F  1683               	bsf	3,5	;RP0=1, select bank1
  6370  0B60  1303               	bcf	3,6	;RP1=0, select bank1
  6371  0B61  0845               	movf	_datum^(0+128),w
  6372  0B62  1283               	bcf	3,5	;RP0=0, select bank0
  6373  0B63  1303               	bcf	3,6	;RP1=0, select bank0
  6374  0B64  00A9               	movwf	??_display_Datum
  6375  0B65  01AA               	clrf	??_display_Datum+1
  6376  0B66  0829               	movf	??_display_Datum,w
  6377  0B67  00A2               	movwf	___awdiv@dividend
  6378  0B68  082A               	movf	??_display_Datum+1,w
  6379  0B69  00A3               	movwf	___awdiv@dividend+1
  6380  0B6A  160A  118A  237E  120A  158A  	fcall	___awdiv
  6381  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  6382  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  6383  0B71  0820               	movf	?___awdiv,w
  6384  0B72  00AB               	movwf	??_display_Datum+2
  6385  0B73  082B               	movf	??_display_Datum+2,w
  6386  0B74  00AE               	movwf	display_Datum@dia_d
  6387                           
  6388                           ;main_Master.c: 216:     char mes_u = mes%10;
  6389  0B75  300A               	movlw	10
  6390  0B76  00F2               	movwf	___awmod@divisor
  6391  0B77  3000               	movlw	0
  6392  0B78  00F3               	movwf	___awmod@divisor+1
  6393  0B79  1683               	bsf	3,5	;RP0=1, select bank1
  6394  0B7A  1303               	bcf	3,6	;RP1=0, select bank1
  6395  0B7B  0844               	movf	_mes^(0+128),w
  6396  0B7C  1283               	bcf	3,5	;RP0=0, select bank0
  6397  0B7D  1303               	bcf	3,6	;RP1=0, select bank0
  6398  0B7E  00A9               	movwf	??_display_Datum
  6399  0B7F  01AA               	clrf	??_display_Datum+1
  6400  0B80  0829               	movf	??_display_Datum,w
  6401  0B81  00F4               	movwf	___awmod@dividend
  6402  0B82  082A               	movf	??_display_Datum+1,w
  6403  0B83  00F5               	movwf	___awmod@dividend+1
  6404  0B84  160A  118A  2333  120A  158A  	fcall	___awmod
  6405  0B89  0872               	movf	?___awmod,w
  6406  0B8A  1283               	bcf	3,5	;RP0=0, select bank0
  6407  0B8B  1303               	bcf	3,6	;RP1=0, select bank0
  6408  0B8C  00AB               	movwf	??_display_Datum+2
  6409  0B8D  082B               	movf	??_display_Datum+2,w
  6410  0B8E  00AF               	movwf	display_Datum@mes_u
  6411                           
  6412                           ;main_Master.c: 217:     char mes_d = mes/10;
  6413  0B8F  300A               	movlw	10
  6414  0B90  00A0               	movwf	___awdiv@divisor
  6415  0B91  3000               	movlw	0
  6416  0B92  00A1               	movwf	___awdiv@divisor+1
  6417  0B93  1683               	bsf	3,5	;RP0=1, select bank1
  6418  0B94  1303               	bcf	3,6	;RP1=0, select bank1
  6419  0B95  0844               	movf	_mes^(0+128),w
  6420  0B96  1283               	bcf	3,5	;RP0=0, select bank0
  6421  0B97  1303               	bcf	3,6	;RP1=0, select bank0
  6422  0B98  00A9               	movwf	??_display_Datum
  6423  0B99  01AA               	clrf	??_display_Datum+1
  6424  0B9A  0829               	movf	??_display_Datum,w
  6425  0B9B  00A2               	movwf	___awdiv@dividend
  6426  0B9C  082A               	movf	??_display_Datum+1,w
  6427  0B9D  00A3               	movwf	___awdiv@dividend+1
  6428  0B9E  160A  118A  237E  120A  158A  	fcall	___awdiv
  6429  0BA3  1283               	bcf	3,5	;RP0=0, select bank0
  6430  0BA4  1303               	bcf	3,6	;RP1=0, select bank0
  6431  0BA5  0820               	movf	?___awdiv,w
  6432  0BA6  00AB               	movwf	??_display_Datum+2
  6433  0BA7  082B               	movf	??_display_Datum+2,w
  6434  0BA8  00B0               	movwf	display_Datum@mes_d
  6435                           
  6436                           ;main_Master.c: 218:     char jahr_u = jahr%10;
  6437  0BA9  300A               	movlw	10
  6438  0BAA  00F2               	movwf	___awmod@divisor
  6439  0BAB  3000               	movlw	0
  6440  0BAC  00F3               	movwf	___awmod@divisor+1
  6441  0BAD  1683               	bsf	3,5	;RP0=1, select bank1
  6442  0BAE  1303               	bcf	3,6	;RP1=0, select bank1
  6443  0BAF  0843               	movf	_jahr^(0+128),w
  6444  0BB0  1283               	bcf	3,5	;RP0=0, select bank0
  6445  0BB1  1303               	bcf	3,6	;RP1=0, select bank0
  6446  0BB2  00A9               	movwf	??_display_Datum
  6447  0BB3  01AA               	clrf	??_display_Datum+1
  6448  0BB4  0829               	movf	??_display_Datum,w
  6449  0BB5  00F4               	movwf	___awmod@dividend
  6450  0BB6  082A               	movf	??_display_Datum+1,w
  6451  0BB7  00F5               	movwf	___awmod@dividend+1
  6452  0BB8  160A  118A  2333  120A  158A  	fcall	___awmod
  6453  0BBD  0872               	movf	?___awmod,w
  6454  0BBE  1283               	bcf	3,5	;RP0=0, select bank0
  6455  0BBF  1303               	bcf	3,6	;RP1=0, select bank0
  6456  0BC0  00AB               	movwf	??_display_Datum+2
  6457  0BC1  082B               	movf	??_display_Datum+2,w
  6458  0BC2  00B1               	movwf	display_Datum@jahr_u
  6459                           
  6460                           ;main_Master.c: 219:     char jahr_d = jahr/10;
  6461  0BC3  300A               	movlw	10
  6462  0BC4  00A0               	movwf	___awdiv@divisor
  6463  0BC5  3000               	movlw	0
  6464  0BC6  00A1               	movwf	___awdiv@divisor+1
  6465  0BC7  1683               	bsf	3,5	;RP0=1, select bank1
  6466  0BC8  1303               	bcf	3,6	;RP1=0, select bank1
  6467  0BC9  0843               	movf	_jahr^(0+128),w
  6468  0BCA  1283               	bcf	3,5	;RP0=0, select bank0
  6469  0BCB  1303               	bcf	3,6	;RP1=0, select bank0
  6470  0BCC  00A9               	movwf	??_display_Datum
  6471  0BCD  01AA               	clrf	??_display_Datum+1
  6472  0BCE  0829               	movf	??_display_Datum,w
  6473  0BCF  00A2               	movwf	___awdiv@dividend
  6474  0BD0  082A               	movf	??_display_Datum+1,w
  6475  0BD1  00A3               	movwf	___awdiv@dividend+1
  6476  0BD2  160A  118A  237E  120A  158A  	fcall	___awdiv
  6477  0BD7  1283               	bcf	3,5	;RP0=0, select bank0
  6478  0BD8  1303               	bcf	3,6	;RP1=0, select bank0
  6479  0BD9  0820               	movf	?___awdiv,w
  6480  0BDA  00AB               	movwf	??_display_Datum+2
  6481  0BDB  082B               	movf	??_display_Datum+2,w
  6482  0BDC  00B2               	movwf	display_Datum@jahr_d
  6483                           
  6484                           ;main_Master.c: 221:     LCD_Set_Cursor(fila, columna);
  6485  0BDD  0828               	movf	display_Datum@columna,w
  6486  0BDE  00A9               	movwf	??_display_Datum
  6487  0BDF  0829               	movf	??_display_Datum,w
  6488  0BE0  00F5               	movwf	LCD_Set_Cursor@columna
  6489  0BE1  082C               	movf	display_Datum@fila,w
  6490  0BE2  160A  118A  226D  120A  158A  	fcall	_LCD_Set_Cursor
  6491                           
  6492                           ;main_Master.c: 222:     LCD_Write_Character(dia_d + '0');
  6493  0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  6494  0BE8  1303               	bcf	3,6	;RP1=0, select bank0
  6495  0BE9  082E               	movf	display_Datum@dia_d,w
  6496  0BEA  3E30               	addlw	48
  6497  0BEB  160A  118A  2161  120A  158A  	fcall	_LCD_Write_Character
  6498                           
  6499                           ;main_Master.c: 223:     LCD_Write_Character(dia_u + '0');
  6500  0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  6501  0BF1  1303               	bcf	3,6	;RP1=0, select bank0
  6502  0BF2  082D               	movf	display_Datum@dia_u,w
  6503  0BF3  3E30               	addlw	48
  6504  0BF4  160A  118A  2161  120A  158A  	fcall	_LCD_Write_Character
  6505                           
  6506                           ;main_Master.c: 224:     LCD_Write_Character('/');
  6507  0BF9  302F               	movlw	47
  6508  0BFA  160A  118A  2161  120A  158A  	fcall	_LCD_Write_Character
  6509                           
  6510                           ;main_Master.c: 225:     LCD_Write_Character(mes_d + '0');
  6511  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  6512  0C00  1303               	bcf	3,6	;RP1=0, select bank0
  6513  0C01  0830               	movf	display_Datum@mes_d,w
  6514  0C02  3E30               	addlw	48
  6515  0C03  160A  118A  2161  120A  158A  	fcall	_LCD_Write_Character
  6516                           
  6517                           ;main_Master.c: 226:     LCD_Write_Character(mes_u + '0');
  6518  0C08  1283               	bcf	3,5	;RP0=0, select bank0
  6519  0C09  1303               	bcf	3,6	;RP1=0, select bank0
  6520  0C0A  082F               	movf	display_Datum@mes_u,w
  6521  0C0B  3E30               	addlw	48
  6522  0C0C  160A  118A  2161  120A  158A  	fcall	_LCD_Write_Character
  6523                           
  6524                           ;main_Master.c: 227:     LCD_Write_Character('/');
  6525  0C11  302F               	movlw	47
  6526  0C12  160A  118A  2161  120A  158A  	fcall	_LCD_Write_Character
  6527                           
  6528                           ;main_Master.c: 228:     LCD_Write_String("20");
  6529  0C17  3088               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6530  0C18  160A  118A  21F3  120A  158A  	fcall	_LCD_Write_String
  6531                           
  6532                           ;main_Master.c: 229:     LCD_Write_Character(jahr_d + '0');
  6533  0C1D  1283               	bcf	3,5	;RP0=0, select bank0
  6534  0C1E  1303               	bcf	3,6	;RP1=0, select bank0
  6535  0C1F  0832               	movf	display_Datum@jahr_d,w
  6536  0C20  3E30               	addlw	48
  6537  0C21  160A  118A  2161  120A  158A  	fcall	_LCD_Write_Character
  6538                           
  6539                           ;main_Master.c: 230:     LCD_Write_Character(jahr_u + '0');
  6540  0C26  1283               	bcf	3,5	;RP0=0, select bank0
  6541  0C27  1303               	bcf	3,6	;RP1=0, select bank0
  6542  0C28  0831               	movf	display_Datum@jahr_u,w
  6543  0C29  3E30               	addlw	48
  6544  0C2A  160A  118A  2161   	fcall	_LCD_Write_Character
  6545  0C2D  0008               	return
  6546  0C2E                     __end_of_display_Datum:	
  6547                           
  6548                           	psect	text16
  6549  1333                     __ptext16:	
  6550 ;; *************** function ___awmod *****************
  6551 ;; Defined at:
  6552 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;  divisor         2    2[COMMON] int 
  6555 ;;  dividend        2    4[COMMON] int 
  6556 ;; Auto vars:     Size  Location     Type
  6557 ;;  sign            1    8[COMMON] unsigned char 
  6558 ;;  counter         1    7[COMMON] unsigned char 
  6559 ;; Return value:  Size  Location     Type
  6560 ;;                  2    2[COMMON] int 
  6561 ;; Registers used:
  6562 ;;		wreg, status,2, status,0
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6568 ;;      Params:         4       0       0       0       0
  6569 ;;      Locals:         2       0       0       0       0
  6570 ;;      Temps:          1       0       0       0       0
  6571 ;;      Totals:         7       0       0       0       0
  6572 ;;Total ram usage:        7 bytes
  6573 ;; Hardware stack levels used:    1
  6574 ;; Hardware stack levels required when called:    1
  6575 ;; This function calls:
  6576 ;;		Nothing
  6577 ;; This function is called by:
  6578 ;;		_display_Uhrzeit
  6579 ;;		_display_Datum
  6580 ;;		_DEC_a_BCD
  6581 ;; This function uses a non-reentrant model
  6582 ;;
  6583                           
  6584                           
  6585                           ;psect for function ___awmod
  6586  1333                     ___awmod:	
  6587                           
  6588                           ;incstack = 0
  6589                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6590  1333  01F8               	clrf	___awmod@sign
  6591  1334  1FF5               	btfss	___awmod@dividend+1,7
  6592  1335  2B3D               	goto	l2920
  6593  1336  09F4               	comf	___awmod@dividend,f
  6594  1337  09F5               	comf	___awmod@dividend+1,f
  6595  1338  0AF4               	incf	___awmod@dividend,f
  6596  1339  1903               	skipnz
  6597  133A  0AF5               	incf	___awmod@dividend+1,f
  6598  133B  01F8               	clrf	___awmod@sign
  6599  133C  0AF8               	incf	___awmod@sign,f
  6600  133D                     l2920:	
  6601  133D  1FF3               	btfss	___awmod@divisor+1,7
  6602  133E  2B44               	goto	l2924
  6603  133F  09F2               	comf	___awmod@divisor,f
  6604  1340  09F3               	comf	___awmod@divisor+1,f
  6605  1341  0AF2               	incf	___awmod@divisor,f
  6606  1342  1903               	skipnz
  6607  1343  0AF3               	incf	___awmod@divisor+1,f
  6608  1344                     l2924:	
  6609  1344  0872               	movf	___awmod@divisor,w
  6610  1345  0473               	iorwf	___awmod@divisor+1,w
  6611  1346  1903               	btfsc	3,2
  6612  1347  2B71               	goto	l2942
  6613  1348  01F7               	clrf	___awmod@counter
  6614  1349  0AF7               	incf	___awmod@counter,f
  6615  134A                     l2932:	
  6616  134A  1BF3               	btfsc	___awmod@divisor+1,7
  6617  134B  2B58               	goto	l2934
  6618  134C  3001               	movlw	1
  6619  134D                     u2345:	
  6620  134D  1003               	clrc
  6621  134E  0DF2               	rlf	___awmod@divisor,f
  6622  134F  0DF3               	rlf	___awmod@divisor+1,f
  6623  1350  3EFF               	addlw	-1
  6624  1351  1D03               	skipz
  6625  1352  2B4D               	goto	u2345
  6626  1353  3001               	movlw	1
  6627  1354  00F6               	movwf	??___awmod
  6628  1355  0876               	movf	??___awmod,w
  6629  1356  07F7               	addwf	___awmod@counter,f
  6630  1357  2B4A               	goto	l2932
  6631  1358                     l2934:	
  6632  1358  0873               	movf	___awmod@divisor+1,w
  6633  1359  0275               	subwf	___awmod@dividend+1,w
  6634  135A  1D03               	skipz
  6635  135B  2B5E               	goto	u2365
  6636  135C  0872               	movf	___awmod@divisor,w
  6637  135D  0274               	subwf	___awmod@dividend,w
  6638  135E                     u2365:	
  6639  135E  1C03               	skipc
  6640  135F  2B66               	goto	l2938
  6641  1360  0872               	movf	___awmod@divisor,w
  6642  1361  02F4               	subwf	___awmod@dividend,f
  6643  1362  0873               	movf	___awmod@divisor+1,w
  6644  1363  1C03               	skipc
  6645  1364  03F5               	decf	___awmod@dividend+1,f
  6646  1365  02F5               	subwf	___awmod@dividend+1,f
  6647  1366                     l2938:	
  6648  1366  3001               	movlw	1
  6649  1367                     u2375:	
  6650  1367  1003               	clrc
  6651  1368  0CF3               	rrf	___awmod@divisor+1,f
  6652  1369  0CF2               	rrf	___awmod@divisor,f
  6653  136A  3EFF               	addlw	-1
  6654  136B  1D03               	skipz
  6655  136C  2B67               	goto	u2375
  6656  136D  3001               	movlw	1
  6657  136E  02F7               	subwf	___awmod@counter,f
  6658  136F  1D03               	btfss	3,2
  6659  1370  2B58               	goto	l2934
  6660  1371                     l2942:	
  6661  1371  0878               	movf	___awmod@sign,w
  6662  1372  1903               	btfsc	3,2
  6663  1373  2B79               	goto	l2946
  6664  1374  09F4               	comf	___awmod@dividend,f
  6665  1375  09F5               	comf	___awmod@dividend+1,f
  6666  1376  0AF4               	incf	___awmod@dividend,f
  6667  1377  1903               	skipnz
  6668  1378  0AF5               	incf	___awmod@dividend+1,f
  6669  1379                     l2946:	
  6670  1379  0875               	movf	___awmod@dividend+1,w
  6671  137A  00F3               	movwf	?___awmod+1
  6672  137B  0874               	movf	___awmod@dividend,w
  6673  137C  00F2               	movwf	?___awmod
  6674  137D  0008               	return
  6675  137E                     __end_of___awmod:	
  6676                           
  6677                           	psect	text17
  6678  137E                     __ptext17:	
  6679 ;; *************** function ___awdiv *****************
  6680 ;; Defined at:
  6681 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;  divisor         2    0[BANK0 ] int 
  6684 ;;  dividend        2    2[BANK0 ] int 
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;  quotient        2    6[BANK0 ] int 
  6687 ;;  sign            1    5[BANK0 ] unsigned char 
  6688 ;;  counter         1    4[BANK0 ] unsigned char 
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  2    0[BANK0 ] int 
  6691 ;; Registers used:
  6692 ;;		wreg, status,2, status,0
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6698 ;;      Params:         0       4       0       0       0
  6699 ;;      Locals:         0       4       0       0       0
  6700 ;;      Temps:          1       0       0       0       0
  6701 ;;      Totals:         1       8       0       0       0
  6702 ;;Total ram usage:        9 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:    1
  6705 ;; This function calls:
  6706 ;;		Nothing
  6707 ;; This function is called by:
  6708 ;;		_display_Uhrzeit
  6709 ;;		_display_Datum
  6710 ;;		_uint_to_array
  6711 ;;		_DEC_a_BCD
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           
  6716                           ;psect for function ___awdiv
  6717  137E                     ___awdiv:	
  6718                           
  6719                           ;incstack = 0
  6720                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6721  137E  1283               	bcf	3,5	;RP0=0, select bank0
  6722  137F  1303               	bcf	3,6	;RP1=0, select bank0
  6723  1380  01A5               	clrf	___awdiv@sign
  6724  1381  1FA1               	btfss	___awdiv@divisor+1,7
  6725  1382  2B8A               	goto	l4588
  6726  1383  09A0               	comf	___awdiv@divisor,f
  6727  1384  09A1               	comf	___awdiv@divisor+1,f
  6728  1385  0AA0               	incf	___awdiv@divisor,f
  6729  1386  1903               	skipnz
  6730  1387  0AA1               	incf	___awdiv@divisor+1,f
  6731  1388  01A5               	clrf	___awdiv@sign
  6732  1389  0AA5               	incf	___awdiv@sign,f
  6733  138A                     l4588:	
  6734  138A  1FA3               	btfss	___awdiv@dividend+1,7
  6735  138B  2B95               	goto	l4594
  6736  138C  09A2               	comf	___awdiv@dividend,f
  6737  138D  09A3               	comf	___awdiv@dividend+1,f
  6738  138E  0AA2               	incf	___awdiv@dividend,f
  6739  138F  1903               	skipnz
  6740  1390  0AA3               	incf	___awdiv@dividend+1,f
  6741  1391  3001               	movlw	1
  6742  1392  00F8               	movwf	??___awdiv
  6743  1393  0878               	movf	??___awdiv,w
  6744  1394  06A5               	xorwf	___awdiv@sign,f
  6745  1395                     l4594:	
  6746  1395  01A6               	clrf	___awdiv@quotient
  6747  1396  01A7               	clrf	___awdiv@quotient+1
  6748  1397  0820               	movf	___awdiv@divisor,w
  6749  1398  0421               	iorwf	___awdiv@divisor+1,w
  6750  1399  1903               	btfsc	3,2
  6751  139A  2BCC               	goto	l4616
  6752  139B  01A4               	clrf	___awdiv@counter
  6753  139C  0AA4               	incf	___awdiv@counter,f
  6754  139D                     l4604:	
  6755  139D  1BA1               	btfsc	___awdiv@divisor+1,7
  6756  139E  2BAB               	goto	l4606
  6757  139F  3001               	movlw	1
  6758  13A0                     u4195:	
  6759  13A0  1003               	clrc
  6760  13A1  0DA0               	rlf	___awdiv@divisor,f
  6761  13A2  0DA1               	rlf	___awdiv@divisor+1,f
  6762  13A3  3EFF               	addlw	-1
  6763  13A4  1D03               	skipz
  6764  13A5  2BA0               	goto	u4195
  6765  13A6  3001               	movlw	1
  6766  13A7  00F8               	movwf	??___awdiv
  6767  13A8  0878               	movf	??___awdiv,w
  6768  13A9  07A4               	addwf	___awdiv@counter,f
  6769  13AA  2B9D               	goto	l4604
  6770  13AB                     l4606:	
  6771  13AB  3001               	movlw	1
  6772  13AC                     u4215:	
  6773  13AC  1003               	clrc
  6774  13AD  0DA6               	rlf	___awdiv@quotient,f
  6775  13AE  0DA7               	rlf	___awdiv@quotient+1,f
  6776  13AF  3EFF               	addlw	-1
  6777  13B0  1D03               	skipz
  6778  13B1  2BAC               	goto	u4215
  6779  13B2  0821               	movf	___awdiv@divisor+1,w
  6780  13B3  0223               	subwf	___awdiv@dividend+1,w
  6781  13B4  1D03               	skipz
  6782  13B5  2BB8               	goto	u4225
  6783  13B6  0820               	movf	___awdiv@divisor,w
  6784  13B7  0222               	subwf	___awdiv@dividend,w
  6785  13B8                     u4225:	
  6786  13B8  1C03               	skipc
  6787  13B9  2BC1               	goto	l4612
  6788  13BA  0820               	movf	___awdiv@divisor,w
  6789  13BB  02A2               	subwf	___awdiv@dividend,f
  6790  13BC  0821               	movf	___awdiv@divisor+1,w
  6791  13BD  1C03               	skipc
  6792  13BE  03A3               	decf	___awdiv@dividend+1,f
  6793  13BF  02A3               	subwf	___awdiv@dividend+1,f
  6794  13C0  1426               	bsf	___awdiv@quotient,0
  6795  13C1                     l4612:	
  6796  13C1  3001               	movlw	1
  6797  13C2                     u4235:	
  6798  13C2  1003               	clrc
  6799  13C3  0CA1               	rrf	___awdiv@divisor+1,f
  6800  13C4  0CA0               	rrf	___awdiv@divisor,f
  6801  13C5  3EFF               	addlw	-1
  6802  13C6  1D03               	skipz
  6803  13C7  2BC2               	goto	u4235
  6804  13C8  3001               	movlw	1
  6805  13C9  02A4               	subwf	___awdiv@counter,f
  6806  13CA  1D03               	btfss	3,2
  6807  13CB  2BAB               	goto	l4606
  6808  13CC                     l4616:	
  6809  13CC  0825               	movf	___awdiv@sign,w
  6810  13CD  1903               	btfsc	3,2
  6811  13CE  2BD4               	goto	l4620
  6812  13CF  09A6               	comf	___awdiv@quotient,f
  6813  13D0  09A7               	comf	___awdiv@quotient+1,f
  6814  13D1  0AA6               	incf	___awdiv@quotient,f
  6815  13D2  1903               	skipnz
  6816  13D3  0AA7               	incf	___awdiv@quotient+1,f
  6817  13D4                     l4620:	
  6818  13D4  0827               	movf	___awdiv@quotient+1,w
  6819  13D5  00A1               	movwf	?___awdiv+1
  6820  13D6  0826               	movf	___awdiv@quotient,w
  6821  13D7  00A0               	movwf	?___awdiv
  6822  13D8  0008               	return
  6823  13D9                     __end_of___awdiv:	
  6824                           
  6825                           	psect	text18
  6826  11F3                     __ptext18:	
  6827 ;; *************** function _LCD_Write_String *****************
  6828 ;; Defined at:
  6829 ;;		line 73 in file "LCD_8bits.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;  a               1    wreg     PTR unsigned char 
  6832 ;;		 -> STR_14(6), STR_13(16), STR_12(3), STR_11(4), 
  6833 ;;		 -> STR_10(13), STR_9(2), STR_8(2), STR_7(13), 
  6834 ;;		 -> STR_6(4), STR_5(3), STR_4(9), STR_3(17), 
  6835 ;;		 -> STR_2(10), STR_1(3), 
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;  a               1    6[COMMON] PTR unsigned char 
  6838 ;;		 -> STR_14(6), STR_13(16), STR_12(3), STR_11(4), 
  6839 ;;		 -> STR_10(13), STR_9(2), STR_8(2), STR_7(13), 
  6840 ;;		 -> STR_6(4), STR_5(3), STR_4(9), STR_3(17), 
  6841 ;;		 -> STR_2(10), STR_1(3), 
  6842 ;;  n               2    4[COMMON] int 
  6843 ;; Return value:  Size  Location     Type
  6844 ;;                  1    wreg      void 
  6845 ;; Registers used:
  6846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6847 ;; Tracked objects:
  6848 ;;		On entry : 0/0
  6849 ;;		On exit  : 0/0
  6850 ;;		Unchanged: 0/0
  6851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6852 ;;      Params:         0       0       0       0       0
  6853 ;;      Locals:         3       0       0       0       0
  6854 ;;      Temps:          0       0       0       0       0
  6855 ;;      Totals:         3       0       0       0       0
  6856 ;;Total ram usage:        3 bytes
  6857 ;; Hardware stack levels used:    1
  6858 ;; Hardware stack levels required when called:    2
  6859 ;; This function calls:
  6860 ;;		_LCD_Write_Character
  6861 ;; This function is called by:
  6862 ;;		_display_Datum
  6863 ;;		_mostrarLCD
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867                           
  6868                           ;psect for function _LCD_Write_String
  6869  11F3                     _LCD_Write_String:	
  6870                           
  6871                           ;incstack = 0
  6872                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6873                           ;LCD_Write_String@a stored from wreg
  6874  11F3  00F6               	movwf	LCD_Write_String@a
  6875                           
  6876                           ;LCD_8bits.c: 74:     int n;;LCD_8bits.c: 75:     for(n = 0; a[n] != '\0'; n++){
  6877  11F4  01F4               	clrf	LCD_Write_String@n
  6878  11F5  01F5               	clrf	LCD_Write_String@n+1
  6879  11F6                     l2810:	
  6880  11F6  0874               	movf	LCD_Write_String@n,w
  6881  11F7  0776               	addwf	LCD_Write_String@a,w
  6882  11F8  0084               	movwf	4
  6883  11F9  160A  118A  2000  160A  118A  	fcall	stringdir
  6884  11FE  3A00               	xorlw	0
  6885  11FF  1903               	btfsc	3,2
  6886  1200  0008               	return
  6887                           
  6888                           ;LCD_8bits.c: 76:         LCD_Write_Character(a[n]);
  6889  1201  0874               	movf	LCD_Write_String@n,w
  6890  1202  0776               	addwf	LCD_Write_String@a,w
  6891  1203  0084               	movwf	4
  6892  1204  160A  118A  2000  160A  118A  	fcall	stringdir
  6893  1209  160A  118A  2161  160A  118A  	fcall	_LCD_Write_Character
  6894                           
  6895                           ;LCD_8bits.c: 77:     }
  6896  120E  3001               	movlw	1
  6897  120F  07F4               	addwf	LCD_Write_String@n,f
  6898  1210  1803               	skipnc
  6899  1211  0AF5               	incf	LCD_Write_String@n+1,f
  6900  1212  3000               	movlw	0
  6901  1213  07F5               	addwf	LCD_Write_String@n+1,f
  6902  1214  29F6               	goto	l2810
  6903  1215                     __end_of_LCD_Write_String:	
  6904                           
  6905                           	psect	text19
  6906  126D                     __ptext19:	
  6907 ;; *************** function _LCD_Set_Cursor *****************
  6908 ;; Defined at:
  6909 ;;		line 80 in file "LCD_8bits.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;  linea           1    wreg     unsigned char 
  6912 ;;  columna         1    5[COMMON] unsigned char 
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;  linea           1    8[COMMON] unsigned char 
  6915 ;;  corrimiento     1    9[COMMON] unsigned char 
  6916 ;; Return value:  Size  Location     Type
  6917 ;;                  1    wreg      void 
  6918 ;; Registers used:
  6919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6920 ;; Tracked objects:
  6921 ;;		On entry : 0/0
  6922 ;;		On exit  : 0/0
  6923 ;;		Unchanged: 0/0
  6924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6925 ;;      Params:         1       0       0       0       0
  6926 ;;      Locals:         2       0       0       0       0
  6927 ;;      Temps:          2       0       0       0       0
  6928 ;;      Totals:         5       0       0       0       0
  6929 ;;Total ram usage:        5 bytes
  6930 ;; Hardware stack levels used:    1
  6931 ;; Hardware stack levels required when called:    2
  6932 ;; This function calls:
  6933 ;;		_LCD_Cmd
  6934 ;; This function is called by:
  6935 ;;		_display_Uhrzeit
  6936 ;;		_display_Datum
  6937 ;;		_mostrarLCD
  6938 ;;		_pressBoton2
  6939 ;; This function uses a non-reentrant model
  6940 ;;
  6941                           
  6942                           
  6943                           ;psect for function _LCD_Set_Cursor
  6944  126D                     _LCD_Set_Cursor:	
  6945                           
  6946                           ;incstack = 0
  6947                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6948                           ;LCD_Set_Cursor@linea stored from wreg
  6949  126D  00F8               	movwf	LCD_Set_Cursor@linea
  6950                           
  6951                           ;LCD_8bits.c: 82:     switch (linea){
  6952  126E  2A88               	goto	l2798
  6953  126F                     l2788:	
  6954                           
  6955                           ;LCD_8bits.c: 84:             corrimiento = 0x80 + columna;
  6956  126F  0875               	movf	LCD_Set_Cursor@columna,w
  6957  1270  3E80               	addlw	128
  6958  1271  00F6               	movwf	??_LCD_Set_Cursor
  6959  1272  0876               	movf	??_LCD_Set_Cursor,w
  6960  1273  00F9               	movwf	LCD_Set_Cursor@corrimiento
  6961                           
  6962                           ;LCD_8bits.c: 85:             LCD_Cmd(corrimiento);
  6963  1274  0879               	movf	LCD_Set_Cursor@corrimiento,w
  6964  1275  160A  118A  22CA   	fcall	_LCD_Cmd
  6965                           
  6966                           ;LCD_8bits.c: 86:             break;
  6967  1278  0008               	return
  6968  1279                     l2792:	
  6969                           
  6970                           ;LCD_8bits.c: 88:             corrimiento = 0x80 + 0x40 + columna;
  6971  1279  0875               	movf	LCD_Set_Cursor@columna,w
  6972  127A  3EC0               	addlw	192
  6973  127B  00F6               	movwf	??_LCD_Set_Cursor
  6974  127C  0876               	movf	??_LCD_Set_Cursor,w
  6975  127D  00F9               	movwf	LCD_Set_Cursor@corrimiento
  6976                           
  6977                           ;LCD_8bits.c: 89:             LCD_Cmd(corrimiento);
  6978  127E  0879               	movf	LCD_Set_Cursor@corrimiento,w
  6979  127F  160A  118A  22CA   	fcall	_LCD_Cmd
  6980                           
  6981                           ;LCD_8bits.c: 90:             break;
  6982  1282  0008               	return
  6983  1283                     l2796:	
  6984                           
  6985                           ;LCD_8bits.c: 92:             LCD_Cmd(0x80);
  6986  1283  3080               	movlw	128
  6987  1284  160A  118A  22CA   	fcall	_LCD_Cmd
  6988                           
  6989                           ;LCD_8bits.c: 93:     }
  6990  1287  0008               	return
  6991  1288                     l2798:	
  6992  1288  0878               	movf	LCD_Set_Cursor@linea,w
  6993  1289  00F6               	movwf	??_LCD_Set_Cursor
  6994  128A  01F7               	clrf	??_LCD_Set_Cursor+1
  6995                           
  6996                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6997                           ; Switch size 1, requested type "simple"
  6998                           ; Number of cases is 1, Range of values is 0 to 0
  6999                           ; switch strategies available:
  7000                           ; Name         Instructions Cycles
  7001                           ; simple_byte            4     3 (average)
  7002                           ; direct_byte           11     8 (fixed)
  7003                           ; jumptable            260     6 (fixed)
  7004                           ;	Chosen strategy is simple_byte
  7005  128B  0877               	movf	??_LCD_Set_Cursor+1,w
  7006  128C  3A00               	xorlw	0	; case 0
  7007  128D  1903               	skipnz
  7008  128E  2A90               	goto	l5496
  7009  128F  2A83               	goto	l2796
  7010  1290                     l5496:	
  7011                           
  7012                           ; Switch size 1, requested type "simple"
  7013                           ; Number of cases is 2, Range of values is 1 to 2
  7014                           ; switch strategies available:
  7015                           ; Name         Instructions Cycles
  7016                           ; simple_byte            7     4 (average)
  7017                           ; direct_byte           17    11 (fixed)
  7018                           ; jumptable            263     9 (fixed)
  7019                           ;	Chosen strategy is simple_byte
  7020  1290  0876               	movf	??_LCD_Set_Cursor,w
  7021  1291  3A01               	xorlw	1	; case 1
  7022  1292  1903               	skipnz
  7023  1293  2A6F               	goto	l2788
  7024  1294  3A03               	xorlw	3	; case 2
  7025  1295  1903               	skipnz
  7026  1296  2A79               	goto	l2792
  7027  1297  2A83               	goto	l2796
  7028  1298  0008               	return
  7029  1299                     __end_of_LCD_Set_Cursor:	
  7030                           
  7031                           	psect	text20
  7032  0601                     __ptext20:	
  7033 ;; *************** function _get_Time *****************
  7034 ;; Defined at:
  7035 ;;		line 78 in file "RTC.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;		None
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;		None
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  1    wreg      void 
  7042 ;; Registers used:
  7043 ;;		wreg, status,2, status,0, pclath, cstack
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7049 ;;      Params:         0       0       0       0       0
  7050 ;;      Locals:         0       0       0       0       0
  7051 ;;      Temps:          0       1       0       0       0
  7052 ;;      Totals:         0       1       0       0       0
  7053 ;;Total ram usage:        1 bytes
  7054 ;; Hardware stack levels used:    1
  7055 ;; Hardware stack levels required when called:    3
  7056 ;; This function calls:
  7057 ;;		_BCD_a_DEC
  7058 ;;		_I2C_Master_Read
  7059 ;;		_I2C_Master_Start
  7060 ;;		_I2C_Master_Stop
  7061 ;;		_I2C_Master_Write
  7062 ;; This function is called by:
  7063 ;;		_main
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           
  7068                           ;psect for function _get_Time
  7069  0601                     _get_Time:	
  7070                           
  7071                           ;RTC.c: 79:     I2C_Master_Start();
  7072                           
  7073                           ;incstack = 0
  7074                           ; Regs used in _get_Time: [wreg+status,2+status,0+pclath+cstack]
  7075  0601  160A  118A  2139  120A  118A  	fcall	_I2C_Master_Start
  7076                           
  7077                           ;RTC.c: 80:     I2C_Master_Write(0xD0);
  7078  0606  30D0               	movlw	208
  7079  0607  00F2               	movwf	I2C_Master_Write@d
  7080  0608  3000               	movlw	0
  7081  0609  00F3               	movwf	I2C_Master_Write@d+1
  7082  060A  160A  118A  2147  120A  118A  	fcall	_I2C_Master_Write
  7083                           
  7084                           ;RTC.c: 81:     I2C_Master_Write(0);
  7085  060F  3000               	movlw	0
  7086  0610  00F2               	movwf	I2C_Master_Write@d
  7087  0611  00F3               	movwf	I2C_Master_Write@d+1
  7088  0612  160A  118A  2147  120A  118A  	fcall	_I2C_Master_Write
  7089                           
  7090                           ;RTC.c: 82:     I2C_Master_Stop();
  7091  0617  160A  118A  2140  120A  118A  	fcall	_I2C_Master_Stop
  7092                           
  7093                           ;RTC.c: 83:     I2C_Master_Start();
  7094  061C  160A  118A  2139  120A  118A  	fcall	_I2C_Master_Start
  7095                           
  7096                           ;RTC.c: 84:     I2C_Master_Write(0xD1);
  7097  0621  30D1               	movlw	209
  7098  0622  00F2               	movwf	I2C_Master_Write@d
  7099  0623  3000               	movlw	0
  7100  0624  00F3               	movwf	I2C_Master_Write@d+1
  7101  0625  160A  118A  2147  120A  118A  	fcall	_I2C_Master_Write
  7102                           
  7103                           ;RTC.c: 85:     seg = BCD_a_DEC(I2C_Master_Read(0));
  7104  062A  3000               	movlw	0
  7105  062B  00F2               	movwf	I2C_Master_Read@a
  7106  062C  00F3               	movwf	I2C_Master_Read@a+1
  7107  062D  160A  118A  2241  120A  118A  	fcall	_I2C_Master_Read
  7108  0632  0872               	movf	?_I2C_Master_Read,w
  7109  0633  160A  118A  21BC  120A  118A  	fcall	_BCD_a_DEC
  7110  0638  1283               	bcf	3,5	;RP0=0, select bank0
  7111  0639  1303               	bcf	3,6	;RP1=0, select bank0
  7112  063A  00A0               	movwf	??_get_Time
  7113  063B  0820               	movf	??_get_Time,w
  7114  063C  00FB               	movwf	_seg
  7115                           
  7116                           ;RTC.c: 86:     I2C_Master_Stop();
  7117  063D  160A  118A  2140  120A  118A  	fcall	_I2C_Master_Stop
  7118                           
  7119                           ;RTC.c: 88:     I2C_Master_Start();
  7120  0642  160A  118A  2139  120A  118A  	fcall	_I2C_Master_Start
  7121                           
  7122                           ;RTC.c: 89:     I2C_Master_Write(0xD0);
  7123  0647  30D0               	movlw	208
  7124  0648  00F2               	movwf	I2C_Master_Write@d
  7125  0649  3000               	movlw	0
  7126  064A  00F3               	movwf	I2C_Master_Write@d+1
  7127  064B  160A  118A  2147  120A  118A  	fcall	_I2C_Master_Write
  7128                           
  7129                           ;RTC.c: 90:     I2C_Master_Write(1);
  7130  0650  3001               	movlw	1
  7131  0651  00F2               	movwf	I2C_Master_Write@d
  7132  0652  3000               	movlw	0
  7133  0653  00F3               	movwf	I2C_Master_Write@d+1
  7134  0654  160A  118A  2147  120A  118A  	fcall	_I2C_Master_Write
  7135                           
  7136                           ;RTC.c: 91:     I2C_Master_Stop();
  7137  0659  160A  118A  2140  120A  118A  	fcall	_I2C_Master_Stop
  7138                           
  7139                           ;RTC.c: 92:     I2C_Master_Start();
  7140  065E  160A  118A  2139  120A  118A  	fcall	_I2C_Master_Start
  7141                           
  7142                           ;RTC.c: 93:     I2C_Master_Write(0xD1);
  7143  0663  30D1               	movlw	209
  7144  0664  00F2               	movwf	I2C_Master_Write@d
  7145  0665  3000               	movlw	0
  7146  0666  00F3               	movwf	I2C_Master_Write@d+1
  7147  0667  160A  118A  2147  120A  118A  	fcall	_I2C_Master_Write
  7148                           
  7149                           ;RTC.c: 94:     min = BCD_a_DEC(I2C_Master_Read(0));
  7150  066C  3000               	movlw	0
  7151  066D  00F2               	movwf	I2C_Master_Read@a
  7152  066E  00F3               	movwf	I2C_Master_Read@a+1
  7153  066F  160A  118A  2241  120A  118A  	fcall	_I2C_Master_Read
  7154  0674  0872               	movf	?_I2C_Master_Read,w
  7155  0675  160A  118A  21BC  120A  118A  	fcall	_BCD_a_DEC
  7156  067A  1283               	bcf	3,5	;RP0=0, select bank0
  7157  067B  1303               	bcf	3,6	;RP1=0, select bank0
  7158  067C  00A0               	movwf	??_get_Time
  7159  067D  0820               	movf	??_get_Time,w
  7160  067E  1683               	bsf	3,5	;RP0=1, select bank1
  7161  067F  1303               	bcf	3,6	;RP1=0, select bank1
  7162  0680  00C8               	movwf	_min^(0+128)
  7163                           
  7164                           ;RTC.c: 95:     I2C_Master_Stop();
  7165  0681  160A  118A  2140  120A  118A  	fcall	_I2C_Master_Stop
  7166                           
  7167                           ;RTC.c: 97:     I2C_Master_Start();
  7168  0686  160A  118A  2139  120A  118A  	fcall	_I2C_Master_Start
  7169                           
  7170                           ;RTC.c: 98:     I2C_Master_Write(0xD0);
  7171  068B  30D0               	movlw	208
  7172  068C  00F2               	movwf	I2C_Master_Write@d
  7173  068D  3000               	movlw	0
  7174  068E  00F3               	movwf	I2C_Master_Write@d+1
  7175  068F  160A  118A  2147  120A  118A  	fcall	_I2C_Master_Write
  7176                           
  7177                           ;RTC.c: 99:     I2C_Master_Write(2);
  7178  0694  3002               	movlw	2
  7179  0695  00F2               	movwf	I2C_Master_Write@d
  7180  0696  3000               	movlw	0
  7181  0697  00F3               	movwf	I2C_Master_Write@d+1
  7182  0698  160A  118A  2147  120A  118A  	fcall	_I2C_Master_Write
  7183                           
  7184                           ;RTC.c: 100:     I2C_Master_Stop();
  7185  069D  160A  118A  2140  120A  118A  	fcall	_I2C_Master_Stop
  7186                           
  7187                           ;RTC.c: 101:     I2C_Master_Start();
  7188  06A2  160A  118A  2139  120A  118A  	fcall	_I2C_Master_Start
  7189                           
  7190                           ;RTC.c: 102:     I2C_Master_Write(0xD1);
  7191  06A7  30D1               	movlw	209
  7192  06A8  00F2               	movwf	I2C_Master_Write@d
  7193  06A9  3000               	movlw	0
  7194  06AA  00F3               	movwf	I2C_Master_Write@d+1
  7195  06AB  160A  118A  2147  120A  118A  	fcall	_I2C_Master_Write
  7196                           
  7197                           ;RTC.c: 103:     hora = BCD_a_DEC(I2C_Master_Read(0));
  7198  06B0  3000               	movlw	0
  7199  06B1  00F2               	movwf	I2C_Master_Read@a
  7200  06B2  00F3               	movwf	I2C_Master_Read@a+1
  7201  06B3  160A  118A  2241  120A  118A  	fcall	_I2C_Master_Read
  7202  06B8  0872               	movf	?_I2C_Master_Read,w
  7203  06B9  160A  118A  21BC  120A  118A  	fcall	_BCD_a_DEC
  7204  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  7205  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  7206  06C0  00A0               	movwf	??_get_Time
  7207  06C1  0820               	movf	??_get_Time,w
  7208  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  7209  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  7210  06C4  00C7               	movwf	_hora^(0+128)
  7211                           
  7212                           ;RTC.c: 104:     I2C_Master_Stop();
  7213  06C5  160A  118A  2140  120A  118A  	fcall	_I2C_Master_Stop
  7214                           
  7215                           ;RTC.c: 107:     I2C_Master_Start();
  7216  06CA  160A  118A  2139  120A  118A  	fcall	_I2C_Master_Start
  7217                           
  7218                           ;RTC.c: 108:     I2C_Master_Write(0xD0);
  7219  06CF  30D0               	movlw	208
  7220  06D0  00F2               	movwf	I2C_Master_Write@d
  7221  06D1  3000               	movlw	0
  7222  06D2  00F3               	movwf	I2C_Master_Write@d+1
  7223  06D3  160A  118A  2147  120A  118A  	fcall	_I2C_Master_Write
  7224                           
  7225                           ;RTC.c: 109:     I2C_Master_Write(3);
  7226  06D8  3003               	movlw	3
  7227  06D9  00F2               	movwf	I2C_Master_Write@d
  7228  06DA  3000               	movlw	0
  7229  06DB  00F3               	movwf	I2C_Master_Write@d+1
  7230  06DC  160A  118A  2147  120A  118A  	fcall	_I2C_Master_Write
  7231                           
  7232                           ;RTC.c: 110:     I2C_Master_Stop();
  7233  06E1  160A  118A  2140  120A  118A  	fcall	_I2C_Master_Stop
  7234                           
  7235                           ;RTC.c: 111:     I2C_Master_Start();
  7236  06E6  160A  118A  2139  120A  118A  	fcall	_I2C_Master_Start
  7237                           
  7238                           ;RTC.c: 112:     I2C_Master_Write(0xD1);
  7239  06EB  30D1               	movlw	209
  7240  06EC  00F2               	movwf	I2C_Master_Write@d
  7241  06ED  3000               	movlw	0
  7242  06EE  00F3               	movwf	I2C_Master_Write@d+1
  7243  06EF  160A  118A  2147  120A  118A  	fcall	_I2C_Master_Write
  7244                           
  7245                           ;RTC.c: 113:     dia = BCD_a_DEC(I2C_Master_Read(0));
  7246  06F4  3000               	movlw	0
  7247  06F5  00F2               	movwf	I2C_Master_Read@a
  7248  06F6  00F3               	movwf	I2C_Master_Read@a+1
  7249  06F7  160A  118A  2241  120A  118A  	fcall	_I2C_Master_Read
  7250  06FC  0872               	movf	?_I2C_Master_Read,w
  7251  06FD  160A  118A  21BC  120A  118A  	fcall	_BCD_a_DEC
  7252  0702  1283               	bcf	3,5	;RP0=0, select bank0
  7253  0703  1303               	bcf	3,6	;RP1=0, select bank0
  7254  0704  00A0               	movwf	??_get_Time
  7255  0705  0820               	movf	??_get_Time,w
  7256  0706  1683               	bsf	3,5	;RP0=1, select bank1
  7257  0707  1303               	bcf	3,6	;RP1=0, select bank1
  7258  0708  00C6               	movwf	_dia^(0+128)
  7259                           
  7260                           ;RTC.c: 114:     I2C_Master_Stop();
  7261  0709  160A  118A  2140  120A  118A  	fcall	_I2C_Master_Stop
  7262                           
  7263                           ;RTC.c: 116:     I2C_Master_Start();
  7264  070E  160A  118A  2139  120A  118A  	fcall	_I2C_Master_Start
  7265                           
  7266                           ;RTC.c: 117:     I2C_Master_Write(0xD0);
  7267  0713  30D0               	movlw	208
  7268  0714  00F2               	movwf	I2C_Master_Write@d
  7269  0715  3000               	movlw	0
  7270  0716  00F3               	movwf	I2C_Master_Write@d+1
  7271  0717  160A  118A  2147  120A  118A  	fcall	_I2C_Master_Write
  7272                           
  7273                           ;RTC.c: 118:     I2C_Master_Write(4);
  7274  071C  3004               	movlw	4
  7275  071D  00F2               	movwf	I2C_Master_Write@d
  7276  071E  3000               	movlw	0
  7277  071F  00F3               	movwf	I2C_Master_Write@d+1
  7278  0720  160A  118A  2147  120A  118A  	fcall	_I2C_Master_Write
  7279                           
  7280                           ;RTC.c: 119:     I2C_Master_Stop();
  7281  0725  160A  118A  2140  120A  118A  	fcall	_I2C_Master_Stop
  7282                           
  7283                           ;RTC.c: 120:     I2C_Master_Start();
  7284  072A  160A  118A  2139  120A  118A  	fcall	_I2C_Master_Start
  7285                           
  7286                           ;RTC.c: 121:     I2C_Master_Write(0xD1);
  7287  072F  30D1               	movlw	209
  7288  0730  00F2               	movwf	I2C_Master_Write@d
  7289  0731  3000               	movlw	0
  7290  0732  00F3               	movwf	I2C_Master_Write@d+1
  7291  0733  160A  118A  2147  120A  118A  	fcall	_I2C_Master_Write
  7292                           
  7293                           ;RTC.c: 122:     datum = BCD_a_DEC(I2C_Master_Read(0));
  7294  0738  3000               	movlw	0
  7295  0739  00F2               	movwf	I2C_Master_Read@a
  7296  073A  00F3               	movwf	I2C_Master_Read@a+1
  7297  073B  160A  118A  2241  120A  118A  	fcall	_I2C_Master_Read
  7298  0740  0872               	movf	?_I2C_Master_Read,w
  7299  0741  160A  118A  21BC  120A  118A  	fcall	_BCD_a_DEC
  7300  0746  1283               	bcf	3,5	;RP0=0, select bank0
  7301  0747  1303               	bcf	3,6	;RP1=0, select bank0
  7302  0748  00A0               	movwf	??_get_Time
  7303  0749  0820               	movf	??_get_Time,w
  7304  074A  1683               	bsf	3,5	;RP0=1, select bank1
  7305  074B  1303               	bcf	3,6	;RP1=0, select bank1
  7306  074C  00C5               	movwf	_datum^(0+128)
  7307                           
  7308                           ;RTC.c: 123:     I2C_Master_Stop();
  7309  074D  160A  118A  2140  120A  118A  	fcall	_I2C_Master_Stop
  7310                           
  7311                           ;RTC.c: 125:     I2C_Master_Start();
  7312  0752  160A  118A  2139  120A  118A  	fcall	_I2C_Master_Start
  7313                           
  7314                           ;RTC.c: 126:     I2C_Master_Write(0xD0);
  7315  0757  30D0               	movlw	208
  7316  0758  00F2               	movwf	I2C_Master_Write@d
  7317  0759  3000               	movlw	0
  7318  075A  00F3               	movwf	I2C_Master_Write@d+1
  7319  075B  160A  118A  2147  120A  118A  	fcall	_I2C_Master_Write
  7320                           
  7321                           ;RTC.c: 127:     I2C_Master_Write(5);
  7322  0760  3005               	movlw	5
  7323  0761  00F2               	movwf	I2C_Master_Write@d
  7324  0762  3000               	movlw	0
  7325  0763  00F3               	movwf	I2C_Master_Write@d+1
  7326  0764  160A  118A  2147  120A  118A  	fcall	_I2C_Master_Write
  7327                           
  7328                           ;RTC.c: 128:     I2C_Master_Stop();
  7329  0769  160A  118A  2140  120A  118A  	fcall	_I2C_Master_Stop
  7330                           
  7331                           ;RTC.c: 129:     I2C_Master_Start();
  7332  076E  160A  118A  2139  120A  118A  	fcall	_I2C_Master_Start
  7333                           
  7334                           ;RTC.c: 130:     I2C_Master_Write(0xD1);
  7335  0773  30D1               	movlw	209
  7336  0774  00F2               	movwf	I2C_Master_Write@d
  7337  0775  3000               	movlw	0
  7338  0776  00F3               	movwf	I2C_Master_Write@d+1
  7339  0777  160A  118A  2147  120A  118A  	fcall	_I2C_Master_Write
  7340                           
  7341                           ;RTC.c: 131:     mes = BCD_a_DEC(I2C_Master_Read(0));
  7342  077C  3000               	movlw	0
  7343  077D  00F2               	movwf	I2C_Master_Read@a
  7344  077E  00F3               	movwf	I2C_Master_Read@a+1
  7345  077F  160A  118A  2241  120A  118A  	fcall	_I2C_Master_Read
  7346  0784  0872               	movf	?_I2C_Master_Read,w
  7347  0785  160A  118A  21BC  120A  118A  	fcall	_BCD_a_DEC
  7348  078A  1283               	bcf	3,5	;RP0=0, select bank0
  7349  078B  1303               	bcf	3,6	;RP1=0, select bank0
  7350  078C  00A0               	movwf	??_get_Time
  7351  078D  0820               	movf	??_get_Time,w
  7352  078E  1683               	bsf	3,5	;RP0=1, select bank1
  7353  078F  1303               	bcf	3,6	;RP1=0, select bank1
  7354  0790  00C4               	movwf	_mes^(0+128)
  7355                           
  7356                           ;RTC.c: 132:     I2C_Master_Stop();
  7357  0791  160A  118A  2140  120A  118A  	fcall	_I2C_Master_Stop
  7358                           
  7359                           ;RTC.c: 134:     I2C_Master_Start();
  7360  0796  160A  118A  2139  120A  118A  	fcall	_I2C_Master_Start
  7361                           
  7362                           ;RTC.c: 135:     I2C_Master_Write(0xD0);
  7363  079B  30D0               	movlw	208
  7364  079C  00F2               	movwf	I2C_Master_Write@d
  7365  079D  3000               	movlw	0
  7366  079E  00F3               	movwf	I2C_Master_Write@d+1
  7367  079F  160A  118A  2147  120A  118A  	fcall	_I2C_Master_Write
  7368                           
  7369                           ;RTC.c: 136:     I2C_Master_Write(6);
  7370  07A4  3006               	movlw	6
  7371  07A5  00F2               	movwf	I2C_Master_Write@d
  7372  07A6  3000               	movlw	0
  7373  07A7  00F3               	movwf	I2C_Master_Write@d+1
  7374  07A8  160A  118A  2147  120A  118A  	fcall	_I2C_Master_Write
  7375                           
  7376                           ;RTC.c: 137:     I2C_Master_Stop();
  7377  07AD  160A  118A  2140  120A  118A  	fcall	_I2C_Master_Stop
  7378                           
  7379                           ;RTC.c: 138:     I2C_Master_Start();
  7380  07B2  160A  118A  2139  120A  118A  	fcall	_I2C_Master_Start
  7381                           
  7382                           ;RTC.c: 139:     I2C_Master_Write(0xD1);
  7383  07B7  30D1               	movlw	209
  7384  07B8  00F2               	movwf	I2C_Master_Write@d
  7385  07B9  3000               	movlw	0
  7386  07BA  00F3               	movwf	I2C_Master_Write@d+1
  7387  07BB  160A  118A  2147  120A  118A  	fcall	_I2C_Master_Write
  7388                           
  7389                           ;RTC.c: 140:     jahr = BCD_a_DEC(I2C_Master_Read(0));
  7390  07C0  3000               	movlw	0
  7391  07C1  00F2               	movwf	I2C_Master_Read@a
  7392  07C2  00F3               	movwf	I2C_Master_Read@a+1
  7393  07C3  160A  118A  2241  120A  118A  	fcall	_I2C_Master_Read
  7394  07C8  0872               	movf	?_I2C_Master_Read,w
  7395  07C9  160A  118A  21BC  120A  118A  	fcall	_BCD_a_DEC
  7396  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  7397  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  7398  07D0  00A0               	movwf	??_get_Time
  7399  07D1  0820               	movf	??_get_Time,w
  7400  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  7401  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  7402  07D4  00C3               	movwf	_jahr^(0+128)
  7403                           
  7404                           ;RTC.c: 141:     I2C_Master_Stop();
  7405  07D5  160A  118A  2140   	fcall	_I2C_Master_Stop
  7406  07D8  0008               	return
  7407  07D9                     __end_of_get_Time:	
  7408                           
  7409                           	psect	text21
  7410  1147                     __ptext21:	
  7411 ;; *************** function _I2C_Master_Write *****************
  7412 ;; Defined at:
  7413 ;;		line 65 in file "I2C.c"
  7414 ;; Parameters:    Size  Location     Type
  7415 ;;  d               2    2[COMMON] unsigned int 
  7416 ;; Auto vars:     Size  Location     Type
  7417 ;;		None
  7418 ;; Return value:  Size  Location     Type
  7419 ;;                  1    wreg      void 
  7420 ;; Registers used:
  7421 ;;		wreg, status,2, status,0, pclath, cstack
  7422 ;; Tracked objects:
  7423 ;;		On entry : 0/0
  7424 ;;		On exit  : 0/0
  7425 ;;		Unchanged: 0/0
  7426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7427 ;;      Params:         2       0       0       0       0
  7428 ;;      Locals:         0       0       0       0       0
  7429 ;;      Temps:          0       0       0       0       0
  7430 ;;      Totals:         2       0       0       0       0
  7431 ;;Total ram usage:        2 bytes
  7432 ;; Hardware stack levels used:    1
  7433 ;; Hardware stack levels required when called:    2
  7434 ;; This function calls:
  7435 ;;		_I2C_Master_Wait
  7436 ;; This function is called by:
  7437 ;;		_get_Time
  7438 ;;		_temp_objeto
  7439 ;;		_temp_ambiente
  7440 ;;		_get_hora
  7441 ;;		_Zeit_Datum_Set
  7442 ;; This function uses a non-reentrant model
  7443 ;;
  7444                           
  7445                           
  7446                           ;psect for function _I2C_Master_Write
  7447  1147                     _I2C_Master_Write:	
  7448                           
  7449                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  7450                           
  7451                           ;incstack = 0
  7452                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  7453  1147  160A  118A  214F   	fcall	_I2C_Master_Wait
  7454                           
  7455                           ;I2C.c: 68:     SSPBUF = d;
  7456  114A  0872               	movf	I2C_Master_Write@d,w
  7457  114B  1283               	bcf	3,5	;RP0=0, select bank0
  7458  114C  1303               	bcf	3,6	;RP1=0, select bank0
  7459  114D  0093               	movwf	19	;volatile
  7460  114E  0008               	return
  7461  114F                     __end_of_I2C_Master_Write:	
  7462                           
  7463                           	psect	text22
  7464  1140                     __ptext22:	
  7465 ;; *************** function _I2C_Master_Stop *****************
  7466 ;; Defined at:
  7467 ;;		line 55 in file "I2C.c"
  7468 ;; Parameters:    Size  Location     Type
  7469 ;;		None
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;		None
  7472 ;; Return value:  Size  Location     Type
  7473 ;;                  1    wreg      void 
  7474 ;; Registers used:
  7475 ;;		wreg, status,2, status,0, pclath, cstack
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7481 ;;      Params:         0       0       0       0       0
  7482 ;;      Locals:         0       0       0       0       0
  7483 ;;      Temps:          0       0       0       0       0
  7484 ;;      Totals:         0       0       0       0       0
  7485 ;;Total ram usage:        0 bytes
  7486 ;; Hardware stack levels used:    1
  7487 ;; Hardware stack levels required when called:    2
  7488 ;; This function calls:
  7489 ;;		_I2C_Master_Wait
  7490 ;; This function is called by:
  7491 ;;		_get_Time
  7492 ;;		_temp_objeto
  7493 ;;		_temp_ambiente
  7494 ;;		_get_hora
  7495 ;;		_Zeit_Datum_Set
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499                           
  7500                           ;psect for function _I2C_Master_Stop
  7501  1140                     _I2C_Master_Stop:	
  7502                           
  7503                           ;I2C.c: 57:     I2C_Master_Wait();
  7504                           
  7505                           ;incstack = 0
  7506                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  7507  1140  160A  118A  214F   	fcall	_I2C_Master_Wait
  7508                           
  7509                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  7510  1143  1683               	bsf	3,5	;RP0=1, select bank1
  7511  1144  1303               	bcf	3,6	;RP1=0, select bank1
  7512  1145  1511               	bsf	17,2	;volatile
  7513  1146  0008               	return
  7514  1147                     __end_of_I2C_Master_Stop:	
  7515                           
  7516                           	psect	text23
  7517  1139                     __ptext23:	
  7518 ;; *************** function _I2C_Master_Start *****************
  7519 ;; Defined at:
  7520 ;;		line 39 in file "I2C.c"
  7521 ;; Parameters:    Size  Location     Type
  7522 ;;		None
  7523 ;; Auto vars:     Size  Location     Type
  7524 ;;		None
  7525 ;; Return value:  Size  Location     Type
  7526 ;;                  1    wreg      void 
  7527 ;; Registers used:
  7528 ;;		wreg, status,2, status,0, pclath, cstack
  7529 ;; Tracked objects:
  7530 ;;		On entry : 0/0
  7531 ;;		On exit  : 0/0
  7532 ;;		Unchanged: 0/0
  7533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7534 ;;      Params:         0       0       0       0       0
  7535 ;;      Locals:         0       0       0       0       0
  7536 ;;      Temps:          0       0       0       0       0
  7537 ;;      Totals:         0       0       0       0       0
  7538 ;;Total ram usage:        0 bytes
  7539 ;; Hardware stack levels used:    1
  7540 ;; Hardware stack levels required when called:    2
  7541 ;; This function calls:
  7542 ;;		_I2C_Master_Wait
  7543 ;; This function is called by:
  7544 ;;		_get_Time
  7545 ;;		_temp_objeto
  7546 ;;		_temp_ambiente
  7547 ;;		_get_hora
  7548 ;;		_Zeit_Datum_Set
  7549 ;; This function uses a non-reentrant model
  7550 ;;
  7551                           
  7552                           
  7553                           ;psect for function _I2C_Master_Start
  7554  1139                     _I2C_Master_Start:	
  7555                           
  7556                           ;I2C.c: 41:     I2C_Master_Wait();
  7557                           
  7558                           ;incstack = 0
  7559                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  7560  1139  160A  118A  214F   	fcall	_I2C_Master_Wait
  7561                           
  7562                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  7563  113C  1683               	bsf	3,5	;RP0=1, select bank1
  7564  113D  1303               	bcf	3,6	;RP1=0, select bank1
  7565  113E  1411               	bsf	17,0	;volatile
  7566  113F  0008               	return
  7567  1140                     __end_of_I2C_Master_Start:	
  7568                           
  7569                           	psect	text24
  7570  1241                     __ptext24:	
  7571 ;; *************** function _I2C_Master_Read *****************
  7572 ;; Defined at:
  7573 ;;		line 74 in file "I2C.c"
  7574 ;; Parameters:    Size  Location     Type
  7575 ;;  a               2    2[COMMON] unsigned short 
  7576 ;; Auto vars:     Size  Location     Type
  7577 ;;  temp            2    6[COMMON] unsigned short 
  7578 ;; Return value:  Size  Location     Type
  7579 ;;                  2    2[COMMON] unsigned short 
  7580 ;; Registers used:
  7581 ;;		wreg, status,2, status,0, pclath, cstack
  7582 ;; Tracked objects:
  7583 ;;		On entry : 0/0
  7584 ;;		On exit  : 0/0
  7585 ;;		Unchanged: 0/0
  7586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7587 ;;      Params:         2       0       0       0       0
  7588 ;;      Locals:         2       0       0       0       0
  7589 ;;      Temps:          2       0       0       0       0
  7590 ;;      Totals:         6       0       0       0       0
  7591 ;;Total ram usage:        6 bytes
  7592 ;; Hardware stack levels used:    1
  7593 ;; Hardware stack levels required when called:    2
  7594 ;; This function calls:
  7595 ;;		_I2C_Master_Wait
  7596 ;; This function is called by:
  7597 ;;		_get_Time
  7598 ;;		_temp_objeto
  7599 ;;		_temp_ambiente
  7600 ;;		_get_hora
  7601 ;; This function uses a non-reentrant model
  7602 ;;
  7603                           
  7604                           
  7605                           ;psect for function _I2C_Master_Read
  7606  1241                     _I2C_Master_Read:	
  7607                           
  7608                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  7609                           
  7610                           ;incstack = 0
  7611                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  7612  1241  160A  118A  214F  160A  118A  	fcall	_I2C_Master_Wait
  7613                           
  7614                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  7615  1246  1683               	bsf	3,5	;RP0=1, select bank1
  7616  1247  1303               	bcf	3,6	;RP1=0, select bank1
  7617  1248  1591               	bsf	17,3	;volatile
  7618                           
  7619                           ;I2C.c: 79:     I2C_Master_Wait();
  7620  1249  160A  118A  214F  160A  118A  	fcall	_I2C_Master_Wait
  7621                           
  7622                           ;I2C.c: 80:     temp = SSPBUF;
  7623  124E  1283               	bcf	3,5	;RP0=0, select bank0
  7624  124F  1303               	bcf	3,6	;RP1=0, select bank0
  7625  1250  0813               	movf	19,w	;volatile
  7626  1251  00F4               	movwf	??_I2C_Master_Read
  7627  1252  01F5               	clrf	??_I2C_Master_Read+1
  7628  1253  0874               	movf	??_I2C_Master_Read,w
  7629  1254  00F6               	movwf	I2C_Master_Read@temp
  7630  1255  0875               	movf	??_I2C_Master_Read+1,w
  7631  1256  00F7               	movwf	I2C_Master_Read@temp+1
  7632                           
  7633                           ;I2C.c: 81:     I2C_Master_Wait();
  7634  1257  160A  118A  214F  160A  118A  	fcall	_I2C_Master_Wait
  7635                           
  7636                           ;I2C.c: 82:     if(a == 1){
  7637  125C  0372               	decf	I2C_Master_Read@a,w
  7638  125D  0473               	iorwf	I2C_Master_Read@a+1,w
  7639  125E  1D03               	btfss	3,2
  7640  125F  2A64               	goto	l282
  7641                           
  7642                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  7643  1260  1683               	bsf	3,5	;RP0=1, select bank1
  7644  1261  1303               	bcf	3,6	;RP1=0, select bank1
  7645  1262  1291               	bcf	17,5	;volatile
  7646                           
  7647                           ;I2C.c: 84:     }else{
  7648  1263  2A67               	goto	l283
  7649  1264                     l282:	
  7650                           
  7651                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  7652  1264  1683               	bsf	3,5	;RP0=1, select bank1
  7653  1265  1303               	bcf	3,6	;RP1=0, select bank1
  7654  1266  1691               	bsf	17,5	;volatile
  7655  1267                     l283:	
  7656                           ;I2C.c: 86:     }
  7657                           
  7658                           
  7659                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  7660  1267  1611               	bsf	17,4	;volatile
  7661                           
  7662                           ;I2C.c: 88:     return temp;
  7663  1268  0877               	movf	I2C_Master_Read@temp+1,w
  7664  1269  00F3               	movwf	?_I2C_Master_Read+1
  7665  126A  0876               	movf	I2C_Master_Read@temp,w
  7666  126B  00F2               	movwf	?_I2C_Master_Read
  7667  126C  0008               	return
  7668  126D                     __end_of_I2C_Master_Read:	
  7669                           
  7670                           	psect	text25
  7671  114F                     __ptext25:	
  7672 ;; *************** function _I2C_Master_Wait *****************
  7673 ;; Defined at:
  7674 ;;		line 32 in file "I2C.c"
  7675 ;; Parameters:    Size  Location     Type
  7676 ;;		None
  7677 ;; Auto vars:     Size  Location     Type
  7678 ;;		None
  7679 ;; Return value:  Size  Location     Type
  7680 ;;                  1    wreg      void 
  7681 ;; Registers used:
  7682 ;;		wreg, status,2
  7683 ;; Tracked objects:
  7684 ;;		On entry : 0/0
  7685 ;;		On exit  : 0/0
  7686 ;;		Unchanged: 0/0
  7687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7688 ;;      Params:         0       0       0       0       0
  7689 ;;      Locals:         0       0       0       0       0
  7690 ;;      Temps:          0       0       0       0       0
  7691 ;;      Totals:         0       0       0       0       0
  7692 ;;Total ram usage:        0 bytes
  7693 ;; Hardware stack levels used:    1
  7694 ;; Hardware stack levels required when called:    1
  7695 ;; This function calls:
  7696 ;;		Nothing
  7697 ;; This function is called by:
  7698 ;;		_I2C_Master_Start
  7699 ;;		_I2C_Master_Stop
  7700 ;;		_I2C_Master_Write
  7701 ;;		_I2C_Master_Read
  7702 ;;		_I2C_Master_RepeatedStart
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           
  7707                           ;psect for function _I2C_Master_Wait
  7708  114F                     _I2C_Master_Wait:	
  7709  114F                     l264:	
  7710                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  7711                           
  7712                           ;incstack = 0
  7713                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  7714                           
  7715  114F  1683               	bsf	3,5	;RP0=1, select bank1
  7716  1150  1303               	bcf	3,6	;RP1=0, select bank1
  7717  1151  1914               	btfsc	20,2	;volatile
  7718  1152  294F               	goto	l264
  7719  1153  0811               	movf	17,w	;volatile
  7720  1154  391F               	andlw	31
  7721  1155  1903               	btfsc	3,2
  7722  1156  0008               	return
  7723  1157  294F               	goto	l264
  7724  1158                     __end_of_I2C_Master_Wait:	
  7725                           
  7726                           	psect	text26
  7727  11BC                     __ptext26:	
  7728 ;; *************** function _BCD_a_DEC *****************
  7729 ;; Defined at:
  7730 ;;		line 27 in file "RTC.c"
  7731 ;; Parameters:    Size  Location     Type
  7732 ;;  numBCD          1    wreg     unsigned char 
  7733 ;; Auto vars:     Size  Location     Type
  7734 ;;  numBCD          1    9[COMMON] unsigned char 
  7735 ;; Return value:  Size  Location     Type
  7736 ;;                  1    wreg      unsigned char 
  7737 ;; Registers used:
  7738 ;;		wreg, status,2, status,0, pclath, cstack
  7739 ;; Tracked objects:
  7740 ;;		On entry : 0/0
  7741 ;;		On exit  : 0/0
  7742 ;;		Unchanged: 0/0
  7743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7744 ;;      Params:         0       0       0       0       0
  7745 ;;      Locals:         1       0       0       0       0
  7746 ;;      Temps:          3       0       0       0       0
  7747 ;;      Totals:         4       0       0       0       0
  7748 ;;Total ram usage:        4 bytes
  7749 ;; Hardware stack levels used:    1
  7750 ;; Hardware stack levels required when called:    2
  7751 ;; This function calls:
  7752 ;;		___bmul
  7753 ;; This function is called by:
  7754 ;;		_get_Time
  7755 ;;		_get_hora
  7756 ;; This function uses a non-reentrant model
  7757 ;;
  7758                           
  7759                           
  7760                           ;psect for function _BCD_a_DEC
  7761  11BC                     _BCD_a_DEC:	
  7762                           
  7763                           ;incstack = 0
  7764                           ; Regs used in _BCD_a_DEC: [wreg+status,2+status,0+pclath+cstack]
  7765                           ;BCD_a_DEC@numBCD stored from wreg
  7766  11BC  00F9               	movwf	BCD_a_DEC@numBCD
  7767                           
  7768                           ;RTC.c: 28:     return (numBCD >> 4) * 10 + (numBCD & 0x0F);
  7769  11BD  300F               	movlw	15
  7770  11BE  0579               	andwf	BCD_a_DEC@numBCD,w
  7771  11BF  00F6               	movwf	??_BCD_a_DEC
  7772  11C0  300A               	movlw	10
  7773  11C1  00F7               	movwf	??_BCD_a_DEC+1
  7774  11C2  0877               	movf	??_BCD_a_DEC+1,w
  7775  11C3  00F2               	movwf	___bmul@multiplicand
  7776  11C4  0879               	movf	BCD_a_DEC@numBCD,w
  7777  11C5  00F8               	movwf	??_BCD_a_DEC+2
  7778  11C6  3004               	movlw	4
  7779  11C7                     u2475:	
  7780  11C7  1003               	clrc
  7781  11C8  0CF8               	rrf	??_BCD_a_DEC+2,f
  7782  11C9  3EFF               	addlw	-1
  7783  11CA  1D03               	skipz
  7784  11CB  29C7               	goto	u2475
  7785  11CC  0878               	movf	??_BCD_a_DEC+2,w
  7786  11CD  160A  118A  2171   	fcall	___bmul
  7787  11D0  0776               	addwf	??_BCD_a_DEC,w
  7788  11D1  0008               	return
  7789  11D2                     __end_of_BCD_a_DEC:	
  7790                           
  7791                           	psect	text27
  7792  1171                     __ptext27:	
  7793 ;; *************** function ___bmul *****************
  7794 ;; Defined at:
  7795 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  7796 ;; Parameters:    Size  Location     Type
  7797 ;;  multiplier      1    wreg     unsigned char 
  7798 ;;  multiplicand    1    2[COMMON] unsigned char 
  7799 ;; Auto vars:     Size  Location     Type
  7800 ;;  multiplier      1    5[COMMON] unsigned char 
  7801 ;;  product         1    4[COMMON] unsigned char 
  7802 ;; Return value:  Size  Location     Type
  7803 ;;                  1    wreg      unsigned char 
  7804 ;; Registers used:
  7805 ;;		wreg, status,2, status,0
  7806 ;; Tracked objects:
  7807 ;;		On entry : 0/0
  7808 ;;		On exit  : 0/0
  7809 ;;		Unchanged: 0/0
  7810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7811 ;;      Params:         1       0       0       0       0
  7812 ;;      Locals:         2       0       0       0       0
  7813 ;;      Temps:          1       0       0       0       0
  7814 ;;      Totals:         4       0       0       0       0
  7815 ;;Total ram usage:        4 bytes
  7816 ;; Hardware stack levels used:    1
  7817 ;; Hardware stack levels required when called:    1
  7818 ;; This function calls:
  7819 ;;		Nothing
  7820 ;; This function is called by:
  7821 ;;		_BCD_a_DEC
  7822 ;; This function uses a non-reentrant model
  7823 ;;
  7824                           
  7825                           
  7826                           ;psect for function ___bmul
  7827  1171                     ___bmul:	
  7828                           
  7829                           ;incstack = 0
  7830                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7831                           ;___bmul@multiplier stored from wreg
  7832  1171  00F5               	movwf	___bmul@multiplier
  7833  1172  01F4               	clrf	___bmul@product
  7834  1173                     l2832:	
  7835  1173  1C75               	btfss	___bmul@multiplier,0
  7836  1174  2979               	goto	l2836
  7837  1175  0872               	movf	___bmul@multiplicand,w
  7838  1176  00F3               	movwf	??___bmul
  7839  1177  0873               	movf	??___bmul,w
  7840  1178  07F4               	addwf	___bmul@product,f
  7841  1179                     l2836:	
  7842  1179  1003               	clrc
  7843  117A  0DF2               	rlf	___bmul@multiplicand,f
  7844  117B  1003               	clrc
  7845  117C  0CF5               	rrf	___bmul@multiplier,f
  7846  117D  0875               	movf	___bmul@multiplier,w
  7847  117E  1D03               	btfss	3,2
  7848  117F  2973               	goto	l2832
  7849  1180  0874               	movf	___bmul@product,w
  7850  1181  0008               	return
  7851  1182                     __end_of___bmul:	
  7852                           
  7853                           	psect	text28
  7854  149F                     __ptext28:	
  7855 ;; *************** function _SetUp *****************
  7856 ;; Defined at:
  7857 ;;		line 138 in file "main_Master.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;		None
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;		None
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  1    wreg      void 
  7864 ;; Registers used:
  7865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7871 ;;      Params:         0       0       0       0       0
  7872 ;;      Locals:         0       0       0       0       0
  7873 ;;      Temps:          0       1       0       0       0
  7874 ;;      Totals:         0       1       0       0       0
  7875 ;;Total ram usage:        1 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:    3
  7878 ;; This function calls:
  7879 ;;		_I2C_Master_Init
  7880 ;;		_LCD_Create_Char
  7881 ;;		_LCD_clear
  7882 ;;		_LCD_init
  7883 ;;		_OSC_config
  7884 ;; This function is called by:
  7885 ;;		_main
  7886 ;; This function uses a non-reentrant model
  7887 ;;
  7888                           
  7889                           
  7890                           ;psect for function _SetUp
  7891  149F                     _SetUp:	
  7892                           
  7893                           ;main_Master.c: 139:     OSC_config(8000000);
  7894                           
  7895                           ;incstack = 0
  7896                           ; Regs used in _SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7897  149F  3000               	movlw	0
  7898  14A0  00F5               	movwf	OSC_config@frecuencia+3
  7899  14A1  307A               	movlw	122
  7900  14A2  00F4               	movwf	OSC_config@frecuencia+2
  7901  14A3  3012               	movlw	18
  7902  14A4  00F3               	movwf	OSC_config@frecuencia+1
  7903  14A5  3000               	movlw	0
  7904  14A6  00F2               	movwf	OSC_config@frecuencia
  7905  14A7  160A  118A  2692  160A  118A  	fcall	_OSC_config
  7906                           
  7907                           ;main_Master.c: 140:     TRISB = 0b00000110;
  7908  14AC  3006               	movlw	6
  7909  14AD  1683               	bsf	3,5	;RP0=1, select bank1
  7910  14AE  1303               	bcf	3,6	;RP1=0, select bank1
  7911  14AF  0086               	movwf	6	;volatile
  7912                           
  7913                           ;main_Master.c: 141:     ANSELH = 0;
  7914  14B0  1683               	bsf	3,5	;RP0=1, select bank3
  7915  14B1  1703               	bsf	3,6	;RP1=1, select bank3
  7916  14B2  0189               	clrf	9	;volatile
  7917                           
  7918                           ;main_Master.c: 142:     WPUB = 0b00000110;
  7919  14B3  3006               	movlw	6
  7920  14B4  1683               	bsf	3,5	;RP0=1, select bank1
  7921  14B5  1303               	bcf	3,6	;RP1=0, select bank1
  7922  14B6  0095               	movwf	21	;volatile
  7923                           
  7924                           ;main_Master.c: 143:     OPTION_REGbits.nRBPU = 0;
  7925  14B7  1381               	bcf	1,7	;volatile
  7926                           
  7927                           ;main_Master.c: 144:     IOCB = 0b00000110;
  7928  14B8  3006               	movlw	6
  7929  14B9  0096               	movwf	22	;volatile
  7930                           
  7931                           ;main_Master.c: 145:     INTCONbits.RBIE = 1;
  7932  14BA  158B               	bsf	11,3	;volatile
  7933                           
  7934                           ;main_Master.c: 146:     INTCONbits.GIE = 1;
  7935  14BB  178B               	bsf	11,7	;volatile
  7936                           
  7937                           ;main_Master.c: 147:     TRISD = 0;
  7938  14BC  0188               	clrf	8	;volatile
  7939                           
  7940                           ;main_Master.c: 148:     TRISC0 = 0;
  7941  14BD  1007               	bcf	7,0	;volatile
  7942                           
  7943                           ;main_Master.c: 149:     TRISC1 = 0;
  7944  14BE  1087               	bcf	7,1	;volatile
  7945                           
  7946                           ;main_Master.c: 150:     LCD_init();
  7947  14BF  160A  118A  2439  160A  118A  	fcall	_LCD_init
  7948                           
  7949                           ;main_Master.c: 151:     LCD_Create_Char(0, atilde);
  7950  14C4  3011               	movlw	(low ((_atilde-__stringbase)| (0+32768)))& (0+255)
  7951  14C5  1283               	bcf	3,5	;RP0=0, select bank0
  7952  14C6  1303               	bcf	3,6	;RP1=0, select bank0
  7953  14C7  00AE               	movwf	??_SetUp
  7954  14C8  082E               	movf	??_SetUp,w
  7955  14C9  00F5               	movwf	LCD_Create_Char@chardata
  7956  14CA  3000               	movlw	0
  7957  14CB  160A  118A  2215  160A  118A  	fcall	_LCD_Create_Char
  7958                           
  7959                           ;main_Master.c: 152:     LCD_Create_Char(1, arrowr);
  7960  14D0  3021               	movlw	(low ((_arrowr-__stringbase)| (0+32768)))& (0+255)
  7961  14D1  1283               	bcf	3,5	;RP0=0, select bank0
  7962  14D2  1303               	bcf	3,6	;RP1=0, select bank0
  7963  14D3  00AE               	movwf	??_SetUp
  7964  14D4  082E               	movf	??_SetUp,w
  7965  14D5  00F5               	movwf	LCD_Create_Char@chardata
  7966  14D6  3001               	movlw	1
  7967  14D7  160A  118A  2215  160A  118A  	fcall	_LCD_Create_Char
  7968                           
  7969                           ;main_Master.c: 153:     LCD_Create_Char(2, termometro);
  7970  14DC  3009               	movlw	(low ((_termometro-__stringbase)| (0+32768)))& (0+255)
  7971  14DD  1283               	bcf	3,5	;RP0=0, select bank0
  7972  14DE  1303               	bcf	3,6	;RP1=0, select bank0
  7973  14DF  00AE               	movwf	??_SetUp
  7974  14E0  082E               	movf	??_SetUp,w
  7975  14E1  00F5               	movwf	LCD_Create_Char@chardata
  7976  14E2  3002               	movlw	2
  7977  14E3  160A  118A  2215  160A  118A  	fcall	_LCD_Create_Char
  7978                           
  7979                           ;main_Master.c: 154:     LCD_Create_Char(3, gota);
  7980  14E8  3001               	movlw	(low ((_gota-__stringbase)| (0+32768)))& (0+255)
  7981  14E9  1283               	bcf	3,5	;RP0=0, select bank0
  7982  14EA  1303               	bcf	3,6	;RP1=0, select bank0
  7983  14EB  00AE               	movwf	??_SetUp
  7984  14EC  082E               	movf	??_SetUp,w
  7985  14ED  00F5               	movwf	LCD_Create_Char@chardata
  7986  14EE  3003               	movlw	3
  7987  14EF  160A  118A  2215  160A  118A  	fcall	_LCD_Create_Char
  7988                           
  7989                           ;main_Master.c: 155:     LCD_Create_Char(4, arrowr_vacio);
  7990  14F4  3019               	movlw	(low ((_arrowr_vacio-__stringbase)| (0+32768)))& (0+255)
  7991  14F5  1283               	bcf	3,5	;RP0=0, select bank0
  7992  14F6  1303               	bcf	3,6	;RP1=0, select bank0
  7993  14F7  00AE               	movwf	??_SetUp
  7994  14F8  082E               	movf	??_SetUp,w
  7995  14F9  00F5               	movwf	LCD_Create_Char@chardata
  7996  14FA  3004               	movlw	4
  7997  14FB  160A  118A  2215  160A  118A  	fcall	_LCD_Create_Char
  7998                           
  7999                           ;main_Master.c: 156:     LCD_clear();
  8000  1500  160A  118A  21A6  160A  118A  	fcall	_LCD_clear
  8001                           
  8002                           ;main_Master.c: 157:     I2C_Master_Init(100000);
  8003  1505  3000               	movlw	0
  8004  1506  1283               	bcf	3,5	;RP0=0, select bank0
  8005  1507  1303               	bcf	3,6	;RP1=0, select bank0
  8006  1508  00A9               	movwf	I2C_Master_Init@c+3
  8007  1509  3001               	movlw	1
  8008  150A  00A8               	movwf	I2C_Master_Init@c+2
  8009  150B  3086               	movlw	134
  8010  150C  00A7               	movwf	I2C_Master_Init@c+1
  8011  150D  30A0               	movlw	160
  8012  150E  00A6               	movwf	I2C_Master_Init@c
  8013  150F  160A  118A  22FD   	fcall	_I2C_Master_Init
  8014  1512  0008               	return
  8015  1513                     __end_of_SetUp:	
  8016                           
  8017                           	psect	text29
  8018  1692                     __ptext29:	
  8019 ;; *************** function _OSC_config *****************
  8020 ;; Defined at:
  8021 ;;		line 161 in file "main_Master.c"
  8022 ;; Parameters:    Size  Location     Type
  8023 ;;  frecuencia      4    2[COMMON] unsigned long 
  8024 ;; Auto vars:     Size  Location     Type
  8025 ;;		None
  8026 ;; Return value:  Size  Location     Type
  8027 ;;                  1    wreg      void 
  8028 ;; Registers used:
  8029 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8030 ;; Tracked objects:
  8031 ;;		On entry : 0/0
  8032 ;;		On exit  : 0/0
  8033 ;;		Unchanged: 0/0
  8034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8035 ;;      Params:         4       0       0       0       0
  8036 ;;      Locals:         0       0       0       0       0
  8037 ;;      Temps:          0       0       0       0       0
  8038 ;;      Totals:         4       0       0       0       0
  8039 ;;Total ram usage:        4 bytes
  8040 ;; Hardware stack levels used:    1
  8041 ;; Hardware stack levels required when called:    1
  8042 ;; This function calls:
  8043 ;;		Nothing
  8044 ;; This function is called by:
  8045 ;;		_SetUp
  8046 ;; This function uses a non-reentrant model
  8047 ;;
  8048                           
  8049                           
  8050                           ;psect for function _OSC_config
  8051  1692                     _OSC_config:	
  8052                           
  8053                           ;main_Master.c: 162:     switch(frecuencia){
  8054                           
  8055                           ;incstack = 0
  8056                           ; Regs used in _OSC_config: [wreg-fsr0h+status,2+status,0]
  8057  1692  2ECE               	goto	l2984
  8058  1693                     l2966:	
  8059                           
  8060                           ;main_Master.c: 164:             OSCCONbits.IRCF = 0b111;
  8061  1693  3070               	movlw	112
  8062  1694  1683               	bsf	3,5	;RP0=1, select bank1
  8063  1695  1303               	bcf	3,6	;RP1=0, select bank1
  8064  1696  048F               	iorwf	15,f	;volatile
  8065                           
  8066                           ;main_Master.c: 165:             break;
  8067  1697  0008               	return
  8068  1698                     l2968:	
  8069                           
  8070                           ;main_Master.c: 167:             OSCCONbits.IRCF = 0b110;
  8071  1698  1683               	bsf	3,5	;RP0=1, select bank1
  8072  1699  1303               	bcf	3,6	;RP1=0, select bank1
  8073  169A  080F               	movf	15,w	;volatile
  8074  169B  398F               	andlw	-113
  8075  169C  3860               	iorlw	96
  8076  169D  008F               	movwf	15	;volatile
  8077                           
  8078                           ;main_Master.c: 168:             break;
  8079  169E  0008               	return
  8080  169F                     l2970:	
  8081                           
  8082                           ;main_Master.c: 170:             OSCCONbits.IRCF = 0b101;
  8083  169F  1683               	bsf	3,5	;RP0=1, select bank1
  8084  16A0  1303               	bcf	3,6	;RP1=0, select bank1
  8085  16A1  080F               	movf	15,w	;volatile
  8086  16A2  398F               	andlw	-113
  8087  16A3  3850               	iorlw	80
  8088  16A4  008F               	movwf	15	;volatile
  8089                           
  8090                           ;main_Master.c: 171:             break;
  8091  16A5  0008               	return
  8092  16A6                     l2972:	
  8093                           
  8094                           ;main_Master.c: 173:             OSCCONbits.IRCF = 0b100;
  8095  16A6  1683               	bsf	3,5	;RP0=1, select bank1
  8096  16A7  1303               	bcf	3,6	;RP1=0, select bank1
  8097  16A8  080F               	movf	15,w	;volatile
  8098  16A9  398F               	andlw	-113
  8099  16AA  3840               	iorlw	64
  8100  16AB  008F               	movwf	15	;volatile
  8101                           
  8102                           ;main_Master.c: 174:             break;
  8103  16AC  0008               	return
  8104  16AD                     l2974:	
  8105                           
  8106                           ;main_Master.c: 176:             OSCCONbits.IRCF = 0b011;
  8107  16AD  1683               	bsf	3,5	;RP0=1, select bank1
  8108  16AE  1303               	bcf	3,6	;RP1=0, select bank1
  8109  16AF  080F               	movf	15,w	;volatile
  8110  16B0  398F               	andlw	-113
  8111  16B1  3830               	iorlw	48
  8112  16B2  008F               	movwf	15	;volatile
  8113                           
  8114                           ;main_Master.c: 177:             break;
  8115  16B3  0008               	return
  8116  16B4                     l2976:	
  8117                           
  8118                           ;main_Master.c: 179:             OSCCONbits.IRCF = 0b010;
  8119  16B4  1683               	bsf	3,5	;RP0=1, select bank1
  8120  16B5  1303               	bcf	3,6	;RP1=0, select bank1
  8121  16B6  080F               	movf	15,w	;volatile
  8122  16B7  398F               	andlw	-113
  8123  16B8  3820               	iorlw	32
  8124  16B9  008F               	movwf	15	;volatile
  8125                           
  8126                           ;main_Master.c: 180:             break;
  8127  16BA  0008               	return
  8128  16BB                     l2978:	
  8129                           
  8130                           ;main_Master.c: 182:             OSCCONbits.IRCF = 0b001;
  8131  16BB  1683               	bsf	3,5	;RP0=1, select bank1
  8132  16BC  1303               	bcf	3,6	;RP1=0, select bank1
  8133  16BD  080F               	movf	15,w	;volatile
  8134  16BE  398F               	andlw	-113
  8135  16BF  3810               	iorlw	16
  8136  16C0  008F               	movwf	15	;volatile
  8137                           
  8138                           ;main_Master.c: 183:             break;
  8139  16C1  0008               	return
  8140  16C2                     l2980:	
  8141                           
  8142                           ;main_Master.c: 185:             OSCCONbits.IRCF = 0b000;
  8143  16C2  308F               	movlw	-113
  8144  16C3  1683               	bsf	3,5	;RP0=1, select bank1
  8145  16C4  1303               	bcf	3,6	;RP1=0, select bank1
  8146  16C5  058F               	andwf	15,f	;volatile
  8147                           
  8148                           ;main_Master.c: 186:             break;
  8149  16C6  0008               	return
  8150  16C7                     l2982:	
  8151                           
  8152                           ;main_Master.c: 188:             OSCCONbits.IRCF = 0b110;
  8153  16C7  1683               	bsf	3,5	;RP0=1, select bank1
  8154  16C8  1303               	bcf	3,6	;RP1=0, select bank1
  8155  16C9  080F               	movf	15,w	;volatile
  8156  16CA  398F               	andlw	-113
  8157  16CB  3860               	iorlw	96
  8158  16CC  008F               	movwf	15	;volatile
  8159                           
  8160                           ;main_Master.c: 189:     }
  8161  16CD  0008               	return
  8162  16CE                     l2984:	
  8163                           
  8164                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 9 sub-sw
      +                          itches
  8165                           ; Switch size 1, requested type "simple"
  8166                           ; Number of cases is 1, Range of values is 0 to 0
  8167                           ; switch strategies available:
  8168                           ; Name         Instructions Cycles
  8169                           ; simple_byte            4     3 (average)
  8170                           ; direct_byte           11     8 (fixed)
  8171                           ; jumptable            260     6 (fixed)
  8172                           ;	Chosen strategy is simple_byte
  8173  16CE  0875               	movf	OSC_config@frecuencia+3,w
  8174  16CF  3A00               	xorlw	0	; case 0
  8175  16D0  1903               	skipnz
  8176  16D1  2F23               	goto	l5514
  8177  16D2  2EC7               	goto	l2982
  8178  16D3                     l5498:	
  8179                           
  8180                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8181                           ; Switch size 1, requested type "simple"
  8182                           ; Number of cases is 1, Range of values is 125 to 125
  8183                           ; switch strategies available:
  8184                           ; Name         Instructions Cycles
  8185                           ; simple_byte            4     3 (average)
  8186                           ; direct_byte           14    11 (fixed)
  8187                           ; jumptable            263     9 (fixed)
  8188                           ;	Chosen strategy is simple_byte
  8189  16D3  0873               	movf	OSC_config@frecuencia+1,w
  8190  16D4  3A7D               	xorlw	125	; case 125
  8191  16D5  1903               	skipnz
  8192  16D6  2ED8               	goto	l5516
  8193  16D7  2EC7               	goto	l2982
  8194  16D8                     l5516:	
  8195                           
  8196                           ; Switch size 1, requested type "simple"
  8197                           ; Number of cases is 1, Range of values is 0 to 0
  8198                           ; switch strategies available:
  8199                           ; Name         Instructions Cycles
  8200                           ; simple_byte            4     3 (average)
  8201                           ; direct_byte           11     8 (fixed)
  8202                           ; jumptable            260     6 (fixed)
  8203                           ;	Chosen strategy is simple_byte
  8204  16D8  0872               	movf	OSC_config@frecuencia,w
  8205  16D9  3A00               	xorlw	0	; case 0
  8206  16DA  1903               	skipnz
  8207  16DB  2EC2               	goto	l2980
  8208  16DC  2EC7               	goto	l2982
  8209  16DD                     l5500:	
  8210                           
  8211                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8212                           ; Switch size 1, requested type "simple"
  8213                           ; Number of cases is 1, Range of values is 232 to 232
  8214                           ; switch strategies available:
  8215                           ; Name         Instructions Cycles
  8216                           ; simple_byte            4     3 (average)
  8217                           ; direct_byte           14    11 (fixed)
  8218                           ; jumptable            263     9 (fixed)
  8219                           ;	Chosen strategy is simple_byte
  8220  16DD  0873               	movf	OSC_config@frecuencia+1,w
  8221  16DE  3AE8               	xorlw	232	; case 232
  8222  16DF  1903               	skipnz
  8223  16E0  2EE2               	goto	l5518
  8224  16E1  2EC7               	goto	l2982
  8225  16E2                     l5518:	
  8226                           
  8227                           ; Switch size 1, requested type "simple"
  8228                           ; Number of cases is 1, Range of values is 72 to 72
  8229                           ; switch strategies available:
  8230                           ; Name         Instructions Cycles
  8231                           ; simple_byte            4     3 (average)
  8232                           ; direct_byte           14    11 (fixed)
  8233                           ; jumptable            263     9 (fixed)
  8234                           ;	Chosen strategy is simple_byte
  8235  16E2  0872               	movf	OSC_config@frecuencia,w
  8236  16E3  3A48               	xorlw	72	; case 72
  8237  16E4  1903               	skipnz
  8238  16E5  2EBB               	goto	l2978
  8239  16E6  2EC7               	goto	l2982
  8240  16E7                     l5502:	
  8241                           
  8242                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8243                           ; Switch size 1, requested type "simple"
  8244                           ; Number of cases is 1, Range of values is 208 to 208
  8245                           ; switch strategies available:
  8246                           ; Name         Instructions Cycles
  8247                           ; simple_byte            4     3 (average)
  8248                           ; direct_byte           14    11 (fixed)
  8249                           ; jumptable            263     9 (fixed)
  8250                           ;	Chosen strategy is simple_byte
  8251  16E7  0873               	movf	OSC_config@frecuencia+1,w
  8252  16E8  3AD0               	xorlw	208	; case 208
  8253  16E9  1903               	skipnz
  8254  16EA  2EEC               	goto	l5520
  8255  16EB  2EC7               	goto	l2982
  8256  16EC                     l5520:	
  8257                           
  8258                           ; Switch size 1, requested type "simple"
  8259                           ; Number of cases is 1, Range of values is 144 to 144
  8260                           ; switch strategies available:
  8261                           ; Name         Instructions Cycles
  8262                           ; simple_byte            4     3 (average)
  8263                           ; direct_byte           14    11 (fixed)
  8264                           ; jumptable            263     9 (fixed)
  8265                           ;	Chosen strategy is simple_byte
  8266  16EC  0872               	movf	OSC_config@frecuencia,w
  8267  16ED  3A90               	xorlw	144	; case 144
  8268  16EE  1903               	skipnz
  8269  16EF  2EB4               	goto	l2976
  8270  16F0  2EC7               	goto	l2982
  8271  16F1                     l5504:	
  8272                           
  8273                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8274                           ; Switch size 1, requested type "simple"
  8275                           ; Number of cases is 1, Range of values is 161 to 161
  8276                           ; switch strategies available:
  8277                           ; Name         Instructions Cycles
  8278                           ; simple_byte            4     3 (average)
  8279                           ; direct_byte           14    11 (fixed)
  8280                           ; jumptable            263     9 (fixed)
  8281                           ;	Chosen strategy is simple_byte
  8282  16F1  0873               	movf	OSC_config@frecuencia+1,w
  8283  16F2  3AA1               	xorlw	161	; case 161
  8284  16F3  1903               	skipnz
  8285  16F4  2EF6               	goto	l5522
  8286  16F5  2EC7               	goto	l2982
  8287  16F6                     l5522:	
  8288                           
  8289                           ; Switch size 1, requested type "simple"
  8290                           ; Number of cases is 1, Range of values is 32 to 32
  8291                           ; switch strategies available:
  8292                           ; Name         Instructions Cycles
  8293                           ; simple_byte            4     3 (average)
  8294                           ; direct_byte           14    11 (fixed)
  8295                           ; jumptable            263     9 (fixed)
  8296                           ;	Chosen strategy is simple_byte
  8297  16F6  0872               	movf	OSC_config@frecuencia,w
  8298  16F7  3A20               	xorlw	32	; case 32
  8299  16F8  1903               	skipnz
  8300  16F9  2EAD               	goto	l2974
  8301  16FA  2EC7               	goto	l2982
  8302  16FB                     l5506:	
  8303                           
  8304                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8305                           ; Switch size 1, requested type "simple"
  8306                           ; Number of cases is 1, Range of values is 66 to 66
  8307                           ; switch strategies available:
  8308                           ; Name         Instructions Cycles
  8309                           ; simple_byte            4     3 (average)
  8310                           ; direct_byte           14    11 (fixed)
  8311                           ; jumptable            263     9 (fixed)
  8312                           ;	Chosen strategy is simple_byte
  8313  16FB  0873               	movf	OSC_config@frecuencia+1,w
  8314  16FC  3A42               	xorlw	66	; case 66
  8315  16FD  1903               	skipnz
  8316  16FE  2F00               	goto	l5524
  8317  16FF  2EC7               	goto	l2982
  8318  1700                     l5524:	
  8319                           
  8320                           ; Switch size 1, requested type "simple"
  8321                           ; Number of cases is 1, Range of values is 64 to 64
  8322                           ; switch strategies available:
  8323                           ; Name         Instructions Cycles
  8324                           ; simple_byte            4     3 (average)
  8325                           ; direct_byte           14    11 (fixed)
  8326                           ; jumptable            263     9 (fixed)
  8327                           ;	Chosen strategy is simple_byte
  8328  1700  0872               	movf	OSC_config@frecuencia,w
  8329  1701  3A40               	xorlw	64	; case 64
  8330  1702  1903               	skipnz
  8331  1703  2EA6               	goto	l2972
  8332  1704  2EC7               	goto	l2982
  8333  1705                     l5508:	
  8334                           
  8335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8336                           ; Switch size 1, requested type "simple"
  8337                           ; Number of cases is 1, Range of values is 132 to 132
  8338                           ; switch strategies available:
  8339                           ; Name         Instructions Cycles
  8340                           ; simple_byte            4     3 (average)
  8341                           ; direct_byte           14    11 (fixed)
  8342                           ; jumptable            263     9 (fixed)
  8343                           ;	Chosen strategy is simple_byte
  8344  1705  0873               	movf	OSC_config@frecuencia+1,w
  8345  1706  3A84               	xorlw	132	; case 132
  8346  1707  1903               	skipnz
  8347  1708  2F0A               	goto	l5526
  8348  1709  2EC7               	goto	l2982
  8349  170A                     l5526:	
  8350                           
  8351                           ; Switch size 1, requested type "simple"
  8352                           ; Number of cases is 1, Range of values is 128 to 128
  8353                           ; switch strategies available:
  8354                           ; Name         Instructions Cycles
  8355                           ; simple_byte            4     3 (average)
  8356                           ; direct_byte           14    11 (fixed)
  8357                           ; jumptable            263     9 (fixed)
  8358                           ;	Chosen strategy is simple_byte
  8359  170A  0872               	movf	OSC_config@frecuencia,w
  8360  170B  3A80               	xorlw	128	; case 128
  8361  170C  1903               	skipnz
  8362  170D  2E9F               	goto	l2970
  8363  170E  2EC7               	goto	l2982
  8364  170F                     l5510:	
  8365                           
  8366                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8367                           ; Switch size 1, requested type "simple"
  8368                           ; Number of cases is 1, Range of values is 9 to 9
  8369                           ; switch strategies available:
  8370                           ; Name         Instructions Cycles
  8371                           ; simple_byte            4     3 (average)
  8372                           ; direct_byte           14    11 (fixed)
  8373                           ; jumptable            263     9 (fixed)
  8374                           ;	Chosen strategy is simple_byte
  8375  170F  0873               	movf	OSC_config@frecuencia+1,w
  8376  1710  3A09               	xorlw	9	; case 9
  8377  1711  1903               	skipnz
  8378  1712  2F14               	goto	l5528
  8379  1713  2EC7               	goto	l2982
  8380  1714                     l5528:	
  8381                           
  8382                           ; Switch size 1, requested type "simple"
  8383                           ; Number of cases is 1, Range of values is 0 to 0
  8384                           ; switch strategies available:
  8385                           ; Name         Instructions Cycles
  8386                           ; simple_byte            4     3 (average)
  8387                           ; direct_byte           11     8 (fixed)
  8388                           ; jumptable            260     6 (fixed)
  8389                           ;	Chosen strategy is simple_byte
  8390  1714  0872               	movf	OSC_config@frecuencia,w
  8391  1715  3A00               	xorlw	0	; case 0
  8392  1716  1903               	skipnz
  8393  1717  2E98               	goto	l2968
  8394  1718  2EC7               	goto	l2982
  8395  1719                     l5512:	
  8396                           
  8397                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8398                           ; Switch size 1, requested type "simple"
  8399                           ; Number of cases is 1, Range of values is 18 to 18
  8400                           ; switch strategies available:
  8401                           ; Name         Instructions Cycles
  8402                           ; simple_byte            4     3 (average)
  8403                           ; direct_byte           14    11 (fixed)
  8404                           ; jumptable            263     9 (fixed)
  8405                           ;	Chosen strategy is simple_byte
  8406  1719  0873               	movf	OSC_config@frecuencia+1,w
  8407  171A  3A12               	xorlw	18	; case 18
  8408  171B  1903               	skipnz
  8409  171C  2F1E               	goto	l5530
  8410  171D  2EC7               	goto	l2982
  8411  171E                     l5530:	
  8412                           
  8413                           ; Switch size 1, requested type "simple"
  8414                           ; Number of cases is 1, Range of values is 0 to 0
  8415                           ; switch strategies available:
  8416                           ; Name         Instructions Cycles
  8417                           ; simple_byte            4     3 (average)
  8418                           ; direct_byte           11     8 (fixed)
  8419                           ; jumptable            260     6 (fixed)
  8420                           ;	Chosen strategy is simple_byte
  8421  171E  0872               	movf	OSC_config@frecuencia,w
  8422  171F  3A00               	xorlw	0	; case 0
  8423  1720  1903               	skipnz
  8424  1721  2E93               	goto	l2966
  8425  1722  2EC7               	goto	l2982
  8426  1723                     l5514:	
  8427                           
  8428                           ; Switch size 1, requested type "simple"
  8429                           ; Number of cases is 8, Range of values is 0 to 122
  8430                           ; switch strategies available:
  8431                           ; Name         Instructions Cycles
  8432                           ; simple_byte           25    13 (average)
  8433                           ; jumptable            260     6 (fixed)
  8434                           ;	Chosen strategy is simple_byte
  8435  1723  0874               	movf	OSC_config@frecuencia+2,w
  8436  1724  3A00               	xorlw	0	; case 0
  8437  1725  1903               	skipnz
  8438  1726  2ED3               	goto	l5498
  8439  1727  3A01               	xorlw	1	; case 1
  8440  1728  1903               	skipnz
  8441  1729  2EDD               	goto	l5500
  8442  172A  3A02               	xorlw	2	; case 3
  8443  172B  1903               	skipnz
  8444  172C  2EE7               	goto	l5502
  8445  172D  3A04               	xorlw	4	; case 7
  8446  172E  1903               	skipnz
  8447  172F  2EF1               	goto	l5504
  8448  1730  3A08               	xorlw	8	; case 15
  8449  1731  1903               	skipnz
  8450  1732  2EFB               	goto	l5506
  8451  1733  3A11               	xorlw	17	; case 30
  8452  1734  1903               	skipnz
  8453  1735  2F05               	goto	l5508
  8454  1736  3A23               	xorlw	35	; case 61
  8455  1737  1903               	skipnz
  8456  1738  2F0F               	goto	l5510
  8457  1739  3A47               	xorlw	71	; case 122
  8458  173A  1903               	skipnz
  8459  173B  2F19               	goto	l5512
  8460  173C  2EC7               	goto	l2982
  8461  173D  0008               	return
  8462  173E                     __end_of_OSC_config:	
  8463                           
  8464                           	psect	text30
  8465  1439                     __ptext30:	
  8466 ;; *************** function _LCD_init *****************
  8467 ;; Defined at:
  8468 ;;		line 44 in file "LCD_8bits.c"
  8469 ;; Parameters:    Size  Location     Type
  8470 ;;		None
  8471 ;; Auto vars:     Size  Location     Type
  8472 ;;		None
  8473 ;; Return value:  Size  Location     Type
  8474 ;;                  1    wreg      void 
  8475 ;; Registers used:
  8476 ;;		wreg, status,2, status,0, pclath, cstack
  8477 ;; Tracked objects:
  8478 ;;		On entry : 0/0
  8479 ;;		On exit  : 0/0
  8480 ;;		Unchanged: 0/0
  8481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8482 ;;      Params:         0       0       0       0       0
  8483 ;;      Locals:         0       0       0       0       0
  8484 ;;      Temps:          2       0       0       0       0
  8485 ;;      Totals:         2       0       0       0       0
  8486 ;;Total ram usage:        2 bytes
  8487 ;; Hardware stack levels used:    1
  8488 ;; Hardware stack levels required when called:    2
  8489 ;; This function calls:
  8490 ;;		_LCD_Cmd
  8491 ;; This function is called by:
  8492 ;;		_SetUp
  8493 ;; This function uses a non-reentrant model
  8494 ;;
  8495                           
  8496                           
  8497                           ;psect for function _LCD_init
  8498  1439                     _LCD_init:	
  8499                           
  8500                           ;LCD_8bits.c: 45:     _delay((unsigned long)((20)*(8000000/4000.0)));
  8501                           
  8502                           ;incstack = 0
  8503                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  8504  1439  3034               	movlw	52
  8505  143A  00F6               	movwf	??_LCD_init+1
  8506  143B  30F1               	movlw	241
  8507  143C  00F5               	movwf	??_LCD_init
  8508  143D                     u4837:	
  8509  143D  0BF5               	decfsz	??_LCD_init,f
  8510  143E  2C3D               	goto	u4837
  8511  143F  0BF6               	decfsz	??_LCD_init+1,f
  8512  1440  2C3D               	goto	u4837
  8513  1441  2C42               	nop2
  8514                           
  8515                           ;LCD_8bits.c: 46:     LCD_Cmd(0x30);
  8516  1442  3030               	movlw	48
  8517  1443  160A  118A  22CA  160A  118A  	fcall	_LCD_Cmd
  8518                           
  8519                           ;LCD_8bits.c: 47:     _delay((unsigned long)((5)*(8000000/4000.0)));
  8520  1448  300D               	movlw	13
  8521  1449  00F6               	movwf	??_LCD_init+1
  8522  144A  30FB               	movlw	251
  8523  144B  00F5               	movwf	??_LCD_init
  8524  144C                     u4847:	
  8525  144C  0BF5               	decfsz	??_LCD_init,f
  8526  144D  2C4C               	goto	u4847
  8527  144E  0BF6               	decfsz	??_LCD_init+1,f
  8528  144F  2C4C               	goto	u4847
  8529  1450  2C51               	nop2
  8530                           
  8531                           ;LCD_8bits.c: 48:     LCD_Cmd(0x30);
  8532  1451  3030               	movlw	48
  8533  1452  160A  118A  22CA  160A  118A  	fcall	_LCD_Cmd
  8534                           
  8535                           ;LCD_8bits.c: 49:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  8536  1457  3042               	movlw	66
  8537  1458  00F5               	movwf	??_LCD_init
  8538  1459                     u4857:	
  8539  1459  0BF5               	decfsz	??_LCD_init,f
  8540  145A  2C59               	goto	u4857
  8541  145B  0000               	nop
  8542                           
  8543                           ;LCD_8bits.c: 50:     LCD_Cmd(0x30);
  8544  145C  3030               	movlw	48
  8545  145D  160A  118A  22CA  160A  118A  	fcall	_LCD_Cmd
  8546                           
  8547                           ;LCD_8bits.c: 51:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  8548  1462  3042               	movlw	66
  8549  1463  00F5               	movwf	??_LCD_init
  8550  1464                     u4867:	
  8551  1464  0BF5               	decfsz	??_LCD_init,f
  8552  1465  2C64               	goto	u4867
  8553  1466  0000               	nop
  8554                           
  8555                           ;LCD_8bits.c: 52:     LCD_Cmd(0x38);
  8556  1467  3038               	movlw	56
  8557  1468  160A  118A  22CA  160A  118A  	fcall	_LCD_Cmd
  8558                           
  8559                           ;LCD_8bits.c: 53:     _delay((unsigned long)((53)*(8000000/4000000.0)));
  8560  146D  3023               	movlw	35
  8561  146E  00F5               	movwf	??_LCD_init
  8562  146F                     u4877:	
  8563  146F  0BF5               	decfsz	??_LCD_init,f
  8564  1470  2C6F               	goto	u4877
  8565                           
  8566                           ;LCD_8bits.c: 54:     LCD_Cmd(0x08);
  8567  1471  3008               	movlw	8
  8568  1472  160A  118A  22CA  160A  118A  	fcall	_LCD_Cmd
  8569                           
  8570                           ;LCD_8bits.c: 55:     _delay((unsigned long)((53)*(8000000/4000000.0)));
  8571  1477  3023               	movlw	35
  8572  1478  00F5               	movwf	??_LCD_init
  8573  1479                     u4887:	
  8574  1479  0BF5               	decfsz	??_LCD_init,f
  8575  147A  2C79               	goto	u4887
  8576                           
  8577                           ;LCD_8bits.c: 56:     LCD_Cmd(0x01);
  8578  147B  3001               	movlw	1
  8579  147C  160A  118A  22CA  160A  118A  	fcall	_LCD_Cmd
  8580                           
  8581                           ;LCD_8bits.c: 57:     _delay((unsigned long)((3)*(8000000/4000.0)));
  8582  1481  3008               	movlw	8
  8583  1482  00F6               	movwf	??_LCD_init+1
  8584  1483  30C9               	movlw	201
  8585  1484  00F5               	movwf	??_LCD_init
  8586  1485                     u4897:	
  8587  1485  0BF5               	decfsz	??_LCD_init,f
  8588  1486  2C85               	goto	u4897
  8589  1487  0BF6               	decfsz	??_LCD_init+1,f
  8590  1488  2C85               	goto	u4897
  8591  1489  2C8A               	nop2
  8592                           
  8593                           ;LCD_8bits.c: 58:     LCD_Cmd(0x06);
  8594  148A  3006               	movlw	6
  8595  148B  160A  118A  22CA  160A  118A  	fcall	_LCD_Cmd
  8596                           
  8597                           ;LCD_8bits.c: 59:     _delay((unsigned long)((53)*(8000000/4000000.0)));
  8598  1490  3023               	movlw	35
  8599  1491  00F5               	movwf	??_LCD_init
  8600  1492                     u4907:	
  8601  1492  0BF5               	decfsz	??_LCD_init,f
  8602  1493  2C92               	goto	u4907
  8603                           
  8604                           ;LCD_8bits.c: 60:     LCD_Cmd(0x0C);
  8605  1494  300C               	movlw	12
  8606  1495  160A  118A  22CA  160A  118A  	fcall	_LCD_Cmd
  8607                           
  8608                           ;LCD_8bits.c: 61:     _delay((unsigned long)((53)*(8000000/4000000.0)));
  8609  149A  3023               	movlw	35
  8610  149B  00F5               	movwf	??_LCD_init
  8611  149C                     u4917:	
  8612  149C  0BF5               	decfsz	??_LCD_init,f
  8613  149D  2C9C               	goto	u4917
  8614  149E  0008               	return
  8615  149F                     __end_of_LCD_init:	
  8616                           
  8617                           	psect	text31
  8618  11A6                     __ptext31:	
  8619 ;; *************** function _LCD_clear *****************
  8620 ;; Defined at:
  8621 ;;		line 32 in file "LCD_8bits.c"
  8622 ;; Parameters:    Size  Location     Type
  8623 ;;		None
  8624 ;; Auto vars:     Size  Location     Type
  8625 ;;		None
  8626 ;; Return value:  Size  Location     Type
  8627 ;;                  1    wreg      void 
  8628 ;; Registers used:
  8629 ;;		wreg, status,2, status,0, pclath, cstack
  8630 ;; Tracked objects:
  8631 ;;		On entry : 0/0
  8632 ;;		On exit  : 0/0
  8633 ;;		Unchanged: 0/0
  8634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8635 ;;      Params:         0       0       0       0       0
  8636 ;;      Locals:         0       0       0       0       0
  8637 ;;      Temps:          2       0       0       0       0
  8638 ;;      Totals:         2       0       0       0       0
  8639 ;;Total ram usage:        2 bytes
  8640 ;; Hardware stack levels used:    1
  8641 ;; Hardware stack levels required when called:    2
  8642 ;; This function calls:
  8643 ;;		_LCD_Cmd
  8644 ;; This function is called by:
  8645 ;;		_SetUp
  8646 ;;		_mostrarLCD
  8647 ;;		_pressBoton1
  8648 ;;		_pressBoton2
  8649 ;; This function uses a non-reentrant model
  8650 ;;
  8651                           
  8652                           
  8653                           ;psect for function _LCD_clear
  8654  11A6                     _LCD_clear:	
  8655                           
  8656                           ;LCD_8bits.c: 33:     LCD_Cmd(0x00);
  8657                           
  8658                           ;incstack = 0
  8659                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  8660  11A6  3000               	movlw	0
  8661  11A7  160A  118A  22CA  160A  118A  	fcall	_LCD_Cmd
  8662                           
  8663                           ;LCD_8bits.c: 34:     LCD_Cmd(0x01);
  8664  11AC  3001               	movlw	1
  8665  11AD  160A  118A  22CA  160A  118A  	fcall	_LCD_Cmd
  8666                           
  8667                           ;LCD_8bits.c: 35:     _delay((unsigned long)((4)*(8000000/4000.0)));
  8668  11B2  300B               	movlw	11
  8669  11B3  00F6               	movwf	??_LCD_clear+1
  8670  11B4  3062               	movlw	98
  8671  11B5  00F5               	movwf	??_LCD_clear
  8672  11B6                     u4927:	
  8673  11B6  0BF5               	decfsz	??_LCD_clear,f
  8674  11B7  29B6               	goto	u4927
  8675  11B8  0BF6               	decfsz	??_LCD_clear+1,f
  8676  11B9  29B6               	goto	u4927
  8677  11BA  0000               	nop
  8678  11BB  0008               	return
  8679  11BC                     __end_of_LCD_clear:	
  8680                           
  8681                           	psect	text32
  8682  1215                     __ptext32:	
  8683 ;; *************** function _LCD_Create_Char *****************
  8684 ;; Defined at:
  8685 ;;		line 116 in file "LCD_8bits.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;  charnum         1    wreg     unsigned char 
  8688 ;;  chardata        1    5[COMMON] PTR const unsigned char 
  8689 ;;		 -> arrowr_vacio(8), gota(8), termometro(8), arrowr(8), 
  8690 ;;		 -> atilde(8), 
  8691 ;; Auto vars:     Size  Location     Type
  8692 ;;  charnum         1    7[COMMON] unsigned char 
  8693 ;;  n               1    8[COMMON] unsigned char 
  8694 ;; Return value:  Size  Location     Type
  8695 ;;                  1    wreg      void 
  8696 ;; Registers used:
  8697 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8698 ;; Tracked objects:
  8699 ;;		On entry : 0/0
  8700 ;;		On exit  : 0/0
  8701 ;;		Unchanged: 0/0
  8702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8703 ;;      Params:         1       0       0       0       0
  8704 ;;      Locals:         2       0       0       0       0
  8705 ;;      Temps:          1       0       0       0       0
  8706 ;;      Totals:         4       0       0       0       0
  8707 ;;Total ram usage:        4 bytes
  8708 ;; Hardware stack levels used:    1
  8709 ;; Hardware stack levels required when called:    2
  8710 ;; This function calls:
  8711 ;;		_LCD_Cmd
  8712 ;;		_LCD_Write_Character
  8713 ;; This function is called by:
  8714 ;;		_SetUp
  8715 ;; This function uses a non-reentrant model
  8716 ;;
  8717                           
  8718                           
  8719                           ;psect for function _LCD_Create_Char
  8720  1215                     _LCD_Create_Char:	
  8721                           
  8722                           ;incstack = 0
  8723                           ; Regs used in _LCD_Create_Char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8724                           ;LCD_Create_Char@charnum stored from wreg
  8725  1215  00F7               	movwf	LCD_Create_Char@charnum
  8726                           
  8727                           ;LCD_8bits.c: 117:  uint8_t n;;LCD_8bits.c: 118:  charnum &= 0x07;
  8728  1216  3007               	movlw	7
  8729  1217  00F6               	movwf	??_LCD_Create_Char
  8730  1218  0876               	movf	??_LCD_Create_Char,w
  8731  1219  05F7               	andwf	LCD_Create_Char@charnum,f
  8732                           
  8733                           ;LCD_8bits.c: 119:  LCD_Cmd(0x40 | (charnum << 3));
  8734  121A  0877               	movf	LCD_Create_Char@charnum,w
  8735  121B  00F6               	movwf	??_LCD_Create_Char
  8736  121C  3002               	movlw	2
  8737  121D                     u2435:	
  8738  121D  1003               	clrc
  8739  121E  0DF6               	rlf	??_LCD_Create_Char,f
  8740  121F  3EFF               	addlw	-1
  8741  1220  1D03               	skipz
  8742  1221  2A1D               	goto	u2435
  8743  1222  1003               	clrc
  8744  1223  0D76               	rlf	??_LCD_Create_Char,w
  8745  1224  3840               	iorlw	64
  8746  1225  160A  118A  22CA  160A  118A  	fcall	_LCD_Cmd
  8747                           
  8748                           ;LCD_8bits.c: 120:  for (n = 0; n < 8; n++)
  8749  122A  01F8               	clrf	LCD_Create_Char@n
  8750  122B                     l3088:	
  8751                           
  8752                           ;LCD_8bits.c: 121:   LCD_Write_Character(chardata[n]);
  8753  122B  0878               	movf	LCD_Create_Char@n,w
  8754  122C  0775               	addwf	LCD_Create_Char@chardata,w
  8755  122D  0084               	movwf	4
  8756  122E  160A  118A  2000  160A  118A  	fcall	stringdir
  8757  1233  160A  118A  2161  160A  118A  	fcall	_LCD_Write_Character
  8758  1238  3001               	movlw	1
  8759  1239  00F6               	movwf	??_LCD_Create_Char
  8760  123A  0876               	movf	??_LCD_Create_Char,w
  8761  123B  07F8               	addwf	LCD_Create_Char@n,f
  8762  123C  3008               	movlw	8
  8763  123D  0278               	subwf	LCD_Create_Char@n,w
  8764  123E  1803               	btfsc	3,0
  8765  123F  0008               	return
  8766  1240  2A2B               	goto	l3088
  8767  1241                     __end_of_LCD_Create_Char:	
  8768                           
  8769                           	psect	text33
  8770  1161                     __ptext33:	
  8771 ;; *************** function _LCD_Write_Character *****************
  8772 ;; Defined at:
  8773 ;;		line 64 in file "LCD_8bits.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;  caracter        1    wreg     unsigned char 
  8776 ;; Auto vars:     Size  Location     Type
  8777 ;;  caracter        1    3[COMMON] unsigned char 
  8778 ;; Return value:  Size  Location     Type
  8779 ;;                  1    wreg      void 
  8780 ;; Registers used:
  8781 ;;		wreg
  8782 ;; Tracked objects:
  8783 ;;		On entry : 0/0
  8784 ;;		On exit  : 0/0
  8785 ;;		Unchanged: 0/0
  8786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8787 ;;      Params:         0       0       0       0       0
  8788 ;;      Locals:         1       0       0       0       0
  8789 ;;      Temps:          1       0       0       0       0
  8790 ;;      Totals:         2       0       0       0       0
  8791 ;;Total ram usage:        2 bytes
  8792 ;; Hardware stack levels used:    1
  8793 ;; Hardware stack levels required when called:    1
  8794 ;; This function calls:
  8795 ;;		Nothing
  8796 ;; This function is called by:
  8797 ;;		_display_Uhrzeit
  8798 ;;		_display_Datum
  8799 ;;		_mostrarLCD
  8800 ;;		_pressBoton2
  8801 ;;		_LCD_Write_String
  8802 ;;		_LCD_Create_Char
  8803 ;; This function uses a non-reentrant model
  8804 ;;
  8805                           
  8806                           
  8807                           ;psect for function _LCD_Write_Character
  8808  1161                     _LCD_Write_Character:	
  8809                           
  8810                           ;incstack = 0
  8811                           ; Regs used in _LCD_Write_Character: [wreg]
  8812                           ;LCD_Write_Character@caracter stored from wreg
  8813  1161  00F3               	movwf	LCD_Write_Character@caracter
  8814                           
  8815                           ;LCD_8bits.c: 65:     PORTCbits.RC0 = 1;
  8816  1162  1283               	bcf	3,5	;RP0=0, select bank0
  8817  1163  1303               	bcf	3,6	;RP1=0, select bank0
  8818  1164  1407               	bsf	7,0	;volatile
  8819                           
  8820                           ;LCD_8bits.c: 67:     PORTD = caracter;
  8821  1165  0873               	movf	LCD_Write_Character@caracter,w
  8822  1166  0088               	movwf	8	;volatile
  8823                           
  8824                           ;LCD_8bits.c: 68:     PORTCbits.RC1 = 1;
  8825  1167  1487               	bsf	7,1	;volatile
  8826                           
  8827                           ;LCD_8bits.c: 69:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  8828  1168  301A               	movlw	26
  8829  1169  00F2               	movwf	??_LCD_Write_Character
  8830  116A                     u4937:	
  8831  116A  0BF2               	decfsz	??_LCD_Write_Character,f
  8832  116B  296A               	goto	u4937
  8833  116C  0000               	nop
  8834                           
  8835                           ;LCD_8bits.c: 70:     PORTCbits.RC1 = 0;
  8836  116D  1283               	bcf	3,5	;RP0=0, select bank0
  8837  116E  1303               	bcf	3,6	;RP1=0, select bank0
  8838  116F  1087               	bcf	7,1	;volatile
  8839  1170  0008               	return
  8840  1171                     __end_of_LCD_Write_Character:	
  8841                           
  8842                           	psect	text34
  8843  12CA                     __ptext34:	
  8844 ;; *************** function _LCD_Cmd *****************
  8845 ;; Defined at:
  8846 ;;		line 21 in file "LCD_8bits.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;  comando         1    wreg     unsigned char 
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;  comando         1    4[COMMON] unsigned char 
  8851 ;; Return value:  Size  Location     Type
  8852 ;;                  1    wreg      void 
  8853 ;; Registers used:
  8854 ;;		wreg
  8855 ;; Tracked objects:
  8856 ;;		On entry : 0/0
  8857 ;;		On exit  : 0/0
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8860 ;;      Params:         0       0       0       0       0
  8861 ;;      Locals:         1       0       0       0       0
  8862 ;;      Temps:          2       0       0       0       0
  8863 ;;      Totals:         3       0       0       0       0
  8864 ;;Total ram usage:        3 bytes
  8865 ;; Hardware stack levels used:    1
  8866 ;; Hardware stack levels required when called:    1
  8867 ;; This function calls:
  8868 ;;		Nothing
  8869 ;; This function is called by:
  8870 ;;		_LCD_clear
  8871 ;;		_LCD_init
  8872 ;;		_LCD_Set_Cursor
  8873 ;;		_LCD_Create_Char
  8874 ;;		_LCD_home
  8875 ;;		_LCD_Shift_links
  8876 ;;		_LCD_Shift_rechts
  8877 ;;		_LCD_Cursor_rechts
  8878 ;;		_LCD_Cursor_links
  8879 ;; This function uses a non-reentrant model
  8880 ;;
  8881                           
  8882                           
  8883                           ;psect for function _LCD_Cmd
  8884  12CA                     _LCD_Cmd:	
  8885                           
  8886                           ;incstack = 0
  8887                           ; Regs used in _LCD_Cmd: [wreg]
  8888                           ;LCD_Cmd@comando stored from wreg
  8889  12CA  00F4               	movwf	LCD_Cmd@comando
  8890                           
  8891                           ;LCD_8bits.c: 22:     PORTCbits.RC0 = 0;
  8892  12CB  1283               	bcf	3,5	;RP0=0, select bank0
  8893  12CC  1303               	bcf	3,6	;RP1=0, select bank0
  8894  12CD  1007               	bcf	7,0	;volatile
  8895                           
  8896                           ;LCD_8bits.c: 23:     _delay((unsigned long)((5)*(8000000/4000.0)));
  8897  12CE  300D               	movlw	13
  8898  12CF  00F3               	movwf	??_LCD_Cmd+1
  8899  12D0  30FB               	movlw	251
  8900  12D1  00F2               	movwf	??_LCD_Cmd
  8901  12D2                     u4947:	
  8902  12D2  0BF2               	decfsz	??_LCD_Cmd,f
  8903  12D3  2AD2               	goto	u4947
  8904  12D4  0BF3               	decfsz	??_LCD_Cmd+1,f
  8905  12D5  2AD2               	goto	u4947
  8906  12D6  2AD7               	nop2
  8907                           
  8908                           ;LCD_8bits.c: 24:     PORTCbits.RC1 = 1;
  8909  12D7  1283               	bcf	3,5	;RP0=0, select bank0
  8910  12D8  1303               	bcf	3,6	;RP1=0, select bank0
  8911  12D9  1487               	bsf	7,1	;volatile
  8912                           
  8913                           ;LCD_8bits.c: 25:     _delay((unsigned long)((5)*(8000000/4000.0)));
  8914  12DA  300D               	movlw	13
  8915  12DB  00F3               	movwf	??_LCD_Cmd+1
  8916  12DC  30FB               	movlw	251
  8917  12DD  00F2               	movwf	??_LCD_Cmd
  8918  12DE                     u4957:	
  8919  12DE  0BF2               	decfsz	??_LCD_Cmd,f
  8920  12DF  2ADE               	goto	u4957
  8921  12E0  0BF3               	decfsz	??_LCD_Cmd+1,f
  8922  12E1  2ADE               	goto	u4957
  8923  12E2  2AE3               	nop2
  8924                           
  8925                           ;LCD_8bits.c: 26:     PORTD = comando;
  8926  12E3  0874               	movf	LCD_Cmd@comando,w
  8927  12E4  1283               	bcf	3,5	;RP0=0, select bank0
  8928  12E5  1303               	bcf	3,6	;RP1=0, select bank0
  8929  12E6  0088               	movwf	8	;volatile
  8930                           
  8931                           ;LCD_8bits.c: 27:     _delay((unsigned long)((5)*(8000000/4000.0)));
  8932  12E7  300D               	movlw	13
  8933  12E8  00F3               	movwf	??_LCD_Cmd+1
  8934  12E9  30FB               	movlw	251
  8935  12EA  00F2               	movwf	??_LCD_Cmd
  8936  12EB                     u4967:	
  8937  12EB  0BF2               	decfsz	??_LCD_Cmd,f
  8938  12EC  2AEB               	goto	u4967
  8939  12ED  0BF3               	decfsz	??_LCD_Cmd+1,f
  8940  12EE  2AEB               	goto	u4967
  8941  12EF  2AF0               	nop2
  8942                           
  8943                           ;LCD_8bits.c: 28:     PORTCbits.RC1 = 0;
  8944  12F0  1283               	bcf	3,5	;RP0=0, select bank0
  8945  12F1  1303               	bcf	3,6	;RP1=0, select bank0
  8946  12F2  1087               	bcf	7,1	;volatile
  8947                           
  8948                           ;LCD_8bits.c: 29:     _delay((unsigned long)((5)*(8000000/4000.0)));
  8949  12F3  300D               	movlw	13
  8950  12F4  00F3               	movwf	??_LCD_Cmd+1
  8951  12F5  30FB               	movlw	251
  8952  12F6  00F2               	movwf	??_LCD_Cmd
  8953  12F7                     u4977:	
  8954  12F7  0BF2               	decfsz	??_LCD_Cmd,f
  8955  12F8  2AF7               	goto	u4977
  8956  12F9  0BF3               	decfsz	??_LCD_Cmd+1,f
  8957  12FA  2AF7               	goto	u4977
  8958  12FB  2AFC               	nop2
  8959  12FC  0008               	return
  8960  12FD                     __end_of_LCD_Cmd:	
  8961                           
  8962                           	psect	text35
  8963  12FD                     __ptext35:	
  8964 ;; *************** function _I2C_Master_Init *****************
  8965 ;; Defined at:
  8966 ;;		line 16 in file "I2C.c"
  8967 ;; Parameters:    Size  Location     Type
  8968 ;;  c               4    6[BANK0 ] const unsigned long 
  8969 ;; Auto vars:     Size  Location     Type
  8970 ;;		None
  8971 ;; Return value:  Size  Location     Type
  8972 ;;                  1    wreg      void 
  8973 ;; Registers used:
  8974 ;;		wreg, status,2, status,0, pclath, cstack
  8975 ;; Tracked objects:
  8976 ;;		On entry : 0/0
  8977 ;;		On exit  : 0/0
  8978 ;;		Unchanged: 0/0
  8979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8980 ;;      Params:         0       4       0       0       0
  8981 ;;      Locals:         0       0       0       0       0
  8982 ;;      Temps:          0       4       0       0       0
  8983 ;;      Totals:         0       8       0       0       0
  8984 ;;Total ram usage:        8 bytes
  8985 ;; Hardware stack levels used:    1
  8986 ;; Hardware stack levels required when called:    2
  8987 ;; This function calls:
  8988 ;;		___lldiv
  8989 ;; This function is called by:
  8990 ;;		_SetUp
  8991 ;; This function uses a non-reentrant model
  8992 ;;
  8993                           
  8994                           
  8995                           ;psect for function _I2C_Master_Init
  8996  12FD                     _I2C_Master_Init:	
  8997                           
  8998                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  8999                           
  9000                           ;incstack = 0
  9001                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  9002  12FD  3028               	movlw	40
  9003  12FE  1283               	bcf	3,5	;RP0=0, select bank0
  9004  12FF  1303               	bcf	3,6	;RP1=0, select bank0
  9005  1300  0094               	movwf	20	;volatile
  9006                           
  9007                           ;I2C.c: 19:     SSPCON2 = 0;
  9008  1301  1683               	bsf	3,5	;RP0=1, select bank1
  9009  1302  1303               	bcf	3,6	;RP1=0, select bank1
  9010  1303  0191               	clrf	17	;volatile
  9011                           
  9012                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  9013  1304  1283               	bcf	3,5	;RP0=0, select bank0
  9014  1305  1303               	bcf	3,6	;RP1=0, select bank0
  9015  1306  0826               	movf	I2C_Master_Init@c,w
  9016  1307  00AA               	movwf	??_I2C_Master_Init
  9017  1308  0827               	movf	I2C_Master_Init@c+1,w
  9018  1309  00AB               	movwf	??_I2C_Master_Init+1
  9019  130A  0828               	movf	I2C_Master_Init@c+2,w
  9020  130B  00AC               	movwf	??_I2C_Master_Init+2
  9021  130C  0829               	movf	I2C_Master_Init@c+3,w
  9022  130D  00AD               	movwf	??_I2C_Master_Init+3
  9023  130E  3002               	movlw	2
  9024  130F                     u4295:	
  9025  130F  1003               	clrc
  9026  1310  0DAA               	rlf	??_I2C_Master_Init,f
  9027  1311  0DAB               	rlf	??_I2C_Master_Init+1,f
  9028  1312  0DAC               	rlf	??_I2C_Master_Init+2,f
  9029  1313  0DAD               	rlf	??_I2C_Master_Init+3,f
  9030  1314  3EFF               	addlw	-1
  9031  1315  1D03               	skipz
  9032  1316  2B0F               	goto	u4295
  9033  1317  082D               	movf	??_I2C_Master_Init+3,w
  9034  1318  00F5               	movwf	___lldiv@divisor+3
  9035  1319  082C               	movf	??_I2C_Master_Init+2,w
  9036  131A  00F4               	movwf	___lldiv@divisor+2
  9037  131B  082B               	movf	??_I2C_Master_Init+1,w
  9038  131C  00F3               	movwf	___lldiv@divisor+1
  9039  131D  082A               	movf	??_I2C_Master_Init,w
  9040  131E  00F2               	movwf	___lldiv@divisor
  9041  131F  3000               	movlw	0
  9042  1320  00F9               	movwf	___lldiv@dividend+3
  9043  1321  307A               	movlw	122
  9044  1322  00F8               	movwf	___lldiv@dividend+2
  9045  1323  3012               	movlw	18
  9046  1324  00F7               	movwf	___lldiv@dividend+1
  9047  1325  3000               	movlw	0
  9048  1326  00F6               	movwf	___lldiv@dividend
  9049  1327  160A  118A  23D9   	fcall	___lldiv
  9050  132A  0872               	movf	?___lldiv,w
  9051  132B  3EFF               	addlw	255
  9052  132C  1683               	bsf	3,5	;RP0=1, select bank1
  9053  132D  1303               	bcf	3,6	;RP1=0, select bank1
  9054  132E  0093               	movwf	19	;volatile
  9055                           
  9056                           ;I2C.c: 21:     SSPSTAT = 0;
  9057  132F  0194               	clrf	20	;volatile
  9058                           
  9059                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  9060  1330  1587               	bsf	7,3	;volatile
  9061                           
  9062                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  9063  1331  1607               	bsf	7,4	;volatile
  9064  1332  0008               	return
  9065  1333                     __end_of_I2C_Master_Init:	
  9066                           
  9067                           	psect	text36
  9068  13D9                     __ptext36:	
  9069 ;; *************** function ___lldiv *****************
  9070 ;; Defined at:
  9071 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  9072 ;; Parameters:    Size  Location     Type
  9073 ;;  divisor         4    2[COMMON] unsigned long 
  9074 ;;  dividend        4    6[COMMON] unsigned long 
  9075 ;; Auto vars:     Size  Location     Type
  9076 ;;  quotient        4    1[BANK0 ] unsigned long 
  9077 ;;  counter         1    5[BANK0 ] unsigned char 
  9078 ;; Return value:  Size  Location     Type
  9079 ;;                  4    2[COMMON] unsigned long 
  9080 ;; Registers used:
  9081 ;;		wreg, status,2, status,0
  9082 ;; Tracked objects:
  9083 ;;		On entry : 0/0
  9084 ;;		On exit  : 0/0
  9085 ;;		Unchanged: 0/0
  9086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9087 ;;      Params:         8       0       0       0       0
  9088 ;;      Locals:         0       5       0       0       0
  9089 ;;      Temps:          0       1       0       0       0
  9090 ;;      Totals:         8       6       0       0       0
  9091 ;;Total ram usage:       14 bytes
  9092 ;; Hardware stack levels used:    1
  9093 ;; Hardware stack levels required when called:    1
  9094 ;; This function calls:
  9095 ;;		Nothing
  9096 ;; This function is called by:
  9097 ;;		_I2C_Master_Init
  9098 ;; This function uses a non-reentrant model
  9099 ;;
  9100                           
  9101                           
  9102                           ;psect for function ___lldiv
  9103  13D9                     ___lldiv:	
  9104                           
  9105                           ;incstack = 0
  9106                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  9107  13D9  3000               	movlw	0
  9108  13DA  1283               	bcf	3,5	;RP0=0, select bank0
  9109  13DB  1303               	bcf	3,6	;RP1=0, select bank0
  9110  13DC  00A4               	movwf	___lldiv@quotient+3
  9111  13DD  3000               	movlw	0
  9112  13DE  00A3               	movwf	___lldiv@quotient+2
  9113  13DF  3000               	movlw	0
  9114  13E0  00A2               	movwf	___lldiv@quotient+1
  9115  13E1  3000               	movlw	0
  9116  13E2  00A1               	movwf	___lldiv@quotient
  9117  13E3  0875               	movf	___lldiv@divisor+3,w
  9118  13E4  0474               	iorwf	___lldiv@divisor+2,w
  9119  13E5  0473               	iorwf	___lldiv@divisor+1,w
  9120  13E6  0472               	iorwf	___lldiv@divisor,w
  9121  13E7  1903               	skipnz
  9122  13E8  2C30               	goto	l4576
  9123  13E9  01A5               	clrf	___lldiv@counter
  9124  13EA  0AA5               	incf	___lldiv@counter,f
  9125  13EB                     l4562:	
  9126  13EB  1BF5               	btfsc	___lldiv@divisor+3,7
  9127  13EC  2BFB               	goto	l4564
  9128  13ED  3001               	movlw	1
  9129  13EE  00A0               	movwf	??___lldiv
  9130  13EF                     u4105:	
  9131  13EF  1003               	clrc
  9132  13F0  0DF2               	rlf	___lldiv@divisor,f
  9133  13F1  0DF3               	rlf	___lldiv@divisor+1,f
  9134  13F2  0DF4               	rlf	___lldiv@divisor+2,f
  9135  13F3  0DF5               	rlf	___lldiv@divisor+3,f
  9136  13F4  0BA0               	decfsz	??___lldiv,f
  9137  13F5  2BEF               	goto	u4105
  9138  13F6  3001               	movlw	1
  9139  13F7  00A0               	movwf	??___lldiv
  9140  13F8  0820               	movf	??___lldiv,w
  9141  13F9  07A5               	addwf	___lldiv@counter,f
  9142  13FA  2BEB               	goto	l4562
  9143  13FB                     l4564:	
  9144  13FB  3001               	movlw	1
  9145  13FC  00A0               	movwf	??___lldiv
  9146  13FD                     u4125:	
  9147  13FD  1003               	clrc
  9148  13FE  0DA1               	rlf	___lldiv@quotient,f
  9149  13FF  0DA2               	rlf	___lldiv@quotient+1,f
  9150  1400  0DA3               	rlf	___lldiv@quotient+2,f
  9151  1401  0DA4               	rlf	___lldiv@quotient+3,f
  9152  1402  0BA0               	decfsz	??___lldiv,f
  9153  1403  2BFD               	goto	u4125
  9154  1404  0875               	movf	___lldiv@divisor+3,w
  9155  1405  0279               	subwf	___lldiv@dividend+3,w
  9156  1406  1D03               	skipz
  9157  1407  2C12               	goto	u4135
  9158  1408  0874               	movf	___lldiv@divisor+2,w
  9159  1409  0278               	subwf	___lldiv@dividend+2,w
  9160  140A  1D03               	skipz
  9161  140B  2C12               	goto	u4135
  9162  140C  0873               	movf	___lldiv@divisor+1,w
  9163  140D  0277               	subwf	___lldiv@dividend+1,w
  9164  140E  1D03               	skipz
  9165  140F  2C12               	goto	u4135
  9166  1410  0872               	movf	___lldiv@divisor,w
  9167  1411  0276               	subwf	___lldiv@dividend,w
  9168  1412                     u4135:	
  9169  1412  1C03               	skipc
  9170  1413  2C23               	goto	l4572
  9171  1414  0872               	movf	___lldiv@divisor,w
  9172  1415  02F6               	subwf	___lldiv@dividend,f
  9173  1416  0873               	movf	___lldiv@divisor+1,w
  9174  1417  1C03               	skipc
  9175  1418  0F73               	incfsz	___lldiv@divisor+1,w
  9176  1419  02F7               	subwf	___lldiv@dividend+1,f
  9177  141A  0874               	movf	___lldiv@divisor+2,w
  9178  141B  1C03               	skipc
  9179  141C  0F74               	incfsz	___lldiv@divisor+2,w
  9180  141D  02F8               	subwf	___lldiv@dividend+2,f
  9181  141E  0875               	movf	___lldiv@divisor+3,w
  9182  141F  1C03               	skipc
  9183  1420  0F75               	incfsz	___lldiv@divisor+3,w
  9184  1421  02F9               	subwf	___lldiv@dividend+3,f
  9185  1422  1421               	bsf	___lldiv@quotient,0
  9186  1423                     l4572:	
  9187  1423  3001               	movlw	1
  9188  1424                     u4145:	
  9189  1424  1003               	clrc
  9190  1425  0CF5               	rrf	___lldiv@divisor+3,f
  9191  1426  0CF4               	rrf	___lldiv@divisor+2,f
  9192  1427  0CF3               	rrf	___lldiv@divisor+1,f
  9193  1428  0CF2               	rrf	___lldiv@divisor,f
  9194  1429  3EFF               	addlw	-1
  9195  142A  1D03               	skipz
  9196  142B  2C24               	goto	u4145
  9197  142C  3001               	movlw	1
  9198  142D  02A5               	subwf	___lldiv@counter,f
  9199  142E  1D03               	btfss	3,2
  9200  142F  2BFB               	goto	l4564
  9201  1430                     l4576:	
  9202  1430  0824               	movf	___lldiv@quotient+3,w
  9203  1431  00F5               	movwf	?___lldiv+3
  9204  1432  0823               	movf	___lldiv@quotient+2,w
  9205  1433  00F4               	movwf	?___lldiv+2
  9206  1434  0822               	movf	___lldiv@quotient+1,w
  9207  1435  00F3               	movwf	?___lldiv+1
  9208  1436  0821               	movf	___lldiv@quotient,w
  9209  1437  00F2               	movwf	?___lldiv
  9210  1438  0008               	return
  9211  1439                     __end_of___lldiv:	
  9212                           
  9213                           	psect	text37
  9214  1193                     __ptext37:	
  9215 ;; *************** function _ISR *****************
  9216 ;; Defined at:
  9217 ;;		line 110 in file "main_Master.c"
  9218 ;; Parameters:    Size  Location     Type
  9219 ;;		None
  9220 ;; Auto vars:     Size  Location     Type
  9221 ;;		None
  9222 ;; Return value:  Size  Location     Type
  9223 ;;                  1    wreg      void 
  9224 ;; Registers used:
  9225 ;;		wreg, status,2, status,0
  9226 ;; Tracked objects:
  9227 ;;		On entry : 0/0
  9228 ;;		On exit  : 0/0
  9229 ;;		Unchanged: 0/0
  9230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9231 ;;      Params:         0       0       0       0       0
  9232 ;;      Locals:         0       0       0       0       0
  9233 ;;      Temps:          2       0       0       0       0
  9234 ;;      Totals:         2       0       0       0       0
  9235 ;;Total ram usage:        2 bytes
  9236 ;; Hardware stack levels used:    1
  9237 ;; This function calls:
  9238 ;;		Nothing
  9239 ;; This function is called by:
  9240 ;;		Interrupt level 1
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244                           
  9245                           ;psect for function _ISR
  9246  1193                     _ISR:	
  9247                           
  9248                           ;main_Master.c: 111:     if (INTCONbits.RBIF == 1 && INTCONbits.RBIE == 1){
  9249  1193  180B               	btfsc	11,0	;volatile
  9250  1194  1D8B               	btfss	11,3	;volatile
  9251  1195  299F               	goto	i1l107
  9252                           
  9253                           ;main_Master.c: 112:         INTCONbits.RBIF = 0;
  9254  1196  100B               	bcf	11,0	;volatile
  9255                           
  9256                           ;main_Master.c: 113:         if (banderaBoton == 0){
  9257  1197  1683               	bsf	3,5	;RP0=1, select bank1
  9258  1198  1303               	bcf	3,6	;RP1=0, select bank1
  9259  1199  083C               	movf	_banderaBoton^(0+128),w
  9260  119A  1D03               	btfss	3,2
  9261  119B  299F               	goto	i1l107
  9262                           
  9263                           ;main_Master.c: 114:             banderaBoton = 1;
  9264  119C  01BC               	clrf	_banderaBoton^(0+128)
  9265  119D  0ABC               	incf	_banderaBoton^(0+128),f
  9266                           
  9267                           ;main_Master.c: 115:             INTCONbits.RBIE = 0;
  9268  119E  118B               	bcf	11,3	;volatile
  9269  119F                     i1l107:	
  9270  119F  0871               	movf	??_ISR+1,w
  9271  11A0  008A               	movwf	10
  9272  11A1  0E70               	swapf	??_ISR^(0+4294967168),w
  9273  11A2  0083               	movwf	3
  9274  11A3  0EFE               	swapf	126,f
  9275  11A4  0E7E               	swapf	126,w
  9276  11A5  0009               	retfie
  9277  11A6                     __end_of_ISR:	
  9278  007E                     btemp	set	126	;btemp
  9279  007E                     wtemp0	set	126
  9280                           
  9281                           	psect	intentry
  9282  0004                     __pintentry:	
  9283                           ;incstack = 0
  9284                           ; Regs used in _ISR: [wreg+status,2+status,0]
  9285                           
  9286  0004                     interrupt_function:	
  9287  007E                     saved_w	set	btemp
  9288  0004  00FE               	movwf	btemp
  9289  0005  0E03               	swapf	3,w
  9290  0006  00F0               	movwf	??_ISR
  9291  0007  080A               	movf	10,w
  9292  0008  00F1               	movwf	??_ISR+1
  9293  0009  160A  118A  2993   	ljmp	_ISR


Data Sizes:
    Strings     105
    Constant    40
    Data        9
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     80      80
    BANK1            80     20      41
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Create_Char@chardata	PTR const unsigned char  size(1) Largest target is 8
		 -> arrowr_vacio(CODE[8]), gota(CODE[8]), termometro(CODE[8]), arrowr(CODE[8]), 
		 -> atilde(CODE[8]), 

    LCD_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_14(CODE[6]), STR_13(CODE[16]), STR_12(CODE[3]), STR_11(CODE[4]), 
		 -> STR_10(CODE[13]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[13]), 
		 -> STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[9]), STR_3(CODE[17]), 
		 -> STR_2(CODE[10]), STR_1(CODE[3]), 

    sp__uint_to_array	PTR unsigned int  size(1) Largest target is 6
		 -> uint_to_array@resultado(BANK0[6]), 

    obj_array	PTR unsigned int  size(1) Largest target is 6
		 -> NULL(NULL[0]), uint_to_array@resultado(BANK0[6]), 


Critical Paths under _main in COMMON

    _temp_objeto->___xxtofl
    _temp_ambiente->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    ___fladd->___xxtofl
    _pressBoton2->_LCD_Set_Cursor
    _pressBoton1->_LCD_clear
    _mostrarLCD->_LCD_Set_Cursor
    _uint_to_array->___awdiv
    _display_Uhrzeit->_LCD_Set_Cursor
    _display_Datum->_LCD_Set_Cursor
    ___awdiv->___wmul
    _LCD_Write_String->_LCD_Write_Character
    _LCD_Set_Cursor->_LCD_Cmd
    _get_Time->_BCD_a_DEC
    _BCD_a_DEC->___bmul
    _LCD_init->_LCD_Cmd
    _LCD_clear->_LCD_Cmd
    _LCD_Create_Char->_LCD_Cmd
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _temp_objeto->___fltol
    _temp_ambiente->___fltol
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___fladd
    ___fladd->___flmul
    _mostrarLCD->_uint_to_array
    _uint_to_array->___awdiv
    _display_Uhrzeit->___awdiv
    _display_Datum->___awdiv
    _SetUp->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_temp_ambiente
    _main->_temp_objeto
    _temp_objeto->___fltol
    _temp_ambiente->___fltol

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   53232
                                             19 BANK1      1     1      0
                              _SetUp
                           _get_Time
                         _mostrarLCD
                        _pressBoton1
                        _pressBoton2
                      _temp_ambiente
                        _temp_objeto
 ---------------------------------------------------------------------------------
 (1) _temp_objeto                                         10     8      2   13069
                                              9 BANK1     10     8      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _temp_ambiente                                       10     8      2   13069
                                              9 BANK1     10     8      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     381
                                             78 BANK0      2     2      0
                                              0 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3533
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                             52 BANK0     26    18      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2414
                                             32 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _pressBoton2                                          3     3      0    2307
                                              0 BANK0      3     3      0
                     _LCD_Set_Cursor
                _LCD_Write_Character
                          _LCD_clear
 ---------------------------------------------------------------------------------
 (1) _pressBoton1                                          2     2      0      22
                                              7 COMMON     2     2      0
                          _LCD_clear
 ---------------------------------------------------------------------------------
 (1) _mostrarLCD                                           4     4      0   18629
                                             23 BANK0      4     4      0
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                          _LCD_clear
                      _display_Datum
                    _display_Uhrzeit
                      _uint_to_array
 ---------------------------------------------------------------------------------
 (2) _uint_to_array                                       15    15      0    3011
                                              8 BANK0     15    15      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _display_Uhrzeit                                     11    10      1    6066
                                              8 BANK0     11    10      1
                     _LCD_Set_Cursor
                _LCD_Write_Character
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _display_Datum                                       11    10      1    6640
                                              8 BANK0     11    10      1
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1360
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    2065
                                              8 COMMON     1     1      0
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     3     3      0     574
                                              4 COMMON     3     3      0
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       5     4      1    2263
                                              5 COMMON     5     4      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _get_Time                                             1     1      0    4915
                                              0 BANK0      1     1      0
                          _BCD_a_DEC
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    3442
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2    1261
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BCD_a_DEC                                            4     4      0     212
                                              6 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SetUp                                                1     1      0    1221
                                             14 BANK0      1     1      0
                    _I2C_Master_Init
                    _LCD_Create_Char
                          _LCD_clear
                           _LCD_init
                         _OSC_config
 ---------------------------------------------------------------------------------
 (2) _OSC_config                                           4     0      4      98
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             2     2      0      22
                                              5 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            2     2      0      22
                                              5 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Create_Char                                      4     3      1     537
                                              5 COMMON     4     3      1
                            _LCD_Cmd
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Character                                  2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetUp
     _I2C_Master_Init
       ___lldiv
     _LCD_Create_Char
       _LCD_Cmd
       _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
     _LCD_init
       _LCD_Cmd
     _OSC_config
   _get_Time
     _BCD_a_DEC
       ___bmul
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _mostrarLCD
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     _LCD_Write_String
       _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
     _display_Datum
       _LCD_Set_Cursor
         _LCD_Cmd
       _LCD_Write_Character
       _LCD_Write_String
         _LCD_Write_Character
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _display_Uhrzeit
       _LCD_Set_Cursor
         _LCD_Cmd
       _LCD_Write_Character
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _uint_to_array
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _pressBoton1
     _LCD_clear
       _LCD_Cmd
   _pressBoton2
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
   _temp_ambiente
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _temp_objeto
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     14      29       7       51.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      85      12        0.0%
ABS                  0      0      85       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 09 16:20:56 2020

                ___fldiv@aexp 006D                  ___fldiv@bexp 006C                             pc 0002  
                ___fldiv@sign 0065                ___bmul@product 0074       __end_of_LCD_Create_Char 1241  
                 __CFG_CP$OFF 0000                  ___awdiv@sign 0025            __size_of_BCD_a_DEC 0016  
                          fsr 0004           ___wmul@multiplicand 0074            mostrarLCD@pantalla 003A  
         __Umul8_16@word_mpld 0022                           l264 114F                           l282 1264  
                         l283 1267                           l452 11DC                           l801 0C7C  
                         l645 15E9                           l751 0E9A                           l823 0DBB  
                         l745 0E23                           l825 0DC9                           l749 0EBC  
                         l853 0337                           l766 0F75                           l787 0FF5  
                         l779 0FDD                           l892 0878                           l893 0882  
                         l885 0862                           l879 0822                           l898 07ED  
                         _GIE 005F                  __CFG_CPD$OFF 0000                           _ISR 1193  
     __end_of_display_Uhrzeit 0B3E                           _dia 00C6                           _mes 00C4  
                         _min 00C8                           _seg 007B                           fsr0 0004  
                         indf 0000                  ___awmod@sign 0078                  ___flmul@aexp 0034  
                ___flmul@bexp 0039                  ___flmul@sign 0033                ?_display_Datum 0028  
                ___flmul@temp 003E                  ___flmul@prod 003A  __size_of_LCD_Write_Character 0010  
             __end_of_LCD_Cmd 12FD                  __CFG_LVP$OFF 0000                          ?_ISR 0070  
              _LCD_Set_Cursor 126D                  ___fltol@exp1 006F                          l3202 15A2  
                        l4004 174B                          l3220 15E5                          l4030 17AD  
                        l4022 178C                          l4014 176B                          l4006 174D  
                        l3310 0E69                          l5000 0559                          l3320 0EA7  
                        l4034 17BB                          l3250 0DF1                          l3218 15D1  
                        l5020 05C6                          l5012 05A4                          l4036 17C7  
                        l4044 17EA                          l3420 0FF1                          l3252 0DF9  
                        l3500 0CF6                          l3228 15FC                          l5006 0583  
                        l5022 05D5                          l4038 17E4                          l3318 0EA5  
                        l3270 0E18                          l3246 0DEE                          l3510 0D1A  
                        l3088 122B                          l3416 0FED                          l3344 0EEB  
                        l3336 0ECA                          l3328 0EB6                          l3280 0E2D  
                        l3440 0C4B                          l2810 11F6                          l3346 0EED  
                        l3354 0EFD                          l3274 0E1B                          l3506 0D15  
                        l3380 0F96                          l3372 0F87                          l3364 0F67  
                        l3532 0D54                          l3524 0D20                          l3508 0CD2  
                        l3460 0C71                          l3444 0C4E                          l5036 129E  
                        l3550 0DA1                          l3526 0D3D                          l3446 0C56  
                        l3198 1597                          l2832 1173                          l2920 133D  
                        l3536 0D56                          l3480 0CA7                          l3464 0C74  
                        l3720 0831                          l2818 11D4                          l3394 0FA8  
                        l3386 0F9D                          l3562 0DC5                          l3546 0D88  
                        l3474 0C9B                          l3714 081A                          l5500 16DD  
                        l2836 1179                          l4620 13D4                          l4612 13C1  
                        l4604 139D                          l2932 134A                          l2924 1344  
                        l3388 0F9F                          l3724 0835                          l5510 170F  
                        l5502 16E7                          l4606 13AB                          l2934 1358  
                        l2942 1371                          l3398 0FAA                          l3734 0876  
                        l3726 0847                          l5512 1719                          l5504 16F1  
                        l5520 16EC                          l2792 1279                          l4616 13CC  
                        l4800 0289                          l4720 004E                          l3736 0867  
                        l4562 13EB                          l5530 171E                          l5506 16FB  
                        l5522 16F6                          l5514 1723                          l2970 169F  
                        l2946 1379                          l2938 1366                          l4802 02A6  
                        l4722 0056                          l4572 1423                          l4564 13FB  
                        l5508 1705                          l5524 1700                          l5516 16D8  
                        l2980 16C2                          l2972 16A6                          l2796 1283  
                        l2788 126F                          l4628 07E5                          l4812 02BF  
                        l4740 007B                          l3748 089F                          l5526 170A  
                        l5518 16E2                          l2982 16C7                          l2974 16AD  
                        l2966 1693                          l2798 1288                          l4910 0348  
                        l4822 02F1                          l4718 004C                          l4576 1430  
                        l5528 1714                          l2976 16B4                          l2968 1698  
                        l2984 16CE                          l4912 0369                          l3952 152B  
                        l4832 0320                          l4808 02BD                          l4736 0071  
                        l2978 16BB                          l4594 1395                          l4922 03A3  
                        l3946 1520                          l5490 17D3                          l4826 0307  
                        l4738 0073                          l4588 138A                          l5492 1565  
                        l3964 1541                          l4748 0089                          l5494 05DD  
                        l3958 1536                          l3974 155B                          l3982 1574  
                        l5496 1290                          l4960 047C                          l4952 044C  
                        l4928 03CD                          l3976 1570                          l5498 16D3  
                        l4946 042C                          l4938 0407                          l4976 04D6  
                        l4994 0532                          l4988 051D                          STR_1 108D  
                        STR_2 1069                          STR_3 102E                          STR_4 1073  
                        STR_5 1090                          STR_6 1086                          STR_7 104F  
                        STR_8 1093                          STR_9 1095                          u2105 11E4  
                        _IOCB 0096                          u2095 11DD                          u3215 0D24  
                        u4105 13EF                          u2345 134D                          u3305 0D73  
                        u3145 0CDB                          u2505 15AD                          u2435 121D  
                        u3315 0D91                          u3235 0D2F                          u3155 0CE4  
                        u4300 1614                          u2700 0E8A                          u4125 13FD  
                        u2365 135E                          u3325 0DAC                          u4135 1412  
                        u4215 13AC                          u2375 1367                          u3175 0CEF  
                        u2535 15D2                          u4145 1424                          u4225 13B8  
                        u3185 0D04                          u2475 11C7                          u4235 13C2  
                        u2565 15F0                          u2831 0F28                          u2823 0F0F  
                        u2815 0EF1                          u2735 0EAB                          u2840 0F3C  
                        u2832 0F29                          u2841 0F3D                          u2833 0F2E  
                        u4505 0232                          u2842 0F42                          u2834 0F2F  
                        u2690 0E89                          u4195 13A0                          u2843 0F43  
                        u2835 0F34                          u4275 07EE                          u4435 0139  
                        _PEIE 005E                          u2836 0F35                          u2685 0E7D  
                        u4525 0257                          u4295 130F                          u4545 0275  
                        u4465 0196                          u3825 088A                          u3745 083E  
                        u4555 028D                          u2885 0F89                          u4645 02DC  
                        u3765 085A                          u4807 154A                          u4655 02FA  
                        u4575 0298                          u4817 1581                          u2985 0FC7  
                        u4665 0312                          u3785 086F                          u4737 09D5  
                        u4907 1492                          u4827 05B9                          u4747 08FB  
                        u4917 149C                          u4837 143D                          u4757 1762  
                        u4927 11B6                          u4847 144C                          u4767 1783  
                        u4937 116A                          u4857 1459                          u4777 17A4  
                        u4947 12D2                          u4867 1464                          u4787 17C1  
                        u4957 12DE                          u4877 146F                          u4797 17F7  
                        u4967 12EB                          u4887 1479                          u4977 12F7  
                        u4897 1485                          _WPUB 0095                  __CFG_WRT$OFF 0000  
           ?_LCD_Write_String 0070                          _jahr 00C3                          _main 1299  
                        _gota 1006                          _hora 00C7                          btemp 007E  
               _uint_to_array 160D         temp_ambiente@temp_LSB 00B0         temp_ambiente@temp_MSB 00B1  
                        start 000C            ??_LCD_Write_String 0074                 __CFG_IESO$OFF 0000  
             ___fldiv@new_exp 0066            __size_of_LCD_clear 0016             ___bmul@multiplier 0075  
                       ??_ISR 0070              ?_I2C_Master_Init 0026              ?_I2C_Master_Read 0072  
            ?_I2C_Master_Wait 0070              ?_I2C_Master_Stop 0070              __end_of_LCD_init 149F  
               ___fltol@sign1 006E               __end_of___fladd 1000                         ?_main 0070  
             __end_of___fldiv 0DD1               __end_of___awdiv 13D9                         STR_10 105C  
                       STR_11 1082                         STR_12 108A                         STR_13 103F  
                       STR_14 107C                 __CFG_WDTE$OFF 0000               __end_of___awmod 137E  
             __end_of___flmul 0344               __end_of___fltol 160D               __end_of___lldiv 1439  
             ___awdiv@divisor 0020                         i1l107 119F               ___awdiv@counter 0024  
                       _PORTD 0008                         _TRISB 0086                         _TRISD 0088  
                       _SSPIE 0463                         _SSPIF 0063                __CFG_FCMEN$OFF 0000  
      __end_of_LCD_Set_Cursor 1299                         _SetUp 149F                         _ancho 00C0  
                       _datum 00C5                         _largo 00C1                __CFG_BOREN$OFF 0000  
                 ?_OSC_config 0072                         pclath 000A             __end_of_BCD_a_DEC 11D2  
              ?_uint_to_array 0070                         status 0003                         wtemp0 007E  
              __CFG_MCLRE$OFF 0000               __initialization 000F                  __end_of_main 12CA  
                __end_of_gota 100E              ?_LCD_Create_Char 0075                        ??_main 00B3  
                   ??_LCD_Cmd 0072               ??_display_Datum 0029              ?_display_Uhrzeit 0028  
           ?_I2C_Master_Start 0070             ?_I2C_Master_Write 0072             __end_of_LCD_clear 11BC  
                      ?_SetUp 0070               ?_LCD_Set_Cursor 0075            ??_I2C_Master_Start 0072  
          ??_I2C_Master_Write 0074                  _banderaPUSH1 00BB                  _banderaPUSH2 00BA  
            ___awdiv@dividend 0022                        _ANSELH 0189                  _banderaBoton 00BC  
                      _SSPADD 0093                        _TRISC0 0438                        _TRISC1 0439  
                      _TRISC3 043B                        _TRISC4 043C            uint_to_array@F1343 00B4  
                      _SSPCON 0014                        _SSPBUF 0013              __end_of___xxtofl 08A8  
 LCD_Write_Character@caracter 0073                __CFG_PWRTE$OFF 0000              __end_of_get_Time 07D9  
                      ___bmul 1171                     ??___fladd 0048                        ___wmul 11D2  
                   ??___fldiv 005C                     ??___awdiv 0078                     ??___awmod 0076  
                   ??___flmul 002E                     ??___fltol 00A4                     ??___lldiv 0020  
                      _atilde 1016                  ?_temp_objeto 00A9                        _arrowr 1026  
                      _estado 00BF              ___awdiv@quotient 0026               ___awmod@divisor 0072  
                      _tiempo 00C2           __size_of_OSC_config 00AC               ___awmod@counter 0077  
                ?_pressBoton1 0070                  ?_pressBoton2 0070            __size_of__Umul8_16 0025  
                      saved_w 007E               ??_uint_to_array 0028                  ___xxtofl@arg 0022  
                ___xxtofl@exp 0021                  ___xxtofl@val 0072       __end_of__initialization 002B  
                   ?_LCD_init 0070                    ___fltol@f1 00A0           ___bmul@multiplicand 0072  
              __pcstackCOMMON 0070                 __end_of_SetUp 1513           _LCD_Write_Character 1161  
                __pidataBANK1 1158          display_Datum@columna 0028         __end_of_temp_ambiente 0982  
              _OPTION_REGbits 0081               _temperatura_obj 00BD                       ??_SetUp 002E  
        ?_LCD_Write_Character 0070                LCD_Cmd@comando 0074                    __pbssBANK1 00B4  
   LCD_Set_Cursor@corrimiento 0079                    ??_LCD_init 0075          __end_of_arrowr_vacio 1026  
           __end_of__Umul8_16 07FE                    __pmaintext 1299                       ?___bmul 0072  
                     ?___wmul 0072                    __pintentry 0004     __size_of_LCD_Write_String 0022  
             temp_objeto@temp 00AE          OSC_config@frecuencia 0072           display_Uhrzeit@fila 002C  
                     _LCD_Cmd 12CA                     ?___xxtofl 0072         ??_LCD_Write_Character 0072  
                   ?_get_Time 0070                       _SSPCON2 0091                       _SSPSTAT 0094  
                  __stringtab 1000                  ??_OSC_config 0076                     _BCD_a_DEC 11BC  
      uint_to_array@resultado 0030               __size_of___bmul 0011                       ___fladd 0DD1  
                     ___fldiv 0C2E                       ___awdiv 137E                       ___awmod 1333  
                     ___flmul 002F                       ___fltol 158A                       ___lldiv 13D9  
             __size_of___wmul 0021             display_Datum@fila 002C              ??_LCD_Set_Cursor 0076  
                     __ptext1 0982                       __ptext2 08A8                       __ptext3 0803  
                     __ptext4 158A                       __ptext5 002F                       __ptext6 07D9  
                     __ptext7 0C2E                       __ptext8 0DD1                       __ptext9 173E  
          __end_of_OSC_config 173E          __size_of_temp_objeto 00DA                  __size_of_ISR 0013  
         uint_to_array@numero 0036                    ??___xxtofl 0076              ___awmod@dividend 0074  
    __size_of_I2C_Master_Init 0036      __size_of_I2C_Master_Read 002C      __size_of_I2C_Master_Wait 0009  
    __size_of_I2C_Master_Stop 0007          __size_of_pressBoton1 0077          __size_of_pressBoton2 00C2  
                  ??_get_Time 0020                     _LCD_clear 11A6          end_of_initialization 002B  
   __size_of_I2C_Master_Start 0007     __size_of_I2C_Master_Write 0008               ___lldiv@divisor 0072  
                  ?_BCD_a_DEC 0070               ___lldiv@counter 0025              I2C_Master_Init@c 0026  
            I2C_Master_Read@a 0072                    _mostrarLCD 0344                     _PORTBbits 0006  
                   _PORTCbits 0007                    _termometro 100E                   ___fladd@grs 0053  
               ___xxtofl@sign 0020      __size_of_LCD_Create_Char 002C                     _TRISCbits 0087  
       __end_of_display_Datum 0C2E                   ___fldiv@grs 0068                   ___fldiv@rem 0061  
                  ?_LCD_clear 0070             LCD_Write_String@a 0076             LCD_Write_String@n 0074  
    __size_of_display_Uhrzeit 00E2                   ___flmul@grs 0035             __size_of_LCD_init 0066  
              __end_of___bmul 1182         LCD_Set_Cursor@columna 0075                __end_of___wmul 11F3  
            _LCD_Write_String 11F3                __end_of_atilde 101E                __end_of_arrowr 102E  
                _arrowr_vacio 101E           start_initialization 000F                   __end_of_ISR 11A6  
         temp_objeto@temp_LSB 00B0           temp_objeto@temp_MSB 00B1             ??_I2C_Master_Init 002A  
           ??_I2C_Master_Read 0074             ??_I2C_Master_Wait 0072         __end_of_uint_to_array 1692  
           ??_I2C_Master_Stop 0072      __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??_BCD_a_DEC 0076  
                    ??___bmul 0073       LCD_Create_Char@chardata 0075                      ??___wmul 0076  
                  init_fetch0 1182                     __Umul8_16 07D9                   ?_mostrarLCD 0070  
                 __pdataBANK1 00C0               BCD_a_DEC@numBCD 0079                     ___fladd@a 0044  
                   ___fladd@b 0040                      ?_LCD_Cmd 0070                     ___fldiv@a 0054  
                   ___fldiv@b 0058                     ___flmul@a 002A                     ___flmul@b 0026  
                 __pbssCOMMON 007A                     ___latbits 0002                 __pcstackBANK0 0020  
               __pcstackBANK1 00A0           display_Datum@jahr_d 0032           display_Datum@jahr_u 0031  
           __size_of___xxtofl 00A5                   ??_LCD_clear 0075             __size_of_get_Time 01D8  
           ??_LCD_Create_Char 0076              _I2C_Master_Start 1139              _I2C_Master_Write 1147  
      __size_of_temp_ambiente 00DA         uint_to_array@centenas 002F             ??_display_Uhrzeit 0029  
                    ?___fladd 0040                      ?___fldiv 0054                      ?___awdiv 0020  
                    ?___awmod 0072                      ?___flmul 0026                      ?___fltol 00A0  
                    ?___lldiv 0072                    ?__Umul8_16 0072                     __pstrings 1000  
 __end_of_LCD_Write_Character 1171             temp_ambiente@temp 00AE                     _obj_array 007A  
              __size_of_SetUp 0074          display_Uhrzeit@Uhr_d 0032          display_Uhrzeit@Uhr_u 0031  
         __size_of_mostrarLCD 02BD          display_Uhrzeit@min_d 0030          display_Uhrzeit@min_u 002F  
        display_Uhrzeit@seg_d 002E          display_Uhrzeit@seg_u 002D             interrupt_function 0004  
              ___wmul@product 0076                      _LCD_init 1439              LCD_Create_Char@n 0078  
               ??_temp_objeto 00AB                   __stringbase 1005             ___wmul@multiplier 0072  
               ??_pressBoton1 0077                 ??_pressBoton2 0020                 _temp_ambiente 08A8  
            __size_of_LCD_Cmd 0033           I2C_Master_Read@temp 0076      __end_of_LCD_Write_String 1215  
      LCD_Create_Char@charnum 0077                   ??__Umul8_16 0074              __size_of___fladd 022F  
            __size_of___fldiv 01A3              __size_of___awdiv 005B              __size_of___awmod 004B  
            __size_of___flmul 0315              __size_of___fltol 0083              __size_of___lldiv 0060  
          display_Datum@dia_d 002E            display_Datum@dia_u 002D            __end_of__stringtab 1006  
          display_Datum@mes_d 0030            display_Datum@mes_u 002F                ?_temp_ambiente 00A9  
             _I2C_Master_Init 12FD               _I2C_Master_Read 1241                      ___xxtofl 0803  
         __end_of_temp_objeto 0A5C          uint_to_array@decenas 002E               _I2C_Master_Wait 114F  
             _I2C_Master_Stop 1140                      __ptext10 1513                      __ptext11 0344  
                    __ptext20 0601                      __ptext12 160D                      __ptext21 1147  
                    __ptext13 11D2                      __ptext30 1439                      __ptext22 1140  
                    __ptext14 0A5C                      __ptext31 11A6                      __ptext23 1139  
                    __ptext15 0B3E                      __ptext32 1215                      __ptext24 1241  
                    __ptext16 1333                      __ptext33 1161                      __ptext25 114F  
                    __ptext17 137E                      __ptext34 12CA                      __ptext26 11BC  
                    __ptext18 11F3                      __ptext35 12FD                      __ptext27 1171  
                    __ptext19 126D                      __ptext36 13D9                      __ptext28 149F  
                    __ptext37 1193                      __ptext29 1692                      _get_Time 0601  
           __CFG_BOR4V$BOR40V 0000       __size_of_LCD_Set_Cursor 002C           __end_of_pressBoton1 158A  
         __end_of_pressBoton2 1800                 __size_of_main 0031        display_Uhrzeit@columna 0028  
      __size_of_display_Datum 00F0                  ??_mostrarLCD 0037           LCD_Set_Cursor@linea 0078  
             _LCD_Create_Char 1215      __end_of_I2C_Master_Start 1140      __end_of_I2C_Master_Write 114F  
                  _INTCONbits 000B                      init_ram0 1186               _display_Uhrzeit 0A5C  
                    intlevel1 0000            __end_of_mostrarLCD 0601              ___lldiv@dividend 0076  
                   stringcode 1000                    _OSCCONbits 008F            __end_of_termometro 1016  
     __end_of_I2C_Master_Init 1333       __end_of_I2C_Master_Read 126D       __end_of_I2C_Master_Wait 1158  
                 _temp_objeto 0982       __end_of_I2C_Master_Stop 1147               ??_temp_ambiente 00AB  
      __Umul8_16@multiplicand 0072                   _temperatura 00BE        __size_of_uint_to_array 0085  
            ___lldiv@quotient 0021             I2C_Master_Write@d 0072                   _pressBoton1 1513  
                 _pressBoton2 173E                      stringdir 1000                      stringtab 1000  
                 _SSPCON2bits 0091                 _display_Datum 0B3E                 ___fladd@signs 0050  
                  _OSC_config 1692                  ___fladd@aexp 0051                  ___fladd@bexp 0052  
        __Umul8_16@multiplier 0024             __Umul8_16@product 0020  

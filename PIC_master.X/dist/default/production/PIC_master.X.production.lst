

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 15 21:24:49 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.05
    59                           ; Generated 20/12/2018 GMT
    60                           ; 
    61                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F887 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  0088                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  0105                     	;# 
   156  0107                     	;# 
   157  0108                     	;# 
   158  0109                     	;# 
   159  010C                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0185                     	;# 
   165  0187                     	;# 
   166  0188                     	;# 
   167  0189                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0088                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  008F                     	;# 
   215  0090                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009A                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  0105                     	;# 
   234  0107                     	;# 
   235  0108                     	;# 
   236  0109                     	;# 
   237  010C                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  0185                     	;# 
   243  0187                     	;# 
   244  0188                     	;# 
   245  0189                     	;# 
   246  018C                     	;# 
   247  018D                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000D                     	;# 
   262  000E                     	;# 
   263  000E                     	;# 
   264  000F                     	;# 
   265  0010                     	;# 
   266  0011                     	;# 
   267  0012                     	;# 
   268  0013                     	;# 
   269  0014                     	;# 
   270  0015                     	;# 
   271  0015                     	;# 
   272  0016                     	;# 
   273  0017                     	;# 
   274  0018                     	;# 
   275  0019                     	;# 
   276  001A                     	;# 
   277  001B                     	;# 
   278  001B                     	;# 
   279  001C                     	;# 
   280  001D                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  0081                     	;# 
   284  0085                     	;# 
   285  0086                     	;# 
   286  0087                     	;# 
   287  0088                     	;# 
   288  0089                     	;# 
   289  008C                     	;# 
   290  008D                     	;# 
   291  008E                     	;# 
   292  008F                     	;# 
   293  0090                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0093                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0094                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009A                     	;# 
   306  009B                     	;# 
   307  009C                     	;# 
   308  009D                     	;# 
   309  009E                     	;# 
   310  009F                     	;# 
   311  0105                     	;# 
   312  0107                     	;# 
   313  0108                     	;# 
   314  0109                     	;# 
   315  010C                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  010F                     	;# 
   320  0185                     	;# 
   321  0187                     	;# 
   322  0188                     	;# 
   323  0189                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0088                     	;# 
   366  0089                     	;# 
   367  008C                     	;# 
   368  008D                     	;# 
   369  008E                     	;# 
   370  008F                     	;# 
   371  0090                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0094                     	;# 
   378  0095                     	;# 
   379  0096                     	;# 
   380  0097                     	;# 
   381  0098                     	;# 
   382  0099                     	;# 
   383  009A                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  009F                     	;# 
   389  0105                     	;# 
   390  0107                     	;# 
   391  0108                     	;# 
   392  0109                     	;# 
   393  010C                     	;# 
   394  010C                     	;# 
   395  010D                     	;# 
   396  010E                     	;# 
   397  010F                     	;# 
   398  0185                     	;# 
   399  0187                     	;# 
   400  0188                     	;# 
   401  0189                     	;# 
   402  018C                     	;# 
   403  018D                     	;# 
   404  0000                     	;# 
   405  0001                     	;# 
   406  0002                     	;# 
   407  0003                     	;# 
   408  0004                     	;# 
   409  0005                     	;# 
   410  0006                     	;# 
   411  0007                     	;# 
   412  0008                     	;# 
   413  0009                     	;# 
   414  000A                     	;# 
   415  000B                     	;# 
   416  000C                     	;# 
   417  000D                     	;# 
   418  000E                     	;# 
   419  000E                     	;# 
   420  000F                     	;# 
   421  0010                     	;# 
   422  0011                     	;# 
   423  0012                     	;# 
   424  0013                     	;# 
   425  0014                     	;# 
   426  0015                     	;# 
   427  0015                     	;# 
   428  0016                     	;# 
   429  0017                     	;# 
   430  0018                     	;# 
   431  0019                     	;# 
   432  001A                     	;# 
   433  001B                     	;# 
   434  001B                     	;# 
   435  001C                     	;# 
   436  001D                     	;# 
   437  001E                     	;# 
   438  001F                     	;# 
   439  0081                     	;# 
   440  0085                     	;# 
   441  0086                     	;# 
   442  0087                     	;# 
   443  0088                     	;# 
   444  0089                     	;# 
   445  008C                     	;# 
   446  008D                     	;# 
   447  008E                     	;# 
   448  008F                     	;# 
   449  0090                     	;# 
   450  0091                     	;# 
   451  0092                     	;# 
   452  0093                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0094                     	;# 
   456  0095                     	;# 
   457  0096                     	;# 
   458  0097                     	;# 
   459  0098                     	;# 
   460  0099                     	;# 
   461  009A                     	;# 
   462  009B                     	;# 
   463  009C                     	;# 
   464  009D                     	;# 
   465  009E                     	;# 
   466  009F                     	;# 
   467  0105                     	;# 
   468  0107                     	;# 
   469  0108                     	;# 
   470  0109                     	;# 
   471  010C                     	;# 
   472  010C                     	;# 
   473  010D                     	;# 
   474  010E                     	;# 
   475  010F                     	;# 
   476  0185                     	;# 
   477  0187                     	;# 
   478  0188                     	;# 
   479  0189                     	;# 
   480  018C                     	;# 
   481  018D                     	;# 
   482  0000                     	;# 
   483  0001                     	;# 
   484  0002                     	;# 
   485  0003                     	;# 
   486  0004                     	;# 
   487  0005                     	;# 
   488  0006                     	;# 
   489  0007                     	;# 
   490  0008                     	;# 
   491  0009                     	;# 
   492  000A                     	;# 
   493  000B                     	;# 
   494  000C                     	;# 
   495  000D                     	;# 
   496  000E                     	;# 
   497  000E                     	;# 
   498  000F                     	;# 
   499  0010                     	;# 
   500  0011                     	;# 
   501  0012                     	;# 
   502  0013                     	;# 
   503  0014                     	;# 
   504  0015                     	;# 
   505  0015                     	;# 
   506  0016                     	;# 
   507  0017                     	;# 
   508  0018                     	;# 
   509  0019                     	;# 
   510  001A                     	;# 
   511  001B                     	;# 
   512  001B                     	;# 
   513  001C                     	;# 
   514  001D                     	;# 
   515  001E                     	;# 
   516  001F                     	;# 
   517  0081                     	;# 
   518  0085                     	;# 
   519  0086                     	;# 
   520  0087                     	;# 
   521  0088                     	;# 
   522  0089                     	;# 
   523  008C                     	;# 
   524  008D                     	;# 
   525  008E                     	;# 
   526  008F                     	;# 
   527  0090                     	;# 
   528  0091                     	;# 
   529  0092                     	;# 
   530  0093                     	;# 
   531  0093                     	;# 
   532  0093                     	;# 
   533  0094                     	;# 
   534  0095                     	;# 
   535  0096                     	;# 
   536  0097                     	;# 
   537  0098                     	;# 
   538  0099                     	;# 
   539  009A                     	;# 
   540  009B                     	;# 
   541  009C                     	;# 
   542  009D                     	;# 
   543  009E                     	;# 
   544  009F                     	;# 
   545  0105                     	;# 
   546  0107                     	;# 
   547  0108                     	;# 
   548  0109                     	;# 
   549  010C                     	;# 
   550  010C                     	;# 
   551  010D                     	;# 
   552  010E                     	;# 
   553  010F                     	;# 
   554  0185                     	;# 
   555  0187                     	;# 
   556  0188                     	;# 
   557  0189                     	;# 
   558  018C                     	;# 
   559  018D                     	;# 
   560  0000                     	;# 
   561  0001                     	;# 
   562  0002                     	;# 
   563  0003                     	;# 
   564  0004                     	;# 
   565  0005                     	;# 
   566  0006                     	;# 
   567  0007                     	;# 
   568  0008                     	;# 
   569  0009                     	;# 
   570  000A                     	;# 
   571  000B                     	;# 
   572  000C                     	;# 
   573  000D                     	;# 
   574  000E                     	;# 
   575  000E                     	;# 
   576  000F                     	;# 
   577  0010                     	;# 
   578  0011                     	;# 
   579  0012                     	;# 
   580  0013                     	;# 
   581  0014                     	;# 
   582  0015                     	;# 
   583  0015                     	;# 
   584  0016                     	;# 
   585  0017                     	;# 
   586  0018                     	;# 
   587  0019                     	;# 
   588  001A                     	;# 
   589  001B                     	;# 
   590  001B                     	;# 
   591  001C                     	;# 
   592  001D                     	;# 
   593  001E                     	;# 
   594  001F                     	;# 
   595  0081                     	;# 
   596  0085                     	;# 
   597  0086                     	;# 
   598  0087                     	;# 
   599  0088                     	;# 
   600  0089                     	;# 
   601  008C                     	;# 
   602  008D                     	;# 
   603  008E                     	;# 
   604  008F                     	;# 
   605  0090                     	;# 
   606  0091                     	;# 
   607  0092                     	;# 
   608  0093                     	;# 
   609  0093                     	;# 
   610  0093                     	;# 
   611  0094                     	;# 
   612  0095                     	;# 
   613  0096                     	;# 
   614  0097                     	;# 
   615  0098                     	;# 
   616  0099                     	;# 
   617  009A                     	;# 
   618  009B                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009E                     	;# 
   622  009F                     	;# 
   623  0105                     	;# 
   624  0107                     	;# 
   625  0108                     	;# 
   626  0109                     	;# 
   627  010C                     	;# 
   628  010C                     	;# 
   629  010D                     	;# 
   630  010E                     	;# 
   631  010F                     	;# 
   632  0185                     	;# 
   633  0187                     	;# 
   634  0188                     	;# 
   635  0189                     	;# 
   636  018C                     	;# 
   637  018D                     	;# 
   638  0000                     	;# 
   639  0001                     	;# 
   640  0002                     	;# 
   641  0003                     	;# 
   642  0004                     	;# 
   643  0005                     	;# 
   644  0006                     	;# 
   645  0007                     	;# 
   646  0008                     	;# 
   647  0009                     	;# 
   648  000A                     	;# 
   649  000B                     	;# 
   650  000C                     	;# 
   651  000D                     	;# 
   652  000E                     	;# 
   653  000E                     	;# 
   654  000F                     	;# 
   655  0010                     	;# 
   656  0011                     	;# 
   657  0012                     	;# 
   658  0013                     	;# 
   659  0014                     	;# 
   660  0015                     	;# 
   661  0015                     	;# 
   662  0016                     	;# 
   663  0017                     	;# 
   664  0018                     	;# 
   665  0019                     	;# 
   666  001A                     	;# 
   667  001B                     	;# 
   668  001B                     	;# 
   669  001C                     	;# 
   670  001D                     	;# 
   671  001E                     	;# 
   672  001F                     	;# 
   673  0081                     	;# 
   674  0085                     	;# 
   675  0086                     	;# 
   676  0087                     	;# 
   677  0088                     	;# 
   678  0089                     	;# 
   679  008C                     	;# 
   680  008D                     	;# 
   681  008E                     	;# 
   682  008F                     	;# 
   683  0090                     	;# 
   684  0091                     	;# 
   685  0092                     	;# 
   686  0093                     	;# 
   687  0093                     	;# 
   688  0093                     	;# 
   689  0094                     	;# 
   690  0095                     	;# 
   691  0096                     	;# 
   692  0097                     	;# 
   693  0098                     	;# 
   694  0099                     	;# 
   695  009A                     	;# 
   696  009B                     	;# 
   697  009C                     	;# 
   698  009D                     	;# 
   699  009E                     	;# 
   700  009F                     	;# 
   701  0105                     	;# 
   702  0107                     	;# 
   703  0108                     	;# 
   704  0109                     	;# 
   705  010C                     	;# 
   706  010C                     	;# 
   707  010D                     	;# 
   708  010E                     	;# 
   709  010F                     	;# 
   710  0185                     	;# 
   711  0187                     	;# 
   712  0188                     	;# 
   713  0189                     	;# 
   714  018C                     	;# 
   715  018D                     	;# 
   716                           
   717                           	psect	idataBANK0
   718  1383                     __pidataBANK0:	
   719                           
   720                           ;initializer for _d_atras
   721  1383  3466               	retlw	102
   722                           
   723                           ;initializer for _d_frente
   724  1384  3466               	retlw	102
   725                           
   726                           ;initializer for _inclinacion
   727  1385  3404               	retlw	4
   728                           
   729                           ;initializer for _humedad
   730  1386  3405               	retlw	5
   731                           
   732                           ;initializer for _jahr
   733  1387  3414               	retlw	20
   734                           
   735                           ;initializer for _mes
   736  1388  3403               	retlw	3
   737                           
   738                           ;initializer for _datum
   739  1389  3406               	retlw	6
   740                           
   741                           ;initializer for _dia
   742  138A  3405               	retlw	5
   743                           
   744                           ;initializer for _hora
   745  138B  3410               	retlw	16
   746                           
   747                           ;initializer for _min
   748  138C  3415               	retlw	21
   749                           
   750                           	psect	strings
   751  0800                     __pstrings:	
   752  0800                     stringtab:	
   753  0800                     __stringtab:	
   754  0800                     stringcode:	
   755                           ;	String table - string pointers are 1 byte each
   756                           
   757  0800                     stringdir:	
   758  0800  3008               	movlw	high stringdir
   759  0801  008A               	movwf	10
   760  0802  0804               	movf	4,w
   761  0803  0A84               	incf	4,f
   762  0804  0782               	addwf	2,f
   763  0805                     __stringbase:	
   764  0805  3400               	retlw	0
   765  0806                     __end_of__stringtab:	
   766  0806                     _gota:	
   767  0806  3404               	retlw	4
   768  0807  340A               	retlw	10
   769  0808  340A               	retlw	10
   770  0809  3411               	retlw	17
   771  080A  3411               	retlw	17
   772  080B  3411               	retlw	17
   773  080C  340E               	retlw	14
   774  080D  3400               	retlw	0
   775  080E                     __end_of_gota:	
   776  080E                     _termometro:	
   777  080E  3404               	retlw	4
   778  080F  340A               	retlw	10
   779  0810  340A               	retlw	10
   780  0811  340E               	retlw	14
   781  0812  340E               	retlw	14
   782  0813  341F               	retlw	31
   783  0814  341F               	retlw	31
   784  0815  340E               	retlw	14
   785  0816                     __end_of_termometro:	
   786  0816                     _atilde:	
   787  0816  3402               	retlw	2
   788  0817  3404               	retlw	4
   789  0818  3400               	retlw	0
   790  0819  340E               	retlw	14
   791  081A  3401               	retlw	1
   792  081B  340F               	retlw	15
   793  081C  3411               	retlw	17
   794  081D  340F               	retlw	15
   795  081E                     __end_of_atilde:	
   796  081E                     _arrowr_vacio:	
   797  081E  3400               	retlw	0
   798  081F  3408               	retlw	8
   799  0820  340C               	retlw	12
   800  0821  340A               	retlw	10
   801  0822  3409               	retlw	9
   802  0823  340A               	retlw	10
   803  0824  340C               	retlw	12
   804  0825  3408               	retlw	8
   805  0826                     __end_of_arrowr_vacio:	
   806  0826                     _arrowr:	
   807  0826  3400               	retlw	0
   808  0827  3408               	retlw	8
   809  0828  340C               	retlw	12
   810  0829  340E               	retlw	14
   811  082A  340F               	retlw	15
   812  082B  340E               	retlw	14
   813  082C  340C               	retlw	12
   814  082D  3408               	retlw	8
   815  082E                     __end_of_arrowr:	
   816  0019                     _TXREG	set	25
   817  001A                     _RCREG	set	26
   818  0018                     _RCSTAbits	set	24
   819  0008                     _PORTD	set	8
   820  0007                     _PORTCbits	set	7
   821  0013                     _SSPBUF	set	19
   822  0014                     _SSPCON	set	20
   823  0006                     _PORTBbits	set	6
   824  0007                     _PORTC	set	7
   825  000B                     _INTCONbits	set	11
   826  0063                     _SSPIF	set	99
   827  005E                     _PEIE	set	94
   828  005F                     _GIE	set	95
   829  009A                     _SPBRGH	set	154
   830  0099                     _SPBRG	set	153
   831  0098                     _TXSTAbits	set	152
   832  0091                     _SSPCON2bits	set	145
   833  0087                     _TRISCbits	set	135
   834  0094                     _SSPSTAT	set	148
   835  0093                     _SSPADD	set	147
   836  0091                     _SSPCON2	set	145
   837  008F                     _OSCCONbits	set	143
   838  0088                     _TRISD	set	136
   839  0096                     _IOCB	set	150
   840  0081                     _OPTION_REGbits	set	129
   841  0095                     _WPUB	set	149
   842  0086                     _TRISB	set	134
   843  0087                     _TRISC	set	135
   844  04C1                     _TRMT	set	1217
   845  0463                     _SSPIE	set	1123
   846  043C                     _TRISC4	set	1084
   847  043B                     _TRISC3	set	1083
   848  0439                     _TRISC1	set	1081
   849  0438                     _TRISC0	set	1080
   850  0187                     _BAUDCTLbits	set	391
   851  0189                     _ANSELH	set	393
   852  082E                     STR_2:	
   853  082E  3441               	retlw	65	;'A'
   854  082F  346D               	retlw	109	;'m'
   855  0830  3462               	retlw	98	;'b'
   856  0831  3469               	retlw	105	;'i'
   857  0832  3465               	retlw	101	;'e'
   858  0833  346E               	retlw	110	;'n'
   859  0834  3474               	retlw	116	;'t'
   860  0835  3465               	retlw	101	;'e'
   861  0836  343A               	retlw	58	;':'
   862  0837  3420               	retlw	32	;' '
   863  0838  3453               	retlw	83	;'S'
   864  0839  3475               	retlw	117	;'u'
   865  083A  3465               	retlw	101	;'e'
   866  083B  346C               	retlw	108	;'l'
   867  083C  346F               	retlw	111	;'o'
   868  083D  343A               	retlw	58	;':'
   869  083E  3400               	retlw	0
   870  083F                     STR_16:	
   871  083F  3456               	retlw	86	;'V'
   872  0840  3461               	retlw	97	;'a'
   873  0841  346D               	retlw	109	;'m'
   874  0842  346F               	retlw	111	;'o'
   875  0843  346E               	retlw	110	;'n'
   876  0844  346F               	retlw	111	;'o'
   877  0845  3473               	retlw	115	;'s'
   878  0846  3420               	retlw	32	;' '
   879  0847  3450               	retlw	80	;'P'
   880  0848  3465               	retlw	101	;'e'
   881  0849  3472               	retlw	114	;'r'
   882  084A  3472               	retlw	114	;'r'
   883  084B  346F               	retlw	111	;'o'
   884  084C  3473               	retlw	115	;'s'
   885  084D  3421               	retlw	33	;'!'
   886  084E  3400               	retlw	0
   887  084F                     STR_6:	
   888  084F  3445               	retlw	69	;'E'
   889  0850  344D               	retlw	77	;'M'
   890  0851  3445               	retlw	69	;'E'
   891  0852  3452               	retlw	82	;'R'
   892  0853  3447               	retlw	71	;'G'
   893  0854  3445               	retlw	69	;'E'
   894  0855  344E               	retlw	78	;'N'
   895  0856  3443               	retlw	67	;'C'
   896  0857  3449               	retlw	73	;'I'
   897  0858  3441               	retlw	65	;'A'
   898  0859  3421               	retlw	33	;'!'
   899  085A  3420               	retlw	32	;' '
   900  085B  3420               	retlw	32	;' '
   901  085C  3400               	retlw	0
   902  085D                     STR_9:	
   903  085D  3473               	retlw	115	;'s'
   904  085E  343A               	retlw	58	;':'
   905  085F  3420               	retlw	32	;' '
   906  0860  347C               	retlw	124	;'|'
   907  0861  3420               	retlw	32	;' '
   908  0862  3446               	retlw	70	;'F'
   909  0863  3472               	retlw	114	;'r'
   910  0864  3465               	retlw	101	;'e'
   911  0865  346E               	retlw	110	;'n'
   912  0866  3474               	retlw	116	;'t'
   913  0867  3465               	retlw	101	;'e'
   914  0868  343A               	retlw	58	;':'
   915  0869  3400               	retlw	0
   916  086A                     STR_3:	
   917  086A  3449               	retlw	73	;'I'
   918  086B  346E               	retlw	110	;'n'
   919  086C  3463               	retlw	99	;'c'
   920  086D  346C               	retlw	108	;'l'
   921  086E  3469               	retlw	105	;'i'
   922  086F  346E               	retlw	110	;'n'
   923  0870  3461               	retlw	97	;'a'
   924  0871  3463               	retlw	99	;'c'
   925  0872  3469               	retlw	105	;'i'
   926  0873  346F               	retlw	111	;'o'
   927  0874  346E               	retlw	110	;'n'
   928  0875  343A               	retlw	58	;':'
   929  0876  3400               	retlw	0
   930  0877                     STR_14:	
   931  0877  3454               	retlw	84	;'T'
   932  0878  346F               	retlw	111	;'o'
   933  0879  346D               	retlw	109	;'m'
   934  087A  3461               	retlw	97	;'a'
   935  087B  3472               	retlw	114	;'r'
   936  087C  3420               	retlw	32	;' '
   937  087D  3464               	retlw	100	;'d'
   938  087E  3461               	retlw	97	;'a'
   939  087F  3474               	retlw	116	;'t'
   940  0880  346F               	retlw	111	;'o'
   941  0881  3473               	retlw	115	;'s'
   942  0882  343A               	retlw	58	;':'
   943  0883  3400               	retlw	0
   944  0884                     STR_5:	
   945  0884  3450               	retlw	80	;'P'
   946  0885  3465               	retlw	101	;'e'
   947  0886  346C               	retlw	108	;'l'
   948  0887  3469               	retlw	105	;'i'
   949  0888  3467               	retlw	103	;'g'
   950  0889  3472               	retlw	114	;'r'
   951  088A  346F               	retlw	111	;'o'
   952  088B  3421               	retlw	33	;'!'
   953  088C  3420               	retlw	32	;' '
   954  088D  3420               	retlw	32	;' '
   955  088E  3420               	retlw	32	;' '
   956  088F  3400               	retlw	0
   957  0890                     STR_4:	
   958  0890  3445               	retlw	69	;'E'
   959  0891  3473               	retlw	115	;'s'
   960  0892  3474               	retlw	116	;'t'
   961  0893  3461               	retlw	97	;'a'
   962  0894  3462               	retlw	98	;'b'
   963  0895  346C               	retlw	108	;'l'
   964  0896  3465               	retlw	101	;'e'
   965  0897  3420               	retlw	32	;' '
   966  0898  3420               	retlw	32	;' '
   967  0899  3420               	retlw	32	;' '
   968  089A  3400               	retlw	0
   969  089B                     STR_7:	
   970  089B  3448               	retlw	72	;'H'
   971  089C  3475               	retlw	117	;'u'
   972  089D  346D               	retlw	109	;'m'
   973  089E  3465               	retlw	101	;'e'
   974  089F  3464               	retlw	100	;'d'
   975  08A0  3461               	retlw	97	;'a'
   976  08A1  3464               	retlw	100	;'d'
   977  08A2  343A               	retlw	58	;':'
   978  08A3  3400               	retlw	0
   979  08A4                     STR_17:	
   980  08A4  3445               	retlw	69	;'E'
   981  08A5  3452               	retlw	82	;'R'
   982  08A6  3452               	retlw	82	;'R'
   983  08A7  344F               	retlw	79	;'O'
   984  08A8  3452               	retlw	82	;'R'
   985  08A9  3400               	retlw	0
   986  08AA                     STR_11:	
   987  08AA  342D               	retlw	45	;'-'
   988  08AB  342D               	retlw	45	;'-'
   989  08AC  342D               	retlw	45	;'-'
   990  08AD  342D               	retlw	45	;'-'
   991  08AE  3400               	retlw	0
   992  08AF                     STR_8:	
   993  08AF  3441               	retlw	65	;'A'
   994  08B0  3474               	retlw	116	;'t'
   995  08B1  3472               	retlw	114	;'r'
   996  08B2  3400               	retlw	0
   997  08B3                     STR_15:	
   998  08B3  3478               	retlw	120	;'x'
   999  08B4  3420               	retlw	32	;' '
  1000  08B5  3400               	retlw	0
  1001  08B6                     STR_1:	
  1002  08B6  3432               	retlw	50	;'2'
  1003  08B7  3430               	retlw	48	;'0'
  1004  08B8  3400               	retlw	0
  1005  08B9                     STR_10:	
  1006  08B9  3463               	retlw	99	;'c'
  1007  08BA  346D               	retlw	109	;'m'
  1008  08BB  3400               	retlw	0
  1009  08AA                     
  1010                           ; #config settings
  1011  0000                     
  1012                           	psect	cinit
  1013  000F                     start_initialization:	
  1014  000F                     __initialization:	
  1015                           
  1016                           ; Initialize objects allocated to BANK0
  1017  000F  1383               	bcf	3,7	;select IRP bank0
  1018  0010  3070               	movlw	low (__pdataBANK0+10)
  1019  0011  00FD               	movwf	btemp+-1
  1020  0012  3013               	movlw	high __pidataBANK0
  1021  0013  00FE               	movwf	btemp
  1022  0014  3083               	movlw	low __pidataBANK0
  1023  0015  00FF               	movwf	btemp+1
  1024  0016  3066               	movlw	low __pdataBANK0
  1025  0017  0084               	movwf	4
  1026  0018  160A  118A  23A2   	fcall	init_ram0
  1027                           
  1028                           ; Clear objects allocated to BANK1
  1029  001B  1683               	bsf	3,5	;RP0=1, select bank1
  1030  001C  1303               	bcf	3,6	;RP1=0, select bank1
  1031  001D  01A0               	clrf	__pbssBANK1& (0+127)
  1032  001E  01A1               	clrf	(__pbssBANK1+1)& (0+127)
  1033  001F  01A2               	clrf	(__pbssBANK1+2)& (0+127)
  1034  0020  01A3               	clrf	(__pbssBANK1+3)& (0+127)
  1035  0021  01A4               	clrf	(__pbssBANK1+4)& (0+127)
  1036  0022  01A5               	clrf	(__pbssBANK1+5)& (0+127)
  1037                           
  1038                           ; Clear objects allocated to BANK0
  1039  0023  1283               	bcf	3,5	;RP0=0, select bank0
  1040  0024  1303               	bcf	3,6	;RP1=0, select bank0
  1041  0025  01DA               	clrf	__pbssBANK0& (0+127)
  1042  0026  01DB               	clrf	(__pbssBANK0+1)& (0+127)
  1043  0027  01DC               	clrf	(__pbssBANK0+2)& (0+127)
  1044  0028  01DD               	clrf	(__pbssBANK0+3)& (0+127)
  1045  0029  01DE               	clrf	(__pbssBANK0+4)& (0+127)
  1046  002A  01DF               	clrf	(__pbssBANK0+5)& (0+127)
  1047  002B  01E0               	clrf	(__pbssBANK0+6)& (0+127)
  1048  002C  01E1               	clrf	(__pbssBANK0+7)& (0+127)
  1049  002D  01E2               	clrf	(__pbssBANK0+8)& (0+127)
  1050  002E  01E3               	clrf	(__pbssBANK0+9)& (0+127)
  1051  002F  01E4               	clrf	(__pbssBANK0+10)& (0+127)
  1052  0030  01E5               	clrf	(__pbssBANK0+11)& (0+127)
  1053                           
  1054                           ; Clear objects allocated to COMMON
  1055  0031  01FA               	clrf	__pbssCOMMON& (0+127)
  1056  0032  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1057  0033                     end_of_initialization:	
  1058                           ;End of C runtime variable initialization code
  1059                           
  1060  0033                     __end_of__initialization:	
  1061  0033  0183               	clrf	3
  1062  0034  120A  158A  2A4A   	ljmp	_main	;jump to C main() function
  1063                           
  1064                           	psect	bssCOMMON
  1065  007A                     __pbssCOMMON:	
  1066  007A                     _seg:	
  1067  007A                     	ds	1
  1068  007B                     _estado:	
  1069  007B                     	ds	1
  1070                           
  1071                           	psect	bssBANK0
  1072  005A                     __pbssBANK0:	
  1073  005A                     _accZ:	
  1074  005A                     	ds	2
  1075  005C                     _sprintbuffer:	
  1076  005C                     	ds	1
  1077  005D                     _ancho:	
  1078  005D                     	ds	1
  1079  005E                     _largo:	
  1080  005E                     	ds	1
  1081  005F                     _banderaPUSH2:	
  1082  005F                     	ds	1
  1083  0060                     _banderaPUSH1:	
  1084  0060                     	ds	1
  1085  0061                     _banderaBoton:	
  1086  0061                     	ds	1
  1087  0062                     _obj_array:	
  1088  0062                     	ds	1
  1089  0063                     _temperatura_obj:	
  1090  0063                     	ds	1
  1091  0064                     _temperatura:	
  1092  0064                     	ds	1
  1093  0065                     _velocidad:	
  1094  0065                     	ds	1
  1095                           
  1096                           	psect	dataBANK0
  1097  0066                     __pdataBANK0:	
  1098  0066                     _d_atras:	
  1099  0066                     	ds	1
  1100  0067                     _d_frente:	
  1101  0067                     	ds	1
  1102  0068                     _inclinacion:	
  1103  0068                     	ds	1
  1104  0069                     _humedad:	
  1105  0069                     	ds	1
  1106  006A                     _jahr:	
  1107  006A                     	ds	1
  1108  006B                     _mes:	
  1109  006B                     	ds	1
  1110  006C                     _datum:	
  1111  006C                     	ds	1
  1112  006D                     _dia:	
  1113  006D                     	ds	1
  1114  006E                     _hora:	
  1115  006E                     	ds	1
  1116  006F                     _min:	
  1117  006F                     	ds	1
  1118                           
  1119                           	psect	bssBANK1
  1120  00A0                     __pbssBANK1:	
  1121  00A0                     uint_to_array@F1343:	
  1122  00A0                     	ds	6
  1123                           
  1124                           	psect	inittext
  1125  139E                     init_fetch0:	
  1126                           ;	Called with low address in FSR and high address in W
  1127                           
  1128  139E  087E               	movf	126,w
  1129  139F  008A               	movwf	10
  1130  13A0  087F               	movf	127,w
  1131  13A1  0082               	movwf	2
  1132  13A2                     init_ram0:	
  1133                           ;Called with:
  1134                           ;	high address of idata address in btemp 
  1135                           ;	low address of idata address in btemp+1 
  1136                           ;	low address of data in FSR
  1137                           ;	high address + 1 of data in btemp-1
  1138                           
  1139  13A2  239E  160A  118A   	fcall	init_fetch0
  1140  13A5  0080               	movwf	0
  1141  13A6  0A84               	incf	4,f
  1142  13A7  0804               	movf	4,w
  1143  13A8  067D               	xorwf	125,w
  1144  13A9  1903               	btfsc	3,2
  1145  13AA  3400               	retlw	0
  1146  13AB  0AFF               	incf	127,f
  1147  13AC  1903               	btfsc	3,2
  1148  13AD  0AFE               	incf	126,f
  1149  13AE  2BA2               	goto	init_ram0
  1150                           
  1151                           	psect	cstackCOMMON
  1152  0070                     __pcstackCOMMON:	
  1153  0070                     ?_SetUp:	
  1154  0070                     ?_get_Time:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157  0070                     ?_mostrarLCD:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160  0070                     ?_pressBoton1:	
  1161                           ; 1 bytes @ 0x0
  1162                           
  1163  0070                     ?_pressBoton2:	
  1164                           ; 1 bytes @ 0x0
  1165                           
  1166  0070                     ?_uartTX_Write:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169  0070                     ?_LCD_init:	
  1170                           ; 1 bytes @ 0x0
  1171                           
  1172  0070                     ?_LCD_clear:	
  1173                           ; 1 bytes @ 0x0
  1174                           
  1175  0070                     ?_IMU_init:	
  1176                           ; 1 bytes @ 0x0
  1177                           
  1178  0070                     ?_LCD_Write_Character:	
  1179                           ; 1 bytes @ 0x0
  1180                           
  1181  0070                     ?_LCD_Write_String:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184  0070                     ?_uint_to_array:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187  0070                     ?_I2C_Master_Start:	
  1188                           ; 1 bytes @ 0x0
  1189                           
  1190  0070                     ?_I2C_Master_Stop:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193  0070                     ?_ISR:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196  0070                     ??_ISR:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199  0070                     ?_main:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  0070                     ?_BCD_a_DEC:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0070                     ?_I2C_Master_Wait:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208  0070                     ?_LCD_Cmd:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211                           
  1212                           ; 1 bytes @ 0x0
  1213  0070                     	ds	2
  1214  0072                     ?_ver_inclinacion:	
  1215  0072                     ??_uartTX_Write:	
  1216                           ; 1 bytes @ 0x2
  1217                           
  1218  0072                     ?_OSC_config:	
  1219                           ; 1 bytes @ 0x2
  1220                           
  1221  0072                     ?_uart_init:	
  1222                           ; 1 bytes @ 0x2
  1223                           
  1224  0072                     ??_LCD_Write_Character:	
  1225                           ; 1 bytes @ 0x2
  1226                           
  1227  0072                     ??_I2C_Master_Start:	
  1228                           ; 1 bytes @ 0x2
  1229                           
  1230  0072                     ?_I2C_Master_Write:	
  1231                           ; 1 bytes @ 0x2
  1232                           
  1233  0072                     ??_I2C_Master_Stop:	
  1234                           ; 1 bytes @ 0x2
  1235                           
  1236  0072                     ??_I2C_Master_Wait:	
  1237                           ; 1 bytes @ 0x2
  1238                           
  1239  0072                     ??_LCD_Cmd:	
  1240                           ; 1 bytes @ 0x2
  1241                           
  1242  0072                     ?___bmul:	
  1243                           ; 1 bytes @ 0x2
  1244                           
  1245  0072                     ?_I2C_Master_Read:	
  1246                           ; 1 bytes @ 0x2
  1247                           
  1248  0072                     ?___wmul:	
  1249                           ; 2 bytes @ 0x2
  1250                           
  1251  0072                     ?___awmod:	
  1252                           ; 2 bytes @ 0x2
  1253                           
  1254  0072                     ?___lwdiv:	
  1255                           ; 2 bytes @ 0x2
  1256                           
  1257  0072                     ?___lldiv:	
  1258                           ; 2 bytes @ 0x2
  1259                           
  1260  0072                     uartTX_Write@dato:	
  1261                           ; 4 bytes @ 0x2
  1262                           
  1263  0072                     ___bmul@multiplicand:	
  1264                           ; 1 bytes @ 0x2
  1265                           
  1266  0072                     ver_inclinacion@valor:	
  1267                           ; 1 bytes @ 0x2
  1268                           
  1269  0072                     I2C_Master_Write@d:	
  1270                           ; 2 bytes @ 0x2
  1271                           
  1272  0072                     I2C_Master_Read@a:	
  1273                           ; 2 bytes @ 0x2
  1274                           
  1275  0072                     ___wmul@multiplier:	
  1276                           ; 2 bytes @ 0x2
  1277                           
  1278  0072                     ___awmod@divisor:	
  1279                           ; 2 bytes @ 0x2
  1280                           
  1281  0072                     ___lwdiv@divisor:	
  1282                           ; 2 bytes @ 0x2
  1283                           
  1284  0072                     OSC_config@frecuencia:	
  1285                           ; 2 bytes @ 0x2
  1286                           
  1287  0072                     ___lldiv@divisor:	
  1288                           ; 4 bytes @ 0x2
  1289                           
  1290                           
  1291                           ; 4 bytes @ 0x2
  1292  0072                     	ds	1
  1293  0073                     ??___bmul:	
  1294  0073                     LCD_Write_Character@caracter:	
  1295                           ; 1 bytes @ 0x3
  1296                           
  1297                           
  1298                           ; 1 bytes @ 0x3
  1299  0073                     	ds	1
  1300  0074                     ??_ver_inclinacion:	
  1301  0074                     ??_uart_init:	
  1302                           ; 1 bytes @ 0x4
  1303                           
  1304  0074                     ??_IMU_init:	
  1305                           ; 1 bytes @ 0x4
  1306                           
  1307  0074                     ??_LCD_Write_String:	
  1308                           ; 1 bytes @ 0x4
  1309                           
  1310  0074                     ??_I2C_Master_Write:	
  1311                           ; 1 bytes @ 0x4
  1312                           
  1313  0074                     ??_I2C_Master_Read:	
  1314                           ; 1 bytes @ 0x4
  1315                           
  1316  0074                     LCD_Cmd@comando:	
  1317                           ; 1 bytes @ 0x4
  1318                           
  1319  0074                     ___bmul@product:	
  1320                           ; 1 bytes @ 0x4
  1321                           
  1322  0074                     LCD_Write_String@n:	
  1323                           ; 1 bytes @ 0x4
  1324                           
  1325  0074                     ___wmul@multiplicand:	
  1326                           ; 2 bytes @ 0x4
  1327                           
  1328  0074                     ___awmod@dividend:	
  1329                           ; 2 bytes @ 0x4
  1330                           
  1331  0074                     ___lwdiv@dividend:	
  1332                           ; 2 bytes @ 0x4
  1333                           
  1334                           
  1335                           ; 2 bytes @ 0x4
  1336  0074                     	ds	1
  1337  0075                     ??_LCD_init:	
  1338  0075                     ?_LCD_Create_Char:	
  1339                           ; 1 bytes @ 0x5
  1340                           
  1341  0075                     ??_LCD_clear:	
  1342                           ; 1 bytes @ 0x5
  1343                           
  1344  0075                     ?_LCD_Set_Cursor:	
  1345                           ; 1 bytes @ 0x5
  1346                           
  1347  0075                     ver_inclinacion@posicion:	
  1348                           ; 1 bytes @ 0x5
  1349                           
  1350  0075                     LCD_Set_Cursor@columna:	
  1351                           ; 1 bytes @ 0x5
  1352                           
  1353  0075                     LCD_Create_Char@chardata:	
  1354                           ; 1 bytes @ 0x5
  1355                           
  1356  0075                     ___bmul@multiplier:	
  1357                           ; 1 bytes @ 0x5
  1358                           
  1359                           
  1360                           ; 1 bytes @ 0x5
  1361  0075                     	ds	1
  1362  0076                     ??_OSC_config:	
  1363  0076                     ??_LCD_Create_Char:	
  1364                           ; 1 bytes @ 0x6
  1365                           
  1366  0076                     ??_LCD_Set_Cursor:	
  1367                           ; 1 bytes @ 0x6
  1368                           
  1369  0076                     ??_BCD_a_DEC:	
  1370                           ; 1 bytes @ 0x6
  1371                           
  1372  0076                     ??___wmul:	
  1373                           ; 1 bytes @ 0x6
  1374                           
  1375  0076                     ??___awmod:	
  1376                           ; 1 bytes @ 0x6
  1377                           
  1378  0076                     ??___lwdiv:	
  1379                           ; 1 bytes @ 0x6
  1380                           
  1381  0076                     LCD_Write_String@a:	
  1382                           ; 1 bytes @ 0x6
  1383                           
  1384  0076                     I2C_Master_Read@temp:	
  1385                           ; 1 bytes @ 0x6
  1386                           
  1387  0076                     ___wmul@product:	
  1388                           ; 2 bytes @ 0x6
  1389                           
  1390  0076                     ___lldiv@dividend:	
  1391                           ; 2 bytes @ 0x6
  1392                           
  1393                           
  1394                           ; 4 bytes @ 0x6
  1395  0076                     	ds	1
  1396  0077                     ??_pressBoton1:	
  1397  0077                     LCD_Create_Char@charnum:	
  1398                           ; 1 bytes @ 0x7
  1399                           
  1400  0077                     ___awmod@counter:	
  1401                           ; 1 bytes @ 0x7
  1402                           
  1403  0077                     ___lwdiv@quotient:	
  1404                           ; 1 bytes @ 0x7
  1405                           
  1406                           
  1407                           ; 2 bytes @ 0x7
  1408  0077                     	ds	1
  1409  0078                     ??___awdiv:	
  1410  0078                     ?_Acc_Z:	
  1411                           ; 1 bytes @ 0x8
  1412                           
  1413  0078                     LCD_Set_Cursor@linea:	
  1414                           ; 2 bytes @ 0x8
  1415                           
  1416  0078                     LCD_Create_Char@n:	
  1417                           ; 1 bytes @ 0x8
  1418                           
  1419  0078                     ___awmod@sign:	
  1420                           ; 1 bytes @ 0x8
  1421                           
  1422                           
  1423                           ; 1 bytes @ 0x8
  1424  0078                     	ds	1
  1425  0079                     BCD_a_DEC@numBCD:	
  1426  0079                     LCD_Set_Cursor@corrimiento:	
  1427                           ; 1 bytes @ 0x9
  1428                           
  1429  0079                     ___lwdiv@counter:	
  1430                           ; 1 bytes @ 0x9
  1431                           
  1432                           
  1433                           ; 1 bytes @ 0x9
  1434  0079                     	ds	1
  1435                           
  1436                           	psect	cstackBANK0
  1437  0020                     __pcstackBANK0:	
  1438  0020                     ??_get_Time:	
  1439  0020                     ??_Acc_Z:	
  1440                           ; 1 bytes @ 0x0
  1441                           
  1442  0020                     ??_pressBoton2:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0020                     ??___lldiv:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448  0020                     ?___awdiv:	
  1449                           ; 1 bytes @ 0x0
  1450                           
  1451  0020                     ?___xxtofl:	
  1452                           ; 2 bytes @ 0x0
  1453                           
  1454  0020                     ___awdiv@divisor:	
  1455                           ; 4 bytes @ 0x0
  1456                           
  1457  0020                     ___xxtofl@val:	
  1458                           ; 2 bytes @ 0x0
  1459                           
  1460                           
  1461                           ; 4 bytes @ 0x0
  1462  0020                     	ds	1
  1463  0021                     ___lldiv@quotient:	
  1464                           
  1465                           ; 4 bytes @ 0x1
  1466  0021                     	ds	1
  1467  0022                     Acc_Z@acc:	
  1468  0022                     ___awdiv@dividend:	
  1469                           ; 2 bytes @ 0x2
  1470                           
  1471                           
  1472                           ; 2 bytes @ 0x2
  1473  0022                     	ds	2
  1474  0024                     ??___xxtofl:	
  1475  0024                     ___awdiv@counter:	
  1476                           ; 1 bytes @ 0x4
  1477                           
  1478                           
  1479                           ; 1 bytes @ 0x4
  1480  0024                     	ds	1
  1481  0025                     ___lldiv@counter:	
  1482  0025                     ___awdiv@sign:	
  1483                           ; 1 bytes @ 0x5
  1484                           
  1485                           
  1486                           ; 1 bytes @ 0x5
  1487  0025                     	ds	1
  1488  0026                     ?_I2C_Master_Init:	
  1489  0026                     ___awdiv@quotient:	
  1490                           ; 1 bytes @ 0x6
  1491                           
  1492  0026                     I2C_Master_Init@c:	
  1493                           ; 2 bytes @ 0x6
  1494                           
  1495                           
  1496                           ; 4 bytes @ 0x6
  1497  0026                     	ds	2
  1498  0028                     ??_uint_to_array:	
  1499  0028                     ?_display_Uhrzeit:	
  1500                           ; 1 bytes @ 0x8
  1501                           
  1502  0028                     ?_display_Datum:	
  1503                           ; 1 bytes @ 0x8
  1504                           
  1505  0028                     display_Uhrzeit@columna:	
  1506                           ; 1 bytes @ 0x8
  1507                           
  1508  0028                     display_Datum@columna:	
  1509                           ; 1 bytes @ 0x8
  1510                           
  1511  0028                     ___xxtofl@sign:	
  1512                           ; 1 bytes @ 0x8
  1513                           
  1514                           
  1515                           ; 1 bytes @ 0x8
  1516  0028                     	ds	1
  1517  0029                     ??_display_Uhrzeit:	
  1518  0029                     ??_display_Datum:	
  1519                           ; 1 bytes @ 0x9
  1520                           
  1521  0029                     ___xxtofl@exp:	
  1522                           ; 1 bytes @ 0x9
  1523                           
  1524                           
  1525                           ; 1 bytes @ 0x9
  1526  0029                     	ds	1
  1527  002A                     ??_I2C_Master_Init:	
  1528  002A                     ___xxtofl@arg:	
  1529                           ; 1 bytes @ 0xA
  1530                           
  1531                           
  1532                           ; 4 bytes @ 0xA
  1533  002A                     	ds	2
  1534  002C                     display_Uhrzeit@fila:	
  1535  002C                     display_Datum@fila:	
  1536                           ; 1 bytes @ 0xC
  1537                           
  1538                           
  1539                           ; 1 bytes @ 0xC
  1540  002C                     	ds	1
  1541  002D                     display_Uhrzeit@seg_u:	
  1542  002D                     display_Datum@dia_u:	
  1543                           ; 1 bytes @ 0xD
  1544                           
  1545                           
  1546                           ; 1 bytes @ 0xD
  1547  002D                     	ds	1
  1548  002E                     ??_SetUp:	
  1549  002E                     ?___fladd:	
  1550                           ; 1 bytes @ 0xE
  1551                           
  1552  002E                     display_Uhrzeit@seg_d:	
  1553                           ; 4 bytes @ 0xE
  1554                           
  1555  002E                     display_Datum@dia_d:	
  1556                           ; 1 bytes @ 0xE
  1557                           
  1558  002E                     uint_to_array@decenas:	
  1559                           ; 1 bytes @ 0xE
  1560                           
  1561  002E                     ___fladd@b:	
  1562                           ; 1 bytes @ 0xE
  1563                           
  1564                           
  1565                           ; 4 bytes @ 0xE
  1566  002E                     	ds	1
  1567  002F                     display_Uhrzeit@min_u:	
  1568  002F                     display_Datum@mes_u:	
  1569                           ; 1 bytes @ 0xF
  1570                           
  1571  002F                     uint_to_array@centenas:	
  1572                           ; 1 bytes @ 0xF
  1573                           
  1574                           
  1575                           ; 1 bytes @ 0xF
  1576  002F                     	ds	1
  1577  0030                     display_Uhrzeit@min_d:	
  1578  0030                     display_Datum@mes_d:	
  1579                           ; 1 bytes @ 0x10
  1580                           
  1581  0030                     uint_to_array@resultado:	
  1582                           ; 1 bytes @ 0x10
  1583                           
  1584                           
  1585                           ; 6 bytes @ 0x10
  1586  0030                     	ds	1
  1587  0031                     display_Uhrzeit@Uhr_u:	
  1588  0031                     display_Datum@jahr_u:	
  1589                           ; 1 bytes @ 0x11
  1590                           
  1591                           
  1592                           ; 1 bytes @ 0x11
  1593  0031                     	ds	1
  1594  0032                     display_Uhrzeit@Uhr_d:	
  1595  0032                     display_Datum@jahr_d:	
  1596                           ; 1 bytes @ 0x12
  1597                           
  1598  0032                     ___fladd@a:	
  1599                           ; 1 bytes @ 0x12
  1600                           
  1601                           
  1602                           ; 4 bytes @ 0x12
  1603  0032                     	ds	4
  1604  0036                     ??___fladd:	
  1605  0036                     uint_to_array@numero:	
  1606                           ; 1 bytes @ 0x16
  1607                           
  1608                           
  1609                           ; 1 bytes @ 0x16
  1610  0036                     	ds	1
  1611  0037                     ??_mostrarLCD:	
  1612                           
  1613                           ; 1 bytes @ 0x17
  1614  0037                     	ds	3
  1615  003A                     mostrarLCD@pantalla:	
  1616                           
  1617                           ; 1 bytes @ 0x1A
  1618  003A                     	ds	4
  1619  003E                     ___fladd@signs:	
  1620                           
  1621                           ; 1 bytes @ 0x1E
  1622  003E                     	ds	1
  1623  003F                     ___fladd@aexp:	
  1624                           
  1625                           ; 1 bytes @ 0x1F
  1626  003F                     	ds	1
  1627  0040                     ___fladd@bexp:	
  1628                           
  1629                           ; 1 bytes @ 0x20
  1630  0040                     	ds	1
  1631  0041                     ___fladd@grs:	
  1632                           
  1633                           ; 1 bytes @ 0x21
  1634  0041                     	ds	1
  1635  0042                     ?___fltol:	
  1636  0042                     ___fltol@f1:	
  1637                           ; 4 bytes @ 0x22
  1638                           
  1639                           
  1640                           ; 4 bytes @ 0x22
  1641  0042                     	ds	4
  1642  0046                     ??___fltol:	
  1643                           
  1644                           ; 1 bytes @ 0x26
  1645  0046                     	ds	5
  1646  004B                     ___fltol@sign1:	
  1647                           
  1648                           ; 1 bytes @ 0x2B
  1649  004B                     	ds	1
  1650  004C                     ___fltol@exp1:	
  1651                           
  1652                           ; 1 bytes @ 0x2C
  1653  004C                     	ds	1
  1654  004D                     ?_temp_ambiente:	
  1655  004D                     ?_temp_objeto:	
  1656                           ; 2 bytes @ 0x2D
  1657                           
  1658                           
  1659                           ; 2 bytes @ 0x2D
  1660  004D                     	ds	2
  1661  004F                     ??_temp_ambiente:	
  1662  004F                     ??_temp_objeto:	
  1663                           ; 1 bytes @ 0x2F
  1664                           
  1665                           
  1666                           ; 1 bytes @ 0x2F
  1667  004F                     	ds	5
  1668  0054                     temp_objeto@temp:	
  1669  0054                     temp_ambiente@temp:	
  1670                           ; 2 bytes @ 0x34
  1671                           
  1672                           
  1673                           ; 2 bytes @ 0x34
  1674  0054                     	ds	2
  1675  0056                     temp_objeto@temp_LSB:	
  1676  0056                     temp_ambiente@temp_LSB:	
  1677                           ; 1 bytes @ 0x36
  1678                           
  1679                           
  1680                           ; 1 bytes @ 0x36
  1681  0056                     	ds	1
  1682  0057                     temp_objeto@temp_MSB:	
  1683  0057                     temp_ambiente@temp_MSB:	
  1684                           ; 2 bytes @ 0x37
  1685                           
  1686                           
  1687                           ; 2 bytes @ 0x37
  1688  0057                     	ds	2
  1689  0059                     ??_main:	
  1690                           
  1691                           ; 1 bytes @ 0x39
  1692  0059                     	ds	1
  1693                           
  1694                           	psect	maintext
  1695  0A4A                     __pmaintext:	
  1696 ;;
  1697 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1698 ;;
  1699 ;; *************** function _main *****************
  1700 ;; Defined at:
  1701 ;;		line 140 in file "main_Master.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : B00/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1715 ;;      Params:         0       0       0       0       0
  1716 ;;      Locals:         0       0       0       0       0
  1717 ;;      Temps:          0       1       0       0       0
  1718 ;;      Totals:         0       1       0       0       0
  1719 ;;Total ram usage:        1 bytes
  1720 ;; Hardware stack levels required when called:    5
  1721 ;; This function calls:
  1722 ;;		_Acc_Z
  1723 ;;		_SetUp
  1724 ;;		_get_Time
  1725 ;;		_mostrarLCD
  1726 ;;		_pressBoton1
  1727 ;;		_pressBoton2
  1728 ;;		_temp_ambiente
  1729 ;;		_temp_objeto
  1730 ;;		_uartTX_Write
  1731 ;;		_ver_inclinacion
  1732 ;; This function is called by:
  1733 ;;		Startup code after reset
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           
  1738                           ;psect for function _main
  1739  0A4A                     _main:	
  1740                           
  1741                           ;main_Master.c: 141:     SetUp();
  1742                           
  1743                           ;incstack = 0
  1744                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1745  0A4A  120A  158A  21BF  120A  158A  	fcall	_SetUp
  1746  0A4F                     l5038:	
  1747                           
  1748                           ;main_Master.c: 144:         get_Time();
  1749  0A4F  120A  118A  258A  120A  158A  	fcall	_get_Time
  1750                           
  1751                           ;main_Master.c: 145:         temperatura = temp_ambiente();
  1752  0A54  120A  158A  242B  120A  158A  	fcall	_temp_ambiente
  1753  0A59  1283               	bcf	3,5	;RP0=0, select bank0
  1754  0A5A  1303               	bcf	3,6	;RP1=0, select bank0
  1755  0A5B  084D               	movf	?_temp_ambiente,w
  1756  0A5C  00D9               	movwf	??_main
  1757  0A5D  0859               	movf	??_main,w
  1758  0A5E  00E4               	movwf	_temperatura
  1759                           
  1760                           ;main_Master.c: 146:         temperatura_obj = temp_objeto();
  1761  0A5F  120A  158A  24E1  120A  158A  	fcall	_temp_objeto
  1762  0A64  1283               	bcf	3,5	;RP0=0, select bank0
  1763  0A65  1303               	bcf	3,6	;RP1=0, select bank0
  1764  0A66  084D               	movf	?_temp_objeto,w
  1765  0A67  00D9               	movwf	??_main
  1766  0A68  0859               	movf	??_main,w
  1767  0A69  00E3               	movwf	_temperatura_obj
  1768                           
  1769                           ;main_Master.c: 147:         accZ = Acc_Z();
  1770  0A6A  160A  118A  277C  120A  158A  	fcall	_Acc_Z
  1771  0A6F  0879               	movf	?_Acc_Z+1,w
  1772  0A70  1283               	bcf	3,5	;RP0=0, select bank0
  1773  0A71  1303               	bcf	3,6	;RP1=0, select bank0
  1774  0A72  00DB               	movwf	_accZ+1
  1775  0A73  0878               	movf	?_Acc_Z,w
  1776  0A74  00DA               	movwf	_accZ
  1777                           
  1778                           ;main_Master.c: 148:         inclinacion = ver_inclinacion(accZ);
  1779  0A75  085B               	movf	_accZ+1,w
  1780  0A76  00F3               	movwf	ver_inclinacion@valor+1
  1781  0A77  085A               	movf	_accZ,w
  1782  0A78  00F2               	movwf	ver_inclinacion@valor
  1783  0A79  160A  118A  252F  120A  158A  	fcall	_ver_inclinacion
  1784  0A7E  1283               	bcf	3,5	;RP0=0, select bank0
  1785  0A7F  1303               	bcf	3,6	;RP1=0, select bank0
  1786  0A80  00D9               	movwf	??_main
  1787  0A81  0859               	movf	??_main,w
  1788  0A82  00E8               	movwf	_inclinacion
  1789                           
  1790                           ;main_Master.c: 150:         mostrarLCD(estado);
  1791  0A83  087B               	movf	_estado,w
  1792  0A84  120A  118A  2037  120A  158A  	fcall	_mostrarLCD
  1793                           
  1794                           ;main_Master.c: 151:         pressBoton1();
  1795  0A89  120A  158A  20CB  120A  158A  	fcall	_pressBoton1
  1796                           
  1797                           ;main_Master.c: 152:         pressBoton2();
  1798  0A8E  120A  118A  2756  120A  158A  	fcall	_pressBoton2
  1799                           
  1800                           ;main_Master.c: 154:         uartTX_Write(125);
  1801  0A93  307D               	movlw	125
  1802  0A94  160A  118A  2379  120A  158A  	fcall	_uartTX_Write
  1803                           
  1804                           ;main_Master.c: 155:         uartTX_Write(hora);
  1805  0A99  1283               	bcf	3,5	;RP0=0, select bank0
  1806  0A9A  1303               	bcf	3,6	;RP1=0, select bank0
  1807  0A9B  086E               	movf	_hora,w
  1808  0A9C  160A  118A  2379  120A  158A  	fcall	_uartTX_Write
  1809                           
  1810                           ;main_Master.c: 156:         uartTX_Write(min);
  1811  0AA1  1283               	bcf	3,5	;RP0=0, select bank0
  1812  0AA2  1303               	bcf	3,6	;RP1=0, select bank0
  1813  0AA3  086F               	movf	_min,w
  1814  0AA4  160A  118A  2379  120A  158A  	fcall	_uartTX_Write
  1815                           
  1816                           ;main_Master.c: 157:         uartTX_Write(seg);
  1817  0AA9  087A               	movf	_seg,w
  1818  0AAA  160A  118A  2379  120A  158A  	fcall	_uartTX_Write
  1819                           
  1820                           ;main_Master.c: 158:         uartTX_Write(temperatura);
  1821  0AAF  1283               	bcf	3,5	;RP0=0, select bank0
  1822  0AB0  1303               	bcf	3,6	;RP1=0, select bank0
  1823  0AB1  0864               	movf	_temperatura,w
  1824  0AB2  160A  118A  2379  120A  158A  	fcall	_uartTX_Write
  1825                           
  1826                           ;main_Master.c: 159:         uartTX_Write(temperatura_obj);
  1827  0AB7  1283               	bcf	3,5	;RP0=0, select bank0
  1828  0AB8  1303               	bcf	3,6	;RP1=0, select bank0
  1829  0AB9  0863               	movf	_temperatura_obj,w
  1830  0ABA  160A  118A  2379  120A  158A  	fcall	_uartTX_Write
  1831                           
  1832                           ;main_Master.c: 160:         uartTX_Write(inclinacion);
  1833  0ABF  1283               	bcf	3,5	;RP0=0, select bank0
  1834  0AC0  1303               	bcf	3,6	;RP1=0, select bank0
  1835  0AC1  0868               	movf	_inclinacion,w
  1836  0AC2  160A  118A  2379  120A  158A  	fcall	_uartTX_Write
  1837                           
  1838                           ;main_Master.c: 161:         uartTX_Write(humedad);
  1839  0AC7  3005               	movlw	5
  1840  0AC8  160A  118A  2379  120A  158A  	fcall	_uartTX_Write
  1841                           
  1842                           ;main_Master.c: 162:         uartTX_Write(d_frente);
  1843  0ACD  3066               	movlw	102
  1844  0ACE  160A  118A  2379  120A  158A  	fcall	_uartTX_Write
  1845                           
  1846                           ;main_Master.c: 163:         uartTX_Write(d_atras);
  1847  0AD3  3066               	movlw	102
  1848  0AD4  160A  118A  2379  120A  158A  	fcall	_uartTX_Write
  1849  0AD9  2A4F               	goto	l5038
  1850  0ADA                     __end_of_main:	
  1851                           
  1852                           	psect	text1
  1853  152F                     __ptext1:	
  1854 ;; *************** function _ver_inclinacion *****************
  1855 ;; Defined at:
  1856 ;;		line 539 in file "main_Master.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;  valor           2    2[COMMON] int 
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;  posicion        1    5[COMMON] unsigned char 
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      unsigned char 
  1863 ;; Registers used:
  1864 ;;		wreg, status,2, btemp+1
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1870 ;;      Params:         2       0       0       0       0
  1871 ;;      Locals:         1       0       0       0       0
  1872 ;;      Temps:          1       0       0       0       0
  1873 ;;      Totals:         4       0       0       0       0
  1874 ;;Total ram usage:        4 bytes
  1875 ;; Hardware stack levels used:    1
  1876 ;; Hardware stack levels required when called:    1
  1877 ;; This function calls:
  1878 ;;		Nothing
  1879 ;; This function is called by:
  1880 ;;		_main
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           
  1885                           ;psect for function _ver_inclinacion
  1886  152F                     _ver_inclinacion:	
  1887                           
  1888                           ;main_Master.c: 540:     uint8_t posicion = 0;
  1889                           
  1890                           ;incstack = 0
  1891                           ; Regs used in _ver_inclinacion: [wreg+status,2+btemp+1]
  1892  152F  01F5               	clrf	ver_inclinacion@posicion
  1893                           
  1894                           ;main_Master.c: 541:     if (valor>1900){
  1895  1530  0873               	movf	ver_inclinacion@valor+1,w
  1896  1531  3A80               	xorlw	128
  1897  1532  00FF               	movwf	127
  1898  1533  3087               	movlw	135
  1899  1534  027F               	subwf	127,w
  1900  1535  1D03               	skipz
  1901  1536  2D39               	goto	u2705
  1902  1537  306D               	movlw	109
  1903  1538  0272               	subwf	ver_inclinacion@valor,w
  1904  1539                     u2705:	
  1905  1539  1C03               	skipc
  1906  153A  2D3D               	goto	l3690
  1907                           
  1908                           ;main_Master.c: 542:         posicion = 0;
  1909  153B  01F5               	clrf	ver_inclinacion@posicion
  1910                           
  1911                           ;main_Master.c: 543:     }
  1912  153C  2D64               	goto	l246
  1913  153D                     l3690:	
  1914  153D  0873               	movf	ver_inclinacion@valor+1,w
  1915  153E  3A80               	xorlw	128
  1916  153F  00FF               	movwf	127
  1917  1540  3087               	movlw	135
  1918  1541  027F               	subwf	127,w
  1919  1542  1D03               	skipz
  1920  1543  2D46               	goto	u2715
  1921  1544  306C               	movlw	108
  1922  1545  0272               	subwf	ver_inclinacion@valor,w
  1923  1546                     u2715:	
  1924  1546  1803               	skipnc
  1925  1547  2D55               	goto	l3696
  1926  1548  0873               	movf	ver_inclinacion@valor+1,w
  1927  1549  3A80               	xorlw	128
  1928  154A  00FF               	movwf	127
  1929  154B  307C               	movlw	124
  1930  154C  027F               	subwf	127,w
  1931  154D  1D03               	skipz
  1932  154E  2D51               	goto	u2725
  1933  154F  30E1               	movlw	225
  1934  1550  0272               	subwf	ver_inclinacion@valor,w
  1935  1551                     u2725:	
  1936  1551  1C03               	skipc
  1937  1552  2D55               	goto	l3696
  1938                           
  1939                           ;main_Master.c: 545:         posicion = 90;
  1940  1553  305A               	movlw	90
  1941  1554  2D61               	goto	L1
  1942  1555                     l3696:	
  1943                           ;main_Master.c: 546:     }
  1944                           
  1945  1555  0873               	movf	ver_inclinacion@valor+1,w
  1946  1556  3A80               	xorlw	128
  1947  1557  00FF               	movwf	127
  1948  1558  307C               	movlw	124
  1949  1559  027F               	subwf	127,w
  1950  155A  1D03               	skipz
  1951  155B  2D5E               	goto	u2735
  1952  155C  30E0               	movlw	224
  1953  155D  0272               	subwf	ver_inclinacion@valor,w
  1954  155E                     u2735:	
  1955  155E  1803               	skipnc
  1956  155F  2D64               	goto	l246
  1957                           
  1958                           ;main_Master.c: 548:         posicion = 180;
  1959  1560  30B4               	movlw	180
  1960  1561                     L1:	
  1961  1561  00F4               	movwf	??_ver_inclinacion
  1962  1562  0874               	movf	??_ver_inclinacion,w
  1963  1563  00F5               	movwf	ver_inclinacion@posicion
  1964  1564                     l246:	
  1965                           
  1966                           ;main_Master.c: 550:     return posicion;
  1967  1564  0875               	movf	ver_inclinacion@posicion,w
  1968  1565  0008               	return
  1969  1566                     __end_of_ver_inclinacion:	
  1970                           
  1971                           	psect	text2
  1972  1379                     __ptext2:	
  1973 ;; *************** function _uartTX_Write *****************
  1974 ;; Defined at:
  1975 ;;		line 33 in file "UART.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;  dato            1    wreg     unsigned char 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;  dato            1    2[COMMON] unsigned char 
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1989 ;;      Params:         0       0       0       0       0
  1990 ;;      Locals:         1       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0
  1992 ;;      Totals:         1       0       0       0       0
  1993 ;;Total ram usage:        1 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:    1
  1996 ;; This function calls:
  1997 ;;		Nothing
  1998 ;; This function is called by:
  1999 ;;		_main
  2000 ;;		_uartTX_Write_Str
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           
  2005                           ;psect for function _uartTX_Write
  2006  1379                     _uartTX_Write:	
  2007                           
  2008                           ;incstack = 0
  2009                           ; Regs used in _uartTX_Write: [wreg]
  2010                           ;uartTX_Write@dato stored from wreg
  2011  1379  00F2               	movwf	uartTX_Write@dato
  2012  137A                     l446:	
  2013                           ;UART.c: 34:     while(!TRMT);
  2014                           
  2015  137A  1683               	bsf	3,5	;RP0=1, select bank1
  2016  137B  1303               	bcf	3,6	;RP1=0, select bank1
  2017  137C  1C98               	btfss	24,1	;volatile
  2018  137D  2B7A               	goto	l446
  2019                           
  2020                           ;UART.c: 35:     TXREG = dato;
  2021  137E  0872               	movf	uartTX_Write@dato,w
  2022  137F  1283               	bcf	3,5	;RP0=0, select bank0
  2023  1380  1303               	bcf	3,6	;RP1=0, select bank0
  2024  1381  0099               	movwf	25	;volatile
  2025  1382  0008               	return
  2026  1383                     __end_of_uartTX_Write:	
  2027                           
  2028                           	psect	text3
  2029  0CE1                     __ptext3:	
  2030 ;; *************** function _temp_objeto *****************
  2031 ;; Defined at:
  2032 ;;		line 16 in file "Temperatura_I2C.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;		None
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  temp_MSB        2   55[BANK0 ] unsigned int 
  2037 ;;  temp            2   52[BANK0 ] unsigned int 
  2038 ;;  temp_LSB        1   54[BANK0 ] unsigned char 
  2039 ;;  PEC             1    0        unsigned char 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  2   45[BANK0 ] int 
  2042 ;; Registers used:
  2043 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2049 ;;      Params:         0       2       0       0       0
  2050 ;;      Locals:         0       6       0       0       0
  2051 ;;      Temps:          0       4       0       0       0
  2052 ;;      Totals:         0      12       0       0       0
  2053 ;;Total ram usage:       12 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    3
  2056 ;; This function calls:
  2057 ;;		_I2C_Master_Read
  2058 ;;		_I2C_Master_Start
  2059 ;;		_I2C_Master_Stop
  2060 ;;		_I2C_Master_Write
  2061 ;;		___fladd
  2062 ;;		___fltol
  2063 ;;		___lwdiv
  2064 ;;		___xxtofl
  2065 ;; This function is called by:
  2066 ;;		_main
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           
  2071                           ;psect for function _temp_objeto
  2072  0CE1                     _temp_objeto:	
  2073                           
  2074                           ;Temperatura_I2C.c: 17:     uint16_t temp_MSB;;Temperatura_I2C.c: 18:     uint8_t temp_L
      +                          SB;;Temperatura_I2C.c: 19:     uint8_t PEC;;Temperatura_I2C.c: 20:     uint16_t temp;;Te
      +                          mperatura_I2C.c: 21:     I2C_Master_Start();
  2075                           
  2076                           ;incstack = 0
  2077                           ; Regs used in _temp_objeto: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2078  0CE1  160A  118A  235A  120A  158A  	fcall	_I2C_Master_Start
  2079                           
  2080                           ;Temperatura_I2C.c: 22:     I2C_Master_Write(0x00);
  2081  0CE6  3000               	movlw	0
  2082  0CE7  00F2               	movwf	I2C_Master_Write@d
  2083  0CE8  00F3               	movwf	I2C_Master_Write@d+1
  2084  0CE9  160A  118A  2368  120A  158A  	fcall	_I2C_Master_Write
  2085                           
  2086                           ;Temperatura_I2C.c: 23:     I2C_Master_Write(0x07);
  2087  0CEE  3007               	movlw	7
  2088  0CEF  00F2               	movwf	I2C_Master_Write@d
  2089  0CF0  3000               	movlw	0
  2090  0CF1  00F3               	movwf	I2C_Master_Write@d+1
  2091  0CF2  160A  118A  2368  120A  158A  	fcall	_I2C_Master_Write
  2092                           
  2093                           ;Temperatura_I2C.c: 26:     I2C_Master_Start();
  2094  0CF7  160A  118A  235A  120A  158A  	fcall	_I2C_Master_Start
  2095                           
  2096                           ;Temperatura_I2C.c: 27:     I2C_Master_Write(0x01);
  2097  0CFC  3001               	movlw	1
  2098  0CFD  00F2               	movwf	I2C_Master_Write@d
  2099  0CFE  3000               	movlw	0
  2100  0CFF  00F3               	movwf	I2C_Master_Write@d+1
  2101  0D00  160A  118A  2368  120A  158A  	fcall	_I2C_Master_Write
  2102                           
  2103                           ;Temperatura_I2C.c: 28:     temp_LSB = I2C_Master_Read(0);
  2104  0D05  3000               	movlw	0
  2105  0D06  00F2               	movwf	I2C_Master_Read@a
  2106  0D07  00F3               	movwf	I2C_Master_Read@a+1
  2107  0D08  160A  118A  2446  120A  158A  	fcall	_I2C_Master_Read
  2108  0D0D  0872               	movf	?_I2C_Master_Read,w
  2109  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  2110  0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  2111  0D10  00CF               	movwf	??_temp_objeto
  2112  0D11  084F               	movf	??_temp_objeto,w
  2113  0D12  00D6               	movwf	temp_objeto@temp_LSB
  2114                           
  2115                           ;Temperatura_I2C.c: 29:     temp_MSB = I2C_Master_Read(0);
  2116  0D13  3000               	movlw	0
  2117  0D14  00F2               	movwf	I2C_Master_Read@a
  2118  0D15  00F3               	movwf	I2C_Master_Read@a+1
  2119  0D16  160A  118A  2446  120A  158A  	fcall	_I2C_Master_Read
  2120  0D1B  0873               	movf	?_I2C_Master_Read+1,w
  2121  0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  2122  0D1D  1303               	bcf	3,6	;RP1=0, select bank0
  2123  0D1E  00D8               	movwf	temp_objeto@temp_MSB+1
  2124  0D1F  0872               	movf	?_I2C_Master_Read,w
  2125  0D20  00D7               	movwf	temp_objeto@temp_MSB
  2126  0D21  3000               	movlw	0
  2127  0D22  00F2               	movwf	I2C_Master_Read@a
  2128  0D23  00F3               	movwf	I2C_Master_Read@a+1
  2129  0D24  160A  118A  2446  120A  158A  	fcall	_I2C_Master_Read
  2130                           
  2131                           ;Temperatura_I2C.c: 31:     I2C_Master_Stop();
  2132  0D29  160A  118A  2361  120A  158A  	fcall	_I2C_Master_Stop
  2133                           
  2134                           ;Temperatura_I2C.c: 32:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2135  0D2E  3041               	movlw	65
  2136  0D2F  1283               	bcf	3,5	;RP0=0, select bank0
  2137  0D30  1303               	bcf	3,6	;RP1=0, select bank0
  2138  0D31  00D0               	movwf	??_temp_objeto+1
  2139  0D32  30ED               	movlw	237
  2140  0D33  00CF               	movwf	??_temp_objeto
  2141  0D34                     u3457:	
  2142  0D34  0BCF               	decfsz	??_temp_objeto,f
  2143  0D35  2D34               	goto	u3457
  2144  0D36  0BD0               	decfsz	??_temp_objeto+1,f
  2145  0D37  2D34               	goto	u3457
  2146  0D38  2D39               	nop2
  2147                           
  2148                           ;Temperatura_I2C.c: 34:     temp_MSB = temp_MSB <<8;
  2149  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2150  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2151  0D3B  0857               	movf	temp_objeto@temp_MSB,w
  2152  0D3C  00D0               	movwf	??_temp_objeto+1
  2153  0D3D  01CF               	clrf	??_temp_objeto
  2154  0D3E  084F               	movf	??_temp_objeto,w
  2155  0D3F  00D7               	movwf	temp_objeto@temp_MSB
  2156  0D40  0850               	movf	??_temp_objeto+1,w
  2157  0D41  00D8               	movwf	temp_objeto@temp_MSB+1
  2158                           
  2159                           ;Temperatura_I2C.c: 35:     temp = (((temp_MSB+temp_LSB)/50)-273.15);
  2160  0D42  0856               	movf	temp_objeto@temp_LSB,w
  2161  0D43  0757               	addwf	temp_objeto@temp_MSB,w
  2162  0D44  00F4               	movwf	___lwdiv@dividend
  2163  0D45  0858               	movf	temp_objeto@temp_MSB+1,w
  2164  0D46  1803               	skipnc
  2165  0D47  0A58               	incf	temp_objeto@temp_MSB+1,w
  2166  0D48  00F5               	movwf	___lwdiv@dividend+1
  2167  0D49  3032               	movlw	50
  2168  0D4A  00F2               	movwf	___lwdiv@divisor
  2169  0D4B  3000               	movlw	0
  2170  0D4C  00F3               	movwf	___lwdiv@divisor+1
  2171  0D4D  160A  118A  2566  120A  158A  	fcall	___lwdiv
  2172  0D52  0872               	movf	?___lwdiv,w
  2173  0D53  1283               	bcf	3,5	;RP0=0, select bank0
  2174  0D54  1303               	bcf	3,6	;RP1=0, select bank0
  2175  0D55  00CF               	movwf	??_temp_objeto
  2176  0D56  0873               	movf	?___lwdiv+1,w
  2177  0D57  00D0               	movwf	??_temp_objeto+1
  2178  0D58  01D1               	clrf	??_temp_objeto+2
  2179  0D59  01D2               	clrf	??_temp_objeto+3
  2180  0D5A  0852               	movf	??_temp_objeto+3,w
  2181  0D5B  00A3               	movwf	___xxtofl@val+3
  2182  0D5C  0851               	movf	??_temp_objeto+2,w
  2183  0D5D  00A2               	movwf	___xxtofl@val+2
  2184  0D5E  0850               	movf	??_temp_objeto+1,w
  2185  0D5F  00A1               	movwf	___xxtofl@val+1
  2186  0D60  084F               	movf	??_temp_objeto,w
  2187  0D61  00A0               	movwf	___xxtofl@val
  2188  0D62  3000               	movlw	0
  2189  0D63  120A  158A  22DA  120A  158A  	fcall	___xxtofl
  2190  0D68  1283               	bcf	3,5	;RP0=0, select bank0
  2191  0D69  1303               	bcf	3,6	;RP1=0, select bank0
  2192  0D6A  0823               	movf	?___xxtofl+3,w
  2193  0D6B  00B5               	movwf	___fladd@a+3
  2194  0D6C  0822               	movf	?___xxtofl+2,w
  2195  0D6D  00B4               	movwf	___fladd@a+2
  2196  0D6E  0821               	movf	?___xxtofl+1,w
  2197  0D6F  00B3               	movwf	___fladd@a+1
  2198  0D70  0820               	movf	?___xxtofl,w
  2199  0D71  00B2               	movwf	___fladd@a
  2200  0D72  30C3               	movlw	195
  2201  0D73  00B1               	movwf	___fladd@b+3
  2202  0D74  3088               	movlw	136
  2203  0D75  00B0               	movwf	___fladd@b+2
  2204  0D76  3093               	movlw	147
  2205  0D77  00AF               	movwf	___fladd@b+1
  2206  0D78  3033               	movlw	51
  2207  0D79  00AE               	movwf	___fladd@b
  2208  0D7A  120A  118A  235B  120A  158A  	fcall	___fladd
  2209  0D7F  1283               	bcf	3,5	;RP0=0, select bank0
  2210  0D80  1303               	bcf	3,6	;RP1=0, select bank0
  2211  0D81  0831               	movf	?___fladd+3,w
  2212  0D82  00C5               	movwf	___fltol@f1+3
  2213  0D83  0830               	movf	?___fladd+2,w
  2214  0D84  00C4               	movwf	___fltol@f1+2
  2215  0D85  082F               	movf	?___fladd+1,w
  2216  0D86  00C3               	movwf	___fltol@f1+1
  2217  0D87  082E               	movf	?___fladd,w
  2218  0D88  00C2               	movwf	___fltol@f1
  2219  0D89  160A  118A  270F   	fcall	___fltol
  2220  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2221  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2222  0D8E  0843               	movf	?___fltol+1,w
  2223  0D8F  00D5               	movwf	temp_objeto@temp+1
  2224  0D90  0842               	movf	?___fltol,w
  2225  0D91  00D4               	movwf	temp_objeto@temp
  2226                           
  2227                           ;Temperatura_I2C.c: 36:     return(temp);
  2228  0D92  0855               	movf	temp_objeto@temp+1,w
  2229  0D93  00CE               	movwf	?_temp_objeto+1
  2230  0D94  0854               	movf	temp_objeto@temp,w
  2231  0D95  00CD               	movwf	?_temp_objeto
  2232  0D96  0008               	return
  2233  0D97                     __end_of_temp_objeto:	
  2234                           
  2235                           	psect	text4
  2236  0C2B                     __ptext4:	
  2237 ;; *************** function _temp_ambiente *****************
  2238 ;; Defined at:
  2239 ;;		line 39 in file "Temperatura_I2C.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;		None
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  temp_MSB        2   55[BANK0 ] unsigned int 
  2244 ;;  temp            2   52[BANK0 ] unsigned int 
  2245 ;;  temp_LSB        1   54[BANK0 ] unsigned char 
  2246 ;;  PEC             1    0        unsigned char 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  2   45[BANK0 ] int 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2256 ;;      Params:         0       2       0       0       0
  2257 ;;      Locals:         0       6       0       0       0
  2258 ;;      Temps:          0       4       0       0       0
  2259 ;;      Totals:         0      12       0       0       0
  2260 ;;Total ram usage:       12 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    3
  2263 ;; This function calls:
  2264 ;;		_I2C_Master_Read
  2265 ;;		_I2C_Master_Start
  2266 ;;		_I2C_Master_Stop
  2267 ;;		_I2C_Master_Write
  2268 ;;		___fladd
  2269 ;;		___fltol
  2270 ;;		___lwdiv
  2271 ;;		___xxtofl
  2272 ;; This function is called by:
  2273 ;;		_main
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           
  2278                           ;psect for function _temp_ambiente
  2279  0C2B                     _temp_ambiente:	
  2280                           
  2281                           ;Temperatura_I2C.c: 40:     uint16_t temp_MSB;;Temperatura_I2C.c: 41:     uint8_t temp_L
      +                          SB;;Temperatura_I2C.c: 42:     uint8_t PEC;;Temperatura_I2C.c: 43:     uint16_t temp;;Te
      +                          mperatura_I2C.c: 44:     I2C_Master_Start();
  2282                           
  2283                           ;incstack = 0
  2284                           ; Regs used in _temp_ambiente: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2285  0C2B  160A  118A  235A  120A  158A  	fcall	_I2C_Master_Start
  2286                           
  2287                           ;Temperatura_I2C.c: 45:     I2C_Master_Write(0x00);
  2288  0C30  3000               	movlw	0
  2289  0C31  00F2               	movwf	I2C_Master_Write@d
  2290  0C32  00F3               	movwf	I2C_Master_Write@d+1
  2291  0C33  160A  118A  2368  120A  158A  	fcall	_I2C_Master_Write
  2292                           
  2293                           ;Temperatura_I2C.c: 46:     I2C_Master_Write(0x06);
  2294  0C38  3006               	movlw	6
  2295  0C39  00F2               	movwf	I2C_Master_Write@d
  2296  0C3A  3000               	movlw	0
  2297  0C3B  00F3               	movwf	I2C_Master_Write@d+1
  2298  0C3C  160A  118A  2368  120A  158A  	fcall	_I2C_Master_Write
  2299                           
  2300                           ;Temperatura_I2C.c: 49:     I2C_Master_Start();
  2301  0C41  160A  118A  235A  120A  158A  	fcall	_I2C_Master_Start
  2302                           
  2303                           ;Temperatura_I2C.c: 50:     I2C_Master_Write(0x01);
  2304  0C46  3001               	movlw	1
  2305  0C47  00F2               	movwf	I2C_Master_Write@d
  2306  0C48  3000               	movlw	0
  2307  0C49  00F3               	movwf	I2C_Master_Write@d+1
  2308  0C4A  160A  118A  2368  120A  158A  	fcall	_I2C_Master_Write
  2309                           
  2310                           ;Temperatura_I2C.c: 51:     temp_LSB = I2C_Master_Read(0);
  2311  0C4F  3000               	movlw	0
  2312  0C50  00F2               	movwf	I2C_Master_Read@a
  2313  0C51  00F3               	movwf	I2C_Master_Read@a+1
  2314  0C52  160A  118A  2446  120A  158A  	fcall	_I2C_Master_Read
  2315  0C57  0872               	movf	?_I2C_Master_Read,w
  2316  0C58  1283               	bcf	3,5	;RP0=0, select bank0
  2317  0C59  1303               	bcf	3,6	;RP1=0, select bank0
  2318  0C5A  00CF               	movwf	??_temp_ambiente
  2319  0C5B  084F               	movf	??_temp_ambiente,w
  2320  0C5C  00D6               	movwf	temp_ambiente@temp_LSB
  2321                           
  2322                           ;Temperatura_I2C.c: 52:     temp_MSB = I2C_Master_Read(0);
  2323  0C5D  3000               	movlw	0
  2324  0C5E  00F2               	movwf	I2C_Master_Read@a
  2325  0C5F  00F3               	movwf	I2C_Master_Read@a+1
  2326  0C60  160A  118A  2446  120A  158A  	fcall	_I2C_Master_Read
  2327  0C65  0873               	movf	?_I2C_Master_Read+1,w
  2328  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  2329  0C67  1303               	bcf	3,6	;RP1=0, select bank0
  2330  0C68  00D8               	movwf	temp_ambiente@temp_MSB+1
  2331  0C69  0872               	movf	?_I2C_Master_Read,w
  2332  0C6A  00D7               	movwf	temp_ambiente@temp_MSB
  2333  0C6B  3000               	movlw	0
  2334  0C6C  00F2               	movwf	I2C_Master_Read@a
  2335  0C6D  00F3               	movwf	I2C_Master_Read@a+1
  2336  0C6E  160A  118A  2446  120A  158A  	fcall	_I2C_Master_Read
  2337                           
  2338                           ;Temperatura_I2C.c: 54:     I2C_Master_Stop();
  2339  0C73  160A  118A  2361  120A  158A  	fcall	_I2C_Master_Stop
  2340                           
  2341                           ;Temperatura_I2C.c: 55:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2342  0C78  3041               	movlw	65
  2343  0C79  1283               	bcf	3,5	;RP0=0, select bank0
  2344  0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  2345  0C7B  00D0               	movwf	??_temp_ambiente+1
  2346  0C7C  30ED               	movlw	237
  2347  0C7D  00CF               	movwf	??_temp_ambiente
  2348  0C7E                     u3467:	
  2349  0C7E  0BCF               	decfsz	??_temp_ambiente,f
  2350  0C7F  2C7E               	goto	u3467
  2351  0C80  0BD0               	decfsz	??_temp_ambiente+1,f
  2352  0C81  2C7E               	goto	u3467
  2353  0C82  2C83               	nop2
  2354                           
  2355                           ;Temperatura_I2C.c: 57:     temp_MSB = temp_MSB <<8;
  2356  0C83  1283               	bcf	3,5	;RP0=0, select bank0
  2357  0C84  1303               	bcf	3,6	;RP1=0, select bank0
  2358  0C85  0857               	movf	temp_ambiente@temp_MSB,w
  2359  0C86  00D0               	movwf	??_temp_ambiente+1
  2360  0C87  01CF               	clrf	??_temp_ambiente
  2361  0C88  084F               	movf	??_temp_ambiente,w
  2362  0C89  00D7               	movwf	temp_ambiente@temp_MSB
  2363  0C8A  0850               	movf	??_temp_ambiente+1,w
  2364  0C8B  00D8               	movwf	temp_ambiente@temp_MSB+1
  2365                           
  2366                           ;Temperatura_I2C.c: 58:     temp = (((temp_MSB+temp_LSB)/50)-273.15);
  2367  0C8C  0856               	movf	temp_ambiente@temp_LSB,w
  2368  0C8D  0757               	addwf	temp_ambiente@temp_MSB,w
  2369  0C8E  00F4               	movwf	___lwdiv@dividend
  2370  0C8F  0858               	movf	temp_ambiente@temp_MSB+1,w
  2371  0C90  1803               	skipnc
  2372  0C91  0A58               	incf	temp_ambiente@temp_MSB+1,w
  2373  0C92  00F5               	movwf	___lwdiv@dividend+1
  2374  0C93  3032               	movlw	50
  2375  0C94  00F2               	movwf	___lwdiv@divisor
  2376  0C95  3000               	movlw	0
  2377  0C96  00F3               	movwf	___lwdiv@divisor+1
  2378  0C97  160A  118A  2566  120A  158A  	fcall	___lwdiv
  2379  0C9C  0872               	movf	?___lwdiv,w
  2380  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2381  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2382  0C9F  00CF               	movwf	??_temp_ambiente
  2383  0CA0  0873               	movf	?___lwdiv+1,w
  2384  0CA1  00D0               	movwf	??_temp_ambiente+1
  2385  0CA2  01D1               	clrf	??_temp_ambiente+2
  2386  0CA3  01D2               	clrf	??_temp_ambiente+3
  2387  0CA4  0852               	movf	??_temp_ambiente+3,w
  2388  0CA5  00A3               	movwf	___xxtofl@val+3
  2389  0CA6  0851               	movf	??_temp_ambiente+2,w
  2390  0CA7  00A2               	movwf	___xxtofl@val+2
  2391  0CA8  0850               	movf	??_temp_ambiente+1,w
  2392  0CA9  00A1               	movwf	___xxtofl@val+1
  2393  0CAA  084F               	movf	??_temp_ambiente,w
  2394  0CAB  00A0               	movwf	___xxtofl@val
  2395  0CAC  3000               	movlw	0
  2396  0CAD  120A  158A  22DA  120A  158A  	fcall	___xxtofl
  2397  0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  2398  0CB3  1303               	bcf	3,6	;RP1=0, select bank0
  2399  0CB4  0823               	movf	?___xxtofl+3,w
  2400  0CB5  00B5               	movwf	___fladd@a+3
  2401  0CB6  0822               	movf	?___xxtofl+2,w
  2402  0CB7  00B4               	movwf	___fladd@a+2
  2403  0CB8  0821               	movf	?___xxtofl+1,w
  2404  0CB9  00B3               	movwf	___fladd@a+1
  2405  0CBA  0820               	movf	?___xxtofl,w
  2406  0CBB  00B2               	movwf	___fladd@a
  2407  0CBC  30C3               	movlw	195
  2408  0CBD  00B1               	movwf	___fladd@b+3
  2409  0CBE  3088               	movlw	136
  2410  0CBF  00B0               	movwf	___fladd@b+2
  2411  0CC0  3093               	movlw	147
  2412  0CC1  00AF               	movwf	___fladd@b+1
  2413  0CC2  3033               	movlw	51
  2414  0CC3  00AE               	movwf	___fladd@b
  2415  0CC4  120A  118A  235B  120A  158A  	fcall	___fladd
  2416  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  2417  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  2418  0CCB  0831               	movf	?___fladd+3,w
  2419  0CCC  00C5               	movwf	___fltol@f1+3
  2420  0CCD  0830               	movf	?___fladd+2,w
  2421  0CCE  00C4               	movwf	___fltol@f1+2
  2422  0CCF  082F               	movf	?___fladd+1,w
  2423  0CD0  00C3               	movwf	___fltol@f1+1
  2424  0CD1  082E               	movf	?___fladd,w
  2425  0CD2  00C2               	movwf	___fltol@f1
  2426  0CD3  160A  118A  270F   	fcall	___fltol
  2427  0CD6  1283               	bcf	3,5	;RP0=0, select bank0
  2428  0CD7  1303               	bcf	3,6	;RP1=0, select bank0
  2429  0CD8  0843               	movf	?___fltol+1,w
  2430  0CD9  00D5               	movwf	temp_ambiente@temp+1
  2431  0CDA  0842               	movf	?___fltol,w
  2432  0CDB  00D4               	movwf	temp_ambiente@temp
  2433                           
  2434                           ;Temperatura_I2C.c: 59:     return(temp);
  2435  0CDC  0855               	movf	temp_ambiente@temp+1,w
  2436  0CDD  00CE               	movwf	?_temp_ambiente+1
  2437  0CDE  0854               	movf	temp_ambiente@temp,w
  2438  0CDF  00CD               	movwf	?_temp_ambiente
  2439  0CE0  0008               	return
  2440  0CE1                     __end_of_temp_ambiente:	
  2441                           
  2442                           	psect	text5
  2443  0ADA                     __ptext5:	
  2444 ;; *************** function ___xxtofl *****************
  2445 ;; Defined at:
  2446 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  sign            1    wreg     unsigned char 
  2449 ;;  val             4    0[BANK0 ] long 
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  sign            1    8[BANK0 ] unsigned char 
  2452 ;;  arg             4   10[BANK0 ] unsigned long 
  2453 ;;  exp             1    9[BANK0 ] unsigned char 
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  4    0[BANK0 ] unsigned char 
  2456 ;; Registers used:
  2457 ;;		wreg, status,2, status,0
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2463 ;;      Params:         0       4       0       0       0
  2464 ;;      Locals:         0       6       0       0       0
  2465 ;;      Temps:          0       4       0       0       0
  2466 ;;      Totals:         0      14       0       0       0
  2467 ;;Total ram usage:       14 bytes
  2468 ;; Hardware stack levels used:    1
  2469 ;; Hardware stack levels required when called:    1
  2470 ;; This function calls:
  2471 ;;		Nothing
  2472 ;; This function is called by:
  2473 ;;		_temp_objeto
  2474 ;;		_temp_ambiente
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           
  2479                           ;psect for function ___xxtofl
  2480  0ADA                     ___xxtofl:	
  2481                           
  2482                           ;incstack = 0
  2483                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2484                           ;___xxtofl@sign stored from wreg
  2485  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  2486  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  2487  0ADC  00A8               	movwf	___xxtofl@sign
  2488  0ADD  0828               	movf	___xxtofl@sign,w
  2489  0ADE  1D03               	btfss	3,2
  2490  0ADF  1FA3               	btfss	___xxtofl@val+3,7
  2491  0AE0  2AF1               	goto	l3570
  2492  0AE1  0920               	comf	___xxtofl@val,w
  2493  0AE2  00AA               	movwf	___xxtofl@arg
  2494  0AE3  0921               	comf	___xxtofl@val+1,w
  2495  0AE4  00AB               	movwf	___xxtofl@arg+1
  2496  0AE5  0922               	comf	___xxtofl@val+2,w
  2497  0AE6  00AC               	movwf	___xxtofl@arg+2
  2498  0AE7  0923               	comf	___xxtofl@val+3,w
  2499  0AE8  00AD               	movwf	___xxtofl@arg+3
  2500  0AE9  0AAA               	incf	___xxtofl@arg,f
  2501  0AEA  1903               	skipnz
  2502  0AEB  0AAB               	incf	___xxtofl@arg+1,f
  2503  0AEC  1903               	skipnz
  2504  0AED  0AAC               	incf	___xxtofl@arg+2,f
  2505  0AEE  1903               	skipnz
  2506  0AEF  0AAD               	incf	___xxtofl@arg+3,f
  2507  0AF0  2AF9               	goto	l999
  2508  0AF1                     l3570:	
  2509  0AF1  0823               	movf	___xxtofl@val+3,w
  2510  0AF2  00AD               	movwf	___xxtofl@arg+3
  2511  0AF3  0822               	movf	___xxtofl@val+2,w
  2512  0AF4  00AC               	movwf	___xxtofl@arg+2
  2513  0AF5  0821               	movf	___xxtofl@val+1,w
  2514  0AF6  00AB               	movwf	___xxtofl@arg+1
  2515  0AF7  0820               	movf	___xxtofl@val,w
  2516  0AF8  00AA               	movwf	___xxtofl@arg
  2517  0AF9                     l999:	
  2518  0AF9  0823               	movf	___xxtofl@val+3,w
  2519  0AFA  0422               	iorwf	___xxtofl@val+2,w
  2520  0AFB  0421               	iorwf	___xxtofl@val+1,w
  2521  0AFC  0420               	iorwf	___xxtofl@val,w
  2522  0AFD  1D03               	skipz
  2523  0AFE  2B08               	goto	l3576
  2524  0AFF  3000               	movlw	0
  2525  0B00  00A3               	movwf	?___xxtofl+3
  2526  0B01  3000               	movlw	0
  2527  0B02  00A2               	movwf	?___xxtofl+2
  2528  0B03  3000               	movlw	0
  2529  0B04  00A1               	movwf	?___xxtofl+1
  2530  0B05  3000               	movlw	0
  2531  0B06  00A0               	movwf	?___xxtofl
  2532  0B07  0008               	return
  2533  0B08                     l3576:	
  2534  0B08  3096               	movlw	150
  2535  0B09  00A4               	movwf	??___xxtofl
  2536  0B0A  0824               	movf	??___xxtofl,w
  2537  0B0B  00A9               	movwf	___xxtofl@exp
  2538  0B0C                     l3580:	
  2539  0B0C  30FE               	movlw	254
  2540  0B0D  052D               	andwf	___xxtofl@arg+3,w
  2541  0B0E  1903               	btfsc	3,2
  2542  0B0F  2B39               	goto	l1005
  2543  0B10  3001               	movlw	1
  2544  0B11  00A4               	movwf	??___xxtofl
  2545  0B12  0824               	movf	??___xxtofl,w
  2546  0B13  07A9               	addwf	___xxtofl@exp,f
  2547  0B14  3001               	movlw	1
  2548  0B15                     u2595:	
  2549  0B15  1003               	clrc
  2550  0B16  0CAD               	rrf	___xxtofl@arg+3,f
  2551  0B17  0CAC               	rrf	___xxtofl@arg+2,f
  2552  0B18  0CAB               	rrf	___xxtofl@arg+1,f
  2553  0B19  0CAA               	rrf	___xxtofl@arg,f
  2554  0B1A  3EFF               	addlw	-1
  2555  0B1B  1D03               	skipz
  2556  0B1C  2B15               	goto	u2595
  2557  0B1D  2B0C               	goto	l3580
  2558  0B1E                     l3582:	
  2559  0B1E  3001               	movlw	1
  2560  0B1F  00A4               	movwf	??___xxtofl
  2561  0B20  0824               	movf	??___xxtofl,w
  2562  0B21  07A9               	addwf	___xxtofl@exp,f
  2563  0B22  3001               	movlw	1
  2564  0B23  07AA               	addwf	___xxtofl@arg,f
  2565  0B24  3000               	movlw	0
  2566  0B25  1803               	skipnc
  2567  0B26  3001               	movlw	1
  2568  0B27  07AB               	addwf	___xxtofl@arg+1,f
  2569  0B28  3000               	movlw	0
  2570  0B29  1803               	skipnc
  2571  0B2A  3001               	movlw	1
  2572  0B2B  07AC               	addwf	___xxtofl@arg+2,f
  2573  0B2C  3000               	movlw	0
  2574  0B2D  1803               	skipnc
  2575  0B2E  3001               	movlw	1
  2576  0B2F  07AD               	addwf	___xxtofl@arg+3,f
  2577  0B30  3001               	movlw	1
  2578  0B31                     u2615:	
  2579  0B31  1003               	clrc
  2580  0B32  0CAD               	rrf	___xxtofl@arg+3,f
  2581  0B33  0CAC               	rrf	___xxtofl@arg+2,f
  2582  0B34  0CAB               	rrf	___xxtofl@arg+1,f
  2583  0B35  0CAA               	rrf	___xxtofl@arg,f
  2584  0B36  3EFF               	addlw	-1
  2585  0B37  1D03               	skipz
  2586  0B38  2B31               	goto	u2615
  2587  0B39                     l1005:	
  2588  0B39  30FF               	movlw	255
  2589  0B3A  052D               	andwf	___xxtofl@arg+3,w
  2590  0B3B  1903               	btfsc	3,2
  2591  0B3C  2B4D               	goto	l3590
  2592  0B3D  2B1E               	goto	l3582
  2593  0B3E                     l3592:	
  2594  0B3E  3002               	movlw	2
  2595  0B3F  0229               	subwf	___xxtofl@exp,w
  2596  0B40  1C03               	btfss	3,0
  2597  0B41  2B4F               	goto	l1012
  2598  0B42  3001               	movlw	1
  2599  0B43  02A9               	subwf	___xxtofl@exp,f
  2600  0B44  3001               	movlw	1
  2601  0B45  00A4               	movwf	??___xxtofl
  2602  0B46                     u2635:	
  2603  0B46  1003               	clrc
  2604  0B47  0DAA               	rlf	___xxtofl@arg,f
  2605  0B48  0DAB               	rlf	___xxtofl@arg+1,f
  2606  0B49  0DAC               	rlf	___xxtofl@arg+2,f
  2607  0B4A  0DAD               	rlf	___xxtofl@arg+3,f
  2608  0B4B  0BA4               	decfsz	??___xxtofl,f
  2609  0B4C  2B46               	goto	u2635
  2610  0B4D                     l3590:	
  2611  0B4D  1FAC               	btfss	___xxtofl@arg+2,7
  2612  0B4E  2B3E               	goto	l3592
  2613  0B4F                     l1012:	
  2614  0B4F  1829               	btfsc	___xxtofl@exp,0
  2615  0B50  2B59               	goto	l1013
  2616  0B51  30FF               	movlw	255
  2617  0B52  05AA               	andwf	___xxtofl@arg,f
  2618  0B53  30FF               	movlw	255
  2619  0B54  05AB               	andwf	___xxtofl@arg+1,f
  2620  0B55  307F               	movlw	127
  2621  0B56  05AC               	andwf	___xxtofl@arg+2,f
  2622  0B57  30FF               	movlw	255
  2623  0B58  05AD               	andwf	___xxtofl@arg+3,f
  2624  0B59                     l1013:	
  2625  0B59  1003               	clrc
  2626  0B5A  0CA9               	rrf	___xxtofl@exp,f
  2627  0B5B  0829               	movf	___xxtofl@exp,w
  2628  0B5C  00A4               	movwf	??___xxtofl
  2629  0B5D  01A5               	clrf	??___xxtofl+1
  2630  0B5E  01A6               	clrf	??___xxtofl+2
  2631  0B5F  01A7               	clrf	??___xxtofl+3
  2632  0B60  3018               	movlw	24
  2633  0B61                     u2675:	
  2634  0B61  1003               	clrc
  2635  0B62  0DA4               	rlf	??___xxtofl,f
  2636  0B63  0DA5               	rlf	??___xxtofl+1,f
  2637  0B64  0DA6               	rlf	??___xxtofl+2,f
  2638  0B65  0DA7               	rlf	??___xxtofl+3,f
  2639  0B66  3EFF               	addlw	-1
  2640  0B67  1D03               	skipz
  2641  0B68  2B61               	goto	u2675
  2642  0B69  0824               	movf	??___xxtofl,w
  2643  0B6A  04AA               	iorwf	___xxtofl@arg,f
  2644  0B6B  0825               	movf	??___xxtofl+1,w
  2645  0B6C  04AB               	iorwf	___xxtofl@arg+1,f
  2646  0B6D  0826               	movf	??___xxtofl+2,w
  2647  0B6E  04AC               	iorwf	___xxtofl@arg+2,f
  2648  0B6F  0827               	movf	??___xxtofl+3,w
  2649  0B70  04AD               	iorwf	___xxtofl@arg+3,f
  2650  0B71  0828               	movf	___xxtofl@sign,w
  2651  0B72  1D03               	btfss	3,2
  2652  0B73  1FA3               	btfss	___xxtofl@val+3,7
  2653  0B74  2B76               	goto	l3604
  2654  0B75  17AD               	bsf	___xxtofl@arg+3,7
  2655  0B76                     l3604:	
  2656  0B76  082D               	movf	___xxtofl@arg+3,w
  2657  0B77  00A3               	movwf	?___xxtofl+3
  2658  0B78  082C               	movf	___xxtofl@arg+2,w
  2659  0B79  00A2               	movwf	?___xxtofl+2
  2660  0B7A  082B               	movf	___xxtofl@arg+1,w
  2661  0B7B  00A1               	movwf	?___xxtofl+1
  2662  0B7C  082A               	movf	___xxtofl@arg,w
  2663  0B7D  00A0               	movwf	?___xxtofl
  2664  0B7E  0008               	return
  2665  0B7F                     __end_of___xxtofl:	
  2666                           
  2667                           	psect	text6
  2668  1566                     __ptext6:	
  2669 ;; *************** function ___lwdiv *****************
  2670 ;; Defined at:
  2671 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  divisor         2    2[COMMON] unsigned int 
  2674 ;;  dividend        2    4[COMMON] unsigned int 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;  quotient        2    7[COMMON] unsigned int 
  2677 ;;  counter         1    9[COMMON] unsigned char 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  2    2[COMMON] unsigned int 
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2687 ;;      Params:         4       0       0       0       0
  2688 ;;      Locals:         3       0       0       0       0
  2689 ;;      Temps:          1       0       0       0       0
  2690 ;;      Totals:         8       0       0       0       0
  2691 ;;Total ram usage:        8 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; Hardware stack levels required when called:    1
  2694 ;; This function calls:
  2695 ;;		Nothing
  2696 ;; This function is called by:
  2697 ;;		_temp_objeto
  2698 ;;		_temp_ambiente
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           
  2703                           ;psect for function ___lwdiv
  2704  1566                     ___lwdiv:	
  2705                           
  2706                           ;incstack = 0
  2707                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2708  1566  01F7               	clrf	___lwdiv@quotient
  2709  1567  01F8               	clrf	___lwdiv@quotient+1
  2710  1568  0872               	movf	___lwdiv@divisor,w
  2711  1569  0473               	iorwf	___lwdiv@divisor+1,w
  2712  156A  1903               	btfsc	3,2
  2713  156B  2D9D               	goto	l3366
  2714  156C  01F9               	clrf	___lwdiv@counter
  2715  156D  0AF9               	incf	___lwdiv@counter,f
  2716  156E                     l3354:	
  2717  156E  1BF3               	btfsc	___lwdiv@divisor+1,7
  2718  156F  2D7C               	goto	l3356
  2719  1570  3001               	movlw	1
  2720  1571                     u2045:	
  2721  1571  1003               	clrc
  2722  1572  0DF2               	rlf	___lwdiv@divisor,f
  2723  1573  0DF3               	rlf	___lwdiv@divisor+1,f
  2724  1574  3EFF               	addlw	-1
  2725  1575  1D03               	skipz
  2726  1576  2D71               	goto	u2045
  2727  1577  3001               	movlw	1
  2728  1578  00F6               	movwf	??___lwdiv
  2729  1579  0876               	movf	??___lwdiv,w
  2730  157A  07F9               	addwf	___lwdiv@counter,f
  2731  157B  2D6E               	goto	l3354
  2732  157C                     l3356:	
  2733  157C  3001               	movlw	1
  2734  157D                     u2065:	
  2735  157D  1003               	clrc
  2736  157E  0DF7               	rlf	___lwdiv@quotient,f
  2737  157F  0DF8               	rlf	___lwdiv@quotient+1,f
  2738  1580  3EFF               	addlw	-1
  2739  1581  1D03               	skipz
  2740  1582  2D7D               	goto	u2065
  2741  1583  0873               	movf	___lwdiv@divisor+1,w
  2742  1584  0275               	subwf	___lwdiv@dividend+1,w
  2743  1585  1D03               	skipz
  2744  1586  2D89               	goto	u2075
  2745  1587  0872               	movf	___lwdiv@divisor,w
  2746  1588  0274               	subwf	___lwdiv@dividend,w
  2747  1589                     u2075:	
  2748  1589  1C03               	skipc
  2749  158A  2D92               	goto	l3362
  2750  158B  0872               	movf	___lwdiv@divisor,w
  2751  158C  02F4               	subwf	___lwdiv@dividend,f
  2752  158D  0873               	movf	___lwdiv@divisor+1,w
  2753  158E  1C03               	skipc
  2754  158F  03F5               	decf	___lwdiv@dividend+1,f
  2755  1590  02F5               	subwf	___lwdiv@dividend+1,f
  2756  1591  1477               	bsf	___lwdiv@quotient,0
  2757  1592                     l3362:	
  2758  1592  3001               	movlw	1
  2759  1593                     u2085:	
  2760  1593  1003               	clrc
  2761  1594  0CF3               	rrf	___lwdiv@divisor+1,f
  2762  1595  0CF2               	rrf	___lwdiv@divisor,f
  2763  1596  3EFF               	addlw	-1
  2764  1597  1D03               	skipz
  2765  1598  2D93               	goto	u2085
  2766  1599  3001               	movlw	1
  2767  159A  02F9               	subwf	___lwdiv@counter,f
  2768  159B  1D03               	btfss	3,2
  2769  159C  2D7C               	goto	l3356
  2770  159D                     l3366:	
  2771  159D  0878               	movf	___lwdiv@quotient+1,w
  2772  159E  00F3               	movwf	?___lwdiv+1
  2773  159F  0877               	movf	___lwdiv@quotient,w
  2774  15A0  00F2               	movwf	?___lwdiv
  2775  15A1  0008               	return
  2776  15A2                     __end_of___lwdiv:	
  2777                           
  2778                           	psect	text7
  2779  170F                     __ptext7:	
  2780 ;; *************** function ___fltol *****************
  2781 ;; Defined at:
  2782 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;  f1              4   34[BANK0 ] unsigned int 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  exp1            1   44[BANK0 ] unsigned char 
  2787 ;;  sign1           1   43[BANK0 ] unsigned char 
  2788 ;; Return value:  Size  Location     Type
  2789 ;;                  4   34[BANK0 ] long 
  2790 ;; Registers used:
  2791 ;;		wreg, status,2, status,0
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2797 ;;      Params:         0       4       0       0       0
  2798 ;;      Locals:         0       2       0       0       0
  2799 ;;      Temps:          0       5       0       0       0
  2800 ;;      Totals:         0      11       0       0       0
  2801 ;;Total ram usage:       11 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; Hardware stack levels required when called:    1
  2804 ;; This function calls:
  2805 ;;		Nothing
  2806 ;; This function is called by:
  2807 ;;		_temp_objeto
  2808 ;;		_temp_ambiente
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           
  2813                           ;psect for function ___fltol
  2814  170F                     ___fltol:	
  2815                           
  2816                           ;incstack = 0
  2817                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2818  170F  1003               	clrc
  2819  1710  1283               	bcf	3,5	;RP0=0, select bank0
  2820  1711  1303               	bcf	3,6	;RP1=0, select bank0
  2821  1712  0D44               	rlf	___fltol@f1+2,w
  2822  1713  0D45               	rlf	___fltol@f1+3,w
  2823  1714  00C6               	movwf	??___fltol
  2824  1715  0846               	movf	??___fltol,w
  2825  1716  00CC               	movwf	___fltol@exp1
  2826  1717  084C               	movf	___fltol@exp1,w
  2827  1718  1D03               	btfss	3,2
  2828  1719  2F23               	goto	l4692
  2829  171A                     l4688:	
  2830  171A  3000               	movlw	0
  2831  171B  00C5               	movwf	?___fltol+3
  2832  171C  3000               	movlw	0
  2833  171D  00C4               	movwf	?___fltol+2
  2834  171E  3000               	movlw	0
  2835  171F  00C3               	movwf	?___fltol+1
  2836  1720  3000               	movlw	0
  2837  1721  00C2               	movwf	?___fltol
  2838  1722  0008               	return
  2839  1723                     l4692:	
  2840  1723  0842               	movf	___fltol@f1,w
  2841  1724  00C6               	movwf	??___fltol
  2842  1725  0843               	movf	___fltol@f1+1,w
  2843  1726  00C7               	movwf	??___fltol+1
  2844  1727  0844               	movf	___fltol@f1+2,w
  2845  1728  00C8               	movwf	??___fltol+2
  2846  1729  0845               	movf	___fltol@f1+3,w
  2847  172A  00C9               	movwf	??___fltol+3
  2848  172B  301F               	movlw	31
  2849  172C                     u3235:	
  2850  172C  1003               	clrc
  2851  172D  0CC9               	rrf	??___fltol+3,f
  2852  172E  0CC8               	rrf	??___fltol+2,f
  2853  172F  0CC7               	rrf	??___fltol+1,f
  2854  1730  0CC6               	rrf	??___fltol,f
  2855  1731  3EFF               	addlw	-1
  2856  1732  1D03               	skipz
  2857  1733  2F2C               	goto	u3235
  2858  1734  0846               	movf	??___fltol,w
  2859  1735  00CA               	movwf	??___fltol+4
  2860  1736  084A               	movf	??___fltol+4,w
  2861  1737  00CB               	movwf	___fltol@sign1
  2862  1738  17C4               	bsf	___fltol@f1+2,7
  2863  1739  30FF               	movlw	255
  2864  173A  05C2               	andwf	___fltol@f1,f
  2865  173B  30FF               	movlw	255
  2866  173C  05C3               	andwf	___fltol@f1+1,f
  2867  173D  30FF               	movlw	255
  2868  173E  05C4               	andwf	___fltol@f1+2,f
  2869  173F  3000               	movlw	0
  2870  1740  05C5               	andwf	___fltol@f1+3,f
  2871  1741  3096               	movlw	150
  2872  1742  02CC               	subwf	___fltol@exp1,f
  2873  1743  1FCC               	btfss	___fltol@exp1,7
  2874  1744  2F5A               	goto	l4710
  2875  1745  084C               	movf	___fltol@exp1,w
  2876  1746  3A80               	xorlw	128
  2877  1747  3E97               	addlw	151
  2878  1748  1C03               	btfss	3,0
  2879  1749  2F1A               	goto	l4688
  2880  174A                     l4708:	
  2881  174A  3001               	movlw	1
  2882  174B                     u3265:	
  2883  174B  1003               	clrc
  2884  174C  0CC5               	rrf	___fltol@f1+3,f
  2885  174D  0CC4               	rrf	___fltol@f1+2,f
  2886  174E  0CC3               	rrf	___fltol@f1+1,f
  2887  174F  0CC2               	rrf	___fltol@f1,f
  2888  1750  3EFF               	addlw	-1
  2889  1751  1D03               	skipz
  2890  1752  2F4B               	goto	u3265
  2891  1753  3001               	movlw	1
  2892  1754  00C6               	movwf	??___fltol
  2893  1755  0846               	movf	??___fltol,w
  2894  1756  07CC               	addwf	___fltol@exp1,f
  2895  1757  1903               	btfsc	3,2
  2896  1758  2F6D               	goto	l4718
  2897  1759  2F4A               	goto	l4708
  2898  175A                     l4710:	
  2899  175A  3020               	movlw	32
  2900  175B  024C               	subwf	___fltol@exp1,w
  2901  175C  1803               	btfsc	3,0
  2902  175D  2F1A               	goto	l4688
  2903  175E                     l765:	
  2904  175E  084C               	movf	___fltol@exp1,w
  2905  175F  1903               	btfsc	3,2
  2906  1760  2F6D               	goto	l4718
  2907  1761  3001               	movlw	1
  2908  1762  00C6               	movwf	??___fltol
  2909  1763                     u3295:	
  2910  1763  1003               	clrc
  2911  1764  0DC2               	rlf	___fltol@f1,f
  2912  1765  0DC3               	rlf	___fltol@f1+1,f
  2913  1766  0DC4               	rlf	___fltol@f1+2,f
  2914  1767  0DC5               	rlf	___fltol@f1+3,f
  2915  1768  0BC6               	decfsz	??___fltol,f
  2916  1769  2F63               	goto	u3295
  2917  176A  3001               	movlw	1
  2918  176B  02CC               	subwf	___fltol@exp1,f
  2919  176C  2F5E               	goto	l765
  2920  176D                     l4718:	
  2921  176D  084B               	movf	___fltol@sign1,w
  2922  176E  1903               	btfsc	3,2
  2923  176F  0008               	return
  2924  1770  09C2               	comf	___fltol@f1,f
  2925  1771  09C3               	comf	___fltol@f1+1,f
  2926  1772  09C4               	comf	___fltol@f1+2,f
  2927  1773  09C5               	comf	___fltol@f1+3,f
  2928  1774  0AC2               	incf	___fltol@f1,f
  2929  1775  1903               	skipnz
  2930  1776  0AC3               	incf	___fltol@f1+1,f
  2931  1777  1903               	skipnz
  2932  1778  0AC4               	incf	___fltol@f1+2,f
  2933  1779  1903               	skipnz
  2934  177A  0AC5               	incf	___fltol@f1+3,f
  2935  177B  0008               	return
  2936  177C                     __end_of___fltol:	
  2937                           
  2938                           	psect	text8
  2939  035B                     __ptext8:	
  2940 ;; *************** function ___fladd *****************
  2941 ;; Defined at:
  2942 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;  b               4   14[BANK0 ] long 
  2945 ;;  a               4   18[BANK0 ] long 
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;  grs             1   33[BANK0 ] unsigned char 
  2948 ;;  bexp            1   32[BANK0 ] unsigned char 
  2949 ;;  aexp            1   31[BANK0 ] unsigned char 
  2950 ;;  signs           1   30[BANK0 ] unsigned char 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  4   14[BANK0 ] unsigned char 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0, btemp+1
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2960 ;;      Params:         0       8       0       0       0
  2961 ;;      Locals:         0       4       0       0       0
  2962 ;;      Temps:          0       8       0       0       0
  2963 ;;      Totals:         0      20       0       0       0
  2964 ;;Total ram usage:       20 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    1
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_temp_objeto
  2971 ;;		_temp_ambiente
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           
  2976                           ;psect for function ___fladd
  2977  035B                     ___fladd:	
  2978                           
  2979                           ;incstack = 0
  2980                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  2981  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2982  035C  1303               	bcf	3,6	;RP1=0, select bank0
  2983  035D  0831               	movf	___fladd@b+3,w
  2984  035E  3980               	andlw	128
  2985  035F  00B6               	movwf	??___fladd
  2986  0360  0836               	movf	??___fladd,w
  2987  0361  00BE               	movwf	___fladd@signs
  2988  0362  0831               	movf	___fladd@b+3,w
  2989  0363  00B6               	movwf	??___fladd
  2990  0364  0736               	addwf	??___fladd,w
  2991  0365  00B7               	movwf	??___fladd+1
  2992  0366  0837               	movf	??___fladd+1,w
  2993  0367  00C0               	movwf	___fladd@bexp
  2994  0368  1BB0               	btfsc	___fladd@b+2,7
  2995  0369  1440               	bsf	___fladd@bexp,0
  2996  036A  0840               	movf	___fladd@bexp,w
  2997  036B  1903               	btfsc	3,2
  2998  036C  2B7B               	goto	l3388
  2999  036D  0A40               	incf	___fladd@bexp,w
  3000  036E  1D03               	btfss	3,2
  3001  036F  2B78               	goto	l3384
  3002  0370  3000               	movlw	0
  3003  0371  00B1               	movwf	___fladd@b+3
  3004  0372  3000               	movlw	0
  3005  0373  00B0               	movwf	___fladd@b+2
  3006  0374  3000               	movlw	0
  3007  0375  00AF               	movwf	___fladd@b+1
  3008  0376  3000               	movlw	0
  3009  0377  00AE               	movwf	___fladd@b
  3010  0378                     l3384:	
  3011  0378  17B0               	bsf	___fladd@b+2,7
  3012  0379  01B1               	clrf	___fladd@b+3
  3013  037A  2B83               	goto	l3390
  3014  037B                     l3388:	
  3015  037B  3000               	movlw	0
  3016  037C  00B1               	movwf	___fladd@b+3
  3017  037D  3000               	movlw	0
  3018  037E  00B0               	movwf	___fladd@b+2
  3019  037F  3000               	movlw	0
  3020  0380  00AF               	movwf	___fladd@b+1
  3021  0381  3000               	movlw	0
  3022  0382  00AE               	movwf	___fladd@b
  3023  0383                     l3390:	
  3024  0383  0835               	movf	___fladd@a+3,w
  3025  0384  3980               	andlw	128
  3026  0385  00B6               	movwf	??___fladd
  3027  0386  0836               	movf	??___fladd,w
  3028  0387  00BF               	movwf	___fladd@aexp
  3029  0388  083F               	movf	___fladd@aexp,w
  3030  0389  063E               	xorwf	___fladd@signs,w
  3031  038A  1D03               	btfss	3,2
  3032  038B  173E               	bsf	___fladd@signs,6
  3033  038C  0835               	movf	___fladd@a+3,w
  3034  038D  00B6               	movwf	??___fladd
  3035  038E  0736               	addwf	??___fladd,w
  3036  038F  00B7               	movwf	??___fladd+1
  3037  0390  0837               	movf	??___fladd+1,w
  3038  0391  00BF               	movwf	___fladd@aexp
  3039  0392  1BB4               	btfsc	___fladd@a+2,7
  3040  0393  143F               	bsf	___fladd@aexp,0
  3041  0394  083F               	movf	___fladd@aexp,w
  3042  0395  1903               	btfsc	3,2
  3043  0396  2BA5               	goto	l3412
  3044  0397  0A3F               	incf	___fladd@aexp,w
  3045  0398  1D03               	btfss	3,2
  3046  0399  2BA2               	goto	l3408
  3047  039A  3000               	movlw	0
  3048  039B  00B5               	movwf	___fladd@a+3
  3049  039C  3000               	movlw	0
  3050  039D  00B4               	movwf	___fladd@a+2
  3051  039E  3000               	movlw	0
  3052  039F  00B3               	movwf	___fladd@a+1
  3053  03A0  3000               	movlw	0
  3054  03A1  00B2               	movwf	___fladd@a
  3055  03A2                     l3408:	
  3056  03A2  17B4               	bsf	___fladd@a+2,7
  3057  03A3  01B5               	clrf	___fladd@a+3
  3058  03A4  2BAD               	goto	l865
  3059  03A5                     l3412:	
  3060  03A5  3000               	movlw	0
  3061  03A6  00B5               	movwf	___fladd@a+3
  3062  03A7  3000               	movlw	0
  3063  03A8  00B4               	movwf	___fladd@a+2
  3064  03A9  3000               	movlw	0
  3065  03AA  00B3               	movwf	___fladd@a+1
  3066  03AB  3000               	movlw	0
  3067  03AC  00B2               	movwf	___fladd@a
  3068  03AD                     l865:	
  3069  03AD  0840               	movf	___fladd@bexp,w
  3070  03AE  023F               	subwf	___fladd@aexp,w
  3071  03AF  1803               	skipnc
  3072  03B0  2BF3               	goto	l3448
  3073  03B1  1F3E               	btfss	___fladd@signs,6
  3074  03B2  2BB7               	goto	l3418
  3075  03B3  3080               	movlw	128
  3076  03B4  00B6               	movwf	??___fladd
  3077  03B5  0836               	movf	??___fladd,w
  3078  03B6  06BE               	xorwf	___fladd@signs,f
  3079  03B7                     l3418:	
  3080  03B7  0840               	movf	___fladd@bexp,w
  3081  03B8  00B6               	movwf	??___fladd
  3082  03B9  0836               	movf	??___fladd,w
  3083  03BA  00C1               	movwf	___fladd@grs
  3084  03BB  083F               	movf	___fladd@aexp,w
  3085  03BC  00B6               	movwf	??___fladd
  3086  03BD  0836               	movf	??___fladd,w
  3087  03BE  00C0               	movwf	___fladd@bexp
  3088  03BF  0841               	movf	___fladd@grs,w
  3089  03C0  00B6               	movwf	??___fladd
  3090  03C1  0836               	movf	??___fladd,w
  3091  03C2  00BF               	movwf	___fladd@aexp
  3092  03C3  082E               	movf	___fladd@b,w
  3093  03C4  00B6               	movwf	??___fladd
  3094  03C5  0836               	movf	??___fladd,w
  3095  03C6  00C1               	movwf	___fladd@grs
  3096  03C7  0832               	movf	___fladd@a,w
  3097  03C8  00B6               	movwf	??___fladd
  3098  03C9  0836               	movf	??___fladd,w
  3099  03CA  00AE               	movwf	___fladd@b
  3100  03CB  0841               	movf	___fladd@grs,w
  3101  03CC  00B6               	movwf	??___fladd
  3102  03CD  0836               	movf	??___fladd,w
  3103  03CE  00B2               	movwf	___fladd@a
  3104  03CF  082F               	movf	___fladd@b+1,w
  3105  03D0  00B6               	movwf	??___fladd
  3106  03D1  0836               	movf	??___fladd,w
  3107  03D2  00C1               	movwf	___fladd@grs
  3108  03D3  0833               	movf	___fladd@a+1,w
  3109  03D4  00B6               	movwf	??___fladd
  3110  03D5  0836               	movf	??___fladd,w
  3111  03D6  00AF               	movwf	___fladd@b+1
  3112  03D7  0841               	movf	___fladd@grs,w
  3113  03D8  00B6               	movwf	??___fladd
  3114  03D9  0836               	movf	??___fladd,w
  3115  03DA  00B3               	movwf	___fladd@a+1
  3116  03DB  0830               	movf	___fladd@b+2,w
  3117  03DC  00B6               	movwf	??___fladd
  3118  03DD  0836               	movf	??___fladd,w
  3119  03DE  00C1               	movwf	___fladd@grs
  3120  03DF  0834               	movf	___fladd@a+2,w
  3121  03E0  00B6               	movwf	??___fladd
  3122  03E1  0836               	movf	??___fladd,w
  3123  03E2  00B0               	movwf	___fladd@b+2
  3124  03E3  0841               	movf	___fladd@grs,w
  3125  03E4  00B6               	movwf	??___fladd
  3126  03E5  0836               	movf	??___fladd,w
  3127  03E6  00B4               	movwf	___fladd@a+2
  3128  03E7  0831               	movf	___fladd@b+3,w
  3129  03E8  00B6               	movwf	??___fladd
  3130  03E9  0836               	movf	??___fladd,w
  3131  03EA  00C1               	movwf	___fladd@grs
  3132  03EB  0835               	movf	___fladd@a+3,w
  3133  03EC  00B6               	movwf	??___fladd
  3134  03ED  0836               	movf	??___fladd,w
  3135  03EE  00B1               	movwf	___fladd@b+3
  3136  03EF  0841               	movf	___fladd@grs,w
  3137  03F0  00B6               	movwf	??___fladd
  3138  03F1  0836               	movf	??___fladd,w
  3139  03F2  00B5               	movwf	___fladd@a+3
  3140  03F3                     l3448:	
  3141  03F3  01C1               	clrf	___fladd@grs
  3142  03F4  083F               	movf	___fladd@aexp,w
  3143  03F5  00B6               	movwf	??___fladd
  3144  03F6  01B7               	clrf	??___fladd+1
  3145  03F7  0837               	movf	??___fladd+1,w
  3146  03F8  00B9               	movwf	??___fladd+3
  3147  03F9  0840               	movf	___fladd@bexp,w
  3148  03FA  0236               	subwf	??___fladd,w
  3149  03FB  00B8               	movwf	??___fladd+2
  3150  03FC  1C03               	skipc
  3151  03FD  03B9               	decf	??___fladd+3,f
  3152  03FE  0839               	movf	??___fladd+3,w
  3153  03FF  3A80               	xorlw	128
  3154  0400  00FF               	movwf	127
  3155  0401  3080               	movlw	128
  3156  0402  027F               	subwf	127,w
  3157  0403  1D03               	skipz
  3158  0404  2C07               	goto	u2195
  3159  0405  301A               	movlw	26
  3160  0406  0238               	subwf	??___fladd+2,w
  3161  0407                     u2195:	
  3162  0407  1C03               	skipc
  3163  0408  2C40               	goto	l3466
  3164  0409  1283               	bcf	3,5	;RP0=0, select bank0
  3165  040A  1303               	bcf	3,6	;RP1=0, select bank0
  3166  040B  0831               	movf	___fladd@b+3,w
  3167  040C  0430               	iorwf	___fladd@b+2,w
  3168  040D  042F               	iorwf	___fladd@b+1,w
  3169  040E  042E               	iorwf	___fladd@b,w
  3170  040F  1903               	btfsc	3,2
  3171  0410  2C13               	goto	u2200
  3172  0411  3001               	movlw	1
  3173  0412  2C14               	goto	u2210
  3174  0413                     u2200:	
  3175  0413  3000               	movlw	0
  3176  0414                     u2210:	
  3177  0414  00B6               	movwf	??___fladd
  3178  0415  0836               	movf	??___fladd,w
  3179  0416  00C1               	movwf	___fladd@grs
  3180  0417  3000               	movlw	0
  3181  0418  00B1               	movwf	___fladd@b+3
  3182  0419  3000               	movlw	0
  3183  041A  00B0               	movwf	___fladd@b+2
  3184  041B  3000               	movlw	0
  3185  041C  00AF               	movwf	___fladd@b+1
  3186  041D  3000               	movlw	0
  3187  041E  00AE               	movwf	___fladd@b
  3188  041F  083F               	movf	___fladd@aexp,w
  3189  0420  00B6               	movwf	??___fladd
  3190  0421  0836               	movf	??___fladd,w
  3191  0422  00C0               	movwf	___fladd@bexp
  3192  0423  2C46               	goto	l869
  3193  0424                     l871:	
  3194  0424  1C41               	btfss	___fladd@grs,0
  3195  0425  2C2F               	goto	l3456
  3196  0426  0841               	movf	___fladd@grs,w
  3197  0427  00B6               	movwf	??___fladd
  3198  0428  1003               	clrc
  3199  0429  0C36               	rrf	??___fladd,w
  3200  042A  3801               	iorlw	1
  3201  042B  00B7               	movwf	??___fladd+1
  3202  042C  0837               	movf	??___fladd+1,w
  3203  042D  00C1               	movwf	___fladd@grs
  3204  042E  2C31               	goto	l3458
  3205  042F                     l3456:	
  3206  042F  1003               	clrc
  3207  0430  0CC1               	rrf	___fladd@grs,f
  3208  0431                     l3458:	
  3209  0431  182E               	btfsc	___fladd@b,0
  3210  0432  17C1               	bsf	___fladd@grs,7
  3211  0433  3001               	movlw	1
  3212  0434  00B6               	movwf	??___fladd
  3213  0435                     u2245:	
  3214  0435  0D31               	rlf	___fladd@b+3,w
  3215  0436  0CB1               	rrf	___fladd@b+3,f
  3216  0437  0CB0               	rrf	___fladd@b+2,f
  3217  0438  0CAF               	rrf	___fladd@b+1,f
  3218  0439  0CAE               	rrf	___fladd@b,f
  3219  043A  0BB6               	decfsz	??___fladd& (0+127),f
  3220  043B  2C35               	goto	u2245
  3221  043C  3001               	movlw	1
  3222  043D  00B6               	movwf	??___fladd
  3223  043E  0836               	movf	??___fladd,w
  3224  043F  07C0               	addwf	___fladd@bexp,f
  3225  0440                     l3466:	
  3226  0440  1283               	bcf	3,5	;RP0=0, select bank0
  3227  0441  1303               	bcf	3,6	;RP1=0, select bank0
  3228  0442  083F               	movf	___fladd@aexp,w
  3229  0443  0240               	subwf	___fladd@bexp,w
  3230  0444  1C03               	skipc
  3231  0445  2C24               	goto	l871
  3232  0446                     l869:	
  3233  0446  1B3E               	btfsc	___fladd@signs,6
  3234  0447  2C87               	goto	l3492
  3235  0448  0840               	movf	___fladd@bexp,w
  3236  0449  1D03               	btfss	3,2
  3237  044A  2C54               	goto	l3474
  3238  044B  3000               	movlw	0
  3239  044C  00B1               	movwf	?___fladd+3
  3240  044D  3000               	movlw	0
  3241  044E  00B0               	movwf	?___fladd+2
  3242  044F  3000               	movlw	0
  3243  0450  00AF               	movwf	?___fladd+1
  3244  0451  3000               	movlw	0
  3245  0452  00AE               	movwf	?___fladd
  3246  0453  0008               	return
  3247  0454                     l3474:	
  3248  0454  0832               	movf	___fladd@a,w
  3249  0455  07AE               	addwf	___fladd@b,f
  3250  0456  0833               	movf	___fladd@a+1,w
  3251  0457  1103               	clrz
  3252  0458  1803               	skipnc
  3253  0459  3E01               	addlw	1
  3254  045A  1D03               	btfss	3,2
  3255  045B  07AF               	addwf	___fladd@b+1,f
  3256  045C  0834               	movf	___fladd@a+2,w
  3257  045D  1103               	clrz
  3258  045E  1803               	skipnc
  3259  045F  3E01               	addlw	1
  3260  0460  1D03               	btfss	3,2
  3261  0461  07B0               	addwf	___fladd@b+2,f
  3262  0462  0835               	movf	___fladd@a+3,w
  3263  0463  1103               	clrz
  3264  0464  1803               	skipnc
  3265  0465  3E01               	addlw	1
  3266  0466  1D03               	btfss	3,2
  3267  0467  07B1               	addwf	___fladd@b+3,f
  3268  0468  1C31               	btfss	___fladd@b+3,0
  3269  0469  2D29               	goto	l3526
  3270  046A  1C41               	btfss	___fladd@grs,0
  3271  046B  2C75               	goto	l3482
  3272  046C  0841               	movf	___fladd@grs,w
  3273  046D  00B6               	movwf	??___fladd
  3274  046E  1003               	clrc
  3275  046F  0C36               	rrf	??___fladd,w
  3276  0470  3801               	iorlw	1
  3277  0471  00B7               	movwf	??___fladd+1
  3278  0472  0837               	movf	??___fladd+1,w
  3279  0473  00C1               	movwf	___fladd@grs
  3280  0474  2C77               	goto	l3484
  3281  0475                     l3482:	
  3282  0475  1003               	clrc
  3283  0476  0CC1               	rrf	___fladd@grs,f
  3284  0477                     l3484:	
  3285  0477  182E               	btfsc	___fladd@b,0
  3286  0478  17C1               	bsf	___fladd@grs,7
  3287  0479  3001               	movlw	1
  3288  047A  00B6               	movwf	??___fladd
  3289  047B                     u2325:	
  3290  047B  0D31               	rlf	___fladd@b+3,w
  3291  047C  0CB1               	rrf	___fladd@b+3,f
  3292  047D  0CB0               	rrf	___fladd@b+2,f
  3293  047E  0CAF               	rrf	___fladd@b+1,f
  3294  047F  0CAE               	rrf	___fladd@b,f
  3295  0480  0BB6               	decfsz	??___fladd& (0+127),f
  3296  0481  2C7B               	goto	u2325
  3297  0482  3001               	movlw	1
  3298  0483  00B6               	movwf	??___fladd
  3299  0484  0836               	movf	??___fladd,w
  3300  0485  07C0               	addwf	___fladd@bexp,f
  3301  0486  2D29               	goto	l3526
  3302  0487                     l3492:	
  3303  0487  0831               	movf	___fladd@b+3,w
  3304  0488  3A80               	xorlw	128
  3305  0489  00FF               	movwf	127
  3306  048A  0835               	movf	___fladd@a+3,w
  3307  048B  3A80               	xorlw	128
  3308  048C  027F               	subwf	127,w
  3309  048D  1D03               	skipz
  3310  048E  2C99               	goto	u2333
  3311  048F  0834               	movf	___fladd@a+2,w
  3312  0490  0230               	subwf	___fladd@b+2,w
  3313  0491  1D03               	skipz
  3314  0492  2C99               	goto	u2333
  3315  0493  0833               	movf	___fladd@a+1,w
  3316  0494  022F               	subwf	___fladd@b+1,w
  3317  0495  1D03               	skipz
  3318  0496  2C99               	goto	u2333
  3319  0497  0832               	movf	___fladd@a,w
  3320  0498  022E               	subwf	___fladd@b,w
  3321  0499                     u2333:	
  3322  0499  1803               	skipnc
  3323  049A  2CF1               	goto	l3502
  3324  049B  30FF               	movlw	255
  3325  049C  00B6               	movwf	??___fladd
  3326  049D  30FF               	movlw	255
  3327  049E  00B7               	movwf	??___fladd+1
  3328  049F  30FF               	movlw	255
  3329  04A0  00B8               	movwf	??___fladd+2
  3330  04A1  30FF               	movlw	255
  3331  04A2  00B9               	movwf	??___fladd+3
  3332  04A3  0832               	movf	___fladd@a,w
  3333  04A4  00BA               	movwf	??___fladd+4
  3334  04A5  0833               	movf	___fladd@a+1,w
  3335  04A6  00BB               	movwf	??___fladd+5
  3336  04A7  0834               	movf	___fladd@a+2,w
  3337  04A8  00BC               	movwf	??___fladd+6
  3338  04A9  0835               	movf	___fladd@a+3,w
  3339  04AA  00BD               	movwf	??___fladd+7
  3340  04AB  082E               	movf	___fladd@b,w
  3341  04AC  02BA               	subwf	??___fladd+4,f
  3342  04AD  082F               	movf	___fladd@b+1,w
  3343  04AE  1C03               	skipc
  3344  04AF  0F2F               	incfsz	___fladd@b+1,w
  3345  04B0  2CB2               	goto	u2341
  3346  04B1  2CB3               	goto	u2342
  3347  04B2                     u2341:	
  3348  04B2  02BB               	subwf	??___fladd+5,f
  3349  04B3                     u2342:	
  3350  04B3  0830               	movf	___fladd@b+2,w
  3351  04B4  1C03               	skipc
  3352  04B5  0F30               	incfsz	___fladd@b+2,w
  3353  04B6  2CB8               	goto	u2343
  3354  04B7  2CB9               	goto	u2344
  3355  04B8                     u2343:	
  3356  04B8  02BC               	subwf	??___fladd+6,f
  3357  04B9                     u2344:	
  3358  04B9  0831               	movf	___fladd@b+3,w
  3359  04BA  1C03               	skipc
  3360  04BB  0F31               	incfsz	___fladd@b+3,w
  3361  04BC  2CBE               	goto	u2345
  3362  04BD  2CBF               	goto	u2346
  3363  04BE                     u2345:	
  3364  04BE  02BD               	subwf	??___fladd+7,f
  3365  04BF                     u2346:	
  3366  04BF  083A               	movf	??___fladd+4,w
  3367  04C0  07B6               	addwf	??___fladd,f
  3368  04C1  083B               	movf	??___fladd+5,w
  3369  04C2  1803               	skipnc
  3370  04C3  0F3B               	incfsz	??___fladd+5,w
  3371  04C4  2CC6               	goto	u2350
  3372  04C5  2CC7               	goto	u2351
  3373  04C6                     u2350:	
  3374  04C6  07B7               	addwf	??___fladd+1,f
  3375  04C7                     u2351:	
  3376  04C7  083C               	movf	??___fladd+6,w
  3377  04C8  1803               	skipnc
  3378  04C9  0F3C               	incfsz	??___fladd+6,w
  3379  04CA  2CCC               	goto	u2352
  3380  04CB  2CCD               	goto	u2353
  3381  04CC                     u2352:	
  3382  04CC  07B8               	addwf	??___fladd+2,f
  3383  04CD                     u2353:	
  3384  04CD  083D               	movf	??___fladd+7,w
  3385  04CE  1803               	skipnc
  3386  04CF  0A3D               	incf	??___fladd+7,w
  3387  04D0  07B9               	addwf	??___fladd+3,f
  3388  04D1  0839               	movf	??___fladd+3,w
  3389  04D2  00B1               	movwf	___fladd@b+3
  3390  04D3  0838               	movf	??___fladd+2,w
  3391  04D4  00B0               	movwf	___fladd@b+2
  3392  04D5  0837               	movf	??___fladd+1,w
  3393  04D6  00AF               	movwf	___fladd@b+1
  3394  04D7  0836               	movf	??___fladd,w
  3395  04D8  00AE               	movwf	___fladd@b
  3396  04D9  3080               	movlw	128
  3397  04DA  00B6               	movwf	??___fladd
  3398  04DB  0836               	movf	??___fladd,w
  3399  04DC  06BE               	xorwf	___fladd@signs,f
  3400  04DD  09C1               	comf	___fladd@grs,f
  3401  04DE  0AC1               	incf	___fladd@grs,f
  3402  04DF  0841               	movf	___fladd@grs,w
  3403  04E0  1D03               	btfss	3,2
  3404  04E1  2CFF               	goto	l886
  3405  04E2  3001               	movlw	1
  3406  04E3  07AE               	addwf	___fladd@b,f
  3407  04E4  3000               	movlw	0
  3408  04E5  1803               	skipnc
  3409  04E6  3001               	movlw	1
  3410  04E7  07AF               	addwf	___fladd@b+1,f
  3411  04E8  3000               	movlw	0
  3412  04E9  1803               	skipnc
  3413  04EA  3001               	movlw	1
  3414  04EB  07B0               	addwf	___fladd@b+2,f
  3415  04EC  3000               	movlw	0
  3416  04ED  1803               	skipnc
  3417  04EE  3001               	movlw	1
  3418  04EF  07B1               	addwf	___fladd@b+3,f
  3419  04F0  2CFF               	goto	l886
  3420  04F1                     l3502:	
  3421  04F1  0832               	movf	___fladd@a,w
  3422  04F2  02AE               	subwf	___fladd@b,f
  3423  04F3  0833               	movf	___fladd@a+1,w
  3424  04F4  1C03               	skipc
  3425  04F5  0F33               	incfsz	___fladd@a+1,w
  3426  04F6  02AF               	subwf	___fladd@b+1,f
  3427  04F7  0834               	movf	___fladd@a+2,w
  3428  04F8  1C03               	skipc
  3429  04F9  0F34               	incfsz	___fladd@a+2,w
  3430  04FA  02B0               	subwf	___fladd@b+2,f
  3431  04FB  0835               	movf	___fladd@a+3,w
  3432  04FC  1C03               	skipc
  3433  04FD  0F35               	incfsz	___fladd@a+3,w
  3434  04FE  02B1               	subwf	___fladd@b+3,f
  3435  04FF                     l886:	
  3436  04FF  0831               	movf	___fladd@b+3,w
  3437  0500  0430               	iorwf	___fladd@b+2,w
  3438  0501  042F               	iorwf	___fladd@b+1,w
  3439  0502  042E               	iorwf	___fladd@b,w
  3440  0503  1D03               	skipz
  3441  0504  2D27               	goto	l3524
  3442  0505  0841               	movf	___fladd@grs,w
  3443  0506  1D03               	btfss	3,2
  3444  0507  2D27               	goto	l3524
  3445  0508  3000               	movlw	0
  3446  0509  00B1               	movwf	?___fladd+3
  3447  050A  3000               	movlw	0
  3448  050B  00B0               	movwf	?___fladd+2
  3449  050C  3000               	movlw	0
  3450  050D  00AF               	movwf	?___fladd+1
  3451  050E  3000               	movlw	0
  3452  050F  00AE               	movwf	?___fladd
  3453  0510  0008               	return
  3454  0511                     l3510:	
  3455  0511  3001               	movlw	1
  3456  0512  00B6               	movwf	??___fladd
  3457  0513                     u2395:	
  3458  0513  1003               	clrc
  3459  0514  0DAE               	rlf	___fladd@b,f
  3460  0515  0DAF               	rlf	___fladd@b+1,f
  3461  0516  0DB0               	rlf	___fladd@b+2,f
  3462  0517  0DB1               	rlf	___fladd@b+3,f
  3463  0518  0BB6               	decfsz	??___fladd,f
  3464  0519  2D13               	goto	u2395
  3465  051A  1BC1               	btfsc	___fladd@grs,7
  3466  051B  142E               	bsf	___fladd@b,0
  3467  051C  1C41               	btfss	___fladd@grs,0
  3468  051D  2D20               	goto	l3518
  3469  051E  1403               	setc
  3470  051F  2D21               	goto	L2
  3471  0520                     l3518:	
  3472  0520  1003               	clrc
  3473  0521                     L2:	
  3474  0521  0DC1               	rlf	___fladd@grs,f
  3475  0522  0840               	movf	___fladd@bexp,w
  3476  0523  1903               	btfsc	3,2
  3477  0524  2D27               	goto	l3524
  3478  0525  3001               	movlw	1
  3479  0526  02C0               	subwf	___fladd@bexp,f
  3480  0527                     l3524:	
  3481  0527  1FB0               	btfss	___fladd@b+2,7
  3482  0528  2D11               	goto	l3510
  3483  0529                     l3526:	
  3484  0529  01BF               	clrf	___fladd@aexp
  3485  052A  1FC1               	btfss	___fladd@grs,7
  3486  052B  2D34               	goto	l3536
  3487  052C  0841               	movf	___fladd@grs,w
  3488  052D  397F               	andlw	127
  3489  052E  1903               	btfsc	3,2
  3490  052F  182E               	btfsc	___fladd@b,0
  3491  0530  2D32               	goto	l3532
  3492  0531  2D34               	goto	l3536
  3493  0532                     l3532:	
  3494  0532  01BF               	clrf	___fladd@aexp
  3495  0533  0ABF               	incf	___fladd@aexp,f
  3496  0534                     l3536:	
  3497  0534  083F               	movf	___fladd@aexp,w
  3498  0535  1903               	btfsc	3,2
  3499  0536  2D67               	goto	l899
  3500  0537  3001               	movlw	1
  3501  0538  07AE               	addwf	___fladd@b,f
  3502  0539  3000               	movlw	0
  3503  053A  1803               	skipnc
  3504  053B  3001               	movlw	1
  3505  053C  07AF               	addwf	___fladd@b+1,f
  3506  053D  3000               	movlw	0
  3507  053E  1803               	skipnc
  3508  053F  3001               	movlw	1
  3509  0540  07B0               	addwf	___fladd@b+2,f
  3510  0541  3000               	movlw	0
  3511  0542  1803               	skipnc
  3512  0543  3001               	movlw	1
  3513  0544  07B1               	addwf	___fladd@b+3,f
  3514  0545  1C31               	btfss	___fladd@b+3,0
  3515  0546  2D67               	goto	l899
  3516  0547  082E               	movf	___fladd@b,w
  3517  0548  00B6               	movwf	??___fladd
  3518  0549  082F               	movf	___fladd@b+1,w
  3519  054A  00B7               	movwf	??___fladd+1
  3520  054B  0830               	movf	___fladd@b+2,w
  3521  054C  00B8               	movwf	??___fladd+2
  3522  054D  0831               	movf	___fladd@b+3,w
  3523  054E  00B9               	movwf	??___fladd+3
  3524  054F  3001               	movlw	1
  3525  0550  00BA               	movwf	??___fladd+4
  3526  0551                     u2495:	
  3527  0551  0D39               	rlf	??___fladd+3,w
  3528  0552  0CB9               	rrf	??___fladd+3,f
  3529  0553  0CB8               	rrf	??___fladd+2,f
  3530  0554  0CB7               	rrf	??___fladd+1,f
  3531  0555  0CB6               	rrf	??___fladd,f
  3532  0556  0BBA               	decfsz	??___fladd+4,f
  3533  0557  2D51               	goto	u2495
  3534  0558  0839               	movf	??___fladd+3,w
  3535  0559  00B1               	movwf	___fladd@b+3
  3536  055A  0838               	movf	??___fladd+2,w
  3537  055B  00B0               	movwf	___fladd@b+2
  3538  055C  0837               	movf	??___fladd+1,w
  3539  055D  00AF               	movwf	___fladd@b+1
  3540  055E  0836               	movf	??___fladd,w
  3541  055F  00AE               	movwf	___fladd@b
  3542  0560  0A40               	incf	___fladd@bexp,w
  3543  0561  1903               	btfsc	3,2
  3544  0562  2D67               	goto	l899
  3545  0563  3001               	movlw	1
  3546  0564  00B6               	movwf	??___fladd
  3547  0565  0836               	movf	??___fladd,w
  3548  0566  07C0               	addwf	___fladd@bexp,f
  3549  0567                     l899:	
  3550  0567  0A40               	incf	___fladd@bexp,w
  3551  0568  1D03               	btfss	3,2
  3552  0569  0840               	movf	___fladd@bexp,w
  3553  056A  1D03               	btfss	3,2
  3554  056B  2D77               	goto	l3554
  3555  056C  3000               	movlw	0
  3556  056D  00B1               	movwf	___fladd@b+3
  3557  056E  3000               	movlw	0
  3558  056F  00B0               	movwf	___fladd@b+2
  3559  0570  3000               	movlw	0
  3560  0571  00AF               	movwf	___fladd@b+1
  3561  0572  3000               	movlw	0
  3562  0573  00AE               	movwf	___fladd@b
  3563  0574  0840               	movf	___fladd@bexp,w
  3564  0575  1903               	btfsc	3,2
  3565  0576  01BE               	clrf	___fladd@signs
  3566  0577                     l3554:	
  3567  0577  1C40               	btfss	___fladd@bexp,0
  3568  0578  2D7B               	goto	l3558
  3569  0579  17B0               	bsf	___fladd@b+2,7
  3570  057A  2D7F               	goto	l907
  3571  057B                     l3558:	
  3572  057B  307F               	movlw	127
  3573  057C  00B6               	movwf	??___fladd
  3574  057D  0836               	movf	??___fladd,w
  3575  057E  05B0               	andwf	___fladd@b+2,f
  3576  057F                     l907:	
  3577  057F  0840               	movf	___fladd@bexp,w
  3578  0580  00B6               	movwf	??___fladd
  3579  0581  1003               	clrc
  3580  0582  0C36               	rrf	??___fladd,w
  3581  0583  00B7               	movwf	??___fladd+1
  3582  0584  0837               	movf	??___fladd+1,w
  3583  0585  00B1               	movwf	___fladd@b+3
  3584  0586  1FBE               	btfss	___fladd@signs,7
  3585  0587  0008               	return
  3586  0588  17B1               	bsf	___fladd@b+3,7
  3587  0589  0008               	return
  3588  058A                     __end_of___fladd:	
  3589                           
  3590                           	psect	text9
  3591  0756                     __ptext9:	
  3592 ;; *************** function _pressBoton2 *****************
  3593 ;; Defined at:
  3594 ;;		line 492 in file "main_Master.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;		None
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;		None
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      void 
  3601 ;; Registers used:
  3602 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3608 ;;      Params:         0       0       0       0       0
  3609 ;;      Locals:         0       0       0       0       0
  3610 ;;      Temps:          0       2       0       0       0
  3611 ;;      Totals:         0       2       0       0       0
  3612 ;;Total ram usage:        2 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; Hardware stack levels required when called:    3
  3615 ;; This function calls:
  3616 ;;		_LCD_Set_Cursor
  3617 ;;		_LCD_Write_Character
  3618 ;;		_LCD_clear
  3619 ;; This function is called by:
  3620 ;;		_main
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           
  3625                           ;psect for function _pressBoton2
  3626  0756                     _pressBoton2:	
  3627                           
  3628                           ;main_Master.c: 493:     if (banderaBoton == 1){
  3629                           
  3630                           ;incstack = 0
  3631                           ; Regs used in _pressBoton2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3632  0756  1283               	bcf	3,5	;RP0=0, select bank0
  3633  0757  1303               	bcf	3,6	;RP1=0, select bank0
  3634  0758  0361               	decf	_banderaBoton,w
  3635  0759  1D03               	btfss	3,2
  3636  075A  2FEA               	goto	l5020
  3637                           
  3638                           ;main_Master.c: 494:         if (banderaPUSH2 == 0){
  3639  075B  085F               	movf	_banderaPUSH2,w
  3640  075C  1D03               	btfss	3,2
  3641  075D  2FEA               	goto	l5020
  3642                           
  3643                           ;main_Master.c: 495:             if (PORTBbits.RB2 == 0){
  3644  075E  1D06               	btfss	6,2	;volatile
  3645  075F  2FCB               	goto	l5012
  3646  0760  2FE4               	goto	l5014
  3647  0761                     l4980:	
  3648                           
  3649                           ;main_Master.c: 498:                         estado = 6;
  3650  0761  3006               	movlw	6
  3651  0762  2FBC               	goto	L7
  3652  0763                     l4982:	
  3653                           ;main_Master.c: 499:                         break;
  3654                           
  3655                           
  3656                           ;main_Master.c: 501:                         LCD_Set_Cursor(2,0);
  3657  0763  01F5               	clrf	LCD_Set_Cursor@columna
  3658  0764  3002               	movlw	2
  3659  0765  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  3660                           
  3661                           ;main_Master.c: 502:                         LCD_Write_Character(1);
  3662  076A  3001               	movlw	1
  3663  076B  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  3664                           
  3665                           ;main_Master.c: 503:                         _delay((unsigned long)((100)*(4000000/4000.
      +                          0)));
  3666  0770  3082               	movlw	130
  3667  0771  1283               	bcf	3,5	;RP0=0, select bank0
  3668  0772  1303               	bcf	3,6	;RP1=0, select bank0
  3669  0773  00A1               	movwf	??_pressBoton2+1
  3670  0774  30DD               	movlw	221
  3671  0775  00A0               	movwf	??_pressBoton2
  3672  0776                     u3477:	
  3673  0776  0BA0               	decfsz	??_pressBoton2,f
  3674  0777  2F76               	goto	u3477
  3675  0778  0BA1               	decfsz	??_pressBoton2+1,f
  3676  0779  2F76               	goto	u3477
  3677                           
  3678                           ;main_Master.c: 504:                         estado = 7;
  3679  077A  3007               	movlw	7
  3680  077B  2FBA               	goto	L8
  3681  077C                     l4990:	
  3682                           ;main_Master.c: 505:                         break;
  3683                           
  3684                           
  3685                           ;main_Master.c: 507:                         LCD_Set_Cursor(2,7);
  3686  077C  3007               	movlw	7
  3687  077D  00A0               	movwf	??_pressBoton2
  3688  077E  0820               	movf	??_pressBoton2,w
  3689  077F  00F5               	movwf	LCD_Set_Cursor@columna
  3690  0780  3002               	movlw	2
  3691  0781  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  3692                           
  3693                           ;main_Master.c: 508:                         LCD_Write_Character(1);
  3694  0786  3001               	movlw	1
  3695  0787  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  3696                           
  3697                           ;main_Master.c: 509:                         _delay((unsigned long)((100)*(4000000/4000.
      +                          0)));
  3698  078C  3082               	movlw	130
  3699  078D  1283               	bcf	3,5	;RP0=0, select bank0
  3700  078E  1303               	bcf	3,6	;RP1=0, select bank0
  3701  078F  00A1               	movwf	??_pressBoton2+1
  3702  0790  30DD               	movlw	221
  3703  0791  00A0               	movwf	??_pressBoton2
  3704  0792                     u3487:	
  3705  0792  0BA0               	decfsz	??_pressBoton2,f
  3706  0793  2F92               	goto	u3487
  3707  0794  0BA1               	decfsz	??_pressBoton2+1,f
  3708  0795  2F92               	goto	u3487
  3709                           
  3710                           ;main_Master.c: 510:                         estado = 8;
  3711  0796  3008               	movlw	8
  3712  0797  2FBA               	goto	L8
  3713  0798                     l4998:	
  3714                           ;main_Master.c: 511:                         break;
  3715                           
  3716                           
  3717                           ;main_Master.c: 513:                         LCD_Set_Cursor(2,10);
  3718  0798  300A               	movlw	10
  3719  0799  00A0               	movwf	??_pressBoton2
  3720  079A  0820               	movf	??_pressBoton2,w
  3721  079B  00F5               	movwf	LCD_Set_Cursor@columna
  3722  079C  3002               	movlw	2
  3723  079D  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  3724                           
  3725                           ;main_Master.c: 514:                         LCD_Write_Character(1);
  3726  07A2  3001               	movlw	1
  3727  07A3  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  3728                           
  3729                           ;main_Master.c: 515:                         _delay((unsigned long)((100)*(4000000/4000.
      +                          0)));
  3730  07A8  3082               	movlw	130
  3731  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  3732  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  3733  07AB  00A1               	movwf	??_pressBoton2+1
  3734  07AC  30DD               	movlw	221
  3735  07AD  00A0               	movwf	??_pressBoton2
  3736  07AE                     u3497:	
  3737  07AE  0BA0               	decfsz	??_pressBoton2,f
  3738  07AF  2FAE               	goto	u3497
  3739  07B0  0BA1               	decfsz	??_pressBoton2+1,f
  3740  07B1  2FAE               	goto	u3497
  3741                           
  3742                           ;main_Master.c: 516:                         estado = 9;
  3743  07B2  3009               	movlw	9
  3744  07B3  2FBA               	goto	L8
  3745  07B4                     l5006:	
  3746                           ;main_Master.c: 517:                         break;
  3747                           
  3748                           
  3749                           ;main_Master.c: 519:                         LCD_clear();
  3750  07B4  160A  118A  23D7  120A  118A  	fcall	_LCD_clear
  3751                           
  3752                           ;main_Master.c: 520:                         estado = 10;
  3753  07B9  300A               	movlw	10
  3754  07BA                     L8:	
  3755  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  3756  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  3757  07BC                     L7:	
  3758  07BC  00A0               	movwf	??_pressBoton2
  3759  07BD  0820               	movf	??_pressBoton2,w
  3760  07BE  00FB               	movwf	_estado
  3761                           
  3762                           ;main_Master.c: 521:                         break;
  3763  07BF  2FE4               	goto	l5014
  3764  07C0                     l5010:	
  3765                           
  3766                           ;main_Master.c: 523:                         _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  3767  07C0  300D               	movlw	13
  3768  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  3769  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  3770  07C3  00A1               	movwf	??_pressBoton2+1
  3771  07C4  30FB               	movlw	251
  3772  07C5  00A0               	movwf	??_pressBoton2
  3773  07C6                     u3507:	
  3774  07C6  0BA0               	decfsz	??_pressBoton2,f
  3775  07C7  2FC6               	goto	u3507
  3776  07C8  0BA1               	decfsz	??_pressBoton2+1,f
  3777  07C9  2FC6               	goto	u3507
  3778                           
  3779                           ;main_Master.c: 524:                 }
  3780  07CA  2FE4               	goto	l5014
  3781  07CB                     l5012:	
  3782  07CB  087B               	movf	_estado,w
  3783  07CC  00A0               	movwf	??_pressBoton2
  3784  07CD  01A1               	clrf	??_pressBoton2+1
  3785                           
  3786                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3787                           ; Switch size 1, requested type "simple"
  3788                           ; Number of cases is 1, Range of values is 0 to 0
  3789                           ; switch strategies available:
  3790                           ; Name         Instructions Cycles
  3791                           ; simple_byte            4     3 (average)
  3792                           ; direct_byte           11     8 (fixed)
  3793                           ; jumptable            260     6 (fixed)
  3794                           ;	Chosen strategy is simple_byte
  3795  07CE  0821               	movf	??_pressBoton2+1,w
  3796  07CF  3A00               	xorlw	0	; case 0
  3797  07D0  1903               	skipnz
  3798  07D1  2FD3               	goto	l5506
  3799  07D2  2FC0               	goto	l5010
  3800  07D3                     l5506:	
  3801                           
  3802                           ; Switch size 1, requested type "simple"
  3803                           ; Number of cases is 5, Range of values is 5 to 9
  3804                           ; switch strategies available:
  3805                           ; Name         Instructions Cycles
  3806                           ; simple_byte           16     9 (average)
  3807                           ; direct_byte           26    11 (fixed)
  3808                           ; jumptable            263     9 (fixed)
  3809                           ;	Chosen strategy is simple_byte
  3810  07D3  0820               	movf	??_pressBoton2,w
  3811  07D4  3A05               	xorlw	5	; case 5
  3812  07D5  1903               	skipnz
  3813  07D6  2F61               	goto	l4980
  3814  07D7  3A03               	xorlw	3	; case 6
  3815  07D8  1903               	skipnz
  3816  07D9  2F63               	goto	l4982
  3817  07DA  3A01               	xorlw	1	; case 7
  3818  07DB  1903               	skipnz
  3819  07DC  2F7C               	goto	l4990
  3820  07DD  3A0F               	xorlw	15	; case 8
  3821  07DE  1903               	skipnz
  3822  07DF  2F98               	goto	l4998
  3823  07E0  3A01               	xorlw	1	; case 9
  3824  07E1  1903               	skipnz
  3825  07E2  2FB4               	goto	l5006
  3826  07E3  2FC0               	goto	l5010
  3827  07E4                     l5014:	
  3828                           
  3829                           ;main_Master.c: 526:                 banderaBoton = 0;
  3830  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  3831  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  3832  07E6  01E1               	clrf	_banderaBoton
  3833                           
  3834                           ;main_Master.c: 527:                 banderaPUSH2 = 1;
  3835  07E7  01DF               	clrf	_banderaPUSH2
  3836  07E8  0ADF               	incf	_banderaPUSH2,f
  3837                           
  3838                           ;main_Master.c: 528:                 INTCONbits.RBIE = 1;
  3839  07E9  158B               	bsf	11,3	;volatile
  3840  07EA                     l5020:	
  3841                           
  3842                           ;main_Master.c: 531:     if (banderaPUSH2 == 1){
  3843  07EA  035F               	decf	_banderaPUSH2,w
  3844  07EB  1D03               	btfss	3,2
  3845  07EC  0008               	return
  3846                           
  3847                           ;main_Master.c: 532:         if (PORTBbits.RB2 == 1){
  3848  07ED  1D06               	btfss	6,2	;volatile
  3849  07EE  0008               	return
  3850                           
  3851                           ;main_Master.c: 533:         _delay((unsigned long)((10)*(4000000/4000.0)));
  3852  07EF  300D               	movlw	13
  3853  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  3854  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  3855  07F2  00A1               	movwf	??_pressBoton2+1
  3856  07F3  30FB               	movlw	251
  3857  07F4  00A0               	movwf	??_pressBoton2
  3858  07F5                     u3517:	
  3859  07F5  0BA0               	decfsz	??_pressBoton2,f
  3860  07F6  2FF5               	goto	u3517
  3861  07F7  0BA1               	decfsz	??_pressBoton2+1,f
  3862  07F8  2FF5               	goto	u3517
  3863                           
  3864                           ;main_Master.c: 534:         banderaPUSH2 = 0;
  3865  07F9  1283               	bcf	3,5	;RP0=0, select bank0
  3866  07FA  1303               	bcf	3,6	;RP1=0, select bank0
  3867  07FB  01DF               	clrf	_banderaPUSH2
  3868  07FC  0008               	return
  3869  07FD                     __end_of_pressBoton2:	
  3870                           
  3871                           	psect	text10
  3872  08CB                     __ptext10:	
  3873 ;; *************** function _pressBoton1 *****************
  3874 ;; Defined at:
  3875 ;;		line 447 in file "main_Master.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;		None
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;		None
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      void 
  3882 ;; Registers used:
  3883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3889 ;;      Params:         0       0       0       0       0
  3890 ;;      Locals:         0       0       0       0       0
  3891 ;;      Temps:          2       0       0       0       0
  3892 ;;      Totals:         2       0       0       0       0
  3893 ;;Total ram usage:        2 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:    3
  3896 ;; This function calls:
  3897 ;;		_LCD_clear
  3898 ;; This function is called by:
  3899 ;;		_main
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           
  3904                           ;psect for function _pressBoton1
  3905  08CB                     _pressBoton1:	
  3906                           
  3907                           ;main_Master.c: 448:     if (banderaBoton == 1){
  3908                           
  3909                           ;incstack = 0
  3910                           ; Regs used in _pressBoton1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3911  08CB  1283               	bcf	3,5	;RP0=0, select bank0
  3912  08CC  1303               	bcf	3,6	;RP1=0, select bank0
  3913  08CD  0361               	decf	_banderaBoton,w
  3914  08CE  1D03               	btfss	3,2
  3915  08CF  2928               	goto	l3920
  3916                           
  3917                           ;main_Master.c: 449:         if (banderaPUSH1 == 0){
  3918  08D0  0860               	movf	_banderaPUSH1,w
  3919  08D1  1D03               	btfss	3,2
  3920  08D2  2928               	goto	l3920
  3921                           
  3922                           ;main_Master.c: 450:             if (PORTBbits.RB1 == 0){
  3923  08D3  1C86               	btfss	6,1	;volatile
  3924  08D4  290F               	goto	l3912
  3925  08D5  2928               	goto	l3920
  3926  08D6                     l3884:	
  3927                           
  3928                           ;main_Master.c: 453:                         velocidad ++;
  3929  08D6  3001               	movlw	1
  3930  08D7  00F7               	movwf	??_pressBoton1
  3931  08D8  0877               	movf	??_pressBoton1,w
  3932  08D9  07E5               	addwf	_velocidad,f
  3933                           
  3934                           ;main_Master.c: 454:                         if (velocidad > 3){
  3935  08DA  3004               	movlw	4
  3936  08DB  0265               	subwf	_velocidad,w
  3937  08DC  1C03               	skipc
  3938  08DD  2922               	goto	l3914
  3939                           
  3940                           ;main_Master.c: 455:                             velocidad = 1;
  3941  08DE  01E5               	clrf	_velocidad
  3942  08DF  0AE5               	incf	_velocidad,f
  3943  08E0  2922               	goto	l3914
  3944  08E1                     l3890:	
  3945                           
  3946                           ;main_Master.c: 459:                         largo ++;
  3947  08E1  3001               	movlw	1
  3948  08E2  00F7               	movwf	??_pressBoton1
  3949  08E3  0877               	movf	??_pressBoton1,w
  3950  08E4  07DE               	addwf	_largo,f
  3951                           
  3952                           ;main_Master.c: 460:                         if (largo > 8){
  3953  08E5  3009               	movlw	9
  3954  08E6  025E               	subwf	_largo,w
  3955  08E7  1C03               	skipc
  3956  08E8  2922               	goto	l3914
  3957                           
  3958                           ;main_Master.c: 461:                             largo = 1;
  3959  08E9  01DE               	clrf	_largo
  3960  08EA  0ADE               	incf	_largo,f
  3961  08EB  2922               	goto	l3914
  3962  08EC                     l3896:	
  3963                           
  3964                           ;main_Master.c: 465:                         ancho ++;
  3965  08EC  3001               	movlw	1
  3966  08ED  00F7               	movwf	??_pressBoton1
  3967  08EE  0877               	movf	??_pressBoton1,w
  3968  08EF  07DD               	addwf	_ancho,f
  3969                           
  3970                           ;main_Master.c: 466:                         if (ancho > 8){
  3971  08F0  3009               	movlw	9
  3972  08F1  025D               	subwf	_ancho,w
  3973  08F2  1C03               	skipc
  3974  08F3  2922               	goto	l3914
  3975                           
  3976                           ;main_Master.c: 467:                             ancho = 1;
  3977  08F4  01DD               	clrf	_ancho
  3978  08F5  0ADD               	incf	_ancho,f
  3979  08F6  2922               	goto	l3914
  3980  08F7                     l3902:	
  3981                           
  3982                           ;main_Master.c: 471:                         LCD_clear();
  3983  08F7  160A  118A  23D7  120A  158A  	fcall	_LCD_clear
  3984                           
  3985                           ;main_Master.c: 472:                     _delay((unsigned long)((10)*(4000000/4000.0)));
  3986  08FC  300D               	movlw	13
  3987  08FD  00F8               	movwf	??_pressBoton1+1
  3988  08FE  30FB               	movlw	251
  3989  08FF  00F7               	movwf	??_pressBoton1
  3990  0900                     u3527:	
  3991  0900  0BF7               	decfsz	??_pressBoton1,f
  3992  0901  2900               	goto	u3527
  3993  0902  0BF8               	decfsz	??_pressBoton1+1,f
  3994  0903  2900               	goto	u3527
  3995  0904  2905               	nop2
  3996                           
  3997                           ;main_Master.c: 473:                     estado ++;
  3998  0905  3001               	movlw	1
  3999  0906  00F7               	movwf	??_pressBoton1
  4000  0907  0877               	movf	??_pressBoton1,w
  4001  0908  07FB               	addwf	_estado,f
  4002                           
  4003                           ;main_Master.c: 474:                     if (estado > 5){
  4004  0909  3006               	movlw	6
  4005  090A  027B               	subwf	_estado,w
  4006  090B  1C03               	skipc
  4007  090C  2922               	goto	l3914
  4008                           
  4009                           ;main_Master.c: 475:                         estado = 0;
  4010  090D  01FB               	clrf	_estado
  4011  090E  2922               	goto	l3914
  4012  090F                     l3912:	
  4013  090F  087B               	movf	_estado,w
  4014  0910  00F7               	movwf	??_pressBoton1
  4015  0911  01F8               	clrf	??_pressBoton1+1
  4016                           
  4017                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4018                           ; Switch size 1, requested type "simple"
  4019                           ; Number of cases is 1, Range of values is 0 to 0
  4020                           ; switch strategies available:
  4021                           ; Name         Instructions Cycles
  4022                           ; simple_byte            4     3 (average)
  4023                           ; direct_byte           11     8 (fixed)
  4024                           ; jumptable            260     6 (fixed)
  4025                           ;	Chosen strategy is simple_byte
  4026  0912  0878               	movf	??_pressBoton1+1,w
  4027  0913  3A00               	xorlw	0	; case 0
  4028  0914  1903               	skipnz
  4029  0915  2917               	goto	l5508
  4030  0916  28F7               	goto	l3902
  4031  0917                     l5508:	
  4032                           
  4033                           ; Switch size 1, requested type "simple"
  4034                           ; Number of cases is 3, Range of values is 6 to 8
  4035                           ; switch strategies available:
  4036                           ; Name         Instructions Cycles
  4037                           ; simple_byte           10     6 (average)
  4038                           ; direct_byte           20    11 (fixed)
  4039                           ; jumptable            263     9 (fixed)
  4040                           ;	Chosen strategy is simple_byte
  4041  0917  0877               	movf	??_pressBoton1,w
  4042  0918  3A06               	xorlw	6	; case 6
  4043  0919  1903               	skipnz
  4044  091A  28D6               	goto	l3884
  4045  091B  3A01               	xorlw	1	; case 7
  4046  091C  1903               	skipnz
  4047  091D  28E1               	goto	l3890
  4048  091E  3A0F               	xorlw	15	; case 8
  4049  091F  1903               	skipnz
  4050  0920  28EC               	goto	l3896
  4051  0921  28F7               	goto	l3902
  4052  0922                     l3914:	
  4053                           
  4054                           ;main_Master.c: 478:                 banderaBoton = 0;
  4055  0922  1283               	bcf	3,5	;RP0=0, select bank0
  4056  0923  1303               	bcf	3,6	;RP1=0, select bank0
  4057  0924  01E1               	clrf	_banderaBoton
  4058                           
  4059                           ;main_Master.c: 479:                 banderaPUSH1 = 1;
  4060  0925  01E0               	clrf	_banderaPUSH1
  4061  0926  0AE0               	incf	_banderaPUSH1,f
  4062                           
  4063                           ;main_Master.c: 480:                 INTCONbits.RBIE = 1;
  4064  0927  158B               	bsf	11,3	;volatile
  4065  0928                     l3920:	
  4066                           
  4067                           ;main_Master.c: 484:     if (banderaPUSH1 == 1){
  4068  0928  0360               	decf	_banderaPUSH1,w
  4069  0929  1D03               	btfss	3,2
  4070  092A  0008               	return
  4071                           
  4072                           ;main_Master.c: 485:         if (PORTBbits.RB1 == 1){
  4073  092B  1C86               	btfss	6,1	;volatile
  4074  092C  0008               	return
  4075                           
  4076                           ;main_Master.c: 486:         _delay((unsigned long)((10)*(4000000/4000.0)));
  4077  092D  300D               	movlw	13
  4078  092E  00F8               	movwf	??_pressBoton1+1
  4079  092F  30FB               	movlw	251
  4080  0930  00F7               	movwf	??_pressBoton1
  4081  0931                     u3537:	
  4082  0931  0BF7               	decfsz	??_pressBoton1,f
  4083  0932  2931               	goto	u3537
  4084  0933  0BF8               	decfsz	??_pressBoton1+1,f
  4085  0934  2931               	goto	u3537
  4086  0935  2936               	nop2
  4087                           
  4088                           ;main_Master.c: 487:         banderaPUSH1 = 0;
  4089  0936  1283               	bcf	3,5	;RP0=0, select bank0
  4090  0937  1303               	bcf	3,6	;RP1=0, select bank0
  4091  0938  01E0               	clrf	_banderaPUSH1
  4092  0939  0008               	return
  4093  093A                     __end_of_pressBoton1:	
  4094                           
  4095                           	psect	text11
  4096  0037                     __ptext11:	
  4097 ;; *************** function _mostrarLCD *****************
  4098 ;; Defined at:
  4099 ;;		line 270 in file "main_Master.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  pantalla        1    wreg     unsigned char 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  pantalla        1   26[BANK0 ] unsigned char 
  4104 ;;  dec_atras       1    0        unsigned char 
  4105 ;;  uni_atras       1    0        unsigned char 
  4106 ;;  dec_frente      1    0        unsigned char 
  4107 ;;  uni_frente      1    0        unsigned char 
  4108 ;;  decenas_hume    1    0        unsigned char 
  4109 ;;  unidades_hum    1    0        unsigned char 
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      void 
  4112 ;; Registers used:
  4113 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4119 ;;      Params:         0       0       0       0       0
  4120 ;;      Locals:         0       7       0       0       0
  4121 ;;      Temps:          0       3       0       0       0
  4122 ;;      Totals:         0      10       0       0       0
  4123 ;;Total ram usage:       10 bytes
  4124 ;; Hardware stack levels used:    1
  4125 ;; Hardware stack levels required when called:    4
  4126 ;; This function calls:
  4127 ;;		_I2C_Master_Start
  4128 ;;		_I2C_Master_Stop
  4129 ;;		_I2C_Master_Write
  4130 ;;		_LCD_Set_Cursor
  4131 ;;		_LCD_Write_Character
  4132 ;;		_LCD_Write_String
  4133 ;;		_LCD_clear
  4134 ;;		_display_Datum
  4135 ;;		_display_Uhrzeit
  4136 ;;		_uint_to_array
  4137 ;; This function is called by:
  4138 ;;		_main
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           
  4143                           ;psect for function _mostrarLCD
  4144  0037                     _mostrarLCD:	
  4145                           
  4146                           ;incstack = 0
  4147                           ; Regs used in _mostrarLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4148                           ;mostrarLCD@pantalla stored from wreg
  4149  0037  1283               	bcf	3,5	;RP0=0, select bank0
  4150  0038  1303               	bcf	3,6	;RP1=0, select bank0
  4151  0039  00BA               	movwf	mostrarLCD@pantalla
  4152                           
  4153                           ;main_Master.c: 271:     switch(pantalla){
  4154  003A  2B2F               	goto	l4964
  4155  003B                     l4800:	
  4156                           
  4157                           ;main_Master.c: 273:             display_Uhrzeit(2,4);
  4158  003B  3004               	movlw	4
  4159  003C  00B7               	movwf	??_mostrarLCD
  4160  003D  0837               	movf	??_mostrarLCD,w
  4161  003E  00A8               	movwf	display_Uhrzeit@columna
  4162  003F  3002               	movlw	2
  4163  0040  120A  158A  2656  120A  118A  	fcall	_display_Uhrzeit
  4164                           
  4165                           ;main_Master.c: 274:             display_Datum(1,3);
  4166  0045  3003               	movlw	3
  4167  0046  1283               	bcf	3,5	;RP0=0, select bank0
  4168  0047  1303               	bcf	3,6	;RP1=0, select bank0
  4169  0048  00B7               	movwf	??_mostrarLCD
  4170  0049  0837               	movf	??_mostrarLCD,w
  4171  004A  00A8               	movwf	display_Datum@columna
  4172  004B  3001               	movlw	1
  4173  004C  120A  158A  2728   	fcall	_display_Datum
  4174                           
  4175                           ;main_Master.c: 275:             break;
  4176  004F  0008               	return
  4177  0050                     l4802:	
  4178                           
  4179                           ;main_Master.c: 277:             LCD_Set_Cursor(1,0);
  4180  0050  01F5               	clrf	LCD_Set_Cursor@columna
  4181  0051  3001               	movlw	1
  4182  0052  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4183                           
  4184                           ;main_Master.c: 278:             LCD_Write_String("Ambiente: Suelo:");
  4185  0057  3029               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  4186  0058  160A  118A  2424  120A  118A  	fcall	_LCD_Write_String
  4187                           
  4188                           ;main_Master.c: 279:             LCD_Set_Cursor(2,2);
  4189  005D  3002               	movlw	2
  4190  005E  1283               	bcf	3,5	;RP0=0, select bank0
  4191  005F  1303               	bcf	3,6	;RP1=0, select bank0
  4192  0060  00B7               	movwf	??_mostrarLCD
  4193  0061  0837               	movf	??_mostrarLCD,w
  4194  0062  00F5               	movwf	LCD_Set_Cursor@columna
  4195  0063  3002               	movlw	2
  4196  0064  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4197                           
  4198                           ;main_Master.c: 280:             LCD_Write_Character(2);
  4199  0069  3002               	movlw	2
  4200  006A  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4201                           
  4202                           ;main_Master.c: 281:             obj_array = uint_to_array(temperatura);
  4203  006F  1283               	bcf	3,5	;RP0=0, select bank0
  4204  0070  1303               	bcf	3,6	;RP1=0, select bank0
  4205  0071  0864               	movf	_temperatura,w
  4206  0072  120A  158A  213A  120A  118A  	fcall	_uint_to_array
  4207  0077  1283               	bcf	3,5	;RP0=0, select bank0
  4208  0078  1303               	bcf	3,6	;RP1=0, select bank0
  4209  0079  00B7               	movwf	??_mostrarLCD
  4210  007A  0837               	movf	??_mostrarLCD,w
  4211  007B  00E2               	movwf	_obj_array
  4212                           
  4213                           ;main_Master.c: 282:             if (obj_array[0] == 0){
  4214  007C  0862               	movf	_obj_array,w
  4215  007D  0084               	movwf	4
  4216  007E  1383               	bcf	3,7	;select IRP bank0
  4217  007F  0800               	movf	0,w
  4218  0080  00B7               	movwf	??_mostrarLCD
  4219  0081  0A84               	incf	4,f
  4220  0082  0800               	movf	0,w
  4221  0083  00B8               	movwf	??_mostrarLCD+1
  4222  0084  0837               	movf	??_mostrarLCD,w
  4223  0085  0438               	iorwf	??_mostrarLCD+1,w
  4224  0086  1D03               	btfss	3,2
  4225  0087  288A               	goto	l4812
  4226                           
  4227                           ;main_Master.c: 283:                 LCD_Write_Character(' ');
  4228  0088  3020               	movlw	32
  4229  0089  288E               	goto	L9
  4230  008A                     l4812:	
  4231                           ;main_Master.c: 284:             }
  4232                           
  4233                           
  4234                           ;main_Master.c: 286:                 LCD_Write_Character('0' + obj_array[0]);
  4235  008A  0862               	movf	_obj_array,w
  4236  008B  0084               	movwf	4
  4237  008C  0800               	movf	0,w
  4238  008D  3E30               	addlw	48
  4239  008E                     L9:	
  4240  008E  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4241                           
  4242                           ;main_Master.c: 288:             LCD_Write_Character('0' + obj_array[1]);
  4243                           
  4244                           ;main_Master.c: 287:             }
  4245  0093  1283               	bcf	3,5	;RP0=0, select bank0
  4246  0094  1303               	bcf	3,6	;RP1=0, select bank0
  4247  0095  0862               	movf	_obj_array,w
  4248  0096  3E02               	addlw	2
  4249  0097  0084               	movwf	4
  4250  0098  1383               	bcf	3,7	;select IRP bank0
  4251  0099  0800               	movf	0,w
  4252  009A  3E30               	addlw	48
  4253  009B  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4254                           
  4255                           ;main_Master.c: 289:             LCD_Write_Character('0' + obj_array[2]);
  4256  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  4257  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  4258  00A2  0862               	movf	_obj_array,w
  4259  00A3  3E04               	addlw	4
  4260  00A4  0084               	movwf	4
  4261  00A5  1383               	bcf	3,7	;select IRP bank0
  4262  00A6  0800               	movf	0,w
  4263  00A7  3E30               	addlw	48
  4264  00A8  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4265                           
  4266                           ;main_Master.c: 290:             LCD_Write_Character(223);
  4267  00AD  30DF               	movlw	223
  4268  00AE  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4269                           
  4270                           ;main_Master.c: 291:             LCD_Write_Character('C');
  4271  00B3  3043               	movlw	67
  4272  00B4  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4273                           
  4274                           ;main_Master.c: 293:             LCD_Set_Cursor(2,10);
  4275  00B9  300A               	movlw	10
  4276  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  4277  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  4278  00BC  00B7               	movwf	??_mostrarLCD
  4279  00BD  0837               	movf	??_mostrarLCD,w
  4280  00BE  00F5               	movwf	LCD_Set_Cursor@columna
  4281  00BF  3002               	movlw	2
  4282  00C0  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4283                           
  4284                           ;main_Master.c: 294:             LCD_Write_Character(2);
  4285  00C5  3002               	movlw	2
  4286  00C6  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4287                           
  4288                           ;main_Master.c: 295:             obj_array = uint_to_array(temperatura_obj);
  4289  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  4290  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  4291  00CD  0863               	movf	_temperatura_obj,w
  4292  00CE  120A  158A  213A  120A  118A  	fcall	_uint_to_array
  4293  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  4294  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  4295  00D5  00B7               	movwf	??_mostrarLCD
  4296  00D6  0837               	movf	??_mostrarLCD,w
  4297  00D7  00E2               	movwf	_obj_array
  4298                           
  4299                           ;main_Master.c: 296:             if (obj_array[0] == 0){
  4300  00D8  0862               	movf	_obj_array,w
  4301  00D9  0084               	movwf	4
  4302  00DA  1383               	bcf	3,7	;select IRP bank0
  4303  00DB  0800               	movf	0,w
  4304  00DC  00B7               	movwf	??_mostrarLCD
  4305  00DD  0A84               	incf	4,f
  4306  00DE  0800               	movf	0,w
  4307  00DF  00B8               	movwf	??_mostrarLCD+1
  4308  00E0  0837               	movf	??_mostrarLCD,w
  4309  00E1  0438               	iorwf	??_mostrarLCD+1,w
  4310  00E2  1D03               	btfss	3,2
  4311  00E3  28E6               	goto	l4826
  4312                           
  4313                           ;main_Master.c: 297:                 LCD_Write_Character(' ');
  4314  00E4  3020               	movlw	32
  4315  00E5  28EA               	goto	L10
  4316  00E6                     l4826:	
  4317                           ;main_Master.c: 298:             }
  4318                           
  4319                           
  4320                           ;main_Master.c: 300:                 LCD_Write_Character('0' + obj_array[0]);
  4321  00E6  0862               	movf	_obj_array,w
  4322  00E7  0084               	movwf	4
  4323  00E8  0800               	movf	0,w
  4324  00E9  3E30               	addlw	48
  4325  00EA                     L10:	
  4326  00EA  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4327                           
  4328                           ;main_Master.c: 303:             if (obj_array[1] == 0 && obj_array[0] == 0){
  4329  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  4330  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  4331  00F1  0862               	movf	_obj_array,w
  4332  00F2  3E02               	addlw	2
  4333  00F3  0084               	movwf	4
  4334  00F4  1383               	bcf	3,7	;select IRP bank0
  4335  00F5  0800               	movf	0,w
  4336  00F6  00B7               	movwf	??_mostrarLCD
  4337  00F7  0A84               	incf	4,f
  4338  00F8  0800               	movf	0,w
  4339  00F9  00B8               	movwf	??_mostrarLCD+1
  4340  00FA  0837               	movf	??_mostrarLCD,w
  4341  00FB  0438               	iorwf	??_mostrarLCD+1,w
  4342  00FC  1D03               	btfss	3,2
  4343  00FD  290B               	goto	l4834
  4344  00FE  0862               	movf	_obj_array,w
  4345  00FF  0084               	movwf	4
  4346  0100  0800               	movf	0,w
  4347  0101  00B7               	movwf	??_mostrarLCD
  4348  0102  0A84               	incf	4,f
  4349  0103  0800               	movf	0,w
  4350  0104  00B8               	movwf	??_mostrarLCD+1
  4351  0105  0837               	movf	??_mostrarLCD,w
  4352  0106  0438               	iorwf	??_mostrarLCD+1,w
  4353  0107  1D03               	btfss	3,2
  4354  0108  290B               	goto	l4834
  4355                           
  4356                           ;main_Master.c: 304:                 LCD_Write_Character(' ');
  4357  0109  3020               	movlw	32
  4358  010A  2910               	goto	L11
  4359  010B                     l4834:	
  4360                           ;main_Master.c: 305:             }
  4361                           
  4362                           
  4363                           ;main_Master.c: 307:                 LCD_Write_Character('0' + obj_array[1]);
  4364  010B  0862               	movf	_obj_array,w
  4365  010C  3E02               	addlw	2
  4366  010D  0084               	movwf	4
  4367  010E  0800               	movf	0,w
  4368  010F  3E30               	addlw	48
  4369  0110                     L11:	
  4370  0110  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4371                           
  4372                           ;main_Master.c: 309:             LCD_Write_Character('0' + obj_array[2]);
  4373                           
  4374                           ;main_Master.c: 308:             }
  4375  0115  1283               	bcf	3,5	;RP0=0, select bank0
  4376  0116  1303               	bcf	3,6	;RP1=0, select bank0
  4377  0117  0862               	movf	_obj_array,w
  4378  0118  3E04               	addlw	4
  4379  0119  0084               	movwf	4
  4380  011A  1383               	bcf	3,7	;select IRP bank0
  4381  011B  0800               	movf	0,w
  4382  011C  3E30               	addlw	48
  4383  011D  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4384                           
  4385                           ;main_Master.c: 310:             LCD_Write_Character(223);
  4386  0122  30DF               	movlw	223
  4387  0123  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4388                           
  4389                           ;main_Master.c: 311:             LCD_Write_Character('C');
  4390  0128  3043               	movlw	67
  4391  0129  120A  158A  20BC   	fcall	_LCD_Write_Character
  4392                           
  4393                           ;main_Master.c: 312:             break;
  4394  012C  0008               	return
  4395  012D                     l4840:	
  4396                           
  4397                           ;main_Master.c: 314:             LCD_Set_Cursor(1,0);
  4398  012D  01F5               	clrf	LCD_Set_Cursor@columna
  4399  012E  3001               	movlw	1
  4400  012F  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4401                           
  4402                           ;main_Master.c: 315:             LCD_Write_String("Inclinacion:");
  4403  0134  3065               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  4404  0135  160A  118A  2424  120A  118A  	fcall	_LCD_Write_String
  4405                           
  4406                           ;main_Master.c: 316:             LCD_Set_Cursor(2, 5);
  4407  013A  3005               	movlw	5
  4408  013B  1283               	bcf	3,5	;RP0=0, select bank0
  4409  013C  1303               	bcf	3,6	;RP1=0, select bank0
  4410  013D  00B7               	movwf	??_mostrarLCD
  4411  013E  0837               	movf	??_mostrarLCD,w
  4412  013F  00F5               	movwf	LCD_Set_Cursor@columna
  4413  0140  3002               	movlw	2
  4414  0141  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4415                           
  4416                           ;main_Master.c: 320:             LCD_Set_Cursor(2, 5);
  4417  0146  3005               	movlw	5
  4418  0147  1283               	bcf	3,5	;RP0=0, select bank0
  4419  0148  1303               	bcf	3,6	;RP1=0, select bank0
  4420  0149  00B7               	movwf	??_mostrarLCD
  4421  014A  0837               	movf	??_mostrarLCD,w
  4422  014B  00F5               	movwf	LCD_Set_Cursor@columna
  4423  014C  3002               	movlw	2
  4424  014D  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4425                           
  4426                           ;main_Master.c: 321:             if(inclinacion == 0){
  4427  0152  1283               	bcf	3,5	;RP0=0, select bank0
  4428  0153  1303               	bcf	3,6	;RP1=0, select bank0
  4429  0154  0868               	movf	_inclinacion,w
  4430  0155  1D03               	btfss	3,2
  4431  0156  295C               	goto	l4846
  4432                           
  4433                           ;main_Master.c: 322:                 LCD_Write_String("Estable   ");
  4434  0157  308B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  4435  0158  160A  118A  2424   	fcall	_LCD_Write_String
  4436                           
  4437                           ;main_Master.c: 323:             }
  4438  015B  0008               	return
  4439  015C                     l4846:	
  4440  015C  305A               	movlw	90
  4441  015D  0668               	xorwf	_inclinacion,w
  4442  015E  1D03               	btfss	3,2
  4443  015F  2965               	goto	l4850
  4444                           
  4445                           ;main_Master.c: 325:                 LCD_Write_String("Peligro!   ");
  4446  0160  307F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  4447  0161  160A  118A  2424   	fcall	_LCD_Write_String
  4448                           
  4449                           ;main_Master.c: 326:             }
  4450  0164  0008               	return
  4451  0165                     l4850:	
  4452  0165  30B4               	movlw	180
  4453  0166  0668               	xorwf	_inclinacion,w
  4454  0167  1D03               	btfss	3,2
  4455  0168  0008               	return
  4456                           
  4457                           ;main_Master.c: 328:                 LCD_Write_String("EMERGENCIA!  ");
  4458  0169  304A               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  4459  016A  160A  118A  2424   	fcall	_LCD_Write_String
  4460                           
  4461                           ;main_Master.c: 331:             break;
  4462  016D  0008               	return
  4463  016E                     l4854:	
  4464                           
  4465                           ;main_Master.c: 333:             LCD_Set_Cursor(1,0);
  4466  016E  01F5               	clrf	LCD_Set_Cursor@columna
  4467  016F  3001               	movlw	1
  4468  0170  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4469                           
  4470                           ;main_Master.c: 334:             LCD_Write_String("Humedad:");
  4471  0175  3096               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  4472  0176  160A  118A  2424  120A  118A  	fcall	_LCD_Write_String
  4473                           
  4474                           ;main_Master.c: 335:             LCD_Set_Cursor(2,4);
  4475  017B  3004               	movlw	4
  4476  017C  1283               	bcf	3,5	;RP0=0, select bank0
  4477  017D  1303               	bcf	3,6	;RP1=0, select bank0
  4478  017E  00B7               	movwf	??_mostrarLCD
  4479  017F  0837               	movf	??_mostrarLCD,w
  4480  0180  00F5               	movwf	LCD_Set_Cursor@columna
  4481  0181  3002               	movlw	2
  4482  0182  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4483                           
  4484                           ;main_Master.c: 336:             LCD_Write_Character(3);
  4485  0187  3003               	movlw	3
  4486  0188  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4487                           
  4488                           ;main_Master.c: 337:             LCD_Write_Character(' ');
  4489  018D  3020               	movlw	32
  4490  018E  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4491                           
  4492                           ;main_Master.c: 341:                 LCD_Write_Character(' ');
  4493                           
  4494                           ;main_Master.c: 340:             if(decenas_humedad == 0){
  4495  0193  3020               	movlw	32
  4496  0194  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4497                           
  4498                           ;main_Master.c: 346:             LCD_Write_Character('0'+unidades_humedad);
  4499                           
  4500                           ;main_Master.c: 345:             }
  4501  0199  3035               	movlw	53
  4502  019A  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4503                           
  4504                           ;main_Master.c: 347:             LCD_Write_Character('%');
  4505  019F  3025               	movlw	37
  4506  01A0  120A  158A  20BC   	fcall	_LCD_Write_Character
  4507                           
  4508                           ;main_Master.c: 348:             break;
  4509  01A3  0008               	return
  4510  01A4                     l4870:	
  4511                           
  4512                           ;main_Master.c: 350:             LCD_Set_Cursor(1,0);
  4513  01A4  01F5               	clrf	LCD_Set_Cursor@columna
  4514  01A5  3001               	movlw	1
  4515  01A6  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4516                           
  4517                           ;main_Master.c: 351:             LCD_Write_String("Atr");
  4518  01AB  30AA               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  4519  01AC  160A  118A  2424  120A  118A  	fcall	_LCD_Write_String
  4520                           
  4521                           ;main_Master.c: 352:             LCD_Write_Character(0);
  4522  01B1  3000               	movlw	0
  4523  01B2  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4524                           
  4525                           ;main_Master.c: 353:             LCD_Write_String("s: | Frente:");
  4526  01B7  3058               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  4527  01B8  160A  118A  2424  120A  118A  	fcall	_LCD_Write_String
  4528                           
  4529                           ;main_Master.c: 354:             LCD_Set_Cursor(2,2);
  4530  01BD  3002               	movlw	2
  4531  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  4532  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  4533  01C0  00B7               	movwf	??_mostrarLCD
  4534  01C1  0837               	movf	??_mostrarLCD,w
  4535  01C2  00F5               	movwf	LCD_Set_Cursor@columna
  4536  01C3  3002               	movlw	2
  4537  01C4  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4538                           
  4539                           ;main_Master.c: 368:                 LCD_Write_String("----");
  4540                           
  4541                           ;main_Master.c: 355:             if(d_frente < 100){
  4542  01C9  30A5               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  4543  01CA  160A  118A  2424  120A  118A  	fcall	_LCD_Write_String
  4544                           
  4545                           ;main_Master.c: 371:             LCD_Set_Cursor(2,7);
  4546                           
  4547                           ;main_Master.c: 369:             }
  4548  01CF  3007               	movlw	7
  4549  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  4550  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  4551  01D2  00B7               	movwf	??_mostrarLCD
  4552  01D3  0837               	movf	??_mostrarLCD,w
  4553  01D4  00F5               	movwf	LCD_Set_Cursor@columna
  4554  01D5  3002               	movlw	2
  4555  01D6  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4556                           
  4557                           ;main_Master.c: 372:             LCD_Write_Character('|');
  4558  01DB  307C               	movlw	124
  4559  01DC  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4560                           
  4561                           ;main_Master.c: 373:             LCD_Set_Cursor(2,11);
  4562  01E1  300B               	movlw	11
  4563  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  4564  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  4565  01E4  00B7               	movwf	??_mostrarLCD
  4566  01E5  0837               	movf	??_mostrarLCD,w
  4567  01E6  00F5               	movwf	LCD_Set_Cursor@columna
  4568  01E7  3002               	movlw	2
  4569  01E8  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4570                           
  4571                           ;main_Master.c: 387:                 LCD_Write_String("----");
  4572                           
  4573                           ;main_Master.c: 374:             if(d_atras < 100){
  4574  01ED  30A5               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  4575  01EE  160A  118A  2424   	fcall	_LCD_Write_String
  4576  01F1  0008               	return
  4577  01F2                     l4906:	
  4578                           
  4579                           ;main_Master.c: 391:             LCD_Set_Cursor(1, 0);
  4580  01F2  01F5               	clrf	LCD_Set_Cursor@columna
  4581  01F3  3001               	movlw	1
  4582  01F4  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4583                           
  4584                           ;main_Master.c: 392:             LCD_Write_String("Tomar datos:");
  4585  01F9  3072               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  4586  01FA  160A  118A  2424  120A  118A  	fcall	_LCD_Write_String
  4587                           
  4588                           ;main_Master.c: 393:             LCD_Set_Cursor(2,1);
  4589  01FF  01F5               	clrf	LCD_Set_Cursor@columna
  4590  0200  0AF5               	incf	LCD_Set_Cursor@columna,f
  4591  0201  3002               	movlw	2
  4592  0202  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4593                           
  4594                           ;main_Master.c: 394:             LCD_Write_Character(velocidad + '0');
  4595  0207  1283               	bcf	3,5	;RP0=0, select bank0
  4596  0208  1303               	bcf	3,6	;RP1=0, select bank0
  4597  0209  0865               	movf	_velocidad,w
  4598  020A  3E30               	addlw	48
  4599  020B  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4600                           
  4601                           ;main_Master.c: 395:             LCD_Set_Cursor(2,8);
  4602  0210  3008               	movlw	8
  4603  0211  1283               	bcf	3,5	;RP0=0, select bank0
  4604  0212  1303               	bcf	3,6	;RP1=0, select bank0
  4605  0213  00B7               	movwf	??_mostrarLCD
  4606  0214  0837               	movf	??_mostrarLCD,w
  4607  0215  00F5               	movwf	LCD_Set_Cursor@columna
  4608  0216  3002               	movlw	2
  4609  0217  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4610                           
  4611                           ;main_Master.c: 396:             LCD_Write_Character('0' + largo);
  4612  021C  1283               	bcf	3,5	;RP0=0, select bank0
  4613  021D  1303               	bcf	3,6	;RP1=0, select bank0
  4614  021E  085E               	movf	_largo,w
  4615  021F  3E30               	addlw	48
  4616  0220  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4617                           
  4618                           ;main_Master.c: 397:             LCD_Write_String("x ");
  4619  0225  30AE               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  4620  0226  160A  118A  2424  120A  118A  	fcall	_LCD_Write_String
  4621                           
  4622                           ;main_Master.c: 398:             LCD_Write_Character('0' + ancho);
  4623  022B  1283               	bcf	3,5	;RP0=0, select bank0
  4624  022C  1303               	bcf	3,6	;RP1=0, select bank0
  4625  022D  085D               	movf	_ancho,w
  4626  022E  3E30               	addlw	48
  4627  022F  120A  158A  20BC   	fcall	_LCD_Write_Character
  4628                           
  4629                           ;main_Master.c: 399:             break;
  4630  0232  0008               	return
  4631  0233                     l4916:	
  4632                           
  4633                           ;main_Master.c: 401:             LCD_Set_Cursor(2,0);
  4634  0233  01F5               	clrf	LCD_Set_Cursor@columna
  4635  0234  3002               	movlw	2
  4636  0235  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4637                           
  4638                           ;main_Master.c: 402:             LCD_Write_Character(4);
  4639  023A  3004               	movlw	4
  4640  023B  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4641                           
  4642                           ;main_Master.c: 403:             LCD_Write_Character(velocidad + '0');
  4643  0240  1283               	bcf	3,5	;RP0=0, select bank0
  4644  0241  1303               	bcf	3,6	;RP1=0, select bank0
  4645  0242  0865               	movf	_velocidad,w
  4646  0243  3E30               	addlw	48
  4647  0244  120A  158A  20BC   	fcall	_LCD_Write_Character
  4648                           
  4649                           ;main_Master.c: 404:             break;
  4650  0247  0008               	return
  4651  0248                     l4922:	
  4652                           
  4653                           ;main_Master.c: 406:             LCD_Set_Cursor(2,0);
  4654  0248  01F5               	clrf	LCD_Set_Cursor@columna
  4655  0249  3002               	movlw	2
  4656  024A  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4657                           
  4658                           ;main_Master.c: 407:             LCD_Write_Character(' ');
  4659  024F  3020               	movlw	32
  4660  0250  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4661                           
  4662                           ;main_Master.c: 408:             LCD_Set_Cursor(2,7);
  4663  0255  3007               	movlw	7
  4664  0256  1283               	bcf	3,5	;RP0=0, select bank0
  4665  0257  1303               	bcf	3,6	;RP1=0, select bank0
  4666  0258  00B7               	movwf	??_mostrarLCD
  4667  0259  0837               	movf	??_mostrarLCD,w
  4668  025A  00F5               	movwf	LCD_Set_Cursor@columna
  4669  025B  3002               	movlw	2
  4670  025C  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4671                           
  4672                           ;main_Master.c: 409:             LCD_Write_Character(4);
  4673  0261  3004               	movlw	4
  4674  0262  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4675                           
  4676                           ;main_Master.c: 410:             LCD_Write_Character('0' + largo);
  4677  0267  1283               	bcf	3,5	;RP0=0, select bank0
  4678  0268  1303               	bcf	3,6	;RP1=0, select bank0
  4679  0269  085E               	movf	_largo,w
  4680  026A  3E30               	addlw	48
  4681  026B  120A  158A  20BC   	fcall	_LCD_Write_Character
  4682                           
  4683                           ;main_Master.c: 411:             break;
  4684  026E  0008               	return
  4685  026F                     l4928:	
  4686                           
  4687                           ;main_Master.c: 413:             LCD_Set_Cursor(2,7);
  4688  026F  3007               	movlw	7
  4689  0270  00B7               	movwf	??_mostrarLCD
  4690  0271  0837               	movf	??_mostrarLCD,w
  4691  0272  00F5               	movwf	LCD_Set_Cursor@columna
  4692  0273  3002               	movlw	2
  4693  0274  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4694                           
  4695                           ;main_Master.c: 414:             LCD_Write_Character(' ');
  4696  0279  3020               	movlw	32
  4697  027A  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4698                           
  4699                           ;main_Master.c: 415:             LCD_Set_Cursor(2,10);
  4700  027F  300A               	movlw	10
  4701  0280  1283               	bcf	3,5	;RP0=0, select bank0
  4702  0281  1303               	bcf	3,6	;RP1=0, select bank0
  4703  0282  00B7               	movwf	??_mostrarLCD
  4704  0283  0837               	movf	??_mostrarLCD,w
  4705  0284  00F5               	movwf	LCD_Set_Cursor@columna
  4706  0285  3002               	movlw	2
  4707  0286  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4708                           
  4709                           ;main_Master.c: 416:             LCD_Write_Character(4);
  4710  028B  3004               	movlw	4
  4711  028C  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4712                           
  4713                           ;main_Master.c: 417:             LCD_Write_Character('0' + ancho);
  4714  0291  1283               	bcf	3,5	;RP0=0, select bank0
  4715  0292  1303               	bcf	3,6	;RP1=0, select bank0
  4716  0293  085D               	movf	_ancho,w
  4717  0294  3E30               	addlw	48
  4718  0295  120A  158A  20BC   	fcall	_LCD_Write_Character
  4719                           
  4720                           ;main_Master.c: 418:             break;
  4721  0298  0008               	return
  4722  0299                     l4934:	
  4723                           
  4724                           ;main_Master.c: 420:             LCD_Set_Cursor(2,10);
  4725  0299  300A               	movlw	10
  4726  029A  00B7               	movwf	??_mostrarLCD
  4727  029B  0837               	movf	??_mostrarLCD,w
  4728  029C  00F5               	movwf	LCD_Set_Cursor@columna
  4729  029D  3002               	movlw	2
  4730  029E  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4731                           
  4732                           ;main_Master.c: 421:             LCD_Write_Character(' ');
  4733  02A3  3020               	movlw	32
  4734  02A4  120A  158A  20BC  120A  118A  	fcall	_LCD_Write_Character
  4735                           
  4736                           ;main_Master.c: 422:             LCD_Set_Cursor(2,15);
  4737  02A9  300F               	movlw	15
  4738  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  4739  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  4740  02AC  00B7               	movwf	??_mostrarLCD
  4741  02AD  0837               	movf	??_mostrarLCD,w
  4742  02AE  00F5               	movwf	LCD_Set_Cursor@columna
  4743  02AF  3002               	movlw	2
  4744  02B0  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4745                           
  4746                           ;main_Master.c: 423:             LCD_Write_Character(1);
  4747  02B5  3001               	movlw	1
  4748  02B6  120A  158A  20BC   	fcall	_LCD_Write_Character
  4749                           
  4750                           ;main_Master.c: 424:             break;
  4751  02B9  0008               	return
  4752  02BA                     l4940:	
  4753                           
  4754                           ;main_Master.c: 426:             LCD_Set_Cursor(1,0);
  4755  02BA  01F5               	clrf	LCD_Set_Cursor@columna
  4756  02BB  3001               	movlw	1
  4757  02BC  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4758                           
  4759                           ;main_Master.c: 427:             LCD_Write_String("Vamonos Perros!");
  4760  02C1  303A               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  4761  02C2  160A  118A  2424  120A  118A  	fcall	_LCD_Write_String
  4762                           
  4763                           ;main_Master.c: 429:             I2C_Master_Start();
  4764  02C7  160A  118A  235A  120A  118A  	fcall	_I2C_Master_Start
  4765                           
  4766                           ;main_Master.c: 430:             I2C_Master_Write(0x30);
  4767  02CC  3030               	movlw	48
  4768  02CD  00F2               	movwf	I2C_Master_Write@d
  4769  02CE  3000               	movlw	0
  4770  02CF  00F3               	movwf	I2C_Master_Write@d+1
  4771  02D0  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  4772                           
  4773                           ;main_Master.c: 431:             I2C_Master_Write(0x69);
  4774  02D5  3069               	movlw	105
  4775  02D6  00F2               	movwf	I2C_Master_Write@d
  4776  02D7  3000               	movlw	0
  4777  02D8  00F3               	movwf	I2C_Master_Write@d+1
  4778  02D9  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  4779                           
  4780                           ;main_Master.c: 432:             I2C_Master_Write(largo);
  4781  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  4782  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  4783  02E0  085E               	movf	_largo,w
  4784  02E1  00B7               	movwf	??_mostrarLCD
  4785  02E2  01B8               	clrf	??_mostrarLCD+1
  4786  02E3  0837               	movf	??_mostrarLCD,w
  4787  02E4  00F2               	movwf	I2C_Master_Write@d
  4788  02E5  0838               	movf	??_mostrarLCD+1,w
  4789  02E6  00F3               	movwf	I2C_Master_Write@d+1
  4790  02E7  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  4791                           
  4792                           ;main_Master.c: 433:             I2C_Master_Write(ancho);
  4793  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  4794  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  4795  02EE  085D               	movf	_ancho,w
  4796  02EF  00B7               	movwf	??_mostrarLCD
  4797  02F0  01B8               	clrf	??_mostrarLCD+1
  4798  02F1  0837               	movf	??_mostrarLCD,w
  4799  02F2  00F2               	movwf	I2C_Master_Write@d
  4800  02F3  0838               	movf	??_mostrarLCD+1,w
  4801  02F4  00F3               	movwf	I2C_Master_Write@d+1
  4802  02F5  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  4803                           
  4804                           ;main_Master.c: 434:             I2C_Master_Write(velocidad);
  4805  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  4806  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  4807  02FC  0865               	movf	_velocidad,w
  4808  02FD  00B7               	movwf	??_mostrarLCD
  4809  02FE  01B8               	clrf	??_mostrarLCD+1
  4810  02FF  0837               	movf	??_mostrarLCD,w
  4811  0300  00F2               	movwf	I2C_Master_Write@d
  4812  0301  0838               	movf	??_mostrarLCD+1,w
  4813  0302  00F3               	movwf	I2C_Master_Write@d+1
  4814  0303  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  4815                           
  4816                           ;main_Master.c: 435:             I2C_Master_Stop();
  4817  0308  160A  118A  2361  120A  118A  	fcall	_I2C_Master_Stop
  4818                           
  4819                           ;main_Master.c: 437:             _delay((unsigned long)((500)*(4000000/4000.0)));
  4820  030D  3003               	movlw	3
  4821  030E  1283               	bcf	3,5	;RP0=0, select bank0
  4822  030F  1303               	bcf	3,6	;RP1=0, select bank0
  4823  0310  00B9               	movwf	??_mostrarLCD+2
  4824  0311  308A               	movlw	138
  4825  0312  00B8               	movwf	??_mostrarLCD+1
  4826  0313  3055               	movlw	85
  4827  0314  00B7               	movwf	??_mostrarLCD
  4828  0315                     u3547:	
  4829  0315  0BB7               	decfsz	??_mostrarLCD,f
  4830  0316  2B15               	goto	u3547
  4831  0317  0BB8               	decfsz	??_mostrarLCD+1,f
  4832  0318  2B15               	goto	u3547
  4833  0319  0BB9               	decfsz	??_mostrarLCD+2,f
  4834  031A  2B15               	goto	u3547
  4835                           
  4836                           ;main_Master.c: 438:             LCD_clear();
  4837  031B  160A  118A  23D7   	fcall	_LCD_clear
  4838                           
  4839                           ;main_Master.c: 439:             estado = 0;
  4840  031E  01FB               	clrf	_estado
  4841                           
  4842                           ;main_Master.c: 440:             break;
  4843  031F  0008               	return
  4844  0320                     l4962:	
  4845                           
  4846                           ;main_Master.c: 442:             LCD_Set_Cursor(1,9);
  4847  0320  3009               	movlw	9
  4848  0321  00B7               	movwf	??_mostrarLCD
  4849  0322  0837               	movf	??_mostrarLCD,w
  4850  0323  00F5               	movwf	LCD_Set_Cursor@columna
  4851  0324  3001               	movlw	1
  4852  0325  160A  118A  249E  120A  118A  	fcall	_LCD_Set_Cursor
  4853                           
  4854                           ;main_Master.c: 443:             LCD_Write_String("ERROR");
  4855  032A  309F               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  4856  032B  160A  118A  2424   	fcall	_LCD_Write_String
  4857                           
  4858                           ;main_Master.c: 444:     }
  4859  032E  0008               	return
  4860  032F                     l4964:	
  4861  032F  083A               	movf	mostrarLCD@pantalla,w
  4862  0330  00B7               	movwf	??_mostrarLCD
  4863  0331  01B8               	clrf	??_mostrarLCD+1
  4864                           
  4865                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4866                           ; Switch size 1, requested type "simple"
  4867                           ; Number of cases is 1, Range of values is 0 to 0
  4868                           ; switch strategies available:
  4869                           ; Name         Instructions Cycles
  4870                           ; simple_byte            4     3 (average)
  4871                           ; direct_byte           11     8 (fixed)
  4872                           ; jumptable            260     6 (fixed)
  4873                           ;	Chosen strategy is simple_byte
  4874  0332  0838               	movf	??_mostrarLCD+1,w
  4875  0333  3A00               	xorlw	0	; case 0
  4876  0334  1903               	skipnz
  4877  0335  2B37               	goto	l5510
  4878  0336  2B20               	goto	l4962
  4879  0337                     l5510:	
  4880                           
  4881                           ; Switch size 1, requested type "simple"
  4882                           ; Number of cases is 11, Range of values is 0 to 10
  4883                           ; switch strategies available:
  4884                           ; Name         Instructions Cycles
  4885                           ; simple_byte           34    18 (average)
  4886                           ; direct_byte           41     8 (fixed)
  4887                           ; jumptable            260     6 (fixed)
  4888                           ;	Chosen strategy is simple_byte
  4889  0337  0837               	movf	??_mostrarLCD,w
  4890  0338  3A00               	xorlw	0	; case 0
  4891  0339  1903               	skipnz
  4892  033A  283B               	goto	l4800
  4893  033B  3A01               	xorlw	1	; case 1
  4894  033C  1903               	skipnz
  4895  033D  2850               	goto	l4802
  4896  033E  3A03               	xorlw	3	; case 2
  4897  033F  1903               	skipnz
  4898  0340  292D               	goto	l4840
  4899  0341  3A01               	xorlw	1	; case 3
  4900  0342  1903               	skipnz
  4901  0343  296E               	goto	l4854
  4902  0344  3A07               	xorlw	7	; case 4
  4903  0345  1903               	skipnz
  4904  0346  29A4               	goto	l4870
  4905  0347  3A01               	xorlw	1	; case 5
  4906  0348  1903               	skipnz
  4907  0349  29F2               	goto	l4906
  4908  034A  3A03               	xorlw	3	; case 6
  4909  034B  1903               	skipnz
  4910  034C  2A33               	goto	l4916
  4911  034D  3A01               	xorlw	1	; case 7
  4912  034E  1903               	skipnz
  4913  034F  2A48               	goto	l4922
  4914  0350  3A0F               	xorlw	15	; case 8
  4915  0351  1903               	skipnz
  4916  0352  2A6F               	goto	l4928
  4917  0353  3A01               	xorlw	1	; case 9
  4918  0354  1903               	skipnz
  4919  0355  2A99               	goto	l4934
  4920  0356  3A03               	xorlw	3	; case 10
  4921  0357  1903               	skipnz
  4922  0358  2ABA               	goto	l4940
  4923  0359  2B20               	goto	l4962
  4924  035A  0008               	return
  4925  035B                     __end_of_mostrarLCD:	
  4926                           
  4927                           	psect	text12
  4928  093A                     __ptext12:	
  4929 ;; *************** function _uint_to_array *****************
  4930 ;; Defined at:
  4931 ;;		line 181 in file "LCD_8bits.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  numero          1    wreg     unsigned char 
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;  numero          1   22[BANK0 ] unsigned char 
  4936 ;;  resultado       6   16[BANK0 ] unsigned int [3]
  4937 ;;  centenas        1   15[BANK0 ] unsigned char 
  4938 ;;  decenas         1   14[BANK0 ] unsigned char 
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  1    wreg      PTR unsigned int 
  4941 ;; Registers used:
  4942 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4948 ;;      Params:         0       0       0       0       0
  4949 ;;      Locals:         0       9       0       0       0
  4950 ;;      Temps:          0       6       0       0       0
  4951 ;;      Totals:         0      15       0       0       0
  4952 ;;Total ram usage:       15 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; Hardware stack levels required when called:    2
  4955 ;; This function calls:
  4956 ;;		___awdiv
  4957 ;;		___wmul
  4958 ;; This function is called by:
  4959 ;;		_mostrarLCD
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           
  4964                           ;psect for function _uint_to_array
  4965  093A                     _uint_to_array:	
  4966                           
  4967                           ;incstack = 0
  4968                           ; Regs used in _uint_to_array: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4969                           ;uint_to_array@numero stored from wreg
  4970  093A  1283               	bcf	3,5	;RP0=0, select bank0
  4971  093B  1303               	bcf	3,6	;RP1=0, select bank0
  4972  093C  00B6               	movwf	uint_to_array@numero
  4973                           
  4974                           ;LCD_8bits.c: 182:     uint16_t resultado[3] = {0,0,0};
  4975  093D  3030               	movlw	uint_to_array@resultado& (0+255)
  4976  093E  0084               	movwf	4
  4977  093F  3006               	movlw	6
  4978  0940  00FF               	movwf	127
  4979  0941                     u3210:	
  4980  0941  1383               	bcf	3,7	;select IRP bank0
  4981  0942  0180               	clrf	0
  4982  0943  0A84               	incf	4,f
  4983  0944  0BFF               	decfsz	127,f
  4984  0945  2941               	goto	u3210
  4985                           
  4986                           ;LCD_8bits.c: 183:     resultado[0] = numero/100;
  4987  0946  3064               	movlw	100
  4988  0947  00A0               	movwf	___awdiv@divisor
  4989  0948  3000               	movlw	0
  4990  0949  00A1               	movwf	___awdiv@divisor+1
  4991  094A  0836               	movf	uint_to_array@numero,w
  4992  094B  00A8               	movwf	??_uint_to_array
  4993  094C  01A9               	clrf	??_uint_to_array+1
  4994  094D  0828               	movf	??_uint_to_array,w
  4995  094E  00A2               	movwf	___awdiv@dividend
  4996  094F  0829               	movf	??_uint_to_array+1,w
  4997  0950  00A3               	movwf	___awdiv@dividend+1
  4998  0951  160A  118A  25ED  120A  158A  	fcall	___awdiv
  4999  0956  1283               	bcf	3,5	;RP0=0, select bank0
  5000  0957  1303               	bcf	3,6	;RP1=0, select bank0
  5001  0958  0821               	movf	?___awdiv+1,w
  5002  0959  00B1               	movwf	uint_to_array@resultado+1
  5003  095A  0820               	movf	?___awdiv,w
  5004  095B  00B0               	movwf	uint_to_array@resultado
  5005                           
  5006                           ;LCD_8bits.c: 184:     uint8_t centenas = resultado[0];
  5007  095C  0830               	movf	uint_to_array@resultado,w
  5008  095D  00A8               	movwf	??_uint_to_array
  5009  095E  0828               	movf	??_uint_to_array,w
  5010  095F  00AF               	movwf	uint_to_array@centenas
  5011                           
  5012                           ;LCD_8bits.c: 185:     resultado[1] = (numero - (centenas *100))/10;
  5013  0960  300A               	movlw	10
  5014  0961  00A0               	movwf	___awdiv@divisor
  5015  0962  3000               	movlw	0
  5016  0963  00A1               	movwf	___awdiv@divisor+1
  5017  0964  082F               	movf	uint_to_array@centenas,w
  5018  0965  00A8               	movwf	??_uint_to_array
  5019  0966  01A9               	clrf	??_uint_to_array+1
  5020  0967  0828               	movf	??_uint_to_array,w
  5021  0968  00F2               	movwf	___wmul@multiplier
  5022  0969  0829               	movf	??_uint_to_array+1,w
  5023  096A  00F3               	movwf	___wmul@multiplier+1
  5024  096B  309C               	movlw	156
  5025  096C  00F4               	movwf	___wmul@multiplicand
  5026  096D  30FF               	movlw	255
  5027  096E  00F5               	movwf	___wmul@multiplicand+1
  5028  096F  160A  118A  2403  120A  158A  	fcall	___wmul
  5029  0974  1283               	bcf	3,5	;RP0=0, select bank0
  5030  0975  1303               	bcf	3,6	;RP1=0, select bank0
  5031  0976  0836               	movf	uint_to_array@numero,w
  5032  0977  0772               	addwf	?___wmul,w
  5033  0978  00A2               	movwf	___awdiv@dividend
  5034  0979  0873               	movf	?___wmul+1,w
  5035  097A  1803               	skipnc
  5036  097B  0A73               	incf	?___wmul+1,w
  5037  097C  00A3               	movwf	___awdiv@dividend+1
  5038  097D  160A  118A  25ED  120A  158A  	fcall	___awdiv
  5039  0982  1283               	bcf	3,5	;RP0=0, select bank0
  5040  0983  1303               	bcf	3,6	;RP1=0, select bank0
  5041  0984  0821               	movf	?___awdiv+1,w
  5042  0985  00B3               	movwf	uint_to_array@resultado+3
  5043  0986  0820               	movf	?___awdiv,w
  5044  0987  00B2               	movwf	uint_to_array@resultado+2
  5045                           
  5046                           ;LCD_8bits.c: 186:     uint8_t decenas = resultado[1];
  5047  0988  0832               	movf	uint_to_array@resultado+2,w
  5048  0989  00A8               	movwf	??_uint_to_array
  5049  098A  0828               	movf	??_uint_to_array,w
  5050  098B  00AE               	movwf	uint_to_array@decenas
  5051                           
  5052                           ;LCD_8bits.c: 187:     resultado[2] = numero -(centenas*100+decenas*10);
  5053  098C  082F               	movf	uint_to_array@centenas,w
  5054  098D  00A8               	movwf	??_uint_to_array
  5055  098E  01A9               	clrf	??_uint_to_array+1
  5056  098F  0828               	movf	??_uint_to_array,w
  5057  0990  00F2               	movwf	___wmul@multiplier
  5058  0991  0829               	movf	??_uint_to_array+1,w
  5059  0992  00F3               	movwf	___wmul@multiplier+1
  5060  0993  309C               	movlw	156
  5061  0994  00F4               	movwf	___wmul@multiplicand
  5062  0995  30FF               	movlw	255
  5063  0996  00F5               	movwf	___wmul@multiplicand+1
  5064  0997  160A  118A  2403  120A  158A  	fcall	___wmul
  5065  099C  1283               	bcf	3,5	;RP0=0, select bank0
  5066  099D  1303               	bcf	3,6	;RP1=0, select bank0
  5067  099E  0836               	movf	uint_to_array@numero,w
  5068  099F  0772               	addwf	?___wmul,w
  5069  09A0  00AA               	movwf	??_uint_to_array+2
  5070  09A1  0873               	movf	?___wmul+1,w
  5071  09A2  1803               	skipnc
  5072  09A3  0A73               	incf	?___wmul+1,w
  5073  09A4  00AB               	movwf	??_uint_to_array+3
  5074  09A5  082E               	movf	uint_to_array@decenas,w
  5075  09A6  00AC               	movwf	??_uint_to_array+4
  5076  09A7  01AD               	clrf	??_uint_to_array+5
  5077  09A8  082C               	movf	??_uint_to_array+4,w
  5078  09A9  00F2               	movwf	___wmul@multiplier
  5079  09AA  082D               	movf	??_uint_to_array+5,w
  5080  09AB  00F3               	movwf	___wmul@multiplier+1
  5081  09AC  30F6               	movlw	246
  5082  09AD  00F4               	movwf	___wmul@multiplicand
  5083  09AE  30FF               	movlw	255
  5084  09AF  00F5               	movwf	___wmul@multiplicand+1
  5085  09B0  160A  118A  2403   	fcall	___wmul
  5086  09B3  0872               	movf	?___wmul,w
  5087  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  5088  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  5089  09B6  072A               	addwf	??_uint_to_array+2,w
  5090  09B7  00B4               	movwf	uint_to_array@resultado+4
  5091  09B8  0873               	movf	?___wmul+1,w
  5092  09B9  1803               	skipnc
  5093  09BA  0A73               	incf	?___wmul+1,w
  5094  09BB  072B               	addwf	??_uint_to_array+3,w
  5095  09BC  00B5               	movwf	uint_to_array@resultado+5
  5096                           
  5097                           ;LCD_8bits.c: 188:     return(resultado);
  5098  09BD  3030               	movlw	(low (uint_to_array@resultado| 0))& (0+255)
  5099  09BE  0008               	return
  5100  09BF                     __end_of_uint_to_array:	
  5101                           
  5102                           	psect	text13
  5103  1403                     __ptext13:	
  5104 ;; *************** function ___wmul *****************
  5105 ;; Defined at:
  5106 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;  multiplier      2    2[COMMON] unsigned int 
  5109 ;;  multiplicand    2    4[COMMON] unsigned int 
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;  product         2    6[COMMON] unsigned int 
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  2    2[COMMON] unsigned int 
  5114 ;; Registers used:
  5115 ;;		wreg, status,2, status,0
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5121 ;;      Params:         4       0       0       0       0
  5122 ;;      Locals:         2       0       0       0       0
  5123 ;;      Temps:          0       0       0       0       0
  5124 ;;      Totals:         6       0       0       0       0
  5125 ;;Total ram usage:        6 bytes
  5126 ;; Hardware stack levels used:    1
  5127 ;; Hardware stack levels required when called:    1
  5128 ;; This function calls:
  5129 ;;		Nothing
  5130 ;; This function is called by:
  5131 ;;		_uint_to_array
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135                           
  5136                           ;psect for function ___wmul
  5137  1403                     ___wmul:	
  5138                           
  5139                           ;incstack = 0
  5140                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5141  1403  01F6               	clrf	___wmul@product
  5142  1404  01F7               	clrf	___wmul@product+1
  5143  1405                     l2890:	
  5144  1405  1C72               	btfss	___wmul@multiplier,0
  5145  1406  2C0D               	goto	l572
  5146  1407  0874               	movf	___wmul@multiplicand,w
  5147  1408  07F6               	addwf	___wmul@product,f
  5148  1409  1803               	skipnc
  5149  140A  0AF7               	incf	___wmul@product+1,f
  5150  140B  0875               	movf	___wmul@multiplicand+1,w
  5151  140C  07F7               	addwf	___wmul@product+1,f
  5152  140D                     l572:	
  5153  140D  3001               	movlw	1
  5154  140E                     u1565:	
  5155  140E  1003               	clrc
  5156  140F  0DF4               	rlf	___wmul@multiplicand,f
  5157  1410  0DF5               	rlf	___wmul@multiplicand+1,f
  5158  1411  3EFF               	addlw	-1
  5159  1412  1D03               	skipz
  5160  1413  2C0E               	goto	u1565
  5161  1414  3001               	movlw	1
  5162  1415                     u1575:	
  5163  1415  1003               	clrc
  5164  1416  0CF3               	rrf	___wmul@multiplier+1,f
  5165  1417  0CF2               	rrf	___wmul@multiplier,f
  5166  1418  3EFF               	addlw	-1
  5167  1419  1D03               	skipz
  5168  141A  2C15               	goto	u1575
  5169  141B  0872               	movf	___wmul@multiplier,w
  5170  141C  0473               	iorwf	___wmul@multiplier+1,w
  5171  141D  1D03               	btfss	3,2
  5172  141E  2C05               	goto	l2890
  5173  141F  0877               	movf	___wmul@product+1,w
  5174  1420  00F3               	movwf	?___wmul+1
  5175  1421  0876               	movf	___wmul@product,w
  5176  1422  00F2               	movwf	?___wmul
  5177  1423  0008               	return
  5178  1424                     __end_of___wmul:	
  5179                           
  5180                           	psect	text14
  5181  0E56                     __ptext14:	
  5182 ;; *************** function _display_Uhrzeit *****************
  5183 ;; Defined at:
  5184 ;;		line 229 in file "main_Master.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;  fila            1    wreg     unsigned char 
  5187 ;;  columna         1    8[BANK0 ] unsigned char 
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  fila            1   12[BANK0 ] unsigned char 
  5190 ;;  Uhr_d           1   18[BANK0 ] unsigned char 
  5191 ;;  Uhr_u           1   17[BANK0 ] unsigned char 
  5192 ;;  min_d           1   16[BANK0 ] unsigned char 
  5193 ;;  min_u           1   15[BANK0 ] unsigned char 
  5194 ;;  seg_d           1   14[BANK0 ] unsigned char 
  5195 ;;  seg_u           1   13[BANK0 ] unsigned char 
  5196 ;; Return value:  Size  Location     Type
  5197 ;;                  1    wreg      void 
  5198 ;; Registers used:
  5199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5200 ;; Tracked objects:
  5201 ;;		On entry : 0/0
  5202 ;;		On exit  : 0/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5205 ;;      Params:         0       1       0       0       0
  5206 ;;      Locals:         0       7       0       0       0
  5207 ;;      Temps:          0       3       0       0       0
  5208 ;;      Totals:         0      11       0       0       0
  5209 ;;Total ram usage:       11 bytes
  5210 ;; Hardware stack levels used:    1
  5211 ;; Hardware stack levels required when called:    3
  5212 ;; This function calls:
  5213 ;;		_LCD_Set_Cursor
  5214 ;;		_LCD_Write_Character
  5215 ;;		___awdiv
  5216 ;;		___awmod
  5217 ;; This function is called by:
  5218 ;;		_mostrarLCD
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           
  5223                           ;psect for function _display_Uhrzeit
  5224  0E56                     _display_Uhrzeit:	
  5225                           
  5226                           ;incstack = 0
  5227                           ; Regs used in _display_Uhrzeit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5228                           ;display_Uhrzeit@fila stored from wreg
  5229  0E56  1283               	bcf	3,5	;RP0=0, select bank0
  5230  0E57  1303               	bcf	3,6	;RP1=0, select bank0
  5231  0E58  00AC               	movwf	display_Uhrzeit@fila
  5232                           
  5233                           ;main_Master.c: 230:     char seg_u = seg%10;
  5234  0E59  300A               	movlw	10
  5235  0E5A  00F2               	movwf	___awmod@divisor
  5236  0E5B  3000               	movlw	0
  5237  0E5C  00F3               	movwf	___awmod@divisor+1
  5238  0E5D  087A               	movf	_seg,w
  5239  0E5E  00A9               	movwf	??_display_Uhrzeit
  5240  0E5F  01AA               	clrf	??_display_Uhrzeit+1
  5241  0E60  0829               	movf	??_display_Uhrzeit,w
  5242  0E61  00F4               	movwf	___awmod@dividend
  5243  0E62  082A               	movf	??_display_Uhrzeit+1,w
  5244  0E63  00F5               	movwf	___awmod@dividend+1
  5245  0E64  160A  118A  25A2  120A  158A  	fcall	___awmod
  5246  0E69  0872               	movf	?___awmod,w
  5247  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  5248  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  5249  0E6C  00AB               	movwf	??_display_Uhrzeit+2
  5250  0E6D  082B               	movf	??_display_Uhrzeit+2,w
  5251  0E6E  00AD               	movwf	display_Uhrzeit@seg_u
  5252                           
  5253                           ;main_Master.c: 231:     char seg_d = seg/10;
  5254  0E6F  300A               	movlw	10
  5255  0E70  00A0               	movwf	___awdiv@divisor
  5256  0E71  3000               	movlw	0
  5257  0E72  00A1               	movwf	___awdiv@divisor+1
  5258  0E73  087A               	movf	_seg,w
  5259  0E74  00A9               	movwf	??_display_Uhrzeit
  5260  0E75  01AA               	clrf	??_display_Uhrzeit+1
  5261  0E76  0829               	movf	??_display_Uhrzeit,w
  5262  0E77  00A2               	movwf	___awdiv@dividend
  5263  0E78  082A               	movf	??_display_Uhrzeit+1,w
  5264  0E79  00A3               	movwf	___awdiv@dividend+1
  5265  0E7A  160A  118A  25ED  120A  158A  	fcall	___awdiv
  5266  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  5267  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  5268  0E81  0820               	movf	?___awdiv,w
  5269  0E82  00AB               	movwf	??_display_Uhrzeit+2
  5270  0E83  082B               	movf	??_display_Uhrzeit+2,w
  5271  0E84  00AE               	movwf	display_Uhrzeit@seg_d
  5272                           
  5273                           ;main_Master.c: 232:     char min_u = min%10;
  5274  0E85  300A               	movlw	10
  5275  0E86  00F2               	movwf	___awmod@divisor
  5276  0E87  3000               	movlw	0
  5277  0E88  00F3               	movwf	___awmod@divisor+1
  5278  0E89  086F               	movf	_min,w
  5279  0E8A  00A9               	movwf	??_display_Uhrzeit
  5280  0E8B  01AA               	clrf	??_display_Uhrzeit+1
  5281  0E8C  0829               	movf	??_display_Uhrzeit,w
  5282  0E8D  00F4               	movwf	___awmod@dividend
  5283  0E8E  082A               	movf	??_display_Uhrzeit+1,w
  5284  0E8F  00F5               	movwf	___awmod@dividend+1
  5285  0E90  160A  118A  25A2  120A  158A  	fcall	___awmod
  5286  0E95  0872               	movf	?___awmod,w
  5287  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  5288  0E97  1303               	bcf	3,6	;RP1=0, select bank0
  5289  0E98  00AB               	movwf	??_display_Uhrzeit+2
  5290  0E99  082B               	movf	??_display_Uhrzeit+2,w
  5291  0E9A  00AF               	movwf	display_Uhrzeit@min_u
  5292                           
  5293                           ;main_Master.c: 233:     char min_d = min/10;
  5294  0E9B  300A               	movlw	10
  5295  0E9C  00A0               	movwf	___awdiv@divisor
  5296  0E9D  3000               	movlw	0
  5297  0E9E  00A1               	movwf	___awdiv@divisor+1
  5298  0E9F  086F               	movf	_min,w
  5299  0EA0  00A9               	movwf	??_display_Uhrzeit
  5300  0EA1  01AA               	clrf	??_display_Uhrzeit+1
  5301  0EA2  0829               	movf	??_display_Uhrzeit,w
  5302  0EA3  00A2               	movwf	___awdiv@dividend
  5303  0EA4  082A               	movf	??_display_Uhrzeit+1,w
  5304  0EA5  00A3               	movwf	___awdiv@dividend+1
  5305  0EA6  160A  118A  25ED  120A  158A  	fcall	___awdiv
  5306  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  5307  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  5308  0EAD  0820               	movf	?___awdiv,w
  5309  0EAE  00AB               	movwf	??_display_Uhrzeit+2
  5310  0EAF  082B               	movf	??_display_Uhrzeit+2,w
  5311  0EB0  00B0               	movwf	display_Uhrzeit@min_d
  5312                           
  5313                           ;main_Master.c: 234:     char Uhr_u = hora%10;
  5314  0EB1  300A               	movlw	10
  5315  0EB2  00F2               	movwf	___awmod@divisor
  5316  0EB3  3000               	movlw	0
  5317  0EB4  00F3               	movwf	___awmod@divisor+1
  5318  0EB5  086E               	movf	_hora,w
  5319  0EB6  00A9               	movwf	??_display_Uhrzeit
  5320  0EB7  01AA               	clrf	??_display_Uhrzeit+1
  5321  0EB8  0829               	movf	??_display_Uhrzeit,w
  5322  0EB9  00F4               	movwf	___awmod@dividend
  5323  0EBA  082A               	movf	??_display_Uhrzeit+1,w
  5324  0EBB  00F5               	movwf	___awmod@dividend+1
  5325  0EBC  160A  118A  25A2  120A  158A  	fcall	___awmod
  5326  0EC1  0872               	movf	?___awmod,w
  5327  0EC2  1283               	bcf	3,5	;RP0=0, select bank0
  5328  0EC3  1303               	bcf	3,6	;RP1=0, select bank0
  5329  0EC4  00AB               	movwf	??_display_Uhrzeit+2
  5330  0EC5  082B               	movf	??_display_Uhrzeit+2,w
  5331  0EC6  00B1               	movwf	display_Uhrzeit@Uhr_u
  5332                           
  5333                           ;main_Master.c: 235:     char Uhr_d = hora/10;
  5334  0EC7  300A               	movlw	10
  5335  0EC8  00A0               	movwf	___awdiv@divisor
  5336  0EC9  3000               	movlw	0
  5337  0ECA  00A1               	movwf	___awdiv@divisor+1
  5338  0ECB  086E               	movf	_hora,w
  5339  0ECC  00A9               	movwf	??_display_Uhrzeit
  5340  0ECD  01AA               	clrf	??_display_Uhrzeit+1
  5341  0ECE  0829               	movf	??_display_Uhrzeit,w
  5342  0ECF  00A2               	movwf	___awdiv@dividend
  5343  0ED0  082A               	movf	??_display_Uhrzeit+1,w
  5344  0ED1  00A3               	movwf	___awdiv@dividend+1
  5345  0ED2  160A  118A  25ED  120A  158A  	fcall	___awdiv
  5346  0ED7  1283               	bcf	3,5	;RP0=0, select bank0
  5347  0ED8  1303               	bcf	3,6	;RP1=0, select bank0
  5348  0ED9  0820               	movf	?___awdiv,w
  5349  0EDA  00AB               	movwf	??_display_Uhrzeit+2
  5350  0EDB  082B               	movf	??_display_Uhrzeit+2,w
  5351  0EDC  00B2               	movwf	display_Uhrzeit@Uhr_d
  5352                           
  5353                           ;main_Master.c: 237:     LCD_Set_Cursor(fila, columna);
  5354  0EDD  0828               	movf	display_Uhrzeit@columna,w
  5355  0EDE  00A9               	movwf	??_display_Uhrzeit
  5356  0EDF  0829               	movf	??_display_Uhrzeit,w
  5357  0EE0  00F5               	movwf	LCD_Set_Cursor@columna
  5358  0EE1  082C               	movf	display_Uhrzeit@fila,w
  5359  0EE2  160A  118A  249E  120A  158A  	fcall	_LCD_Set_Cursor
  5360                           
  5361                           ;main_Master.c: 238:     LCD_Write_Character(Uhr_d + '0');
  5362  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  5363  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  5364  0EE9  0832               	movf	display_Uhrzeit@Uhr_d,w
  5365  0EEA  3E30               	addlw	48
  5366  0EEB  120A  158A  20BC  120A  158A  	fcall	_LCD_Write_Character
  5367                           
  5368                           ;main_Master.c: 239:     LCD_Write_Character(Uhr_u + '0');
  5369  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  5370  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  5371  0EF2  0831               	movf	display_Uhrzeit@Uhr_u,w
  5372  0EF3  3E30               	addlw	48
  5373  0EF4  120A  158A  20BC  120A  158A  	fcall	_LCD_Write_Character
  5374                           
  5375                           ;main_Master.c: 240:     LCD_Write_Character(':');
  5376  0EF9  303A               	movlw	58
  5377  0EFA  120A  158A  20BC  120A  158A  	fcall	_LCD_Write_Character
  5378                           
  5379                           ;main_Master.c: 241:     LCD_Write_Character(min_d + '0');
  5380  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  5381  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  5382  0F01  0830               	movf	display_Uhrzeit@min_d,w
  5383  0F02  3E30               	addlw	48
  5384  0F03  120A  158A  20BC  120A  158A  	fcall	_LCD_Write_Character
  5385                           
  5386                           ;main_Master.c: 242:     LCD_Write_Character(min_u + '0');
  5387  0F08  1283               	bcf	3,5	;RP0=0, select bank0
  5388  0F09  1303               	bcf	3,6	;RP1=0, select bank0
  5389  0F0A  082F               	movf	display_Uhrzeit@min_u,w
  5390  0F0B  3E30               	addlw	48
  5391  0F0C  120A  158A  20BC  120A  158A  	fcall	_LCD_Write_Character
  5392                           
  5393                           ;main_Master.c: 243:     LCD_Write_Character(':');
  5394  0F11  303A               	movlw	58
  5395  0F12  120A  158A  20BC  120A  158A  	fcall	_LCD_Write_Character
  5396                           
  5397                           ;main_Master.c: 244:     LCD_Write_Character(seg_d + '0');
  5398  0F17  1283               	bcf	3,5	;RP0=0, select bank0
  5399  0F18  1303               	bcf	3,6	;RP1=0, select bank0
  5400  0F19  082E               	movf	display_Uhrzeit@seg_d,w
  5401  0F1A  3E30               	addlw	48
  5402  0F1B  120A  158A  20BC  120A  158A  	fcall	_LCD_Write_Character
  5403                           
  5404                           ;main_Master.c: 245:     LCD_Write_Character(seg_u + '0');
  5405  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  5406  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  5407  0F22  082D               	movf	display_Uhrzeit@seg_u,w
  5408  0F23  3E30               	addlw	48
  5409  0F24  120A  158A  20BC   	fcall	_LCD_Write_Character
  5410  0F27  0008               	return
  5411  0F28                     __end_of_display_Uhrzeit:	
  5412                           
  5413                           	psect	text15
  5414  0F28                     __ptext15:	
  5415 ;; *************** function _display_Datum *****************
  5416 ;; Defined at:
  5417 ;;		line 249 in file "main_Master.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;  fila            1    wreg     unsigned char 
  5420 ;;  columna         1    8[BANK0 ] unsigned char 
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;  fila            1   12[BANK0 ] unsigned char 
  5423 ;;  jahr_d          1   18[BANK0 ] unsigned char 
  5424 ;;  jahr_u          1   17[BANK0 ] unsigned char 
  5425 ;;  mes_d           1   16[BANK0 ] unsigned char 
  5426 ;;  mes_u           1   15[BANK0 ] unsigned char 
  5427 ;;  dia_d           1   14[BANK0 ] unsigned char 
  5428 ;;  dia_u           1   13[BANK0 ] unsigned char 
  5429 ;; Return value:  Size  Location     Type
  5430 ;;                  1    wreg      void 
  5431 ;; Registers used:
  5432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5438 ;;      Params:         0       1       0       0       0
  5439 ;;      Locals:         0       7       0       0       0
  5440 ;;      Temps:          0       3       0       0       0
  5441 ;;      Totals:         0      11       0       0       0
  5442 ;;Total ram usage:       11 bytes
  5443 ;; Hardware stack levels used:    1
  5444 ;; Hardware stack levels required when called:    3
  5445 ;; This function calls:
  5446 ;;		_LCD_Set_Cursor
  5447 ;;		_LCD_Write_Character
  5448 ;;		_LCD_Write_String
  5449 ;;		___awdiv
  5450 ;;		___awmod
  5451 ;; This function is called by:
  5452 ;;		_mostrarLCD
  5453 ;; This function uses a non-reentrant model
  5454 ;;
  5455                           
  5456                           
  5457                           ;psect for function _display_Datum
  5458  0F28                     _display_Datum:	
  5459                           
  5460                           ;incstack = 0
  5461                           ; Regs used in _display_Datum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5462                           ;display_Datum@fila stored from wreg
  5463  0F28  1283               	bcf	3,5	;RP0=0, select bank0
  5464  0F29  1303               	bcf	3,6	;RP1=0, select bank0
  5465  0F2A  00AC               	movwf	display_Datum@fila
  5466                           
  5467                           ;main_Master.c: 250:     char dia_u = datum%10;
  5468  0F2B  300A               	movlw	10
  5469  0F2C  00F2               	movwf	___awmod@divisor
  5470  0F2D  3000               	movlw	0
  5471  0F2E  00F3               	movwf	___awmod@divisor+1
  5472  0F2F  086C               	movf	_datum,w
  5473  0F30  00A9               	movwf	??_display_Datum
  5474  0F31  01AA               	clrf	??_display_Datum+1
  5475  0F32  0829               	movf	??_display_Datum,w
  5476  0F33  00F4               	movwf	___awmod@dividend
  5477  0F34  082A               	movf	??_display_Datum+1,w
  5478  0F35  00F5               	movwf	___awmod@dividend+1
  5479  0F36  160A  118A  25A2  120A  158A  	fcall	___awmod
  5480  0F3B  0872               	movf	?___awmod,w
  5481  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  5482  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  5483  0F3E  00AB               	movwf	??_display_Datum+2
  5484  0F3F  082B               	movf	??_display_Datum+2,w
  5485  0F40  00AD               	movwf	display_Datum@dia_u
  5486                           
  5487                           ;main_Master.c: 251:     char dia_d = datum/10;
  5488  0F41  300A               	movlw	10
  5489  0F42  00A0               	movwf	___awdiv@divisor
  5490  0F43  3000               	movlw	0
  5491  0F44  00A1               	movwf	___awdiv@divisor+1
  5492  0F45  086C               	movf	_datum,w
  5493  0F46  00A9               	movwf	??_display_Datum
  5494  0F47  01AA               	clrf	??_display_Datum+1
  5495  0F48  0829               	movf	??_display_Datum,w
  5496  0F49  00A2               	movwf	___awdiv@dividend
  5497  0F4A  082A               	movf	??_display_Datum+1,w
  5498  0F4B  00A3               	movwf	___awdiv@dividend+1
  5499  0F4C  160A  118A  25ED  120A  158A  	fcall	___awdiv
  5500  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  5501  0F52  1303               	bcf	3,6	;RP1=0, select bank0
  5502  0F53  0820               	movf	?___awdiv,w
  5503  0F54  00AB               	movwf	??_display_Datum+2
  5504  0F55  082B               	movf	??_display_Datum+2,w
  5505  0F56  00AE               	movwf	display_Datum@dia_d
  5506                           
  5507                           ;main_Master.c: 252:     char mes_u = mes%10;
  5508  0F57  300A               	movlw	10
  5509  0F58  00F2               	movwf	___awmod@divisor
  5510  0F59  3000               	movlw	0
  5511  0F5A  00F3               	movwf	___awmod@divisor+1
  5512  0F5B  086B               	movf	_mes,w
  5513  0F5C  00A9               	movwf	??_display_Datum
  5514  0F5D  01AA               	clrf	??_display_Datum+1
  5515  0F5E  0829               	movf	??_display_Datum,w
  5516  0F5F  00F4               	movwf	___awmod@dividend
  5517  0F60  082A               	movf	??_display_Datum+1,w
  5518  0F61  00F5               	movwf	___awmod@dividend+1
  5519  0F62  160A  118A  25A2  120A  158A  	fcall	___awmod
  5520  0F67  0872               	movf	?___awmod,w
  5521  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  5522  0F69  1303               	bcf	3,6	;RP1=0, select bank0
  5523  0F6A  00AB               	movwf	??_display_Datum+2
  5524  0F6B  082B               	movf	??_display_Datum+2,w
  5525  0F6C  00AF               	movwf	display_Datum@mes_u
  5526                           
  5527                           ;main_Master.c: 253:     char mes_d = mes/10;
  5528  0F6D  300A               	movlw	10
  5529  0F6E  00A0               	movwf	___awdiv@divisor
  5530  0F6F  3000               	movlw	0
  5531  0F70  00A1               	movwf	___awdiv@divisor+1
  5532  0F71  086B               	movf	_mes,w
  5533  0F72  00A9               	movwf	??_display_Datum
  5534  0F73  01AA               	clrf	??_display_Datum+1
  5535  0F74  0829               	movf	??_display_Datum,w
  5536  0F75  00A2               	movwf	___awdiv@dividend
  5537  0F76  082A               	movf	??_display_Datum+1,w
  5538  0F77  00A3               	movwf	___awdiv@dividend+1
  5539  0F78  160A  118A  25ED  120A  158A  	fcall	___awdiv
  5540  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  5541  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  5542  0F7F  0820               	movf	?___awdiv,w
  5543  0F80  00AB               	movwf	??_display_Datum+2
  5544  0F81  082B               	movf	??_display_Datum+2,w
  5545  0F82  00B0               	movwf	display_Datum@mes_d
  5546                           
  5547                           ;main_Master.c: 254:     char jahr_u = jahr%10;
  5548  0F83  300A               	movlw	10
  5549  0F84  00F2               	movwf	___awmod@divisor
  5550  0F85  3000               	movlw	0
  5551  0F86  00F3               	movwf	___awmod@divisor+1
  5552  0F87  086A               	movf	_jahr,w
  5553  0F88  00A9               	movwf	??_display_Datum
  5554  0F89  01AA               	clrf	??_display_Datum+1
  5555  0F8A  0829               	movf	??_display_Datum,w
  5556  0F8B  00F4               	movwf	___awmod@dividend
  5557  0F8C  082A               	movf	??_display_Datum+1,w
  5558  0F8D  00F5               	movwf	___awmod@dividend+1
  5559  0F8E  160A  118A  25A2  120A  158A  	fcall	___awmod
  5560  0F93  0872               	movf	?___awmod,w
  5561  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  5562  0F95  1303               	bcf	3,6	;RP1=0, select bank0
  5563  0F96  00AB               	movwf	??_display_Datum+2
  5564  0F97  082B               	movf	??_display_Datum+2,w
  5565  0F98  00B1               	movwf	display_Datum@jahr_u
  5566                           
  5567                           ;main_Master.c: 255:     char jahr_d = jahr/10;
  5568  0F99  300A               	movlw	10
  5569  0F9A  00A0               	movwf	___awdiv@divisor
  5570  0F9B  3000               	movlw	0
  5571  0F9C  00A1               	movwf	___awdiv@divisor+1
  5572  0F9D  086A               	movf	_jahr,w
  5573  0F9E  00A9               	movwf	??_display_Datum
  5574  0F9F  01AA               	clrf	??_display_Datum+1
  5575  0FA0  0829               	movf	??_display_Datum,w
  5576  0FA1  00A2               	movwf	___awdiv@dividend
  5577  0FA2  082A               	movf	??_display_Datum+1,w
  5578  0FA3  00A3               	movwf	___awdiv@dividend+1
  5579  0FA4  160A  118A  25ED  120A  158A  	fcall	___awdiv
  5580  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  5581  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  5582  0FAB  0820               	movf	?___awdiv,w
  5583  0FAC  00AB               	movwf	??_display_Datum+2
  5584  0FAD  082B               	movf	??_display_Datum+2,w
  5585  0FAE  00B2               	movwf	display_Datum@jahr_d
  5586                           
  5587                           ;main_Master.c: 257:     LCD_Set_Cursor(fila, columna);
  5588  0FAF  0828               	movf	display_Datum@columna,w
  5589  0FB0  00A9               	movwf	??_display_Datum
  5590  0FB1  0829               	movf	??_display_Datum,w
  5591  0FB2  00F5               	movwf	LCD_Set_Cursor@columna
  5592  0FB3  082C               	movf	display_Datum@fila,w
  5593  0FB4  160A  118A  249E  120A  158A  	fcall	_LCD_Set_Cursor
  5594                           
  5595                           ;main_Master.c: 258:     LCD_Write_Character(dia_d + '0');
  5596  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  5597  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  5598  0FBB  082E               	movf	display_Datum@dia_d,w
  5599  0FBC  3E30               	addlw	48
  5600  0FBD  120A  158A  20BC  120A  158A  	fcall	_LCD_Write_Character
  5601                           
  5602                           ;main_Master.c: 259:     LCD_Write_Character(dia_u + '0');
  5603  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  5604  0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  5605  0FC4  082D               	movf	display_Datum@dia_u,w
  5606  0FC5  3E30               	addlw	48
  5607  0FC6  120A  158A  20BC  120A  158A  	fcall	_LCD_Write_Character
  5608                           
  5609                           ;main_Master.c: 260:     LCD_Write_Character('/');
  5610  0FCB  302F               	movlw	47
  5611  0FCC  120A  158A  20BC  120A  158A  	fcall	_LCD_Write_Character
  5612                           
  5613                           ;main_Master.c: 261:     LCD_Write_Character(mes_d + '0');
  5614  0FD1  1283               	bcf	3,5	;RP0=0, select bank0
  5615  0FD2  1303               	bcf	3,6	;RP1=0, select bank0
  5616  0FD3  0830               	movf	display_Datum@mes_d,w
  5617  0FD4  3E30               	addlw	48
  5618  0FD5  120A  158A  20BC  120A  158A  	fcall	_LCD_Write_Character
  5619                           
  5620                           ;main_Master.c: 262:     LCD_Write_Character(mes_u + '0');
  5621  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  5622  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  5623  0FDC  082F               	movf	display_Datum@mes_u,w
  5624  0FDD  3E30               	addlw	48
  5625  0FDE  120A  158A  20BC  120A  158A  	fcall	_LCD_Write_Character
  5626                           
  5627                           ;main_Master.c: 263:     LCD_Write_Character('/');
  5628  0FE3  302F               	movlw	47
  5629  0FE4  120A  158A  20BC  120A  158A  	fcall	_LCD_Write_Character
  5630                           
  5631                           ;main_Master.c: 264:     LCD_Write_String("20");
  5632  0FE9  30B1               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  5633  0FEA  160A  118A  2424  120A  158A  	fcall	_LCD_Write_String
  5634                           
  5635                           ;main_Master.c: 265:     LCD_Write_Character(jahr_d + '0');
  5636  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  5637  0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  5638  0FF1  0832               	movf	display_Datum@jahr_d,w
  5639  0FF2  3E30               	addlw	48
  5640  0FF3  120A  158A  20BC  120A  158A  	fcall	_LCD_Write_Character
  5641                           
  5642                           ;main_Master.c: 266:     LCD_Write_Character(jahr_u + '0');
  5643  0FF8  1283               	bcf	3,5	;RP0=0, select bank0
  5644  0FF9  1303               	bcf	3,6	;RP1=0, select bank0
  5645  0FFA  0831               	movf	display_Datum@jahr_u,w
  5646  0FFB  3E30               	addlw	48
  5647  0FFC  120A  158A  20BC   	fcall	_LCD_Write_Character
  5648  0FFF  0008               	return
  5649  1000                     __end_of_display_Datum:	
  5650                           
  5651                           	psect	text16
  5652  15A2                     __ptext16:	
  5653 ;; *************** function ___awmod *****************
  5654 ;; Defined at:
  5655 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;  divisor         2    2[COMMON] int 
  5658 ;;  dividend        2    4[COMMON] int 
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;  sign            1    8[COMMON] unsigned char 
  5661 ;;  counter         1    7[COMMON] unsigned char 
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  2    2[COMMON] int 
  5664 ;; Registers used:
  5665 ;;		wreg, status,2, status,0
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5671 ;;      Params:         4       0       0       0       0
  5672 ;;      Locals:         2       0       0       0       0
  5673 ;;      Temps:          1       0       0       0       0
  5674 ;;      Totals:         7       0       0       0       0
  5675 ;;Total ram usage:        7 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; Hardware stack levels required when called:    1
  5678 ;; This function calls:
  5679 ;;		Nothing
  5680 ;; This function is called by:
  5681 ;;		_display_Uhrzeit
  5682 ;;		_display_Datum
  5683 ;;		_mostrarLCD
  5684 ;;		_DEC_a_BCD
  5685 ;; This function uses a non-reentrant model
  5686 ;;
  5687                           
  5688                           
  5689                           ;psect for function ___awmod
  5690  15A2                     ___awmod:	
  5691                           
  5692                           ;incstack = 0
  5693                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5694  15A2  01F8               	clrf	___awmod@sign
  5695  15A3  1FF5               	btfss	___awmod@dividend+1,7
  5696  15A4  2DAC               	goto	l2992
  5697  15A5  09F4               	comf	___awmod@dividend,f
  5698  15A6  09F5               	comf	___awmod@dividend+1,f
  5699  15A7  0AF4               	incf	___awmod@dividend,f
  5700  15A8  1903               	skipnz
  5701  15A9  0AF5               	incf	___awmod@dividend+1,f
  5702  15AA  01F8               	clrf	___awmod@sign
  5703  15AB  0AF8               	incf	___awmod@sign,f
  5704  15AC                     l2992:	
  5705  15AC  1FF3               	btfss	___awmod@divisor+1,7
  5706  15AD  2DB3               	goto	l2996
  5707  15AE  09F2               	comf	___awmod@divisor,f
  5708  15AF  09F3               	comf	___awmod@divisor+1,f
  5709  15B0  0AF2               	incf	___awmod@divisor,f
  5710  15B1  1903               	skipnz
  5711  15B2  0AF3               	incf	___awmod@divisor+1,f
  5712  15B3                     l2996:	
  5713  15B3  0872               	movf	___awmod@divisor,w
  5714  15B4  0473               	iorwf	___awmod@divisor+1,w
  5715  15B5  1903               	btfsc	3,2
  5716  15B6  2DE0               	goto	l3014
  5717  15B7  01F7               	clrf	___awmod@counter
  5718  15B8  0AF7               	incf	___awmod@counter,f
  5719  15B9                     l3004:	
  5720  15B9  1BF3               	btfsc	___awmod@divisor+1,7
  5721  15BA  2DC7               	goto	l3006
  5722  15BB  3001               	movlw	1
  5723  15BC                     u1815:	
  5724  15BC  1003               	clrc
  5725  15BD  0DF2               	rlf	___awmod@divisor,f
  5726  15BE  0DF3               	rlf	___awmod@divisor+1,f
  5727  15BF  3EFF               	addlw	-1
  5728  15C0  1D03               	skipz
  5729  15C1  2DBC               	goto	u1815
  5730  15C2  3001               	movlw	1
  5731  15C3  00F6               	movwf	??___awmod
  5732  15C4  0876               	movf	??___awmod,w
  5733  15C5  07F7               	addwf	___awmod@counter,f
  5734  15C6  2DB9               	goto	l3004
  5735  15C7                     l3006:	
  5736  15C7  0873               	movf	___awmod@divisor+1,w
  5737  15C8  0275               	subwf	___awmod@dividend+1,w
  5738  15C9  1D03               	skipz
  5739  15CA  2DCD               	goto	u1835
  5740  15CB  0872               	movf	___awmod@divisor,w
  5741  15CC  0274               	subwf	___awmod@dividend,w
  5742  15CD                     u1835:	
  5743  15CD  1C03               	skipc
  5744  15CE  2DD5               	goto	l3010
  5745  15CF  0872               	movf	___awmod@divisor,w
  5746  15D0  02F4               	subwf	___awmod@dividend,f
  5747  15D1  0873               	movf	___awmod@divisor+1,w
  5748  15D2  1C03               	skipc
  5749  15D3  03F5               	decf	___awmod@dividend+1,f
  5750  15D4  02F5               	subwf	___awmod@dividend+1,f
  5751  15D5                     l3010:	
  5752  15D5  3001               	movlw	1
  5753  15D6                     u1845:	
  5754  15D6  1003               	clrc
  5755  15D7  0CF3               	rrf	___awmod@divisor+1,f
  5756  15D8  0CF2               	rrf	___awmod@divisor,f
  5757  15D9  3EFF               	addlw	-1
  5758  15DA  1D03               	skipz
  5759  15DB  2DD6               	goto	u1845
  5760  15DC  3001               	movlw	1
  5761  15DD  02F7               	subwf	___awmod@counter,f
  5762  15DE  1D03               	btfss	3,2
  5763  15DF  2DC7               	goto	l3006
  5764  15E0                     l3014:	
  5765  15E0  0878               	movf	___awmod@sign,w
  5766  15E1  1903               	btfsc	3,2
  5767  15E2  2DE8               	goto	l3018
  5768  15E3  09F4               	comf	___awmod@dividend,f
  5769  15E4  09F5               	comf	___awmod@dividend+1,f
  5770  15E5  0AF4               	incf	___awmod@dividend,f
  5771  15E6  1903               	skipnz
  5772  15E7  0AF5               	incf	___awmod@dividend+1,f
  5773  15E8                     l3018:	
  5774  15E8  0875               	movf	___awmod@dividend+1,w
  5775  15E9  00F3               	movwf	?___awmod+1
  5776  15EA  0874               	movf	___awmod@dividend,w
  5777  15EB  00F2               	movwf	?___awmod
  5778  15EC  0008               	return
  5779  15ED                     __end_of___awmod:	
  5780                           
  5781                           	psect	text17
  5782  15ED                     __ptext17:	
  5783 ;; *************** function ___awdiv *****************
  5784 ;; Defined at:
  5785 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;  divisor         2    0[BANK0 ] int 
  5788 ;;  dividend        2    2[BANK0 ] int 
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;  quotient        2    6[BANK0 ] int 
  5791 ;;  sign            1    5[BANK0 ] unsigned char 
  5792 ;;  counter         1    4[BANK0 ] unsigned char 
  5793 ;; Return value:  Size  Location     Type
  5794 ;;                  2    0[BANK0 ] int 
  5795 ;; Registers used:
  5796 ;;		wreg, status,2, status,0
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5802 ;;      Params:         0       4       0       0       0
  5803 ;;      Locals:         0       4       0       0       0
  5804 ;;      Temps:          1       0       0       0       0
  5805 ;;      Totals:         1       8       0       0       0
  5806 ;;Total ram usage:        9 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; Hardware stack levels required when called:    1
  5809 ;; This function calls:
  5810 ;;		Nothing
  5811 ;; This function is called by:
  5812 ;;		_display_Uhrzeit
  5813 ;;		_display_Datum
  5814 ;;		_mostrarLCD
  5815 ;;		_uint_to_array
  5816 ;;		_DEC_a_BCD
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           
  5821                           ;psect for function ___awdiv
  5822  15ED                     ___awdiv:	
  5823                           
  5824                           ;incstack = 0
  5825                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5826  15ED  1283               	bcf	3,5	;RP0=0, select bank0
  5827  15EE  1303               	bcf	3,6	;RP1=0, select bank0
  5828  15EF  01A5               	clrf	___awdiv@sign
  5829  15F0  1FA1               	btfss	___awdiv@divisor+1,7
  5830  15F1  2DF9               	goto	l4584
  5831  15F2  09A0               	comf	___awdiv@divisor,f
  5832  15F3  09A1               	comf	___awdiv@divisor+1,f
  5833  15F4  0AA0               	incf	___awdiv@divisor,f
  5834  15F5  1903               	skipnz
  5835  15F6  0AA1               	incf	___awdiv@divisor+1,f
  5836  15F7  01A5               	clrf	___awdiv@sign
  5837  15F8  0AA5               	incf	___awdiv@sign,f
  5838  15F9                     l4584:	
  5839  15F9  1FA3               	btfss	___awdiv@dividend+1,7
  5840  15FA  2E04               	goto	l4590
  5841  15FB  09A2               	comf	___awdiv@dividend,f
  5842  15FC  09A3               	comf	___awdiv@dividend+1,f
  5843  15FD  0AA2               	incf	___awdiv@dividend,f
  5844  15FE  1903               	skipnz
  5845  15FF  0AA3               	incf	___awdiv@dividend+1,f
  5846  1600  3001               	movlw	1
  5847  1601  00F8               	movwf	??___awdiv
  5848  1602  0878               	movf	??___awdiv,w
  5849  1603  06A5               	xorwf	___awdiv@sign,f
  5850  1604                     l4590:	
  5851  1604  01A6               	clrf	___awdiv@quotient
  5852  1605  01A7               	clrf	___awdiv@quotient+1
  5853  1606  0820               	movf	___awdiv@divisor,w
  5854  1607  0421               	iorwf	___awdiv@divisor+1,w
  5855  1608  1903               	btfsc	3,2
  5856  1609  2E3B               	goto	l4612
  5857  160A  01A4               	clrf	___awdiv@counter
  5858  160B  0AA4               	incf	___awdiv@counter,f
  5859  160C                     l4600:	
  5860  160C  1BA1               	btfsc	___awdiv@divisor+1,7
  5861  160D  2E1A               	goto	l4602
  5862  160E  3001               	movlw	1
  5863  160F                     u3135:	
  5864  160F  1003               	clrc
  5865  1610  0DA0               	rlf	___awdiv@divisor,f
  5866  1611  0DA1               	rlf	___awdiv@divisor+1,f
  5867  1612  3EFF               	addlw	-1
  5868  1613  1D03               	skipz
  5869  1614  2E0F               	goto	u3135
  5870  1615  3001               	movlw	1
  5871  1616  00F8               	movwf	??___awdiv
  5872  1617  0878               	movf	??___awdiv,w
  5873  1618  07A4               	addwf	___awdiv@counter,f
  5874  1619  2E0C               	goto	l4600
  5875  161A                     l4602:	
  5876  161A  3001               	movlw	1
  5877  161B                     u3155:	
  5878  161B  1003               	clrc
  5879  161C  0DA6               	rlf	___awdiv@quotient,f
  5880  161D  0DA7               	rlf	___awdiv@quotient+1,f
  5881  161E  3EFF               	addlw	-1
  5882  161F  1D03               	skipz
  5883  1620  2E1B               	goto	u3155
  5884  1621  0821               	movf	___awdiv@divisor+1,w
  5885  1622  0223               	subwf	___awdiv@dividend+1,w
  5886  1623  1D03               	skipz
  5887  1624  2E27               	goto	u3165
  5888  1625  0820               	movf	___awdiv@divisor,w
  5889  1626  0222               	subwf	___awdiv@dividend,w
  5890  1627                     u3165:	
  5891  1627  1C03               	skipc
  5892  1628  2E30               	goto	l4608
  5893  1629  0820               	movf	___awdiv@divisor,w
  5894  162A  02A2               	subwf	___awdiv@dividend,f
  5895  162B  0821               	movf	___awdiv@divisor+1,w
  5896  162C  1C03               	skipc
  5897  162D  03A3               	decf	___awdiv@dividend+1,f
  5898  162E  02A3               	subwf	___awdiv@dividend+1,f
  5899  162F  1426               	bsf	___awdiv@quotient,0
  5900  1630                     l4608:	
  5901  1630  3001               	movlw	1
  5902  1631                     u3175:	
  5903  1631  1003               	clrc
  5904  1632  0CA1               	rrf	___awdiv@divisor+1,f
  5905  1633  0CA0               	rrf	___awdiv@divisor,f
  5906  1634  3EFF               	addlw	-1
  5907  1635  1D03               	skipz
  5908  1636  2E31               	goto	u3175
  5909  1637  3001               	movlw	1
  5910  1638  02A4               	subwf	___awdiv@counter,f
  5911  1639  1D03               	btfss	3,2
  5912  163A  2E1A               	goto	l4602
  5913  163B                     l4612:	
  5914  163B  0825               	movf	___awdiv@sign,w
  5915  163C  1903               	btfsc	3,2
  5916  163D  2E43               	goto	l4616
  5917  163E  09A6               	comf	___awdiv@quotient,f
  5918  163F  09A7               	comf	___awdiv@quotient+1,f
  5919  1640  0AA6               	incf	___awdiv@quotient,f
  5920  1641  1903               	skipnz
  5921  1642  0AA7               	incf	___awdiv@quotient+1,f
  5922  1643                     l4616:	
  5923  1643  0827               	movf	___awdiv@quotient+1,w
  5924  1644  00A1               	movwf	?___awdiv+1
  5925  1645  0826               	movf	___awdiv@quotient,w
  5926  1646  00A0               	movwf	?___awdiv
  5927  1647  0008               	return
  5928  1648                     __end_of___awdiv:	
  5929                           
  5930                           	psect	text18
  5931  1424                     __ptext18:	
  5932 ;; *************** function _LCD_Write_String *****************
  5933 ;; Defined at:
  5934 ;;		line 73 in file "LCD_8bits.c"
  5935 ;; Parameters:    Size  Location     Type
  5936 ;;  a               1    wreg     PTR unsigned char 
  5937 ;;		 -> STR_17(6), STR_16(16), STR_15(3), STR_14(13), 
  5938 ;;		 -> STR_13(5), STR_12(3), STR_11(5), STR_10(3), 
  5939 ;;		 -> STR_9(13), STR_8(4), STR_7(9), STR_6(14), 
  5940 ;;		 -> STR_5(12), STR_4(11), STR_3(13), STR_2(17), 
  5941 ;;		 -> STR_1(3), 
  5942 ;; Auto vars:     Size  Location     Type
  5943 ;;  a               1    6[COMMON] PTR unsigned char 
  5944 ;;		 -> STR_17(6), STR_16(16), STR_15(3), STR_14(13), 
  5945 ;;		 -> STR_13(5), STR_12(3), STR_11(5), STR_10(3), 
  5946 ;;		 -> STR_9(13), STR_8(4), STR_7(9), STR_6(14), 
  5947 ;;		 -> STR_5(12), STR_4(11), STR_3(13), STR_2(17), 
  5948 ;;		 -> STR_1(3), 
  5949 ;;  n               2    4[COMMON] int 
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  1    wreg      void 
  5952 ;; Registers used:
  5953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5959 ;;      Params:         0       0       0       0       0
  5960 ;;      Locals:         3       0       0       0       0
  5961 ;;      Temps:          0       0       0       0       0
  5962 ;;      Totals:         3       0       0       0       0
  5963 ;;Total ram usage:        3 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:    2
  5966 ;; This function calls:
  5967 ;;		_LCD_Write_Character
  5968 ;; This function is called by:
  5969 ;;		_display_Datum
  5970 ;;		_mostrarLCD
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           
  5975                           ;psect for function _LCD_Write_String
  5976  1424                     _LCD_Write_String:	
  5977                           
  5978                           ;incstack = 0
  5979                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5980                           ;LCD_Write_String@a stored from wreg
  5981  1424  00F6               	movwf	LCD_Write_String@a
  5982                           
  5983                           ;LCD_8bits.c: 74:     int n;;LCD_8bits.c: 75:     for(n = 0; a[n] != '\0'; n++){
  5984  1425  01F4               	clrf	LCD_Write_String@n
  5985  1426  01F5               	clrf	LCD_Write_String@n+1
  5986  1427                     l2874:	
  5987  1427  0874               	movf	LCD_Write_String@n,w
  5988  1428  0776               	addwf	LCD_Write_String@a,w
  5989  1429  0084               	movwf	4
  5990  142A  120A  158A  2000  160A  118A  	fcall	stringdir
  5991  142F  3A00               	xorlw	0
  5992  1430  1903               	btfsc	3,2
  5993  1431  0008               	return
  5994                           
  5995                           ;LCD_8bits.c: 76:         LCD_Write_Character(a[n]);
  5996  1432  0874               	movf	LCD_Write_String@n,w
  5997  1433  0776               	addwf	LCD_Write_String@a,w
  5998  1434  0084               	movwf	4
  5999  1435  120A  158A  2000  160A  118A  	fcall	stringdir
  6000  143A  120A  158A  20BC  160A  118A  	fcall	_LCD_Write_Character
  6001                           
  6002                           ;LCD_8bits.c: 77:     }
  6003  143F  3001               	movlw	1
  6004  1440  07F4               	addwf	LCD_Write_String@n,f
  6005  1441  1803               	skipnc
  6006  1442  0AF5               	incf	LCD_Write_String@n+1,f
  6007  1443  3000               	movlw	0
  6008  1444  07F5               	addwf	LCD_Write_String@n+1,f
  6009  1445  2C27               	goto	l2874
  6010  1446                     __end_of_LCD_Write_String:	
  6011                           
  6012                           	psect	text19
  6013  149E                     __ptext19:	
  6014 ;; *************** function _LCD_Set_Cursor *****************
  6015 ;; Defined at:
  6016 ;;		line 80 in file "LCD_8bits.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;  linea           1    wreg     unsigned char 
  6019 ;;  columna         1    5[COMMON] unsigned char 
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;  linea           1    8[COMMON] unsigned char 
  6022 ;;  corrimiento     1    9[COMMON] unsigned char 
  6023 ;; Return value:  Size  Location     Type
  6024 ;;                  1    wreg      void 
  6025 ;; Registers used:
  6026 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6032 ;;      Params:         1       0       0       0       0
  6033 ;;      Locals:         2       0       0       0       0
  6034 ;;      Temps:          2       0       0       0       0
  6035 ;;      Totals:         5       0       0       0       0
  6036 ;;Total ram usage:        5 bytes
  6037 ;; Hardware stack levels used:    1
  6038 ;; Hardware stack levels required when called:    2
  6039 ;; This function calls:
  6040 ;;		_LCD_Cmd
  6041 ;; This function is called by:
  6042 ;;		_display_Uhrzeit
  6043 ;;		_display_Datum
  6044 ;;		_mostrarLCD
  6045 ;;		_pressBoton2
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           
  6050                           ;psect for function _LCD_Set_Cursor
  6051  149E                     _LCD_Set_Cursor:	
  6052                           
  6053                           ;incstack = 0
  6054                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6055                           ;LCD_Set_Cursor@linea stored from wreg
  6056  149E  00F8               	movwf	LCD_Set_Cursor@linea
  6057                           
  6058                           ;LCD_8bits.c: 82:     switch (linea){
  6059  149F  2CB9               	goto	l2862
  6060  14A0                     l2852:	
  6061                           
  6062                           ;LCD_8bits.c: 84:             corrimiento = 0x80 + columna;
  6063  14A0  0875               	movf	LCD_Set_Cursor@columna,w
  6064  14A1  3E80               	addlw	128
  6065  14A2  00F6               	movwf	??_LCD_Set_Cursor
  6066  14A3  0876               	movf	??_LCD_Set_Cursor,w
  6067  14A4  00F9               	movwf	LCD_Set_Cursor@corrimiento
  6068                           
  6069                           ;LCD_8bits.c: 85:             LCD_Cmd(corrimiento);
  6070  14A5  0879               	movf	LCD_Set_Cursor@corrimiento,w
  6071  14A6  160A  118A  24CA   	fcall	_LCD_Cmd
  6072                           
  6073                           ;LCD_8bits.c: 86:             break;
  6074  14A9  0008               	return
  6075  14AA                     l2856:	
  6076                           
  6077                           ;LCD_8bits.c: 88:             corrimiento = 0x80 + 0x40 + columna;
  6078  14AA  0875               	movf	LCD_Set_Cursor@columna,w
  6079  14AB  3EC0               	addlw	192
  6080  14AC  00F6               	movwf	??_LCD_Set_Cursor
  6081  14AD  0876               	movf	??_LCD_Set_Cursor,w
  6082  14AE  00F9               	movwf	LCD_Set_Cursor@corrimiento
  6083                           
  6084                           ;LCD_8bits.c: 89:             LCD_Cmd(corrimiento);
  6085  14AF  0879               	movf	LCD_Set_Cursor@corrimiento,w
  6086  14B0  160A  118A  24CA   	fcall	_LCD_Cmd
  6087                           
  6088                           ;LCD_8bits.c: 90:             break;
  6089  14B3  0008               	return
  6090  14B4                     l2860:	
  6091                           
  6092                           ;LCD_8bits.c: 92:             LCD_Cmd(0x80);
  6093  14B4  3080               	movlw	128
  6094  14B5  160A  118A  24CA   	fcall	_LCD_Cmd
  6095                           
  6096                           ;LCD_8bits.c: 93:     }
  6097  14B8  0008               	return
  6098  14B9                     l2862:	
  6099  14B9  0878               	movf	LCD_Set_Cursor@linea,w
  6100  14BA  00F6               	movwf	??_LCD_Set_Cursor
  6101  14BB  01F7               	clrf	??_LCD_Set_Cursor+1
  6102                           
  6103                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6104                           ; Switch size 1, requested type "simple"
  6105                           ; Number of cases is 1, Range of values is 0 to 0
  6106                           ; switch strategies available:
  6107                           ; Name         Instructions Cycles
  6108                           ; simple_byte            4     3 (average)
  6109                           ; direct_byte           11     8 (fixed)
  6110                           ; jumptable            260     6 (fixed)
  6111                           ;	Chosen strategy is simple_byte
  6112  14BC  0877               	movf	??_LCD_Set_Cursor+1,w
  6113  14BD  3A00               	xorlw	0	; case 0
  6114  14BE  1903               	skipnz
  6115  14BF  2CC1               	goto	l5512
  6116  14C0  2CB4               	goto	l2860
  6117  14C1                     l5512:	
  6118                           
  6119                           ; Switch size 1, requested type "simple"
  6120                           ; Number of cases is 2, Range of values is 1 to 2
  6121                           ; switch strategies available:
  6122                           ; Name         Instructions Cycles
  6123                           ; simple_byte            7     4 (average)
  6124                           ; direct_byte           17    11 (fixed)
  6125                           ; jumptable            263     9 (fixed)
  6126                           ;	Chosen strategy is simple_byte
  6127  14C1  0876               	movf	??_LCD_Set_Cursor,w
  6128  14C2  3A01               	xorlw	1	; case 1
  6129  14C3  1903               	skipnz
  6130  14C4  2CA0               	goto	l2852
  6131  14C5  3A03               	xorlw	3	; case 2
  6132  14C6  1903               	skipnz
  6133  14C7  2CAA               	goto	l2856
  6134  14C8  2CB4               	goto	l2860
  6135  14C9  0008               	return
  6136  14CA                     __end_of_LCD_Set_Cursor:	
  6137                           
  6138                           	psect	text20
  6139  058A                     __ptext20:	
  6140 ;; *************** function _get_Time *****************
  6141 ;; Defined at:
  6142 ;;		line 78 in file "RTC.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;		None
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;		None
  6147 ;; Return value:  Size  Location     Type
  6148 ;;                  1    wreg      void 
  6149 ;; Registers used:
  6150 ;;		wreg, status,2, status,0, pclath, cstack
  6151 ;; Tracked objects:
  6152 ;;		On entry : 0/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6156 ;;      Params:         0       0       0       0       0
  6157 ;;      Locals:         0       0       0       0       0
  6158 ;;      Temps:          0       1       0       0       0
  6159 ;;      Totals:         0       1       0       0       0
  6160 ;;Total ram usage:        1 bytes
  6161 ;; Hardware stack levels used:    1
  6162 ;; Hardware stack levels required when called:    3
  6163 ;; This function calls:
  6164 ;;		_BCD_a_DEC
  6165 ;;		_I2C_Master_Read
  6166 ;;		_I2C_Master_Start
  6167 ;;		_I2C_Master_Stop
  6168 ;;		_I2C_Master_Write
  6169 ;; This function is called by:
  6170 ;;		_main
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           
  6175                           ;psect for function _get_Time
  6176  058A                     _get_Time:	
  6177                           
  6178                           ;RTC.c: 79:     I2C_Master_Start();
  6179                           
  6180                           ;incstack = 0
  6181                           ; Regs used in _get_Time: [wreg+status,2+status,0+pclath+cstack]
  6182  058A  160A  118A  235A  120A  118A  	fcall	_I2C_Master_Start
  6183                           
  6184                           ;RTC.c: 80:     I2C_Master_Write(0xD0);
  6185  058F  30D0               	movlw	208
  6186  0590  00F2               	movwf	I2C_Master_Write@d
  6187  0591  3000               	movlw	0
  6188  0592  00F3               	movwf	I2C_Master_Write@d+1
  6189  0593  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  6190                           
  6191                           ;RTC.c: 81:     I2C_Master_Write(0);
  6192  0598  3000               	movlw	0
  6193  0599  00F2               	movwf	I2C_Master_Write@d
  6194  059A  00F3               	movwf	I2C_Master_Write@d+1
  6195  059B  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  6196                           
  6197                           ;RTC.c: 82:     I2C_Master_Stop();
  6198  05A0  160A  118A  2361  120A  118A  	fcall	_I2C_Master_Stop
  6199                           
  6200                           ;RTC.c: 83:     I2C_Master_Start();
  6201  05A5  160A  118A  235A  120A  118A  	fcall	_I2C_Master_Start
  6202                           
  6203                           ;RTC.c: 84:     I2C_Master_Write(0xD1);
  6204  05AA  30D1               	movlw	209
  6205  05AB  00F2               	movwf	I2C_Master_Write@d
  6206  05AC  3000               	movlw	0
  6207  05AD  00F3               	movwf	I2C_Master_Write@d+1
  6208  05AE  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  6209                           
  6210                           ;RTC.c: 85:     seg = BCD_a_DEC(I2C_Master_Read(0));
  6211  05B3  3000               	movlw	0
  6212  05B4  00F2               	movwf	I2C_Master_Read@a
  6213  05B5  00F3               	movwf	I2C_Master_Read@a+1
  6214  05B6  160A  118A  2446  120A  118A  	fcall	_I2C_Master_Read
  6215  05BB  0872               	movf	?_I2C_Master_Read,w
  6216  05BC  160A  118A  23ED  120A  118A  	fcall	_BCD_a_DEC
  6217  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  6218  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  6219  05C3  00A0               	movwf	??_get_Time
  6220  05C4  0820               	movf	??_get_Time,w
  6221  05C5  00FA               	movwf	_seg
  6222                           
  6223                           ;RTC.c: 86:     I2C_Master_Stop();
  6224  05C6  160A  118A  2361  120A  118A  	fcall	_I2C_Master_Stop
  6225                           
  6226                           ;RTC.c: 88:     I2C_Master_Start();
  6227  05CB  160A  118A  235A  120A  118A  	fcall	_I2C_Master_Start
  6228                           
  6229                           ;RTC.c: 89:     I2C_Master_Write(0xD0);
  6230  05D0  30D0               	movlw	208
  6231  05D1  00F2               	movwf	I2C_Master_Write@d
  6232  05D2  3000               	movlw	0
  6233  05D3  00F3               	movwf	I2C_Master_Write@d+1
  6234  05D4  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  6235                           
  6236                           ;RTC.c: 90:     I2C_Master_Write(1);
  6237  05D9  3001               	movlw	1
  6238  05DA  00F2               	movwf	I2C_Master_Write@d
  6239  05DB  3000               	movlw	0
  6240  05DC  00F3               	movwf	I2C_Master_Write@d+1
  6241  05DD  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  6242                           
  6243                           ;RTC.c: 91:     I2C_Master_Stop();
  6244  05E2  160A  118A  2361  120A  118A  	fcall	_I2C_Master_Stop
  6245                           
  6246                           ;RTC.c: 92:     I2C_Master_Start();
  6247  05E7  160A  118A  235A  120A  118A  	fcall	_I2C_Master_Start
  6248                           
  6249                           ;RTC.c: 93:     I2C_Master_Write(0xD1);
  6250  05EC  30D1               	movlw	209
  6251  05ED  00F2               	movwf	I2C_Master_Write@d
  6252  05EE  3000               	movlw	0
  6253  05EF  00F3               	movwf	I2C_Master_Write@d+1
  6254  05F0  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  6255                           
  6256                           ;RTC.c: 94:     min = BCD_a_DEC(I2C_Master_Read(0));
  6257  05F5  3000               	movlw	0
  6258  05F6  00F2               	movwf	I2C_Master_Read@a
  6259  05F7  00F3               	movwf	I2C_Master_Read@a+1
  6260  05F8  160A  118A  2446  120A  118A  	fcall	_I2C_Master_Read
  6261  05FD  0872               	movf	?_I2C_Master_Read,w
  6262  05FE  160A  118A  23ED  120A  118A  	fcall	_BCD_a_DEC
  6263  0603  1283               	bcf	3,5	;RP0=0, select bank0
  6264  0604  1303               	bcf	3,6	;RP1=0, select bank0
  6265  0605  00A0               	movwf	??_get_Time
  6266  0606  0820               	movf	??_get_Time,w
  6267  0607  00EF               	movwf	_min
  6268                           
  6269                           ;RTC.c: 95:     I2C_Master_Stop();
  6270  0608  160A  118A  2361  120A  118A  	fcall	_I2C_Master_Stop
  6271                           
  6272                           ;RTC.c: 97:     I2C_Master_Start();
  6273  060D  160A  118A  235A  120A  118A  	fcall	_I2C_Master_Start
  6274                           
  6275                           ;RTC.c: 98:     I2C_Master_Write(0xD0);
  6276  0612  30D0               	movlw	208
  6277  0613  00F2               	movwf	I2C_Master_Write@d
  6278  0614  3000               	movlw	0
  6279  0615  00F3               	movwf	I2C_Master_Write@d+1
  6280  0616  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  6281                           
  6282                           ;RTC.c: 99:     I2C_Master_Write(2);
  6283  061B  3002               	movlw	2
  6284  061C  00F2               	movwf	I2C_Master_Write@d
  6285  061D  3000               	movlw	0
  6286  061E  00F3               	movwf	I2C_Master_Write@d+1
  6287  061F  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  6288                           
  6289                           ;RTC.c: 100:     I2C_Master_Stop();
  6290  0624  160A  118A  2361  120A  118A  	fcall	_I2C_Master_Stop
  6291                           
  6292                           ;RTC.c: 101:     I2C_Master_Start();
  6293  0629  160A  118A  235A  120A  118A  	fcall	_I2C_Master_Start
  6294                           
  6295                           ;RTC.c: 102:     I2C_Master_Write(0xD1);
  6296  062E  30D1               	movlw	209
  6297  062F  00F2               	movwf	I2C_Master_Write@d
  6298  0630  3000               	movlw	0
  6299  0631  00F3               	movwf	I2C_Master_Write@d+1
  6300  0632  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  6301                           
  6302                           ;RTC.c: 103:     hora = BCD_a_DEC(I2C_Master_Read(0));
  6303  0637  3000               	movlw	0
  6304  0638  00F2               	movwf	I2C_Master_Read@a
  6305  0639  00F3               	movwf	I2C_Master_Read@a+1
  6306  063A  160A  118A  2446  120A  118A  	fcall	_I2C_Master_Read
  6307  063F  0872               	movf	?_I2C_Master_Read,w
  6308  0640  160A  118A  23ED  120A  118A  	fcall	_BCD_a_DEC
  6309  0645  1283               	bcf	3,5	;RP0=0, select bank0
  6310  0646  1303               	bcf	3,6	;RP1=0, select bank0
  6311  0647  00A0               	movwf	??_get_Time
  6312  0648  0820               	movf	??_get_Time,w
  6313  0649  00EE               	movwf	_hora
  6314                           
  6315                           ;RTC.c: 104:     I2C_Master_Stop();
  6316  064A  160A  118A  2361  120A  118A  	fcall	_I2C_Master_Stop
  6317                           
  6318                           ;RTC.c: 107:     I2C_Master_Start();
  6319  064F  160A  118A  235A  120A  118A  	fcall	_I2C_Master_Start
  6320                           
  6321                           ;RTC.c: 108:     I2C_Master_Write(0xD0);
  6322  0654  30D0               	movlw	208
  6323  0655  00F2               	movwf	I2C_Master_Write@d
  6324  0656  3000               	movlw	0
  6325  0657  00F3               	movwf	I2C_Master_Write@d+1
  6326  0658  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  6327                           
  6328                           ;RTC.c: 109:     I2C_Master_Write(3);
  6329  065D  3003               	movlw	3
  6330  065E  00F2               	movwf	I2C_Master_Write@d
  6331  065F  3000               	movlw	0
  6332  0660  00F3               	movwf	I2C_Master_Write@d+1
  6333  0661  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  6334                           
  6335                           ;RTC.c: 110:     I2C_Master_Stop();
  6336  0666  160A  118A  2361  120A  118A  	fcall	_I2C_Master_Stop
  6337                           
  6338                           ;RTC.c: 111:     I2C_Master_Start();
  6339  066B  160A  118A  235A  120A  118A  	fcall	_I2C_Master_Start
  6340                           
  6341                           ;RTC.c: 112:     I2C_Master_Write(0xD1);
  6342  0670  30D1               	movlw	209
  6343  0671  00F2               	movwf	I2C_Master_Write@d
  6344  0672  3000               	movlw	0
  6345  0673  00F3               	movwf	I2C_Master_Write@d+1
  6346  0674  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  6347                           
  6348                           ;RTC.c: 113:     dia = BCD_a_DEC(I2C_Master_Read(0));
  6349  0679  3000               	movlw	0
  6350  067A  00F2               	movwf	I2C_Master_Read@a
  6351  067B  00F3               	movwf	I2C_Master_Read@a+1
  6352  067C  160A  118A  2446  120A  118A  	fcall	_I2C_Master_Read
  6353  0681  0872               	movf	?_I2C_Master_Read,w
  6354  0682  160A  118A  23ED  120A  118A  	fcall	_BCD_a_DEC
  6355  0687  1283               	bcf	3,5	;RP0=0, select bank0
  6356  0688  1303               	bcf	3,6	;RP1=0, select bank0
  6357  0689  00A0               	movwf	??_get_Time
  6358  068A  0820               	movf	??_get_Time,w
  6359  068B  00ED               	movwf	_dia
  6360                           
  6361                           ;RTC.c: 114:     I2C_Master_Stop();
  6362  068C  160A  118A  2361  120A  118A  	fcall	_I2C_Master_Stop
  6363                           
  6364                           ;RTC.c: 116:     I2C_Master_Start();
  6365  0691  160A  118A  235A  120A  118A  	fcall	_I2C_Master_Start
  6366                           
  6367                           ;RTC.c: 117:     I2C_Master_Write(0xD0);
  6368  0696  30D0               	movlw	208
  6369  0697  00F2               	movwf	I2C_Master_Write@d
  6370  0698  3000               	movlw	0
  6371  0699  00F3               	movwf	I2C_Master_Write@d+1
  6372  069A  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  6373                           
  6374                           ;RTC.c: 118:     I2C_Master_Write(4);
  6375  069F  3004               	movlw	4
  6376  06A0  00F2               	movwf	I2C_Master_Write@d
  6377  06A1  3000               	movlw	0
  6378  06A2  00F3               	movwf	I2C_Master_Write@d+1
  6379  06A3  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  6380                           
  6381                           ;RTC.c: 119:     I2C_Master_Stop();
  6382  06A8  160A  118A  2361  120A  118A  	fcall	_I2C_Master_Stop
  6383                           
  6384                           ;RTC.c: 120:     I2C_Master_Start();
  6385  06AD  160A  118A  235A  120A  118A  	fcall	_I2C_Master_Start
  6386                           
  6387                           ;RTC.c: 121:     I2C_Master_Write(0xD1);
  6388  06B2  30D1               	movlw	209
  6389  06B3  00F2               	movwf	I2C_Master_Write@d
  6390  06B4  3000               	movlw	0
  6391  06B5  00F3               	movwf	I2C_Master_Write@d+1
  6392  06B6  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  6393                           
  6394                           ;RTC.c: 122:     datum = BCD_a_DEC(I2C_Master_Read(0));
  6395  06BB  3000               	movlw	0
  6396  06BC  00F2               	movwf	I2C_Master_Read@a
  6397  06BD  00F3               	movwf	I2C_Master_Read@a+1
  6398  06BE  160A  118A  2446  120A  118A  	fcall	_I2C_Master_Read
  6399  06C3  0872               	movf	?_I2C_Master_Read,w
  6400  06C4  160A  118A  23ED  120A  118A  	fcall	_BCD_a_DEC
  6401  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  6402  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  6403  06CB  00A0               	movwf	??_get_Time
  6404  06CC  0820               	movf	??_get_Time,w
  6405  06CD  00EC               	movwf	_datum
  6406                           
  6407                           ;RTC.c: 123:     I2C_Master_Stop();
  6408  06CE  160A  118A  2361  120A  118A  	fcall	_I2C_Master_Stop
  6409                           
  6410                           ;RTC.c: 125:     I2C_Master_Start();
  6411  06D3  160A  118A  235A  120A  118A  	fcall	_I2C_Master_Start
  6412                           
  6413                           ;RTC.c: 126:     I2C_Master_Write(0xD0);
  6414  06D8  30D0               	movlw	208
  6415  06D9  00F2               	movwf	I2C_Master_Write@d
  6416  06DA  3000               	movlw	0
  6417  06DB  00F3               	movwf	I2C_Master_Write@d+1
  6418  06DC  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  6419                           
  6420                           ;RTC.c: 127:     I2C_Master_Write(5);
  6421  06E1  3005               	movlw	5
  6422  06E2  00F2               	movwf	I2C_Master_Write@d
  6423  06E3  3000               	movlw	0
  6424  06E4  00F3               	movwf	I2C_Master_Write@d+1
  6425  06E5  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  6426                           
  6427                           ;RTC.c: 128:     I2C_Master_Stop();
  6428  06EA  160A  118A  2361  120A  118A  	fcall	_I2C_Master_Stop
  6429                           
  6430                           ;RTC.c: 129:     I2C_Master_Start();
  6431  06EF  160A  118A  235A  120A  118A  	fcall	_I2C_Master_Start
  6432                           
  6433                           ;RTC.c: 130:     I2C_Master_Write(0xD1);
  6434  06F4  30D1               	movlw	209
  6435  06F5  00F2               	movwf	I2C_Master_Write@d
  6436  06F6  3000               	movlw	0
  6437  06F7  00F3               	movwf	I2C_Master_Write@d+1
  6438  06F8  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  6439                           
  6440                           ;RTC.c: 131:     mes = BCD_a_DEC(I2C_Master_Read(0));
  6441  06FD  3000               	movlw	0
  6442  06FE  00F2               	movwf	I2C_Master_Read@a
  6443  06FF  00F3               	movwf	I2C_Master_Read@a+1
  6444  0700  160A  118A  2446  120A  118A  	fcall	_I2C_Master_Read
  6445  0705  0872               	movf	?_I2C_Master_Read,w
  6446  0706  160A  118A  23ED  120A  118A  	fcall	_BCD_a_DEC
  6447  070B  1283               	bcf	3,5	;RP0=0, select bank0
  6448  070C  1303               	bcf	3,6	;RP1=0, select bank0
  6449  070D  00A0               	movwf	??_get_Time
  6450  070E  0820               	movf	??_get_Time,w
  6451  070F  00EB               	movwf	_mes
  6452                           
  6453                           ;RTC.c: 132:     I2C_Master_Stop();
  6454  0710  160A  118A  2361  120A  118A  	fcall	_I2C_Master_Stop
  6455                           
  6456                           ;RTC.c: 134:     I2C_Master_Start();
  6457  0715  160A  118A  235A  120A  118A  	fcall	_I2C_Master_Start
  6458                           
  6459                           ;RTC.c: 135:     I2C_Master_Write(0xD0);
  6460  071A  30D0               	movlw	208
  6461  071B  00F2               	movwf	I2C_Master_Write@d
  6462  071C  3000               	movlw	0
  6463  071D  00F3               	movwf	I2C_Master_Write@d+1
  6464  071E  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  6465                           
  6466                           ;RTC.c: 136:     I2C_Master_Write(6);
  6467  0723  3006               	movlw	6
  6468  0724  00F2               	movwf	I2C_Master_Write@d
  6469  0725  3000               	movlw	0
  6470  0726  00F3               	movwf	I2C_Master_Write@d+1
  6471  0727  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  6472                           
  6473                           ;RTC.c: 137:     I2C_Master_Stop();
  6474  072C  160A  118A  2361  120A  118A  	fcall	_I2C_Master_Stop
  6475                           
  6476                           ;RTC.c: 138:     I2C_Master_Start();
  6477  0731  160A  118A  235A  120A  118A  	fcall	_I2C_Master_Start
  6478                           
  6479                           ;RTC.c: 139:     I2C_Master_Write(0xD1);
  6480  0736  30D1               	movlw	209
  6481  0737  00F2               	movwf	I2C_Master_Write@d
  6482  0738  3000               	movlw	0
  6483  0739  00F3               	movwf	I2C_Master_Write@d+1
  6484  073A  160A  118A  2368  120A  118A  	fcall	_I2C_Master_Write
  6485                           
  6486                           ;RTC.c: 140:     jahr = BCD_a_DEC(I2C_Master_Read(0));
  6487  073F  3000               	movlw	0
  6488  0740  00F2               	movwf	I2C_Master_Read@a
  6489  0741  00F3               	movwf	I2C_Master_Read@a+1
  6490  0742  160A  118A  2446  120A  118A  	fcall	_I2C_Master_Read
  6491  0747  0872               	movf	?_I2C_Master_Read,w
  6492  0748  160A  118A  23ED  120A  118A  	fcall	_BCD_a_DEC
  6493  074D  1283               	bcf	3,5	;RP0=0, select bank0
  6494  074E  1303               	bcf	3,6	;RP1=0, select bank0
  6495  074F  00A0               	movwf	??_get_Time
  6496  0750  0820               	movf	??_get_Time,w
  6497  0751  00EA               	movwf	_jahr
  6498                           
  6499                           ;RTC.c: 141:     I2C_Master_Stop();
  6500  0752  160A  118A  2361   	fcall	_I2C_Master_Stop
  6501  0755  0008               	return
  6502  0756                     __end_of_get_Time:	
  6503                           
  6504                           	psect	text21
  6505  13ED                     __ptext21:	
  6506 ;; *************** function _BCD_a_DEC *****************
  6507 ;; Defined at:
  6508 ;;		line 27 in file "RTC.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;  numBCD          1    wreg     unsigned char 
  6511 ;; Auto vars:     Size  Location     Type
  6512 ;;  numBCD          1    9[COMMON] unsigned char 
  6513 ;; Return value:  Size  Location     Type
  6514 ;;                  1    wreg      unsigned char 
  6515 ;; Registers used:
  6516 ;;		wreg, status,2, status,0, pclath, cstack
  6517 ;; Tracked objects:
  6518 ;;		On entry : 0/0
  6519 ;;		On exit  : 0/0
  6520 ;;		Unchanged: 0/0
  6521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6522 ;;      Params:         0       0       0       0       0
  6523 ;;      Locals:         1       0       0       0       0
  6524 ;;      Temps:          3       0       0       0       0
  6525 ;;      Totals:         4       0       0       0       0
  6526 ;;Total ram usage:        4 bytes
  6527 ;; Hardware stack levels used:    1
  6528 ;; Hardware stack levels required when called:    2
  6529 ;; This function calls:
  6530 ;;		___bmul
  6531 ;; This function is called by:
  6532 ;;		_get_Time
  6533 ;;		_get_hora
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           
  6537                           
  6538                           ;psect for function _BCD_a_DEC
  6539  13ED                     _BCD_a_DEC:	
  6540                           
  6541                           ;incstack = 0
  6542                           ; Regs used in _BCD_a_DEC: [wreg+status,2+status,0+pclath+cstack]
  6543                           ;BCD_a_DEC@numBCD stored from wreg
  6544  13ED  00F9               	movwf	BCD_a_DEC@numBCD
  6545                           
  6546                           ;RTC.c: 28:     return (numBCD >> 4) * 10 + (numBCD & 0x0F);
  6547  13EE  300F               	movlw	15
  6548  13EF  0579               	andwf	BCD_a_DEC@numBCD,w
  6549  13F0  00F6               	movwf	??_BCD_a_DEC
  6550  13F1  300A               	movlw	10
  6551  13F2  00F7               	movwf	??_BCD_a_DEC+1
  6552  13F3  0877               	movf	??_BCD_a_DEC+1,w
  6553  13F4  00F2               	movwf	___bmul@multiplicand
  6554  13F5  0879               	movf	BCD_a_DEC@numBCD,w
  6555  13F6  00F8               	movwf	??_BCD_a_DEC+2
  6556  13F7  3004               	movlw	4
  6557  13F8                     u1915:	
  6558  13F8  1003               	clrc
  6559  13F9  0CF8               	rrf	??_BCD_a_DEC+2,f
  6560  13FA  3EFF               	addlw	-1
  6561  13FB  1D03               	skipz
  6562  13FC  2BF8               	goto	u1915
  6563  13FD  0878               	movf	??_BCD_a_DEC+2,w
  6564  13FE  160A  118A  238D   	fcall	___bmul
  6565  1401  0776               	addwf	??_BCD_a_DEC,w
  6566  1402  0008               	return
  6567  1403                     __end_of_BCD_a_DEC:	
  6568                           
  6569                           	psect	text22
  6570  138D                     __ptext22:	
  6571 ;; *************** function ___bmul *****************
  6572 ;; Defined at:
  6573 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;  multiplier      1    wreg     unsigned char 
  6576 ;;  multiplicand    1    2[COMMON] unsigned char 
  6577 ;; Auto vars:     Size  Location     Type
  6578 ;;  multiplier      1    5[COMMON] unsigned char 
  6579 ;;  product         1    4[COMMON] unsigned char 
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  1    wreg      unsigned char 
  6582 ;; Registers used:
  6583 ;;		wreg, status,2, status,0
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6589 ;;      Params:         1       0       0       0       0
  6590 ;;      Locals:         2       0       0       0       0
  6591 ;;      Temps:          1       0       0       0       0
  6592 ;;      Totals:         4       0       0       0       0
  6593 ;;Total ram usage:        4 bytes
  6594 ;; Hardware stack levels used:    1
  6595 ;; Hardware stack levels required when called:    1
  6596 ;; This function calls:
  6597 ;;		Nothing
  6598 ;; This function is called by:
  6599 ;;		_BCD_a_DEC
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           
  6604                           ;psect for function ___bmul
  6605  138D                     ___bmul:	
  6606                           
  6607                           ;incstack = 0
  6608                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6609                           ;___bmul@multiplier stored from wreg
  6610  138D  00F5               	movwf	___bmul@multiplier
  6611  138E  01F4               	clrf	___bmul@product
  6612  138F                     l2904:	
  6613  138F  1C75               	btfss	___bmul@multiplier,0
  6614  1390  2B95               	goto	l2908
  6615  1391  0872               	movf	___bmul@multiplicand,w
  6616  1392  00F3               	movwf	??___bmul
  6617  1393  0873               	movf	??___bmul,w
  6618  1394  07F4               	addwf	___bmul@product,f
  6619  1395                     l2908:	
  6620  1395  1003               	clrc
  6621  1396  0DF2               	rlf	___bmul@multiplicand,f
  6622  1397  1003               	clrc
  6623  1398  0CF5               	rrf	___bmul@multiplier,f
  6624  1399  0875               	movf	___bmul@multiplier,w
  6625  139A  1D03               	btfss	3,2
  6626  139B  2B8F               	goto	l2904
  6627  139C  0874               	movf	___bmul@product,w
  6628  139D  0008               	return
  6629  139E                     __end_of___bmul:	
  6630                           
  6631                           	psect	text23
  6632  09BF                     __ptext23:	
  6633 ;; *************** function _SetUp *****************
  6634 ;; Defined at:
  6635 ;;		line 168 in file "main_Master.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;		None
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;		None
  6640 ;; Return value:  Size  Location     Type
  6641 ;;                  1    wreg      void 
  6642 ;; Registers used:
  6643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6649 ;;      Params:         0       0       0       0       0
  6650 ;;      Locals:         0       0       0       0       0
  6651 ;;      Temps:          0       1       0       0       0
  6652 ;;      Totals:         0       1       0       0       0
  6653 ;;Total ram usage:        1 bytes
  6654 ;; Hardware stack levels used:    1
  6655 ;; Hardware stack levels required when called:    4
  6656 ;; This function calls:
  6657 ;;		_I2C_Master_Init
  6658 ;;		_IMU_init
  6659 ;;		_LCD_Create_Char
  6660 ;;		_LCD_clear
  6661 ;;		_LCD_init
  6662 ;;		_OSC_config
  6663 ;;		_uart_init
  6664 ;; This function is called by:
  6665 ;;		_main
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           
  6670                           ;psect for function _SetUp
  6671  09BF                     _SetUp:	
  6672                           
  6673                           ;main_Master.c: 169:     TRISC = 0;
  6674                           
  6675                           ;incstack = 0
  6676                           ; Regs used in _SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6677  09BF  1683               	bsf	3,5	;RP0=1, select bank1
  6678  09C0  1303               	bcf	3,6	;RP1=0, select bank1
  6679  09C1  0187               	clrf	7	;volatile
  6680                           
  6681                           ;main_Master.c: 170:     PORTC = 0;
  6682  09C2  1283               	bcf	3,5	;RP0=0, select bank0
  6683  09C3  1303               	bcf	3,6	;RP1=0, select bank0
  6684  09C4  0187               	clrf	7	;volatile
  6685                           
  6686                           ;main_Master.c: 171:     TRISB = 0;
  6687  09C5  1683               	bsf	3,5	;RP0=1, select bank1
  6688  09C6  1303               	bcf	3,6	;RP1=0, select bank1
  6689  09C7  0186               	clrf	6	;volatile
  6690                           
  6691                           ;main_Master.c: 172:     OSC_config(4000000);
  6692  09C8  3000               	movlw	0
  6693  09C9  00F5               	movwf	OSC_config@frecuencia+3
  6694  09CA  303D               	movlw	61
  6695  09CB  00F4               	movwf	OSC_config@frecuencia+2
  6696  09CC  3009               	movlw	9
  6697  09CD  00F3               	movwf	OSC_config@frecuencia+1
  6698  09CE  3000               	movlw	0
  6699  09CF  00F2               	movwf	OSC_config@frecuencia
  6700  09D0  120A  158A  237F  120A  158A  	fcall	_OSC_config
  6701                           
  6702                           ;main_Master.c: 173:     TRISB = 0b00000110;
  6703  09D5  3006               	movlw	6
  6704  09D6  1683               	bsf	3,5	;RP0=1, select bank1
  6705  09D7  1303               	bcf	3,6	;RP1=0, select bank1
  6706  09D8  0086               	movwf	6	;volatile
  6707                           
  6708                           ;main_Master.c: 174:     ANSELH = 0;
  6709  09D9  1683               	bsf	3,5	;RP0=1, select bank3
  6710  09DA  1703               	bsf	3,6	;RP1=1, select bank3
  6711  09DB  0189               	clrf	9	;volatile
  6712                           
  6713                           ;main_Master.c: 175:     WPUB = 0b00000110;
  6714  09DC  3006               	movlw	6
  6715  09DD  1683               	bsf	3,5	;RP0=1, select bank1
  6716  09DE  1303               	bcf	3,6	;RP1=0, select bank1
  6717  09DF  0095               	movwf	21	;volatile
  6718                           
  6719                           ;main_Master.c: 176:     OPTION_REGbits.nRBPU = 0;
  6720  09E0  1381               	bcf	1,7	;volatile
  6721                           
  6722                           ;main_Master.c: 177:     IOCB = 0b00000110;
  6723  09E1  3006               	movlw	6
  6724  09E2  0096               	movwf	22	;volatile
  6725                           
  6726                           ;main_Master.c: 178:     INTCONbits.RBIE = 1;
  6727  09E3  158B               	bsf	11,3	;volatile
  6728                           
  6729                           ;main_Master.c: 179:     INTCONbits.GIE = 1;
  6730  09E4  178B               	bsf	11,7	;volatile
  6731                           
  6732                           ;main_Master.c: 180:     TRISD = 0;
  6733  09E5  0188               	clrf	8	;volatile
  6734                           
  6735                           ;main_Master.c: 181:     TRISC0 = 0;
  6736  09E6  1007               	bcf	7,0	;volatile
  6737                           
  6738                           ;main_Master.c: 182:     TRISC1 = 0;
  6739  09E7  1087               	bcf	7,1	;volatile
  6740                           
  6741                           ;main_Master.c: 183:     LCD_init();
  6742  09E8  160A  118A  26A8  120A  158A  	fcall	_LCD_init
  6743                           
  6744                           ;main_Master.c: 184:     LCD_Create_Char(0, atilde);
  6745  09ED  3011               	movlw	(low ((_atilde-__stringbase)| (0+32768)))& (0+255)
  6746  09EE  1283               	bcf	3,5	;RP0=0, select bank0
  6747  09EF  1303               	bcf	3,6	;RP1=0, select bank0
  6748  09F0  00AE               	movwf	??_SetUp
  6749  09F1  082E               	movf	??_SetUp,w
  6750  09F2  00F5               	movwf	LCD_Create_Char@chardata
  6751  09F3  3000               	movlw	0
  6752  09F4  160A  118A  2472  120A  158A  	fcall	_LCD_Create_Char
  6753                           
  6754                           ;main_Master.c: 185:     LCD_Create_Char(1, arrowr);
  6755  09F9  3021               	movlw	(low ((_arrowr-__stringbase)| (0+32768)))& (0+255)
  6756  09FA  1283               	bcf	3,5	;RP0=0, select bank0
  6757  09FB  1303               	bcf	3,6	;RP1=0, select bank0
  6758  09FC  00AE               	movwf	??_SetUp
  6759  09FD  082E               	movf	??_SetUp,w
  6760  09FE  00F5               	movwf	LCD_Create_Char@chardata
  6761  09FF  3001               	movlw	1
  6762  0A00  160A  118A  2472  120A  158A  	fcall	_LCD_Create_Char
  6763                           
  6764                           ;main_Master.c: 186:     LCD_Create_Char(2, termometro);
  6765  0A05  3009               	movlw	(low ((_termometro-__stringbase)| (0+32768)))& (0+255)
  6766  0A06  1283               	bcf	3,5	;RP0=0, select bank0
  6767  0A07  1303               	bcf	3,6	;RP1=0, select bank0
  6768  0A08  00AE               	movwf	??_SetUp
  6769  0A09  082E               	movf	??_SetUp,w
  6770  0A0A  00F5               	movwf	LCD_Create_Char@chardata
  6771  0A0B  3002               	movlw	2
  6772  0A0C  160A  118A  2472  120A  158A  	fcall	_LCD_Create_Char
  6773                           
  6774                           ;main_Master.c: 187:     LCD_Create_Char(3, gota);
  6775  0A11  3001               	movlw	(low ((_gota-__stringbase)| (0+32768)))& (0+255)
  6776  0A12  1283               	bcf	3,5	;RP0=0, select bank0
  6777  0A13  1303               	bcf	3,6	;RP1=0, select bank0
  6778  0A14  00AE               	movwf	??_SetUp
  6779  0A15  082E               	movf	??_SetUp,w
  6780  0A16  00F5               	movwf	LCD_Create_Char@chardata
  6781  0A17  3003               	movlw	3
  6782  0A18  160A  118A  2472  120A  158A  	fcall	_LCD_Create_Char
  6783                           
  6784                           ;main_Master.c: 188:     LCD_Create_Char(4, arrowr_vacio);
  6785  0A1D  3019               	movlw	(low ((_arrowr_vacio-__stringbase)| (0+32768)))& (0+255)
  6786  0A1E  1283               	bcf	3,5	;RP0=0, select bank0
  6787  0A1F  1303               	bcf	3,6	;RP1=0, select bank0
  6788  0A20  00AE               	movwf	??_SetUp
  6789  0A21  082E               	movf	??_SetUp,w
  6790  0A22  00F5               	movwf	LCD_Create_Char@chardata
  6791  0A23  3004               	movlw	4
  6792  0A24  160A  118A  2472  120A  158A  	fcall	_LCD_Create_Char
  6793                           
  6794                           ;main_Master.c: 189:     LCD_clear();
  6795  0A29  160A  118A  23D7  120A  158A  	fcall	_LCD_clear
  6796                           
  6797                           ;main_Master.c: 190:     uart_init(9600);
  6798  0A2E  3080               	movlw	128
  6799  0A2F  00F2               	movwf	?_uart_init
  6800  0A30  3025               	movlw	37
  6801  0A31  00F3               	movwf	?_uart_init+1
  6802  0A32  160A  118A  23C2  120A  158A  	fcall	_uart_init
  6803                           
  6804                           ;main_Master.c: 191:     I2C_Master_Init(100000);
  6805  0A37  3000               	movlw	0
  6806  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  6807  0A39  1303               	bcf	3,6	;RP1=0, select bank0
  6808  0A3A  00A9               	movwf	I2C_Master_Init@c+3
  6809  0A3B  3001               	movlw	1
  6810  0A3C  00A8               	movwf	I2C_Master_Init@c+2
  6811  0A3D  3086               	movlw	134
  6812  0A3E  00A7               	movwf	I2C_Master_Init@c+1
  6813  0A3F  30A0               	movlw	160
  6814  0A40  00A6               	movwf	I2C_Master_Init@c
  6815  0A41  160A  118A  24F9  120A  158A  	fcall	_I2C_Master_Init
  6816                           
  6817                           ;main_Master.c: 192:     IMU_init();
  6818  0A46  120A  158A  2597   	fcall	_IMU_init
  6819  0A49  0008               	return
  6820  0A4A                     __end_of_SetUp:	
  6821                           
  6822                           	psect	text24
  6823  13C2                     __ptext24:	
  6824 ;; *************** function _uart_init *****************
  6825 ;; Defined at:
  6826 ;;		line 13 in file "UART.c"
  6827 ;; Parameters:    Size  Location     Type
  6828 ;;		None
  6829 ;; Auto vars:     Size  Location     Type
  6830 ;;		None
  6831 ;; Return value:  Size  Location     Type
  6832 ;;                  1    wreg      void 
  6833 ;; Registers used:
  6834 ;;		wreg, status,2
  6835 ;; Tracked objects:
  6836 ;;		On entry : 0/0
  6837 ;;		On exit  : 0/0
  6838 ;;		Unchanged: 0/0
  6839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6840 ;;      Params:         2       0       0       0       0
  6841 ;;      Locals:         0       0       0       0       0
  6842 ;;      Temps:          0       0       0       0       0
  6843 ;;      Totals:         2       0       0       0       0
  6844 ;;Total ram usage:        2 bytes
  6845 ;; Hardware stack levels used:    1
  6846 ;; Hardware stack levels required when called:    1
  6847 ;; This function calls:
  6848 ;;		Nothing
  6849 ;; This function is called by:
  6850 ;;		_SetUp
  6851 ;; This function uses a non-reentrant model
  6852 ;;
  6853                           
  6854                           
  6855                           ;psect for function _uart_init
  6856  13C2                     _uart_init:	
  6857                           
  6858                           ;UART.c: 14:     TXSTAbits.SYNC = 0;
  6859                           
  6860                           ;incstack = 0
  6861                           ; Regs used in _uart_init: [wreg+status,2]
  6862  13C2  1683               	bsf	3,5	;RP0=1, select bank1
  6863  13C3  1303               	bcf	3,6	;RP1=0, select bank1
  6864  13C4  1218               	bcf	24,4	;volatile
  6865                           
  6866                           ;UART.c: 15:     TXSTAbits.BRGH = 1;
  6867  13C5  1518               	bsf	24,2	;volatile
  6868                           
  6869                           ;UART.c: 16:     BAUDCTLbits.BRG16 = 1;
  6870  13C6  1683               	bsf	3,5	;RP0=1, select bank3
  6871  13C7  1703               	bsf	3,6	;RP1=1, select bank3
  6872  13C8  1587               	bsf	7,3	;volatile
  6873                           
  6874                           ;UART.c: 17:     SPBRG = 103;
  6875  13C9  3067               	movlw	103
  6876  13CA  1683               	bsf	3,5	;RP0=1, select bank1
  6877  13CB  1303               	bcf	3,6	;RP1=0, select bank1
  6878  13CC  0099               	movwf	25	;volatile
  6879                           
  6880                           ;UART.c: 18:     SPBRGH = 0;
  6881  13CD  019A               	clrf	26	;volatile
  6882                           
  6883                           ;UART.c: 20:     RCSTAbits.SPEN = 1;
  6884  13CE  1283               	bcf	3,5	;RP0=0, select bank0
  6885  13CF  1303               	bcf	3,6	;RP1=0, select bank0
  6886  13D0  1798               	bsf	24,7	;volatile
  6887                           
  6888                           ;UART.c: 21:     RCSTAbits.RX9 = 0;
  6889  13D1  1318               	bcf	24,6	;volatile
  6890                           
  6891                           ;UART.c: 22:     RCSTAbits.CREN = 1;
  6892  13D2  1618               	bsf	24,4	;volatile
  6893                           
  6894                           ;UART.c: 24:     TXSTAbits.TXEN = 1;
  6895  13D3  1683               	bsf	3,5	;RP0=1, select bank1
  6896  13D4  1303               	bcf	3,6	;RP1=0, select bank1
  6897  13D5  1698               	bsf	24,5	;volatile
  6898  13D6  0008               	return
  6899  13D7                     __end_of_uart_init:	
  6900                           
  6901                           	psect	text25
  6902  0B7F                     __ptext25:	
  6903 ;; *************** function _OSC_config *****************
  6904 ;; Defined at:
  6905 ;;		line 197 in file "main_Master.c"
  6906 ;; Parameters:    Size  Location     Type
  6907 ;;  frecuencia      4    2[COMMON] unsigned long 
  6908 ;; Auto vars:     Size  Location     Type
  6909 ;;		None
  6910 ;; Return value:  Size  Location     Type
  6911 ;;                  1    wreg      void 
  6912 ;; Registers used:
  6913 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6914 ;; Tracked objects:
  6915 ;;		On entry : 0/0
  6916 ;;		On exit  : 0/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6919 ;;      Params:         4       0       0       0       0
  6920 ;;      Locals:         0       0       0       0       0
  6921 ;;      Temps:          0       0       0       0       0
  6922 ;;      Totals:         4       0       0       0       0
  6923 ;;Total ram usage:        4 bytes
  6924 ;; Hardware stack levels used:    1
  6925 ;; Hardware stack levels required when called:    1
  6926 ;; This function calls:
  6927 ;;		Nothing
  6928 ;; This function is called by:
  6929 ;;		_SetUp
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           
  6933                           
  6934                           ;psect for function _OSC_config
  6935  0B7F                     _OSC_config:	
  6936                           
  6937                           ;main_Master.c: 198:     switch(frecuencia){
  6938                           
  6939                           ;incstack = 0
  6940                           ; Regs used in _OSC_config: [wreg-fsr0h+status,2+status,0]
  6941  0B7F  2BBB               	goto	l3042
  6942  0B80                     l3024:	
  6943                           
  6944                           ;main_Master.c: 200:             OSCCONbits.IRCF = 0b111;
  6945  0B80  3070               	movlw	112
  6946  0B81  1683               	bsf	3,5	;RP0=1, select bank1
  6947  0B82  1303               	bcf	3,6	;RP1=0, select bank1
  6948  0B83  048F               	iorwf	15,f	;volatile
  6949                           
  6950                           ;main_Master.c: 201:             break;
  6951  0B84  0008               	return
  6952  0B85                     l3026:	
  6953                           
  6954                           ;main_Master.c: 203:             OSCCONbits.IRCF = 0b110;
  6955  0B85  1683               	bsf	3,5	;RP0=1, select bank1
  6956  0B86  1303               	bcf	3,6	;RP1=0, select bank1
  6957  0B87  080F               	movf	15,w	;volatile
  6958  0B88  398F               	andlw	-113
  6959  0B89  3860               	iorlw	96
  6960  0B8A  008F               	movwf	15	;volatile
  6961                           
  6962                           ;main_Master.c: 204:             break;
  6963  0B8B  0008               	return
  6964  0B8C                     l3028:	
  6965                           
  6966                           ;main_Master.c: 206:             OSCCONbits.IRCF = 0b101;
  6967  0B8C  1683               	bsf	3,5	;RP0=1, select bank1
  6968  0B8D  1303               	bcf	3,6	;RP1=0, select bank1
  6969  0B8E  080F               	movf	15,w	;volatile
  6970  0B8F  398F               	andlw	-113
  6971  0B90  3850               	iorlw	80
  6972  0B91  008F               	movwf	15	;volatile
  6973                           
  6974                           ;main_Master.c: 207:             break;
  6975  0B92  0008               	return
  6976  0B93                     l3030:	
  6977                           
  6978                           ;main_Master.c: 209:             OSCCONbits.IRCF = 0b100;
  6979  0B93  1683               	bsf	3,5	;RP0=1, select bank1
  6980  0B94  1303               	bcf	3,6	;RP1=0, select bank1
  6981  0B95  080F               	movf	15,w	;volatile
  6982  0B96  398F               	andlw	-113
  6983  0B97  3840               	iorlw	64
  6984  0B98  008F               	movwf	15	;volatile
  6985                           
  6986                           ;main_Master.c: 210:             break;
  6987  0B99  0008               	return
  6988  0B9A                     l3032:	
  6989                           
  6990                           ;main_Master.c: 212:             OSCCONbits.IRCF = 0b011;
  6991  0B9A  1683               	bsf	3,5	;RP0=1, select bank1
  6992  0B9B  1303               	bcf	3,6	;RP1=0, select bank1
  6993  0B9C  080F               	movf	15,w	;volatile
  6994  0B9D  398F               	andlw	-113
  6995  0B9E  3830               	iorlw	48
  6996  0B9F  008F               	movwf	15	;volatile
  6997                           
  6998                           ;main_Master.c: 213:             break;
  6999  0BA0  0008               	return
  7000  0BA1                     l3034:	
  7001                           
  7002                           ;main_Master.c: 215:             OSCCONbits.IRCF = 0b010;
  7003  0BA1  1683               	bsf	3,5	;RP0=1, select bank1
  7004  0BA2  1303               	bcf	3,6	;RP1=0, select bank1
  7005  0BA3  080F               	movf	15,w	;volatile
  7006  0BA4  398F               	andlw	-113
  7007  0BA5  3820               	iorlw	32
  7008  0BA6  008F               	movwf	15	;volatile
  7009                           
  7010                           ;main_Master.c: 216:             break;
  7011  0BA7  0008               	return
  7012  0BA8                     l3036:	
  7013                           
  7014                           ;main_Master.c: 218:             OSCCONbits.IRCF = 0b001;
  7015  0BA8  1683               	bsf	3,5	;RP0=1, select bank1
  7016  0BA9  1303               	bcf	3,6	;RP1=0, select bank1
  7017  0BAA  080F               	movf	15,w	;volatile
  7018  0BAB  398F               	andlw	-113
  7019  0BAC  3810               	iorlw	16
  7020  0BAD  008F               	movwf	15	;volatile
  7021                           
  7022                           ;main_Master.c: 219:             break;
  7023  0BAE  0008               	return
  7024  0BAF                     l3038:	
  7025                           
  7026                           ;main_Master.c: 221:             OSCCONbits.IRCF = 0b000;
  7027  0BAF  308F               	movlw	-113
  7028  0BB0  1683               	bsf	3,5	;RP0=1, select bank1
  7029  0BB1  1303               	bcf	3,6	;RP1=0, select bank1
  7030  0BB2  058F               	andwf	15,f	;volatile
  7031                           
  7032                           ;main_Master.c: 222:             break;
  7033  0BB3  0008               	return
  7034  0BB4                     l3040:	
  7035                           
  7036                           ;main_Master.c: 224:             OSCCONbits.IRCF = 0b110;
  7037  0BB4  1683               	bsf	3,5	;RP0=1, select bank1
  7038  0BB5  1303               	bcf	3,6	;RP1=0, select bank1
  7039  0BB6  080F               	movf	15,w	;volatile
  7040  0BB7  398F               	andlw	-113
  7041  0BB8  3860               	iorlw	96
  7042  0BB9  008F               	movwf	15	;volatile
  7043                           
  7044                           ;main_Master.c: 225:     }
  7045  0BBA  0008               	return
  7046  0BBB                     l3042:	
  7047                           
  7048                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 9 sub-sw
      +                          itches
  7049                           ; Switch size 1, requested type "simple"
  7050                           ; Number of cases is 1, Range of values is 0 to 0
  7051                           ; switch strategies available:
  7052                           ; Name         Instructions Cycles
  7053                           ; simple_byte            4     3 (average)
  7054                           ; direct_byte           11     8 (fixed)
  7055                           ; jumptable            260     6 (fixed)
  7056                           ;	Chosen strategy is simple_byte
  7057  0BBB  0875               	movf	OSC_config@frecuencia+3,w
  7058  0BBC  3A00               	xorlw	0	; case 0
  7059  0BBD  1903               	skipnz
  7060  0BBE  2C10               	goto	l5530
  7061  0BBF  2BB4               	goto	l3040
  7062  0BC0                     l5514:	
  7063                           
  7064                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7065                           ; Switch size 1, requested type "simple"
  7066                           ; Number of cases is 1, Range of values is 125 to 125
  7067                           ; switch strategies available:
  7068                           ; Name         Instructions Cycles
  7069                           ; simple_byte            4     3 (average)
  7070                           ; direct_byte           14    11 (fixed)
  7071                           ; jumptable            263     9 (fixed)
  7072                           ;	Chosen strategy is simple_byte
  7073  0BC0  0873               	movf	OSC_config@frecuencia+1,w
  7074  0BC1  3A7D               	xorlw	125	; case 125
  7075  0BC2  1903               	skipnz
  7076  0BC3  2BC5               	goto	l5532
  7077  0BC4  2BB4               	goto	l3040
  7078  0BC5                     l5532:	
  7079                           
  7080                           ; Switch size 1, requested type "simple"
  7081                           ; Number of cases is 1, Range of values is 0 to 0
  7082                           ; switch strategies available:
  7083                           ; Name         Instructions Cycles
  7084                           ; simple_byte            4     3 (average)
  7085                           ; direct_byte           11     8 (fixed)
  7086                           ; jumptable            260     6 (fixed)
  7087                           ;	Chosen strategy is simple_byte
  7088  0BC5  0872               	movf	OSC_config@frecuencia,w
  7089  0BC6  3A00               	xorlw	0	; case 0
  7090  0BC7  1903               	skipnz
  7091  0BC8  2BAF               	goto	l3038
  7092  0BC9  2BB4               	goto	l3040
  7093  0BCA                     l5516:	
  7094                           
  7095                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7096                           ; Switch size 1, requested type "simple"
  7097                           ; Number of cases is 1, Range of values is 232 to 232
  7098                           ; switch strategies available:
  7099                           ; Name         Instructions Cycles
  7100                           ; simple_byte            4     3 (average)
  7101                           ; direct_byte           14    11 (fixed)
  7102                           ; jumptable            263     9 (fixed)
  7103                           ;	Chosen strategy is simple_byte
  7104  0BCA  0873               	movf	OSC_config@frecuencia+1,w
  7105  0BCB  3AE8               	xorlw	232	; case 232
  7106  0BCC  1903               	skipnz
  7107  0BCD  2BCF               	goto	l5534
  7108  0BCE  2BB4               	goto	l3040
  7109  0BCF                     l5534:	
  7110                           
  7111                           ; Switch size 1, requested type "simple"
  7112                           ; Number of cases is 1, Range of values is 72 to 72
  7113                           ; switch strategies available:
  7114                           ; Name         Instructions Cycles
  7115                           ; simple_byte            4     3 (average)
  7116                           ; direct_byte           14    11 (fixed)
  7117                           ; jumptable            263     9 (fixed)
  7118                           ;	Chosen strategy is simple_byte
  7119  0BCF  0872               	movf	OSC_config@frecuencia,w
  7120  0BD0  3A48               	xorlw	72	; case 72
  7121  0BD1  1903               	skipnz
  7122  0BD2  2BA8               	goto	l3036
  7123  0BD3  2BB4               	goto	l3040
  7124  0BD4                     l5518:	
  7125                           
  7126                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7127                           ; Switch size 1, requested type "simple"
  7128                           ; Number of cases is 1, Range of values is 208 to 208
  7129                           ; switch strategies available:
  7130                           ; Name         Instructions Cycles
  7131                           ; simple_byte            4     3 (average)
  7132                           ; direct_byte           14    11 (fixed)
  7133                           ; jumptable            263     9 (fixed)
  7134                           ;	Chosen strategy is simple_byte
  7135  0BD4  0873               	movf	OSC_config@frecuencia+1,w
  7136  0BD5  3AD0               	xorlw	208	; case 208
  7137  0BD6  1903               	skipnz
  7138  0BD7  2BD9               	goto	l5536
  7139  0BD8  2BB4               	goto	l3040
  7140  0BD9                     l5536:	
  7141                           
  7142                           ; Switch size 1, requested type "simple"
  7143                           ; Number of cases is 1, Range of values is 144 to 144
  7144                           ; switch strategies available:
  7145                           ; Name         Instructions Cycles
  7146                           ; simple_byte            4     3 (average)
  7147                           ; direct_byte           14    11 (fixed)
  7148                           ; jumptable            263     9 (fixed)
  7149                           ;	Chosen strategy is simple_byte
  7150  0BD9  0872               	movf	OSC_config@frecuencia,w
  7151  0BDA  3A90               	xorlw	144	; case 144
  7152  0BDB  1903               	skipnz
  7153  0BDC  2BA1               	goto	l3034
  7154  0BDD  2BB4               	goto	l3040
  7155  0BDE                     l5520:	
  7156                           
  7157                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7158                           ; Switch size 1, requested type "simple"
  7159                           ; Number of cases is 1, Range of values is 161 to 161
  7160                           ; switch strategies available:
  7161                           ; Name         Instructions Cycles
  7162                           ; simple_byte            4     3 (average)
  7163                           ; direct_byte           14    11 (fixed)
  7164                           ; jumptable            263     9 (fixed)
  7165                           ;	Chosen strategy is simple_byte
  7166  0BDE  0873               	movf	OSC_config@frecuencia+1,w
  7167  0BDF  3AA1               	xorlw	161	; case 161
  7168  0BE0  1903               	skipnz
  7169  0BE1  2BE3               	goto	l5538
  7170  0BE2  2BB4               	goto	l3040
  7171  0BE3                     l5538:	
  7172                           
  7173                           ; Switch size 1, requested type "simple"
  7174                           ; Number of cases is 1, Range of values is 32 to 32
  7175                           ; switch strategies available:
  7176                           ; Name         Instructions Cycles
  7177                           ; simple_byte            4     3 (average)
  7178                           ; direct_byte           14    11 (fixed)
  7179                           ; jumptable            263     9 (fixed)
  7180                           ;	Chosen strategy is simple_byte
  7181  0BE3  0872               	movf	OSC_config@frecuencia,w
  7182  0BE4  3A20               	xorlw	32	; case 32
  7183  0BE5  1903               	skipnz
  7184  0BE6  2B9A               	goto	l3032
  7185  0BE7  2BB4               	goto	l3040
  7186  0BE8                     l5522:	
  7187                           
  7188                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7189                           ; Switch size 1, requested type "simple"
  7190                           ; Number of cases is 1, Range of values is 66 to 66
  7191                           ; switch strategies available:
  7192                           ; Name         Instructions Cycles
  7193                           ; simple_byte            4     3 (average)
  7194                           ; direct_byte           14    11 (fixed)
  7195                           ; jumptable            263     9 (fixed)
  7196                           ;	Chosen strategy is simple_byte
  7197  0BE8  0873               	movf	OSC_config@frecuencia+1,w
  7198  0BE9  3A42               	xorlw	66	; case 66
  7199  0BEA  1903               	skipnz
  7200  0BEB  2BED               	goto	l5540
  7201  0BEC  2BB4               	goto	l3040
  7202  0BED                     l5540:	
  7203                           
  7204                           ; Switch size 1, requested type "simple"
  7205                           ; Number of cases is 1, Range of values is 64 to 64
  7206                           ; switch strategies available:
  7207                           ; Name         Instructions Cycles
  7208                           ; simple_byte            4     3 (average)
  7209                           ; direct_byte           14    11 (fixed)
  7210                           ; jumptable            263     9 (fixed)
  7211                           ;	Chosen strategy is simple_byte
  7212  0BED  0872               	movf	OSC_config@frecuencia,w
  7213  0BEE  3A40               	xorlw	64	; case 64
  7214  0BEF  1903               	skipnz
  7215  0BF0  2B93               	goto	l3030
  7216  0BF1  2BB4               	goto	l3040
  7217  0BF2                     l5524:	
  7218                           
  7219                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7220                           ; Switch size 1, requested type "simple"
  7221                           ; Number of cases is 1, Range of values is 132 to 132
  7222                           ; switch strategies available:
  7223                           ; Name         Instructions Cycles
  7224                           ; simple_byte            4     3 (average)
  7225                           ; direct_byte           14    11 (fixed)
  7226                           ; jumptable            263     9 (fixed)
  7227                           ;	Chosen strategy is simple_byte
  7228  0BF2  0873               	movf	OSC_config@frecuencia+1,w
  7229  0BF3  3A84               	xorlw	132	; case 132
  7230  0BF4  1903               	skipnz
  7231  0BF5  2BF7               	goto	l5542
  7232  0BF6  2BB4               	goto	l3040
  7233  0BF7                     l5542:	
  7234                           
  7235                           ; Switch size 1, requested type "simple"
  7236                           ; Number of cases is 1, Range of values is 128 to 128
  7237                           ; switch strategies available:
  7238                           ; Name         Instructions Cycles
  7239                           ; simple_byte            4     3 (average)
  7240                           ; direct_byte           14    11 (fixed)
  7241                           ; jumptable            263     9 (fixed)
  7242                           ;	Chosen strategy is simple_byte
  7243  0BF7  0872               	movf	OSC_config@frecuencia,w
  7244  0BF8  3A80               	xorlw	128	; case 128
  7245  0BF9  1903               	skipnz
  7246  0BFA  2B8C               	goto	l3028
  7247  0BFB  2BB4               	goto	l3040
  7248  0BFC                     l5526:	
  7249                           
  7250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7251                           ; Switch size 1, requested type "simple"
  7252                           ; Number of cases is 1, Range of values is 9 to 9
  7253                           ; switch strategies available:
  7254                           ; Name         Instructions Cycles
  7255                           ; simple_byte            4     3 (average)
  7256                           ; direct_byte           14    11 (fixed)
  7257                           ; jumptable            263     9 (fixed)
  7258                           ;	Chosen strategy is simple_byte
  7259  0BFC  0873               	movf	OSC_config@frecuencia+1,w
  7260  0BFD  3A09               	xorlw	9	; case 9
  7261  0BFE  1903               	skipnz
  7262  0BFF  2C01               	goto	l5544
  7263  0C00  2BB4               	goto	l3040
  7264  0C01                     l5544:	
  7265                           
  7266                           ; Switch size 1, requested type "simple"
  7267                           ; Number of cases is 1, Range of values is 0 to 0
  7268                           ; switch strategies available:
  7269                           ; Name         Instructions Cycles
  7270                           ; simple_byte            4     3 (average)
  7271                           ; direct_byte           11     8 (fixed)
  7272                           ; jumptable            260     6 (fixed)
  7273                           ;	Chosen strategy is simple_byte
  7274  0C01  0872               	movf	OSC_config@frecuencia,w
  7275  0C02  3A00               	xorlw	0	; case 0
  7276  0C03  1903               	skipnz
  7277  0C04  2B85               	goto	l3026
  7278  0C05  2BB4               	goto	l3040
  7279  0C06                     l5528:	
  7280                           
  7281                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7282                           ; Switch size 1, requested type "simple"
  7283                           ; Number of cases is 1, Range of values is 18 to 18
  7284                           ; switch strategies available:
  7285                           ; Name         Instructions Cycles
  7286                           ; simple_byte            4     3 (average)
  7287                           ; direct_byte           14    11 (fixed)
  7288                           ; jumptable            263     9 (fixed)
  7289                           ;	Chosen strategy is simple_byte
  7290  0C06  0873               	movf	OSC_config@frecuencia+1,w
  7291  0C07  3A12               	xorlw	18	; case 18
  7292  0C08  1903               	skipnz
  7293  0C09  2C0B               	goto	l5546
  7294  0C0A  2BB4               	goto	l3040
  7295  0C0B                     l5546:	
  7296                           
  7297                           ; Switch size 1, requested type "simple"
  7298                           ; Number of cases is 1, Range of values is 0 to 0
  7299                           ; switch strategies available:
  7300                           ; Name         Instructions Cycles
  7301                           ; simple_byte            4     3 (average)
  7302                           ; direct_byte           11     8 (fixed)
  7303                           ; jumptable            260     6 (fixed)
  7304                           ;	Chosen strategy is simple_byte
  7305  0C0B  0872               	movf	OSC_config@frecuencia,w
  7306  0C0C  3A00               	xorlw	0	; case 0
  7307  0C0D  1903               	skipnz
  7308  0C0E  2B80               	goto	l3024
  7309  0C0F  2BB4               	goto	l3040
  7310  0C10                     l5530:	
  7311                           
  7312                           ; Switch size 1, requested type "simple"
  7313                           ; Number of cases is 8, Range of values is 0 to 122
  7314                           ; switch strategies available:
  7315                           ; Name         Instructions Cycles
  7316                           ; simple_byte           25    13 (average)
  7317                           ; jumptable            260     6 (fixed)
  7318                           ;	Chosen strategy is simple_byte
  7319  0C10  0874               	movf	OSC_config@frecuencia+2,w
  7320  0C11  3A00               	xorlw	0	; case 0
  7321  0C12  1903               	skipnz
  7322  0C13  2BC0               	goto	l5514
  7323  0C14  3A01               	xorlw	1	; case 1
  7324  0C15  1903               	skipnz
  7325  0C16  2BCA               	goto	l5516
  7326  0C17  3A02               	xorlw	2	; case 3
  7327  0C18  1903               	skipnz
  7328  0C19  2BD4               	goto	l5518
  7329  0C1A  3A04               	xorlw	4	; case 7
  7330  0C1B  1903               	skipnz
  7331  0C1C  2BDE               	goto	l5520
  7332  0C1D  3A08               	xorlw	8	; case 15
  7333  0C1E  1903               	skipnz
  7334  0C1F  2BE8               	goto	l5522
  7335  0C20  3A11               	xorlw	17	; case 30
  7336  0C21  1903               	skipnz
  7337  0C22  2BF2               	goto	l5524
  7338  0C23  3A23               	xorlw	35	; case 61
  7339  0C24  1903               	skipnz
  7340  0C25  2BFC               	goto	l5526
  7341  0C26  3A47               	xorlw	71	; case 122
  7342  0C27  1903               	skipnz
  7343  0C28  2C06               	goto	l5528
  7344  0C29  2BB4               	goto	l3040
  7345  0C2A  0008               	return
  7346  0C2B                     __end_of_OSC_config:	
  7347                           
  7348                           	psect	text26
  7349  16A8                     __ptext26:	
  7350 ;; *************** function _LCD_init *****************
  7351 ;; Defined at:
  7352 ;;		line 44 in file "LCD_8bits.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;		None
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;		None
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  1    wreg      void 
  7359 ;; Registers used:
  7360 ;;		wreg, status,2, status,0, pclath, cstack
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7366 ;;      Params:         0       0       0       0       0
  7367 ;;      Locals:         0       0       0       0       0
  7368 ;;      Temps:          2       0       0       0       0
  7369 ;;      Totals:         2       0       0       0       0
  7370 ;;Total ram usage:        2 bytes
  7371 ;; Hardware stack levels used:    1
  7372 ;; Hardware stack levels required when called:    2
  7373 ;; This function calls:
  7374 ;;		_LCD_Cmd
  7375 ;; This function is called by:
  7376 ;;		_SetUp
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           
  7381                           ;psect for function _LCD_init
  7382  16A8                     _LCD_init:	
  7383                           
  7384                           ;LCD_8bits.c: 45:     _delay((unsigned long)((20)*(4000000/4000.0)));
  7385                           
  7386                           ;incstack = 0
  7387                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  7388  16A8  301A               	movlw	26
  7389  16A9  00F6               	movwf	??_LCD_init+1
  7390  16AA  30F8               	movlw	248
  7391  16AB  00F5               	movwf	??_LCD_init
  7392  16AC                     u3557:	
  7393  16AC  0BF5               	decfsz	??_LCD_init,f
  7394  16AD  2EAC               	goto	u3557
  7395  16AE  0BF6               	decfsz	??_LCD_init+1,f
  7396  16AF  2EAC               	goto	u3557
  7397  16B0  0000               	nop
  7398                           
  7399                           ;LCD_8bits.c: 46:     LCD_Cmd(0x30);
  7400  16B1  3030               	movlw	48
  7401  16B2  160A  118A  24CA  160A  118A  	fcall	_LCD_Cmd
  7402                           
  7403                           ;LCD_8bits.c: 47:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7404  16B7  3007               	movlw	7
  7405  16B8  00F6               	movwf	??_LCD_init+1
  7406  16B9  307D               	movlw	125
  7407  16BA  00F5               	movwf	??_LCD_init
  7408  16BB                     u3567:	
  7409  16BB  0BF5               	decfsz	??_LCD_init,f
  7410  16BC  2EBB               	goto	u3567
  7411  16BD  0BF6               	decfsz	??_LCD_init+1,f
  7412  16BE  2EBB               	goto	u3567
  7413                           
  7414                           ;LCD_8bits.c: 48:     LCD_Cmd(0x30);
  7415  16BF  3030               	movlw	48
  7416  16C0  160A  118A  24CA  160A  118A  	fcall	_LCD_Cmd
  7417                           
  7418                           ;LCD_8bits.c: 49:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7419  16C5  3021               	movlw	33
  7420  16C6  00F5               	movwf	??_LCD_init
  7421  16C7                     u3577:	
  7422  16C7  0BF5               	decfsz	??_LCD_init,f
  7423  16C8  2EC7               	goto	u3577
  7424                           
  7425                           ;LCD_8bits.c: 50:     LCD_Cmd(0x30);
  7426  16C9  3030               	movlw	48
  7427  16CA  160A  118A  24CA  160A  118A  	fcall	_LCD_Cmd
  7428                           
  7429                           ;LCD_8bits.c: 51:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7430  16CF  3021               	movlw	33
  7431  16D0  00F5               	movwf	??_LCD_init
  7432  16D1                     u3587:	
  7433  16D1  0BF5               	decfsz	??_LCD_init,f
  7434  16D2  2ED1               	goto	u3587
  7435                           
  7436                           ;LCD_8bits.c: 52:     LCD_Cmd(0x38);
  7437  16D3  3038               	movlw	56
  7438  16D4  160A  118A  24CA  160A  118A  	fcall	_LCD_Cmd
  7439                           
  7440                           ;LCD_8bits.c: 53:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7441  16D9  3011               	movlw	17
  7442  16DA  00F5               	movwf	??_LCD_init
  7443  16DB                     u3597:	
  7444  16DB  0BF5               	decfsz	??_LCD_init,f
  7445  16DC  2EDB               	goto	u3597
  7446  16DD  0000               	nop
  7447                           
  7448                           ;LCD_8bits.c: 54:     LCD_Cmd(0x08);
  7449  16DE  3008               	movlw	8
  7450  16DF  160A  118A  24CA  160A  118A  	fcall	_LCD_Cmd
  7451                           
  7452                           ;LCD_8bits.c: 55:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7453  16E4  3011               	movlw	17
  7454  16E5  00F5               	movwf	??_LCD_init
  7455  16E6                     u3607:	
  7456  16E6  0BF5               	decfsz	??_LCD_init,f
  7457  16E7  2EE6               	goto	u3607
  7458  16E8  0000               	nop
  7459                           
  7460                           ;LCD_8bits.c: 56:     LCD_Cmd(0x01);
  7461  16E9  3001               	movlw	1
  7462  16EA  160A  118A  24CA  160A  118A  	fcall	_LCD_Cmd
  7463                           
  7464                           ;LCD_8bits.c: 57:     _delay((unsigned long)((3)*(4000000/4000.0)));
  7465  16EF  3004               	movlw	4
  7466  16F0  00F6               	movwf	??_LCD_init+1
  7467  16F1  30E4               	movlw	228
  7468  16F2  00F5               	movwf	??_LCD_init
  7469  16F3                     u3617:	
  7470  16F3  0BF5               	decfsz	??_LCD_init,f
  7471  16F4  2EF3               	goto	u3617
  7472  16F5  0BF6               	decfsz	??_LCD_init+1,f
  7473  16F6  2EF3               	goto	u3617
  7474  16F7  0000               	nop
  7475                           
  7476                           ;LCD_8bits.c: 58:     LCD_Cmd(0x06);
  7477  16F8  3006               	movlw	6
  7478  16F9  160A  118A  24CA  160A  118A  	fcall	_LCD_Cmd
  7479                           
  7480                           ;LCD_8bits.c: 59:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7481  16FE  3011               	movlw	17
  7482  16FF  00F5               	movwf	??_LCD_init
  7483  1700                     u3627:	
  7484  1700  0BF5               	decfsz	??_LCD_init,f
  7485  1701  2F00               	goto	u3627
  7486  1702  0000               	nop
  7487                           
  7488                           ;LCD_8bits.c: 60:     LCD_Cmd(0x0C);
  7489  1703  300C               	movlw	12
  7490  1704  160A  118A  24CA  160A  118A  	fcall	_LCD_Cmd
  7491                           
  7492                           ;LCD_8bits.c: 61:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7493  1709  3011               	movlw	17
  7494  170A  00F5               	movwf	??_LCD_init
  7495  170B                     u3637:	
  7496  170B  0BF5               	decfsz	??_LCD_init,f
  7497  170C  2F0B               	goto	u3637
  7498  170D  0000               	nop
  7499  170E  0008               	return
  7500  170F                     __end_of_LCD_init:	
  7501                           
  7502                           	psect	text27
  7503  13D7                     __ptext27:	
  7504 ;; *************** function _LCD_clear *****************
  7505 ;; Defined at:
  7506 ;;		line 32 in file "LCD_8bits.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;		None
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;		None
  7511 ;; Return value:  Size  Location     Type
  7512 ;;                  1    wreg      void 
  7513 ;; Registers used:
  7514 ;;		wreg, status,2, status,0, pclath, cstack
  7515 ;; Tracked objects:
  7516 ;;		On entry : 0/0
  7517 ;;		On exit  : 0/0
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7520 ;;      Params:         0       0       0       0       0
  7521 ;;      Locals:         0       0       0       0       0
  7522 ;;      Temps:          2       0       0       0       0
  7523 ;;      Totals:         2       0       0       0       0
  7524 ;;Total ram usage:        2 bytes
  7525 ;; Hardware stack levels used:    1
  7526 ;; Hardware stack levels required when called:    2
  7527 ;; This function calls:
  7528 ;;		_LCD_Cmd
  7529 ;; This function is called by:
  7530 ;;		_SetUp
  7531 ;;		_mostrarLCD
  7532 ;;		_pressBoton1
  7533 ;;		_pressBoton2
  7534 ;; This function uses a non-reentrant model
  7535 ;;
  7536                           
  7537                           
  7538                           ;psect for function _LCD_clear
  7539  13D7                     _LCD_clear:	
  7540                           
  7541                           ;LCD_8bits.c: 33:     LCD_Cmd(0x00);
  7542                           
  7543                           ;incstack = 0
  7544                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  7545  13D7  3000               	movlw	0
  7546  13D8  160A  118A  24CA  160A  118A  	fcall	_LCD_Cmd
  7547                           
  7548                           ;LCD_8bits.c: 34:     LCD_Cmd(0x01);
  7549  13DD  3001               	movlw	1
  7550  13DE  160A  118A  24CA  160A  118A  	fcall	_LCD_Cmd
  7551                           
  7552                           ;LCD_8bits.c: 35:     _delay((unsigned long)((4)*(4000000/4000.0)));
  7553  13E3  3006               	movlw	6
  7554  13E4  00F6               	movwf	??_LCD_clear+1
  7555  13E5  3030               	movlw	48
  7556  13E6  00F5               	movwf	??_LCD_clear
  7557  13E7                     u3647:	
  7558  13E7  0BF5               	decfsz	??_LCD_clear,f
  7559  13E8  2BE7               	goto	u3647
  7560  13E9  0BF6               	decfsz	??_LCD_clear+1,f
  7561  13EA  2BE7               	goto	u3647
  7562  13EB  0000               	nop
  7563  13EC  0008               	return
  7564  13ED                     __end_of_LCD_clear:	
  7565                           
  7566                           	psect	text28
  7567  1472                     __ptext28:	
  7568 ;; *************** function _LCD_Create_Char *****************
  7569 ;; Defined at:
  7570 ;;		line 116 in file "LCD_8bits.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;  charnum         1    wreg     unsigned char 
  7573 ;;  chardata        1    5[COMMON] PTR const unsigned char 
  7574 ;;		 -> arrowr_vacio(8), gota(8), termometro(8), arrowr(8), 
  7575 ;;		 -> atilde(8), 
  7576 ;; Auto vars:     Size  Location     Type
  7577 ;;  charnum         1    7[COMMON] unsigned char 
  7578 ;;  n               1    8[COMMON] unsigned char 
  7579 ;; Return value:  Size  Location     Type
  7580 ;;                  1    wreg      void 
  7581 ;; Registers used:
  7582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7583 ;; Tracked objects:
  7584 ;;		On entry : 0/0
  7585 ;;		On exit  : 0/0
  7586 ;;		Unchanged: 0/0
  7587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7588 ;;      Params:         1       0       0       0       0
  7589 ;;      Locals:         2       0       0       0       0
  7590 ;;      Temps:          1       0       0       0       0
  7591 ;;      Totals:         4       0       0       0       0
  7592 ;;Total ram usage:        4 bytes
  7593 ;; Hardware stack levels used:    1
  7594 ;; Hardware stack levels required when called:    2
  7595 ;; This function calls:
  7596 ;;		_LCD_Cmd
  7597 ;;		_LCD_Write_Character
  7598 ;; This function is called by:
  7599 ;;		_SetUp
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           
  7604                           ;psect for function _LCD_Create_Char
  7605  1472                     _LCD_Create_Char:	
  7606                           
  7607                           ;incstack = 0
  7608                           ; Regs used in _LCD_Create_Char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7609                           ;LCD_Create_Char@charnum stored from wreg
  7610  1472  00F7               	movwf	LCD_Create_Char@charnum
  7611                           
  7612                           ;LCD_8bits.c: 117:  uint8_t n;;LCD_8bits.c: 118:  charnum &= 0x07;
  7613  1473  3007               	movlw	7
  7614  1474  00F6               	movwf	??_LCD_Create_Char
  7615  1475  0876               	movf	??_LCD_Create_Char,w
  7616  1476  05F7               	andwf	LCD_Create_Char@charnum,f
  7617                           
  7618                           ;LCD_8bits.c: 119:  LCD_Cmd(0x40 | (charnum << 3));
  7619  1477  0877               	movf	LCD_Create_Char@charnum,w
  7620  1478  00F6               	movwf	??_LCD_Create_Char
  7621  1479  3002               	movlw	2
  7622  147A                     u1875:	
  7623  147A  1003               	clrc
  7624  147B  0DF6               	rlf	??_LCD_Create_Char,f
  7625  147C  3EFF               	addlw	-1
  7626  147D  1D03               	skipz
  7627  147E  2C7A               	goto	u1875
  7628  147F  1003               	clrc
  7629  1480  0D76               	rlf	??_LCD_Create_Char,w
  7630  1481  3840               	iorlw	64
  7631  1482  160A  118A  24CA  160A  118A  	fcall	_LCD_Cmd
  7632                           
  7633                           ;LCD_8bits.c: 120:  for (n = 0; n < 8; n++)
  7634  1487  01F8               	clrf	LCD_Create_Char@n
  7635  1488                     l3146:	
  7636                           
  7637                           ;LCD_8bits.c: 121:   LCD_Write_Character(chardata[n]);
  7638  1488  0878               	movf	LCD_Create_Char@n,w
  7639  1489  0775               	addwf	LCD_Create_Char@chardata,w
  7640  148A  0084               	movwf	4
  7641  148B  120A  158A  2000  160A  118A  	fcall	stringdir
  7642  1490  120A  158A  20BC  160A  118A  	fcall	_LCD_Write_Character
  7643  1495  3001               	movlw	1
  7644  1496  00F6               	movwf	??_LCD_Create_Char
  7645  1497  0876               	movf	??_LCD_Create_Char,w
  7646  1498  07F8               	addwf	LCD_Create_Char@n,f
  7647  1499  3008               	movlw	8
  7648  149A  0278               	subwf	LCD_Create_Char@n,w
  7649  149B  1803               	btfsc	3,0
  7650  149C  0008               	return
  7651  149D  2C88               	goto	l3146
  7652  149E                     __end_of_LCD_Create_Char:	
  7653                           
  7654                           	psect	text29
  7655  08BC                     __ptext29:	
  7656 ;; *************** function _LCD_Write_Character *****************
  7657 ;; Defined at:
  7658 ;;		line 64 in file "LCD_8bits.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;  caracter        1    wreg     unsigned char 
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;  caracter        1    3[COMMON] unsigned char 
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  1    wreg      void 
  7665 ;; Registers used:
  7666 ;;		wreg
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7672 ;;      Params:         0       0       0       0       0
  7673 ;;      Locals:         1       0       0       0       0
  7674 ;;      Temps:          1       0       0       0       0
  7675 ;;      Totals:         2       0       0       0       0
  7676 ;;Total ram usage:        2 bytes
  7677 ;; Hardware stack levels used:    1
  7678 ;; Hardware stack levels required when called:    1
  7679 ;; This function calls:
  7680 ;;		Nothing
  7681 ;; This function is called by:
  7682 ;;		_display_Uhrzeit
  7683 ;;		_display_Datum
  7684 ;;		_mostrarLCD
  7685 ;;		_pressBoton2
  7686 ;;		_LCD_Write_String
  7687 ;;		_LCD_Create_Char
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691                           
  7692                           ;psect for function _LCD_Write_Character
  7693  08BC                     _LCD_Write_Character:	
  7694                           
  7695                           ;incstack = 0
  7696                           ; Regs used in _LCD_Write_Character: [wreg]
  7697                           ;LCD_Write_Character@caracter stored from wreg
  7698  08BC  00F3               	movwf	LCD_Write_Character@caracter
  7699                           
  7700                           ;LCD_8bits.c: 65:     PORTCbits.RC0 = 1;
  7701  08BD  1283               	bcf	3,5	;RP0=0, select bank0
  7702  08BE  1303               	bcf	3,6	;RP1=0, select bank0
  7703  08BF  1407               	bsf	7,0	;volatile
  7704                           
  7705                           ;LCD_8bits.c: 67:     PORTD = caracter;
  7706  08C0  0873               	movf	LCD_Write_Character@caracter,w
  7707  08C1  0088               	movwf	8	;volatile
  7708                           
  7709                           ;LCD_8bits.c: 68:     PORTCbits.RC1 = 1;
  7710  08C2  1487               	bsf	7,1	;volatile
  7711                           
  7712                           ;LCD_8bits.c: 69:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  7713  08C3  300D               	movlw	13
  7714  08C4  00F2               	movwf	??_LCD_Write_Character
  7715  08C5                     u3657:	
  7716  08C5  0BF2               	decfsz	??_LCD_Write_Character,f
  7717  08C6  28C5               	goto	u3657
  7718                           
  7719                           ;LCD_8bits.c: 70:     PORTCbits.RC1 = 0;
  7720  08C7  1283               	bcf	3,5	;RP0=0, select bank0
  7721  08C8  1303               	bcf	3,6	;RP1=0, select bank0
  7722  08C9  1087               	bcf	7,1	;volatile
  7723  08CA  0008               	return
  7724  08CB                     __end_of_LCD_Write_Character:	
  7725                           
  7726                           	psect	text30
  7727  14CA                     __ptext30:	
  7728 ;; *************** function _LCD_Cmd *****************
  7729 ;; Defined at:
  7730 ;;		line 21 in file "LCD_8bits.c"
  7731 ;; Parameters:    Size  Location     Type
  7732 ;;  comando         1    wreg     unsigned char 
  7733 ;; Auto vars:     Size  Location     Type
  7734 ;;  comando         1    4[COMMON] unsigned char 
  7735 ;; Return value:  Size  Location     Type
  7736 ;;                  1    wreg      void 
  7737 ;; Registers used:
  7738 ;;		wreg
  7739 ;; Tracked objects:
  7740 ;;		On entry : 0/0
  7741 ;;		On exit  : 0/0
  7742 ;;		Unchanged: 0/0
  7743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7744 ;;      Params:         0       0       0       0       0
  7745 ;;      Locals:         1       0       0       0       0
  7746 ;;      Temps:          2       0       0       0       0
  7747 ;;      Totals:         3       0       0       0       0
  7748 ;;Total ram usage:        3 bytes
  7749 ;; Hardware stack levels used:    1
  7750 ;; Hardware stack levels required when called:    1
  7751 ;; This function calls:
  7752 ;;		Nothing
  7753 ;; This function is called by:
  7754 ;;		_LCD_clear
  7755 ;;		_LCD_init
  7756 ;;		_LCD_Set_Cursor
  7757 ;;		_LCD_Create_Char
  7758 ;;		_LCD_home
  7759 ;;		_LCD_Shift_links
  7760 ;;		_LCD_Shift_rechts
  7761 ;;		_LCD_Cursor_rechts
  7762 ;;		_LCD_Cursor_links
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766                           
  7767                           ;psect for function _LCD_Cmd
  7768  14CA                     _LCD_Cmd:	
  7769                           
  7770                           ;incstack = 0
  7771                           ; Regs used in _LCD_Cmd: [wreg]
  7772                           ;LCD_Cmd@comando stored from wreg
  7773  14CA  00F4               	movwf	LCD_Cmd@comando
  7774                           
  7775                           ;LCD_8bits.c: 22:     PORTCbits.RC0 = 0;
  7776  14CB  1283               	bcf	3,5	;RP0=0, select bank0
  7777  14CC  1303               	bcf	3,6	;RP1=0, select bank0
  7778  14CD  1007               	bcf	7,0	;volatile
  7779                           
  7780                           ;LCD_8bits.c: 23:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7781  14CE  3007               	movlw	7
  7782  14CF  00F3               	movwf	??_LCD_Cmd+1
  7783  14D0  307D               	movlw	125
  7784  14D1  00F2               	movwf	??_LCD_Cmd
  7785  14D2                     u3667:	
  7786  14D2  0BF2               	decfsz	??_LCD_Cmd,f
  7787  14D3  2CD2               	goto	u3667
  7788  14D4  0BF3               	decfsz	??_LCD_Cmd+1,f
  7789  14D5  2CD2               	goto	u3667
  7790                           
  7791                           ;LCD_8bits.c: 24:     PORTCbits.RC1 = 1;
  7792  14D6  1283               	bcf	3,5	;RP0=0, select bank0
  7793  14D7  1303               	bcf	3,6	;RP1=0, select bank0
  7794  14D8  1487               	bsf	7,1	;volatile
  7795                           
  7796                           ;LCD_8bits.c: 25:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7797  14D9  3007               	movlw	7
  7798  14DA  00F3               	movwf	??_LCD_Cmd+1
  7799  14DB  307D               	movlw	125
  7800  14DC  00F2               	movwf	??_LCD_Cmd
  7801  14DD                     u3677:	
  7802  14DD  0BF2               	decfsz	??_LCD_Cmd,f
  7803  14DE  2CDD               	goto	u3677
  7804  14DF  0BF3               	decfsz	??_LCD_Cmd+1,f
  7805  14E0  2CDD               	goto	u3677
  7806                           
  7807                           ;LCD_8bits.c: 26:     PORTD = comando;
  7808  14E1  0874               	movf	LCD_Cmd@comando,w
  7809  14E2  1283               	bcf	3,5	;RP0=0, select bank0
  7810  14E3  1303               	bcf	3,6	;RP1=0, select bank0
  7811  14E4  0088               	movwf	8	;volatile
  7812                           
  7813                           ;LCD_8bits.c: 27:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7814  14E5  3007               	movlw	7
  7815  14E6  00F3               	movwf	??_LCD_Cmd+1
  7816  14E7  307D               	movlw	125
  7817  14E8  00F2               	movwf	??_LCD_Cmd
  7818  14E9                     u3687:	
  7819  14E9  0BF2               	decfsz	??_LCD_Cmd,f
  7820  14EA  2CE9               	goto	u3687
  7821  14EB  0BF3               	decfsz	??_LCD_Cmd+1,f
  7822  14EC  2CE9               	goto	u3687
  7823                           
  7824                           ;LCD_8bits.c: 28:     PORTCbits.RC1 = 0;
  7825  14ED  1283               	bcf	3,5	;RP0=0, select bank0
  7826  14EE  1303               	bcf	3,6	;RP1=0, select bank0
  7827  14EF  1087               	bcf	7,1	;volatile
  7828                           
  7829                           ;LCD_8bits.c: 29:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7830  14F0  3007               	movlw	7
  7831  14F1  00F3               	movwf	??_LCD_Cmd+1
  7832  14F2  307D               	movlw	125
  7833  14F3  00F2               	movwf	??_LCD_Cmd
  7834  14F4                     u3697:	
  7835  14F4  0BF2               	decfsz	??_LCD_Cmd,f
  7836  14F5  2CF4               	goto	u3697
  7837  14F6  0BF3               	decfsz	??_LCD_Cmd+1,f
  7838  14F7  2CF4               	goto	u3697
  7839  14F8  0008               	return
  7840  14F9                     __end_of_LCD_Cmd:	
  7841                           
  7842                           	psect	text31
  7843  0D97                     __ptext31:	
  7844 ;; *************** function _IMU_init *****************
  7845 ;; Defined at:
  7846 ;;		line 126 in file "IMU.c"
  7847 ;; Parameters:    Size  Location     Type
  7848 ;;		None
  7849 ;; Auto vars:     Size  Location     Type
  7850 ;;		None
  7851 ;; Return value:  Size  Location     Type
  7852 ;;                  1    wreg      void 
  7853 ;; Registers used:
  7854 ;;		wreg, status,2, status,0, pclath, cstack
  7855 ;; Tracked objects:
  7856 ;;		On entry : 0/0
  7857 ;;		On exit  : 0/0
  7858 ;;		Unchanged: 0/0
  7859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7860 ;;      Params:         0       0       0       0       0
  7861 ;;      Locals:         0       0       0       0       0
  7862 ;;      Temps:          2       0       0       0       0
  7863 ;;      Totals:         2       0       0       0       0
  7864 ;;Total ram usage:        2 bytes
  7865 ;; Hardware stack levels used:    1
  7866 ;; Hardware stack levels required when called:    3
  7867 ;; This function calls:
  7868 ;;		_I2C_Master_Start
  7869 ;;		_I2C_Master_Stop
  7870 ;;		_I2C_Master_Write
  7871 ;; This function is called by:
  7872 ;;		_SetUp
  7873 ;; This function uses a non-reentrant model
  7874 ;;
  7875                           
  7876                           
  7877                           ;psect for function _IMU_init
  7878  0D97                     _IMU_init:	
  7879                           
  7880                           ;IMU.c: 127:     _delay((unsigned long)((150)*(4000000/4000.0)));
  7881                           
  7882                           ;incstack = 0
  7883                           ; Regs used in _IMU_init: [wreg+status,2+status,0+pclath+cstack]
  7884  0D97  30C3               	movlw	195
  7885  0D98  00F5               	movwf	??_IMU_init+1
  7886  0D99  30CD               	movlw	205
  7887  0D9A  00F4               	movwf	??_IMU_init
  7888  0D9B                     u3707:	
  7889  0D9B  0BF4               	decfsz	??_IMU_init,f
  7890  0D9C  2D9B               	goto	u3707
  7891  0D9D  0BF5               	decfsz	??_IMU_init+1,f
  7892  0D9E  2D9B               	goto	u3707
  7893                           
  7894                           ;IMU.c: 128:  I2C_Master_Start();
  7895  0D9F  160A  118A  235A  120A  158A  	fcall	_I2C_Master_Start
  7896                           
  7897                           ;IMU.c: 129:     I2C_Master_Write(0b11010010);
  7898  0DA4  30D2               	movlw	210
  7899  0DA5  00F2               	movwf	I2C_Master_Write@d
  7900  0DA6  3000               	movlw	0
  7901  0DA7  00F3               	movwf	I2C_Master_Write@d+1
  7902  0DA8  160A  118A  2368  120A  158A  	fcall	_I2C_Master_Write
  7903                           
  7904                           ;IMU.c: 130:  I2C_Master_Write(0x19);
  7905  0DAD  3019               	movlw	25
  7906  0DAE  00F2               	movwf	I2C_Master_Write@d
  7907  0DAF  3000               	movlw	0
  7908  0DB0  00F3               	movwf	I2C_Master_Write@d+1
  7909  0DB1  160A  118A  2368  120A  158A  	fcall	_I2C_Master_Write
  7910                           
  7911                           ;IMU.c: 131:  I2C_Master_Write(0x07);
  7912  0DB6  3007               	movlw	7
  7913  0DB7  00F2               	movwf	I2C_Master_Write@d
  7914  0DB8  3000               	movlw	0
  7915  0DB9  00F3               	movwf	I2C_Master_Write@d+1
  7916  0DBA  160A  118A  2368  120A  158A  	fcall	_I2C_Master_Write
  7917                           
  7918                           ;IMU.c: 132:  I2C_Master_Stop();
  7919  0DBF  160A  118A  2361  120A  158A  	fcall	_I2C_Master_Stop
  7920                           
  7921                           ;IMU.c: 134:     I2C_Master_Start();
  7922  0DC4  160A  118A  235A  120A  158A  	fcall	_I2C_Master_Start
  7923                           
  7924                           ;IMU.c: 135:     I2C_Master_Write(0b11010010);
  7925  0DC9  30D2               	movlw	210
  7926  0DCA  00F2               	movwf	I2C_Master_Write@d
  7927  0DCB  3000               	movlw	0
  7928  0DCC  00F3               	movwf	I2C_Master_Write@d+1
  7929  0DCD  160A  118A  2368  120A  158A  	fcall	_I2C_Master_Write
  7930                           
  7931                           ;IMU.c: 136:  I2C_Master_Write(0x6B);
  7932  0DD2  306B               	movlw	107
  7933  0DD3  00F2               	movwf	I2C_Master_Write@d
  7934  0DD4  3000               	movlw	0
  7935  0DD5  00F3               	movwf	I2C_Master_Write@d+1
  7936  0DD6  160A  118A  2368  120A  158A  	fcall	_I2C_Master_Write
  7937                           
  7938                           ;IMU.c: 137:  I2C_Master_Write(0x01);
  7939  0DDB  3001               	movlw	1
  7940  0DDC  00F2               	movwf	I2C_Master_Write@d
  7941  0DDD  3000               	movlw	0
  7942  0DDE  00F3               	movwf	I2C_Master_Write@d+1
  7943  0DDF  160A  118A  2368  120A  158A  	fcall	_I2C_Master_Write
  7944                           
  7945                           ;IMU.c: 138:  I2C_Master_Stop();
  7946  0DE4  160A  118A  2361  120A  158A  	fcall	_I2C_Master_Stop
  7947                           
  7948                           ;IMU.c: 140:     I2C_Master_Start();
  7949  0DE9  160A  118A  235A  120A  158A  	fcall	_I2C_Master_Start
  7950                           
  7951                           ;IMU.c: 141:     I2C_Master_Write(0b11010010);
  7952  0DEE  30D2               	movlw	210
  7953  0DEF  00F2               	movwf	I2C_Master_Write@d
  7954  0DF0  3000               	movlw	0
  7955  0DF1  00F3               	movwf	I2C_Master_Write@d+1
  7956  0DF2  160A  118A  2368  120A  158A  	fcall	_I2C_Master_Write
  7957                           
  7958                           ;IMU.c: 142:  I2C_Master_Write(0x1A);
  7959  0DF7  301A               	movlw	26
  7960  0DF8  00F2               	movwf	I2C_Master_Write@d
  7961  0DF9  3000               	movlw	0
  7962  0DFA  00F3               	movwf	I2C_Master_Write@d+1
  7963  0DFB  160A  118A  2368  120A  158A  	fcall	_I2C_Master_Write
  7964                           
  7965                           ;IMU.c: 143:  I2C_Master_Write(0x00);
  7966  0E00  3000               	movlw	0
  7967  0E01  00F2               	movwf	I2C_Master_Write@d
  7968  0E02  00F3               	movwf	I2C_Master_Write@d+1
  7969  0E03  160A  118A  2368  120A  158A  	fcall	_I2C_Master_Write
  7970                           
  7971                           ;IMU.c: 144:  I2C_Master_Stop();
  7972  0E08  160A  118A  2361  120A  158A  	fcall	_I2C_Master_Stop
  7973                           
  7974                           ;IMU.c: 146:     I2C_Master_Start();
  7975  0E0D  160A  118A  235A  120A  158A  	fcall	_I2C_Master_Start
  7976                           
  7977                           ;IMU.c: 147:     I2C_Master_Write(0b11010010);
  7978  0E12  30D2               	movlw	210
  7979  0E13  00F2               	movwf	I2C_Master_Write@d
  7980  0E14  3000               	movlw	0
  7981  0E15  00F3               	movwf	I2C_Master_Write@d+1
  7982  0E16  160A  118A  2368  120A  158A  	fcall	_I2C_Master_Write
  7983                           
  7984                           ;IMU.c: 148:  I2C_Master_Write(0x1B);
  7985  0E1B  301B               	movlw	27
  7986  0E1C  00F2               	movwf	I2C_Master_Write@d
  7987  0E1D  3000               	movlw	0
  7988  0E1E  00F3               	movwf	I2C_Master_Write@d+1
  7989  0E1F  160A  118A  2368  120A  158A  	fcall	_I2C_Master_Write
  7990                           
  7991                           ;IMU.c: 149:  I2C_Master_Write(0x18);
  7992  0E24  3018               	movlw	24
  7993  0E25  00F2               	movwf	I2C_Master_Write@d
  7994  0E26  3000               	movlw	0
  7995  0E27  00F3               	movwf	I2C_Master_Write@d+1
  7996  0E28  160A  118A  2368  120A  158A  	fcall	_I2C_Master_Write
  7997                           
  7998                           ;IMU.c: 150:  I2C_Master_Stop();
  7999  0E2D  160A  118A  2361  120A  158A  	fcall	_I2C_Master_Stop
  8000                           
  8001                           ;IMU.c: 152:     I2C_Master_Start();
  8002  0E32  160A  118A  235A  120A  158A  	fcall	_I2C_Master_Start
  8003                           
  8004                           ;IMU.c: 153:     I2C_Master_Write(0b11010010);
  8005  0E37  30D2               	movlw	210
  8006  0E38  00F2               	movwf	I2C_Master_Write@d
  8007  0E39  3000               	movlw	0
  8008  0E3A  00F3               	movwf	I2C_Master_Write@d+1
  8009  0E3B  160A  118A  2368  120A  158A  	fcall	_I2C_Master_Write
  8010                           
  8011                           ;IMU.c: 154:  I2C_Master_Write(0x1C);
  8012  0E40  301C               	movlw	28
  8013  0E41  00F2               	movwf	I2C_Master_Write@d
  8014  0E42  3000               	movlw	0
  8015  0E43  00F3               	movwf	I2C_Master_Write@d+1
  8016  0E44  160A  118A  2368  120A  158A  	fcall	_I2C_Master_Write
  8017                           
  8018                           ;IMU.c: 155:  I2C_Master_Write(0x18);
  8019  0E49  3018               	movlw	24
  8020  0E4A  00F2               	movwf	I2C_Master_Write@d
  8021  0E4B  3000               	movlw	0
  8022  0E4C  00F3               	movwf	I2C_Master_Write@d+1
  8023  0E4D  160A  118A  2368  120A  158A  	fcall	_I2C_Master_Write
  8024                           
  8025                           ;IMU.c: 156:  I2C_Master_Stop();
  8026  0E52  160A  118A  2361   	fcall	_I2C_Master_Stop
  8027  0E55  0008               	return
  8028  0E56                     __end_of_IMU_init:	
  8029                           
  8030                           	psect	text32
  8031  14F9                     __ptext32:	
  8032 ;; *************** function _I2C_Master_Init *****************
  8033 ;; Defined at:
  8034 ;;		line 16 in file "I2C.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;  c               4    6[BANK0 ] const unsigned long 
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;		None
  8039 ;; Return value:  Size  Location     Type
  8040 ;;                  1    wreg      void 
  8041 ;; Registers used:
  8042 ;;		wreg, status,2, status,0, pclath, cstack
  8043 ;; Tracked objects:
  8044 ;;		On entry : 0/0
  8045 ;;		On exit  : 0/0
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8048 ;;      Params:         0       4       0       0       0
  8049 ;;      Locals:         0       0       0       0       0
  8050 ;;      Temps:          0       4       0       0       0
  8051 ;;      Totals:         0       8       0       0       0
  8052 ;;Total ram usage:        8 bytes
  8053 ;; Hardware stack levels used:    1
  8054 ;; Hardware stack levels required when called:    2
  8055 ;; This function calls:
  8056 ;;		___lldiv
  8057 ;; This function is called by:
  8058 ;;		_SetUp
  8059 ;; This function uses a non-reentrant model
  8060 ;;
  8061                           
  8062                           
  8063                           ;psect for function _I2C_Master_Init
  8064  14F9                     _I2C_Master_Init:	
  8065                           
  8066                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  8067                           
  8068                           ;incstack = 0
  8069                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  8070  14F9  3028               	movlw	40
  8071  14FA  1283               	bcf	3,5	;RP0=0, select bank0
  8072  14FB  1303               	bcf	3,6	;RP1=0, select bank0
  8073  14FC  0094               	movwf	20	;volatile
  8074                           
  8075                           ;I2C.c: 19:     SSPCON2 = 0;
  8076  14FD  1683               	bsf	3,5	;RP0=1, select bank1
  8077  14FE  1303               	bcf	3,6	;RP1=0, select bank1
  8078  14FF  0191               	clrf	17	;volatile
  8079                           
  8080                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  8081  1500  1283               	bcf	3,5	;RP0=0, select bank0
  8082  1501  1303               	bcf	3,6	;RP1=0, select bank0
  8083  1502  0826               	movf	I2C_Master_Init@c,w
  8084  1503  00AA               	movwf	??_I2C_Master_Init
  8085  1504  0827               	movf	I2C_Master_Init@c+1,w
  8086  1505  00AB               	movwf	??_I2C_Master_Init+1
  8087  1506  0828               	movf	I2C_Master_Init@c+2,w
  8088  1507  00AC               	movwf	??_I2C_Master_Init+2
  8089  1508  0829               	movf	I2C_Master_Init@c+3,w
  8090  1509  00AD               	movwf	??_I2C_Master_Init+3
  8091  150A  3002               	movlw	2
  8092  150B                     u3205:	
  8093  150B  1003               	clrc
  8094  150C  0DAA               	rlf	??_I2C_Master_Init,f
  8095  150D  0DAB               	rlf	??_I2C_Master_Init+1,f
  8096  150E  0DAC               	rlf	??_I2C_Master_Init+2,f
  8097  150F  0DAD               	rlf	??_I2C_Master_Init+3,f
  8098  1510  3EFF               	addlw	-1
  8099  1511  1D03               	skipz
  8100  1512  2D0B               	goto	u3205
  8101  1513  082D               	movf	??_I2C_Master_Init+3,w
  8102  1514  00F5               	movwf	___lldiv@divisor+3
  8103  1515  082C               	movf	??_I2C_Master_Init+2,w
  8104  1516  00F4               	movwf	___lldiv@divisor+2
  8105  1517  082B               	movf	??_I2C_Master_Init+1,w
  8106  1518  00F3               	movwf	___lldiv@divisor+1
  8107  1519  082A               	movf	??_I2C_Master_Init,w
  8108  151A  00F2               	movwf	___lldiv@divisor
  8109  151B  3000               	movlw	0
  8110  151C  00F9               	movwf	___lldiv@dividend+3
  8111  151D  303D               	movlw	61
  8112  151E  00F8               	movwf	___lldiv@dividend+2
  8113  151F  3009               	movlw	9
  8114  1520  00F7               	movwf	___lldiv@dividend+1
  8115  1521  3000               	movlw	0
  8116  1522  00F6               	movwf	___lldiv@dividend
  8117  1523  160A  118A  2648   	fcall	___lldiv
  8118  1526  0872               	movf	?___lldiv,w
  8119  1527  3EFF               	addlw	255
  8120  1528  1683               	bsf	3,5	;RP0=1, select bank1
  8121  1529  1303               	bcf	3,6	;RP1=0, select bank1
  8122  152A  0093               	movwf	19	;volatile
  8123                           
  8124                           ;I2C.c: 21:     SSPSTAT = 0;
  8125  152B  0194               	clrf	20	;volatile
  8126                           
  8127                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  8128  152C  1587               	bsf	7,3	;volatile
  8129                           
  8130                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  8131  152D  1607               	bsf	7,4	;volatile
  8132  152E  0008               	return
  8133  152F                     __end_of_I2C_Master_Init:	
  8134                           
  8135                           	psect	text33
  8136  1648                     __ptext33:	
  8137 ;; *************** function ___lldiv *****************
  8138 ;; Defined at:
  8139 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  8140 ;; Parameters:    Size  Location     Type
  8141 ;;  divisor         4    2[COMMON] unsigned long 
  8142 ;;  dividend        4    6[COMMON] unsigned long 
  8143 ;; Auto vars:     Size  Location     Type
  8144 ;;  quotient        4    1[BANK0 ] unsigned long 
  8145 ;;  counter         1    5[BANK0 ] unsigned char 
  8146 ;; Return value:  Size  Location     Type
  8147 ;;                  4    2[COMMON] unsigned long 
  8148 ;; Registers used:
  8149 ;;		wreg, status,2, status,0
  8150 ;; Tracked objects:
  8151 ;;		On entry : 0/0
  8152 ;;		On exit  : 0/0
  8153 ;;		Unchanged: 0/0
  8154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8155 ;;      Params:         8       0       0       0       0
  8156 ;;      Locals:         0       5       0       0       0
  8157 ;;      Temps:          0       1       0       0       0
  8158 ;;      Totals:         8       6       0       0       0
  8159 ;;Total ram usage:       14 bytes
  8160 ;; Hardware stack levels used:    1
  8161 ;; Hardware stack levels required when called:    1
  8162 ;; This function calls:
  8163 ;;		Nothing
  8164 ;; This function is called by:
  8165 ;;		_I2C_Master_Init
  8166 ;; This function uses a non-reentrant model
  8167 ;;
  8168                           
  8169                           
  8170                           ;psect for function ___lldiv
  8171  1648                     ___lldiv:	
  8172                           
  8173                           ;incstack = 0
  8174                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8175  1648  3000               	movlw	0
  8176  1649  1283               	bcf	3,5	;RP0=0, select bank0
  8177  164A  1303               	bcf	3,6	;RP1=0, select bank0
  8178  164B  00A4               	movwf	___lldiv@quotient+3
  8179  164C  3000               	movlw	0
  8180  164D  00A3               	movwf	___lldiv@quotient+2
  8181  164E  3000               	movlw	0
  8182  164F  00A2               	movwf	___lldiv@quotient+1
  8183  1650  3000               	movlw	0
  8184  1651  00A1               	movwf	___lldiv@quotient
  8185  1652  0875               	movf	___lldiv@divisor+3,w
  8186  1653  0474               	iorwf	___lldiv@divisor+2,w
  8187  1654  0473               	iorwf	___lldiv@divisor+1,w
  8188  1655  0472               	iorwf	___lldiv@divisor,w
  8189  1656  1903               	skipnz
  8190  1657  2E9F               	goto	l4572
  8191  1658  01A5               	clrf	___lldiv@counter
  8192  1659  0AA5               	incf	___lldiv@counter,f
  8193  165A                     l4558:	
  8194  165A  1BF5               	btfsc	___lldiv@divisor+3,7
  8195  165B  2E6A               	goto	l4560
  8196  165C  3001               	movlw	1
  8197  165D  00A0               	movwf	??___lldiv
  8198  165E                     u3045:	
  8199  165E  1003               	clrc
  8200  165F  0DF2               	rlf	___lldiv@divisor,f
  8201  1660  0DF3               	rlf	___lldiv@divisor+1,f
  8202  1661  0DF4               	rlf	___lldiv@divisor+2,f
  8203  1662  0DF5               	rlf	___lldiv@divisor+3,f
  8204  1663  0BA0               	decfsz	??___lldiv,f
  8205  1664  2E5E               	goto	u3045
  8206  1665  3001               	movlw	1
  8207  1666  00A0               	movwf	??___lldiv
  8208  1667  0820               	movf	??___lldiv,w
  8209  1668  07A5               	addwf	___lldiv@counter,f
  8210  1669  2E5A               	goto	l4558
  8211  166A                     l4560:	
  8212  166A  3001               	movlw	1
  8213  166B  00A0               	movwf	??___lldiv
  8214  166C                     u3065:	
  8215  166C  1003               	clrc
  8216  166D  0DA1               	rlf	___lldiv@quotient,f
  8217  166E  0DA2               	rlf	___lldiv@quotient+1,f
  8218  166F  0DA3               	rlf	___lldiv@quotient+2,f
  8219  1670  0DA4               	rlf	___lldiv@quotient+3,f
  8220  1671  0BA0               	decfsz	??___lldiv,f
  8221  1672  2E6C               	goto	u3065
  8222  1673  0875               	movf	___lldiv@divisor+3,w
  8223  1674  0279               	subwf	___lldiv@dividend+3,w
  8224  1675  1D03               	skipz
  8225  1676  2E81               	goto	u3075
  8226  1677  0874               	movf	___lldiv@divisor+2,w
  8227  1678  0278               	subwf	___lldiv@dividend+2,w
  8228  1679  1D03               	skipz
  8229  167A  2E81               	goto	u3075
  8230  167B  0873               	movf	___lldiv@divisor+1,w
  8231  167C  0277               	subwf	___lldiv@dividend+1,w
  8232  167D  1D03               	skipz
  8233  167E  2E81               	goto	u3075
  8234  167F  0872               	movf	___lldiv@divisor,w
  8235  1680  0276               	subwf	___lldiv@dividend,w
  8236  1681                     u3075:	
  8237  1681  1C03               	skipc
  8238  1682  2E92               	goto	l4568
  8239  1683  0872               	movf	___lldiv@divisor,w
  8240  1684  02F6               	subwf	___lldiv@dividend,f
  8241  1685  0873               	movf	___lldiv@divisor+1,w
  8242  1686  1C03               	skipc
  8243  1687  0F73               	incfsz	___lldiv@divisor+1,w
  8244  1688  02F7               	subwf	___lldiv@dividend+1,f
  8245  1689  0874               	movf	___lldiv@divisor+2,w
  8246  168A  1C03               	skipc
  8247  168B  0F74               	incfsz	___lldiv@divisor+2,w
  8248  168C  02F8               	subwf	___lldiv@dividend+2,f
  8249  168D  0875               	movf	___lldiv@divisor+3,w
  8250  168E  1C03               	skipc
  8251  168F  0F75               	incfsz	___lldiv@divisor+3,w
  8252  1690  02F9               	subwf	___lldiv@dividend+3,f
  8253  1691  1421               	bsf	___lldiv@quotient,0
  8254  1692                     l4568:	
  8255  1692  3001               	movlw	1
  8256  1693                     u3085:	
  8257  1693  1003               	clrc
  8258  1694  0CF5               	rrf	___lldiv@divisor+3,f
  8259  1695  0CF4               	rrf	___lldiv@divisor+2,f
  8260  1696  0CF3               	rrf	___lldiv@divisor+1,f
  8261  1697  0CF2               	rrf	___lldiv@divisor,f
  8262  1698  3EFF               	addlw	-1
  8263  1699  1D03               	skipz
  8264  169A  2E93               	goto	u3085
  8265  169B  3001               	movlw	1
  8266  169C  02A5               	subwf	___lldiv@counter,f
  8267  169D  1D03               	btfss	3,2
  8268  169E  2E6A               	goto	l4560
  8269  169F                     l4572:	
  8270  169F  0824               	movf	___lldiv@quotient+3,w
  8271  16A0  00F5               	movwf	?___lldiv+3
  8272  16A1  0823               	movf	___lldiv@quotient+2,w
  8273  16A2  00F4               	movwf	?___lldiv+2
  8274  16A3  0822               	movf	___lldiv@quotient+1,w
  8275  16A4  00F3               	movwf	?___lldiv+1
  8276  16A5  0821               	movf	___lldiv@quotient,w
  8277  16A6  00F2               	movwf	?___lldiv
  8278  16A7  0008               	return
  8279  16A8                     __end_of___lldiv:	
  8280                           
  8281                           	psect	text34
  8282  177C                     __ptext34:	
  8283 ;; *************** function _Acc_Z *****************
  8284 ;; Defined at:
  8285 ;;		line 202 in file "IMU.c"
  8286 ;; Parameters:    Size  Location     Type
  8287 ;;		None
  8288 ;; Auto vars:     Size  Location     Type
  8289 ;;  acc             2    2[BANK0 ] int 
  8290 ;; Return value:  Size  Location     Type
  8291 ;;                  2    8[COMMON] int 
  8292 ;; Registers used:
  8293 ;;		wreg, status,2, status,0, pclath, cstack
  8294 ;; Tracked objects:
  8295 ;;		On entry : 0/0
  8296 ;;		On exit  : 0/0
  8297 ;;		Unchanged: 0/0
  8298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8299 ;;      Params:         2       0       0       0       0
  8300 ;;      Locals:         0       2       0       0       0
  8301 ;;      Temps:          0       2       0       0       0
  8302 ;;      Totals:         2       4       0       0       0
  8303 ;;Total ram usage:        6 bytes
  8304 ;; Hardware stack levels used:    1
  8305 ;; Hardware stack levels required when called:    3
  8306 ;; This function calls:
  8307 ;;		_I2C_Master_Read
  8308 ;;		_I2C_Master_Start
  8309 ;;		_I2C_Master_Stop
  8310 ;;		_I2C_Master_Write
  8311 ;; This function is called by:
  8312 ;;		_main
  8313 ;; This function uses a non-reentrant model
  8314 ;;
  8315                           
  8316                           
  8317                           ;psect for function _Acc_Z
  8318  177C                     _Acc_Z:	
  8319                           
  8320                           ;IMU.c: 203:     I2C_Master_Start();
  8321                           
  8322                           ;incstack = 0
  8323                           ; Regs used in _Acc_Z: [wreg+status,2+status,0+pclath+cstack]
  8324  177C  160A  118A  235A  160A  118A  	fcall	_I2C_Master_Start
  8325                           
  8326                           ;IMU.c: 204:     I2C_Master_Write(0b11010010);
  8327  1781  30D2               	movlw	210
  8328  1782  00F2               	movwf	I2C_Master_Write@d
  8329  1783  3000               	movlw	0
  8330  1784  00F3               	movwf	I2C_Master_Write@d+1
  8331  1785  160A  118A  2368  160A  118A  	fcall	_I2C_Master_Write
  8332                           
  8333                           ;IMU.c: 205:     I2C_Master_Write(0x3F);
  8334  178A  303F               	movlw	63
  8335  178B  00F2               	movwf	I2C_Master_Write@d
  8336  178C  3000               	movlw	0
  8337  178D  00F3               	movwf	I2C_Master_Write@d+1
  8338  178E  160A  118A  2368  160A  118A  	fcall	_I2C_Master_Write
  8339                           
  8340                           ;IMU.c: 206:     I2C_Master_Stop();
  8341  1793  160A  118A  2361  160A  118A  	fcall	_I2C_Master_Stop
  8342                           
  8343                           ;IMU.c: 207:     I2C_Master_Start();
  8344  1798  160A  118A  235A  160A  118A  	fcall	_I2C_Master_Start
  8345                           
  8346                           ;IMU.c: 208:     I2C_Master_Write(0b11010011);
  8347  179D  30D3               	movlw	211
  8348  179E  00F2               	movwf	I2C_Master_Write@d
  8349  179F  3000               	movlw	0
  8350  17A0  00F3               	movwf	I2C_Master_Write@d+1
  8351  17A1  160A  118A  2368  160A  118A  	fcall	_I2C_Master_Write
  8352                           
  8353                           ;IMU.c: 209:     int16_t acc = I2C_Master_Read(0) << 8;
  8354  17A6  3000               	movlw	0
  8355  17A7  00F2               	movwf	I2C_Master_Read@a
  8356  17A8  00F3               	movwf	I2C_Master_Read@a+1
  8357  17A9  160A  118A  2446  160A  118A  	fcall	_I2C_Master_Read
  8358  17AE  0872               	movf	?_I2C_Master_Read,w
  8359  17AF  1283               	bcf	3,5	;RP0=0, select bank0
  8360  17B0  1303               	bcf	3,6	;RP1=0, select bank0
  8361  17B1  00A1               	movwf	??_Acc_Z+1
  8362  17B2  01A0               	clrf	??_Acc_Z
  8363  17B3  0820               	movf	??_Acc_Z,w
  8364  17B4  00A2               	movwf	Acc_Z@acc
  8365  17B5  0821               	movf	??_Acc_Z+1,w
  8366  17B6  00A3               	movwf	Acc_Z@acc+1
  8367                           
  8368                           ;IMU.c: 210:     I2C_Master_Stop();
  8369  17B7  160A  118A  2361  160A  118A  	fcall	_I2C_Master_Stop
  8370                           
  8371                           ;IMU.c: 212:     I2C_Master_Start();
  8372  17BC  160A  118A  235A  160A  118A  	fcall	_I2C_Master_Start
  8373                           
  8374                           ;IMU.c: 213:     I2C_Master_Write(0b11010010);
  8375  17C1  30D2               	movlw	210
  8376  17C2  00F2               	movwf	I2C_Master_Write@d
  8377  17C3  3000               	movlw	0
  8378  17C4  00F3               	movwf	I2C_Master_Write@d+1
  8379  17C5  160A  118A  2368  160A  118A  	fcall	_I2C_Master_Write
  8380                           
  8381                           ;IMU.c: 214:     I2C_Master_Write(0x40);
  8382  17CA  3040               	movlw	64
  8383  17CB  00F2               	movwf	I2C_Master_Write@d
  8384  17CC  3000               	movlw	0
  8385  17CD  00F3               	movwf	I2C_Master_Write@d+1
  8386  17CE  160A  118A  2368  160A  118A  	fcall	_I2C_Master_Write
  8387                           
  8388                           ;IMU.c: 215:     I2C_Master_Stop();
  8389  17D3  160A  118A  2361  160A  118A  	fcall	_I2C_Master_Stop
  8390                           
  8391                           ;IMU.c: 216:     I2C_Master_Start();
  8392  17D8  160A  118A  235A  160A  118A  	fcall	_I2C_Master_Start
  8393                           
  8394                           ;IMU.c: 217:     I2C_Master_Write(0b11010011);
  8395  17DD  30D3               	movlw	211
  8396  17DE  00F2               	movwf	I2C_Master_Write@d
  8397  17DF  3000               	movlw	0
  8398  17E0  00F3               	movwf	I2C_Master_Write@d+1
  8399  17E1  160A  118A  2368  160A  118A  	fcall	_I2C_Master_Write
  8400                           
  8401                           ;IMU.c: 218:     acc = acc | I2C_Master_Read(0) ;
  8402  17E6  3000               	movlw	0
  8403  17E7  00F2               	movwf	I2C_Master_Read@a
  8404  17E8  00F3               	movwf	I2C_Master_Read@a+1
  8405  17E9  160A  118A  2446  160A  118A  	fcall	_I2C_Master_Read
  8406  17EE  1283               	bcf	3,5	;RP0=0, select bank0
  8407  17EF  1303               	bcf	3,6	;RP1=0, select bank0
  8408  17F0  0822               	movf	Acc_Z@acc,w
  8409  17F1  0472               	iorwf	?_I2C_Master_Read,w
  8410  17F2  00A2               	movwf	Acc_Z@acc
  8411  17F3  0823               	movf	Acc_Z@acc+1,w
  8412  17F4  0473               	iorwf	?_I2C_Master_Read+1,w
  8413  17F5  00A3               	movwf	Acc_Z@acc+1
  8414                           
  8415                           ;IMU.c: 219:     I2C_Master_Stop();
  8416  17F6  160A  118A  2361   	fcall	_I2C_Master_Stop
  8417                           
  8418                           ;IMU.c: 220:     return acc;
  8419  17F9  1283               	bcf	3,5	;RP0=0, select bank0
  8420  17FA  1303               	bcf	3,6	;RP1=0, select bank0
  8421  17FB  0823               	movf	Acc_Z@acc+1,w
  8422  17FC  00F9               	movwf	?_Acc_Z+1
  8423  17FD  0822               	movf	Acc_Z@acc,w
  8424  17FE  00F8               	movwf	?_Acc_Z
  8425  17FF  0008               	return
  8426  1800                     __end_of_Acc_Z:	
  8427                           
  8428                           	psect	text35
  8429  1368                     __ptext35:	
  8430 ;; *************** function _I2C_Master_Write *****************
  8431 ;; Defined at:
  8432 ;;		line 65 in file "I2C.c"
  8433 ;; Parameters:    Size  Location     Type
  8434 ;;  d               2    2[COMMON] unsigned int 
  8435 ;; Auto vars:     Size  Location     Type
  8436 ;;		None
  8437 ;; Return value:  Size  Location     Type
  8438 ;;                  1    wreg      void 
  8439 ;; Registers used:
  8440 ;;		wreg, status,2, status,0, pclath, cstack
  8441 ;; Tracked objects:
  8442 ;;		On entry : 0/0
  8443 ;;		On exit  : 0/0
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8446 ;;      Params:         2       0       0       0       0
  8447 ;;      Locals:         0       0       0       0       0
  8448 ;;      Temps:          0       0       0       0       0
  8449 ;;      Totals:         2       0       0       0       0
  8450 ;;Total ram usage:        2 bytes
  8451 ;; Hardware stack levels used:    1
  8452 ;; Hardware stack levels required when called:    2
  8453 ;; This function calls:
  8454 ;;		_I2C_Master_Wait
  8455 ;; This function is called by:
  8456 ;;		_mostrarLCD
  8457 ;;		_get_Time
  8458 ;;		_temp_objeto
  8459 ;;		_temp_ambiente
  8460 ;;		_IMU_init
  8461 ;;		_Acc_Z
  8462 ;;		_get_hora
  8463 ;;		_Zeit_Datum_Set
  8464 ;;		_Acc_X
  8465 ;;		_Acc_Y
  8466 ;;		_Gy_X
  8467 ;;		_Gy_Y
  8468 ;;		_Gy_Z
  8469 ;; This function uses a non-reentrant model
  8470 ;;
  8471                           
  8472                           
  8473                           ;psect for function _I2C_Master_Write
  8474  1368                     _I2C_Master_Write:	
  8475                           
  8476                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  8477                           
  8478                           ;incstack = 0
  8479                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8480  1368  160A  118A  2370   	fcall	_I2C_Master_Wait
  8481                           
  8482                           ;I2C.c: 68:     SSPBUF = d;
  8483  136B  0872               	movf	I2C_Master_Write@d,w
  8484  136C  1283               	bcf	3,5	;RP0=0, select bank0
  8485  136D  1303               	bcf	3,6	;RP1=0, select bank0
  8486  136E  0093               	movwf	19	;volatile
  8487  136F  0008               	return
  8488  1370                     __end_of_I2C_Master_Write:	
  8489                           
  8490                           	psect	text36
  8491  1361                     __ptext36:	
  8492 ;; *************** function _I2C_Master_Stop *****************
  8493 ;; Defined at:
  8494 ;;		line 55 in file "I2C.c"
  8495 ;; Parameters:    Size  Location     Type
  8496 ;;		None
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;		None
  8499 ;; Return value:  Size  Location     Type
  8500 ;;                  1    wreg      void 
  8501 ;; Registers used:
  8502 ;;		wreg, status,2, status,0, pclath, cstack
  8503 ;; Tracked objects:
  8504 ;;		On entry : 0/0
  8505 ;;		On exit  : 0/0
  8506 ;;		Unchanged: 0/0
  8507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8508 ;;      Params:         0       0       0       0       0
  8509 ;;      Locals:         0       0       0       0       0
  8510 ;;      Temps:          0       0       0       0       0
  8511 ;;      Totals:         0       0       0       0       0
  8512 ;;Total ram usage:        0 bytes
  8513 ;; Hardware stack levels used:    1
  8514 ;; Hardware stack levels required when called:    2
  8515 ;; This function calls:
  8516 ;;		_I2C_Master_Wait
  8517 ;; This function is called by:
  8518 ;;		_mostrarLCD
  8519 ;;		_get_Time
  8520 ;;		_temp_objeto
  8521 ;;		_temp_ambiente
  8522 ;;		_IMU_init
  8523 ;;		_Acc_Z
  8524 ;;		_get_hora
  8525 ;;		_Zeit_Datum_Set
  8526 ;;		_Acc_X
  8527 ;;		_Acc_Y
  8528 ;;		_Gy_X
  8529 ;;		_Gy_Y
  8530 ;;		_Gy_Z
  8531 ;; This function uses a non-reentrant model
  8532 ;;
  8533                           
  8534                           
  8535                           ;psect for function _I2C_Master_Stop
  8536  1361                     _I2C_Master_Stop:	
  8537                           
  8538                           ;I2C.c: 57:     I2C_Master_Wait();
  8539                           
  8540                           ;incstack = 0
  8541                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  8542  1361  160A  118A  2370   	fcall	_I2C_Master_Wait
  8543                           
  8544                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  8545  1364  1683               	bsf	3,5	;RP0=1, select bank1
  8546  1365  1303               	bcf	3,6	;RP1=0, select bank1
  8547  1366  1511               	bsf	17,2	;volatile
  8548  1367  0008               	return
  8549  1368                     __end_of_I2C_Master_Stop:	
  8550                           
  8551                           	psect	text37
  8552  135A                     __ptext37:	
  8553 ;; *************** function _I2C_Master_Start *****************
  8554 ;; Defined at:
  8555 ;;		line 39 in file "I2C.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;		None
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;		None
  8560 ;; Return value:  Size  Location     Type
  8561 ;;                  1    wreg      void 
  8562 ;; Registers used:
  8563 ;;		wreg, status,2, status,0, pclath, cstack
  8564 ;; Tracked objects:
  8565 ;;		On entry : 0/0
  8566 ;;		On exit  : 0/0
  8567 ;;		Unchanged: 0/0
  8568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8569 ;;      Params:         0       0       0       0       0
  8570 ;;      Locals:         0       0       0       0       0
  8571 ;;      Temps:          0       0       0       0       0
  8572 ;;      Totals:         0       0       0       0       0
  8573 ;;Total ram usage:        0 bytes
  8574 ;; Hardware stack levels used:    1
  8575 ;; Hardware stack levels required when called:    2
  8576 ;; This function calls:
  8577 ;;		_I2C_Master_Wait
  8578 ;; This function is called by:
  8579 ;;		_mostrarLCD
  8580 ;;		_get_Time
  8581 ;;		_temp_objeto
  8582 ;;		_temp_ambiente
  8583 ;;		_IMU_init
  8584 ;;		_Acc_Z
  8585 ;;		_get_hora
  8586 ;;		_Zeit_Datum_Set
  8587 ;;		_Acc_X
  8588 ;;		_Acc_Y
  8589 ;;		_Gy_X
  8590 ;;		_Gy_Y
  8591 ;;		_Gy_Z
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595                           
  8596                           ;psect for function _I2C_Master_Start
  8597  135A                     _I2C_Master_Start:	
  8598                           
  8599                           ;I2C.c: 41:     I2C_Master_Wait();
  8600                           
  8601                           ;incstack = 0
  8602                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  8603  135A  160A  118A  2370   	fcall	_I2C_Master_Wait
  8604                           
  8605                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  8606  135D  1683               	bsf	3,5	;RP0=1, select bank1
  8607  135E  1303               	bcf	3,6	;RP1=0, select bank1
  8608  135F  1411               	bsf	17,0	;volatile
  8609  1360  0008               	return
  8610  1361                     __end_of_I2C_Master_Start:	
  8611                           
  8612                           	psect	text38
  8613  1446                     __ptext38:	
  8614 ;; *************** function _I2C_Master_Read *****************
  8615 ;; Defined at:
  8616 ;;		line 74 in file "I2C.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;  a               2    2[COMMON] unsigned short 
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;  temp            2    6[COMMON] unsigned short 
  8621 ;; Return value:  Size  Location     Type
  8622 ;;                  2    2[COMMON] unsigned short 
  8623 ;; Registers used:
  8624 ;;		wreg, status,2, status,0, pclath, cstack
  8625 ;; Tracked objects:
  8626 ;;		On entry : 0/0
  8627 ;;		On exit  : 0/0
  8628 ;;		Unchanged: 0/0
  8629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8630 ;;      Params:         2       0       0       0       0
  8631 ;;      Locals:         2       0       0       0       0
  8632 ;;      Temps:          2       0       0       0       0
  8633 ;;      Totals:         6       0       0       0       0
  8634 ;;Total ram usage:        6 bytes
  8635 ;; Hardware stack levels used:    1
  8636 ;; Hardware stack levels required when called:    2
  8637 ;; This function calls:
  8638 ;;		_I2C_Master_Wait
  8639 ;; This function is called by:
  8640 ;;		_get_Time
  8641 ;;		_temp_objeto
  8642 ;;		_temp_ambiente
  8643 ;;		_Acc_Z
  8644 ;;		_get_hora
  8645 ;;		_Acc_X
  8646 ;;		_Acc_Y
  8647 ;;		_Gy_X
  8648 ;;		_Gy_Y
  8649 ;;		_Gy_Z
  8650 ;; This function uses a non-reentrant model
  8651 ;;
  8652                           
  8653                           
  8654                           ;psect for function _I2C_Master_Read
  8655  1446                     _I2C_Master_Read:	
  8656                           
  8657                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  8658                           
  8659                           ;incstack = 0
  8660                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  8661  1446  160A  118A  2370  160A  118A  	fcall	_I2C_Master_Wait
  8662                           
  8663                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  8664  144B  1683               	bsf	3,5	;RP0=1, select bank1
  8665  144C  1303               	bcf	3,6	;RP1=0, select bank1
  8666  144D  1591               	bsf	17,3	;volatile
  8667                           
  8668                           ;I2C.c: 79:     I2C_Master_Wait();
  8669  144E  160A  118A  2370  160A  118A  	fcall	_I2C_Master_Wait
  8670                           
  8671                           ;I2C.c: 80:     temp = SSPBUF;
  8672  1453  1283               	bcf	3,5	;RP0=0, select bank0
  8673  1454  1303               	bcf	3,6	;RP1=0, select bank0
  8674  1455  0813               	movf	19,w	;volatile
  8675  1456  00F4               	movwf	??_I2C_Master_Read
  8676  1457  01F5               	clrf	??_I2C_Master_Read+1
  8677  1458  0874               	movf	??_I2C_Master_Read,w
  8678  1459  00F6               	movwf	I2C_Master_Read@temp
  8679  145A  0875               	movf	??_I2C_Master_Read+1,w
  8680  145B  00F7               	movwf	I2C_Master_Read@temp+1
  8681                           
  8682                           ;I2C.c: 81:     I2C_Master_Wait();
  8683  145C  160A  118A  2370  160A  118A  	fcall	_I2C_Master_Wait
  8684                           
  8685                           ;I2C.c: 82:     if(a == 1){
  8686  1461  0372               	decf	I2C_Master_Read@a,w
  8687  1462  0473               	iorwf	I2C_Master_Read@a+1,w
  8688  1463  1D03               	btfss	3,2
  8689  1464  2C69               	goto	l337
  8690                           
  8691                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  8692  1465  1683               	bsf	3,5	;RP0=1, select bank1
  8693  1466  1303               	bcf	3,6	;RP1=0, select bank1
  8694  1467  1291               	bcf	17,5	;volatile
  8695                           
  8696                           ;I2C.c: 84:     }else{
  8697  1468  2C6C               	goto	l338
  8698  1469                     l337:	
  8699                           
  8700                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  8701  1469  1683               	bsf	3,5	;RP0=1, select bank1
  8702  146A  1303               	bcf	3,6	;RP1=0, select bank1
  8703  146B  1691               	bsf	17,5	;volatile
  8704  146C                     l338:	
  8705                           ;I2C.c: 86:     }
  8706                           
  8707                           
  8708                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  8709  146C  1611               	bsf	17,4	;volatile
  8710                           
  8711                           ;I2C.c: 88:     return temp;
  8712  146D  0877               	movf	I2C_Master_Read@temp+1,w
  8713  146E  00F3               	movwf	?_I2C_Master_Read+1
  8714  146F  0876               	movf	I2C_Master_Read@temp,w
  8715  1470  00F2               	movwf	?_I2C_Master_Read
  8716  1471  0008               	return
  8717  1472                     __end_of_I2C_Master_Read:	
  8718                           
  8719                           	psect	text39
  8720  1370                     __ptext39:	
  8721 ;; *************** function _I2C_Master_Wait *****************
  8722 ;; Defined at:
  8723 ;;		line 32 in file "I2C.c"
  8724 ;; Parameters:    Size  Location     Type
  8725 ;;		None
  8726 ;; Auto vars:     Size  Location     Type
  8727 ;;		None
  8728 ;; Return value:  Size  Location     Type
  8729 ;;                  1    wreg      void 
  8730 ;; Registers used:
  8731 ;;		wreg, status,2
  8732 ;; Tracked objects:
  8733 ;;		On entry : 0/0
  8734 ;;		On exit  : 0/0
  8735 ;;		Unchanged: 0/0
  8736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8737 ;;      Params:         0       0       0       0       0
  8738 ;;      Locals:         0       0       0       0       0
  8739 ;;      Temps:          0       0       0       0       0
  8740 ;;      Totals:         0       0       0       0       0
  8741 ;;Total ram usage:        0 bytes
  8742 ;; Hardware stack levels used:    1
  8743 ;; Hardware stack levels required when called:    1
  8744 ;; This function calls:
  8745 ;;		Nothing
  8746 ;; This function is called by:
  8747 ;;		_I2C_Master_Start
  8748 ;;		_I2C_Master_Stop
  8749 ;;		_I2C_Master_Write
  8750 ;;		_I2C_Master_Read
  8751 ;;		_I2C_Master_RepeatedStart
  8752 ;; This function uses a non-reentrant model
  8753 ;;
  8754                           
  8755                           
  8756                           ;psect for function _I2C_Master_Wait
  8757  1370                     _I2C_Master_Wait:	
  8758  1370                     l319:	
  8759                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  8760                           
  8761                           ;incstack = 0
  8762                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  8763                           
  8764  1370  1683               	bsf	3,5	;RP0=1, select bank1
  8765  1371  1303               	bcf	3,6	;RP1=0, select bank1
  8766  1372  1914               	btfsc	20,2	;volatile
  8767  1373  2B70               	goto	l319
  8768  1374  0811               	movf	17,w	;volatile
  8769  1375  391F               	andlw	31
  8770  1376  1903               	btfsc	3,2
  8771  1377  0008               	return
  8772  1378  2B70               	goto	l319
  8773  1379                     __end_of_I2C_Master_Wait:	
  8774                           
  8775                           	psect	text40
  8776  13AF                     __ptext40:	
  8777 ;; *************** function _ISR *****************
  8778 ;; Defined at:
  8779 ;;		line 130 in file "main_Master.c"
  8780 ;; Parameters:    Size  Location     Type
  8781 ;;		None
  8782 ;; Auto vars:     Size  Location     Type
  8783 ;;		None
  8784 ;; Return value:  Size  Location     Type
  8785 ;;                  1    wreg      void 
  8786 ;; Registers used:
  8787 ;;		wreg, status,2, status,0
  8788 ;; Tracked objects:
  8789 ;;		On entry : 0/0
  8790 ;;		On exit  : 0/0
  8791 ;;		Unchanged: 0/0
  8792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8793 ;;      Params:         0       0       0       0       0
  8794 ;;      Locals:         0       0       0       0       0
  8795 ;;      Temps:          2       0       0       0       0
  8796 ;;      Totals:         2       0       0       0       0
  8797 ;;Total ram usage:        2 bytes
  8798 ;; Hardware stack levels used:    1
  8799 ;; This function calls:
  8800 ;;		Nothing
  8801 ;; This function is called by:
  8802 ;;		Interrupt level 1
  8803 ;; This function uses a non-reentrant model
  8804 ;;
  8805                           
  8806                           
  8807                           ;psect for function _ISR
  8808  13AF                     _ISR:	
  8809                           
  8810                           ;main_Master.c: 131:     if (INTCONbits.RBIF == 1 && INTCONbits.RBIE == 1){
  8811  13AF  180B               	btfsc	11,0	;volatile
  8812  13B0  1D8B               	btfss	11,3	;volatile
  8813  13B1  2BBB               	goto	i1l139
  8814                           
  8815                           ;main_Master.c: 132:         INTCONbits.RBIF = 0;
  8816  13B2  100B               	bcf	11,0	;volatile
  8817                           
  8818                           ;main_Master.c: 133:         if (banderaBoton == 0){
  8819  13B3  1283               	bcf	3,5	;RP0=0, select bank0
  8820  13B4  1303               	bcf	3,6	;RP1=0, select bank0
  8821  13B5  0861               	movf	_banderaBoton,w
  8822  13B6  1D03               	btfss	3,2
  8823  13B7  2BBB               	goto	i1l139
  8824                           
  8825                           ;main_Master.c: 134:             banderaBoton = 1;
  8826  13B8  01E1               	clrf	_banderaBoton
  8827  13B9  0AE1               	incf	_banderaBoton,f
  8828                           
  8829                           ;main_Master.c: 135:             INTCONbits.RBIE = 0;
  8830  13BA  118B               	bcf	11,3	;volatile
  8831  13BB                     i1l139:	
  8832  13BB  0871               	movf	??_ISR+1,w
  8833  13BC  008A               	movwf	10
  8834  13BD  0E70               	swapf	??_ISR^(0+4294967168),w
  8835  13BE  0083               	movwf	3
  8836  13BF  0EFE               	swapf	126,f
  8837  13C0  0E7E               	swapf	126,w
  8838  13C1  0009               	retfie
  8839  13C2                     __end_of_ISR:	
  8840  007E                     btemp	set	126	;btemp
  8841  007E                     wtemp0	set	126
  8842                           
  8843                           	psect	intentry
  8844  0004                     __pintentry:	
  8845                           ;incstack = 0
  8846                           ; Regs used in _ISR: [wreg+status,2+status,0]
  8847                           
  8848  0004                     interrupt_function:	
  8849  007E                     saved_w	set	btemp
  8850  0004  00FE               	movwf	btemp
  8851  0005  0E03               	swapf	3,w
  8852  0006  00F0               	movwf	??_ISR
  8853  0007  080A               	movf	10,w
  8854  0008  00F1               	movwf	??_ISR+1
  8855  0009  160A  118A  2BAF   	ljmp	_ISR


Data Sizes:
    Strings     142
    Constant    40
    Data        10
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     58      80
    BANK1            80      0       6
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Create_Char@chardata	PTR const unsigned char  size(1) Largest target is 8
		 -> arrowr_vacio(CODE[8]), gota(CODE[8]), termometro(CODE[8]), arrowr(CODE[8]), 
		 -> atilde(CODE[8]), 

    LCD_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_17(CODE[6]), STR_16(CODE[16]), STR_15(CODE[3]), STR_14(CODE[13]), 
		 -> STR_13(CODE[5]), STR_12(CODE[3]), STR_11(CODE[5]), STR_10(CODE[3]), 
		 -> STR_9(CODE[13]), STR_8(CODE[4]), STR_7(CODE[9]), STR_6(CODE[14]), 
		 -> STR_5(CODE[12]), STR_4(CODE[11]), STR_3(CODE[13]), STR_2(CODE[17]), 
		 -> STR_1(CODE[3]), 

    sp__uint_to_array	PTR unsigned int  size(1) Largest target is 6
		 -> uint_to_array@resultado(BANK0[6]), 

    obj_array	PTR unsigned int  size(1) Largest target is 6
		 -> NULL(NULL[0]), uint_to_array@resultado(BANK0[6]), 


Critical Paths under _main in COMMON

    _main->_Acc_Z
    _temp_objeto->___lwdiv
    _temp_ambiente->___lwdiv
    ___xxtofl->___lwdiv
    ___fltol->___lwdiv
    ___fladd->___lwdiv
    _pressBoton2->_LCD_Set_Cursor
    _pressBoton1->_LCD_clear
    _mostrarLCD->_LCD_Set_Cursor
    _uint_to_array->___awdiv
    _display_Uhrzeit->_LCD_Set_Cursor
    _display_Datum->_LCD_Set_Cursor
    ___awdiv->___wmul
    _LCD_Write_String->_LCD_Write_Character
    _LCD_Set_Cursor->_LCD_Cmd
    _get_Time->_BCD_a_DEC
    _BCD_a_DEC->___bmul
    _LCD_init->_LCD_Cmd
    _LCD_clear->_LCD_Cmd
    _LCD_Create_Char->_LCD_Cmd
    _IMU_init->_I2C_Master_Write
    _I2C_Master_Init->___lldiv
    _Acc_Z->_I2C_Master_Read

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_temp_ambiente
    _main->_temp_objeto
    _temp_objeto->___fltol
    _temp_ambiente->___fltol
    ___fltol->___fladd
    ___fladd->___xxtofl
    _mostrarLCD->_uint_to_array
    _uint_to_array->___awdiv
    _display_Uhrzeit->___awdiv
    _display_Datum->___awdiv
    _SetUp->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   88554
                                             57 BANK0      1     1      0
                              _Acc_Z
                              _SetUp
                           _get_Time
                         _mostrarLCD
                        _pressBoton1
                        _pressBoton2
                      _temp_ambiente
                        _temp_objeto
                       _uartTX_Write
                    _ver_inclinacion
 ---------------------------------------------------------------------------------
 (1) _ver_inclinacion                                      4     2      2     190
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _uartTX_Write                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _temp_objeto                                         12    10      2   13881
                                             45 BANK0     12    10      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fladd
                            ___fltol
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _temp_ambiente                                       12    10      2   13881
                                             45 BANK0     12    10      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fladd
                            ___fltol
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 BANK0     14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     517
                                             34 BANK0     11     7      4
                            ___fladd (ARG)
                            ___lwdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2414
                                             14 BANK0     20    12      8
                            ___lwdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _pressBoton2                                          2     2      0    2383
                                              0 BANK0      2     2      0
                     _LCD_Set_Cursor
                _LCD_Write_Character
                          _LCD_clear
 ---------------------------------------------------------------------------------
 (1) _pressBoton1                                          2     2      0      22
                                              7 COMMON     2     2      0
                          _LCD_clear
 ---------------------------------------------------------------------------------
 (1) _mostrarLCD                                          10    10      0   29234
                                             23 BANK0     10    10      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                          _LCD_clear
                      _display_Datum
                    _display_Uhrzeit
                      _uint_to_array
 ---------------------------------------------------------------------------------
 (2) _uint_to_array                                       15    15      0    3467
                                              8 BANK0     15    15      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _display_Uhrzeit                                     11    10      1    7006
                                              8 BANK0     11    10      1
                     _LCD_Set_Cursor
                _LCD_Write_Character
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _display_Datum                                       11    10      1    7679
                                              8 BANK0     11    10      1
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1768
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    2521
                                              8 COMMON     1     1      0
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     3     3      0     673
                                              4 COMMON     3     3      0
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       5     4      1    2339
                                              5 COMMON     5     4      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _get_Time                                             1     1      0   10083
                                              0 BANK0      1     1      0
                          _BCD_a_DEC
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _BCD_a_DEC                                            4     4      0     212
                                              6 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SetUp                                                1     1      0    8919
                                             14 BANK0      1     1      0
                    _I2C_Master_Init
                           _IMU_init
                    _LCD_Create_Char
                          _LCD_clear
                           _LCD_init
                         _OSC_config
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSC_config                                           4     0      4      98
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             2     2      0      22
                                              5 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            2     2      0      22
                                              5 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Create_Char                                      4     3      1     537
                                              5 COMMON     4     3      1
                            _LCD_Cmd
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Character                                  2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _IMU_init                                             2     2      0    7698
                                              4 COMMON     2     2      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _Acc_Z                                                6     4      2    9939
                                              8 COMMON     2     0      2
                                              0 BANK0      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    7698
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2    2173
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Acc_Z
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _SetUp
     _I2C_Master_Init
       ___lldiv
     _IMU_init
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_Create_Char
       _LCD_Cmd
       _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
     _LCD_init
       _LCD_Cmd
     _OSC_config
     _uart_init
   _get_Time
     _BCD_a_DEC
       ___bmul
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _mostrarLCD
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     _LCD_Write_String
       _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
     _display_Datum
       _LCD_Set_Cursor
         _LCD_Cmd
       _LCD_Write_Character
       _LCD_Write_String
         _LCD_Write_Character
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _display_Uhrzeit
       _LCD_Set_Cursor
         _LCD_Cmd
       _LCD_Write_Character
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _uint_to_array
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _pressBoton1
     _LCD_clear
       _LCD_Cmd
   _pressBoton2
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
   _temp_ambiente
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___fladd
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___lwdiv
     ___xxtofl
       ___lwdiv (ARG)
   _temp_objeto
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___fladd
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___lwdiv
     ___xxtofl
       ___lwdiv (ARG)
   _uartTX_Write
   _ver_inclinacion

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       6       7        7.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3A      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      62      12        0.0%
ABS                  0      0      62       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 15 21:24:49 2020

                           pc 0002                ___bmul@product 0074       __end_of_LCD_Create_Char 149E  
                 __CFG_CP$OFF 0000                  ___awdiv@sign 0025            __size_of_BCD_a_DEC 0016  
                          fsr 0004           ___wmul@multiplicand 0074            mostrarLCD@pantalla 003A  
                         l246 1564                           l319 1370                           l337 1469  
                         l338 146C                           l446 137A                           l572 140D  
                         l907 057F                           l765 175E                           l871 0424  
                         l865 03AD                           l869 0446                           l886 04FF  
                         l899 0567                           _GIE 005F                           l999 0AF9  
                __CFG_CPD$OFF 0000                           _ISR 13AF       __end_of_display_Uhrzeit 0F28  
                         _dia 006D                           _mes 006B                           _min 006F  
                         _seg 007A                           fsr0 0004                           indf 0000  
                ___awmod@sign 0078                ?_display_Datum 0028  __size_of_LCD_Write_Character 000F  
             __end_of_LCD_Cmd 14F9                  __CFG_LVP$OFF 0000                          ?_ISR 0070  
              _LCD_Set_Cursor 149E                  ___fltol@exp1 004C                          l1012 0B4F  
                        l1013 0B59                          l1005 0B39                          l3010 15D5  
                        l3004 15B9                          l3030 0B93                          l3006 15C7  
                        l3014 15E0                          l3040 0BB4                          l3032 0B9A  
                        l3024 0B80                          l3034 0BA1                          l3026 0B85  
                        l3042 0BBB                          l3018 15E8                          l3036 0BA8  
                        l3028 0B8C                          l3038 0BAF                          l3146 1488  
                        l5010 07C0                          l5012 07CB                          l5020 07EA  
                        l3412 03A5                          l5006 07B4                          l5014 07E4  
                        l3510 0511                          l3502 04F1                          l3408 03A2  
                        l3418 03B7                          l3362 1592                          l3354 156E  
                        l3532 0532                          l3524 0527                          l3356 157C  
                        l3604 0B76                          l3518 0520                          l3526 0529  
                        l3390 0383                          l3366 159D                          l5038 0A4F  
                        l2904 138F                          l4600 160C                          l3536 0534  
                        l3456 042F                          l3448 03F3                          l3384 0378  
                        l4602 161A                          l3554 0577                          l3482 0475  
                        l3474 0454                          l3458 0431                          l3466 0440  
                        l3570 0AF1                          l2908 1395                          l2860 14B4  
                        l2852 14A0                          l4612 163B                          l3484 0477  
                        l3492 0487                          l3388 037B                          l3580 0B0C  
                        l2862 14B9                          l5510 0337                          l3902 08F7  
                        l3558 057B                          l4710 175A                          l3590 0B4D  
                        l3582 0B1E                          l4560 166A                          l5520 0BDE  
                        l5512 14C1                          l2856 14AA                          l4616 1643  
                        l4608 1630                          l4800 003B                          l3912 090F  
                        l3920 0928                          l3592 0B3E                          l3576 0B08  
                        l5522 0BE8                          l5514 0BC0                          l5530 0C10  
                        l2874 1427                          l2890 1405                          l4802 0050  
                        l3914 0922                          l5506 07D3                          l3690 153D  
                        l4572 169F                          l5524 0BF2                          l5540 0BED  
                        l5516 0BCA                          l5532 0BC5                          l4812 008A  
                        l5508 0917                          l4708 174A                          l4558 165A  
                        l5526 0BFC                          l5542 0BF7                          l5518 0BD4  
                        l5534 0BCF                          l4590 1604                          l4718 176D  
                        l4568 1692                          l5528 0C06                          l5544 0C01  
                        l5536 0BD9                          l4584 15F9                          l2992 15AC  
                        l4840 012D                          l3696 1555                          l5546 0C0B  
                        l5538 0BE3                          l4922 0248                          l4906 01F2  
                        l4850 0165                          l4834 010B                          l4826 00E6  
                        l3890 08E1                          l2996 15B3                          l4940 02BA  
                        l4916 0233                          l3884 08D6                          l4692 1723  
                        l4934 0299                          l4870 01A4                          l4854 016E  
                        l4846 015C                          l4928 026F                          l3896 08EC  
                        l4688 171A                          l4962 0320                          l4964 032F  
                        l4980 0761                          l4990 077C                          l4982 0763  
                        l4998 0798                          STR_1 08B6                          STR_2 082E  
                        STR_3 086A                          STR_4 0890                          STR_5 0884  
                        STR_6 084F                          STR_7 089B                          STR_8 08AF  
                        STR_9 085D                          u2200 0413                          u2210 0414  
                        _IOCB 0096                          u2045 1571                          u2065 157D  
                        u3210 0941                          u2075 1589                          u3045 165E  
                        u3205 150B                          u2341 04B2                          u2333 0499  
                        u2325 047B                          u2245 0435                          u2085 1593  
                        u2350 04C6                          u2342 04B3                          u3135 160F  
                        u2351 04C7                          u2343 04B8                          u2352 04CC  
                        u2344 04B9                          u3065 166C                          u2353 04CD  
                        u2345 04BE                          u2346 04BF                          u3075 1681  
                        u3155 161B                          u2195 0407                          u3235 172C  
                        u3085 1693                          u3165 1627                          u1565 140E  
                        u3175 1631                          u1815 15BC                          u1575 1415  
                        u2615 0B31                          u3265 174B                          u2705 1539  
                        u1915 13F8                          u1835 15CD                          u3507 07C6  
                        u2395 0513                          u2635 0B46                          u2715 1546  
                        u1845 15D6                          u3517 07F5                          u2725 1551  
                        u3607 16E6                          u3527 0900                          u2495 0551  
                        u3295 1763                          u2735 155E                          u3617 16F3  
                        u3537 0931                          u3457 0D34                          u3707 0D9B  
                        u1875 147A                          u3627 1700                          u3547 0315  
                        u2675 0B61                          u2595 0B15                          u3467 0C7E  
                        _PEIE 005E                          u3637 170B                          u3557 16AC  
                        u3477 0776                          u3647 13E7                          u3567 16BB  
                        u3487 0792                          u3657 08C5                          u3577 16C7  
                        u3497 07AE                          u3667 14D2                          u3587 16D1  
                        u3677 14DD                          u3597 16DB                          u3687 14E9  
                        u3697 14F4                          _TRMT 04C1                          _WPUB 0095  
                __CFG_WRT$OFF 0000                          _accZ 005A             ?_LCD_Write_String 0070  
                        _jahr 006A                          _main 0A4A                          _gota 0806  
                        _hora 006E                          btemp 007E                 _uint_to_array 093A  
       temp_ambiente@temp_LSB 0056         temp_ambiente@temp_MSB 0057                          start 000C  
          ??_LCD_Write_String 0074                 __CFG_IESO$OFF 0000            __size_of_LCD_clear 0016  
           ___bmul@multiplier 0075                         ??_ISR 0070              ?_I2C_Master_Init 0026  
            ?_I2C_Master_Read 0072              ?_I2C_Master_Wait 0070              ?_I2C_Master_Stop 0070  
            __end_of_LCD_init 170F                 ___fltol@sign1 004B               __end_of___fladd 058A  
                       ?_main 0070               __end_of___awdiv 1648                         STR_10 08B9  
                       STR_11 08AA                         STR_13 08AA                         STR_14 0877  
                       STR_15 08B3                         STR_16 083F                         STR_17 08A4  
               __CFG_WDTE$OFF 0000               __end_of___awmod 15ED               __end_of___fltol 177C  
             __end_of___lldiv 16A8               ___awdiv@divisor 0020               __end_of___lwdiv 15A2  
                       i1l139 13BB               ___awdiv@counter 0024                         _RCREG 001A  
                       _SPBRG 0099                         _PORTC 0007                         _PORTD 0008  
                       _Acc_Z 177C                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _SSPIE 0463                         _SSPIF 0063  
                       _TXREG 0019                  _sprintbuffer 005C              __end_of_IMU_init 0E56  
              __CFG_FCMEN$OFF 0000        __end_of_LCD_Set_Cursor 14CA                         _SetUp 09BF  
                       _ancho 005D                         _datum 006C                         _largo 005E  
              __CFG_BOREN$OFF 0000                   ?_OSC_config 0072                         pclath 000A  
           __end_of_BCD_a_DEC 1403                ?_uint_to_array 0070                         status 0003  
                       wtemp0 007E                __CFG_MCLRE$OFF 0000               __initialization 000F  
                __end_of_main 0ADA                  __end_of_gota 080E              ?_LCD_Create_Char 0075  
                      ??_main 0059                     ??_LCD_Cmd 0072                        ?_Acc_Z 0078  
             ??_display_Datum 0029              ?_display_Uhrzeit 0028             ?_I2C_Master_Start 0070  
           ?_I2C_Master_Write 0072             __end_of_LCD_clear 13ED                        ?_SetUp 0070  
             ?_LCD_Set_Cursor 0075            ??_I2C_Master_Start 0072            ??_I2C_Master_Write 0074  
                _banderaPUSH1 0060                  _banderaPUSH2 005F              ___awdiv@dividend 0022  
                      _ANSELH 0189                  _banderaBoton 0061                        _SPBRGH 009A  
                      _SSPADD 0093                        _TRISC0 0438                        _TRISC1 0439  
                      _TRISC3 043B                        _TRISC4 043C            uint_to_array@F1343 00A0  
                      _SSPCON 0014                        _SSPBUF 0013              __end_of___xxtofl 0B7F  
 LCD_Write_Character@caracter 0073                __CFG_PWRTE$OFF 0000              __end_of_get_Time 0756  
                      ___bmul 138D                     ??___fladd 0036                        ___wmul 1403  
                   ??___awdiv 0078                     ??___awmod 0076                     ??___fltol 0046  
                   ??___lldiv 0020                     ??___lwdiv 0076                        _atilde 0816  
                ?_temp_objeto 004D                        _arrowr 0826                        _estado 007B  
    __size_of_ver_inclinacion 0037              ___awdiv@quotient 0026               ___awmod@divisor 0072  
         __size_of_OSC_config 00AC               ___awmod@counter 0077                  ?_pressBoton1 0070  
                ?_pressBoton2 0070                        saved_w 007E               ??_uint_to_array 0028  
                ___xxtofl@arg 002A                  ___xxtofl@exp 0029                  ___xxtofl@val 0020  
     __end_of__initialization 0033                     ?_LCD_init 0070                    ___fltol@f1 0042  
               __end_of_Acc_Z 1800           ___bmul@multiplicand 0072                __pcstackCOMMON 0070  
                   ?_IMU_init 0070                 __end_of_SetUp 0A4A           _LCD_Write_Character 08BC  
                __pidataBANK0 1383          display_Datum@columna 0028         __end_of_temp_ambiente 0CE1  
                     ??_Acc_Z 0020                _OPTION_REGbits 0081               _temperatura_obj 0063  
                     ??_SetUp 002E          ?_LCD_Write_Character 0070                LCD_Cmd@comando 0074  
                  __pbssBANK0 005A                    __pbssBANK1 00A0     LCD_Set_Cursor@corrimiento 0079  
                  ??_LCD_init 0075          __end_of_arrowr_vacio 0826                    __pmaintext 0A4A  
                  ??_IMU_init 0074                       ?___bmul 0072                       ?___wmul 0072  
                  __pintentry 0004     __size_of_LCD_Write_String 0022               temp_objeto@temp 0054  
        OSC_config@frecuencia 0072           display_Uhrzeit@fila 002C            __size_of_uart_init 0015  
                     _LCD_Cmd 14CA                     ?___xxtofl 0020             ??_ver_inclinacion 0074  
       ??_LCD_Write_Character 0072                     ?_get_Time 0070                       _SSPCON2 0091  
                     _SSPSTAT 0094                    __stringtab 0800                  ??_OSC_config 0076  
                   _BCD_a_DEC 13ED                 ?_uartTX_Write 0070        uint_to_array@resultado 0030  
             __size_of___bmul 0011                       ___fladd 035B                       ___awdiv 15ED  
                     ___awmod 15A2                       ___fltol 170F                       ___lldiv 1648  
             __size_of___wmul 0021             display_Datum@fila 002C                       ___lwdiv 1566  
                     _d_atras 0066              ??_LCD_Set_Cursor 0076                       __ptext1 152F  
                     __ptext2 1379                       __ptext3 0CE1                       __ptext4 0C2B  
                     __ptext5 0ADA                       __ptext6 1566                       __ptext7 170F  
                     __ptext8 035B                       __ptext9 0756            __end_of_OSC_config 0C2B  
        __size_of_temp_objeto 00B6                  __size_of_ISR 0013           uint_to_array@numero 0036  
                  ??___xxtofl 0024                       _humedad 0069              ___awmod@dividend 0074  
    __size_of_I2C_Master_Init 0036      __size_of_I2C_Master_Read 002C      __size_of_I2C_Master_Wait 0009  
    __size_of_I2C_Master_Stop 0007          __size_of_pressBoton1 006F          __size_of_pressBoton2 00A7  
                  ??_get_Time 0020                     _LCD_clear 13D7          end_of_initialization 0033  
              ??_uartTX_Write 0072     __size_of_I2C_Master_Start 0007             __end_of_uart_init 13D7  
   __size_of_I2C_Master_Write 0008               ___lldiv@divisor 0072                    ?_BCD_a_DEC 0070  
             ___lldiv@counter 0025                     _RCSTAbits 0018              I2C_Master_Init@c 0026  
            I2C_Master_Read@a 0072                    _mostrarLCD 0037                     _PORTBbits 0006  
                   _PORTCbits 0007                    _termometro 080E                   ___fladd@grs 0041  
               ___xxtofl@sign 0028      __size_of_LCD_Create_Char 002C                     _TRISCbits 0087  
       __end_of_display_Datum 1000                    ?_LCD_clear 0070             LCD_Write_String@a 0076  
           LCD_Write_String@n 0074      __size_of_display_Uhrzeit 00D2                     _TXSTAbits 0098  
           __size_of_LCD_init 0067                __end_of___bmul 139E         LCD_Set_Cursor@columna 0075  
           __size_of_IMU_init 00BF                __end_of___wmul 1424              _LCD_Write_String 1424  
                 _BAUDCTLbits 0187                __end_of_atilde 081E                __end_of_arrowr 082E  
                _arrowr_vacio 081E           start_initialization 000F                   __end_of_ISR 13C2  
         temp_objeto@temp_LSB 0056           temp_objeto@temp_MSB 0057             ??_I2C_Master_Init 002A  
           ??_I2C_Master_Read 0074          ver_inclinacion@valor 0072             ??_I2C_Master_Wait 0072  
       __end_of_uint_to_array 09BF             ??_I2C_Master_Stop 0072      __CFG_FOSC$INTRC_NOCLKOUT 0000  
                 ??_BCD_a_DEC 0076                      ??___bmul 0073       LCD_Create_Char@chardata 0075  
                    ??___wmul 0076                    init_fetch0 139E               _ver_inclinacion 152F  
                 ?_mostrarLCD 0070                   __pdataBANK0 0066               BCD_a_DEC@numBCD 0079  
                   ___fladd@a 0032                     ___fladd@b 002E                      ?_LCD_Cmd 0070  
        __end_of_uartTX_Write 1383                   __pbssCOMMON 007A                     ___latbits 0002  
               __pcstackBANK0 0020           display_Datum@jahr_d 0032           display_Datum@jahr_u 0031  
           __size_of___xxtofl 00A5                   ??_LCD_clear 0075             __size_of_get_Time 01CC  
           ??_LCD_Create_Char 0076              _I2C_Master_Start 135A              _I2C_Master_Write 1368  
      __size_of_temp_ambiente 00B6              ___lwdiv@dividend 0074         uint_to_array@centenas 002F  
           ??_display_Uhrzeit 0029                      ?___fladd 002E                      ?___awdiv 0020  
                    ?___awmod 0072                      ?___fltol 0042                      ?___lldiv 0072  
                    ?___lwdiv 0072       ver_inclinacion@posicion 0075                     __pstrings 0800  
                    Acc_Z@acc 0022   __end_of_LCD_Write_Character 08CB             temp_ambiente@temp 0054  
              __size_of_Acc_Z 0084                     _obj_array 0062                __size_of_SetUp 008B  
            ___lwdiv@quotient 0077          display_Uhrzeit@Uhr_d 0032          display_Uhrzeit@Uhr_u 0031  
         __size_of_mostrarLCD 0324          display_Uhrzeit@min_d 0030          display_Uhrzeit@min_u 002F  
        display_Uhrzeit@seg_d 002E          display_Uhrzeit@seg_u 002D             interrupt_function 0004  
              ___wmul@product 0076                      _LCD_init 16A8       __end_of_ver_inclinacion 1566  
            LCD_Create_Char@n 0078                      _IMU_init 0D97                     _uart_init 13C2  
                   _velocidad 0065                 ??_temp_objeto 004F                   __stringbase 0805  
           ___wmul@multiplier 0072                 ??_pressBoton1 0077                 ??_pressBoton2 0020  
               _temp_ambiente 0C2B              __size_of_LCD_Cmd 002F           I2C_Master_Read@temp 0076  
    __end_of_LCD_Write_String 1446                   _inclinacion 0068        LCD_Create_Char@charnum 0077  
                  ?_uart_init 0072              __size_of___fladd 022F              __size_of___awdiv 005B  
            __size_of___awmod 004B              __size_of___fltol 006D              __size_of___lldiv 0060  
            __size_of___lwdiv 003C         __size_of_uartTX_Write 000A            display_Datum@dia_d 002E  
          display_Datum@dia_u 002D              uartTX_Write@dato 0072            __end_of__stringtab 0806  
          display_Datum@mes_d 0030            display_Datum@mes_u 002F                ?_temp_ambiente 004D  
                    _d_frente 0067               _I2C_Master_Init 14F9               _I2C_Master_Read 1446  
                    ___xxtofl 0ADA           __end_of_temp_objeto 0D97          uint_to_array@decenas 002E  
             _I2C_Master_Wait 1370               _I2C_Master_Stop 1361               ___lwdiv@divisor 0072  
             ___lwdiv@counter 0079                      __ptext10 08CB                      __ptext11 0037  
                    __ptext20 058A                      __ptext12 093A                      __ptext21 13ED  
                    __ptext13 1403                      __ptext30 14CA                      __ptext22 138D  
                    __ptext14 0E56                      __ptext31 0D97                      __ptext23 09BF  
                    __ptext15 0F28                      __ptext40 13AF                      __ptext32 14F9  
                    __ptext24 13C2                      __ptext16 15A2                      __ptext33 1648  
                    __ptext25 0B7F                      __ptext17 15ED                      __ptext34 177C  
                    __ptext26 16A8                      __ptext18 1424                      __ptext35 1368  
                    __ptext27 13D7                      __ptext19 149E                      __ptext36 1361  
                    __ptext28 1472                      __ptext37 135A                      __ptext29 08BC  
                    __ptext38 1446                      __ptext39 1370                      _get_Time 058A  
           __CFG_BOR4V$BOR40V 0000       __size_of_LCD_Set_Cursor 002C           __end_of_pressBoton1 093A  
         __end_of_pressBoton2 07FD                 __size_of_main 0090              ?_ver_inclinacion 0072  
      display_Uhrzeit@columna 0028                  _uartTX_Write 1379        __size_of_display_Datum 00D8  
                ??_mostrarLCD 0037           LCD_Set_Cursor@linea 0078               _LCD_Create_Char 1472  
    __end_of_I2C_Master_Start 1361      __end_of_I2C_Master_Write 1370                    _INTCONbits 000B  
                    init_ram0 13A2               _display_Uhrzeit 0E56                      intlevel1 0000  
          __end_of_mostrarLCD 035B              ___lldiv@dividend 0076                     stringcode 0800  
                  _OSCCONbits 008F            __end_of_termometro 0816                   ??_uart_init 0074  
     __end_of_I2C_Master_Init 152F       __end_of_I2C_Master_Read 1472       __end_of_I2C_Master_Wait 1379  
                 _temp_objeto 0CE1       __end_of_I2C_Master_Stop 1368               ??_temp_ambiente 004F  
                 _temperatura 0064        __size_of_uint_to_array 0085              ___lldiv@quotient 0021  
           I2C_Master_Write@d 0072                   _pressBoton1 08CB                   _pressBoton2 0756  
                    stringdir 0800                      stringtab 0800                   _SSPCON2bits 0091  
               _display_Datum 0F28                 ___fladd@signs 003E                    _OSC_config 0B7F  
                ___fladd@aexp 003F                  ___fladd@bexp 0040  



Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat May 02 15:24:57 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 2.05
    52                           ; Generated 20/12/2018 GMT
    53                           ; 
    54                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F887 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  0087                     	;# 
   124  0088                     	;# 
   125  0089                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008F                     	;# 
   130  0090                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  0105                     	;# 
   149  0107                     	;# 
   150  0108                     	;# 
   151  0109                     	;# 
   152  010C                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  0185                     	;# 
   158  0187                     	;# 
   159  0188                     	;# 
   160  0189                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  000E                     	;# 
   179  000F                     	;# 
   180  0010                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0014                     	;# 
   185  0015                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  0087                     	;# 
   202  0088                     	;# 
   203  0089                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  008F                     	;# 
   208  0090                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0094                     	;# 
   215  0095                     	;# 
   216  0096                     	;# 
   217  0097                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009A                     	;# 
   221  009B                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  0105                     	;# 
   227  0107                     	;# 
   228  0108                     	;# 
   229  0109                     	;# 
   230  010C                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  0185                     	;# 
   236  0187                     	;# 
   237  0188                     	;# 
   238  0189                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  008F                     	;# 
   286  0090                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0095                     	;# 
   294  0096                     	;# 
   295  0097                     	;# 
   296  0098                     	;# 
   297  0099                     	;# 
   298  009A                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  009F                     	;# 
   304  0105                     	;# 
   305  0107                     	;# 
   306  0108                     	;# 
   307  0109                     	;# 
   308  010C                     	;# 
   309  010C                     	;# 
   310  010D                     	;# 
   311  010E                     	;# 
   312  010F                     	;# 
   313  0185                     	;# 
   314  0187                     	;# 
   315  0188                     	;# 
   316  0189                     	;# 
   317  018C                     	;# 
   318  018D                     	;# 
   319  0000                     	;# 
   320  0001                     	;# 
   321  0002                     	;# 
   322  0003                     	;# 
   323  0004                     	;# 
   324  0005                     	;# 
   325  0006                     	;# 
   326  0007                     	;# 
   327  0008                     	;# 
   328  0009                     	;# 
   329  000A                     	;# 
   330  000B                     	;# 
   331  000C                     	;# 
   332  000D                     	;# 
   333  000E                     	;# 
   334  000E                     	;# 
   335  000F                     	;# 
   336  0010                     	;# 
   337  0011                     	;# 
   338  0012                     	;# 
   339  0013                     	;# 
   340  0014                     	;# 
   341  0015                     	;# 
   342  0015                     	;# 
   343  0016                     	;# 
   344  0017                     	;# 
   345  0018                     	;# 
   346  0019                     	;# 
   347  001A                     	;# 
   348  001B                     	;# 
   349  001B                     	;# 
   350  001C                     	;# 
   351  001D                     	;# 
   352  001E                     	;# 
   353  001F                     	;# 
   354  0081                     	;# 
   355  0085                     	;# 
   356  0086                     	;# 
   357  0087                     	;# 
   358  0088                     	;# 
   359  0089                     	;# 
   360  008C                     	;# 
   361  008D                     	;# 
   362  008E                     	;# 
   363  008F                     	;# 
   364  0090                     	;# 
   365  0091                     	;# 
   366  0092                     	;# 
   367  0093                     	;# 
   368  0093                     	;# 
   369  0093                     	;# 
   370  0094                     	;# 
   371  0095                     	;# 
   372  0096                     	;# 
   373  0097                     	;# 
   374  0098                     	;# 
   375  0099                     	;# 
   376  009A                     	;# 
   377  009B                     	;# 
   378  009C                     	;# 
   379  009D                     	;# 
   380  009E                     	;# 
   381  009F                     	;# 
   382  0105                     	;# 
   383  0107                     	;# 
   384  0108                     	;# 
   385  0109                     	;# 
   386  010C                     	;# 
   387  010C                     	;# 
   388  010D                     	;# 
   389  010E                     	;# 
   390  010F                     	;# 
   391  0185                     	;# 
   392  0187                     	;# 
   393  0188                     	;# 
   394  0189                     	;# 
   395  018C                     	;# 
   396  018D                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0008                     	;# 
   406  0009                     	;# 
   407  000A                     	;# 
   408  000B                     	;# 
   409  000C                     	;# 
   410  000D                     	;# 
   411  000E                     	;# 
   412  000E                     	;# 
   413  000F                     	;# 
   414  0010                     	;# 
   415  0011                     	;# 
   416  0012                     	;# 
   417  0013                     	;# 
   418  0014                     	;# 
   419  0015                     	;# 
   420  0015                     	;# 
   421  0016                     	;# 
   422  0017                     	;# 
   423  0018                     	;# 
   424  0019                     	;# 
   425  001A                     	;# 
   426  001B                     	;# 
   427  001B                     	;# 
   428  001C                     	;# 
   429  001D                     	;# 
   430  001E                     	;# 
   431  001F                     	;# 
   432  0081                     	;# 
   433  0085                     	;# 
   434  0086                     	;# 
   435  0087                     	;# 
   436  0088                     	;# 
   437  0089                     	;# 
   438  008C                     	;# 
   439  008D                     	;# 
   440  008E                     	;# 
   441  008F                     	;# 
   442  0090                     	;# 
   443  0091                     	;# 
   444  0092                     	;# 
   445  0093                     	;# 
   446  0093                     	;# 
   447  0093                     	;# 
   448  0094                     	;# 
   449  0095                     	;# 
   450  0096                     	;# 
   451  0097                     	;# 
   452  0098                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009C                     	;# 
   457  009D                     	;# 
   458  009E                     	;# 
   459  009F                     	;# 
   460  0105                     	;# 
   461  0107                     	;# 
   462  0108                     	;# 
   463  0109                     	;# 
   464  010C                     	;# 
   465  010C                     	;# 
   466  010D                     	;# 
   467  010E                     	;# 
   468  010F                     	;# 
   469  0185                     	;# 
   470  0187                     	;# 
   471  0188                     	;# 
   472  0189                     	;# 
   473  018C                     	;# 
   474  018D                     	;# 
   475  0000                     	;# 
   476  0001                     	;# 
   477  0002                     	;# 
   478  0003                     	;# 
   479  0004                     	;# 
   480  0005                     	;# 
   481  0006                     	;# 
   482  0007                     	;# 
   483  0008                     	;# 
   484  0009                     	;# 
   485  000A                     	;# 
   486  000B                     	;# 
   487  000C                     	;# 
   488  000D                     	;# 
   489  000E                     	;# 
   490  000E                     	;# 
   491  000F                     	;# 
   492  0010                     	;# 
   493  0011                     	;# 
   494  0012                     	;# 
   495  0013                     	;# 
   496  0014                     	;# 
   497  0015                     	;# 
   498  0015                     	;# 
   499  0016                     	;# 
   500  0017                     	;# 
   501  0018                     	;# 
   502  0019                     	;# 
   503  001A                     	;# 
   504  001B                     	;# 
   505  001B                     	;# 
   506  001C                     	;# 
   507  001D                     	;# 
   508  001E                     	;# 
   509  001F                     	;# 
   510  0081                     	;# 
   511  0085                     	;# 
   512  0086                     	;# 
   513  0087                     	;# 
   514  0088                     	;# 
   515  0089                     	;# 
   516  008C                     	;# 
   517  008D                     	;# 
   518  008E                     	;# 
   519  008F                     	;# 
   520  0090                     	;# 
   521  0091                     	;# 
   522  0092                     	;# 
   523  0093                     	;# 
   524  0093                     	;# 
   525  0093                     	;# 
   526  0094                     	;# 
   527  0095                     	;# 
   528  0096                     	;# 
   529  0097                     	;# 
   530  0098                     	;# 
   531  0099                     	;# 
   532  009A                     	;# 
   533  009B                     	;# 
   534  009C                     	;# 
   535  009D                     	;# 
   536  009E                     	;# 
   537  009F                     	;# 
   538  0105                     	;# 
   539  0107                     	;# 
   540  0108                     	;# 
   541  0109                     	;# 
   542  010C                     	;# 
   543  010C                     	;# 
   544  010D                     	;# 
   545  010E                     	;# 
   546  010F                     	;# 
   547  0185                     	;# 
   548  0187                     	;# 
   549  0188                     	;# 
   550  0189                     	;# 
   551  018C                     	;# 
   552  018D                     	;# 
   553  0000                     	;# 
   554  0001                     	;# 
   555  0002                     	;# 
   556  0003                     	;# 
   557  0004                     	;# 
   558  0005                     	;# 
   559  0006                     	;# 
   560  0007                     	;# 
   561  0008                     	;# 
   562  0009                     	;# 
   563  000A                     	;# 
   564  000B                     	;# 
   565  000C                     	;# 
   566  000D                     	;# 
   567  000E                     	;# 
   568  000E                     	;# 
   569  000F                     	;# 
   570  0010                     	;# 
   571  0011                     	;# 
   572  0012                     	;# 
   573  0013                     	;# 
   574  0014                     	;# 
   575  0015                     	;# 
   576  0015                     	;# 
   577  0016                     	;# 
   578  0017                     	;# 
   579  0018                     	;# 
   580  0019                     	;# 
   581  001A                     	;# 
   582  001B                     	;# 
   583  001B                     	;# 
   584  001C                     	;# 
   585  001D                     	;# 
   586  001E                     	;# 
   587  001F                     	;# 
   588  0081                     	;# 
   589  0085                     	;# 
   590  0086                     	;# 
   591  0087                     	;# 
   592  0088                     	;# 
   593  0089                     	;# 
   594  008C                     	;# 
   595  008D                     	;# 
   596  008E                     	;# 
   597  008F                     	;# 
   598  0090                     	;# 
   599  0091                     	;# 
   600  0092                     	;# 
   601  0093                     	;# 
   602  0093                     	;# 
   603  0093                     	;# 
   604  0094                     	;# 
   605  0095                     	;# 
   606  0096                     	;# 
   607  0097                     	;# 
   608  0098                     	;# 
   609  0099                     	;# 
   610  009A                     	;# 
   611  009B                     	;# 
   612  009C                     	;# 
   613  009D                     	;# 
   614  009E                     	;# 
   615  009F                     	;# 
   616  0105                     	;# 
   617  0107                     	;# 
   618  0108                     	;# 
   619  0109                     	;# 
   620  010C                     	;# 
   621  010C                     	;# 
   622  010D                     	;# 
   623  010E                     	;# 
   624  010F                     	;# 
   625  0185                     	;# 
   626  0187                     	;# 
   627  0188                     	;# 
   628  0189                     	;# 
   629  018C                     	;# 
   630  018D                     	;# 
   631  0000                     	;# 
   632  0001                     	;# 
   633  0002                     	;# 
   634  0003                     	;# 
   635  0004                     	;# 
   636  0005                     	;# 
   637  0006                     	;# 
   638  0007                     	;# 
   639  0008                     	;# 
   640  0009                     	;# 
   641  000A                     	;# 
   642  000B                     	;# 
   643  000C                     	;# 
   644  000D                     	;# 
   645  000E                     	;# 
   646  000E                     	;# 
   647  000F                     	;# 
   648  0010                     	;# 
   649  0011                     	;# 
   650  0012                     	;# 
   651  0013                     	;# 
   652  0014                     	;# 
   653  0015                     	;# 
   654  0015                     	;# 
   655  0016                     	;# 
   656  0017                     	;# 
   657  0018                     	;# 
   658  0019                     	;# 
   659  001A                     	;# 
   660  001B                     	;# 
   661  001B                     	;# 
   662  001C                     	;# 
   663  001D                     	;# 
   664  001E                     	;# 
   665  001F                     	;# 
   666  0081                     	;# 
   667  0085                     	;# 
   668  0086                     	;# 
   669  0087                     	;# 
   670  0088                     	;# 
   671  0089                     	;# 
   672  008C                     	;# 
   673  008D                     	;# 
   674  008E                     	;# 
   675  008F                     	;# 
   676  0090                     	;# 
   677  0091                     	;# 
   678  0092                     	;# 
   679  0093                     	;# 
   680  0093                     	;# 
   681  0093                     	;# 
   682  0094                     	;# 
   683  0095                     	;# 
   684  0096                     	;# 
   685  0097                     	;# 
   686  0098                     	;# 
   687  0099                     	;# 
   688  009A                     	;# 
   689  009B                     	;# 
   690  009C                     	;# 
   691  009D                     	;# 
   692  009E                     	;# 
   693  009F                     	;# 
   694  0105                     	;# 
   695  0107                     	;# 
   696  0108                     	;# 
   697  0109                     	;# 
   698  010C                     	;# 
   699  010C                     	;# 
   700  010D                     	;# 
   701  010E                     	;# 
   702  010F                     	;# 
   703  0185                     	;# 
   704  0187                     	;# 
   705  0188                     	;# 
   706  0189                     	;# 
   707  018C                     	;# 
   708  018D                     	;# 
   709                           
   710                           	psect	idataBANK0
   711  07F2                     __pidataBANK0:	
   712                           
   713                           ;initializer for _d_atras
   714  07F2  3466               	retlw	102
   715                           
   716                           ;initializer for _d_frente
   717  07F3  3466               	retlw	102
   718                           
   719                           ;initializer for _inclinacion
   720  07F4  3404               	retlw	4
   721                           
   722                           ;initializer for _humedad
   723  07F5  3405               	retlw	5
   724                           
   725                           ;initializer for _jahr
   726  07F6  3414               	retlw	20
   727                           
   728                           ;initializer for _mes
   729  07F7  3403               	retlw	3
   730                           
   731                           ;initializer for _datum
   732  07F8  3406               	retlw	6
   733                           
   734                           ;initializer for _dia
   735  07F9  3405               	retlw	5
   736                           
   737                           ;initializer for _hora
   738  07FA  3410               	retlw	16
   739                           
   740                           ;initializer for _min
   741  07FB  3415               	retlw	21
   742                           
   743                           	psect	strings
   744  0700                     __pstrings:	
   745  0700                     stringtab:	
   746  0700                     __stringtab:	
   747  0700                     stringcode:	
   748                           ;	String table - string pointers are 1 byte each
   749                           
   750  0700                     stringdir:	
   751  0700  3007               	movlw	high stringdir
   752  0701  008A               	movwf	10
   753  0702  0804               	movf	4,w
   754  0703  0A84               	incf	4,f
   755  0704  0782               	addwf	2,f
   756  0705                     __stringbase:	
   757  0705  3400               	retlw	0
   758  0706                     __end_of__stringtab:	
   759  0706                     _gota:	
   760  0706  3404               	retlw	4
   761  0707  340A               	retlw	10
   762  0708  340A               	retlw	10
   763  0709  3411               	retlw	17
   764  070A  3411               	retlw	17
   765  070B  3411               	retlw	17
   766  070C  340E               	retlw	14
   767  070D  3400               	retlw	0
   768  070E                     __end_of_gota:	
   769  070E                     _termometro:	
   770  070E  3404               	retlw	4
   771  070F  340A               	retlw	10
   772  0710  340A               	retlw	10
   773  0711  340E               	retlw	14
   774  0712  340E               	retlw	14
   775  0713  341F               	retlw	31
   776  0714  341F               	retlw	31
   777  0715  340E               	retlw	14
   778  0716                     __end_of_termometro:	
   779  0716                     _atilde:	
   780  0716  3402               	retlw	2
   781  0717  3404               	retlw	4
   782  0718  3400               	retlw	0
   783  0719  340E               	retlw	14
   784  071A  3401               	retlw	1
   785  071B  340F               	retlw	15
   786  071C  3411               	retlw	17
   787  071D  340F               	retlw	15
   788  071E                     __end_of_atilde:	
   789  071E                     _arrowr_vacio:	
   790  071E  3400               	retlw	0
   791  071F  3408               	retlw	8
   792  0720  340C               	retlw	12
   793  0721  340A               	retlw	10
   794  0722  3409               	retlw	9
   795  0723  340A               	retlw	10
   796  0724  340C               	retlw	12
   797  0725  3408               	retlw	8
   798  0726                     __end_of_arrowr_vacio:	
   799  0726                     _arrowr:	
   800  0726  3400               	retlw	0
   801  0727  3408               	retlw	8
   802  0728  340C               	retlw	12
   803  0729  340E               	retlw	14
   804  072A  340F               	retlw	15
   805  072B  340E               	retlw	14
   806  072C  340C               	retlw	12
   807  072D  3408               	retlw	8
   808  072E                     __end_of_arrowr:	
   809  000C                     _PIR1bits	set	12
   810  0019                     _TXREG	set	25
   811  001A                     _RCREG	set	26
   812  0018                     _RCSTAbits	set	24
   813  0008                     _PORTD	set	8
   814  0007                     _PORTCbits	set	7
   815  0013                     _SSPBUF	set	19
   816  0014                     _SSPCON	set	20
   817  0006                     _PORTBbits	set	6
   818  0007                     _PORTC	set	7
   819  000B                     _INTCONbits	set	11
   820  0063                     _SSPIF	set	99
   821  005E                     _PEIE	set	94
   822  005F                     _GIE	set	95
   823  009A                     _SPBRGH	set	154
   824  0099                     _SPBRG	set	153
   825  0098                     _TXSTAbits	set	152
   826  0091                     _SSPCON2bits	set	145
   827  0087                     _TRISCbits	set	135
   828  0094                     _SSPSTAT	set	148
   829  0093                     _SSPADD	set	147
   830  0091                     _SSPCON2	set	145
   831  008F                     _OSCCONbits	set	143
   832  0088                     _TRISD	set	136
   833  0096                     _IOCB	set	150
   834  0081                     _OPTION_REGbits	set	129
   835  0095                     _WPUB	set	149
   836  0086                     _TRISB	set	134
   837  0087                     _TRISC	set	135
   838  0463                     _SSPIE	set	1123
   839  043C                     _TRISC4	set	1084
   840  043B                     _TRISC3	set	1083
   841  0439                     _TRISC1	set	1081
   842  0438                     _TRISC0	set	1080
   843  0187                     _BAUDCTLbits	set	391
   844  0189                     _ANSELH	set	393
   845  072E                     STR_2:	
   846  072E  3441               	retlw	65	;'A'
   847  072F  346D               	retlw	109	;'m'
   848  0730  3462               	retlw	98	;'b'
   849  0731  3469               	retlw	105	;'i'
   850  0732  3465               	retlw	101	;'e'
   851  0733  346E               	retlw	110	;'n'
   852  0734  3474               	retlw	116	;'t'
   853  0735  3465               	retlw	101	;'e'
   854  0736  343A               	retlw	58	;':'
   855  0737  3420               	retlw	32	;' '
   856  0738  3453               	retlw	83	;'S'
   857  0739  3475               	retlw	117	;'u'
   858  073A  3465               	retlw	101	;'e'
   859  073B  346C               	retlw	108	;'l'
   860  073C  346F               	retlw	111	;'o'
   861  073D  343A               	retlw	58	;':'
   862  073E  3400               	retlw	0
   863  073F                     STR_16:	
   864  073F  3456               	retlw	86	;'V'
   865  0740  3461               	retlw	97	;'a'
   866  0741  346D               	retlw	109	;'m'
   867  0742  346F               	retlw	111	;'o'
   868  0743  346E               	retlw	110	;'n'
   869  0744  346F               	retlw	111	;'o'
   870  0745  3473               	retlw	115	;'s'
   871  0746  3420               	retlw	32	;' '
   872  0747  3450               	retlw	80	;'P'
   873  0748  3465               	retlw	101	;'e'
   874  0749  3472               	retlw	114	;'r'
   875  074A  3472               	retlw	114	;'r'
   876  074B  346F               	retlw	111	;'o'
   877  074C  3473               	retlw	115	;'s'
   878  074D  3421               	retlw	33	;'!'
   879  074E  3400               	retlw	0
   880  074F                     STR_6:	
   881  074F  3445               	retlw	69	;'E'
   882  0750  344D               	retlw	77	;'M'
   883  0751  3445               	retlw	69	;'E'
   884  0752  3452               	retlw	82	;'R'
   885  0753  3447               	retlw	71	;'G'
   886  0754  3445               	retlw	69	;'E'
   887  0755  344E               	retlw	78	;'N'
   888  0756  3443               	retlw	67	;'C'
   889  0757  3449               	retlw	73	;'I'
   890  0758  3441               	retlw	65	;'A'
   891  0759  3421               	retlw	33	;'!'
   892  075A  3420               	retlw	32	;' '
   893  075B  3420               	retlw	32	;' '
   894  075C  3400               	retlw	0
   895  075D                     STR_9:	
   896  075D  3473               	retlw	115	;'s'
   897  075E  343A               	retlw	58	;':'
   898  075F  3420               	retlw	32	;' '
   899  0760  347C               	retlw	124	;'|'
   900  0761  3420               	retlw	32	;' '
   901  0762  3446               	retlw	70	;'F'
   902  0763  3472               	retlw	114	;'r'
   903  0764  3465               	retlw	101	;'e'
   904  0765  346E               	retlw	110	;'n'
   905  0766  3474               	retlw	116	;'t'
   906  0767  3465               	retlw	101	;'e'
   907  0768  343A               	retlw	58	;':'
   908  0769  3400               	retlw	0
   909  076A                     STR_3:	
   910  076A  3449               	retlw	73	;'I'
   911  076B  346E               	retlw	110	;'n'
   912  076C  3463               	retlw	99	;'c'
   913  076D  346C               	retlw	108	;'l'
   914  076E  3469               	retlw	105	;'i'
   915  076F  346E               	retlw	110	;'n'
   916  0770  3461               	retlw	97	;'a'
   917  0771  3463               	retlw	99	;'c'
   918  0772  3469               	retlw	105	;'i'
   919  0773  346F               	retlw	111	;'o'
   920  0774  346E               	retlw	110	;'n'
   921  0775  343A               	retlw	58	;':'
   922  0776  3400               	retlw	0
   923  0777                     STR_14:	
   924  0777  3454               	retlw	84	;'T'
   925  0778  346F               	retlw	111	;'o'
   926  0779  346D               	retlw	109	;'m'
   927  077A  3461               	retlw	97	;'a'
   928  077B  3472               	retlw	114	;'r'
   929  077C  3420               	retlw	32	;' '
   930  077D  3464               	retlw	100	;'d'
   931  077E  3461               	retlw	97	;'a'
   932  077F  3474               	retlw	116	;'t'
   933  0780  346F               	retlw	111	;'o'
   934  0781  3473               	retlw	115	;'s'
   935  0782  343A               	retlw	58	;':'
   936  0783  3400               	retlw	0
   937  0784                     STR_5:	
   938  0784  3450               	retlw	80	;'P'
   939  0785  3465               	retlw	101	;'e'
   940  0786  346C               	retlw	108	;'l'
   941  0787  3469               	retlw	105	;'i'
   942  0788  3467               	retlw	103	;'g'
   943  0789  3472               	retlw	114	;'r'
   944  078A  346F               	retlw	111	;'o'
   945  078B  3421               	retlw	33	;'!'
   946  078C  3420               	retlw	32	;' '
   947  078D  3420               	retlw	32	;' '
   948  078E  3420               	retlw	32	;' '
   949  078F  3400               	retlw	0
   950  0790                     STR_4:	
   951  0790  3445               	retlw	69	;'E'
   952  0791  3473               	retlw	115	;'s'
   953  0792  3474               	retlw	116	;'t'
   954  0793  3461               	retlw	97	;'a'
   955  0794  3462               	retlw	98	;'b'
   956  0795  346C               	retlw	108	;'l'
   957  0796  3465               	retlw	101	;'e'
   958  0797  3420               	retlw	32	;' '
   959  0798  3420               	retlw	32	;' '
   960  0799  3420               	retlw	32	;' '
   961  079A  3400               	retlw	0
   962  079B                     STR_7:	
   963  079B  3448               	retlw	72	;'H'
   964  079C  3475               	retlw	117	;'u'
   965  079D  346D               	retlw	109	;'m'
   966  079E  3465               	retlw	101	;'e'
   967  079F  3464               	retlw	100	;'d'
   968  07A0  3461               	retlw	97	;'a'
   969  07A1  3464               	retlw	100	;'d'
   970  07A2  343A               	retlw	58	;':'
   971  07A3  3400               	retlw	0
   972  07A4                     STR_17:	
   973  07A4  3445               	retlw	69	;'E'
   974  07A5  3452               	retlw	82	;'R'
   975  07A6  3452               	retlw	82	;'R'
   976  07A7  344F               	retlw	79	;'O'
   977  07A8  3452               	retlw	82	;'R'
   978  07A9  3400               	retlw	0
   979  07AA                     STR_11:	
   980  07AA  342D               	retlw	45	;'-'
   981  07AB  342D               	retlw	45	;'-'
   982  07AC  342D               	retlw	45	;'-'
   983  07AD  342D               	retlw	45	;'-'
   984  07AE  3400               	retlw	0
   985  07AF                     STR_8:	
   986  07AF  3441               	retlw	65	;'A'
   987  07B0  3474               	retlw	116	;'t'
   988  07B1  3472               	retlw	114	;'r'
   989  07B2  3400               	retlw	0
   990  07B3                     STR_15:	
   991  07B3  3478               	retlw	120	;'x'
   992  07B4  3420               	retlw	32	;' '
   993  07B5  3400               	retlw	0
   994  07B6                     STR_1:	
   995  07B6  3432               	retlw	50	;'2'
   996  07B7  3430               	retlw	48	;'0'
   997  07B8  3400               	retlw	0
   998  07B9                     STR_10:	
   999  07B9  3463               	retlw	99	;'c'
  1000  07BA  346D               	retlw	109	;'m'
  1001  07BB  3400               	retlw	0
  1002  07AA                     
  1003                           ; #config settings
  1004  0000                     
  1005                           	psect	cinit
  1006  000F                     start_initialization:	
  1007  000F                     __initialization:	
  1008                           
  1009                           ; Initialize objects allocated to BANK0
  1010  000F  1383               	bcf	3,7	;select IRP bank0
  1011  0010  305F               	movlw	low (__pdataBANK0+10)
  1012  0011  00FD               	movwf	btemp+-1
  1013  0012  3007               	movlw	high __pidataBANK0
  1014  0013  00FE               	movwf	btemp
  1015  0014  30F2               	movlw	low __pidataBANK0
  1016  0015  00FF               	movwf	btemp+1
  1017  0016  3055               	movlw	low __pdataBANK0
  1018  0017  0084               	movwf	4
  1019  0018  120A  158A  210D  120A  118A  	fcall	init_ram0
  1020                           
  1021                           ; Clear objects allocated to BANK0
  1022  001D  3043               	movlw	low __pbssBANK0
  1023  001E  0084               	movwf	4
  1024  001F  3055               	movlw	low (__pbssBANK0+18)
  1025  0020  120A  158A  20C7   	fcall	clear_ram0
  1026                           
  1027                           ; Clear objects allocated to COMMON
  1028  0023  01FA               	clrf	__pbssCOMMON& (0+127)
  1029  0024  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1030  0025                     end_of_initialization:	
  1031                           ;End of C runtime variable initialization code
  1032                           
  1033  0025                     __end_of__initialization:	
  1034  0025  0183               	clrf	3
  1035  0026  120A  158A  2F47   	ljmp	_main	;jump to C main() function
  1036                           
  1037                           	psect	bssCOMMON
  1038  007A                     __pbssCOMMON:	
  1039  007A                     _banderaPUSH1:	
  1040  007A                     	ds	1
  1041  007B                     _banderaBoton:	
  1042  007B                     	ds	1
  1043                           
  1044                           	psect	bssBANK0
  1045  0043                     __pbssBANK0:	
  1046  0043                     uint_to_array@F1343:	
  1047  0043                     	ds	6
  1048  0049                     _accZ:	
  1049  0049                     	ds	2
  1050  004B                     _sprintbuffer:	
  1051  004B                     	ds	1
  1052  004C                     _ancho:	
  1053  004C                     	ds	1
  1054  004D                     _largo:	
  1055  004D                     	ds	1
  1056  004E                     _banderaPUSH2:	
  1057  004E                     	ds	1
  1058  004F                     _obj_array:	
  1059  004F                     	ds	1
  1060  0050                     _temperatura_obj:	
  1061  0050                     	ds	1
  1062  0051                     _temperatura:	
  1063  0051                     	ds	1
  1064  0052                     _velocidad:	
  1065  0052                     	ds	1
  1066  0053                     _seg:	
  1067  0053                     	ds	1
  1068  0054                     _estado:	
  1069  0054                     	ds	1
  1070                           
  1071                           	psect	dataBANK0
  1072  0055                     __pdataBANK0:	
  1073  0055                     _d_atras:	
  1074  0055                     	ds	1
  1075  0056                     _d_frente:	
  1076  0056                     	ds	1
  1077  0057                     _inclinacion:	
  1078  0057                     	ds	1
  1079  0058                     _humedad:	
  1080  0058                     	ds	1
  1081  0059                     _jahr:	
  1082  0059                     	ds	1
  1083  005A                     _mes:	
  1084  005A                     	ds	1
  1085  005B                     _datum:	
  1086  005B                     	ds	1
  1087  005C                     _dia:	
  1088  005C                     	ds	1
  1089  005D                     _hora:	
  1090  005D                     	ds	1
  1091  005E                     _min:	
  1092  005E                     	ds	1
  1093                           
  1094                           	psect	inittext
  1095  0909                     init_fetch0:	
  1096                           ;	Called with low address in FSR and high address in W
  1097                           
  1098  0909  087E               	movf	126,w
  1099  090A  008A               	movwf	10
  1100  090B  087F               	movf	127,w
  1101  090C  0082               	movwf	2
  1102  090D                     init_ram0:	
  1103                           ;Called with:
  1104                           ;	high address of idata address in btemp 
  1105                           ;	low address of idata address in btemp+1 
  1106                           ;	low address of data in FSR
  1107                           ;	high address + 1 of data in btemp-1
  1108                           
  1109  090D  2109  120A  158A   	fcall	init_fetch0
  1110  0910  0080               	movwf	0
  1111  0911  0A84               	incf	4,f
  1112  0912  0804               	movf	4,w
  1113  0913  067D               	xorwf	125,w
  1114  0914  1903               	btfsc	3,2
  1115  0915  3400               	retlw	0
  1116  0916  0AFF               	incf	127,f
  1117  0917  1903               	btfsc	3,2
  1118  0918  0AFE               	incf	126,f
  1119  0919  290D               	goto	init_ram0
  1120                           
  1121                           	psect	clrtext
  1122  08C7                     clear_ram0:	
  1123                           ;	Called with FSR containing the base address, and
  1124                           ;	W with the last address+1
  1125                           
  1126  08C7  0064               	clrwdt	;clear the watchdog before getting into this loop
  1127  08C8                     clrloop0:	
  1128  08C8  0180               	clrf	0	;clear RAM location pointed to by FSR
  1129  08C9  0A84               	incf	4,f	;increment pointer
  1130  08CA  0604               	xorwf	4,w	;XOR with final address
  1131  08CB  1903               	btfsc	3,2	;have we reached the end yet?
  1132  08CC  3400               	retlw	0	;all done for this memory range, return
  1133  08CD  0604               	xorwf	4,w	;XOR again to restore value
  1134  08CE  28C8               	goto	clrloop0	;do the next byte
  1135                           
  1136                           	psect	cstackCOMMON
  1137  0070                     __pcstackCOMMON:	
  1138  0070                     ?_SetUp:	
  1139  0070                     ?_get_Time:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0070                     ?_mostrarLCD:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0070                     ?_pressBoton1:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0070                     ?_pressBoton2:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151  0070                     ?_uartTX_Write:	
  1152                           ; 1 bytes @ 0x0
  1153                           
  1154  0070                     ?_LCD_init:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157  0070                     ?_LCD_clear:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160  0070                     ?_Zeit_Datum_Set:	
  1161                           ; 1 bytes @ 0x0
  1162                           
  1163  0070                     ?_LCD_Write_Character:	
  1164                           ; 1 bytes @ 0x0
  1165                           
  1166  0070                     ?_LCD_Write_String:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169  0070                     ?_uint_to_array:	
  1170                           ; 1 bytes @ 0x0
  1171                           
  1172  0070                     ?_I2C_Master_Start:	
  1173                           ; 1 bytes @ 0x0
  1174                           
  1175  0070                     ?_I2C_Master_Stop:	
  1176                           ; 1 bytes @ 0x0
  1177                           
  1178  0070                     ?_ISR:	
  1179                           ; 1 bytes @ 0x0
  1180                           
  1181  0070                     ??_ISR:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184  0070                     ?_main:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187  0070                     ?_BCD_a_DEC:	
  1188                           ; 1 bytes @ 0x0
  1189                           
  1190  0070                     ?_DEC_a_BCD:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193  0070                     ?_I2C_Master_Wait:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196  0070                     ?_LCD_Cmd:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199                           
  1200                           ; 1 bytes @ 0x0
  1201  0070                     	ds	2
  1202  0072                     ??_uartTX_Write:	
  1203  0072                     ?_OSC_config:	
  1204                           ; 1 bytes @ 0x2
  1205                           
  1206  0072                     ?_uart_init:	
  1207                           ; 1 bytes @ 0x2
  1208                           
  1209  0072                     ??_LCD_Write_Character:	
  1210                           ; 1 bytes @ 0x2
  1211                           
  1212  0072                     ??_I2C_Master_Start:	
  1213                           ; 1 bytes @ 0x2
  1214                           
  1215  0072                     ??_I2C_Master_Stop:	
  1216                           ; 1 bytes @ 0x2
  1217                           
  1218  0072                     ??_I2C_Master_Wait:	
  1219                           ; 1 bytes @ 0x2
  1220                           
  1221  0072                     ??_LCD_Cmd:	
  1222                           ; 1 bytes @ 0x2
  1223                           
  1224  0072                     ?___bmul:	
  1225                           ; 1 bytes @ 0x2
  1226                           
  1227  0072                     ?_I2C_Master_Read:	
  1228                           ; 1 bytes @ 0x2
  1229                           
  1230  0072                     ?___wmul:	
  1231                           ; 2 bytes @ 0x2
  1232                           
  1233  0072                     ?___awmod:	
  1234                           ; 2 bytes @ 0x2
  1235                           
  1236  0072                     ?___lldiv:	
  1237                           ; 2 bytes @ 0x2
  1238                           
  1239  0072                     uartTX_Write@dato:	
  1240                           ; 4 bytes @ 0x2
  1241                           
  1242  0072                     ___bmul@multiplicand:	
  1243                           ; 1 bytes @ 0x2
  1244                           
  1245  0072                     I2C_Master_Read@a:	
  1246                           ; 1 bytes @ 0x2
  1247                           
  1248  0072                     ___wmul@multiplier:	
  1249                           ; 2 bytes @ 0x2
  1250                           
  1251  0072                     ___awmod@divisor:	
  1252                           ; 2 bytes @ 0x2
  1253                           
  1254  0072                     OSC_config@frecuencia:	
  1255                           ; 2 bytes @ 0x2
  1256                           
  1257  0072                     ___lldiv@divisor:	
  1258                           ; 4 bytes @ 0x2
  1259                           
  1260                           
  1261                           ; 4 bytes @ 0x2
  1262  0072                     	ds	1
  1263  0073                     ??___bmul:	
  1264  0073                     LCD_Write_Character@caracter:	
  1265                           ; 1 bytes @ 0x3
  1266                           
  1267                           
  1268                           ; 1 bytes @ 0x3
  1269  0073                     	ds	1
  1270  0074                     ??_uart_init:	
  1271  0074                     ??_LCD_Write_String:	
  1272                           ; 1 bytes @ 0x4
  1273                           
  1274  0074                     ??_I2C_Master_Read:	
  1275                           ; 1 bytes @ 0x4
  1276                           
  1277  0074                     LCD_Cmd@comando:	
  1278                           ; 1 bytes @ 0x4
  1279                           
  1280  0074                     ___bmul@product:	
  1281                           ; 1 bytes @ 0x4
  1282                           
  1283  0074                     LCD_Write_String@n:	
  1284                           ; 1 bytes @ 0x4
  1285                           
  1286  0074                     ___wmul@multiplicand:	
  1287                           ; 2 bytes @ 0x4
  1288                           
  1289  0074                     ___awmod@dividend:	
  1290                           ; 2 bytes @ 0x4
  1291                           
  1292                           
  1293                           ; 2 bytes @ 0x4
  1294  0074                     	ds	1
  1295  0075                     ??_LCD_init:	
  1296  0075                     ?_LCD_Create_Char:	
  1297                           ; 1 bytes @ 0x5
  1298                           
  1299  0075                     ??_LCD_clear:	
  1300                           ; 1 bytes @ 0x5
  1301                           
  1302  0075                     ?_LCD_Set_Cursor:	
  1303                           ; 1 bytes @ 0x5
  1304                           
  1305  0075                     LCD_Set_Cursor@columna:	
  1306                           ; 1 bytes @ 0x5
  1307                           
  1308  0075                     LCD_Create_Char@chardata:	
  1309                           ; 1 bytes @ 0x5
  1310                           
  1311  0075                     ___bmul@multiplier:	
  1312                           ; 1 bytes @ 0x5
  1313                           
  1314                           
  1315                           ; 1 bytes @ 0x5
  1316  0075                     	ds	1
  1317  0076                     ??_OSC_config:	
  1318  0076                     ??_LCD_Create_Char:	
  1319                           ; 1 bytes @ 0x6
  1320                           
  1321  0076                     ??_LCD_Set_Cursor:	
  1322                           ; 1 bytes @ 0x6
  1323                           
  1324  0076                     ??_BCD_a_DEC:	
  1325                           ; 1 bytes @ 0x6
  1326                           
  1327  0076                     ??___wmul:	
  1328                           ; 1 bytes @ 0x6
  1329                           
  1330  0076                     ??___awmod:	
  1331                           ; 1 bytes @ 0x6
  1332                           
  1333  0076                     LCD_Write_String@a:	
  1334                           ; 1 bytes @ 0x6
  1335                           
  1336  0076                     I2C_Master_Read@temp:	
  1337                           ; 1 bytes @ 0x6
  1338                           
  1339  0076                     ___wmul@product:	
  1340                           ; 2 bytes @ 0x6
  1341                           
  1342  0076                     ___lldiv@dividend:	
  1343                           ; 2 bytes @ 0x6
  1344                           
  1345                           
  1346                           ; 4 bytes @ 0x6
  1347  0076                     	ds	1
  1348  0077                     ??_pressBoton1:	
  1349  0077                     LCD_Create_Char@charnum:	
  1350                           ; 1 bytes @ 0x7
  1351                           
  1352  0077                     ___awmod@counter:	
  1353                           ; 1 bytes @ 0x7
  1354                           
  1355                           
  1356                           ; 1 bytes @ 0x7
  1357  0077                     	ds	1
  1358  0078                     ??___awdiv:	
  1359  0078                     LCD_Set_Cursor@linea:	
  1360                           ; 1 bytes @ 0x8
  1361                           
  1362  0078                     LCD_Create_Char@n:	
  1363                           ; 1 bytes @ 0x8
  1364                           
  1365  0078                     ___awmod@sign:	
  1366                           ; 1 bytes @ 0x8
  1367                           
  1368                           
  1369                           ; 1 bytes @ 0x8
  1370  0078                     	ds	1
  1371  0079                     BCD_a_DEC@numBCD:	
  1372  0079                     DEC_a_BCD@numDEC:	
  1373                           ; 1 bytes @ 0x9
  1374                           
  1375  0079                     LCD_Set_Cursor@corrimiento:	
  1376                           ; 1 bytes @ 0x9
  1377                           
  1378                           
  1379                           ; 1 bytes @ 0x9
  1380  0079                     	ds	1
  1381  007A                     ??_I2C_Master_Write:	
  1382                           
  1383                           	psect	cstackBANK0
  1384  0020                     __pcstackBANK0:	
  1385                           ; 1 bytes @ 0xA
  1386                           
  1387  0020                     ??_pressBoton2:	
  1388  0020                     ??___lldiv:	
  1389                           ; 1 bytes @ 0x0
  1390                           
  1391  0020                     ?___awdiv:	
  1392                           ; 1 bytes @ 0x0
  1393                           
  1394  0020                     ___awdiv@divisor:	
  1395                           ; 2 bytes @ 0x0
  1396                           
  1397                           
  1398                           ; 2 bytes @ 0x0
  1399  0020                     	ds	1
  1400  0021                     ___lldiv@quotient:	
  1401                           
  1402                           ; 4 bytes @ 0x1
  1403  0021                     	ds	1
  1404  0022                     ___awdiv@dividend:	
  1405                           
  1406                           ; 2 bytes @ 0x2
  1407  0022                     	ds	2
  1408  0024                     ___awdiv@counter:	
  1409                           
  1410                           ; 1 bytes @ 0x4
  1411  0024                     	ds	1
  1412  0025                     ___lldiv@counter:	
  1413  0025                     ___awdiv@sign:	
  1414                           ; 1 bytes @ 0x5
  1415                           
  1416                           
  1417                           ; 1 bytes @ 0x5
  1418  0025                     	ds	1
  1419  0026                     ?_I2C_Master_Init:	
  1420  0026                     ___awdiv@quotient:	
  1421                           ; 1 bytes @ 0x6
  1422                           
  1423  0026                     I2C_Master_Init@c:	
  1424                           ; 2 bytes @ 0x6
  1425                           
  1426                           
  1427                           ; 4 bytes @ 0x6
  1428  0026                     	ds	2
  1429  0028                     ??_uint_to_array:	
  1430  0028                     ?_display_Uhrzeit:	
  1431                           ; 1 bytes @ 0x8
  1432                           
  1433  0028                     ?_display_Datum:	
  1434                           ; 1 bytes @ 0x8
  1435                           
  1436  0028                     ??_DEC_a_BCD:	
  1437                           ; 1 bytes @ 0x8
  1438                           
  1439  0028                     display_Uhrzeit@columna:	
  1440                           ; 1 bytes @ 0x8
  1441                           
  1442  0028                     display_Datum@columna:	
  1443                           ; 1 bytes @ 0x8
  1444                           
  1445                           
  1446                           ; 1 bytes @ 0x8
  1447  0028                     	ds	1
  1448  0029                     ??_display_Uhrzeit:	
  1449  0029                     ??_display_Datum:	
  1450                           ; 1 bytes @ 0x9
  1451                           
  1452                           
  1453                           ; 1 bytes @ 0x9
  1454  0029                     	ds	1
  1455  002A                     ??_I2C_Master_Init:	
  1456                           
  1457                           ; 1 bytes @ 0xA
  1458  002A                     	ds	2
  1459  002C                     display_Uhrzeit@fila:	
  1460  002C                     display_Datum@fila:	
  1461                           ; 1 bytes @ 0xC
  1462                           
  1463                           
  1464                           ; 1 bytes @ 0xC
  1465  002C                     	ds	1
  1466  002D                     ?_I2C_Master_Write:	
  1467  002D                     display_Uhrzeit@seg_u:	
  1468                           ; 1 bytes @ 0xD
  1469                           
  1470  002D                     display_Datum@dia_u:	
  1471                           ; 1 bytes @ 0xD
  1472                           
  1473  002D                     I2C_Master_Write@d:	
  1474                           ; 1 bytes @ 0xD
  1475                           
  1476                           
  1477                           ; 2 bytes @ 0xD
  1478  002D                     	ds	1
  1479  002E                     display_Uhrzeit@seg_d:	
  1480  002E                     display_Datum@dia_d:	
  1481                           ; 1 bytes @ 0xE
  1482                           
  1483  002E                     uint_to_array@decenas:	
  1484                           ; 1 bytes @ 0xE
  1485                           
  1486                           
  1487                           ; 1 bytes @ 0xE
  1488  002E                     	ds	1
  1489  002F                     ??_get_Time:	
  1490  002F                     ??_Zeit_Datum_Set:	
  1491                           ; 1 bytes @ 0xF
  1492                           
  1493  002F                     display_Uhrzeit@min_u:	
  1494                           ; 1 bytes @ 0xF
  1495                           
  1496  002F                     display_Datum@mes_u:	
  1497                           ; 1 bytes @ 0xF
  1498                           
  1499  002F                     uint_to_array@centenas:	
  1500                           ; 1 bytes @ 0xF
  1501                           
  1502                           
  1503                           ; 1 bytes @ 0xF
  1504  002F                     	ds	1
  1505  0030                     display_Uhrzeit@min_d:	
  1506  0030                     display_Datum@mes_d:	
  1507                           ; 1 bytes @ 0x10
  1508                           
  1509  0030                     uint_to_array@resultado:	
  1510                           ; 1 bytes @ 0x10
  1511                           
  1512                           
  1513                           ; 6 bytes @ 0x10
  1514  0030                     	ds	1
  1515  0031                     ??_SetUp:	
  1516  0031                     display_Uhrzeit@Uhr_u:	
  1517                           ; 1 bytes @ 0x11
  1518                           
  1519  0031                     display_Datum@jahr_u:	
  1520                           ; 1 bytes @ 0x11
  1521                           
  1522                           
  1523                           ; 1 bytes @ 0x11
  1524  0031                     	ds	1
  1525  0032                     display_Uhrzeit@Uhr_d:	
  1526  0032                     display_Datum@jahr_d:	
  1527                           ; 1 bytes @ 0x12
  1528                           
  1529                           
  1530                           ; 1 bytes @ 0x12
  1531  0032                     	ds	4
  1532  0036                     uint_to_array@numero:	
  1533                           
  1534                           ; 1 bytes @ 0x16
  1535  0036                     	ds	1
  1536  0037                     ??_mostrarLCD:	
  1537                           
  1538                           ; 1 bytes @ 0x17
  1539  0037                     	ds	3
  1540  003A                     mostrarLCD@pantalla:	
  1541                           
  1542                           ; 1 bytes @ 0x1A
  1543  003A                     	ds	7
  1544  0041                     ??_main:	
  1545                           
  1546                           ; 1 bytes @ 0x21
  1547  0041                     	ds	2
  1548                           
  1549                           	psect	maintext
  1550  0F47                     __pmaintext:	
  1551 ;;
  1552 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1553 ;;
  1554 ;; *************** function _main *****************
  1555 ;; Defined at:
  1556 ;;		line 140 in file "main_Master.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;		None
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;		None
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : B00/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1570 ;;      Params:         0       0       0       0       0
  1571 ;;      Locals:         0       0       0       0       0
  1572 ;;      Temps:          0       2       0       0       0
  1573 ;;      Totals:         0       2       0       0       0
  1574 ;;Total ram usage:        2 bytes
  1575 ;; Hardware stack levels required when called:    5
  1576 ;; This function calls:
  1577 ;;		_SetUp
  1578 ;;		_get_Time
  1579 ;;		_mostrarLCD
  1580 ;;		_pressBoton1
  1581 ;;		_pressBoton2
  1582 ;;		_uartTX_Write
  1583 ;; This function is called by:
  1584 ;;		Startup code after reset
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           
  1589                           ;psect for function _main
  1590  0F47                     _main:	
  1591                           
  1592                           ;main_Master.c: 141:     SetUp();
  1593                           
  1594                           ;incstack = 0
  1595                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1596  0F47  120A  158A  24B6  120A  158A  	fcall	_SetUp
  1597  0F4C                     l4348:	
  1598                           
  1599                           ;main_Master.c: 144:         get_Time();
  1600  0F4C  120A  118A  2332  120A  158A  	fcall	_get_Time
  1601                           
  1602                           ;main_Master.c: 150:         mostrarLCD(estado);
  1603  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  1604  0F52  1303               	bcf	3,6	;RP1=0, select bank0
  1605  0F53  0854               	movf	_estado,w
  1606  0F54  120A  118A  2029  120A  158A  	fcall	_mostrarLCD
  1607                           
  1608                           ;main_Master.c: 151:         pressBoton1();
  1609  0F59  120A  158A  23C2  120A  158A  	fcall	_pressBoton1
  1610                           
  1611                           ;main_Master.c: 152:         pressBoton2();
  1612  0F5E  120A  158A  2541  120A  158A  	fcall	_pressBoton2
  1613                           
  1614                           ;main_Master.c: 154:         uartTX_Write(125);
  1615  0F63  307D               	movlw	125
  1616  0F64  120A  158A  20BF  120A  158A  	fcall	_uartTX_Write
  1617                           
  1618                           ;main_Master.c: 155:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1619  0F69  300D               	movlw	13
  1620  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  1621  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  1622  0F6C  00C2               	movwf	??_main+1
  1623  0F6D  30FB               	movlw	251
  1624  0F6E  00C1               	movwf	??_main
  1625  0F6F                     u1747:	
  1626  0F6F  0BC1               	decfsz	??_main,f
  1627  0F70  2F6F               	goto	u1747
  1628  0F71  0BC2               	decfsz	??_main+1,f
  1629  0F72  2F6F               	goto	u1747
  1630                           
  1631                           ;main_Master.c: 156:         uartTX_Write(hora);
  1632  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  1633  0F74  1303               	bcf	3,6	;RP1=0, select bank0
  1634  0F75  085D               	movf	_hora,w
  1635  0F76  120A  158A  20BF  120A  158A  	fcall	_uartTX_Write
  1636                           
  1637                           ;main_Master.c: 157:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1638  0F7B  300D               	movlw	13
  1639  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  1640  0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  1641  0F7E  00C2               	movwf	??_main+1
  1642  0F7F  30FB               	movlw	251
  1643  0F80  00C1               	movwf	??_main
  1644  0F81                     u1757:	
  1645  0F81  0BC1               	decfsz	??_main,f
  1646  0F82  2F81               	goto	u1757
  1647  0F83  0BC2               	decfsz	??_main+1,f
  1648  0F84  2F81               	goto	u1757
  1649                           
  1650                           ;main_Master.c: 158:         uartTX_Write(min);
  1651  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  1652  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  1653  0F87  085E               	movf	_min,w
  1654  0F88  120A  158A  20BF  120A  158A  	fcall	_uartTX_Write
  1655                           
  1656                           ;main_Master.c: 159:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1657  0F8D  300D               	movlw	13
  1658  0F8E  1283               	bcf	3,5	;RP0=0, select bank0
  1659  0F8F  1303               	bcf	3,6	;RP1=0, select bank0
  1660  0F90  00C2               	movwf	??_main+1
  1661  0F91  30FB               	movlw	251
  1662  0F92  00C1               	movwf	??_main
  1663  0F93                     u1767:	
  1664  0F93  0BC1               	decfsz	??_main,f
  1665  0F94  2F93               	goto	u1767
  1666  0F95  0BC2               	decfsz	??_main+1,f
  1667  0F96  2F93               	goto	u1767
  1668                           
  1669                           ;main_Master.c: 160:         uartTX_Write(seg);
  1670  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  1671  0F98  1303               	bcf	3,6	;RP1=0, select bank0
  1672  0F99  0853               	movf	_seg,w
  1673  0F9A  120A  158A  20BF  120A  158A  	fcall	_uartTX_Write
  1674                           
  1675                           ;main_Master.c: 161:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1676  0F9F  300D               	movlw	13
  1677  0FA0  1283               	bcf	3,5	;RP0=0, select bank0
  1678  0FA1  1303               	bcf	3,6	;RP1=0, select bank0
  1679  0FA2  00C2               	movwf	??_main+1
  1680  0FA3  30FB               	movlw	251
  1681  0FA4  00C1               	movwf	??_main
  1682  0FA5                     u1777:	
  1683  0FA5  0BC1               	decfsz	??_main,f
  1684  0FA6  2FA5               	goto	u1777
  1685  0FA7  0BC2               	decfsz	??_main+1,f
  1686  0FA8  2FA5               	goto	u1777
  1687                           
  1688                           ;main_Master.c: 162:         uartTX_Write(temperatura);
  1689  0FA9  3000               	movlw	0
  1690  0FAA  120A  158A  20BF  120A  158A  	fcall	_uartTX_Write
  1691                           
  1692                           ;main_Master.c: 163:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1693  0FAF  300D               	movlw	13
  1694  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  1695  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  1696  0FB2  00C2               	movwf	??_main+1
  1697  0FB3  30FB               	movlw	251
  1698  0FB4  00C1               	movwf	??_main
  1699  0FB5                     u1787:	
  1700  0FB5  0BC1               	decfsz	??_main,f
  1701  0FB6  2FB5               	goto	u1787
  1702  0FB7  0BC2               	decfsz	??_main+1,f
  1703  0FB8  2FB5               	goto	u1787
  1704                           
  1705                           ;main_Master.c: 164:         uartTX_Write(temperatura_obj);
  1706  0FB9  3000               	movlw	0
  1707  0FBA  120A  158A  20BF  120A  158A  	fcall	_uartTX_Write
  1708                           
  1709                           ;main_Master.c: 165:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1710  0FBF  300D               	movlw	13
  1711  0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  1712  0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  1713  0FC2  00C2               	movwf	??_main+1
  1714  0FC3  30FB               	movlw	251
  1715  0FC4  00C1               	movwf	??_main
  1716  0FC5                     u1797:	
  1717  0FC5  0BC1               	decfsz	??_main,f
  1718  0FC6  2FC5               	goto	u1797
  1719  0FC7  0BC2               	decfsz	??_main+1,f
  1720  0FC8  2FC5               	goto	u1797
  1721                           
  1722                           ;main_Master.c: 166:         uartTX_Write(inclinacion);
  1723  0FC9  3004               	movlw	4
  1724  0FCA  120A  158A  20BF  120A  158A  	fcall	_uartTX_Write
  1725                           
  1726                           ;main_Master.c: 167:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1727  0FCF  300D               	movlw	13
  1728  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  1729  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  1730  0FD2  00C2               	movwf	??_main+1
  1731  0FD3  30FB               	movlw	251
  1732  0FD4  00C1               	movwf	??_main
  1733  0FD5                     u1807:	
  1734  0FD5  0BC1               	decfsz	??_main,f
  1735  0FD6  2FD5               	goto	u1807
  1736  0FD7  0BC2               	decfsz	??_main+1,f
  1737  0FD8  2FD5               	goto	u1807
  1738                           
  1739                           ;main_Master.c: 168:         uartTX_Write(humedad);
  1740  0FD9  3005               	movlw	5
  1741  0FDA  120A  158A  20BF  120A  158A  	fcall	_uartTX_Write
  1742                           
  1743                           ;main_Master.c: 169:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1744  0FDF  300D               	movlw	13
  1745  0FE0  1283               	bcf	3,5	;RP0=0, select bank0
  1746  0FE1  1303               	bcf	3,6	;RP1=0, select bank0
  1747  0FE2  00C2               	movwf	??_main+1
  1748  0FE3  30FB               	movlw	251
  1749  0FE4  00C1               	movwf	??_main
  1750  0FE5                     u1817:	
  1751  0FE5  0BC1               	decfsz	??_main,f
  1752  0FE6  2FE5               	goto	u1817
  1753  0FE7  0BC2               	decfsz	??_main+1,f
  1754  0FE8  2FE5               	goto	u1817
  1755                           
  1756                           ;main_Master.c: 170:         uartTX_Write(d_frente);
  1757  0FE9  3066               	movlw	102
  1758  0FEA  120A  158A  20BF  120A  158A  	fcall	_uartTX_Write
  1759                           
  1760                           ;main_Master.c: 171:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1761  0FEF  300D               	movlw	13
  1762  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  1763  0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  1764  0FF2  00C2               	movwf	??_main+1
  1765  0FF3  30FB               	movlw	251
  1766  0FF4  00C1               	movwf	??_main
  1767  0FF5                     u1827:	
  1768  0FF5  0BC1               	decfsz	??_main,f
  1769  0FF6  2FF5               	goto	u1827
  1770  0FF7  0BC2               	decfsz	??_main+1,f
  1771  0FF8  2FF5               	goto	u1827
  1772                           
  1773                           ;main_Master.c: 172:         uartTX_Write(d_atras);
  1774  0FF9  3066               	movlw	102
  1775  0FFA  120A  158A  20BF  120A  158A  	fcall	_uartTX_Write
  1776  0FFF  2F4C               	goto	l4348
  1777  1000                     __end_of_main:	
  1778                           
  1779                           	psect	text1
  1780  08BF                     __ptext1:	
  1781 ;; *************** function _uartTX_Write *****************
  1782 ;; Defined at:
  1783 ;;		line 34 in file "UART.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  dato            1    wreg     unsigned char 
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;  dato            1    2[COMMON] unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      void 
  1790 ;; Registers used:
  1791 ;;		wreg
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1797 ;;      Params:         0       0       0       0       0
  1798 ;;      Locals:         1       0       0       0       0
  1799 ;;      Temps:          0       0       0       0       0
  1800 ;;      Totals:         1       0       0       0       0
  1801 ;;Total ram usage:        1 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    1
  1804 ;; This function calls:
  1805 ;;		Nothing
  1806 ;; This function is called by:
  1807 ;;		_main
  1808 ;;		_uartTX_Write_Str
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           
  1813                           ;psect for function _uartTX_Write
  1814  08BF                     _uartTX_Write:	
  1815                           
  1816                           ;incstack = 0
  1817                           ; Regs used in _uartTX_Write: [wreg]
  1818                           ;uartTX_Write@dato stored from wreg
  1819  08BF  00F2               	movwf	uartTX_Write@dato
  1820                           
  1821                           ;UART.c: 35:     TXREG = dato;
  1822  08C0  0872               	movf	uartTX_Write@dato,w
  1823  08C1  1283               	bcf	3,5	;RP0=0, select bank0
  1824  08C2  1303               	bcf	3,6	;RP1=0, select bank0
  1825  08C3  0099               	movwf	25	;volatile
  1826  08C4                     l438:	
  1827                           ;UART.c: 36:     while(PIR1bits.TXIF == 0);
  1828                           
  1829  08C4  1A0C               	btfsc	12,4	;volatile
  1830  08C5  0008               	return
  1831  08C6  28C4               	goto	l438
  1832  08C7                     __end_of_uartTX_Write:	
  1833                           
  1834                           	psect	text2
  1835  0D41                     __ptext2:	
  1836 ;; *************** function _pressBoton2 *****************
  1837 ;; Defined at:
  1838 ;;		line 501 in file "main_Master.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;		None
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1852 ;;      Params:         0       0       0       0       0
  1853 ;;      Locals:         0       0       0       0       0
  1854 ;;      Temps:          0       2       0       0       0
  1855 ;;      Totals:         0       2       0       0       0
  1856 ;;Total ram usage:        2 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:    3
  1859 ;; This function calls:
  1860 ;;		_LCD_Set_Cursor
  1861 ;;		_LCD_Write_Character
  1862 ;;		_LCD_clear
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           
  1869                           ;psect for function _pressBoton2
  1870  0D41                     _pressBoton2:	
  1871                           
  1872                           ;main_Master.c: 502:     if (banderaBoton == 1){
  1873                           
  1874                           ;incstack = 0
  1875                           ; Regs used in _pressBoton2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1876  0D41  037B               	decf	_banderaBoton,w
  1877  0D42  1D03               	btfss	3,2
  1878  0D43  2DD5               	goto	l4334
  1879                           
  1880                           ;main_Master.c: 503:         if (banderaPUSH2 == 0){
  1881  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  1882  0D45  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0D46  084E               	movf	_banderaPUSH2,w
  1884  0D47  1D03               	btfss	3,2
  1885  0D48  2DD5               	goto	l4334
  1886                           
  1887                           ;main_Master.c: 504:             if (PORTBbits.RB2 == 0){
  1888  0D49  1D06               	btfss	6,2	;volatile
  1889  0D4A  2DB6               	goto	l4326
  1890  0D4B  2DCF               	goto	l4328
  1891  0D4C                     l4294:	
  1892                           
  1893                           ;main_Master.c: 507:                         estado = 6;
  1894  0D4C  3006               	movlw	6
  1895  0D4D  2DA7               	goto	L5
  1896  0D4E                     l4296:	
  1897                           ;main_Master.c: 508:                         break;
  1898                           
  1899                           
  1900                           ;main_Master.c: 510:                         LCD_Set_Cursor(2,0);
  1901  0D4E  01F5               	clrf	LCD_Set_Cursor@columna
  1902  0D4F  3002               	movlw	2
  1903  0D50  120A  118A  26D2  120A  158A  	fcall	_LCD_Set_Cursor
  1904                           
  1905                           ;main_Master.c: 511:                         LCD_Write_Character(1);
  1906  0D55  3001               	movlw	1
  1907  0D56  120A  158A  20D8  120A  158A  	fcall	_LCD_Write_Character
  1908                           
  1909                           ;main_Master.c: 512:                         _delay((unsigned long)((100)*(4000000/4000.
      +                          0)));
  1910  0D5B  3082               	movlw	130
  1911  0D5C  1283               	bcf	3,5	;RP0=0, select bank0
  1912  0D5D  1303               	bcf	3,6	;RP1=0, select bank0
  1913  0D5E  00A1               	movwf	??_pressBoton2+1
  1914  0D5F  30DD               	movlw	221
  1915  0D60  00A0               	movwf	??_pressBoton2
  1916  0D61                     u1837:	
  1917  0D61  0BA0               	decfsz	??_pressBoton2,f
  1918  0D62  2D61               	goto	u1837
  1919  0D63  0BA1               	decfsz	??_pressBoton2+1,f
  1920  0D64  2D61               	goto	u1837
  1921                           
  1922                           ;main_Master.c: 513:                         estado = 7;
  1923  0D65  3007               	movlw	7
  1924  0D66  2DA5               	goto	L6
  1925  0D67                     l4304:	
  1926                           ;main_Master.c: 514:                         break;
  1927                           
  1928                           
  1929                           ;main_Master.c: 516:                         LCD_Set_Cursor(2,7);
  1930  0D67  3007               	movlw	7
  1931  0D68  00A0               	movwf	??_pressBoton2
  1932  0D69  0820               	movf	??_pressBoton2,w
  1933  0D6A  00F5               	movwf	LCD_Set_Cursor@columna
  1934  0D6B  3002               	movlw	2
  1935  0D6C  120A  118A  26D2  120A  158A  	fcall	_LCD_Set_Cursor
  1936                           
  1937                           ;main_Master.c: 517:                         LCD_Write_Character(1);
  1938  0D71  3001               	movlw	1
  1939  0D72  120A  158A  20D8  120A  158A  	fcall	_LCD_Write_Character
  1940                           
  1941                           ;main_Master.c: 518:                         _delay((unsigned long)((100)*(4000000/4000.
      +                          0)));
  1942  0D77  3082               	movlw	130
  1943  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  1944  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  1945  0D7A  00A1               	movwf	??_pressBoton2+1
  1946  0D7B  30DD               	movlw	221
  1947  0D7C  00A0               	movwf	??_pressBoton2
  1948  0D7D                     u1847:	
  1949  0D7D  0BA0               	decfsz	??_pressBoton2,f
  1950  0D7E  2D7D               	goto	u1847
  1951  0D7F  0BA1               	decfsz	??_pressBoton2+1,f
  1952  0D80  2D7D               	goto	u1847
  1953                           
  1954                           ;main_Master.c: 519:                         estado = 8;
  1955  0D81  3008               	movlw	8
  1956  0D82  2DA5               	goto	L6
  1957  0D83                     l4312:	
  1958                           ;main_Master.c: 520:                         break;
  1959                           
  1960                           
  1961                           ;main_Master.c: 522:                         LCD_Set_Cursor(2,10);
  1962  0D83  300A               	movlw	10
  1963  0D84  00A0               	movwf	??_pressBoton2
  1964  0D85  0820               	movf	??_pressBoton2,w
  1965  0D86  00F5               	movwf	LCD_Set_Cursor@columna
  1966  0D87  3002               	movlw	2
  1967  0D88  120A  118A  26D2  120A  158A  	fcall	_LCD_Set_Cursor
  1968                           
  1969                           ;main_Master.c: 523:                         LCD_Write_Character(1);
  1970  0D8D  3001               	movlw	1
  1971  0D8E  120A  158A  20D8  120A  158A  	fcall	_LCD_Write_Character
  1972                           
  1973                           ;main_Master.c: 524:                         _delay((unsigned long)((100)*(4000000/4000.
      +                          0)));
  1974  0D93  3082               	movlw	130
  1975  0D94  1283               	bcf	3,5	;RP0=0, select bank0
  1976  0D95  1303               	bcf	3,6	;RP1=0, select bank0
  1977  0D96  00A1               	movwf	??_pressBoton2+1
  1978  0D97  30DD               	movlw	221
  1979  0D98  00A0               	movwf	??_pressBoton2
  1980  0D99                     u1857:	
  1981  0D99  0BA0               	decfsz	??_pressBoton2,f
  1982  0D9A  2D99               	goto	u1857
  1983  0D9B  0BA1               	decfsz	??_pressBoton2+1,f
  1984  0D9C  2D99               	goto	u1857
  1985                           
  1986                           ;main_Master.c: 525:                         estado = 9;
  1987  0D9D  3009               	movlw	9
  1988  0D9E  2DA5               	goto	L6
  1989  0D9F                     l4320:	
  1990                           ;main_Master.c: 526:                         break;
  1991                           
  1992                           
  1993                           ;main_Master.c: 528:                         LCD_clear();
  1994  0D9F  120A  158A  212F  120A  158A  	fcall	_LCD_clear
  1995                           
  1996                           ;main_Master.c: 529:                         estado = 10;
  1997  0DA4  300A               	movlw	10
  1998  0DA5                     L6:	
  1999  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  2000  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  2001  0DA7                     L5:	
  2002  0DA7  00A0               	movwf	??_pressBoton2
  2003  0DA8  0820               	movf	??_pressBoton2,w
  2004  0DA9  00D4               	movwf	_estado
  2005                           
  2006                           ;main_Master.c: 530:                         break;
  2007  0DAA  2DCF               	goto	l4328
  2008  0DAB                     l4324:	
  2009                           
  2010                           ;main_Master.c: 532:                         _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  2011  0DAB  300D               	movlw	13
  2012  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  2013  0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  2014  0DAE  00A1               	movwf	??_pressBoton2+1
  2015  0DAF  30FB               	movlw	251
  2016  0DB0  00A0               	movwf	??_pressBoton2
  2017  0DB1                     u1867:	
  2018  0DB1  0BA0               	decfsz	??_pressBoton2,f
  2019  0DB2  2DB1               	goto	u1867
  2020  0DB3  0BA1               	decfsz	??_pressBoton2+1,f
  2021  0DB4  2DB1               	goto	u1867
  2022                           
  2023                           ;main_Master.c: 533:                 }
  2024  0DB5  2DCF               	goto	l4328
  2025  0DB6                     l4326:	
  2026  0DB6  0854               	movf	_estado,w
  2027  0DB7  00A0               	movwf	??_pressBoton2
  2028  0DB8  01A1               	clrf	??_pressBoton2+1
  2029                           
  2030                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2031                           ; Switch size 1, requested type "simple"
  2032                           ; Number of cases is 1, Range of values is 0 to 0
  2033                           ; switch strategies available:
  2034                           ; Name         Instructions Cycles
  2035                           ; simple_byte            4     3 (average)
  2036                           ; direct_byte           11     8 (fixed)
  2037                           ; jumptable            260     6 (fixed)
  2038                           ;	Chosen strategy is simple_byte
  2039  0DB9  0821               	movf	??_pressBoton2+1,w
  2040  0DBA  3A00               	xorlw	0	; case 0
  2041  0DBB  1903               	skipnz
  2042  0DBC  2DBE               	goto	l4824
  2043  0DBD  2DAB               	goto	l4324
  2044  0DBE                     l4824:	
  2045                           
  2046                           ; Switch size 1, requested type "simple"
  2047                           ; Number of cases is 5, Range of values is 5 to 9
  2048                           ; switch strategies available:
  2049                           ; Name         Instructions Cycles
  2050                           ; simple_byte           16     9 (average)
  2051                           ; direct_byte           26    11 (fixed)
  2052                           ; jumptable            263     9 (fixed)
  2053                           ;	Chosen strategy is simple_byte
  2054  0DBE  0820               	movf	??_pressBoton2,w
  2055  0DBF  3A05               	xorlw	5	; case 5
  2056  0DC0  1903               	skipnz
  2057  0DC1  2D4C               	goto	l4294
  2058  0DC2  3A03               	xorlw	3	; case 6
  2059  0DC3  1903               	skipnz
  2060  0DC4  2D4E               	goto	l4296
  2061  0DC5  3A01               	xorlw	1	; case 7
  2062  0DC6  1903               	skipnz
  2063  0DC7  2D67               	goto	l4304
  2064  0DC8  3A0F               	xorlw	15	; case 8
  2065  0DC9  1903               	skipnz
  2066  0DCA  2D83               	goto	l4312
  2067  0DCB  3A01               	xorlw	1	; case 9
  2068  0DCC  1903               	skipnz
  2069  0DCD  2D9F               	goto	l4320
  2070  0DCE  2DAB               	goto	l4324
  2071  0DCF                     l4328:	
  2072                           
  2073                           ;main_Master.c: 535:                 banderaBoton = 0;
  2074  0DCF  01FB               	clrf	_banderaBoton
  2075                           
  2076                           ;main_Master.c: 536:                 banderaPUSH2 = 1;
  2077  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  2078  0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  2079  0DD2  01CE               	clrf	_banderaPUSH2
  2080  0DD3  0ACE               	incf	_banderaPUSH2,f
  2081                           
  2082                           ;main_Master.c: 537:                 INTCONbits.RBIE = 1;
  2083  0DD4  158B               	bsf	11,3	;volatile
  2084  0DD5                     l4334:	
  2085                           
  2086                           ;main_Master.c: 540:     if (banderaPUSH2 == 1){
  2087  0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  2088  0DD6  1303               	bcf	3,6	;RP1=0, select bank0
  2089  0DD7  034E               	decf	_banderaPUSH2,w
  2090  0DD8  1D03               	btfss	3,2
  2091  0DD9  0008               	return
  2092                           
  2093                           ;main_Master.c: 541:         if (PORTBbits.RB2 == 1){
  2094  0DDA  1D06               	btfss	6,2	;volatile
  2095  0DDB  0008               	return
  2096                           
  2097                           ;main_Master.c: 542:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2098  0DDC  300D               	movlw	13
  2099  0DDD  1283               	bcf	3,5	;RP0=0, select bank0
  2100  0DDE  1303               	bcf	3,6	;RP1=0, select bank0
  2101  0DDF  00A1               	movwf	??_pressBoton2+1
  2102  0DE0  30FB               	movlw	251
  2103  0DE1  00A0               	movwf	??_pressBoton2
  2104  0DE2                     u1877:	
  2105  0DE2  0BA0               	decfsz	??_pressBoton2,f
  2106  0DE3  2DE2               	goto	u1877
  2107  0DE4  0BA1               	decfsz	??_pressBoton2+1,f
  2108  0DE5  2DE2               	goto	u1877
  2109                           
  2110                           ;main_Master.c: 543:         banderaPUSH2 = 0;
  2111  0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  2112  0DE7  1303               	bcf	3,6	;RP1=0, select bank0
  2113  0DE8  01CE               	clrf	_banderaPUSH2
  2114  0DE9  0008               	return
  2115  0DEA                     __end_of_pressBoton2:	
  2116                           
  2117                           	psect	text3
  2118  0BC2                     __ptext3:	
  2119 ;; *************** function _pressBoton1 *****************
  2120 ;; Defined at:
  2121 ;;		line 456 in file "main_Master.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2135 ;;      Params:         0       0       0       0       0
  2136 ;;      Locals:         0       0       0       0       0
  2137 ;;      Temps:          2       0       0       0       0
  2138 ;;      Totals:         2       0       0       0       0
  2139 ;;Total ram usage:        2 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; Hardware stack levels required when called:    3
  2142 ;; This function calls:
  2143 ;;		_LCD_clear
  2144 ;; This function is called by:
  2145 ;;		_main
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function _pressBoton1
  2151  0BC2                     _pressBoton1:	
  2152                           
  2153                           ;main_Master.c: 457:     if (banderaBoton == 1){
  2154                           
  2155                           ;incstack = 0
  2156                           ; Regs used in _pressBoton1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2157  0BC2  037B               	decf	_banderaBoton,w
  2158  0BC3  1D03               	btfss	3,2
  2159  0BC4  2C1F               	goto	l3208
  2160                           
  2161                           ;main_Master.c: 458:         if (banderaPUSH1 == 0){
  2162  0BC5  087A               	movf	_banderaPUSH1,w
  2163  0BC6  1D03               	btfss	3,2
  2164  0BC7  2C1F               	goto	l3208
  2165                           
  2166                           ;main_Master.c: 459:             if (PORTBbits.RB1 == 0){
  2167  0BC8  1283               	bcf	3,5	;RP0=0, select bank0
  2168  0BC9  1303               	bcf	3,6	;RP1=0, select bank0
  2169  0BCA  1C86               	btfss	6,1	;volatile
  2170  0BCB  2C08               	goto	l3200
  2171  0BCC  2C1F               	goto	l3208
  2172  0BCD                     l3172:	
  2173                           
  2174                           ;main_Master.c: 462:                         velocidad ++;
  2175  0BCD  3001               	movlw	1
  2176  0BCE  00F7               	movwf	??_pressBoton1
  2177  0BCF  0877               	movf	??_pressBoton1,w
  2178  0BD0  07D2               	addwf	_velocidad,f
  2179                           
  2180                           ;main_Master.c: 463:                         if (velocidad > 3){
  2181  0BD1  3004               	movlw	4
  2182  0BD2  0252               	subwf	_velocidad,w
  2183  0BD3  1C03               	skipc
  2184  0BD4  2C1B               	goto	l3202
  2185                           
  2186                           ;main_Master.c: 464:                             velocidad = 1;
  2187  0BD5  01D2               	clrf	_velocidad
  2188  0BD6  0AD2               	incf	_velocidad,f
  2189  0BD7  2C1B               	goto	l3202
  2190  0BD8                     l3178:	
  2191                           
  2192                           ;main_Master.c: 468:                         largo ++;
  2193  0BD8  3001               	movlw	1
  2194  0BD9  00F7               	movwf	??_pressBoton1
  2195  0BDA  0877               	movf	??_pressBoton1,w
  2196  0BDB  07CD               	addwf	_largo,f
  2197                           
  2198                           ;main_Master.c: 469:                         if (largo > 8){
  2199  0BDC  3009               	movlw	9
  2200  0BDD  024D               	subwf	_largo,w
  2201  0BDE  1C03               	skipc
  2202  0BDF  2C1B               	goto	l3202
  2203                           
  2204                           ;main_Master.c: 470:                             largo = 1;
  2205  0BE0  01CD               	clrf	_largo
  2206  0BE1  0ACD               	incf	_largo,f
  2207  0BE2  2C1B               	goto	l3202
  2208  0BE3                     l3184:	
  2209                           
  2210                           ;main_Master.c: 474:                         ancho ++;
  2211  0BE3  3001               	movlw	1
  2212  0BE4  00F7               	movwf	??_pressBoton1
  2213  0BE5  0877               	movf	??_pressBoton1,w
  2214  0BE6  07CC               	addwf	_ancho,f
  2215                           
  2216                           ;main_Master.c: 475:                         if (ancho > 8){
  2217  0BE7  3009               	movlw	9
  2218  0BE8  024C               	subwf	_ancho,w
  2219  0BE9  1C03               	skipc
  2220  0BEA  2C1B               	goto	l3202
  2221                           
  2222                           ;main_Master.c: 476:                             ancho = 1;
  2223  0BEB  01CC               	clrf	_ancho
  2224  0BEC  0ACC               	incf	_ancho,f
  2225  0BED  2C1B               	goto	l3202
  2226  0BEE                     l3190:	
  2227                           
  2228                           ;main_Master.c: 480:                         LCD_clear();
  2229  0BEE  120A  158A  212F  120A  158A  	fcall	_LCD_clear
  2230                           
  2231                           ;main_Master.c: 481:                     _delay((unsigned long)((10)*(4000000/4000.0)));
  2232  0BF3  300D               	movlw	13
  2233  0BF4  00F8               	movwf	??_pressBoton1+1
  2234  0BF5  30FB               	movlw	251
  2235  0BF6  00F7               	movwf	??_pressBoton1
  2236  0BF7                     u1887:	
  2237  0BF7  0BF7               	decfsz	??_pressBoton1,f
  2238  0BF8  2BF7               	goto	u1887
  2239  0BF9  0BF8               	decfsz	??_pressBoton1+1,f
  2240  0BFA  2BF7               	goto	u1887
  2241  0BFB  2BFC               	nop2
  2242                           
  2243                           ;main_Master.c: 482:                     estado ++;
  2244  0BFC  3001               	movlw	1
  2245  0BFD  00F7               	movwf	??_pressBoton1
  2246  0BFE  0877               	movf	??_pressBoton1,w
  2247  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  2248  0C00  1303               	bcf	3,6	;RP1=0, select bank0
  2249  0C01  07D4               	addwf	_estado,f
  2250                           
  2251                           ;main_Master.c: 483:                     if (estado > 5){
  2252  0C02  3006               	movlw	6
  2253  0C03  0254               	subwf	_estado,w
  2254  0C04  1C03               	skipc
  2255  0C05  2C1B               	goto	l3202
  2256                           
  2257                           ;main_Master.c: 484:                         estado = 0;
  2258  0C06  01D4               	clrf	_estado
  2259  0C07  2C1B               	goto	l3202
  2260  0C08                     l3200:	
  2261  0C08  0854               	movf	_estado,w
  2262  0C09  00F7               	movwf	??_pressBoton1
  2263  0C0A  01F8               	clrf	??_pressBoton1+1
  2264                           
  2265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2266                           ; Switch size 1, requested type "simple"
  2267                           ; Number of cases is 1, Range of values is 0 to 0
  2268                           ; switch strategies available:
  2269                           ; Name         Instructions Cycles
  2270                           ; simple_byte            4     3 (average)
  2271                           ; direct_byte           11     8 (fixed)
  2272                           ; jumptable            260     6 (fixed)
  2273                           ;	Chosen strategy is simple_byte
  2274  0C0B  0878               	movf	??_pressBoton1+1,w
  2275  0C0C  3A00               	xorlw	0	; case 0
  2276  0C0D  1903               	skipnz
  2277  0C0E  2C10               	goto	l4826
  2278  0C0F  2BEE               	goto	l3190
  2279  0C10                     l4826:	
  2280                           
  2281                           ; Switch size 1, requested type "simple"
  2282                           ; Number of cases is 3, Range of values is 6 to 8
  2283                           ; switch strategies available:
  2284                           ; Name         Instructions Cycles
  2285                           ; simple_byte           10     6 (average)
  2286                           ; direct_byte           20    11 (fixed)
  2287                           ; jumptable            263     9 (fixed)
  2288                           ;	Chosen strategy is simple_byte
  2289  0C10  0877               	movf	??_pressBoton1,w
  2290  0C11  3A06               	xorlw	6	; case 6
  2291  0C12  1903               	skipnz
  2292  0C13  2BCD               	goto	l3172
  2293  0C14  3A01               	xorlw	1	; case 7
  2294  0C15  1903               	skipnz
  2295  0C16  2BD8               	goto	l3178
  2296  0C17  3A0F               	xorlw	15	; case 8
  2297  0C18  1903               	skipnz
  2298  0C19  2BE3               	goto	l3184
  2299  0C1A  2BEE               	goto	l3190
  2300  0C1B                     l3202:	
  2301                           
  2302                           ;main_Master.c: 487:                 banderaBoton = 0;
  2303  0C1B  01FB               	clrf	_banderaBoton
  2304                           
  2305                           ;main_Master.c: 488:                 banderaPUSH1 = 1;
  2306  0C1C  01FA               	clrf	_banderaPUSH1
  2307  0C1D  0AFA               	incf	_banderaPUSH1,f
  2308                           
  2309                           ;main_Master.c: 489:                 INTCONbits.RBIE = 1;
  2310  0C1E  158B               	bsf	11,3	;volatile
  2311  0C1F                     l3208:	
  2312                           
  2313                           ;main_Master.c: 493:     if (banderaPUSH1 == 1){
  2314  0C1F  037A               	decf	_banderaPUSH1,w
  2315  0C20  1D03               	btfss	3,2
  2316  0C21  0008               	return
  2317                           
  2318                           ;main_Master.c: 494:         if (PORTBbits.RB1 == 1){
  2319  0C22  1283               	bcf	3,5	;RP0=0, select bank0
  2320  0C23  1303               	bcf	3,6	;RP1=0, select bank0
  2321  0C24  1C86               	btfss	6,1	;volatile
  2322  0C25  0008               	return
  2323                           
  2324                           ;main_Master.c: 495:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2325  0C26  300D               	movlw	13
  2326  0C27  00F8               	movwf	??_pressBoton1+1
  2327  0C28  30FB               	movlw	251
  2328  0C29  00F7               	movwf	??_pressBoton1
  2329  0C2A                     u1897:	
  2330  0C2A  0BF7               	decfsz	??_pressBoton1,f
  2331  0C2B  2C2A               	goto	u1897
  2332  0C2C  0BF8               	decfsz	??_pressBoton1+1,f
  2333  0C2D  2C2A               	goto	u1897
  2334  0C2E  2C2F               	nop2
  2335                           
  2336                           ;main_Master.c: 496:         banderaPUSH1 = 0;
  2337  0C2F  01FA               	clrf	_banderaPUSH1
  2338  0C30  0008               	return
  2339  0C31                     __end_of_pressBoton1:	
  2340                           
  2341                           	psect	text4
  2342  0029                     __ptext4:	
  2343 ;; *************** function _mostrarLCD *****************
  2344 ;; Defined at:
  2345 ;;		line 279 in file "main_Master.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;  pantalla        1    wreg     unsigned char 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  pantalla        1   26[BANK0 ] unsigned char 
  2350 ;;  dec_atras       1    0        unsigned char 
  2351 ;;  uni_atras       1    0        unsigned char 
  2352 ;;  dec_frente      1    0        unsigned char 
  2353 ;;  uni_frente      1    0        unsigned char 
  2354 ;;  decenas_hume    1    0        unsigned char 
  2355 ;;  unidades_hum    1    0        unsigned char 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      void 
  2358 ;; Registers used:
  2359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2365 ;;      Params:         0       0       0       0       0
  2366 ;;      Locals:         0       7       0       0       0
  2367 ;;      Temps:          0       3       0       0       0
  2368 ;;      Totals:         0      10       0       0       0
  2369 ;;Total ram usage:       10 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    4
  2372 ;; This function calls:
  2373 ;;		_I2C_Master_Start
  2374 ;;		_I2C_Master_Stop
  2375 ;;		_I2C_Master_Write
  2376 ;;		_LCD_Set_Cursor
  2377 ;;		_LCD_Write_Character
  2378 ;;		_LCD_Write_String
  2379 ;;		_LCD_clear
  2380 ;;		_display_Datum
  2381 ;;		_display_Uhrzeit
  2382 ;;		_uint_to_array
  2383 ;; This function is called by:
  2384 ;;		_main
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           
  2389                           ;psect for function _mostrarLCD
  2390  0029                     _mostrarLCD:	
  2391                           
  2392                           ;incstack = 0
  2393                           ; Regs used in _mostrarLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2394                           ;mostrarLCD@pantalla stored from wreg
  2395  0029  1283               	bcf	3,5	;RP0=0, select bank0
  2396  002A  1303               	bcf	3,6	;RP1=0, select bank0
  2397  002B  00BA               	movwf	mostrarLCD@pantalla
  2398                           
  2399                           ;main_Master.c: 280:     switch(pantalla){
  2400  002C  2B06               	goto	l4278
  2401  002D                     l4120:	
  2402                           
  2403                           ;main_Master.c: 282:             display_Uhrzeit(2,4);
  2404  002D  3004               	movlw	4
  2405  002E  00B7               	movwf	??_mostrarLCD
  2406  002F  0837               	movf	??_mostrarLCD,w
  2407  0030  00A8               	movwf	display_Uhrzeit@columna
  2408  0031  3002               	movlw	2
  2409  0032  120A  118A  2600  120A  118A  	fcall	_display_Uhrzeit
  2410                           
  2411                           ;main_Master.c: 283:             display_Datum(1,3);
  2412  0037  3003               	movlw	3
  2413  0038  1283               	bcf	3,5	;RP0=0, select bank0
  2414  0039  1303               	bcf	3,6	;RP1=0, select bank0
  2415  003A  00B7               	movwf	??_mostrarLCD
  2416  003B  0837               	movf	??_mostrarLCD,w
  2417  003C  00A8               	movwf	display_Datum@columna
  2418  003D  3001               	movlw	1
  2419  003E  120A  118A  2528   	fcall	_display_Datum
  2420                           
  2421                           ;main_Master.c: 284:             break;
  2422  0041  0008               	return
  2423  0042                     l4122:	
  2424                           
  2425                           ;main_Master.c: 286:             LCD_Set_Cursor(1,0);
  2426  0042  01F5               	clrf	LCD_Set_Cursor@columna
  2427  0043  3001               	movlw	1
  2428  0044  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2429                           
  2430                           ;main_Master.c: 287:             LCD_Write_String("Ambiente: Suelo:");
  2431  0049  3029               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2432  004A  120A  158A  217C  120A  118A  	fcall	_LCD_Write_String
  2433                           
  2434                           ;main_Master.c: 288:             LCD_Set_Cursor(2,2);
  2435  004F  3002               	movlw	2
  2436  0050  1283               	bcf	3,5	;RP0=0, select bank0
  2437  0051  1303               	bcf	3,6	;RP1=0, select bank0
  2438  0052  00B7               	movwf	??_mostrarLCD
  2439  0053  0837               	movf	??_mostrarLCD,w
  2440  0054  00F5               	movwf	LCD_Set_Cursor@columna
  2441  0055  3002               	movlw	2
  2442  0056  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2443                           
  2444                           ;main_Master.c: 289:             LCD_Write_Character(2);
  2445  005B  3002               	movlw	2
  2446  005C  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2447                           
  2448                           ;main_Master.c: 290:             obj_array = uint_to_array(temperatura);
  2449  0061  3000               	movlw	0
  2450  0062  120A  158A  2431  120A  118A  	fcall	_uint_to_array
  2451  0067  1283               	bcf	3,5	;RP0=0, select bank0
  2452  0068  1303               	bcf	3,6	;RP1=0, select bank0
  2453  0069  00B7               	movwf	??_mostrarLCD
  2454  006A  0837               	movf	??_mostrarLCD,w
  2455  006B  00CF               	movwf	_obj_array
  2456                           
  2457                           ;main_Master.c: 291:             if (obj_array[0] == 0){
  2458  006C  084F               	movf	_obj_array,w
  2459  006D  0084               	movwf	4
  2460  006E  1383               	bcf	3,7	;select IRP bank0
  2461  006F  0800               	movf	0,w
  2462  0070  00B7               	movwf	??_mostrarLCD
  2463  0071  0A84               	incf	4,f
  2464  0072  0800               	movf	0,w
  2465  0073  00B8               	movwf	??_mostrarLCD+1
  2466  0074  0837               	movf	??_mostrarLCD,w
  2467  0075  0438               	iorwf	??_mostrarLCD+1,w
  2468  0076  1D03               	btfss	3,2
  2469  0077  287A               	goto	l4132
  2470                           
  2471                           ;main_Master.c: 292:                 LCD_Write_Character(' ');
  2472  0078  3020               	movlw	32
  2473  0079  287E               	goto	L7
  2474  007A                     l4132:	
  2475                           ;main_Master.c: 293:             }
  2476                           
  2477                           
  2478                           ;main_Master.c: 295:                 LCD_Write_Character('0' + obj_array[0]);
  2479  007A  084F               	movf	_obj_array,w
  2480  007B  0084               	movwf	4
  2481  007C  0800               	movf	0,w
  2482  007D  3E30               	addlw	48
  2483  007E                     L7:	
  2484  007E  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2485                           
  2486                           ;main_Master.c: 297:             LCD_Write_Character('0' + obj_array[1]);
  2487                           
  2488                           ;main_Master.c: 296:             }
  2489  0083  1283               	bcf	3,5	;RP0=0, select bank0
  2490  0084  1303               	bcf	3,6	;RP1=0, select bank0
  2491  0085  084F               	movf	_obj_array,w
  2492  0086  3E02               	addlw	2
  2493  0087  0084               	movwf	4
  2494  0088  1383               	bcf	3,7	;select IRP bank0
  2495  0089  0800               	movf	0,w
  2496  008A  3E30               	addlw	48
  2497  008B  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2498                           
  2499                           ;main_Master.c: 298:             LCD_Write_Character('0' + obj_array[2]);
  2500  0090  1283               	bcf	3,5	;RP0=0, select bank0
  2501  0091  1303               	bcf	3,6	;RP1=0, select bank0
  2502  0092  084F               	movf	_obj_array,w
  2503  0093  3E04               	addlw	4
  2504  0094  0084               	movwf	4
  2505  0095  1383               	bcf	3,7	;select IRP bank0
  2506  0096  0800               	movf	0,w
  2507  0097  3E30               	addlw	48
  2508  0098  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2509                           
  2510                           ;main_Master.c: 299:             LCD_Write_Character(223);
  2511  009D  30DF               	movlw	223
  2512  009E  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2513                           
  2514                           ;main_Master.c: 300:             LCD_Write_Character('C');
  2515  00A3  3043               	movlw	67
  2516  00A4  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2517                           
  2518                           ;main_Master.c: 302:             LCD_Set_Cursor(2,10);
  2519  00A9  300A               	movlw	10
  2520  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  2521  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  2522  00AC  00B7               	movwf	??_mostrarLCD
  2523  00AD  0837               	movf	??_mostrarLCD,w
  2524  00AE  00F5               	movwf	LCD_Set_Cursor@columna
  2525  00AF  3002               	movlw	2
  2526  00B0  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2527                           
  2528                           ;main_Master.c: 303:             LCD_Write_Character(2);
  2529  00B5  3002               	movlw	2
  2530  00B6  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2531                           
  2532                           ;main_Master.c: 304:             obj_array = uint_to_array(temperatura_obj);
  2533  00BB  3000               	movlw	0
  2534  00BC  120A  158A  2431  120A  118A  	fcall	_uint_to_array
  2535  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  2536  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  2537  00C3  00B7               	movwf	??_mostrarLCD
  2538  00C4  0837               	movf	??_mostrarLCD,w
  2539  00C5  00CF               	movwf	_obj_array
  2540                           
  2541                           ;main_Master.c: 305:             if (obj_array[0] == 0){
  2542  00C6  084F               	movf	_obj_array,w
  2543  00C7  0084               	movwf	4
  2544  00C8  1383               	bcf	3,7	;select IRP bank0
  2545  00C9  0800               	movf	0,w
  2546  00CA  00B7               	movwf	??_mostrarLCD
  2547  00CB  0A84               	incf	4,f
  2548  00CC  0800               	movf	0,w
  2549  00CD  00B8               	movwf	??_mostrarLCD+1
  2550  00CE  0837               	movf	??_mostrarLCD,w
  2551  00CF  0438               	iorwf	??_mostrarLCD+1,w
  2552  00D0  1D03               	btfss	3,2
  2553  00D1  28D4               	goto	l4146
  2554                           
  2555                           ;main_Master.c: 306:                 LCD_Write_Character(' ');
  2556  00D2  3020               	movlw	32
  2557  00D3  28D8               	goto	L8
  2558  00D4                     l4146:	
  2559                           ;main_Master.c: 307:             }
  2560                           
  2561                           
  2562                           ;main_Master.c: 309:                 LCD_Write_Character('0' + obj_array[0]);
  2563  00D4  084F               	movf	_obj_array,w
  2564  00D5  0084               	movwf	4
  2565  00D6  0800               	movf	0,w
  2566  00D7  3E30               	addlw	48
  2567  00D8                     L8:	
  2568  00D8  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2569                           
  2570                           ;main_Master.c: 312:             if (obj_array[1] == 0 && obj_array[0] == 0){
  2571  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  2572  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  2573  00DF  084F               	movf	_obj_array,w
  2574  00E0  3E02               	addlw	2
  2575  00E1  0084               	movwf	4
  2576  00E2  1383               	bcf	3,7	;select IRP bank0
  2577  00E3  0800               	movf	0,w
  2578  00E4  00B7               	movwf	??_mostrarLCD
  2579  00E5  0A84               	incf	4,f
  2580  00E6  0800               	movf	0,w
  2581  00E7  00B8               	movwf	??_mostrarLCD+1
  2582  00E8  0837               	movf	??_mostrarLCD,w
  2583  00E9  0438               	iorwf	??_mostrarLCD+1,w
  2584  00EA  1D03               	btfss	3,2
  2585  00EB  28F9               	goto	l4154
  2586  00EC  084F               	movf	_obj_array,w
  2587  00ED  0084               	movwf	4
  2588  00EE  0800               	movf	0,w
  2589  00EF  00B7               	movwf	??_mostrarLCD
  2590  00F0  0A84               	incf	4,f
  2591  00F1  0800               	movf	0,w
  2592  00F2  00B8               	movwf	??_mostrarLCD+1
  2593  00F3  0837               	movf	??_mostrarLCD,w
  2594  00F4  0438               	iorwf	??_mostrarLCD+1,w
  2595  00F5  1D03               	btfss	3,2
  2596  00F6  28F9               	goto	l4154
  2597                           
  2598                           ;main_Master.c: 313:                 LCD_Write_Character(' ');
  2599  00F7  3020               	movlw	32
  2600  00F8  28FE               	goto	L9
  2601  00F9                     l4154:	
  2602                           ;main_Master.c: 314:             }
  2603                           
  2604                           
  2605                           ;main_Master.c: 316:                 LCD_Write_Character('0' + obj_array[1]);
  2606  00F9  084F               	movf	_obj_array,w
  2607  00FA  3E02               	addlw	2
  2608  00FB  0084               	movwf	4
  2609  00FC  0800               	movf	0,w
  2610  00FD  3E30               	addlw	48
  2611  00FE                     L9:	
  2612  00FE  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2613                           
  2614                           ;main_Master.c: 318:             LCD_Write_Character('0' + obj_array[2]);
  2615                           
  2616                           ;main_Master.c: 317:             }
  2617  0103  1283               	bcf	3,5	;RP0=0, select bank0
  2618  0104  1303               	bcf	3,6	;RP1=0, select bank0
  2619  0105  084F               	movf	_obj_array,w
  2620  0106  3E04               	addlw	4
  2621  0107  0084               	movwf	4
  2622  0108  1383               	bcf	3,7	;select IRP bank0
  2623  0109  0800               	movf	0,w
  2624  010A  3E30               	addlw	48
  2625  010B  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2626                           
  2627                           ;main_Master.c: 319:             LCD_Write_Character(223);
  2628  0110  30DF               	movlw	223
  2629  0111  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2630                           
  2631                           ;main_Master.c: 320:             LCD_Write_Character('C');
  2632  0116  3043               	movlw	67
  2633  0117  120A  158A  20D8   	fcall	_LCD_Write_Character
  2634                           
  2635                           ;main_Master.c: 321:             break;
  2636  011A  0008               	return
  2637  011B                     l4160:	
  2638                           
  2639                           ;main_Master.c: 323:             LCD_Set_Cursor(1,0);
  2640  011B  01F5               	clrf	LCD_Set_Cursor@columna
  2641  011C  3001               	movlw	1
  2642  011D  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2643                           
  2644                           ;main_Master.c: 324:             LCD_Write_String("Inclinacion:");
  2645  0122  3065               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2646  0123  120A  158A  217C  120A  118A  	fcall	_LCD_Write_String
  2647                           
  2648                           ;main_Master.c: 325:             LCD_Set_Cursor(2, 5);
  2649  0128  3005               	movlw	5
  2650  0129  1283               	bcf	3,5	;RP0=0, select bank0
  2651  012A  1303               	bcf	3,6	;RP1=0, select bank0
  2652  012B  00B7               	movwf	??_mostrarLCD
  2653  012C  0837               	movf	??_mostrarLCD,w
  2654  012D  00F5               	movwf	LCD_Set_Cursor@columna
  2655  012E  3002               	movlw	2
  2656  012F  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2657                           
  2658                           ;main_Master.c: 329:             LCD_Set_Cursor(2, 5);
  2659  0134  3005               	movlw	5
  2660  0135  1283               	bcf	3,5	;RP0=0, select bank0
  2661  0136  1303               	bcf	3,6	;RP1=0, select bank0
  2662  0137  00B7               	movwf	??_mostrarLCD
  2663  0138  0837               	movf	??_mostrarLCD,w
  2664  0139  00F5               	movwf	LCD_Set_Cursor@columna
  2665  013A  3002               	movlw	2
  2666  013B  120A  118A  26D2   	fcall	_LCD_Set_Cursor
  2667                           
  2668                           ;main_Master.c: 330:             if(inclinacion == 0){
  2669  013E  0008               	return
  2670  013F                     l4168:	
  2671                           
  2672                           ;main_Master.c: 342:             LCD_Set_Cursor(1,0);
  2673  013F  01F5               	clrf	LCD_Set_Cursor@columna
  2674  0140  3001               	movlw	1
  2675  0141  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2676                           
  2677                           ;main_Master.c: 343:             LCD_Write_String("Humedad:");
  2678  0146  3096               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2679  0147  120A  158A  217C  120A  118A  	fcall	_LCD_Write_String
  2680                           
  2681                           ;main_Master.c: 344:             LCD_Set_Cursor(2,4);
  2682  014C  3004               	movlw	4
  2683  014D  1283               	bcf	3,5	;RP0=0, select bank0
  2684  014E  1303               	bcf	3,6	;RP1=0, select bank0
  2685  014F  00B7               	movwf	??_mostrarLCD
  2686  0150  0837               	movf	??_mostrarLCD,w
  2687  0151  00F5               	movwf	LCD_Set_Cursor@columna
  2688  0152  3002               	movlw	2
  2689  0153  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2690                           
  2691                           ;main_Master.c: 345:             LCD_Write_Character(3);
  2692  0158  3003               	movlw	3
  2693  0159  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2694                           
  2695                           ;main_Master.c: 346:             LCD_Write_Character(' ');
  2696  015E  3020               	movlw	32
  2697  015F  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2698                           
  2699                           ;main_Master.c: 350:                 LCD_Write_Character(' ');
  2700                           
  2701                           ;main_Master.c: 349:             if(decenas_humedad == 0){
  2702  0164  3020               	movlw	32
  2703  0165  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2704                           
  2705                           ;main_Master.c: 355:             LCD_Write_Character('0'+unidades_humedad);
  2706                           
  2707                           ;main_Master.c: 354:             }
  2708  016A  3035               	movlw	53
  2709  016B  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2710                           
  2711                           ;main_Master.c: 356:             LCD_Write_Character('%');
  2712  0170  3025               	movlw	37
  2713  0171  120A  158A  20D8   	fcall	_LCD_Write_Character
  2714                           
  2715                           ;main_Master.c: 357:             break;
  2716  0174  0008               	return
  2717  0175                     l4184:	
  2718                           
  2719                           ;main_Master.c: 359:             LCD_Set_Cursor(1,0);
  2720  0175  01F5               	clrf	LCD_Set_Cursor@columna
  2721  0176  3001               	movlw	1
  2722  0177  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2723                           
  2724                           ;main_Master.c: 360:             LCD_Write_String("Atr");
  2725  017C  30AA               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2726  017D  120A  158A  217C  120A  118A  	fcall	_LCD_Write_String
  2727                           
  2728                           ;main_Master.c: 361:             LCD_Write_Character(0);
  2729  0182  3000               	movlw	0
  2730  0183  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2731                           
  2732                           ;main_Master.c: 362:             LCD_Write_String("s: | Frente:");
  2733  0188  3058               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2734  0189  120A  158A  217C  120A  118A  	fcall	_LCD_Write_String
  2735                           
  2736                           ;main_Master.c: 363:             LCD_Set_Cursor(2,2);
  2737  018E  3002               	movlw	2
  2738  018F  1283               	bcf	3,5	;RP0=0, select bank0
  2739  0190  1303               	bcf	3,6	;RP1=0, select bank0
  2740  0191  00B7               	movwf	??_mostrarLCD
  2741  0192  0837               	movf	??_mostrarLCD,w
  2742  0193  00F5               	movwf	LCD_Set_Cursor@columna
  2743  0194  3002               	movlw	2
  2744  0195  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2745                           
  2746                           ;main_Master.c: 377:                 LCD_Write_String("----");
  2747                           
  2748                           ;main_Master.c: 364:             if(d_frente < 100){
  2749  019A  30A5               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2750  019B  120A  158A  217C  120A  118A  	fcall	_LCD_Write_String
  2751                           
  2752                           ;main_Master.c: 380:             LCD_Set_Cursor(2,7);
  2753                           
  2754                           ;main_Master.c: 378:             }
  2755  01A0  3007               	movlw	7
  2756  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  2757  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  2758  01A3  00B7               	movwf	??_mostrarLCD
  2759  01A4  0837               	movf	??_mostrarLCD,w
  2760  01A5  00F5               	movwf	LCD_Set_Cursor@columna
  2761  01A6  3002               	movlw	2
  2762  01A7  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2763                           
  2764                           ;main_Master.c: 381:             LCD_Write_Character('|');
  2765  01AC  307C               	movlw	124
  2766  01AD  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2767                           
  2768                           ;main_Master.c: 382:             LCD_Set_Cursor(2,11);
  2769  01B2  300B               	movlw	11
  2770  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  2771  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  2772  01B5  00B7               	movwf	??_mostrarLCD
  2773  01B6  0837               	movf	??_mostrarLCD,w
  2774  01B7  00F5               	movwf	LCD_Set_Cursor@columna
  2775  01B8  3002               	movlw	2
  2776  01B9  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2777                           
  2778                           ;main_Master.c: 396:                 LCD_Write_String("----");
  2779                           
  2780                           ;main_Master.c: 383:             if(d_atras < 100){
  2781  01BE  30A5               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2782  01BF  120A  158A  217C   	fcall	_LCD_Write_String
  2783  01C2  0008               	return
  2784  01C3                     l4220:	
  2785                           
  2786                           ;main_Master.c: 400:             LCD_Set_Cursor(1, 0);
  2787  01C3  01F5               	clrf	LCD_Set_Cursor@columna
  2788  01C4  3001               	movlw	1
  2789  01C5  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2790                           
  2791                           ;main_Master.c: 401:             LCD_Write_String("Tomar datos:");
  2792  01CA  3072               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2793  01CB  120A  158A  217C  120A  118A  	fcall	_LCD_Write_String
  2794                           
  2795                           ;main_Master.c: 402:             LCD_Set_Cursor(2,1);
  2796  01D0  01F5               	clrf	LCD_Set_Cursor@columna
  2797  01D1  0AF5               	incf	LCD_Set_Cursor@columna,f
  2798  01D2  3002               	movlw	2
  2799  01D3  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2800                           
  2801                           ;main_Master.c: 403:             LCD_Write_Character(velocidad + '0');
  2802  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  2803  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  2804  01DA  0852               	movf	_velocidad,w
  2805  01DB  3E30               	addlw	48
  2806  01DC  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2807                           
  2808                           ;main_Master.c: 404:             LCD_Set_Cursor(2,8);
  2809  01E1  3008               	movlw	8
  2810  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2811  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2812  01E4  00B7               	movwf	??_mostrarLCD
  2813  01E5  0837               	movf	??_mostrarLCD,w
  2814  01E6  00F5               	movwf	LCD_Set_Cursor@columna
  2815  01E7  3002               	movlw	2
  2816  01E8  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2817                           
  2818                           ;main_Master.c: 405:             LCD_Write_Character('0' + largo);
  2819  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  2820  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  2821  01EF  084D               	movf	_largo,w
  2822  01F0  3E30               	addlw	48
  2823  01F1  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2824                           
  2825                           ;main_Master.c: 406:             LCD_Write_String("x ");
  2826  01F6  30AE               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2827  01F7  120A  158A  217C  120A  118A  	fcall	_LCD_Write_String
  2828                           
  2829                           ;main_Master.c: 407:             LCD_Write_Character('0' + ancho);
  2830  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  2831  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  2832  01FE  084C               	movf	_ancho,w
  2833  01FF  3E30               	addlw	48
  2834  0200  120A  158A  20D8   	fcall	_LCD_Write_Character
  2835                           
  2836                           ;main_Master.c: 408:             break;
  2837  0203  0008               	return
  2838  0204                     l4230:	
  2839                           
  2840                           ;main_Master.c: 410:             LCD_Set_Cursor(2,0);
  2841  0204  01F5               	clrf	LCD_Set_Cursor@columna
  2842  0205  3002               	movlw	2
  2843  0206  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2844                           
  2845                           ;main_Master.c: 411:             LCD_Write_Character(4);
  2846  020B  3004               	movlw	4
  2847  020C  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2848                           
  2849                           ;main_Master.c: 412:             LCD_Write_Character(velocidad + '0');
  2850  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2851  0212  1303               	bcf	3,6	;RP1=0, select bank0
  2852  0213  0852               	movf	_velocidad,w
  2853  0214  3E30               	addlw	48
  2854  0215  120A  158A  20D8   	fcall	_LCD_Write_Character
  2855                           
  2856                           ;main_Master.c: 413:             break;
  2857  0218  0008               	return
  2858  0219                     l4236:	
  2859                           
  2860                           ;main_Master.c: 415:             LCD_Set_Cursor(2,0);
  2861  0219  01F5               	clrf	LCD_Set_Cursor@columna
  2862  021A  3002               	movlw	2
  2863  021B  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2864                           
  2865                           ;main_Master.c: 416:             LCD_Write_Character(' ');
  2866  0220  3020               	movlw	32
  2867  0221  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2868                           
  2869                           ;main_Master.c: 417:             LCD_Set_Cursor(2,7);
  2870  0226  3007               	movlw	7
  2871  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2872  0228  1303               	bcf	3,6	;RP1=0, select bank0
  2873  0229  00B7               	movwf	??_mostrarLCD
  2874  022A  0837               	movf	??_mostrarLCD,w
  2875  022B  00F5               	movwf	LCD_Set_Cursor@columna
  2876  022C  3002               	movlw	2
  2877  022D  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2878                           
  2879                           ;main_Master.c: 418:             LCD_Write_Character(4);
  2880  0232  3004               	movlw	4
  2881  0233  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2882                           
  2883                           ;main_Master.c: 419:             LCD_Write_Character('0' + largo);
  2884  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2885  0239  1303               	bcf	3,6	;RP1=0, select bank0
  2886  023A  084D               	movf	_largo,w
  2887  023B  3E30               	addlw	48
  2888  023C  120A  158A  20D8   	fcall	_LCD_Write_Character
  2889                           
  2890                           ;main_Master.c: 420:             break;
  2891  023F  0008               	return
  2892  0240                     l4242:	
  2893                           
  2894                           ;main_Master.c: 422:             LCD_Set_Cursor(2,7);
  2895  0240  3007               	movlw	7
  2896  0241  00B7               	movwf	??_mostrarLCD
  2897  0242  0837               	movf	??_mostrarLCD,w
  2898  0243  00F5               	movwf	LCD_Set_Cursor@columna
  2899  0244  3002               	movlw	2
  2900  0245  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2901                           
  2902                           ;main_Master.c: 423:             LCD_Write_Character(' ');
  2903  024A  3020               	movlw	32
  2904  024B  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2905                           
  2906                           ;main_Master.c: 424:             LCD_Set_Cursor(2,10);
  2907  0250  300A               	movlw	10
  2908  0251  1283               	bcf	3,5	;RP0=0, select bank0
  2909  0252  1303               	bcf	3,6	;RP1=0, select bank0
  2910  0253  00B7               	movwf	??_mostrarLCD
  2911  0254  0837               	movf	??_mostrarLCD,w
  2912  0255  00F5               	movwf	LCD_Set_Cursor@columna
  2913  0256  3002               	movlw	2
  2914  0257  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2915                           
  2916                           ;main_Master.c: 425:             LCD_Write_Character(4);
  2917  025C  3004               	movlw	4
  2918  025D  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2919                           
  2920                           ;main_Master.c: 426:             LCD_Write_Character('0' + ancho);
  2921  0262  1283               	bcf	3,5	;RP0=0, select bank0
  2922  0263  1303               	bcf	3,6	;RP1=0, select bank0
  2923  0264  084C               	movf	_ancho,w
  2924  0265  3E30               	addlw	48
  2925  0266  120A  158A  20D8   	fcall	_LCD_Write_Character
  2926                           
  2927                           ;main_Master.c: 427:             break;
  2928  0269  0008               	return
  2929  026A                     l4248:	
  2930                           
  2931                           ;main_Master.c: 429:             LCD_Set_Cursor(2,10);
  2932  026A  300A               	movlw	10
  2933  026B  00B7               	movwf	??_mostrarLCD
  2934  026C  0837               	movf	??_mostrarLCD,w
  2935  026D  00F5               	movwf	LCD_Set_Cursor@columna
  2936  026E  3002               	movlw	2
  2937  026F  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2938                           
  2939                           ;main_Master.c: 430:             LCD_Write_Character(' ');
  2940  0274  3020               	movlw	32
  2941  0275  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  2942                           
  2943                           ;main_Master.c: 431:             LCD_Set_Cursor(2,15);
  2944  027A  300F               	movlw	15
  2945  027B  1283               	bcf	3,5	;RP0=0, select bank0
  2946  027C  1303               	bcf	3,6	;RP1=0, select bank0
  2947  027D  00B7               	movwf	??_mostrarLCD
  2948  027E  0837               	movf	??_mostrarLCD,w
  2949  027F  00F5               	movwf	LCD_Set_Cursor@columna
  2950  0280  3002               	movlw	2
  2951  0281  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2952                           
  2953                           ;main_Master.c: 432:             LCD_Write_Character(1);
  2954  0286  3001               	movlw	1
  2955  0287  120A  158A  20D8   	fcall	_LCD_Write_Character
  2956                           
  2957                           ;main_Master.c: 433:             break;
  2958  028A  0008               	return
  2959  028B                     l4254:	
  2960                           
  2961                           ;main_Master.c: 435:             LCD_Set_Cursor(1,0);
  2962  028B  01F5               	clrf	LCD_Set_Cursor@columna
  2963  028C  3001               	movlw	1
  2964  028D  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  2965                           
  2966                           ;main_Master.c: 436:             LCD_Write_String("Vamonos Perros!");
  2967  0292  303A               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2968  0293  120A  158A  217C  120A  118A  	fcall	_LCD_Write_String
  2969                           
  2970                           ;main_Master.c: 438:             I2C_Master_Start();
  2971  0298  120A  158A  20A9  120A  118A  	fcall	_I2C_Master_Start
  2972                           
  2973                           ;main_Master.c: 439:             I2C_Master_Write(0x30);
  2974  029D  3030               	movlw	48
  2975  029E  1283               	bcf	3,5	;RP0=0, select bank0
  2976  029F  1303               	bcf	3,6	;RP1=0, select bank0
  2977  02A0  00AD               	movwf	I2C_Master_Write@d
  2978  02A1  3000               	movlw	0
  2979  02A2  00AE               	movwf	I2C_Master_Write@d+1
  2980  02A3  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  2981                           
  2982                           ;main_Master.c: 440:             I2C_Master_Write(0x69);
  2983  02A8  3069               	movlw	105
  2984  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  2985  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  2986  02AB  00AD               	movwf	I2C_Master_Write@d
  2987  02AC  3000               	movlw	0
  2988  02AD  00AE               	movwf	I2C_Master_Write@d+1
  2989  02AE  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  2990                           
  2991                           ;main_Master.c: 441:             I2C_Master_Write(largo);
  2992  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2993  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  2994  02B5  084D               	movf	_largo,w
  2995  02B6  00B7               	movwf	??_mostrarLCD
  2996  02B7  01B8               	clrf	??_mostrarLCD+1
  2997  02B8  0837               	movf	??_mostrarLCD,w
  2998  02B9  00AD               	movwf	I2C_Master_Write@d
  2999  02BA  0838               	movf	??_mostrarLCD+1,w
  3000  02BB  00AE               	movwf	I2C_Master_Write@d+1
  3001  02BC  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  3002                           
  3003                           ;main_Master.c: 442:             I2C_Master_Write(ancho);
  3004  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  3005  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  3006  02C3  084C               	movf	_ancho,w
  3007  02C4  00B7               	movwf	??_mostrarLCD
  3008  02C5  01B8               	clrf	??_mostrarLCD+1
  3009  02C6  0837               	movf	??_mostrarLCD,w
  3010  02C7  00AD               	movwf	I2C_Master_Write@d
  3011  02C8  0838               	movf	??_mostrarLCD+1,w
  3012  02C9  00AE               	movwf	I2C_Master_Write@d+1
  3013  02CA  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  3014                           
  3015                           ;main_Master.c: 443:             I2C_Master_Write(velocidad);
  3016  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  3017  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  3018  02D1  0852               	movf	_velocidad,w
  3019  02D2  00B7               	movwf	??_mostrarLCD
  3020  02D3  01B8               	clrf	??_mostrarLCD+1
  3021  02D4  0837               	movf	??_mostrarLCD,w
  3022  02D5  00AD               	movwf	I2C_Master_Write@d
  3023  02D6  0838               	movf	??_mostrarLCD+1,w
  3024  02D7  00AE               	movwf	I2C_Master_Write@d+1
  3025  02D8  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  3026                           
  3027                           ;main_Master.c: 444:             I2C_Master_Stop();
  3028  02DD  120A  158A  20B0  120A  118A  	fcall	_I2C_Master_Stop
  3029                           
  3030                           ;main_Master.c: 446:             _delay((unsigned long)((500)*(4000000/4000.0)));
  3031  02E2  3003               	movlw	3
  3032  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  3033  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  3034  02E5  00B9               	movwf	??_mostrarLCD+2
  3035  02E6  308A               	movlw	138
  3036  02E7  00B8               	movwf	??_mostrarLCD+1
  3037  02E8  3055               	movlw	85
  3038  02E9  00B7               	movwf	??_mostrarLCD
  3039  02EA                     u1907:	
  3040  02EA  0BB7               	decfsz	??_mostrarLCD,f
  3041  02EB  2AEA               	goto	u1907
  3042  02EC  0BB8               	decfsz	??_mostrarLCD+1,f
  3043  02ED  2AEA               	goto	u1907
  3044  02EE  0BB9               	decfsz	??_mostrarLCD+2,f
  3045  02EF  2AEA               	goto	u1907
  3046                           
  3047                           ;main_Master.c: 447:             LCD_clear();
  3048  02F0  120A  158A  212F   	fcall	_LCD_clear
  3049                           
  3050                           ;main_Master.c: 448:             estado = 0;
  3051  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  3052  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  3053  02F5  01D4               	clrf	_estado
  3054                           
  3055                           ;main_Master.c: 449:             break;
  3056  02F6  0008               	return
  3057  02F7                     l4276:	
  3058                           
  3059                           ;main_Master.c: 451:             LCD_Set_Cursor(1,9);
  3060  02F7  3009               	movlw	9
  3061  02F8  00B7               	movwf	??_mostrarLCD
  3062  02F9  0837               	movf	??_mostrarLCD,w
  3063  02FA  00F5               	movwf	LCD_Set_Cursor@columna
  3064  02FB  3001               	movlw	1
  3065  02FC  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  3066                           
  3067                           ;main_Master.c: 452:             LCD_Write_String("ERROR");
  3068  0301  309F               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  3069  0302  120A  158A  217C   	fcall	_LCD_Write_String
  3070                           
  3071                           ;main_Master.c: 453:     }
  3072  0305  0008               	return
  3073  0306                     l4278:	
  3074  0306  083A               	movf	mostrarLCD@pantalla,w
  3075  0307  00B7               	movwf	??_mostrarLCD
  3076  0308  01B8               	clrf	??_mostrarLCD+1
  3077                           
  3078                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3079                           ; Switch size 1, requested type "simple"
  3080                           ; Number of cases is 1, Range of values is 0 to 0
  3081                           ; switch strategies available:
  3082                           ; Name         Instructions Cycles
  3083                           ; simple_byte            4     3 (average)
  3084                           ; direct_byte           11     8 (fixed)
  3085                           ; jumptable            260     6 (fixed)
  3086                           ;	Chosen strategy is simple_byte
  3087  0309  0838               	movf	??_mostrarLCD+1,w
  3088  030A  3A00               	xorlw	0	; case 0
  3089  030B  1903               	skipnz
  3090  030C  2B0E               	goto	l4828
  3091  030D  2AF7               	goto	l4276
  3092  030E                     l4828:	
  3093                           
  3094                           ; Switch size 1, requested type "simple"
  3095                           ; Number of cases is 11, Range of values is 0 to 10
  3096                           ; switch strategies available:
  3097                           ; Name         Instructions Cycles
  3098                           ; simple_byte           34    18 (average)
  3099                           ; direct_byte           41     8 (fixed)
  3100                           ; jumptable            260     6 (fixed)
  3101                           ;	Chosen strategy is simple_byte
  3102  030E  0837               	movf	??_mostrarLCD,w
  3103  030F  3A00               	xorlw	0	; case 0
  3104  0310  1903               	skipnz
  3105  0311  282D               	goto	l4120
  3106  0312  3A01               	xorlw	1	; case 1
  3107  0313  1903               	skipnz
  3108  0314  2842               	goto	l4122
  3109  0315  3A03               	xorlw	3	; case 2
  3110  0316  1903               	skipnz
  3111  0317  291B               	goto	l4160
  3112  0318  3A01               	xorlw	1	; case 3
  3113  0319  1903               	skipnz
  3114  031A  293F               	goto	l4168
  3115  031B  3A07               	xorlw	7	; case 4
  3116  031C  1903               	skipnz
  3117  031D  2975               	goto	l4184
  3118  031E  3A01               	xorlw	1	; case 5
  3119  031F  1903               	skipnz
  3120  0320  29C3               	goto	l4220
  3121  0321  3A03               	xorlw	3	; case 6
  3122  0322  1903               	skipnz
  3123  0323  2A04               	goto	l4230
  3124  0324  3A01               	xorlw	1	; case 7
  3125  0325  1903               	skipnz
  3126  0326  2A19               	goto	l4236
  3127  0327  3A0F               	xorlw	15	; case 8
  3128  0328  1903               	skipnz
  3129  0329  2A40               	goto	l4242
  3130  032A  3A01               	xorlw	1	; case 9
  3131  032B  1903               	skipnz
  3132  032C  2A6A               	goto	l4248
  3133  032D  3A03               	xorlw	3	; case 10
  3134  032E  1903               	skipnz
  3135  032F  2A8B               	goto	l4254
  3136  0330  2AF7               	goto	l4276
  3137  0331  0008               	return
  3138  0332                     __end_of_mostrarLCD:	
  3139                           
  3140                           	psect	text5
  3141  0C31                     __ptext5:	
  3142 ;; *************** function _uint_to_array *****************
  3143 ;; Defined at:
  3144 ;;		line 181 in file "LCD_8bits.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  numero          1    wreg     unsigned char 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  numero          1   22[BANK0 ] unsigned char 
  3149 ;;  resultado       6   16[BANK0 ] unsigned int [3]
  3150 ;;  centenas        1   15[BANK0 ] unsigned char 
  3151 ;;  decenas         1   14[BANK0 ] unsigned char 
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  1    wreg      PTR unsigned int 
  3154 ;; Registers used:
  3155 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3161 ;;      Params:         0       0       0       0       0
  3162 ;;      Locals:         0       9       0       0       0
  3163 ;;      Temps:          0       6       0       0       0
  3164 ;;      Totals:         0      15       0       0       0
  3165 ;;Total ram usage:       15 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; Hardware stack levels required when called:    2
  3168 ;; This function calls:
  3169 ;;		___awdiv
  3170 ;;		___wmul
  3171 ;; This function is called by:
  3172 ;;		_mostrarLCD
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           
  3177                           ;psect for function _uint_to_array
  3178  0C31                     _uint_to_array:	
  3179                           
  3180                           ;incstack = 0
  3181                           ; Regs used in _uint_to_array: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3182                           ;uint_to_array@numero stored from wreg
  3183  0C31  1283               	bcf	3,5	;RP0=0, select bank0
  3184  0C32  1303               	bcf	3,6	;RP1=0, select bank0
  3185  0C33  00B6               	movwf	uint_to_array@numero
  3186                           
  3187                           ;LCD_8bits.c: 182:     uint16_t resultado[3] = {0,0,0};
  3188  0C34  3030               	movlw	uint_to_array@resultado& (0+255)
  3189  0C35  0084               	movwf	4
  3190  0C36  3006               	movlw	6
  3191  0C37  00FF               	movwf	127
  3192  0C38                     u1640:	
  3193  0C38  1383               	bcf	3,7	;select IRP bank0
  3194  0C39  0180               	clrf	0
  3195  0C3A  0A84               	incf	4,f
  3196  0C3B  0BFF               	decfsz	127,f
  3197  0C3C  2C38               	goto	u1640
  3198                           
  3199                           ;LCD_8bits.c: 183:     resultado[0] = numero/100;
  3200  0C3D  3064               	movlw	100
  3201  0C3E  00A0               	movwf	___awdiv@divisor
  3202  0C3F  3000               	movlw	0
  3203  0C40  00A1               	movwf	___awdiv@divisor+1
  3204  0C41  0836               	movf	uint_to_array@numero,w
  3205  0C42  00A8               	movwf	??_uint_to_array
  3206  0C43  01A9               	clrf	??_uint_to_array+1
  3207  0C44  0828               	movf	??_uint_to_array,w
  3208  0C45  00A2               	movwf	___awdiv@dividend
  3209  0C46  0829               	movf	??_uint_to_array+1,w
  3210  0C47  00A3               	movwf	___awdiv@dividend+1
  3211  0C48  120A  158A  22A0  120A  158A  	fcall	___awdiv
  3212  0C4D  1283               	bcf	3,5	;RP0=0, select bank0
  3213  0C4E  1303               	bcf	3,6	;RP1=0, select bank0
  3214  0C4F  0821               	movf	?___awdiv+1,w
  3215  0C50  00B1               	movwf	uint_to_array@resultado+1
  3216  0C51  0820               	movf	?___awdiv,w
  3217  0C52  00B0               	movwf	uint_to_array@resultado
  3218                           
  3219                           ;LCD_8bits.c: 184:     uint8_t centenas = resultado[0];
  3220  0C53  0830               	movf	uint_to_array@resultado,w
  3221  0C54  00A8               	movwf	??_uint_to_array
  3222  0C55  0828               	movf	??_uint_to_array,w
  3223  0C56  00AF               	movwf	uint_to_array@centenas
  3224                           
  3225                           ;LCD_8bits.c: 185:     resultado[1] = (numero - (centenas *100))/10;
  3226  0C57  300A               	movlw	10
  3227  0C58  00A0               	movwf	___awdiv@divisor
  3228  0C59  3000               	movlw	0
  3229  0C5A  00A1               	movwf	___awdiv@divisor+1
  3230  0C5B  082F               	movf	uint_to_array@centenas,w
  3231  0C5C  00A8               	movwf	??_uint_to_array
  3232  0C5D  01A9               	clrf	??_uint_to_array+1
  3233  0C5E  0828               	movf	??_uint_to_array,w
  3234  0C5F  00F2               	movwf	___wmul@multiplier
  3235  0C60  0829               	movf	??_uint_to_array+1,w
  3236  0C61  00F3               	movwf	___wmul@multiplier+1
  3237  0C62  309C               	movlw	156
  3238  0C63  00F4               	movwf	___wmul@multiplicand
  3239  0C64  30FF               	movlw	255
  3240  0C65  00F5               	movwf	___wmul@multiplicand+1
  3241  0C66  120A  158A  215B  120A  158A  	fcall	___wmul
  3242  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  3243  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  3244  0C6D  0836               	movf	uint_to_array@numero,w
  3245  0C6E  0772               	addwf	?___wmul,w
  3246  0C6F  00A2               	movwf	___awdiv@dividend
  3247  0C70  0873               	movf	?___wmul+1,w
  3248  0C71  1803               	skipnc
  3249  0C72  0A73               	incf	?___wmul+1,w
  3250  0C73  00A3               	movwf	___awdiv@dividend+1
  3251  0C74  120A  158A  22A0  120A  158A  	fcall	___awdiv
  3252  0C79  1283               	bcf	3,5	;RP0=0, select bank0
  3253  0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  3254  0C7B  0821               	movf	?___awdiv+1,w
  3255  0C7C  00B3               	movwf	uint_to_array@resultado+3
  3256  0C7D  0820               	movf	?___awdiv,w
  3257  0C7E  00B2               	movwf	uint_to_array@resultado+2
  3258                           
  3259                           ;LCD_8bits.c: 186:     uint8_t decenas = resultado[1];
  3260  0C7F  0832               	movf	uint_to_array@resultado+2,w
  3261  0C80  00A8               	movwf	??_uint_to_array
  3262  0C81  0828               	movf	??_uint_to_array,w
  3263  0C82  00AE               	movwf	uint_to_array@decenas
  3264                           
  3265                           ;LCD_8bits.c: 187:     resultado[2] = numero -(centenas*100+decenas*10);
  3266  0C83  082F               	movf	uint_to_array@centenas,w
  3267  0C84  00A8               	movwf	??_uint_to_array
  3268  0C85  01A9               	clrf	??_uint_to_array+1
  3269  0C86  0828               	movf	??_uint_to_array,w
  3270  0C87  00F2               	movwf	___wmul@multiplier
  3271  0C88  0829               	movf	??_uint_to_array+1,w
  3272  0C89  00F3               	movwf	___wmul@multiplier+1
  3273  0C8A  309C               	movlw	156
  3274  0C8B  00F4               	movwf	___wmul@multiplicand
  3275  0C8C  30FF               	movlw	255
  3276  0C8D  00F5               	movwf	___wmul@multiplicand+1
  3277  0C8E  120A  158A  215B  120A  158A  	fcall	___wmul
  3278  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  3279  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  3280  0C95  0836               	movf	uint_to_array@numero,w
  3281  0C96  0772               	addwf	?___wmul,w
  3282  0C97  00AA               	movwf	??_uint_to_array+2
  3283  0C98  0873               	movf	?___wmul+1,w
  3284  0C99  1803               	skipnc
  3285  0C9A  0A73               	incf	?___wmul+1,w
  3286  0C9B  00AB               	movwf	??_uint_to_array+3
  3287  0C9C  082E               	movf	uint_to_array@decenas,w
  3288  0C9D  00AC               	movwf	??_uint_to_array+4
  3289  0C9E  01AD               	clrf	??_uint_to_array+5
  3290  0C9F  082C               	movf	??_uint_to_array+4,w
  3291  0CA0  00F2               	movwf	___wmul@multiplier
  3292  0CA1  082D               	movf	??_uint_to_array+5,w
  3293  0CA2  00F3               	movwf	___wmul@multiplier+1
  3294  0CA3  30F6               	movlw	246
  3295  0CA4  00F4               	movwf	___wmul@multiplicand
  3296  0CA5  30FF               	movlw	255
  3297  0CA6  00F5               	movwf	___wmul@multiplicand+1
  3298  0CA7  120A  158A  215B   	fcall	___wmul
  3299  0CAA  0872               	movf	?___wmul,w
  3300  0CAB  1283               	bcf	3,5	;RP0=0, select bank0
  3301  0CAC  1303               	bcf	3,6	;RP1=0, select bank0
  3302  0CAD  072A               	addwf	??_uint_to_array+2,w
  3303  0CAE  00B4               	movwf	uint_to_array@resultado+4
  3304  0CAF  0873               	movf	?___wmul+1,w
  3305  0CB0  1803               	skipnc
  3306  0CB1  0A73               	incf	?___wmul+1,w
  3307  0CB2  072B               	addwf	??_uint_to_array+3,w
  3308  0CB3  00B5               	movwf	uint_to_array@resultado+5
  3309                           
  3310                           ;LCD_8bits.c: 188:     return(resultado);
  3311  0CB4  3030               	movlw	(low (uint_to_array@resultado| 0))& (0+255)
  3312  0CB5  0008               	return
  3313  0CB6                     __end_of_uint_to_array:	
  3314                           
  3315                           	psect	text6
  3316  095B                     __ptext6:	
  3317 ;; *************** function ___wmul *****************
  3318 ;; Defined at:
  3319 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;  multiplier      2    2[COMMON] unsigned int 
  3322 ;;  multiplicand    2    4[COMMON] unsigned int 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;  product         2    6[COMMON] unsigned int 
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  2    2[COMMON] unsigned int 
  3327 ;; Registers used:
  3328 ;;		wreg, status,2, status,0
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3334 ;;      Params:         4       0       0       0       0
  3335 ;;      Locals:         2       0       0       0       0
  3336 ;;      Temps:          0       0       0       0       0
  3337 ;;      Totals:         6       0       0       0       0
  3338 ;;Total ram usage:        6 bytes
  3339 ;; Hardware stack levels used:    1
  3340 ;; Hardware stack levels required when called:    1
  3341 ;; This function calls:
  3342 ;;		Nothing
  3343 ;; This function is called by:
  3344 ;;		_uint_to_array
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           
  3349                           ;psect for function ___wmul
  3350  095B                     ___wmul:	
  3351                           
  3352                           ;incstack = 0
  3353                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3354  095B  01F6               	clrf	___wmul@product
  3355  095C  01F7               	clrf	___wmul@product+1
  3356  095D                     l2664:	
  3357  095D  1C72               	btfss	___wmul@multiplier,0
  3358  095E  2965               	goto	l564
  3359  095F  0874               	movf	___wmul@multiplicand,w
  3360  0960  07F6               	addwf	___wmul@product,f
  3361  0961  1803               	skipnc
  3362  0962  0AF7               	incf	___wmul@product+1,f
  3363  0963  0875               	movf	___wmul@multiplicand+1,w
  3364  0964  07F7               	addwf	___wmul@product+1,f
  3365  0965                     l564:	
  3366  0965  3001               	movlw	1
  3367  0966                     u965:	
  3368  0966  1003               	clrc
  3369  0967  0DF4               	rlf	___wmul@multiplicand,f
  3370  0968  0DF5               	rlf	___wmul@multiplicand+1,f
  3371  0969  3EFF               	addlw	-1
  3372  096A  1D03               	skipz
  3373  096B  2966               	goto	u965
  3374  096C  3001               	movlw	1
  3375  096D                     u975:	
  3376  096D  1003               	clrc
  3377  096E  0CF3               	rrf	___wmul@multiplier+1,f
  3378  096F  0CF2               	rrf	___wmul@multiplier,f
  3379  0970  3EFF               	addlw	-1
  3380  0971  1D03               	skipz
  3381  0972  296D               	goto	u975
  3382  0973  0872               	movf	___wmul@multiplier,w
  3383  0974  0473               	iorwf	___wmul@multiplier+1,w
  3384  0975  1D03               	btfss	3,2
  3385  0976  295D               	goto	l2664
  3386  0977  0877               	movf	___wmul@product+1,w
  3387  0978  00F3               	movwf	?___wmul+1
  3388  0979  0876               	movf	___wmul@product,w
  3389  097A  00F2               	movwf	?___wmul
  3390  097B  0008               	return
  3391  097C                     __end_of___wmul:	
  3392                           
  3393                           	psect	text7
  3394  0600                     __ptext7:	
  3395 ;; *************** function _display_Uhrzeit *****************
  3396 ;; Defined at:
  3397 ;;		line 238 in file "main_Master.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;  fila            1    wreg     unsigned char 
  3400 ;;  columna         1    8[BANK0 ] unsigned char 
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;  fila            1   12[BANK0 ] unsigned char 
  3403 ;;  Uhr_d           1   18[BANK0 ] unsigned char 
  3404 ;;  Uhr_u           1   17[BANK0 ] unsigned char 
  3405 ;;  min_d           1   16[BANK0 ] unsigned char 
  3406 ;;  min_u           1   15[BANK0 ] unsigned char 
  3407 ;;  seg_d           1   14[BANK0 ] unsigned char 
  3408 ;;  seg_u           1   13[BANK0 ] unsigned char 
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      void 
  3411 ;; Registers used:
  3412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3418 ;;      Params:         0       1       0       0       0
  3419 ;;      Locals:         0       7       0       0       0
  3420 ;;      Temps:          0       3       0       0       0
  3421 ;;      Totals:         0      11       0       0       0
  3422 ;;Total ram usage:       11 bytes
  3423 ;; Hardware stack levels used:    1
  3424 ;; Hardware stack levels required when called:    3
  3425 ;; This function calls:
  3426 ;;		_LCD_Set_Cursor
  3427 ;;		_LCD_Write_Character
  3428 ;;		___awdiv
  3429 ;;		___awmod
  3430 ;; This function is called by:
  3431 ;;		_mostrarLCD
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           
  3436                           ;psect for function _display_Uhrzeit
  3437  0600                     _display_Uhrzeit:	
  3438                           
  3439                           ;incstack = 0
  3440                           ; Regs used in _display_Uhrzeit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3441                           ;display_Uhrzeit@fila stored from wreg
  3442  0600  1283               	bcf	3,5	;RP0=0, select bank0
  3443  0601  1303               	bcf	3,6	;RP1=0, select bank0
  3444  0602  00AC               	movwf	display_Uhrzeit@fila
  3445                           
  3446                           ;main_Master.c: 239:     char seg_u = seg%10;
  3447  0603  300A               	movlw	10
  3448  0604  00F2               	movwf	___awmod@divisor
  3449  0605  3000               	movlw	0
  3450  0606  00F3               	movwf	___awmod@divisor+1
  3451  0607  0853               	movf	_seg,w
  3452  0608  00A9               	movwf	??_display_Uhrzeit
  3453  0609  01AA               	clrf	??_display_Uhrzeit+1
  3454  060A  0829               	movf	??_display_Uhrzeit,w
  3455  060B  00F4               	movwf	___awmod@dividend
  3456  060C  082A               	movf	??_display_Uhrzeit+1,w
  3457  060D  00F5               	movwf	___awmod@dividend+1
  3458  060E  120A  158A  2255  120A  118A  	fcall	___awmod
  3459  0613  0872               	movf	?___awmod,w
  3460  0614  1283               	bcf	3,5	;RP0=0, select bank0
  3461  0615  1303               	bcf	3,6	;RP1=0, select bank0
  3462  0616  00AB               	movwf	??_display_Uhrzeit+2
  3463  0617  082B               	movf	??_display_Uhrzeit+2,w
  3464  0618  00AD               	movwf	display_Uhrzeit@seg_u
  3465                           
  3466                           ;main_Master.c: 240:     char seg_d = seg/10;
  3467  0619  300A               	movlw	10
  3468  061A  00A0               	movwf	___awdiv@divisor
  3469  061B  3000               	movlw	0
  3470  061C  00A1               	movwf	___awdiv@divisor+1
  3471  061D  0853               	movf	_seg,w
  3472  061E  00A9               	movwf	??_display_Uhrzeit
  3473  061F  01AA               	clrf	??_display_Uhrzeit+1
  3474  0620  0829               	movf	??_display_Uhrzeit,w
  3475  0621  00A2               	movwf	___awdiv@dividend
  3476  0622  082A               	movf	??_display_Uhrzeit+1,w
  3477  0623  00A3               	movwf	___awdiv@dividend+1
  3478  0624  120A  158A  22A0  120A  118A  	fcall	___awdiv
  3479  0629  1283               	bcf	3,5	;RP0=0, select bank0
  3480  062A  1303               	bcf	3,6	;RP1=0, select bank0
  3481  062B  0820               	movf	?___awdiv,w
  3482  062C  00AB               	movwf	??_display_Uhrzeit+2
  3483  062D  082B               	movf	??_display_Uhrzeit+2,w
  3484  062E  00AE               	movwf	display_Uhrzeit@seg_d
  3485                           
  3486                           ;main_Master.c: 241:     char min_u = min%10;
  3487  062F  300A               	movlw	10
  3488  0630  00F2               	movwf	___awmod@divisor
  3489  0631  3000               	movlw	0
  3490  0632  00F3               	movwf	___awmod@divisor+1
  3491  0633  085E               	movf	_min,w
  3492  0634  00A9               	movwf	??_display_Uhrzeit
  3493  0635  01AA               	clrf	??_display_Uhrzeit+1
  3494  0636  0829               	movf	??_display_Uhrzeit,w
  3495  0637  00F4               	movwf	___awmod@dividend
  3496  0638  082A               	movf	??_display_Uhrzeit+1,w
  3497  0639  00F5               	movwf	___awmod@dividend+1
  3498  063A  120A  158A  2255  120A  118A  	fcall	___awmod
  3499  063F  0872               	movf	?___awmod,w
  3500  0640  1283               	bcf	3,5	;RP0=0, select bank0
  3501  0641  1303               	bcf	3,6	;RP1=0, select bank0
  3502  0642  00AB               	movwf	??_display_Uhrzeit+2
  3503  0643  082B               	movf	??_display_Uhrzeit+2,w
  3504  0644  00AF               	movwf	display_Uhrzeit@min_u
  3505                           
  3506                           ;main_Master.c: 242:     char min_d = min/10;
  3507  0645  300A               	movlw	10
  3508  0646  00A0               	movwf	___awdiv@divisor
  3509  0647  3000               	movlw	0
  3510  0648  00A1               	movwf	___awdiv@divisor+1
  3511  0649  085E               	movf	_min,w
  3512  064A  00A9               	movwf	??_display_Uhrzeit
  3513  064B  01AA               	clrf	??_display_Uhrzeit+1
  3514  064C  0829               	movf	??_display_Uhrzeit,w
  3515  064D  00A2               	movwf	___awdiv@dividend
  3516  064E  082A               	movf	??_display_Uhrzeit+1,w
  3517  064F  00A3               	movwf	___awdiv@dividend+1
  3518  0650  120A  158A  22A0  120A  118A  	fcall	___awdiv
  3519  0655  1283               	bcf	3,5	;RP0=0, select bank0
  3520  0656  1303               	bcf	3,6	;RP1=0, select bank0
  3521  0657  0820               	movf	?___awdiv,w
  3522  0658  00AB               	movwf	??_display_Uhrzeit+2
  3523  0659  082B               	movf	??_display_Uhrzeit+2,w
  3524  065A  00B0               	movwf	display_Uhrzeit@min_d
  3525                           
  3526                           ;main_Master.c: 243:     char Uhr_u = hora%10;
  3527  065B  300A               	movlw	10
  3528  065C  00F2               	movwf	___awmod@divisor
  3529  065D  3000               	movlw	0
  3530  065E  00F3               	movwf	___awmod@divisor+1
  3531  065F  085D               	movf	_hora,w
  3532  0660  00A9               	movwf	??_display_Uhrzeit
  3533  0661  01AA               	clrf	??_display_Uhrzeit+1
  3534  0662  0829               	movf	??_display_Uhrzeit,w
  3535  0663  00F4               	movwf	___awmod@dividend
  3536  0664  082A               	movf	??_display_Uhrzeit+1,w
  3537  0665  00F5               	movwf	___awmod@dividend+1
  3538  0666  120A  158A  2255  120A  118A  	fcall	___awmod
  3539  066B  0872               	movf	?___awmod,w
  3540  066C  1283               	bcf	3,5	;RP0=0, select bank0
  3541  066D  1303               	bcf	3,6	;RP1=0, select bank0
  3542  066E  00AB               	movwf	??_display_Uhrzeit+2
  3543  066F  082B               	movf	??_display_Uhrzeit+2,w
  3544  0670  00B1               	movwf	display_Uhrzeit@Uhr_u
  3545                           
  3546                           ;main_Master.c: 244:     char Uhr_d = hora/10;
  3547  0671  300A               	movlw	10
  3548  0672  00A0               	movwf	___awdiv@divisor
  3549  0673  3000               	movlw	0
  3550  0674  00A1               	movwf	___awdiv@divisor+1
  3551  0675  085D               	movf	_hora,w
  3552  0676  00A9               	movwf	??_display_Uhrzeit
  3553  0677  01AA               	clrf	??_display_Uhrzeit+1
  3554  0678  0829               	movf	??_display_Uhrzeit,w
  3555  0679  00A2               	movwf	___awdiv@dividend
  3556  067A  082A               	movf	??_display_Uhrzeit+1,w
  3557  067B  00A3               	movwf	___awdiv@dividend+1
  3558  067C  120A  158A  22A0  120A  118A  	fcall	___awdiv
  3559  0681  1283               	bcf	3,5	;RP0=0, select bank0
  3560  0682  1303               	bcf	3,6	;RP1=0, select bank0
  3561  0683  0820               	movf	?___awdiv,w
  3562  0684  00AB               	movwf	??_display_Uhrzeit+2
  3563  0685  082B               	movf	??_display_Uhrzeit+2,w
  3564  0686  00B2               	movwf	display_Uhrzeit@Uhr_d
  3565                           
  3566                           ;main_Master.c: 246:     LCD_Set_Cursor(fila, columna);
  3567  0687  0828               	movf	display_Uhrzeit@columna,w
  3568  0688  00A9               	movwf	??_display_Uhrzeit
  3569  0689  0829               	movf	??_display_Uhrzeit,w
  3570  068A  00F5               	movwf	LCD_Set_Cursor@columna
  3571  068B  082C               	movf	display_Uhrzeit@fila,w
  3572  068C  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  3573                           
  3574                           ;main_Master.c: 247:     LCD_Write_Character(Uhr_d + '0');
  3575  0691  1283               	bcf	3,5	;RP0=0, select bank0
  3576  0692  1303               	bcf	3,6	;RP1=0, select bank0
  3577  0693  0832               	movf	display_Uhrzeit@Uhr_d,w
  3578  0694  3E30               	addlw	48
  3579  0695  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  3580                           
  3581                           ;main_Master.c: 248:     LCD_Write_Character(Uhr_u + '0');
  3582  069A  1283               	bcf	3,5	;RP0=0, select bank0
  3583  069B  1303               	bcf	3,6	;RP1=0, select bank0
  3584  069C  0831               	movf	display_Uhrzeit@Uhr_u,w
  3585  069D  3E30               	addlw	48
  3586  069E  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  3587                           
  3588                           ;main_Master.c: 249:     LCD_Write_Character(':');
  3589  06A3  303A               	movlw	58
  3590  06A4  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  3591                           
  3592                           ;main_Master.c: 250:     LCD_Write_Character(min_d + '0');
  3593  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  3594  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  3595  06AB  0830               	movf	display_Uhrzeit@min_d,w
  3596  06AC  3E30               	addlw	48
  3597  06AD  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  3598                           
  3599                           ;main_Master.c: 251:     LCD_Write_Character(min_u + '0');
  3600  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  3601  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  3602  06B4  082F               	movf	display_Uhrzeit@min_u,w
  3603  06B5  3E30               	addlw	48
  3604  06B6  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  3605                           
  3606                           ;main_Master.c: 252:     LCD_Write_Character(':');
  3607  06BB  303A               	movlw	58
  3608  06BC  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  3609                           
  3610                           ;main_Master.c: 253:     LCD_Write_Character(seg_d + '0');
  3611  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  3612  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  3613  06C3  082E               	movf	display_Uhrzeit@seg_d,w
  3614  06C4  3E30               	addlw	48
  3615  06C5  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  3616                           
  3617                           ;main_Master.c: 254:     LCD_Write_Character(seg_u + '0');
  3618  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  3619  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  3620  06CC  082D               	movf	display_Uhrzeit@seg_u,w
  3621  06CD  3E30               	addlw	48
  3622  06CE  120A  158A  20D8   	fcall	_LCD_Write_Character
  3623  06D1  0008               	return
  3624  06D2                     __end_of_display_Uhrzeit:	
  3625                           
  3626                           	psect	text8
  3627  0528                     __ptext8:	
  3628 ;; *************** function _display_Datum *****************
  3629 ;; Defined at:
  3630 ;;		line 258 in file "main_Master.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  fila            1    wreg     unsigned char 
  3633 ;;  columna         1    8[BANK0 ] unsigned char 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  fila            1   12[BANK0 ] unsigned char 
  3636 ;;  jahr_d          1   18[BANK0 ] unsigned char 
  3637 ;;  jahr_u          1   17[BANK0 ] unsigned char 
  3638 ;;  mes_d           1   16[BANK0 ] unsigned char 
  3639 ;;  mes_u           1   15[BANK0 ] unsigned char 
  3640 ;;  dia_d           1   14[BANK0 ] unsigned char 
  3641 ;;  dia_u           1   13[BANK0 ] unsigned char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3651 ;;      Params:         0       1       0       0       0
  3652 ;;      Locals:         0       7       0       0       0
  3653 ;;      Temps:          0       3       0       0       0
  3654 ;;      Totals:         0      11       0       0       0
  3655 ;;Total ram usage:       11 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    3
  3658 ;; This function calls:
  3659 ;;		_LCD_Set_Cursor
  3660 ;;		_LCD_Write_Character
  3661 ;;		_LCD_Write_String
  3662 ;;		___awdiv
  3663 ;;		___awmod
  3664 ;; This function is called by:
  3665 ;;		_mostrarLCD
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           
  3670                           ;psect for function _display_Datum
  3671  0528                     _display_Datum:	
  3672                           
  3673                           ;incstack = 0
  3674                           ; Regs used in _display_Datum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3675                           ;display_Datum@fila stored from wreg
  3676  0528  1283               	bcf	3,5	;RP0=0, select bank0
  3677  0529  1303               	bcf	3,6	;RP1=0, select bank0
  3678  052A  00AC               	movwf	display_Datum@fila
  3679                           
  3680                           ;main_Master.c: 259:     char dia_u = datum%10;
  3681  052B  300A               	movlw	10
  3682  052C  00F2               	movwf	___awmod@divisor
  3683  052D  3000               	movlw	0
  3684  052E  00F3               	movwf	___awmod@divisor+1
  3685  052F  085B               	movf	_datum,w
  3686  0530  00A9               	movwf	??_display_Datum
  3687  0531  01AA               	clrf	??_display_Datum+1
  3688  0532  0829               	movf	??_display_Datum,w
  3689  0533  00F4               	movwf	___awmod@dividend
  3690  0534  082A               	movf	??_display_Datum+1,w
  3691  0535  00F5               	movwf	___awmod@dividend+1
  3692  0536  120A  158A  2255  120A  118A  	fcall	___awmod
  3693  053B  0872               	movf	?___awmod,w
  3694  053C  1283               	bcf	3,5	;RP0=0, select bank0
  3695  053D  1303               	bcf	3,6	;RP1=0, select bank0
  3696  053E  00AB               	movwf	??_display_Datum+2
  3697  053F  082B               	movf	??_display_Datum+2,w
  3698  0540  00AD               	movwf	display_Datum@dia_u
  3699                           
  3700                           ;main_Master.c: 260:     char dia_d = datum/10;
  3701  0541  300A               	movlw	10
  3702  0542  00A0               	movwf	___awdiv@divisor
  3703  0543  3000               	movlw	0
  3704  0544  00A1               	movwf	___awdiv@divisor+1
  3705  0545  085B               	movf	_datum,w
  3706  0546  00A9               	movwf	??_display_Datum
  3707  0547  01AA               	clrf	??_display_Datum+1
  3708  0548  0829               	movf	??_display_Datum,w
  3709  0549  00A2               	movwf	___awdiv@dividend
  3710  054A  082A               	movf	??_display_Datum+1,w
  3711  054B  00A3               	movwf	___awdiv@dividend+1
  3712  054C  120A  158A  22A0  120A  118A  	fcall	___awdiv
  3713  0551  1283               	bcf	3,5	;RP0=0, select bank0
  3714  0552  1303               	bcf	3,6	;RP1=0, select bank0
  3715  0553  0820               	movf	?___awdiv,w
  3716  0554  00AB               	movwf	??_display_Datum+2
  3717  0555  082B               	movf	??_display_Datum+2,w
  3718  0556  00AE               	movwf	display_Datum@dia_d
  3719                           
  3720                           ;main_Master.c: 261:     char mes_u = mes%10;
  3721  0557  300A               	movlw	10
  3722  0558  00F2               	movwf	___awmod@divisor
  3723  0559  3000               	movlw	0
  3724  055A  00F3               	movwf	___awmod@divisor+1
  3725  055B  085A               	movf	_mes,w
  3726  055C  00A9               	movwf	??_display_Datum
  3727  055D  01AA               	clrf	??_display_Datum+1
  3728  055E  0829               	movf	??_display_Datum,w
  3729  055F  00F4               	movwf	___awmod@dividend
  3730  0560  082A               	movf	??_display_Datum+1,w
  3731  0561  00F5               	movwf	___awmod@dividend+1
  3732  0562  120A  158A  2255  120A  118A  	fcall	___awmod
  3733  0567  0872               	movf	?___awmod,w
  3734  0568  1283               	bcf	3,5	;RP0=0, select bank0
  3735  0569  1303               	bcf	3,6	;RP1=0, select bank0
  3736  056A  00AB               	movwf	??_display_Datum+2
  3737  056B  082B               	movf	??_display_Datum+2,w
  3738  056C  00AF               	movwf	display_Datum@mes_u
  3739                           
  3740                           ;main_Master.c: 262:     char mes_d = mes/10;
  3741  056D  300A               	movlw	10
  3742  056E  00A0               	movwf	___awdiv@divisor
  3743  056F  3000               	movlw	0
  3744  0570  00A1               	movwf	___awdiv@divisor+1
  3745  0571  085A               	movf	_mes,w
  3746  0572  00A9               	movwf	??_display_Datum
  3747  0573  01AA               	clrf	??_display_Datum+1
  3748  0574  0829               	movf	??_display_Datum,w
  3749  0575  00A2               	movwf	___awdiv@dividend
  3750  0576  082A               	movf	??_display_Datum+1,w
  3751  0577  00A3               	movwf	___awdiv@dividend+1
  3752  0578  120A  158A  22A0  120A  118A  	fcall	___awdiv
  3753  057D  1283               	bcf	3,5	;RP0=0, select bank0
  3754  057E  1303               	bcf	3,6	;RP1=0, select bank0
  3755  057F  0820               	movf	?___awdiv,w
  3756  0580  00AB               	movwf	??_display_Datum+2
  3757  0581  082B               	movf	??_display_Datum+2,w
  3758  0582  00B0               	movwf	display_Datum@mes_d
  3759                           
  3760                           ;main_Master.c: 263:     char jahr_u = jahr%10;
  3761  0583  300A               	movlw	10
  3762  0584  00F2               	movwf	___awmod@divisor
  3763  0585  3000               	movlw	0
  3764  0586  00F3               	movwf	___awmod@divisor+1
  3765  0587  0859               	movf	_jahr,w
  3766  0588  00A9               	movwf	??_display_Datum
  3767  0589  01AA               	clrf	??_display_Datum+1
  3768  058A  0829               	movf	??_display_Datum,w
  3769  058B  00F4               	movwf	___awmod@dividend
  3770  058C  082A               	movf	??_display_Datum+1,w
  3771  058D  00F5               	movwf	___awmod@dividend+1
  3772  058E  120A  158A  2255  120A  118A  	fcall	___awmod
  3773  0593  0872               	movf	?___awmod,w
  3774  0594  1283               	bcf	3,5	;RP0=0, select bank0
  3775  0595  1303               	bcf	3,6	;RP1=0, select bank0
  3776  0596  00AB               	movwf	??_display_Datum+2
  3777  0597  082B               	movf	??_display_Datum+2,w
  3778  0598  00B1               	movwf	display_Datum@jahr_u
  3779                           
  3780                           ;main_Master.c: 264:     char jahr_d = jahr/10;
  3781  0599  300A               	movlw	10
  3782  059A  00A0               	movwf	___awdiv@divisor
  3783  059B  3000               	movlw	0
  3784  059C  00A1               	movwf	___awdiv@divisor+1
  3785  059D  0859               	movf	_jahr,w
  3786  059E  00A9               	movwf	??_display_Datum
  3787  059F  01AA               	clrf	??_display_Datum+1
  3788  05A0  0829               	movf	??_display_Datum,w
  3789  05A1  00A2               	movwf	___awdiv@dividend
  3790  05A2  082A               	movf	??_display_Datum+1,w
  3791  05A3  00A3               	movwf	___awdiv@dividend+1
  3792  05A4  120A  158A  22A0  120A  118A  	fcall	___awdiv
  3793  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  3794  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  3795  05AB  0820               	movf	?___awdiv,w
  3796  05AC  00AB               	movwf	??_display_Datum+2
  3797  05AD  082B               	movf	??_display_Datum+2,w
  3798  05AE  00B2               	movwf	display_Datum@jahr_d
  3799                           
  3800                           ;main_Master.c: 266:     LCD_Set_Cursor(fila, columna);
  3801  05AF  0828               	movf	display_Datum@columna,w
  3802  05B0  00A9               	movwf	??_display_Datum
  3803  05B1  0829               	movf	??_display_Datum,w
  3804  05B2  00F5               	movwf	LCD_Set_Cursor@columna
  3805  05B3  082C               	movf	display_Datum@fila,w
  3806  05B4  120A  118A  26D2  120A  118A  	fcall	_LCD_Set_Cursor
  3807                           
  3808                           ;main_Master.c: 267:     LCD_Write_Character(dia_d + '0');
  3809  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  3810  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  3811  05BB  082E               	movf	display_Datum@dia_d,w
  3812  05BC  3E30               	addlw	48
  3813  05BD  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  3814                           
  3815                           ;main_Master.c: 268:     LCD_Write_Character(dia_u + '0');
  3816  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  3817  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  3818  05C4  082D               	movf	display_Datum@dia_u,w
  3819  05C5  3E30               	addlw	48
  3820  05C6  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  3821                           
  3822                           ;main_Master.c: 269:     LCD_Write_Character('/');
  3823  05CB  302F               	movlw	47
  3824  05CC  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  3825                           
  3826                           ;main_Master.c: 270:     LCD_Write_Character(mes_d + '0');
  3827  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  3828  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  3829  05D3  0830               	movf	display_Datum@mes_d,w
  3830  05D4  3E30               	addlw	48
  3831  05D5  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  3832                           
  3833                           ;main_Master.c: 271:     LCD_Write_Character(mes_u + '0');
  3834  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  3835  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  3836  05DC  082F               	movf	display_Datum@mes_u,w
  3837  05DD  3E30               	addlw	48
  3838  05DE  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  3839                           
  3840                           ;main_Master.c: 272:     LCD_Write_Character('/');
  3841  05E3  302F               	movlw	47
  3842  05E4  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  3843                           
  3844                           ;main_Master.c: 273:     LCD_Write_String("20");
  3845  05E9  30B1               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3846  05EA  120A  158A  217C  120A  118A  	fcall	_LCD_Write_String
  3847                           
  3848                           ;main_Master.c: 274:     LCD_Write_Character(jahr_d + '0');
  3849  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3850  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  3851  05F1  0832               	movf	display_Datum@jahr_d,w
  3852  05F2  3E30               	addlw	48
  3853  05F3  120A  158A  20D8  120A  118A  	fcall	_LCD_Write_Character
  3854                           
  3855                           ;main_Master.c: 275:     LCD_Write_Character(jahr_u + '0');
  3856  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  3857  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  3858  05FA  0831               	movf	display_Datum@jahr_u,w
  3859  05FB  3E30               	addlw	48
  3860  05FC  120A  158A  20D8   	fcall	_LCD_Write_Character
  3861  05FF  0008               	return
  3862  0600                     __end_of_display_Datum:	
  3863                           
  3864                           	psect	text9
  3865  097C                     __ptext9:	
  3866 ;; *************** function _LCD_Write_String *****************
  3867 ;; Defined at:
  3868 ;;		line 73 in file "LCD_8bits.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  a               1    wreg     PTR unsigned char 
  3871 ;;		 -> STR_17(6), STR_16(16), STR_15(3), STR_14(13), 
  3872 ;;		 -> STR_13(5), STR_12(3), STR_11(5), STR_10(3), 
  3873 ;;		 -> STR_9(13), STR_8(4), STR_7(9), STR_6(14), 
  3874 ;;		 -> STR_5(12), STR_4(11), STR_3(13), STR_2(17), 
  3875 ;;		 -> STR_1(3), 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;  a               1    6[COMMON] PTR unsigned char 
  3878 ;;		 -> STR_17(6), STR_16(16), STR_15(3), STR_14(13), 
  3879 ;;		 -> STR_13(5), STR_12(3), STR_11(5), STR_10(3), 
  3880 ;;		 -> STR_9(13), STR_8(4), STR_7(9), STR_6(14), 
  3881 ;;		 -> STR_5(12), STR_4(11), STR_3(13), STR_2(17), 
  3882 ;;		 -> STR_1(3), 
  3883 ;;  n               2    4[COMMON] int 
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  1    wreg      void 
  3886 ;; Registers used:
  3887 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3893 ;;      Params:         0       0       0       0       0
  3894 ;;      Locals:         3       0       0       0       0
  3895 ;;      Temps:          0       0       0       0       0
  3896 ;;      Totals:         3       0       0       0       0
  3897 ;;Total ram usage:        3 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; Hardware stack levels required when called:    2
  3900 ;; This function calls:
  3901 ;;		_LCD_Write_Character
  3902 ;; This function is called by:
  3903 ;;		_display_Datum
  3904 ;;		_mostrarLCD
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           
  3909                           ;psect for function _LCD_Write_String
  3910  097C                     _LCD_Write_String:	
  3911                           
  3912                           ;incstack = 0
  3913                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3914                           ;LCD_Write_String@a stored from wreg
  3915  097C  00F6               	movwf	LCD_Write_String@a
  3916                           
  3917                           ;LCD_8bits.c: 74:     int n;;LCD_8bits.c: 75:     for(n = 0; a[n] != '\0'; n++){
  3918  097D  01F4               	clrf	LCD_Write_String@n
  3919  097E  01F5               	clrf	LCD_Write_String@n+1
  3920  097F                     l2644:	
  3921  097F  0874               	movf	LCD_Write_String@n,w
  3922  0980  0776               	addwf	LCD_Write_String@a,w
  3923  0981  0084               	movwf	4
  3924  0982  120A  118A  2700  120A  158A  	fcall	stringdir
  3925  0987  3A00               	xorlw	0
  3926  0988  1903               	btfsc	3,2
  3927  0989  0008               	return
  3928                           
  3929                           ;LCD_8bits.c: 76:         LCD_Write_Character(a[n]);
  3930  098A  0874               	movf	LCD_Write_String@n,w
  3931  098B  0776               	addwf	LCD_Write_String@a,w
  3932  098C  0084               	movwf	4
  3933  098D  120A  118A  2700  120A  158A  	fcall	stringdir
  3934  0992  120A  158A  20D8  120A  158A  	fcall	_LCD_Write_Character
  3935                           
  3936                           ;LCD_8bits.c: 77:     }
  3937  0997  3001               	movlw	1
  3938  0998  07F4               	addwf	LCD_Write_String@n,f
  3939  0999  1803               	skipnc
  3940  099A  0AF5               	incf	LCD_Write_String@n+1,f
  3941  099B  3000               	movlw	0
  3942  099C  07F5               	addwf	LCD_Write_String@n+1,f
  3943  099D  297F               	goto	l2644
  3944  099E                     __end_of_LCD_Write_String:	
  3945                           
  3946                           	psect	text10
  3947  06D2                     __ptext10:	
  3948 ;; *************** function _LCD_Set_Cursor *****************
  3949 ;; Defined at:
  3950 ;;		line 80 in file "LCD_8bits.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;  linea           1    wreg     unsigned char 
  3953 ;;  columna         1    5[COMMON] unsigned char 
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;  linea           1    8[COMMON] unsigned char 
  3956 ;;  corrimiento     1    9[COMMON] unsigned char 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  1    wreg      void 
  3959 ;; Registers used:
  3960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3966 ;;      Params:         1       0       0       0       0
  3967 ;;      Locals:         2       0       0       0       0
  3968 ;;      Temps:          2       0       0       0       0
  3969 ;;      Totals:         5       0       0       0       0
  3970 ;;Total ram usage:        5 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:    2
  3973 ;; This function calls:
  3974 ;;		_LCD_Cmd
  3975 ;; This function is called by:
  3976 ;;		_display_Uhrzeit
  3977 ;;		_display_Datum
  3978 ;;		_mostrarLCD
  3979 ;;		_pressBoton2
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           
  3984                           ;psect for function _LCD_Set_Cursor
  3985  06D2                     _LCD_Set_Cursor:	
  3986                           
  3987                           ;incstack = 0
  3988                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3989                           ;LCD_Set_Cursor@linea stored from wreg
  3990  06D2  00F8               	movwf	LCD_Set_Cursor@linea
  3991                           
  3992                           ;LCD_8bits.c: 82:     switch (linea){
  3993  06D3  2EED               	goto	l2632
  3994  06D4                     l2622:	
  3995                           
  3996                           ;LCD_8bits.c: 84:             corrimiento = 0x80 + columna;
  3997  06D4  0875               	movf	LCD_Set_Cursor@columna,w
  3998  06D5  3E80               	addlw	128
  3999  06D6  00F6               	movwf	??_LCD_Set_Cursor
  4000  06D7  0876               	movf	??_LCD_Set_Cursor,w
  4001  06D8  00F9               	movwf	LCD_Set_Cursor@corrimiento
  4002                           
  4003                           ;LCD_8bits.c: 85:             LCD_Cmd(corrimiento);
  4004  06D9  0879               	movf	LCD_Set_Cursor@corrimiento,w
  4005  06DA  120A  158A  21F6   	fcall	_LCD_Cmd
  4006                           
  4007                           ;LCD_8bits.c: 86:             break;
  4008  06DD  0008               	return
  4009  06DE                     l2626:	
  4010                           
  4011                           ;LCD_8bits.c: 88:             corrimiento = 0x80 + 0x40 + columna;
  4012  06DE  0875               	movf	LCD_Set_Cursor@columna,w
  4013  06DF  3EC0               	addlw	192
  4014  06E0  00F6               	movwf	??_LCD_Set_Cursor
  4015  06E1  0876               	movf	??_LCD_Set_Cursor,w
  4016  06E2  00F9               	movwf	LCD_Set_Cursor@corrimiento
  4017                           
  4018                           ;LCD_8bits.c: 89:             LCD_Cmd(corrimiento);
  4019  06E3  0879               	movf	LCD_Set_Cursor@corrimiento,w
  4020  06E4  120A  158A  21F6   	fcall	_LCD_Cmd
  4021                           
  4022                           ;LCD_8bits.c: 90:             break;
  4023  06E7  0008               	return
  4024  06E8                     l2630:	
  4025                           
  4026                           ;LCD_8bits.c: 92:             LCD_Cmd(0x80);
  4027  06E8  3080               	movlw	128
  4028  06E9  120A  158A  21F6   	fcall	_LCD_Cmd
  4029                           
  4030                           ;LCD_8bits.c: 93:     }
  4031  06EC  0008               	return
  4032  06ED                     l2632:	
  4033  06ED  0878               	movf	LCD_Set_Cursor@linea,w
  4034  06EE  00F6               	movwf	??_LCD_Set_Cursor
  4035  06EF  01F7               	clrf	??_LCD_Set_Cursor+1
  4036                           
  4037                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4038                           ; Switch size 1, requested type "simple"
  4039                           ; Number of cases is 1, Range of values is 0 to 0
  4040                           ; switch strategies available:
  4041                           ; Name         Instructions Cycles
  4042                           ; simple_byte            4     3 (average)
  4043                           ; direct_byte           11     8 (fixed)
  4044                           ; jumptable            260     6 (fixed)
  4045                           ;	Chosen strategy is simple_byte
  4046  06F0  0877               	movf	??_LCD_Set_Cursor+1,w
  4047  06F1  3A00               	xorlw	0	; case 0
  4048  06F2  1903               	skipnz
  4049  06F3  2EF5               	goto	l4830
  4050  06F4  2EE8               	goto	l2630
  4051  06F5                     l4830:	
  4052                           
  4053                           ; Switch size 1, requested type "simple"
  4054                           ; Number of cases is 2, Range of values is 1 to 2
  4055                           ; switch strategies available:
  4056                           ; Name         Instructions Cycles
  4057                           ; simple_byte            7     4 (average)
  4058                           ; direct_byte           17    11 (fixed)
  4059                           ; jumptable            263     9 (fixed)
  4060                           ;	Chosen strategy is simple_byte
  4061  06F5  0876               	movf	??_LCD_Set_Cursor,w
  4062  06F6  3A01               	xorlw	1	; case 1
  4063  06F7  1903               	skipnz
  4064  06F8  2ED4               	goto	l2622
  4065  06F9  3A03               	xorlw	3	; case 2
  4066  06FA  1903               	skipnz
  4067  06FB  2EDE               	goto	l2626
  4068  06FC  2EE8               	goto	l2630
  4069  06FD  0008               	return
  4070  06FE                     __end_of_LCD_Set_Cursor:	
  4071                           
  4072                           	psect	text11
  4073  0332                     __ptext11:	
  4074 ;; *************** function _get_Time *****************
  4075 ;; Defined at:
  4076 ;;		line 78 in file "RTC.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;		None
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;		None
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  1    wreg      void 
  4083 ;; Registers used:
  4084 ;;		wreg, status,2, status,0, pclath, cstack
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4090 ;;      Params:         0       0       0       0       0
  4091 ;;      Locals:         0       0       0       0       0
  4092 ;;      Temps:          0       1       0       0       0
  4093 ;;      Totals:         0       1       0       0       0
  4094 ;;Total ram usage:        1 bytes
  4095 ;; Hardware stack levels used:    1
  4096 ;; Hardware stack levels required when called:    3
  4097 ;; This function calls:
  4098 ;;		_BCD_a_DEC
  4099 ;;		_I2C_Master_Read
  4100 ;;		_I2C_Master_Start
  4101 ;;		_I2C_Master_Stop
  4102 ;;		_I2C_Master_Write
  4103 ;; This function is called by:
  4104 ;;		_main
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           
  4109                           ;psect for function _get_Time
  4110  0332                     _get_Time:	
  4111                           
  4112                           ;RTC.c: 79:     I2C_Master_Start();
  4113                           
  4114                           ;incstack = 0
  4115                           ; Regs used in _get_Time: [wreg+status,2+status,0+pclath+cstack]
  4116  0332  120A  158A  20A9  120A  118A  	fcall	_I2C_Master_Start
  4117                           
  4118                           ;RTC.c: 80:     I2C_Master_Write(0xD0);
  4119  0337  30D0               	movlw	208
  4120  0338  1283               	bcf	3,5	;RP0=0, select bank0
  4121  0339  1303               	bcf	3,6	;RP1=0, select bank0
  4122  033A  00AD               	movwf	I2C_Master_Write@d
  4123  033B  3000               	movlw	0
  4124  033C  00AE               	movwf	I2C_Master_Write@d+1
  4125  033D  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  4126                           
  4127                           ;RTC.c: 81:     I2C_Master_Write(0);
  4128  0342  3000               	movlw	0
  4129  0343  1283               	bcf	3,5	;RP0=0, select bank0
  4130  0344  1303               	bcf	3,6	;RP1=0, select bank0
  4131  0345  00AD               	movwf	I2C_Master_Write@d
  4132  0346  00AE               	movwf	I2C_Master_Write@d+1
  4133  0347  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  4134                           
  4135                           ;RTC.c: 82:     I2C_Master_Stop();
  4136  034C  120A  158A  20B0  120A  118A  	fcall	_I2C_Master_Stop
  4137                           
  4138                           ;RTC.c: 83:     I2C_Master_Start();
  4139  0351  120A  158A  20A9  120A  118A  	fcall	_I2C_Master_Start
  4140                           
  4141                           ;RTC.c: 84:     I2C_Master_Write(0xD1);
  4142  0356  30D1               	movlw	209
  4143  0357  1283               	bcf	3,5	;RP0=0, select bank0
  4144  0358  1303               	bcf	3,6	;RP1=0, select bank0
  4145  0359  00AD               	movwf	I2C_Master_Write@d
  4146  035A  3000               	movlw	0
  4147  035B  00AE               	movwf	I2C_Master_Write@d+1
  4148  035C  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  4149                           
  4150                           ;RTC.c: 85:     seg = BCD_a_DEC(I2C_Master_Read(0));
  4151  0361  3000               	movlw	0
  4152  0362  00F2               	movwf	I2C_Master_Read@a
  4153  0363  00F3               	movwf	I2C_Master_Read@a+1
  4154  0364  120A  158A  21CA  120A  118A  	fcall	_I2C_Master_Read
  4155  0369  0872               	movf	?_I2C_Master_Read,w
  4156  036A  120A  158A  2145  120A  118A  	fcall	_BCD_a_DEC
  4157  036F  1283               	bcf	3,5	;RP0=0, select bank0
  4158  0370  1303               	bcf	3,6	;RP1=0, select bank0
  4159  0371  00AF               	movwf	??_get_Time
  4160  0372  082F               	movf	??_get_Time,w
  4161  0373  00D3               	movwf	_seg
  4162                           
  4163                           ;RTC.c: 86:     I2C_Master_Stop();
  4164  0374  120A  158A  20B0  120A  118A  	fcall	_I2C_Master_Stop
  4165                           
  4166                           ;RTC.c: 88:     I2C_Master_Start();
  4167  0379  120A  158A  20A9  120A  118A  	fcall	_I2C_Master_Start
  4168                           
  4169                           ;RTC.c: 89:     I2C_Master_Write(0xD0);
  4170  037E  30D0               	movlw	208
  4171  037F  1283               	bcf	3,5	;RP0=0, select bank0
  4172  0380  1303               	bcf	3,6	;RP1=0, select bank0
  4173  0381  00AD               	movwf	I2C_Master_Write@d
  4174  0382  3000               	movlw	0
  4175  0383  00AE               	movwf	I2C_Master_Write@d+1
  4176  0384  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  4177                           
  4178                           ;RTC.c: 90:     I2C_Master_Write(1);
  4179  0389  3001               	movlw	1
  4180  038A  1283               	bcf	3,5	;RP0=0, select bank0
  4181  038B  1303               	bcf	3,6	;RP1=0, select bank0
  4182  038C  00AD               	movwf	I2C_Master_Write@d
  4183  038D  3000               	movlw	0
  4184  038E  00AE               	movwf	I2C_Master_Write@d+1
  4185  038F  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  4186                           
  4187                           ;RTC.c: 91:     I2C_Master_Stop();
  4188  0394  120A  158A  20B0  120A  118A  	fcall	_I2C_Master_Stop
  4189                           
  4190                           ;RTC.c: 92:     I2C_Master_Start();
  4191  0399  120A  158A  20A9  120A  118A  	fcall	_I2C_Master_Start
  4192                           
  4193                           ;RTC.c: 93:     I2C_Master_Write(0xD1);
  4194  039E  30D1               	movlw	209
  4195  039F  1283               	bcf	3,5	;RP0=0, select bank0
  4196  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  4197  03A1  00AD               	movwf	I2C_Master_Write@d
  4198  03A2  3000               	movlw	0
  4199  03A3  00AE               	movwf	I2C_Master_Write@d+1
  4200  03A4  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  4201                           
  4202                           ;RTC.c: 94:     min = BCD_a_DEC(I2C_Master_Read(0));
  4203  03A9  3000               	movlw	0
  4204  03AA  00F2               	movwf	I2C_Master_Read@a
  4205  03AB  00F3               	movwf	I2C_Master_Read@a+1
  4206  03AC  120A  158A  21CA  120A  118A  	fcall	_I2C_Master_Read
  4207  03B1  0872               	movf	?_I2C_Master_Read,w
  4208  03B2  120A  158A  2145  120A  118A  	fcall	_BCD_a_DEC
  4209  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  4210  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  4211  03B9  00AF               	movwf	??_get_Time
  4212  03BA  082F               	movf	??_get_Time,w
  4213  03BB  00DE               	movwf	_min
  4214                           
  4215                           ;RTC.c: 95:     I2C_Master_Stop();
  4216  03BC  120A  158A  20B0  120A  118A  	fcall	_I2C_Master_Stop
  4217                           
  4218                           ;RTC.c: 97:     I2C_Master_Start();
  4219  03C1  120A  158A  20A9  120A  118A  	fcall	_I2C_Master_Start
  4220                           
  4221                           ;RTC.c: 98:     I2C_Master_Write(0xD0);
  4222  03C6  30D0               	movlw	208
  4223  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  4224  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  4225  03C9  00AD               	movwf	I2C_Master_Write@d
  4226  03CA  3000               	movlw	0
  4227  03CB  00AE               	movwf	I2C_Master_Write@d+1
  4228  03CC  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  4229                           
  4230                           ;RTC.c: 99:     I2C_Master_Write(2);
  4231  03D1  3002               	movlw	2
  4232  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  4233  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  4234  03D4  00AD               	movwf	I2C_Master_Write@d
  4235  03D5  3000               	movlw	0
  4236  03D6  00AE               	movwf	I2C_Master_Write@d+1
  4237  03D7  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  4238                           
  4239                           ;RTC.c: 100:     I2C_Master_Stop();
  4240  03DC  120A  158A  20B0  120A  118A  	fcall	_I2C_Master_Stop
  4241                           
  4242                           ;RTC.c: 101:     I2C_Master_Start();
  4243  03E1  120A  158A  20A9  120A  118A  	fcall	_I2C_Master_Start
  4244                           
  4245                           ;RTC.c: 102:     I2C_Master_Write(0xD1);
  4246  03E6  30D1               	movlw	209
  4247  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  4248  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  4249  03E9  00AD               	movwf	I2C_Master_Write@d
  4250  03EA  3000               	movlw	0
  4251  03EB  00AE               	movwf	I2C_Master_Write@d+1
  4252  03EC  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  4253                           
  4254                           ;RTC.c: 103:     hora = BCD_a_DEC(I2C_Master_Read(0));
  4255  03F1  3000               	movlw	0
  4256  03F2  00F2               	movwf	I2C_Master_Read@a
  4257  03F3  00F3               	movwf	I2C_Master_Read@a+1
  4258  03F4  120A  158A  21CA  120A  118A  	fcall	_I2C_Master_Read
  4259  03F9  0872               	movf	?_I2C_Master_Read,w
  4260  03FA  120A  158A  2145  120A  118A  	fcall	_BCD_a_DEC
  4261  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  4262  0400  1303               	bcf	3,6	;RP1=0, select bank0
  4263  0401  00AF               	movwf	??_get_Time
  4264  0402  082F               	movf	??_get_Time,w
  4265  0403  00DD               	movwf	_hora
  4266                           
  4267                           ;RTC.c: 104:     I2C_Master_Stop();
  4268  0404  120A  158A  20B0  120A  118A  	fcall	_I2C_Master_Stop
  4269                           
  4270                           ;RTC.c: 107:     I2C_Master_Start();
  4271  0409  120A  158A  20A9  120A  118A  	fcall	_I2C_Master_Start
  4272                           
  4273                           ;RTC.c: 108:     I2C_Master_Write(0xD0);
  4274  040E  30D0               	movlw	208
  4275  040F  1283               	bcf	3,5	;RP0=0, select bank0
  4276  0410  1303               	bcf	3,6	;RP1=0, select bank0
  4277  0411  00AD               	movwf	I2C_Master_Write@d
  4278  0412  3000               	movlw	0
  4279  0413  00AE               	movwf	I2C_Master_Write@d+1
  4280  0414  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  4281                           
  4282                           ;RTC.c: 109:     I2C_Master_Write(3);
  4283  0419  3003               	movlw	3
  4284  041A  1283               	bcf	3,5	;RP0=0, select bank0
  4285  041B  1303               	bcf	3,6	;RP1=0, select bank0
  4286  041C  00AD               	movwf	I2C_Master_Write@d
  4287  041D  3000               	movlw	0
  4288  041E  00AE               	movwf	I2C_Master_Write@d+1
  4289  041F  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  4290                           
  4291                           ;RTC.c: 110:     I2C_Master_Stop();
  4292  0424  120A  158A  20B0  120A  118A  	fcall	_I2C_Master_Stop
  4293                           
  4294                           ;RTC.c: 111:     I2C_Master_Start();
  4295  0429  120A  158A  20A9  120A  118A  	fcall	_I2C_Master_Start
  4296                           
  4297                           ;RTC.c: 112:     I2C_Master_Write(0xD1);
  4298  042E  30D1               	movlw	209
  4299  042F  1283               	bcf	3,5	;RP0=0, select bank0
  4300  0430  1303               	bcf	3,6	;RP1=0, select bank0
  4301  0431  00AD               	movwf	I2C_Master_Write@d
  4302  0432  3000               	movlw	0
  4303  0433  00AE               	movwf	I2C_Master_Write@d+1
  4304  0434  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  4305                           
  4306                           ;RTC.c: 113:     dia = BCD_a_DEC(I2C_Master_Read(0));
  4307  0439  3000               	movlw	0
  4308  043A  00F2               	movwf	I2C_Master_Read@a
  4309  043B  00F3               	movwf	I2C_Master_Read@a+1
  4310  043C  120A  158A  21CA  120A  118A  	fcall	_I2C_Master_Read
  4311  0441  0872               	movf	?_I2C_Master_Read,w
  4312  0442  120A  158A  2145  120A  118A  	fcall	_BCD_a_DEC
  4313  0447  1283               	bcf	3,5	;RP0=0, select bank0
  4314  0448  1303               	bcf	3,6	;RP1=0, select bank0
  4315  0449  00AF               	movwf	??_get_Time
  4316  044A  082F               	movf	??_get_Time,w
  4317  044B  00DC               	movwf	_dia
  4318                           
  4319                           ;RTC.c: 114:     I2C_Master_Stop();
  4320  044C  120A  158A  20B0  120A  118A  	fcall	_I2C_Master_Stop
  4321                           
  4322                           ;RTC.c: 116:     I2C_Master_Start();
  4323  0451  120A  158A  20A9  120A  118A  	fcall	_I2C_Master_Start
  4324                           
  4325                           ;RTC.c: 117:     I2C_Master_Write(0xD0);
  4326  0456  30D0               	movlw	208
  4327  0457  1283               	bcf	3,5	;RP0=0, select bank0
  4328  0458  1303               	bcf	3,6	;RP1=0, select bank0
  4329  0459  00AD               	movwf	I2C_Master_Write@d
  4330  045A  3000               	movlw	0
  4331  045B  00AE               	movwf	I2C_Master_Write@d+1
  4332  045C  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  4333                           
  4334                           ;RTC.c: 118:     I2C_Master_Write(4);
  4335  0461  3004               	movlw	4
  4336  0462  1283               	bcf	3,5	;RP0=0, select bank0
  4337  0463  1303               	bcf	3,6	;RP1=0, select bank0
  4338  0464  00AD               	movwf	I2C_Master_Write@d
  4339  0465  3000               	movlw	0
  4340  0466  00AE               	movwf	I2C_Master_Write@d+1
  4341  0467  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  4342                           
  4343                           ;RTC.c: 119:     I2C_Master_Stop();
  4344  046C  120A  158A  20B0  120A  118A  	fcall	_I2C_Master_Stop
  4345                           
  4346                           ;RTC.c: 120:     I2C_Master_Start();
  4347  0471  120A  158A  20A9  120A  118A  	fcall	_I2C_Master_Start
  4348                           
  4349                           ;RTC.c: 121:     I2C_Master_Write(0xD1);
  4350  0476  30D1               	movlw	209
  4351  0477  1283               	bcf	3,5	;RP0=0, select bank0
  4352  0478  1303               	bcf	3,6	;RP1=0, select bank0
  4353  0479  00AD               	movwf	I2C_Master_Write@d
  4354  047A  3000               	movlw	0
  4355  047B  00AE               	movwf	I2C_Master_Write@d+1
  4356  047C  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  4357                           
  4358                           ;RTC.c: 122:     datum = BCD_a_DEC(I2C_Master_Read(0));
  4359  0481  3000               	movlw	0
  4360  0482  00F2               	movwf	I2C_Master_Read@a
  4361  0483  00F3               	movwf	I2C_Master_Read@a+1
  4362  0484  120A  158A  21CA  120A  118A  	fcall	_I2C_Master_Read
  4363  0489  0872               	movf	?_I2C_Master_Read,w
  4364  048A  120A  158A  2145  120A  118A  	fcall	_BCD_a_DEC
  4365  048F  1283               	bcf	3,5	;RP0=0, select bank0
  4366  0490  1303               	bcf	3,6	;RP1=0, select bank0
  4367  0491  00AF               	movwf	??_get_Time
  4368  0492  082F               	movf	??_get_Time,w
  4369  0493  00DB               	movwf	_datum
  4370                           
  4371                           ;RTC.c: 123:     I2C_Master_Stop();
  4372  0494  120A  158A  20B0  120A  118A  	fcall	_I2C_Master_Stop
  4373                           
  4374                           ;RTC.c: 125:     I2C_Master_Start();
  4375  0499  120A  158A  20A9  120A  118A  	fcall	_I2C_Master_Start
  4376                           
  4377                           ;RTC.c: 126:     I2C_Master_Write(0xD0);
  4378  049E  30D0               	movlw	208
  4379  049F  1283               	bcf	3,5	;RP0=0, select bank0
  4380  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  4381  04A1  00AD               	movwf	I2C_Master_Write@d
  4382  04A2  3000               	movlw	0
  4383  04A3  00AE               	movwf	I2C_Master_Write@d+1
  4384  04A4  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  4385                           
  4386                           ;RTC.c: 127:     I2C_Master_Write(5);
  4387  04A9  3005               	movlw	5
  4388  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  4389  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  4390  04AC  00AD               	movwf	I2C_Master_Write@d
  4391  04AD  3000               	movlw	0
  4392  04AE  00AE               	movwf	I2C_Master_Write@d+1
  4393  04AF  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  4394                           
  4395                           ;RTC.c: 128:     I2C_Master_Stop();
  4396  04B4  120A  158A  20B0  120A  118A  	fcall	_I2C_Master_Stop
  4397                           
  4398                           ;RTC.c: 129:     I2C_Master_Start();
  4399  04B9  120A  158A  20A9  120A  118A  	fcall	_I2C_Master_Start
  4400                           
  4401                           ;RTC.c: 130:     I2C_Master_Write(0xD1);
  4402  04BE  30D1               	movlw	209
  4403  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  4404  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  4405  04C1  00AD               	movwf	I2C_Master_Write@d
  4406  04C2  3000               	movlw	0
  4407  04C3  00AE               	movwf	I2C_Master_Write@d+1
  4408  04C4  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  4409                           
  4410                           ;RTC.c: 131:     mes = BCD_a_DEC(I2C_Master_Read(0));
  4411  04C9  3000               	movlw	0
  4412  04CA  00F2               	movwf	I2C_Master_Read@a
  4413  04CB  00F3               	movwf	I2C_Master_Read@a+1
  4414  04CC  120A  158A  21CA  120A  118A  	fcall	_I2C_Master_Read
  4415  04D1  0872               	movf	?_I2C_Master_Read,w
  4416  04D2  120A  158A  2145  120A  118A  	fcall	_BCD_a_DEC
  4417  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  4418  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  4419  04D9  00AF               	movwf	??_get_Time
  4420  04DA  082F               	movf	??_get_Time,w
  4421  04DB  00DA               	movwf	_mes
  4422                           
  4423                           ;RTC.c: 132:     I2C_Master_Stop();
  4424  04DC  120A  158A  20B0  120A  118A  	fcall	_I2C_Master_Stop
  4425                           
  4426                           ;RTC.c: 134:     I2C_Master_Start();
  4427  04E1  120A  158A  20A9  120A  118A  	fcall	_I2C_Master_Start
  4428                           
  4429                           ;RTC.c: 135:     I2C_Master_Write(0xD0);
  4430  04E6  30D0               	movlw	208
  4431  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  4432  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  4433  04E9  00AD               	movwf	I2C_Master_Write@d
  4434  04EA  3000               	movlw	0
  4435  04EB  00AE               	movwf	I2C_Master_Write@d+1
  4436  04EC  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  4437                           
  4438                           ;RTC.c: 136:     I2C_Master_Write(6);
  4439  04F1  3006               	movlw	6
  4440  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  4441  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  4442  04F4  00AD               	movwf	I2C_Master_Write@d
  4443  04F5  3000               	movlw	0
  4444  04F6  00AE               	movwf	I2C_Master_Write@d+1
  4445  04F7  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  4446                           
  4447                           ;RTC.c: 137:     I2C_Master_Stop();
  4448  04FC  120A  158A  20B0  120A  118A  	fcall	_I2C_Master_Stop
  4449                           
  4450                           ;RTC.c: 138:     I2C_Master_Start();
  4451  0501  120A  158A  20A9  120A  118A  	fcall	_I2C_Master_Start
  4452                           
  4453                           ;RTC.c: 139:     I2C_Master_Write(0xD1);
  4454  0506  30D1               	movlw	209
  4455  0507  1283               	bcf	3,5	;RP0=0, select bank0
  4456  0508  1303               	bcf	3,6	;RP1=0, select bank0
  4457  0509  00AD               	movwf	I2C_Master_Write@d
  4458  050A  3000               	movlw	0
  4459  050B  00AE               	movwf	I2C_Master_Write@d+1
  4460  050C  120A  158A  20B7  120A  118A  	fcall	_I2C_Master_Write
  4461                           
  4462                           ;RTC.c: 140:     jahr = BCD_a_DEC(I2C_Master_Read(0));
  4463  0511  3000               	movlw	0
  4464  0512  00F2               	movwf	I2C_Master_Read@a
  4465  0513  00F3               	movwf	I2C_Master_Read@a+1
  4466  0514  120A  158A  21CA  120A  118A  	fcall	_I2C_Master_Read
  4467  0519  0872               	movf	?_I2C_Master_Read,w
  4468  051A  120A  158A  2145  120A  118A  	fcall	_BCD_a_DEC
  4469  051F  1283               	bcf	3,5	;RP0=0, select bank0
  4470  0520  1303               	bcf	3,6	;RP1=0, select bank0
  4471  0521  00AF               	movwf	??_get_Time
  4472  0522  082F               	movf	??_get_Time,w
  4473  0523  00D9               	movwf	_jahr
  4474                           
  4475                           ;RTC.c: 141:     I2C_Master_Stop();
  4476  0524  120A  158A  20B0   	fcall	_I2C_Master_Stop
  4477  0527  0008               	return
  4478  0528                     __end_of_get_Time:	
  4479                           
  4480                           	psect	text12
  4481  09CA                     __ptext12:	
  4482 ;; *************** function _I2C_Master_Read *****************
  4483 ;; Defined at:
  4484 ;;		line 74 in file "I2C.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  a               2    2[COMMON] unsigned short 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;  temp            2    6[COMMON] unsigned short 
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  2    2[COMMON] unsigned short 
  4491 ;; Registers used:
  4492 ;;		wreg, status,2, status,0, pclath, cstack
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4498 ;;      Params:         2       0       0       0       0
  4499 ;;      Locals:         2       0       0       0       0
  4500 ;;      Temps:          2       0       0       0       0
  4501 ;;      Totals:         6       0       0       0       0
  4502 ;;Total ram usage:        6 bytes
  4503 ;; Hardware stack levels used:    1
  4504 ;; Hardware stack levels required when called:    2
  4505 ;; This function calls:
  4506 ;;		_I2C_Master_Wait
  4507 ;; This function is called by:
  4508 ;;		_get_Time
  4509 ;;		_get_hora
  4510 ;;		_temp_objeto
  4511 ;;		_temp_ambiente
  4512 ;;		_Acc_X
  4513 ;;		_Acc_Y
  4514 ;;		_Acc_Z
  4515 ;;		_Gy_X
  4516 ;;		_Gy_Y
  4517 ;;		_Gy_Z
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           
  4522                           ;psect for function _I2C_Master_Read
  4523  09CA                     _I2C_Master_Read:	
  4524                           
  4525                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  4526                           
  4527                           ;incstack = 0
  4528                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4529  09CA  120A  158A  20CF  120A  158A  	fcall	_I2C_Master_Wait
  4530                           
  4531                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  4532  09CF  1683               	bsf	3,5	;RP0=1, select bank1
  4533  09D0  1303               	bcf	3,6	;RP1=0, select bank1
  4534  09D1  1591               	bsf	17,3	;volatile
  4535                           
  4536                           ;I2C.c: 79:     I2C_Master_Wait();
  4537  09D2  120A  158A  20CF  120A  158A  	fcall	_I2C_Master_Wait
  4538                           
  4539                           ;I2C.c: 80:     temp = SSPBUF;
  4540  09D7  1283               	bcf	3,5	;RP0=0, select bank0
  4541  09D8  1303               	bcf	3,6	;RP1=0, select bank0
  4542  09D9  0813               	movf	19,w	;volatile
  4543  09DA  00F4               	movwf	??_I2C_Master_Read
  4544  09DB  01F5               	clrf	??_I2C_Master_Read+1
  4545  09DC  0874               	movf	??_I2C_Master_Read,w
  4546  09DD  00F6               	movwf	I2C_Master_Read@temp
  4547  09DE  0875               	movf	??_I2C_Master_Read+1,w
  4548  09DF  00F7               	movwf	I2C_Master_Read@temp+1
  4549                           
  4550                           ;I2C.c: 81:     I2C_Master_Wait();
  4551  09E0  120A  158A  20CF  120A  158A  	fcall	_I2C_Master_Wait
  4552                           
  4553                           ;I2C.c: 82:     if(a == 1){
  4554  09E5  0372               	decf	I2C_Master_Read@a,w
  4555  09E6  0473               	iorwf	I2C_Master_Read@a+1,w
  4556  09E7  1D03               	btfss	3,2
  4557  09E8  29ED               	goto	l329
  4558                           
  4559                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  4560  09E9  1683               	bsf	3,5	;RP0=1, select bank1
  4561  09EA  1303               	bcf	3,6	;RP1=0, select bank1
  4562  09EB  1291               	bcf	17,5	;volatile
  4563                           
  4564                           ;I2C.c: 84:     }else{
  4565  09EC  29F0               	goto	l330
  4566  09ED                     l329:	
  4567                           
  4568                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  4569  09ED  1683               	bsf	3,5	;RP0=1, select bank1
  4570  09EE  1303               	bcf	3,6	;RP1=0, select bank1
  4571  09EF  1691               	bsf	17,5	;volatile
  4572  09F0                     l330:	
  4573                           ;I2C.c: 86:     }
  4574                           
  4575                           
  4576                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  4577  09F0  1611               	bsf	17,4	;volatile
  4578                           
  4579                           ;I2C.c: 88:     return temp;
  4580  09F1  0877               	movf	I2C_Master_Read@temp+1,w
  4581  09F2  00F3               	movwf	?_I2C_Master_Read+1
  4582  09F3  0876               	movf	I2C_Master_Read@temp,w
  4583  09F4  00F2               	movwf	?_I2C_Master_Read
  4584  09F5  0008               	return
  4585  09F6                     __end_of_I2C_Master_Read:	
  4586                           
  4587                           	psect	text13
  4588  0945                     __ptext13:	
  4589 ;; *************** function _BCD_a_DEC *****************
  4590 ;; Defined at:
  4591 ;;		line 27 in file "RTC.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;  numBCD          1    wreg     unsigned char 
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;  numBCD          1    9[COMMON] unsigned char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      unsigned char 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2, status,0, pclath, cstack
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4605 ;;      Params:         0       0       0       0       0
  4606 ;;      Locals:         1       0       0       0       0
  4607 ;;      Temps:          3       0       0       0       0
  4608 ;;      Totals:         4       0       0       0       0
  4609 ;;Total ram usage:        4 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    2
  4612 ;; This function calls:
  4613 ;;		___bmul
  4614 ;; This function is called by:
  4615 ;;		_get_Time
  4616 ;;		_get_hora
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           
  4621                           ;psect for function _BCD_a_DEC
  4622  0945                     _BCD_a_DEC:	
  4623                           
  4624                           ;incstack = 0
  4625                           ; Regs used in _BCD_a_DEC: [wreg+status,2+status,0+pclath+cstack]
  4626                           ;BCD_a_DEC@numBCD stored from wreg
  4627  0945  00F9               	movwf	BCD_a_DEC@numBCD
  4628                           
  4629                           ;RTC.c: 28:     return (numBCD >> 4) * 10 + (numBCD & 0x0F);
  4630  0946  300F               	movlw	15
  4631  0947  0579               	andwf	BCD_a_DEC@numBCD,w
  4632  0948  00F6               	movwf	??_BCD_a_DEC
  4633  0949  300A               	movlw	10
  4634  094A  00F7               	movwf	??_BCD_a_DEC+1
  4635  094B  0877               	movf	??_BCD_a_DEC+1,w
  4636  094C  00F2               	movwf	___bmul@multiplicand
  4637  094D  0879               	movf	BCD_a_DEC@numBCD,w
  4638  094E  00F8               	movwf	??_BCD_a_DEC+2
  4639  094F  3004               	movlw	4
  4640  0950                     u1125:	
  4641  0950  1003               	clrc
  4642  0951  0CF8               	rrf	??_BCD_a_DEC+2,f
  4643  0952  3EFF               	addlw	-1
  4644  0953  1D03               	skipz
  4645  0954  2950               	goto	u1125
  4646  0955  0878               	movf	??_BCD_a_DEC+2,w
  4647  0956  120A  158A  20F8   	fcall	___bmul
  4648  0959  0776               	addwf	??_BCD_a_DEC,w
  4649  095A  0008               	return
  4650  095B                     __end_of_BCD_a_DEC:	
  4651                           
  4652                           	psect	text14
  4653  08F8                     __ptext14:	
  4654 ;; *************** function ___bmul *****************
  4655 ;; Defined at:
  4656 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;  multiplier      1    wreg     unsigned char 
  4659 ;;  multiplicand    1    2[COMMON] unsigned char 
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;  multiplier      1    5[COMMON] unsigned char 
  4662 ;;  product         1    4[COMMON] unsigned char 
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1    wreg      unsigned char 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4672 ;;      Params:         1       0       0       0       0
  4673 ;;      Locals:         2       0       0       0       0
  4674 ;;      Temps:          1       0       0       0       0
  4675 ;;      Totals:         4       0       0       0       0
  4676 ;;Total ram usage:        4 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    1
  4679 ;; This function calls:
  4680 ;;		Nothing
  4681 ;; This function is called by:
  4682 ;;		_BCD_a_DEC
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           
  4687                           ;psect for function ___bmul
  4688  08F8                     ___bmul:	
  4689                           
  4690                           ;incstack = 0
  4691                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4692                           ;___bmul@multiplier stored from wreg
  4693  08F8  00F5               	movwf	___bmul@multiplier
  4694  08F9  01F4               	clrf	___bmul@product
  4695  08FA                     l2678:	
  4696  08FA  1C75               	btfss	___bmul@multiplier,0
  4697  08FB  2900               	goto	l2682
  4698  08FC  0872               	movf	___bmul@multiplicand,w
  4699  08FD  00F3               	movwf	??___bmul
  4700  08FE  0873               	movf	??___bmul,w
  4701  08FF  07F4               	addwf	___bmul@product,f
  4702  0900                     l2682:	
  4703  0900  1003               	clrc
  4704  0901  0DF2               	rlf	___bmul@multiplicand,f
  4705  0902  1003               	clrc
  4706  0903  0CF5               	rrf	___bmul@multiplier,f
  4707  0904  0875               	movf	___bmul@multiplier,w
  4708  0905  1D03               	btfss	3,2
  4709  0906  28FA               	goto	l2678
  4710  0907  0874               	movf	___bmul@product,w
  4711  0908  0008               	return
  4712  0909                     __end_of___bmul:	
  4713                           
  4714                           	psect	text15
  4715  0CB6                     __ptext15:	
  4716 ;; *************** function _SetUp *****************
  4717 ;; Defined at:
  4718 ;;		line 177 in file "main_Master.c"
  4719 ;; Parameters:    Size  Location     Type
  4720 ;;		None
  4721 ;; Auto vars:     Size  Location     Type
  4722 ;;		None
  4723 ;; Return value:  Size  Location     Type
  4724 ;;                  1    wreg      void 
  4725 ;; Registers used:
  4726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4727 ;; Tracked objects:
  4728 ;;		On entry : 0/0
  4729 ;;		On exit  : 0/0
  4730 ;;		Unchanged: 0/0
  4731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4732 ;;      Params:         0       0       0       0       0
  4733 ;;      Locals:         0       0       0       0       0
  4734 ;;      Temps:          0       1       0       0       0
  4735 ;;      Totals:         0       1       0       0       0
  4736 ;;Total ram usage:        1 bytes
  4737 ;; Hardware stack levels used:    1
  4738 ;; Hardware stack levels required when called:    4
  4739 ;; This function calls:
  4740 ;;		_I2C_Master_Init
  4741 ;;		_LCD_Create_Char
  4742 ;;		_LCD_clear
  4743 ;;		_LCD_init
  4744 ;;		_OSC_config
  4745 ;;		_Zeit_Datum_Set
  4746 ;;		_uart_init
  4747 ;; This function is called by:
  4748 ;;		_main
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           
  4753                           ;psect for function _SetUp
  4754  0CB6                     _SetUp:	
  4755                           
  4756                           ;main_Master.c: 178:     TRISC = 0;
  4757                           
  4758                           ;incstack = 0
  4759                           ; Regs used in _SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4760  0CB6  1683               	bsf	3,5	;RP0=1, select bank1
  4761  0CB7  1303               	bcf	3,6	;RP1=0, select bank1
  4762  0CB8  0187               	clrf	7	;volatile
  4763                           
  4764                           ;main_Master.c: 179:     PORTC = 0;
  4765  0CB9  1283               	bcf	3,5	;RP0=0, select bank0
  4766  0CBA  1303               	bcf	3,6	;RP1=0, select bank0
  4767  0CBB  0187               	clrf	7	;volatile
  4768                           
  4769                           ;main_Master.c: 180:     TRISB = 0;
  4770  0CBC  1683               	bsf	3,5	;RP0=1, select bank1
  4771  0CBD  1303               	bcf	3,6	;RP1=0, select bank1
  4772  0CBE  0186               	clrf	6	;volatile
  4773                           
  4774                           ;main_Master.c: 181:     OSC_config(4000000);
  4775  0CBF  3000               	movlw	0
  4776  0CC0  00F5               	movwf	OSC_config@frecuencia+3
  4777  0CC1  303D               	movlw	61
  4778  0CC2  00F4               	movwf	OSC_config@frecuencia+2
  4779  0CC3  3009               	movlw	9
  4780  0CC4  00F3               	movwf	OSC_config@frecuencia+1
  4781  0CC5  3000               	movlw	0
  4782  0CC6  00F2               	movwf	OSC_config@frecuencia
  4783  0CC7  120A  158A  25EA  120A  158A  	fcall	_OSC_config
  4784                           
  4785                           ;main_Master.c: 182:     TRISB = 0b00000110;
  4786  0CCC  3006               	movlw	6
  4787  0CCD  1683               	bsf	3,5	;RP0=1, select bank1
  4788  0CCE  1303               	bcf	3,6	;RP1=0, select bank1
  4789  0CCF  0086               	movwf	6	;volatile
  4790                           
  4791                           ;main_Master.c: 183:     ANSELH = 0;
  4792  0CD0  1683               	bsf	3,5	;RP0=1, select bank3
  4793  0CD1  1703               	bsf	3,6	;RP1=1, select bank3
  4794  0CD2  0189               	clrf	9	;volatile
  4795                           
  4796                           ;main_Master.c: 184:     WPUB = 0b00000110;
  4797  0CD3  3006               	movlw	6
  4798  0CD4  1683               	bsf	3,5	;RP0=1, select bank1
  4799  0CD5  1303               	bcf	3,6	;RP1=0, select bank1
  4800  0CD6  0095               	movwf	21	;volatile
  4801                           
  4802                           ;main_Master.c: 185:     OPTION_REGbits.nRBPU = 0;
  4803  0CD7  1381               	bcf	1,7	;volatile
  4804                           
  4805                           ;main_Master.c: 186:     IOCB = 0b00000110;
  4806  0CD8  3006               	movlw	6
  4807  0CD9  0096               	movwf	22	;volatile
  4808                           
  4809                           ;main_Master.c: 187:     INTCONbits.RBIE = 1;
  4810  0CDA  158B               	bsf	11,3	;volatile
  4811                           
  4812                           ;main_Master.c: 188:     INTCONbits.GIE = 1;
  4813  0CDB  178B               	bsf	11,7	;volatile
  4814                           
  4815                           ;main_Master.c: 189:     TRISD = 0;
  4816  0CDC  0188               	clrf	8	;volatile
  4817                           
  4818                           ;main_Master.c: 190:     TRISC0 = 0;
  4819  0CDD  1007               	bcf	7,0	;volatile
  4820                           
  4821                           ;main_Master.c: 191:     TRISC1 = 0;
  4822  0CDE  1087               	bcf	7,1	;volatile
  4823                           
  4824                           ;main_Master.c: 192:     LCD_init();
  4825  0CDF  120A  158A  235B  120A  158A  	fcall	_LCD_init
  4826                           
  4827                           ;main_Master.c: 193:     LCD_Create_Char(0, atilde);
  4828  0CE4  3011               	movlw	(low ((_atilde-__stringbase)| (0+32768)))& (0+255)
  4829  0CE5  1283               	bcf	3,5	;RP0=0, select bank0
  4830  0CE6  1303               	bcf	3,6	;RP1=0, select bank0
  4831  0CE7  00B1               	movwf	??_SetUp
  4832  0CE8  0831               	movf	??_SetUp,w
  4833  0CE9  00F5               	movwf	LCD_Create_Char@chardata
  4834  0CEA  3000               	movlw	0
  4835  0CEB  120A  158A  219E  120A  158A  	fcall	_LCD_Create_Char
  4836                           
  4837                           ;main_Master.c: 194:     LCD_Create_Char(1, arrowr);
  4838  0CF0  3021               	movlw	(low ((_arrowr-__stringbase)| (0+32768)))& (0+255)
  4839  0CF1  1283               	bcf	3,5	;RP0=0, select bank0
  4840  0CF2  1303               	bcf	3,6	;RP1=0, select bank0
  4841  0CF3  00B1               	movwf	??_SetUp
  4842  0CF4  0831               	movf	??_SetUp,w
  4843  0CF5  00F5               	movwf	LCD_Create_Char@chardata
  4844  0CF6  3001               	movlw	1
  4845  0CF7  120A  158A  219E  120A  158A  	fcall	_LCD_Create_Char
  4846                           
  4847                           ;main_Master.c: 195:     LCD_Create_Char(2, termometro);
  4848  0CFC  3009               	movlw	(low ((_termometro-__stringbase)| (0+32768)))& (0+255)
  4849  0CFD  1283               	bcf	3,5	;RP0=0, select bank0
  4850  0CFE  1303               	bcf	3,6	;RP1=0, select bank0
  4851  0CFF  00B1               	movwf	??_SetUp
  4852  0D00  0831               	movf	??_SetUp,w
  4853  0D01  00F5               	movwf	LCD_Create_Char@chardata
  4854  0D02  3002               	movlw	2
  4855  0D03  120A  158A  219E  120A  158A  	fcall	_LCD_Create_Char
  4856                           
  4857                           ;main_Master.c: 196:     LCD_Create_Char(3, gota);
  4858  0D08  3001               	movlw	(low ((_gota-__stringbase)| (0+32768)))& (0+255)
  4859  0D09  1283               	bcf	3,5	;RP0=0, select bank0
  4860  0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  4861  0D0B  00B1               	movwf	??_SetUp
  4862  0D0C  0831               	movf	??_SetUp,w
  4863  0D0D  00F5               	movwf	LCD_Create_Char@chardata
  4864  0D0E  3003               	movlw	3
  4865  0D0F  120A  158A  219E  120A  158A  	fcall	_LCD_Create_Char
  4866                           
  4867                           ;main_Master.c: 197:     LCD_Create_Char(4, arrowr_vacio);
  4868  0D14  3019               	movlw	(low ((_arrowr_vacio-__stringbase)| (0+32768)))& (0+255)
  4869  0D15  1283               	bcf	3,5	;RP0=0, select bank0
  4870  0D16  1303               	bcf	3,6	;RP1=0, select bank0
  4871  0D17  00B1               	movwf	??_SetUp
  4872  0D18  0831               	movf	??_SetUp,w
  4873  0D19  00F5               	movwf	LCD_Create_Char@chardata
  4874  0D1A  3004               	movlw	4
  4875  0D1B  120A  158A  219E  120A  158A  	fcall	_LCD_Create_Char
  4876                           
  4877                           ;main_Master.c: 198:     LCD_clear();
  4878  0D20  120A  158A  212F  120A  158A  	fcall	_LCD_clear
  4879                           
  4880                           ;main_Master.c: 199:     uart_init(9600);
  4881  0D25  3080               	movlw	128
  4882  0D26  00F2               	movwf	?_uart_init
  4883  0D27  3025               	movlw	37
  4884  0D28  00F3               	movwf	?_uart_init+1
  4885  0D29  120A  158A  211A  120A  158A  	fcall	_uart_init
  4886                           
  4887                           ;main_Master.c: 200:     I2C_Master_Init(100000);
  4888  0D2E  3000               	movlw	0
  4889  0D2F  1283               	bcf	3,5	;RP0=0, select bank0
  4890  0D30  1303               	bcf	3,6	;RP1=0, select bank0
  4891  0D31  00A9               	movwf	I2C_Master_Init@c+3
  4892  0D32  3001               	movlw	1
  4893  0D33  00A8               	movwf	I2C_Master_Init@c+2
  4894  0D34  3086               	movlw	134
  4895  0D35  00A7               	movwf	I2C_Master_Init@c+1
  4896  0D36  30A0               	movlw	160
  4897  0D37  00A6               	movwf	I2C_Master_Init@c
  4898  0D38  120A  118A  27BC  120A  158A  	fcall	_I2C_Master_Init
  4899                           
  4900                           ;main_Master.c: 203:     Zeit_Datum_Set();
  4901  0D3D  120A  158A  2696   	fcall	_Zeit_Datum_Set
  4902  0D40  0008               	return
  4903  0D41                     __end_of_SetUp:	
  4904                           
  4905                           	psect	text16
  4906  091A                     __ptext16:	
  4907 ;; *************** function _uart_init *****************
  4908 ;; Defined at:
  4909 ;;		line 14 in file "UART.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;		None
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;		None
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  1    wreg      void 
  4916 ;; Registers used:
  4917 ;;		wreg, status,2
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4923 ;;      Params:         2       0       0       0       0
  4924 ;;      Locals:         0       0       0       0       0
  4925 ;;      Temps:          0       0       0       0       0
  4926 ;;      Totals:         2       0       0       0       0
  4927 ;;Total ram usage:        2 bytes
  4928 ;; Hardware stack levels used:    1
  4929 ;; Hardware stack levels required when called:    1
  4930 ;; This function calls:
  4931 ;;		Nothing
  4932 ;; This function is called by:
  4933 ;;		_SetUp
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937                           
  4938                           ;psect for function _uart_init
  4939  091A                     _uart_init:	
  4940                           
  4941                           ;UART.c: 15:     TXSTAbits.SYNC = 0;
  4942                           
  4943                           ;incstack = 0
  4944                           ; Regs used in _uart_init: [wreg+status,2]
  4945  091A  1683               	bsf	3,5	;RP0=1, select bank1
  4946  091B  1303               	bcf	3,6	;RP1=0, select bank1
  4947  091C  1218               	bcf	24,4	;volatile
  4948                           
  4949                           ;UART.c: 16:     TXSTAbits.BRGH = 1;
  4950  091D  1518               	bsf	24,2	;volatile
  4951                           
  4952                           ;UART.c: 17:     BAUDCTLbits.BRG16 = 1;
  4953  091E  1683               	bsf	3,5	;RP0=1, select bank3
  4954  091F  1703               	bsf	3,6	;RP1=1, select bank3
  4955  0920  1587               	bsf	7,3	;volatile
  4956                           
  4957                           ;UART.c: 18:     SPBRG = 103;
  4958  0921  3067               	movlw	103
  4959  0922  1683               	bsf	3,5	;RP0=1, select bank1
  4960  0923  1303               	bcf	3,6	;RP1=0, select bank1
  4961  0924  0099               	movwf	25	;volatile
  4962                           
  4963                           ;UART.c: 19:     SPBRGH = 0;
  4964  0925  019A               	clrf	26	;volatile
  4965                           
  4966                           ;UART.c: 21:     RCSTAbits.SPEN = 1;
  4967  0926  1283               	bcf	3,5	;RP0=0, select bank0
  4968  0927  1303               	bcf	3,6	;RP1=0, select bank0
  4969  0928  1798               	bsf	24,7	;volatile
  4970                           
  4971                           ;UART.c: 22:     RCSTAbits.RX9 = 0;
  4972  0929  1318               	bcf	24,6	;volatile
  4973                           
  4974                           ;UART.c: 23:     RCSTAbits.CREN = 1;
  4975  092A  1618               	bsf	24,4	;volatile
  4976                           
  4977                           ;UART.c: 25:     TXSTAbits.TXEN = 1;
  4978  092B  1683               	bsf	3,5	;RP0=1, select bank1
  4979  092C  1303               	bcf	3,6	;RP1=0, select bank1
  4980  092D  1698               	bsf	24,5	;volatile
  4981  092E  0008               	return
  4982  092F                     __end_of_uart_init:	
  4983                           
  4984                           	psect	text17
  4985  0E96                     __ptext17:	
  4986 ;; *************** function _Zeit_Datum_Set *****************
  4987 ;; Defined at:
  4988 ;;		line 64 in file "RTC.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;		None
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;		None
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      void 
  4995 ;; Registers used:
  4996 ;;		wreg, status,2, status,0, pclath, cstack
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5002 ;;      Params:         0       0       0       0       0
  5003 ;;      Locals:         0       0       0       0       0
  5004 ;;      Temps:          0       2       0       0       0
  5005 ;;      Totals:         0       2       0       0       0
  5006 ;;Total ram usage:        2 bytes
  5007 ;; Hardware stack levels used:    1
  5008 ;; Hardware stack levels required when called:    3
  5009 ;; This function calls:
  5010 ;;		_DEC_a_BCD
  5011 ;;		_I2C_Master_Start
  5012 ;;		_I2C_Master_Stop
  5013 ;;		_I2C_Master_Write
  5014 ;; This function is called by:
  5015 ;;		_SetUp
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           
  5020                           ;psect for function _Zeit_Datum_Set
  5021  0E96                     _Zeit_Datum_Set:	
  5022                           
  5023                           ;RTC.c: 65:     I2C_Master_Start();
  5024                           
  5025                           ;incstack = 0
  5026                           ; Regs used in _Zeit_Datum_Set: [wreg+status,2+status,0+pclath+cstack]
  5027  0E96  120A  158A  20A9  120A  158A  	fcall	_I2C_Master_Start
  5028                           
  5029                           ;RTC.c: 66:     I2C_Master_Write(0xD0);
  5030  0E9B  30D0               	movlw	208
  5031  0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  5032  0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  5033  0E9E  00AD               	movwf	I2C_Master_Write@d
  5034  0E9F  3000               	movlw	0
  5035  0EA0  00AE               	movwf	I2C_Master_Write@d+1
  5036  0EA1  120A  158A  20B7  120A  158A  	fcall	_I2C_Master_Write
  5037                           
  5038                           ;RTC.c: 67:     I2C_Master_Write(0);
  5039  0EA6  3000               	movlw	0
  5040  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  5041  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  5042  0EA9  00AD               	movwf	I2C_Master_Write@d
  5043  0EAA  00AE               	movwf	I2C_Master_Write@d+1
  5044  0EAB  120A  158A  20B7  120A  158A  	fcall	_I2C_Master_Write
  5045                           
  5046                           ;RTC.c: 68:     I2C_Master_Write(DEC_a_BCD(seg));
  5047  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  5048  0EB1  1303               	bcf	3,6	;RP1=0, select bank0
  5049  0EB2  0853               	movf	_seg,w
  5050  0EB3  120A  158A  2225  120A  158A  	fcall	_DEC_a_BCD
  5051  0EB8  1283               	bcf	3,5	;RP0=0, select bank0
  5052  0EB9  1303               	bcf	3,6	;RP1=0, select bank0
  5053  0EBA  00AF               	movwf	??_Zeit_Datum_Set
  5054  0EBB  01B0               	clrf	??_Zeit_Datum_Set+1
  5055  0EBC  082F               	movf	??_Zeit_Datum_Set,w
  5056  0EBD  00AD               	movwf	I2C_Master_Write@d
  5057  0EBE  0830               	movf	??_Zeit_Datum_Set+1,w
  5058  0EBF  00AE               	movwf	I2C_Master_Write@d+1
  5059  0EC0  120A  158A  20B7  120A  158A  	fcall	_I2C_Master_Write
  5060                           
  5061                           ;RTC.c: 69:     I2C_Master_Write(DEC_a_BCD(min));
  5062  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  5063  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  5064  0EC7  085E               	movf	_min,w
  5065  0EC8  120A  158A  2225  120A  158A  	fcall	_DEC_a_BCD
  5066  0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  5067  0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  5068  0ECF  00AF               	movwf	??_Zeit_Datum_Set
  5069  0ED0  01B0               	clrf	??_Zeit_Datum_Set+1
  5070  0ED1  082F               	movf	??_Zeit_Datum_Set,w
  5071  0ED2  00AD               	movwf	I2C_Master_Write@d
  5072  0ED3  0830               	movf	??_Zeit_Datum_Set+1,w
  5073  0ED4  00AE               	movwf	I2C_Master_Write@d+1
  5074  0ED5  120A  158A  20B7  120A  158A  	fcall	_I2C_Master_Write
  5075                           
  5076                           ;RTC.c: 70:     I2C_Master_Write(DEC_a_BCD(hora));
  5077  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  5078  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  5079  0EDC  085D               	movf	_hora,w
  5080  0EDD  120A  158A  2225  120A  158A  	fcall	_DEC_a_BCD
  5081  0EE2  1283               	bcf	3,5	;RP0=0, select bank0
  5082  0EE3  1303               	bcf	3,6	;RP1=0, select bank0
  5083  0EE4  00AF               	movwf	??_Zeit_Datum_Set
  5084  0EE5  01B0               	clrf	??_Zeit_Datum_Set+1
  5085  0EE6  082F               	movf	??_Zeit_Datum_Set,w
  5086  0EE7  00AD               	movwf	I2C_Master_Write@d
  5087  0EE8  0830               	movf	??_Zeit_Datum_Set+1,w
  5088  0EE9  00AE               	movwf	I2C_Master_Write@d+1
  5089  0EEA  120A  158A  20B7  120A  158A  	fcall	_I2C_Master_Write
  5090                           
  5091                           ;RTC.c: 71:     I2C_Master_Write(DEC_a_BCD(dia));
  5092  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  5093  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  5094  0EF1  085C               	movf	_dia,w
  5095  0EF2  120A  158A  2225  120A  158A  	fcall	_DEC_a_BCD
  5096  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  5097  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  5098  0EF9  00AF               	movwf	??_Zeit_Datum_Set
  5099  0EFA  01B0               	clrf	??_Zeit_Datum_Set+1
  5100  0EFB  082F               	movf	??_Zeit_Datum_Set,w
  5101  0EFC  00AD               	movwf	I2C_Master_Write@d
  5102  0EFD  0830               	movf	??_Zeit_Datum_Set+1,w
  5103  0EFE  00AE               	movwf	I2C_Master_Write@d+1
  5104  0EFF  120A  158A  20B7  120A  158A  	fcall	_I2C_Master_Write
  5105                           
  5106                           ;RTC.c: 72:     I2C_Master_Write(DEC_a_BCD(datum));
  5107  0F04  1283               	bcf	3,5	;RP0=0, select bank0
  5108  0F05  1303               	bcf	3,6	;RP1=0, select bank0
  5109  0F06  085B               	movf	_datum,w
  5110  0F07  120A  158A  2225  120A  158A  	fcall	_DEC_a_BCD
  5111  0F0C  1283               	bcf	3,5	;RP0=0, select bank0
  5112  0F0D  1303               	bcf	3,6	;RP1=0, select bank0
  5113  0F0E  00AF               	movwf	??_Zeit_Datum_Set
  5114  0F0F  01B0               	clrf	??_Zeit_Datum_Set+1
  5115  0F10  082F               	movf	??_Zeit_Datum_Set,w
  5116  0F11  00AD               	movwf	I2C_Master_Write@d
  5117  0F12  0830               	movf	??_Zeit_Datum_Set+1,w
  5118  0F13  00AE               	movwf	I2C_Master_Write@d+1
  5119  0F14  120A  158A  20B7  120A  158A  	fcall	_I2C_Master_Write
  5120                           
  5121                           ;RTC.c: 73:     I2C_Master_Write(DEC_a_BCD(mes));
  5122  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  5123  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  5124  0F1B  085A               	movf	_mes,w
  5125  0F1C  120A  158A  2225  120A  158A  	fcall	_DEC_a_BCD
  5126  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  5127  0F22  1303               	bcf	3,6	;RP1=0, select bank0
  5128  0F23  00AF               	movwf	??_Zeit_Datum_Set
  5129  0F24  01B0               	clrf	??_Zeit_Datum_Set+1
  5130  0F25  082F               	movf	??_Zeit_Datum_Set,w
  5131  0F26  00AD               	movwf	I2C_Master_Write@d
  5132  0F27  0830               	movf	??_Zeit_Datum_Set+1,w
  5133  0F28  00AE               	movwf	I2C_Master_Write@d+1
  5134  0F29  120A  158A  20B7  120A  158A  	fcall	_I2C_Master_Write
  5135                           
  5136                           ;RTC.c: 74:     I2C_Master_Write(DEC_a_BCD(jahr));
  5137  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  5138  0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  5139  0F30  0859               	movf	_jahr,w
  5140  0F31  120A  158A  2225  120A  158A  	fcall	_DEC_a_BCD
  5141  0F36  1283               	bcf	3,5	;RP0=0, select bank0
  5142  0F37  1303               	bcf	3,6	;RP1=0, select bank0
  5143  0F38  00AF               	movwf	??_Zeit_Datum_Set
  5144  0F39  01B0               	clrf	??_Zeit_Datum_Set+1
  5145  0F3A  082F               	movf	??_Zeit_Datum_Set,w
  5146  0F3B  00AD               	movwf	I2C_Master_Write@d
  5147  0F3C  0830               	movf	??_Zeit_Datum_Set+1,w
  5148  0F3D  00AE               	movwf	I2C_Master_Write@d+1
  5149  0F3E  120A  158A  20B7  120A  158A  	fcall	_I2C_Master_Write
  5150                           
  5151                           ;RTC.c: 75:     I2C_Master_Stop();
  5152  0F43  120A  158A  20B0   	fcall	_I2C_Master_Stop
  5153  0F46  0008               	return
  5154  0F47                     __end_of_Zeit_Datum_Set:	
  5155                           
  5156                           	psect	text18
  5157  08B7                     __ptext18:	
  5158 ;; *************** function _I2C_Master_Write *****************
  5159 ;; Defined at:
  5160 ;;		line 65 in file "I2C.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;  d               2   13[BANK0 ] unsigned int 
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;		None
  5165 ;; Return value:  Size  Location     Type
  5166 ;;                  1    wreg      void 
  5167 ;; Registers used:
  5168 ;;		wreg, status,2, status,0, pclath, cstack
  5169 ;; Tracked objects:
  5170 ;;		On entry : 0/0
  5171 ;;		On exit  : 0/0
  5172 ;;		Unchanged: 0/0
  5173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5174 ;;      Params:         0       2       0       0       0
  5175 ;;      Locals:         0       0       0       0       0
  5176 ;;      Temps:          0       0       0       0       0
  5177 ;;      Totals:         0       2       0       0       0
  5178 ;;Total ram usage:        2 bytes
  5179 ;; Hardware stack levels used:    1
  5180 ;; Hardware stack levels required when called:    2
  5181 ;; This function calls:
  5182 ;;		_I2C_Master_Wait
  5183 ;; This function is called by:
  5184 ;;		_mostrarLCD
  5185 ;;		_Zeit_Datum_Set
  5186 ;;		_get_Time
  5187 ;;		_get_hora
  5188 ;;		_temp_objeto
  5189 ;;		_temp_ambiente
  5190 ;;		_IMU_init
  5191 ;;		_Acc_X
  5192 ;;		_Acc_Y
  5193 ;;		_Acc_Z
  5194 ;;		_Gy_X
  5195 ;;		_Gy_Y
  5196 ;;		_Gy_Z
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           
  5201                           ;psect for function _I2C_Master_Write
  5202  08B7                     _I2C_Master_Write:	
  5203                           
  5204                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  5205                           
  5206                           ;incstack = 0
  5207                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  5208  08B7  120A  158A  20CF   	fcall	_I2C_Master_Wait
  5209                           
  5210                           ;I2C.c: 68:     SSPBUF = d;
  5211  08BA  1283               	bcf	3,5	;RP0=0, select bank0
  5212  08BB  1303               	bcf	3,6	;RP1=0, select bank0
  5213  08BC  082D               	movf	I2C_Master_Write@d,w
  5214  08BD  0093               	movwf	19	;volatile
  5215  08BE  0008               	return
  5216  08BF                     __end_of_I2C_Master_Write:	
  5217                           
  5218                           	psect	text19
  5219  08B0                     __ptext19:	
  5220 ;; *************** function _I2C_Master_Stop *****************
  5221 ;; Defined at:
  5222 ;;		line 55 in file "I2C.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;		None
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;		None
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  1    wreg      void 
  5229 ;; Registers used:
  5230 ;;		wreg, status,2, status,0, pclath, cstack
  5231 ;; Tracked objects:
  5232 ;;		On entry : 0/0
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5236 ;;      Params:         0       0       0       0       0
  5237 ;;      Locals:         0       0       0       0       0
  5238 ;;      Temps:          0       0       0       0       0
  5239 ;;      Totals:         0       0       0       0       0
  5240 ;;Total ram usage:        0 bytes
  5241 ;; Hardware stack levels used:    1
  5242 ;; Hardware stack levels required when called:    2
  5243 ;; This function calls:
  5244 ;;		_I2C_Master_Wait
  5245 ;; This function is called by:
  5246 ;;		_mostrarLCD
  5247 ;;		_Zeit_Datum_Set
  5248 ;;		_get_Time
  5249 ;;		_get_hora
  5250 ;;		_temp_objeto
  5251 ;;		_temp_ambiente
  5252 ;;		_IMU_init
  5253 ;;		_Acc_X
  5254 ;;		_Acc_Y
  5255 ;;		_Acc_Z
  5256 ;;		_Gy_X
  5257 ;;		_Gy_Y
  5258 ;;		_Gy_Z
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           
  5263                           ;psect for function _I2C_Master_Stop
  5264  08B0                     _I2C_Master_Stop:	
  5265                           
  5266                           ;I2C.c: 57:     I2C_Master_Wait();
  5267                           
  5268                           ;incstack = 0
  5269                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  5270  08B0  120A  158A  20CF   	fcall	_I2C_Master_Wait
  5271                           
  5272                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  5273  08B3  1683               	bsf	3,5	;RP0=1, select bank1
  5274  08B4  1303               	bcf	3,6	;RP1=0, select bank1
  5275  08B5  1511               	bsf	17,2	;volatile
  5276  08B6  0008               	return
  5277  08B7                     __end_of_I2C_Master_Stop:	
  5278                           
  5279                           	psect	text20
  5280  08A9                     __ptext20:	
  5281 ;; *************** function _I2C_Master_Start *****************
  5282 ;; Defined at:
  5283 ;;		line 39 in file "I2C.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;		None
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;		None
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  1    wreg      void 
  5290 ;; Registers used:
  5291 ;;		wreg, status,2, status,0, pclath, cstack
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5297 ;;      Params:         0       0       0       0       0
  5298 ;;      Locals:         0       0       0       0       0
  5299 ;;      Temps:          0       0       0       0       0
  5300 ;;      Totals:         0       0       0       0       0
  5301 ;;Total ram usage:        0 bytes
  5302 ;; Hardware stack levels used:    1
  5303 ;; Hardware stack levels required when called:    2
  5304 ;; This function calls:
  5305 ;;		_I2C_Master_Wait
  5306 ;; This function is called by:
  5307 ;;		_mostrarLCD
  5308 ;;		_Zeit_Datum_Set
  5309 ;;		_get_Time
  5310 ;;		_get_hora
  5311 ;;		_temp_objeto
  5312 ;;		_temp_ambiente
  5313 ;;		_IMU_init
  5314 ;;		_Acc_X
  5315 ;;		_Acc_Y
  5316 ;;		_Acc_Z
  5317 ;;		_Gy_X
  5318 ;;		_Gy_Y
  5319 ;;		_Gy_Z
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           
  5324                           ;psect for function _I2C_Master_Start
  5325  08A9                     _I2C_Master_Start:	
  5326                           
  5327                           ;I2C.c: 41:     I2C_Master_Wait();
  5328                           
  5329                           ;incstack = 0
  5330                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  5331  08A9  120A  158A  20CF   	fcall	_I2C_Master_Wait
  5332                           
  5333                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  5334  08AC  1683               	bsf	3,5	;RP0=1, select bank1
  5335  08AD  1303               	bcf	3,6	;RP1=0, select bank1
  5336  08AE  1411               	bsf	17,0	;volatile
  5337  08AF  0008               	return
  5338  08B0                     __end_of_I2C_Master_Start:	
  5339                           
  5340                           	psect	text21
  5341  08CF                     __ptext21:	
  5342 ;; *************** function _I2C_Master_Wait *****************
  5343 ;; Defined at:
  5344 ;;		line 32 in file "I2C.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;		None
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;		None
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  1    wreg      void 
  5351 ;; Registers used:
  5352 ;;		wreg, status,2
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5358 ;;      Params:         0       0       0       0       0
  5359 ;;      Locals:         0       0       0       0       0
  5360 ;;      Temps:          0       0       0       0       0
  5361 ;;      Totals:         0       0       0       0       0
  5362 ;;Total ram usage:        0 bytes
  5363 ;; Hardware stack levels used:    1
  5364 ;; Hardware stack levels required when called:    1
  5365 ;; This function calls:
  5366 ;;		Nothing
  5367 ;; This function is called by:
  5368 ;;		_I2C_Master_Start
  5369 ;;		_I2C_Master_Stop
  5370 ;;		_I2C_Master_Write
  5371 ;;		_I2C_Master_Read
  5372 ;;		_I2C_Master_RepeatedStart
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           
  5377                           ;psect for function _I2C_Master_Wait
  5378  08CF                     _I2C_Master_Wait:	
  5379  08CF                     l311:	
  5380                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5381                           
  5382                           ;incstack = 0
  5383                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  5384                           
  5385  08CF  1683               	bsf	3,5	;RP0=1, select bank1
  5386  08D0  1303               	bcf	3,6	;RP1=0, select bank1
  5387  08D1  1914               	btfsc	20,2	;volatile
  5388  08D2  28CF               	goto	l311
  5389  08D3  0811               	movf	17,w	;volatile
  5390  08D4  391F               	andlw	31
  5391  08D5  1903               	btfsc	3,2
  5392  08D6  0008               	return
  5393  08D7  28CF               	goto	l311
  5394  08D8                     __end_of_I2C_Master_Wait:	
  5395                           
  5396                           	psect	text22
  5397  0A25                     __ptext22:	
  5398 ;; *************** function _DEC_a_BCD *****************
  5399 ;; Defined at:
  5400 ;;		line 32 in file "RTC.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;  numDEC          1    wreg     unsigned char 
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;  numDEC          1    9[COMMON] unsigned char 
  5405 ;; Return value:  Size  Location     Type
  5406 ;;                  1    wreg      unsigned char 
  5407 ;; Registers used:
  5408 ;;		wreg, status,2, status,0, pclath, cstack
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5414 ;;      Params:         0       0       0       0       0
  5415 ;;      Locals:         1       0       0       0       0
  5416 ;;      Temps:          0       5       0       0       0
  5417 ;;      Totals:         1       5       0       0       0
  5418 ;;Total ram usage:        6 bytes
  5419 ;; Hardware stack levels used:    1
  5420 ;; Hardware stack levels required when called:    2
  5421 ;; This function calls:
  5422 ;;		___awdiv
  5423 ;;		___awmod
  5424 ;; This function is called by:
  5425 ;;		_Zeit_Datum_Set
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           
  5430                           ;psect for function _DEC_a_BCD
  5431  0A25                     _DEC_a_BCD:	
  5432                           
  5433                           ;incstack = 0
  5434                           ; Regs used in _DEC_a_BCD: [wreg+status,2+status,0+pclath+cstack]
  5435                           ;DEC_a_BCD@numDEC stored from wreg
  5436  0A25  00F9               	movwf	DEC_a_BCD@numDEC
  5437                           
  5438                           ;RTC.c: 33:     return ((numDEC / 10) << 4) + (numDEC % 10);
  5439  0A26  300A               	movlw	10
  5440  0A27  1283               	bcf	3,5	;RP0=0, select bank0
  5441  0A28  1303               	bcf	3,6	;RP1=0, select bank0
  5442  0A29  00A0               	movwf	___awdiv@divisor
  5443  0A2A  3000               	movlw	0
  5444  0A2B  00A1               	movwf	___awdiv@divisor+1
  5445  0A2C  0879               	movf	DEC_a_BCD@numDEC,w
  5446  0A2D  00A8               	movwf	??_DEC_a_BCD
  5447  0A2E  01A9               	clrf	??_DEC_a_BCD+1
  5448  0A2F  0828               	movf	??_DEC_a_BCD,w
  5449  0A30  00A2               	movwf	___awdiv@dividend
  5450  0A31  0829               	movf	??_DEC_a_BCD+1,w
  5451  0A32  00A3               	movwf	___awdiv@dividend+1
  5452  0A33  120A  158A  22A0  120A  158A  	fcall	___awdiv
  5453  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  5454  0A39  1303               	bcf	3,6	;RP1=0, select bank0
  5455  0A3A  0820               	movf	?___awdiv,w
  5456  0A3B  00AA               	movwf	??_DEC_a_BCD+2
  5457  0A3C  3004               	movlw	4
  5458  0A3D                     u1555:	
  5459  0A3D  1003               	clrc
  5460  0A3E  0DAA               	rlf	??_DEC_a_BCD+2,f
  5461  0A3F  3EFF               	addlw	-1
  5462  0A40  1D03               	skipz
  5463  0A41  2A3D               	goto	u1555
  5464  0A42  300A               	movlw	10
  5465  0A43  00F2               	movwf	___awmod@divisor
  5466  0A44  3000               	movlw	0
  5467  0A45  00F3               	movwf	___awmod@divisor+1
  5468  0A46  0879               	movf	DEC_a_BCD@numDEC,w
  5469  0A47  00AB               	movwf	??_DEC_a_BCD+3
  5470  0A48  01AC               	clrf	??_DEC_a_BCD+4
  5471  0A49  082B               	movf	??_DEC_a_BCD+3,w
  5472  0A4A  00F4               	movwf	___awmod@dividend
  5473  0A4B  082C               	movf	??_DEC_a_BCD+4,w
  5474  0A4C  00F5               	movwf	___awmod@dividend+1
  5475  0A4D  120A  158A  2255   	fcall	___awmod
  5476  0A50  0872               	movf	?___awmod,w
  5477  0A51  1283               	bcf	3,5	;RP0=0, select bank0
  5478  0A52  1303               	bcf	3,6	;RP1=0, select bank0
  5479  0A53  072A               	addwf	??_DEC_a_BCD+2,w
  5480  0A54  0008               	return
  5481  0A55                     __end_of_DEC_a_BCD:	
  5482                           
  5483                           	psect	text23
  5484  0A55                     __ptext23:	
  5485 ;; *************** function ___awmod *****************
  5486 ;; Defined at:
  5487 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;  divisor         2    2[COMMON] int 
  5490 ;;  dividend        2    4[COMMON] int 
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;  sign            1    8[COMMON] unsigned char 
  5493 ;;  counter         1    7[COMMON] unsigned char 
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  2    2[COMMON] int 
  5496 ;; Registers used:
  5497 ;;		wreg, status,2, status,0
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5503 ;;      Params:         4       0       0       0       0
  5504 ;;      Locals:         2       0       0       0       0
  5505 ;;      Temps:          1       0       0       0       0
  5506 ;;      Totals:         7       0       0       0       0
  5507 ;;Total ram usage:        7 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; Hardware stack levels required when called:    1
  5510 ;; This function calls:
  5511 ;;		Nothing
  5512 ;; This function is called by:
  5513 ;;		_display_Uhrzeit
  5514 ;;		_display_Datum
  5515 ;;		_mostrarLCD
  5516 ;;		_DEC_a_BCD
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           
  5521                           ;psect for function ___awmod
  5522  0A55                     ___awmod:	
  5523                           
  5524                           ;incstack = 0
  5525                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5526  0A55  01F8               	clrf	___awmod@sign
  5527  0A56  1FF5               	btfss	___awmod@dividend+1,7
  5528  0A57  2A5F               	goto	l3948
  5529  0A58  09F4               	comf	___awmod@dividend,f
  5530  0A59  09F5               	comf	___awmod@dividend+1,f
  5531  0A5A  0AF4               	incf	___awmod@dividend,f
  5532  0A5B  1903               	skipnz
  5533  0A5C  0AF5               	incf	___awmod@dividend+1,f
  5534  0A5D  01F8               	clrf	___awmod@sign
  5535  0A5E  0AF8               	incf	___awmod@sign,f
  5536  0A5F                     l3948:	
  5537  0A5F  1FF3               	btfss	___awmod@divisor+1,7
  5538  0A60  2A66               	goto	l3952
  5539  0A61  09F2               	comf	___awmod@divisor,f
  5540  0A62  09F3               	comf	___awmod@divisor+1,f
  5541  0A63  0AF2               	incf	___awmod@divisor,f
  5542  0A64  1903               	skipnz
  5543  0A65  0AF3               	incf	___awmod@divisor+1,f
  5544  0A66                     l3952:	
  5545  0A66  0872               	movf	___awmod@divisor,w
  5546  0A67  0473               	iorwf	___awmod@divisor+1,w
  5547  0A68  1903               	btfsc	3,2
  5548  0A69  2A93               	goto	l3970
  5549  0A6A  01F7               	clrf	___awmod@counter
  5550  0A6B  0AF7               	incf	___awmod@counter,f
  5551  0A6C                     l3960:	
  5552  0A6C  1BF3               	btfsc	___awmod@divisor+1,7
  5553  0A6D  2A7A               	goto	l3962
  5554  0A6E  3001               	movlw	1
  5555  0A6F                     u1495:	
  5556  0A6F  1003               	clrc
  5557  0A70  0DF2               	rlf	___awmod@divisor,f
  5558  0A71  0DF3               	rlf	___awmod@divisor+1,f
  5559  0A72  3EFF               	addlw	-1
  5560  0A73  1D03               	skipz
  5561  0A74  2A6F               	goto	u1495
  5562  0A75  3001               	movlw	1
  5563  0A76  00F6               	movwf	??___awmod
  5564  0A77  0876               	movf	??___awmod,w
  5565  0A78  07F7               	addwf	___awmod@counter,f
  5566  0A79  2A6C               	goto	l3960
  5567  0A7A                     l3962:	
  5568  0A7A  0873               	movf	___awmod@divisor+1,w
  5569  0A7B  0275               	subwf	___awmod@dividend+1,w
  5570  0A7C  1D03               	skipz
  5571  0A7D  2A80               	goto	u1515
  5572  0A7E  0872               	movf	___awmod@divisor,w
  5573  0A7F  0274               	subwf	___awmod@dividend,w
  5574  0A80                     u1515:	
  5575  0A80  1C03               	skipc
  5576  0A81  2A88               	goto	l3966
  5577  0A82  0872               	movf	___awmod@divisor,w
  5578  0A83  02F4               	subwf	___awmod@dividend,f
  5579  0A84  0873               	movf	___awmod@divisor+1,w
  5580  0A85  1C03               	skipc
  5581  0A86  03F5               	decf	___awmod@dividend+1,f
  5582  0A87  02F5               	subwf	___awmod@dividend+1,f
  5583  0A88                     l3966:	
  5584  0A88  3001               	movlw	1
  5585  0A89                     u1525:	
  5586  0A89  1003               	clrc
  5587  0A8A  0CF3               	rrf	___awmod@divisor+1,f
  5588  0A8B  0CF2               	rrf	___awmod@divisor,f
  5589  0A8C  3EFF               	addlw	-1
  5590  0A8D  1D03               	skipz
  5591  0A8E  2A89               	goto	u1525
  5592  0A8F  3001               	movlw	1
  5593  0A90  02F7               	subwf	___awmod@counter,f
  5594  0A91  1D03               	btfss	3,2
  5595  0A92  2A7A               	goto	l3962
  5596  0A93                     l3970:	
  5597  0A93  0878               	movf	___awmod@sign,w
  5598  0A94  1903               	btfsc	3,2
  5599  0A95  2A9B               	goto	l3974
  5600  0A96  09F4               	comf	___awmod@dividend,f
  5601  0A97  09F5               	comf	___awmod@dividend+1,f
  5602  0A98  0AF4               	incf	___awmod@dividend,f
  5603  0A99  1903               	skipnz
  5604  0A9A  0AF5               	incf	___awmod@dividend+1,f
  5605  0A9B                     l3974:	
  5606  0A9B  0875               	movf	___awmod@dividend+1,w
  5607  0A9C  00F3               	movwf	?___awmod+1
  5608  0A9D  0874               	movf	___awmod@dividend,w
  5609  0A9E  00F2               	movwf	?___awmod
  5610  0A9F  0008               	return
  5611  0AA0                     __end_of___awmod:	
  5612                           
  5613                           	psect	text24
  5614  0AA0                     __ptext24:	
  5615 ;; *************** function ___awdiv *****************
  5616 ;; Defined at:
  5617 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;  divisor         2    0[BANK0 ] int 
  5620 ;;  dividend        2    2[BANK0 ] int 
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;  quotient        2    6[BANK0 ] int 
  5623 ;;  sign            1    5[BANK0 ] unsigned char 
  5624 ;;  counter         1    4[BANK0 ] unsigned char 
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  2    0[BANK0 ] int 
  5627 ;; Registers used:
  5628 ;;		wreg, status,2, status,0
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5634 ;;      Params:         0       4       0       0       0
  5635 ;;      Locals:         0       4       0       0       0
  5636 ;;      Temps:          1       0       0       0       0
  5637 ;;      Totals:         1       8       0       0       0
  5638 ;;Total ram usage:        9 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; Hardware stack levels required when called:    1
  5641 ;; This function calls:
  5642 ;;		Nothing
  5643 ;; This function is called by:
  5644 ;;		_display_Uhrzeit
  5645 ;;		_display_Datum
  5646 ;;		_mostrarLCD
  5647 ;;		_DEC_a_BCD
  5648 ;;		_uint_to_array
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           
  5653                           ;psect for function ___awdiv
  5654  0AA0                     ___awdiv:	
  5655                           
  5656                           ;incstack = 0
  5657                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5658  0AA0  1283               	bcf	3,5	;RP0=0, select bank0
  5659  0AA1  1303               	bcf	3,6	;RP1=0, select bank0
  5660  0AA2  01A5               	clrf	___awdiv@sign
  5661  0AA3  1FA1               	btfss	___awdiv@divisor+1,7
  5662  0AA4  2AAC               	goto	l3904
  5663  0AA5  09A0               	comf	___awdiv@divisor,f
  5664  0AA6  09A1               	comf	___awdiv@divisor+1,f
  5665  0AA7  0AA0               	incf	___awdiv@divisor,f
  5666  0AA8  1903               	skipnz
  5667  0AA9  0AA1               	incf	___awdiv@divisor+1,f
  5668  0AAA  01A5               	clrf	___awdiv@sign
  5669  0AAB  0AA5               	incf	___awdiv@sign,f
  5670  0AAC                     l3904:	
  5671  0AAC  1FA3               	btfss	___awdiv@dividend+1,7
  5672  0AAD  2AB7               	goto	l3910
  5673  0AAE  09A2               	comf	___awdiv@dividend,f
  5674  0AAF  09A3               	comf	___awdiv@dividend+1,f
  5675  0AB0  0AA2               	incf	___awdiv@dividend,f
  5676  0AB1  1903               	skipnz
  5677  0AB2  0AA3               	incf	___awdiv@dividend+1,f
  5678  0AB3  3001               	movlw	1
  5679  0AB4  00F8               	movwf	??___awdiv
  5680  0AB5  0878               	movf	??___awdiv,w
  5681  0AB6  06A5               	xorwf	___awdiv@sign,f
  5682  0AB7                     l3910:	
  5683  0AB7  01A6               	clrf	___awdiv@quotient
  5684  0AB8  01A7               	clrf	___awdiv@quotient+1
  5685  0AB9  0820               	movf	___awdiv@divisor,w
  5686  0ABA  0421               	iorwf	___awdiv@divisor+1,w
  5687  0ABB  1903               	btfsc	3,2
  5688  0ABC  2AEE               	goto	l3932
  5689  0ABD  01A4               	clrf	___awdiv@counter
  5690  0ABE  0AA4               	incf	___awdiv@counter,f
  5691  0ABF                     l3920:	
  5692  0ABF  1BA1               	btfsc	___awdiv@divisor+1,7
  5693  0AC0  2ACD               	goto	l3922
  5694  0AC1  3001               	movlw	1
  5695  0AC2                     u1395:	
  5696  0AC2  1003               	clrc
  5697  0AC3  0DA0               	rlf	___awdiv@divisor,f
  5698  0AC4  0DA1               	rlf	___awdiv@divisor+1,f
  5699  0AC5  3EFF               	addlw	-1
  5700  0AC6  1D03               	skipz
  5701  0AC7  2AC2               	goto	u1395
  5702  0AC8  3001               	movlw	1
  5703  0AC9  00F8               	movwf	??___awdiv
  5704  0ACA  0878               	movf	??___awdiv,w
  5705  0ACB  07A4               	addwf	___awdiv@counter,f
  5706  0ACC  2ABF               	goto	l3920
  5707  0ACD                     l3922:	
  5708  0ACD  3001               	movlw	1
  5709  0ACE                     u1415:	
  5710  0ACE  1003               	clrc
  5711  0ACF  0DA6               	rlf	___awdiv@quotient,f
  5712  0AD0  0DA7               	rlf	___awdiv@quotient+1,f
  5713  0AD1  3EFF               	addlw	-1
  5714  0AD2  1D03               	skipz
  5715  0AD3  2ACE               	goto	u1415
  5716  0AD4  0821               	movf	___awdiv@divisor+1,w
  5717  0AD5  0223               	subwf	___awdiv@dividend+1,w
  5718  0AD6  1D03               	skipz
  5719  0AD7  2ADA               	goto	u1425
  5720  0AD8  0820               	movf	___awdiv@divisor,w
  5721  0AD9  0222               	subwf	___awdiv@dividend,w
  5722  0ADA                     u1425:	
  5723  0ADA  1C03               	skipc
  5724  0ADB  2AE3               	goto	l3928
  5725  0ADC  0820               	movf	___awdiv@divisor,w
  5726  0ADD  02A2               	subwf	___awdiv@dividend,f
  5727  0ADE  0821               	movf	___awdiv@divisor+1,w
  5728  0ADF  1C03               	skipc
  5729  0AE0  03A3               	decf	___awdiv@dividend+1,f
  5730  0AE1  02A3               	subwf	___awdiv@dividend+1,f
  5731  0AE2  1426               	bsf	___awdiv@quotient,0
  5732  0AE3                     l3928:	
  5733  0AE3  3001               	movlw	1
  5734  0AE4                     u1435:	
  5735  0AE4  1003               	clrc
  5736  0AE5  0CA1               	rrf	___awdiv@divisor+1,f
  5737  0AE6  0CA0               	rrf	___awdiv@divisor,f
  5738  0AE7  3EFF               	addlw	-1
  5739  0AE8  1D03               	skipz
  5740  0AE9  2AE4               	goto	u1435
  5741  0AEA  3001               	movlw	1
  5742  0AEB  02A4               	subwf	___awdiv@counter,f
  5743  0AEC  1D03               	btfss	3,2
  5744  0AED  2ACD               	goto	l3922
  5745  0AEE                     l3932:	
  5746  0AEE  0825               	movf	___awdiv@sign,w
  5747  0AEF  1903               	btfsc	3,2
  5748  0AF0  2AF6               	goto	l3936
  5749  0AF1  09A6               	comf	___awdiv@quotient,f
  5750  0AF2  09A7               	comf	___awdiv@quotient+1,f
  5751  0AF3  0AA6               	incf	___awdiv@quotient,f
  5752  0AF4  1903               	skipnz
  5753  0AF5  0AA7               	incf	___awdiv@quotient+1,f
  5754  0AF6                     l3936:	
  5755  0AF6  0827               	movf	___awdiv@quotient+1,w
  5756  0AF7  00A1               	movwf	?___awdiv+1
  5757  0AF8  0826               	movf	___awdiv@quotient,w
  5758  0AF9  00A0               	movwf	?___awdiv
  5759  0AFA  0008               	return
  5760  0AFB                     __end_of___awdiv:	
  5761                           
  5762                           	psect	text25
  5763  0DEA                     __ptext25:	
  5764 ;; *************** function _OSC_config *****************
  5765 ;; Defined at:
  5766 ;;		line 206 in file "main_Master.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;  frecuencia      4    2[COMMON] unsigned long 
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;		None
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  1    wreg      void 
  5773 ;; Registers used:
  5774 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5775 ;; Tracked objects:
  5776 ;;		On entry : 0/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5780 ;;      Params:         4       0       0       0       0
  5781 ;;      Locals:         0       0       0       0       0
  5782 ;;      Temps:          0       0       0       0       0
  5783 ;;      Totals:         4       0       0       0       0
  5784 ;;Total ram usage:        4 bytes
  5785 ;; Hardware stack levels used:    1
  5786 ;; Hardware stack levels required when called:    1
  5787 ;; This function calls:
  5788 ;;		Nothing
  5789 ;; This function is called by:
  5790 ;;		_SetUp
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           
  5795                           ;psect for function _OSC_config
  5796  0DEA                     _OSC_config:	
  5797                           
  5798                           ;main_Master.c: 207:     switch(frecuencia){
  5799                           
  5800                           ;incstack = 0
  5801                           ; Regs used in _OSC_config: [wreg-fsr0h+status,2+status,0]
  5802  0DEA  2E26               	goto	l2734
  5803  0DEB                     l2716:	
  5804                           
  5805                           ;main_Master.c: 209:             OSCCONbits.IRCF = 0b111;
  5806  0DEB  3070               	movlw	112
  5807  0DEC  1683               	bsf	3,5	;RP0=1, select bank1
  5808  0DED  1303               	bcf	3,6	;RP1=0, select bank1
  5809  0DEE  048F               	iorwf	15,f	;volatile
  5810                           
  5811                           ;main_Master.c: 210:             break;
  5812  0DEF  0008               	return
  5813  0DF0                     l2718:	
  5814                           
  5815                           ;main_Master.c: 212:             OSCCONbits.IRCF = 0b110;
  5816  0DF0  1683               	bsf	3,5	;RP0=1, select bank1
  5817  0DF1  1303               	bcf	3,6	;RP1=0, select bank1
  5818  0DF2  080F               	movf	15,w	;volatile
  5819  0DF3  398F               	andlw	-113
  5820  0DF4  3860               	iorlw	96
  5821  0DF5  008F               	movwf	15	;volatile
  5822                           
  5823                           ;main_Master.c: 213:             break;
  5824  0DF6  0008               	return
  5825  0DF7                     l2720:	
  5826                           
  5827                           ;main_Master.c: 215:             OSCCONbits.IRCF = 0b101;
  5828  0DF7  1683               	bsf	3,5	;RP0=1, select bank1
  5829  0DF8  1303               	bcf	3,6	;RP1=0, select bank1
  5830  0DF9  080F               	movf	15,w	;volatile
  5831  0DFA  398F               	andlw	-113
  5832  0DFB  3850               	iorlw	80
  5833  0DFC  008F               	movwf	15	;volatile
  5834                           
  5835                           ;main_Master.c: 216:             break;
  5836  0DFD  0008               	return
  5837  0DFE                     l2722:	
  5838                           
  5839                           ;main_Master.c: 218:             OSCCONbits.IRCF = 0b100;
  5840  0DFE  1683               	bsf	3,5	;RP0=1, select bank1
  5841  0DFF  1303               	bcf	3,6	;RP1=0, select bank1
  5842  0E00  080F               	movf	15,w	;volatile
  5843  0E01  398F               	andlw	-113
  5844  0E02  3840               	iorlw	64
  5845  0E03  008F               	movwf	15	;volatile
  5846                           
  5847                           ;main_Master.c: 219:             break;
  5848  0E04  0008               	return
  5849  0E05                     l2724:	
  5850                           
  5851                           ;main_Master.c: 221:             OSCCONbits.IRCF = 0b011;
  5852  0E05  1683               	bsf	3,5	;RP0=1, select bank1
  5853  0E06  1303               	bcf	3,6	;RP1=0, select bank1
  5854  0E07  080F               	movf	15,w	;volatile
  5855  0E08  398F               	andlw	-113
  5856  0E09  3830               	iorlw	48
  5857  0E0A  008F               	movwf	15	;volatile
  5858                           
  5859                           ;main_Master.c: 222:             break;
  5860  0E0B  0008               	return
  5861  0E0C                     l2726:	
  5862                           
  5863                           ;main_Master.c: 224:             OSCCONbits.IRCF = 0b010;
  5864  0E0C  1683               	bsf	3,5	;RP0=1, select bank1
  5865  0E0D  1303               	bcf	3,6	;RP1=0, select bank1
  5866  0E0E  080F               	movf	15,w	;volatile
  5867  0E0F  398F               	andlw	-113
  5868  0E10  3820               	iorlw	32
  5869  0E11  008F               	movwf	15	;volatile
  5870                           
  5871                           ;main_Master.c: 225:             break;
  5872  0E12  0008               	return
  5873  0E13                     l2728:	
  5874                           
  5875                           ;main_Master.c: 227:             OSCCONbits.IRCF = 0b001;
  5876  0E13  1683               	bsf	3,5	;RP0=1, select bank1
  5877  0E14  1303               	bcf	3,6	;RP1=0, select bank1
  5878  0E15  080F               	movf	15,w	;volatile
  5879  0E16  398F               	andlw	-113
  5880  0E17  3810               	iorlw	16
  5881  0E18  008F               	movwf	15	;volatile
  5882                           
  5883                           ;main_Master.c: 228:             break;
  5884  0E19  0008               	return
  5885  0E1A                     l2730:	
  5886                           
  5887                           ;main_Master.c: 230:             OSCCONbits.IRCF = 0b000;
  5888  0E1A  308F               	movlw	-113
  5889  0E1B  1683               	bsf	3,5	;RP0=1, select bank1
  5890  0E1C  1303               	bcf	3,6	;RP1=0, select bank1
  5891  0E1D  058F               	andwf	15,f	;volatile
  5892                           
  5893                           ;main_Master.c: 231:             break;
  5894  0E1E  0008               	return
  5895  0E1F                     l2732:	
  5896                           
  5897                           ;main_Master.c: 233:             OSCCONbits.IRCF = 0b110;
  5898  0E1F  1683               	bsf	3,5	;RP0=1, select bank1
  5899  0E20  1303               	bcf	3,6	;RP1=0, select bank1
  5900  0E21  080F               	movf	15,w	;volatile
  5901  0E22  398F               	andlw	-113
  5902  0E23  3860               	iorlw	96
  5903  0E24  008F               	movwf	15	;volatile
  5904                           
  5905                           ;main_Master.c: 234:     }
  5906  0E25  0008               	return
  5907  0E26                     l2734:	
  5908                           
  5909                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 9 sub-sw
      +                          itches
  5910                           ; Switch size 1, requested type "simple"
  5911                           ; Number of cases is 1, Range of values is 0 to 0
  5912                           ; switch strategies available:
  5913                           ; Name         Instructions Cycles
  5914                           ; simple_byte            4     3 (average)
  5915                           ; direct_byte           11     8 (fixed)
  5916                           ; jumptable            260     6 (fixed)
  5917                           ;	Chosen strategy is simple_byte
  5918  0E26  0875               	movf	OSC_config@frecuencia+3,w
  5919  0E27  3A00               	xorlw	0	; case 0
  5920  0E28  1903               	skipnz
  5921  0E29  2E7B               	goto	l4848
  5922  0E2A  2E1F               	goto	l2732
  5923  0E2B                     l4832:	
  5924                           
  5925                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5926                           ; Switch size 1, requested type "simple"
  5927                           ; Number of cases is 1, Range of values is 125 to 125
  5928                           ; switch strategies available:
  5929                           ; Name         Instructions Cycles
  5930                           ; simple_byte            4     3 (average)
  5931                           ; direct_byte           14    11 (fixed)
  5932                           ; jumptable            263     9 (fixed)
  5933                           ;	Chosen strategy is simple_byte
  5934  0E2B  0873               	movf	OSC_config@frecuencia+1,w
  5935  0E2C  3A7D               	xorlw	125	; case 125
  5936  0E2D  1903               	skipnz
  5937  0E2E  2E30               	goto	l4850
  5938  0E2F  2E1F               	goto	l2732
  5939  0E30                     l4850:	
  5940                           
  5941                           ; Switch size 1, requested type "simple"
  5942                           ; Number of cases is 1, Range of values is 0 to 0
  5943                           ; switch strategies available:
  5944                           ; Name         Instructions Cycles
  5945                           ; simple_byte            4     3 (average)
  5946                           ; direct_byte           11     8 (fixed)
  5947                           ; jumptable            260     6 (fixed)
  5948                           ;	Chosen strategy is simple_byte
  5949  0E30  0872               	movf	OSC_config@frecuencia,w
  5950  0E31  3A00               	xorlw	0	; case 0
  5951  0E32  1903               	skipnz
  5952  0E33  2E1A               	goto	l2730
  5953  0E34  2E1F               	goto	l2732
  5954  0E35                     l4834:	
  5955                           
  5956                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5957                           ; Switch size 1, requested type "simple"
  5958                           ; Number of cases is 1, Range of values is 232 to 232
  5959                           ; switch strategies available:
  5960                           ; Name         Instructions Cycles
  5961                           ; simple_byte            4     3 (average)
  5962                           ; direct_byte           14    11 (fixed)
  5963                           ; jumptable            263     9 (fixed)
  5964                           ;	Chosen strategy is simple_byte
  5965  0E35  0873               	movf	OSC_config@frecuencia+1,w
  5966  0E36  3AE8               	xorlw	232	; case 232
  5967  0E37  1903               	skipnz
  5968  0E38  2E3A               	goto	l4852
  5969  0E39  2E1F               	goto	l2732
  5970  0E3A                     l4852:	
  5971                           
  5972                           ; Switch size 1, requested type "simple"
  5973                           ; Number of cases is 1, Range of values is 72 to 72
  5974                           ; switch strategies available:
  5975                           ; Name         Instructions Cycles
  5976                           ; simple_byte            4     3 (average)
  5977                           ; direct_byte           14    11 (fixed)
  5978                           ; jumptable            263     9 (fixed)
  5979                           ;	Chosen strategy is simple_byte
  5980  0E3A  0872               	movf	OSC_config@frecuencia,w
  5981  0E3B  3A48               	xorlw	72	; case 72
  5982  0E3C  1903               	skipnz
  5983  0E3D  2E13               	goto	l2728
  5984  0E3E  2E1F               	goto	l2732
  5985  0E3F                     l4836:	
  5986                           
  5987                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5988                           ; Switch size 1, requested type "simple"
  5989                           ; Number of cases is 1, Range of values is 208 to 208
  5990                           ; switch strategies available:
  5991                           ; Name         Instructions Cycles
  5992                           ; simple_byte            4     3 (average)
  5993                           ; direct_byte           14    11 (fixed)
  5994                           ; jumptable            263     9 (fixed)
  5995                           ;	Chosen strategy is simple_byte
  5996  0E3F  0873               	movf	OSC_config@frecuencia+1,w
  5997  0E40  3AD0               	xorlw	208	; case 208
  5998  0E41  1903               	skipnz
  5999  0E42  2E44               	goto	l4854
  6000  0E43  2E1F               	goto	l2732
  6001  0E44                     l4854:	
  6002                           
  6003                           ; Switch size 1, requested type "simple"
  6004                           ; Number of cases is 1, Range of values is 144 to 144
  6005                           ; switch strategies available:
  6006                           ; Name         Instructions Cycles
  6007                           ; simple_byte            4     3 (average)
  6008                           ; direct_byte           14    11 (fixed)
  6009                           ; jumptable            263     9 (fixed)
  6010                           ;	Chosen strategy is simple_byte
  6011  0E44  0872               	movf	OSC_config@frecuencia,w
  6012  0E45  3A90               	xorlw	144	; case 144
  6013  0E46  1903               	skipnz
  6014  0E47  2E0C               	goto	l2726
  6015  0E48  2E1F               	goto	l2732
  6016  0E49                     l4838:	
  6017                           
  6018                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6019                           ; Switch size 1, requested type "simple"
  6020                           ; Number of cases is 1, Range of values is 161 to 161
  6021                           ; switch strategies available:
  6022                           ; Name         Instructions Cycles
  6023                           ; simple_byte            4     3 (average)
  6024                           ; direct_byte           14    11 (fixed)
  6025                           ; jumptable            263     9 (fixed)
  6026                           ;	Chosen strategy is simple_byte
  6027  0E49  0873               	movf	OSC_config@frecuencia+1,w
  6028  0E4A  3AA1               	xorlw	161	; case 161
  6029  0E4B  1903               	skipnz
  6030  0E4C  2E4E               	goto	l4856
  6031  0E4D  2E1F               	goto	l2732
  6032  0E4E                     l4856:	
  6033                           
  6034                           ; Switch size 1, requested type "simple"
  6035                           ; Number of cases is 1, Range of values is 32 to 32
  6036                           ; switch strategies available:
  6037                           ; Name         Instructions Cycles
  6038                           ; simple_byte            4     3 (average)
  6039                           ; direct_byte           14    11 (fixed)
  6040                           ; jumptable            263     9 (fixed)
  6041                           ;	Chosen strategy is simple_byte
  6042  0E4E  0872               	movf	OSC_config@frecuencia,w
  6043  0E4F  3A20               	xorlw	32	; case 32
  6044  0E50  1903               	skipnz
  6045  0E51  2E05               	goto	l2724
  6046  0E52  2E1F               	goto	l2732
  6047  0E53                     l4840:	
  6048                           
  6049                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6050                           ; Switch size 1, requested type "simple"
  6051                           ; Number of cases is 1, Range of values is 66 to 66
  6052                           ; switch strategies available:
  6053                           ; Name         Instructions Cycles
  6054                           ; simple_byte            4     3 (average)
  6055                           ; direct_byte           14    11 (fixed)
  6056                           ; jumptable            263     9 (fixed)
  6057                           ;	Chosen strategy is simple_byte
  6058  0E53  0873               	movf	OSC_config@frecuencia+1,w
  6059  0E54  3A42               	xorlw	66	; case 66
  6060  0E55  1903               	skipnz
  6061  0E56  2E58               	goto	l4858
  6062  0E57  2E1F               	goto	l2732
  6063  0E58                     l4858:	
  6064                           
  6065                           ; Switch size 1, requested type "simple"
  6066                           ; Number of cases is 1, Range of values is 64 to 64
  6067                           ; switch strategies available:
  6068                           ; Name         Instructions Cycles
  6069                           ; simple_byte            4     3 (average)
  6070                           ; direct_byte           14    11 (fixed)
  6071                           ; jumptable            263     9 (fixed)
  6072                           ;	Chosen strategy is simple_byte
  6073  0E58  0872               	movf	OSC_config@frecuencia,w
  6074  0E59  3A40               	xorlw	64	; case 64
  6075  0E5A  1903               	skipnz
  6076  0E5B  2DFE               	goto	l2722
  6077  0E5C  2E1F               	goto	l2732
  6078  0E5D                     l4842:	
  6079                           
  6080                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6081                           ; Switch size 1, requested type "simple"
  6082                           ; Number of cases is 1, Range of values is 132 to 132
  6083                           ; switch strategies available:
  6084                           ; Name         Instructions Cycles
  6085                           ; simple_byte            4     3 (average)
  6086                           ; direct_byte           14    11 (fixed)
  6087                           ; jumptable            263     9 (fixed)
  6088                           ;	Chosen strategy is simple_byte
  6089  0E5D  0873               	movf	OSC_config@frecuencia+1,w
  6090  0E5E  3A84               	xorlw	132	; case 132
  6091  0E5F  1903               	skipnz
  6092  0E60  2E62               	goto	l4860
  6093  0E61  2E1F               	goto	l2732
  6094  0E62                     l4860:	
  6095                           
  6096                           ; Switch size 1, requested type "simple"
  6097                           ; Number of cases is 1, Range of values is 128 to 128
  6098                           ; switch strategies available:
  6099                           ; Name         Instructions Cycles
  6100                           ; simple_byte            4     3 (average)
  6101                           ; direct_byte           14    11 (fixed)
  6102                           ; jumptable            263     9 (fixed)
  6103                           ;	Chosen strategy is simple_byte
  6104  0E62  0872               	movf	OSC_config@frecuencia,w
  6105  0E63  3A80               	xorlw	128	; case 128
  6106  0E64  1903               	skipnz
  6107  0E65  2DF7               	goto	l2720
  6108  0E66  2E1F               	goto	l2732
  6109  0E67                     l4844:	
  6110                           
  6111                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6112                           ; Switch size 1, requested type "simple"
  6113                           ; Number of cases is 1, Range of values is 9 to 9
  6114                           ; switch strategies available:
  6115                           ; Name         Instructions Cycles
  6116                           ; simple_byte            4     3 (average)
  6117                           ; direct_byte           14    11 (fixed)
  6118                           ; jumptable            263     9 (fixed)
  6119                           ;	Chosen strategy is simple_byte
  6120  0E67  0873               	movf	OSC_config@frecuencia+1,w
  6121  0E68  3A09               	xorlw	9	; case 9
  6122  0E69  1903               	skipnz
  6123  0E6A  2E6C               	goto	l4862
  6124  0E6B  2E1F               	goto	l2732
  6125  0E6C                     l4862:	
  6126                           
  6127                           ; Switch size 1, requested type "simple"
  6128                           ; Number of cases is 1, Range of values is 0 to 0
  6129                           ; switch strategies available:
  6130                           ; Name         Instructions Cycles
  6131                           ; simple_byte            4     3 (average)
  6132                           ; direct_byte           11     8 (fixed)
  6133                           ; jumptable            260     6 (fixed)
  6134                           ;	Chosen strategy is simple_byte
  6135  0E6C  0872               	movf	OSC_config@frecuencia,w
  6136  0E6D  3A00               	xorlw	0	; case 0
  6137  0E6E  1903               	skipnz
  6138  0E6F  2DF0               	goto	l2718
  6139  0E70  2E1F               	goto	l2732
  6140  0E71                     l4846:	
  6141                           
  6142                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6143                           ; Switch size 1, requested type "simple"
  6144                           ; Number of cases is 1, Range of values is 18 to 18
  6145                           ; switch strategies available:
  6146                           ; Name         Instructions Cycles
  6147                           ; simple_byte            4     3 (average)
  6148                           ; direct_byte           14    11 (fixed)
  6149                           ; jumptable            263     9 (fixed)
  6150                           ;	Chosen strategy is simple_byte
  6151  0E71  0873               	movf	OSC_config@frecuencia+1,w
  6152  0E72  3A12               	xorlw	18	; case 18
  6153  0E73  1903               	skipnz
  6154  0E74  2E76               	goto	l4864
  6155  0E75  2E1F               	goto	l2732
  6156  0E76                     l4864:	
  6157                           
  6158                           ; Switch size 1, requested type "simple"
  6159                           ; Number of cases is 1, Range of values is 0 to 0
  6160                           ; switch strategies available:
  6161                           ; Name         Instructions Cycles
  6162                           ; simple_byte            4     3 (average)
  6163                           ; direct_byte           11     8 (fixed)
  6164                           ; jumptable            260     6 (fixed)
  6165                           ;	Chosen strategy is simple_byte
  6166  0E76  0872               	movf	OSC_config@frecuencia,w
  6167  0E77  3A00               	xorlw	0	; case 0
  6168  0E78  1903               	skipnz
  6169  0E79  2DEB               	goto	l2716
  6170  0E7A  2E1F               	goto	l2732
  6171  0E7B                     l4848:	
  6172                           
  6173                           ; Switch size 1, requested type "simple"
  6174                           ; Number of cases is 8, Range of values is 0 to 122
  6175                           ; switch strategies available:
  6176                           ; Name         Instructions Cycles
  6177                           ; simple_byte           25    13 (average)
  6178                           ; jumptable            260     6 (fixed)
  6179                           ;	Chosen strategy is simple_byte
  6180  0E7B  0874               	movf	OSC_config@frecuencia+2,w
  6181  0E7C  3A00               	xorlw	0	; case 0
  6182  0E7D  1903               	skipnz
  6183  0E7E  2E2B               	goto	l4832
  6184  0E7F  3A01               	xorlw	1	; case 1
  6185  0E80  1903               	skipnz
  6186  0E81  2E35               	goto	l4834
  6187  0E82  3A02               	xorlw	2	; case 3
  6188  0E83  1903               	skipnz
  6189  0E84  2E3F               	goto	l4836
  6190  0E85  3A04               	xorlw	4	; case 7
  6191  0E86  1903               	skipnz
  6192  0E87  2E49               	goto	l4838
  6193  0E88  3A08               	xorlw	8	; case 15
  6194  0E89  1903               	skipnz
  6195  0E8A  2E53               	goto	l4840
  6196  0E8B  3A11               	xorlw	17	; case 30
  6197  0E8C  1903               	skipnz
  6198  0E8D  2E5D               	goto	l4842
  6199  0E8E  3A23               	xorlw	35	; case 61
  6200  0E8F  1903               	skipnz
  6201  0E90  2E67               	goto	l4844
  6202  0E91  3A47               	xorlw	71	; case 122
  6203  0E92  1903               	skipnz
  6204  0E93  2E71               	goto	l4846
  6205  0E94  2E1F               	goto	l2732
  6206  0E95  0008               	return
  6207  0E96                     __end_of_OSC_config:	
  6208                           
  6209                           	psect	text26
  6210  0B5B                     __ptext26:	
  6211 ;; *************** function _LCD_init *****************
  6212 ;; Defined at:
  6213 ;;		line 44 in file "LCD_8bits.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;		None
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;		None
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  1    wreg      void 
  6220 ;; Registers used:
  6221 ;;		wreg, status,2, status,0, pclath, cstack
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6227 ;;      Params:         0       0       0       0       0
  6228 ;;      Locals:         0       0       0       0       0
  6229 ;;      Temps:          2       0       0       0       0
  6230 ;;      Totals:         2       0       0       0       0
  6231 ;;Total ram usage:        2 bytes
  6232 ;; Hardware stack levels used:    1
  6233 ;; Hardware stack levels required when called:    2
  6234 ;; This function calls:
  6235 ;;		_LCD_Cmd
  6236 ;; This function is called by:
  6237 ;;		_SetUp
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           
  6242                           ;psect for function _LCD_init
  6243  0B5B                     _LCD_init:	
  6244                           
  6245                           ;LCD_8bits.c: 45:     _delay((unsigned long)((20)*(4000000/4000.0)));
  6246                           
  6247                           ;incstack = 0
  6248                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  6249  0B5B  301A               	movlw	26
  6250  0B5C  00F6               	movwf	??_LCD_init+1
  6251  0B5D  30F8               	movlw	248
  6252  0B5E  00F5               	movwf	??_LCD_init
  6253  0B5F                     u1917:	
  6254  0B5F  0BF5               	decfsz	??_LCD_init,f
  6255  0B60  2B5F               	goto	u1917
  6256  0B61  0BF6               	decfsz	??_LCD_init+1,f
  6257  0B62  2B5F               	goto	u1917
  6258  0B63  0000               	nop
  6259                           
  6260                           ;LCD_8bits.c: 46:     LCD_Cmd(0x30);
  6261  0B64  3030               	movlw	48
  6262  0B65  120A  158A  21F6  120A  158A  	fcall	_LCD_Cmd
  6263                           
  6264                           ;LCD_8bits.c: 47:     _delay((unsigned long)((5)*(4000000/4000.0)));
  6265  0B6A  3007               	movlw	7
  6266  0B6B  00F6               	movwf	??_LCD_init+1
  6267  0B6C  307D               	movlw	125
  6268  0B6D  00F5               	movwf	??_LCD_init
  6269  0B6E                     u1927:	
  6270  0B6E  0BF5               	decfsz	??_LCD_init,f
  6271  0B6F  2B6E               	goto	u1927
  6272  0B70  0BF6               	decfsz	??_LCD_init+1,f
  6273  0B71  2B6E               	goto	u1927
  6274                           
  6275                           ;LCD_8bits.c: 48:     LCD_Cmd(0x30);
  6276  0B72  3030               	movlw	48
  6277  0B73  120A  158A  21F6  120A  158A  	fcall	_LCD_Cmd
  6278                           
  6279                           ;LCD_8bits.c: 49:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  6280  0B78  3021               	movlw	33
  6281  0B79  00F5               	movwf	??_LCD_init
  6282  0B7A                     u1937:	
  6283  0B7A  0BF5               	decfsz	??_LCD_init,f
  6284  0B7B  2B7A               	goto	u1937
  6285                           
  6286                           ;LCD_8bits.c: 50:     LCD_Cmd(0x30);
  6287  0B7C  3030               	movlw	48
  6288  0B7D  120A  158A  21F6  120A  158A  	fcall	_LCD_Cmd
  6289                           
  6290                           ;LCD_8bits.c: 51:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  6291  0B82  3021               	movlw	33
  6292  0B83  00F5               	movwf	??_LCD_init
  6293  0B84                     u1947:	
  6294  0B84  0BF5               	decfsz	??_LCD_init,f
  6295  0B85  2B84               	goto	u1947
  6296                           
  6297                           ;LCD_8bits.c: 52:     LCD_Cmd(0x38);
  6298  0B86  3038               	movlw	56
  6299  0B87  120A  158A  21F6  120A  158A  	fcall	_LCD_Cmd
  6300                           
  6301                           ;LCD_8bits.c: 53:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  6302  0B8C  3011               	movlw	17
  6303  0B8D  00F5               	movwf	??_LCD_init
  6304  0B8E                     u1957:	
  6305  0B8E  0BF5               	decfsz	??_LCD_init,f
  6306  0B8F  2B8E               	goto	u1957
  6307  0B90  0000               	nop
  6308                           
  6309                           ;LCD_8bits.c: 54:     LCD_Cmd(0x08);
  6310  0B91  3008               	movlw	8
  6311  0B92  120A  158A  21F6  120A  158A  	fcall	_LCD_Cmd
  6312                           
  6313                           ;LCD_8bits.c: 55:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  6314  0B97  3011               	movlw	17
  6315  0B98  00F5               	movwf	??_LCD_init
  6316  0B99                     u1967:	
  6317  0B99  0BF5               	decfsz	??_LCD_init,f
  6318  0B9A  2B99               	goto	u1967
  6319  0B9B  0000               	nop
  6320                           
  6321                           ;LCD_8bits.c: 56:     LCD_Cmd(0x01);
  6322  0B9C  3001               	movlw	1
  6323  0B9D  120A  158A  21F6  120A  158A  	fcall	_LCD_Cmd
  6324                           
  6325                           ;LCD_8bits.c: 57:     _delay((unsigned long)((3)*(4000000/4000.0)));
  6326  0BA2  3004               	movlw	4
  6327  0BA3  00F6               	movwf	??_LCD_init+1
  6328  0BA4  30E4               	movlw	228
  6329  0BA5  00F5               	movwf	??_LCD_init
  6330  0BA6                     u1977:	
  6331  0BA6  0BF5               	decfsz	??_LCD_init,f
  6332  0BA7  2BA6               	goto	u1977
  6333  0BA8  0BF6               	decfsz	??_LCD_init+1,f
  6334  0BA9  2BA6               	goto	u1977
  6335  0BAA  0000               	nop
  6336                           
  6337                           ;LCD_8bits.c: 58:     LCD_Cmd(0x06);
  6338  0BAB  3006               	movlw	6
  6339  0BAC  120A  158A  21F6  120A  158A  	fcall	_LCD_Cmd
  6340                           
  6341                           ;LCD_8bits.c: 59:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  6342  0BB1  3011               	movlw	17
  6343  0BB2  00F5               	movwf	??_LCD_init
  6344  0BB3                     u1987:	
  6345  0BB3  0BF5               	decfsz	??_LCD_init,f
  6346  0BB4  2BB3               	goto	u1987
  6347  0BB5  0000               	nop
  6348                           
  6349                           ;LCD_8bits.c: 60:     LCD_Cmd(0x0C);
  6350  0BB6  300C               	movlw	12
  6351  0BB7  120A  158A  21F6  120A  158A  	fcall	_LCD_Cmd
  6352                           
  6353                           ;LCD_8bits.c: 61:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  6354  0BBC  3011               	movlw	17
  6355  0BBD  00F5               	movwf	??_LCD_init
  6356  0BBE                     u1997:	
  6357  0BBE  0BF5               	decfsz	??_LCD_init,f
  6358  0BBF  2BBE               	goto	u1997
  6359  0BC0  0000               	nop
  6360  0BC1  0008               	return
  6361  0BC2                     __end_of_LCD_init:	
  6362                           
  6363                           	psect	text27
  6364  092F                     __ptext27:	
  6365 ;; *************** function _LCD_clear *****************
  6366 ;; Defined at:
  6367 ;;		line 32 in file "LCD_8bits.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;		None
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;		None
  6372 ;; Return value:  Size  Location     Type
  6373 ;;                  1    wreg      void 
  6374 ;; Registers used:
  6375 ;;		wreg, status,2, status,0, pclath, cstack
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6381 ;;      Params:         0       0       0       0       0
  6382 ;;      Locals:         0       0       0       0       0
  6383 ;;      Temps:          2       0       0       0       0
  6384 ;;      Totals:         2       0       0       0       0
  6385 ;;Total ram usage:        2 bytes
  6386 ;; Hardware stack levels used:    1
  6387 ;; Hardware stack levels required when called:    2
  6388 ;; This function calls:
  6389 ;;		_LCD_Cmd
  6390 ;; This function is called by:
  6391 ;;		_SetUp
  6392 ;;		_mostrarLCD
  6393 ;;		_pressBoton1
  6394 ;;		_pressBoton2
  6395 ;; This function uses a non-reentrant model
  6396 ;;
  6397                           
  6398                           
  6399                           ;psect for function _LCD_clear
  6400  092F                     _LCD_clear:	
  6401                           
  6402                           ;LCD_8bits.c: 33:     LCD_Cmd(0x00);
  6403                           
  6404                           ;incstack = 0
  6405                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  6406  092F  3000               	movlw	0
  6407  0930  120A  158A  21F6  120A  158A  	fcall	_LCD_Cmd
  6408                           
  6409                           ;LCD_8bits.c: 34:     LCD_Cmd(0x01);
  6410  0935  3001               	movlw	1
  6411  0936  120A  158A  21F6  120A  158A  	fcall	_LCD_Cmd
  6412                           
  6413                           ;LCD_8bits.c: 35:     _delay((unsigned long)((4)*(4000000/4000.0)));
  6414  093B  3006               	movlw	6
  6415  093C  00F6               	movwf	??_LCD_clear+1
  6416  093D  3030               	movlw	48
  6417  093E  00F5               	movwf	??_LCD_clear
  6418  093F                     u2007:	
  6419  093F  0BF5               	decfsz	??_LCD_clear,f
  6420  0940  293F               	goto	u2007
  6421  0941  0BF6               	decfsz	??_LCD_clear+1,f
  6422  0942  293F               	goto	u2007
  6423  0943  0000               	nop
  6424  0944  0008               	return
  6425  0945                     __end_of_LCD_clear:	
  6426                           
  6427                           	psect	text28
  6428  099E                     __ptext28:	
  6429 ;; *************** function _LCD_Create_Char *****************
  6430 ;; Defined at:
  6431 ;;		line 116 in file "LCD_8bits.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;  charnum         1    wreg     unsigned char 
  6434 ;;  chardata        1    5[COMMON] PTR const unsigned char 
  6435 ;;		 -> arrowr_vacio(8), gota(8), termometro(8), arrowr(8), 
  6436 ;;		 -> atilde(8), 
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;  charnum         1    7[COMMON] unsigned char 
  6439 ;;  n               1    8[COMMON] unsigned char 
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  1    wreg      void 
  6442 ;; Registers used:
  6443 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6449 ;;      Params:         1       0       0       0       0
  6450 ;;      Locals:         2       0       0       0       0
  6451 ;;      Temps:          1       0       0       0       0
  6452 ;;      Totals:         4       0       0       0       0
  6453 ;;Total ram usage:        4 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; Hardware stack levels required when called:    2
  6456 ;; This function calls:
  6457 ;;		_LCD_Cmd
  6458 ;;		_LCD_Write_Character
  6459 ;; This function is called by:
  6460 ;;		_SetUp
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           
  6465                           ;psect for function _LCD_Create_Char
  6466  099E                     _LCD_Create_Char:	
  6467                           
  6468                           ;incstack = 0
  6469                           ; Regs used in _LCD_Create_Char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6470                           ;LCD_Create_Char@charnum stored from wreg
  6471  099E  00F7               	movwf	LCD_Create_Char@charnum
  6472                           
  6473                           ;LCD_8bits.c: 117:  uint8_t n;;LCD_8bits.c: 118:  charnum &= 0x07;
  6474  099F  3007               	movlw	7
  6475  09A0  00F6               	movwf	??_LCD_Create_Char
  6476  09A1  0876               	movf	??_LCD_Create_Char,w
  6477  09A2  05F7               	andwf	LCD_Create_Char@charnum,f
  6478                           
  6479                           ;LCD_8bits.c: 119:  LCD_Cmd(0x40 | (charnum << 3));
  6480  09A3  0877               	movf	LCD_Create_Char@charnum,w
  6481  09A4  00F6               	movwf	??_LCD_Create_Char
  6482  09A5  3002               	movlw	2
  6483  09A6                     u1085:	
  6484  09A6  1003               	clrc
  6485  09A7  0DF6               	rlf	??_LCD_Create_Char,f
  6486  09A8  3EFF               	addlw	-1
  6487  09A9  1D03               	skipz
  6488  09AA  29A6               	goto	u1085
  6489  09AB  1003               	clrc
  6490  09AC  0D76               	rlf	??_LCD_Create_Char,w
  6491  09AD  3840               	iorlw	64
  6492  09AE  120A  158A  21F6  120A  158A  	fcall	_LCD_Cmd
  6493                           
  6494                           ;LCD_8bits.c: 120:  for (n = 0; n < 8; n++)
  6495  09B3  01F8               	clrf	LCD_Create_Char@n
  6496  09B4                     l2838:	
  6497                           
  6498                           ;LCD_8bits.c: 121:   LCD_Write_Character(chardata[n]);
  6499  09B4  0878               	movf	LCD_Create_Char@n,w
  6500  09B5  0775               	addwf	LCD_Create_Char@chardata,w
  6501  09B6  0084               	movwf	4
  6502  09B7  120A  118A  2700  120A  158A  	fcall	stringdir
  6503  09BC  120A  158A  20D8  120A  158A  	fcall	_LCD_Write_Character
  6504  09C1  3001               	movlw	1
  6505  09C2  00F6               	movwf	??_LCD_Create_Char
  6506  09C3  0876               	movf	??_LCD_Create_Char,w
  6507  09C4  07F8               	addwf	LCD_Create_Char@n,f
  6508  09C5  3008               	movlw	8
  6509  09C6  0278               	subwf	LCD_Create_Char@n,w
  6510  09C7  1803               	btfsc	3,0
  6511  09C8  0008               	return
  6512  09C9  29B4               	goto	l2838
  6513  09CA                     __end_of_LCD_Create_Char:	
  6514                           
  6515                           	psect	text29
  6516  08D8                     __ptext29:	
  6517 ;; *************** function _LCD_Write_Character *****************
  6518 ;; Defined at:
  6519 ;;		line 64 in file "LCD_8bits.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;  caracter        1    wreg     unsigned char 
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  caracter        1    3[COMMON] unsigned char 
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  1    wreg      void 
  6526 ;; Registers used:
  6527 ;;		wreg
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6533 ;;      Params:         0       0       0       0       0
  6534 ;;      Locals:         1       0       0       0       0
  6535 ;;      Temps:          1       0       0       0       0
  6536 ;;      Totals:         2       0       0       0       0
  6537 ;;Total ram usage:        2 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:    1
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_display_Uhrzeit
  6544 ;;		_display_Datum
  6545 ;;		_mostrarLCD
  6546 ;;		_pressBoton2
  6547 ;;		_LCD_Write_String
  6548 ;;		_LCD_Create_Char
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           
  6553                           ;psect for function _LCD_Write_Character
  6554  08D8                     _LCD_Write_Character:	
  6555                           
  6556                           ;incstack = 0
  6557                           ; Regs used in _LCD_Write_Character: [wreg]
  6558                           ;LCD_Write_Character@caracter stored from wreg
  6559  08D8  00F3               	movwf	LCD_Write_Character@caracter
  6560                           
  6561                           ;LCD_8bits.c: 65:     PORTCbits.RC0 = 1;
  6562  08D9  1283               	bcf	3,5	;RP0=0, select bank0
  6563  08DA  1303               	bcf	3,6	;RP1=0, select bank0
  6564  08DB  1407               	bsf	7,0	;volatile
  6565                           
  6566                           ;LCD_8bits.c: 67:     PORTD = caracter;
  6567  08DC  0873               	movf	LCD_Write_Character@caracter,w
  6568  08DD  0088               	movwf	8	;volatile
  6569                           
  6570                           ;LCD_8bits.c: 68:     PORTCbits.RC1 = 1;
  6571  08DE  1487               	bsf	7,1	;volatile
  6572                           
  6573                           ;LCD_8bits.c: 69:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  6574  08DF  300D               	movlw	13
  6575  08E0  00F2               	movwf	??_LCD_Write_Character
  6576  08E1                     u2017:	
  6577  08E1  0BF2               	decfsz	??_LCD_Write_Character,f
  6578  08E2  28E1               	goto	u2017
  6579                           
  6580                           ;LCD_8bits.c: 70:     PORTCbits.RC1 = 0;
  6581  08E3  1283               	bcf	3,5	;RP0=0, select bank0
  6582  08E4  1303               	bcf	3,6	;RP1=0, select bank0
  6583  08E5  1087               	bcf	7,1	;volatile
  6584  08E6  0008               	return
  6585  08E7                     __end_of_LCD_Write_Character:	
  6586                           
  6587                           	psect	text30
  6588  09F6                     __ptext30:	
  6589 ;; *************** function _LCD_Cmd *****************
  6590 ;; Defined at:
  6591 ;;		line 21 in file "LCD_8bits.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;  comando         1    wreg     unsigned char 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  comando         1    4[COMMON] unsigned char 
  6596 ;; Return value:  Size  Location     Type
  6597 ;;                  1    wreg      void 
  6598 ;; Registers used:
  6599 ;;		wreg
  6600 ;; Tracked objects:
  6601 ;;		On entry : 0/0
  6602 ;;		On exit  : 0/0
  6603 ;;		Unchanged: 0/0
  6604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6605 ;;      Params:         0       0       0       0       0
  6606 ;;      Locals:         1       0       0       0       0
  6607 ;;      Temps:          2       0       0       0       0
  6608 ;;      Totals:         3       0       0       0       0
  6609 ;;Total ram usage:        3 bytes
  6610 ;; Hardware stack levels used:    1
  6611 ;; Hardware stack levels required when called:    1
  6612 ;; This function calls:
  6613 ;;		Nothing
  6614 ;; This function is called by:
  6615 ;;		_LCD_clear
  6616 ;;		_LCD_init
  6617 ;;		_LCD_Set_Cursor
  6618 ;;		_LCD_Create_Char
  6619 ;;		_LCD_home
  6620 ;;		_LCD_Shift_links
  6621 ;;		_LCD_Shift_rechts
  6622 ;;		_LCD_Cursor_rechts
  6623 ;;		_LCD_Cursor_links
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           
  6628                           ;psect for function _LCD_Cmd
  6629  09F6                     _LCD_Cmd:	
  6630                           
  6631                           ;incstack = 0
  6632                           ; Regs used in _LCD_Cmd: [wreg]
  6633                           ;LCD_Cmd@comando stored from wreg
  6634  09F6  00F4               	movwf	LCD_Cmd@comando
  6635                           
  6636                           ;LCD_8bits.c: 22:     PORTCbits.RC0 = 0;
  6637  09F7  1283               	bcf	3,5	;RP0=0, select bank0
  6638  09F8  1303               	bcf	3,6	;RP1=0, select bank0
  6639  09F9  1007               	bcf	7,0	;volatile
  6640                           
  6641                           ;LCD_8bits.c: 23:     _delay((unsigned long)((5)*(4000000/4000.0)));
  6642  09FA  3007               	movlw	7
  6643  09FB  00F3               	movwf	??_LCD_Cmd+1
  6644  09FC  307D               	movlw	125
  6645  09FD  00F2               	movwf	??_LCD_Cmd
  6646  09FE                     u2027:	
  6647  09FE  0BF2               	decfsz	??_LCD_Cmd,f
  6648  09FF  29FE               	goto	u2027
  6649  0A00  0BF3               	decfsz	??_LCD_Cmd+1,f
  6650  0A01  29FE               	goto	u2027
  6651                           
  6652                           ;LCD_8bits.c: 24:     PORTCbits.RC1 = 1;
  6653  0A02  1283               	bcf	3,5	;RP0=0, select bank0
  6654  0A03  1303               	bcf	3,6	;RP1=0, select bank0
  6655  0A04  1487               	bsf	7,1	;volatile
  6656                           
  6657                           ;LCD_8bits.c: 25:     _delay((unsigned long)((5)*(4000000/4000.0)));
  6658  0A05  3007               	movlw	7
  6659  0A06  00F3               	movwf	??_LCD_Cmd+1
  6660  0A07  307D               	movlw	125
  6661  0A08  00F2               	movwf	??_LCD_Cmd
  6662  0A09                     u2037:	
  6663  0A09  0BF2               	decfsz	??_LCD_Cmd,f
  6664  0A0A  2A09               	goto	u2037
  6665  0A0B  0BF3               	decfsz	??_LCD_Cmd+1,f
  6666  0A0C  2A09               	goto	u2037
  6667                           
  6668                           ;LCD_8bits.c: 26:     PORTD = comando;
  6669  0A0D  0874               	movf	LCD_Cmd@comando,w
  6670  0A0E  1283               	bcf	3,5	;RP0=0, select bank0
  6671  0A0F  1303               	bcf	3,6	;RP1=0, select bank0
  6672  0A10  0088               	movwf	8	;volatile
  6673                           
  6674                           ;LCD_8bits.c: 27:     _delay((unsigned long)((5)*(4000000/4000.0)));
  6675  0A11  3007               	movlw	7
  6676  0A12  00F3               	movwf	??_LCD_Cmd+1
  6677  0A13  307D               	movlw	125
  6678  0A14  00F2               	movwf	??_LCD_Cmd
  6679  0A15                     u2047:	
  6680  0A15  0BF2               	decfsz	??_LCD_Cmd,f
  6681  0A16  2A15               	goto	u2047
  6682  0A17  0BF3               	decfsz	??_LCD_Cmd+1,f
  6683  0A18  2A15               	goto	u2047
  6684                           
  6685                           ;LCD_8bits.c: 28:     PORTCbits.RC1 = 0;
  6686  0A19  1283               	bcf	3,5	;RP0=0, select bank0
  6687  0A1A  1303               	bcf	3,6	;RP1=0, select bank0
  6688  0A1B  1087               	bcf	7,1	;volatile
  6689                           
  6690                           ;LCD_8bits.c: 29:     _delay((unsigned long)((5)*(4000000/4000.0)));
  6691  0A1C  3007               	movlw	7
  6692  0A1D  00F3               	movwf	??_LCD_Cmd+1
  6693  0A1E  307D               	movlw	125
  6694  0A1F  00F2               	movwf	??_LCD_Cmd
  6695  0A20                     u2057:	
  6696  0A20  0BF2               	decfsz	??_LCD_Cmd,f
  6697  0A21  2A20               	goto	u2057
  6698  0A22  0BF3               	decfsz	??_LCD_Cmd+1,f
  6699  0A23  2A20               	goto	u2057
  6700  0A24  0008               	return
  6701  0A25                     __end_of_LCD_Cmd:	
  6702                           
  6703                           	psect	text31
  6704  07BC                     __ptext31:	
  6705 ;; *************** function _I2C_Master_Init *****************
  6706 ;; Defined at:
  6707 ;;		line 16 in file "I2C.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;  c               4    6[BANK0 ] const unsigned long 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;		None
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  1    wreg      void 
  6714 ;; Registers used:
  6715 ;;		wreg, status,2, status,0, pclath, cstack
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6721 ;;      Params:         0       4       0       0       0
  6722 ;;      Locals:         0       0       0       0       0
  6723 ;;      Temps:          0       4       0       0       0
  6724 ;;      Totals:         0       8       0       0       0
  6725 ;;Total ram usage:        8 bytes
  6726 ;; Hardware stack levels used:    1
  6727 ;; Hardware stack levels required when called:    2
  6728 ;; This function calls:
  6729 ;;		___lldiv
  6730 ;; This function is called by:
  6731 ;;		_SetUp
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           
  6736                           ;psect for function _I2C_Master_Init
  6737  07BC                     _I2C_Master_Init:	
  6738                           
  6739                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  6740                           
  6741                           ;incstack = 0
  6742                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  6743  07BC  3028               	movlw	40
  6744  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  6745  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  6746  07BF  0094               	movwf	20	;volatile
  6747                           
  6748                           ;I2C.c: 19:     SSPCON2 = 0;
  6749  07C0  1683               	bsf	3,5	;RP0=1, select bank1
  6750  07C1  1303               	bcf	3,6	;RP1=0, select bank1
  6751  07C2  0191               	clrf	17	;volatile
  6752                           
  6753                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  6754  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  6755  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  6756  07C5  0826               	movf	I2C_Master_Init@c,w
  6757  07C6  00AA               	movwf	??_I2C_Master_Init
  6758  07C7  0827               	movf	I2C_Master_Init@c+1,w
  6759  07C8  00AB               	movwf	??_I2C_Master_Init+1
  6760  07C9  0828               	movf	I2C_Master_Init@c+2,w
  6761  07CA  00AC               	movwf	??_I2C_Master_Init+2
  6762  07CB  0829               	movf	I2C_Master_Init@c+3,w
  6763  07CC  00AD               	movwf	??_I2C_Master_Init+3
  6764  07CD  3002               	movlw	2
  6765  07CE                     u1635:	
  6766  07CE  1003               	clrc
  6767  07CF  0DAA               	rlf	??_I2C_Master_Init,f
  6768  07D0  0DAB               	rlf	??_I2C_Master_Init+1,f
  6769  07D1  0DAC               	rlf	??_I2C_Master_Init+2,f
  6770  07D2  0DAD               	rlf	??_I2C_Master_Init+3,f
  6771  07D3  3EFF               	addlw	-1
  6772  07D4  1D03               	skipz
  6773  07D5  2FCE               	goto	u1635
  6774  07D6  082D               	movf	??_I2C_Master_Init+3,w
  6775  07D7  00F5               	movwf	___lldiv@divisor+3
  6776  07D8  082C               	movf	??_I2C_Master_Init+2,w
  6777  07D9  00F4               	movwf	___lldiv@divisor+2
  6778  07DA  082B               	movf	??_I2C_Master_Init+1,w
  6779  07DB  00F3               	movwf	___lldiv@divisor+1
  6780  07DC  082A               	movf	??_I2C_Master_Init,w
  6781  07DD  00F2               	movwf	___lldiv@divisor
  6782  07DE  3000               	movlw	0
  6783  07DF  00F9               	movwf	___lldiv@dividend+3
  6784  07E0  303D               	movlw	61
  6785  07E1  00F8               	movwf	___lldiv@dividend+2
  6786  07E2  3009               	movlw	9
  6787  07E3  00F7               	movwf	___lldiv@dividend+1
  6788  07E4  3000               	movlw	0
  6789  07E5  00F6               	movwf	___lldiv@dividend
  6790  07E6  120A  158A  22FB   	fcall	___lldiv
  6791  07E9  0872               	movf	?___lldiv,w
  6792  07EA  3EFF               	addlw	255
  6793  07EB  1683               	bsf	3,5	;RP0=1, select bank1
  6794  07EC  1303               	bcf	3,6	;RP1=0, select bank1
  6795  07ED  0093               	movwf	19	;volatile
  6796                           
  6797                           ;I2C.c: 21:     SSPSTAT = 0;
  6798  07EE  0194               	clrf	20	;volatile
  6799                           
  6800                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  6801  07EF  1587               	bsf	7,3	;volatile
  6802                           
  6803                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  6804  07F0  1607               	bsf	7,4	;volatile
  6805  07F1  0008               	return
  6806  07F2                     __end_of_I2C_Master_Init:	
  6807                           
  6808                           	psect	text32
  6809  0AFB                     __ptext32:	
  6810 ;; *************** function ___lldiv *****************
  6811 ;; Defined at:
  6812 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;  divisor         4    2[COMMON] unsigned long 
  6815 ;;  dividend        4    6[COMMON] unsigned long 
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;  quotient        4    1[BANK0 ] unsigned long 
  6818 ;;  counter         1    5[BANK0 ] unsigned char 
  6819 ;; Return value:  Size  Location     Type
  6820 ;;                  4    2[COMMON] unsigned long 
  6821 ;; Registers used:
  6822 ;;		wreg, status,2, status,0
  6823 ;; Tracked objects:
  6824 ;;		On entry : 0/0
  6825 ;;		On exit  : 0/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6828 ;;      Params:         8       0       0       0       0
  6829 ;;      Locals:         0       5       0       0       0
  6830 ;;      Temps:          0       1       0       0       0
  6831 ;;      Totals:         8       6       0       0       0
  6832 ;;Total ram usage:       14 bytes
  6833 ;; Hardware stack levels used:    1
  6834 ;; Hardware stack levels required when called:    1
  6835 ;; This function calls:
  6836 ;;		Nothing
  6837 ;; This function is called by:
  6838 ;;		_I2C_Master_Init
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           
  6843                           ;psect for function ___lldiv
  6844  0AFB                     ___lldiv:	
  6845                           
  6846                           ;incstack = 0
  6847                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6848  0AFB  3000               	movlw	0
  6849  0AFC  1283               	bcf	3,5	;RP0=0, select bank0
  6850  0AFD  1303               	bcf	3,6	;RP1=0, select bank0
  6851  0AFE  00A4               	movwf	___lldiv@quotient+3
  6852  0AFF  3000               	movlw	0
  6853  0B00  00A3               	movwf	___lldiv@quotient+2
  6854  0B01  3000               	movlw	0
  6855  0B02  00A2               	movwf	___lldiv@quotient+1
  6856  0B03  3000               	movlw	0
  6857  0B04  00A1               	movwf	___lldiv@quotient
  6858  0B05  0875               	movf	___lldiv@divisor+3,w
  6859  0B06  0474               	iorwf	___lldiv@divisor+2,w
  6860  0B07  0473               	iorwf	___lldiv@divisor+1,w
  6861  0B08  0472               	iorwf	___lldiv@divisor,w
  6862  0B09  1903               	skipnz
  6863  0B0A  2B52               	goto	l4002
  6864  0B0B  01A5               	clrf	___lldiv@counter
  6865  0B0C  0AA5               	incf	___lldiv@counter,f
  6866  0B0D                     l3988:	
  6867  0B0D  1BF5               	btfsc	___lldiv@divisor+3,7
  6868  0B0E  2B1D               	goto	l3990
  6869  0B0F  3001               	movlw	1
  6870  0B10  00A0               	movwf	??___lldiv
  6871  0B11                     u1575:	
  6872  0B11  1003               	clrc
  6873  0B12  0DF2               	rlf	___lldiv@divisor,f
  6874  0B13  0DF3               	rlf	___lldiv@divisor+1,f
  6875  0B14  0DF4               	rlf	___lldiv@divisor+2,f
  6876  0B15  0DF5               	rlf	___lldiv@divisor+3,f
  6877  0B16  0BA0               	decfsz	??___lldiv,f
  6878  0B17  2B11               	goto	u1575
  6879  0B18  3001               	movlw	1
  6880  0B19  00A0               	movwf	??___lldiv
  6881  0B1A  0820               	movf	??___lldiv,w
  6882  0B1B  07A5               	addwf	___lldiv@counter,f
  6883  0B1C  2B0D               	goto	l3988
  6884  0B1D                     l3990:	
  6885  0B1D  3001               	movlw	1
  6886  0B1E  00A0               	movwf	??___lldiv
  6887  0B1F                     u1595:	
  6888  0B1F  1003               	clrc
  6889  0B20  0DA1               	rlf	___lldiv@quotient,f
  6890  0B21  0DA2               	rlf	___lldiv@quotient+1,f
  6891  0B22  0DA3               	rlf	___lldiv@quotient+2,f
  6892  0B23  0DA4               	rlf	___lldiv@quotient+3,f
  6893  0B24  0BA0               	decfsz	??___lldiv,f
  6894  0B25  2B1F               	goto	u1595
  6895  0B26  0875               	movf	___lldiv@divisor+3,w
  6896  0B27  0279               	subwf	___lldiv@dividend+3,w
  6897  0B28  1D03               	skipz
  6898  0B29  2B34               	goto	u1605
  6899  0B2A  0874               	movf	___lldiv@divisor+2,w
  6900  0B2B  0278               	subwf	___lldiv@dividend+2,w
  6901  0B2C  1D03               	skipz
  6902  0B2D  2B34               	goto	u1605
  6903  0B2E  0873               	movf	___lldiv@divisor+1,w
  6904  0B2F  0277               	subwf	___lldiv@dividend+1,w
  6905  0B30  1D03               	skipz
  6906  0B31  2B34               	goto	u1605
  6907  0B32  0872               	movf	___lldiv@divisor,w
  6908  0B33  0276               	subwf	___lldiv@dividend,w
  6909  0B34                     u1605:	
  6910  0B34  1C03               	skipc
  6911  0B35  2B45               	goto	l3998
  6912  0B36  0872               	movf	___lldiv@divisor,w
  6913  0B37  02F6               	subwf	___lldiv@dividend,f
  6914  0B38  0873               	movf	___lldiv@divisor+1,w
  6915  0B39  1C03               	skipc
  6916  0B3A  0F73               	incfsz	___lldiv@divisor+1,w
  6917  0B3B  02F7               	subwf	___lldiv@dividend+1,f
  6918  0B3C  0874               	movf	___lldiv@divisor+2,w
  6919  0B3D  1C03               	skipc
  6920  0B3E  0F74               	incfsz	___lldiv@divisor+2,w
  6921  0B3F  02F8               	subwf	___lldiv@dividend+2,f
  6922  0B40  0875               	movf	___lldiv@divisor+3,w
  6923  0B41  1C03               	skipc
  6924  0B42  0F75               	incfsz	___lldiv@divisor+3,w
  6925  0B43  02F9               	subwf	___lldiv@dividend+3,f
  6926  0B44  1421               	bsf	___lldiv@quotient,0
  6927  0B45                     l3998:	
  6928  0B45  3001               	movlw	1
  6929  0B46                     u1615:	
  6930  0B46  1003               	clrc
  6931  0B47  0CF5               	rrf	___lldiv@divisor+3,f
  6932  0B48  0CF4               	rrf	___lldiv@divisor+2,f
  6933  0B49  0CF3               	rrf	___lldiv@divisor+1,f
  6934  0B4A  0CF2               	rrf	___lldiv@divisor,f
  6935  0B4B  3EFF               	addlw	-1
  6936  0B4C  1D03               	skipz
  6937  0B4D  2B46               	goto	u1615
  6938  0B4E  3001               	movlw	1
  6939  0B4F  02A5               	subwf	___lldiv@counter,f
  6940  0B50  1D03               	btfss	3,2
  6941  0B51  2B1D               	goto	l3990
  6942  0B52                     l4002:	
  6943  0B52  0824               	movf	___lldiv@quotient+3,w
  6944  0B53  00F5               	movwf	?___lldiv+3
  6945  0B54  0823               	movf	___lldiv@quotient+2,w
  6946  0B55  00F4               	movwf	?___lldiv+2
  6947  0B56  0822               	movf	___lldiv@quotient+1,w
  6948  0B57  00F3               	movwf	?___lldiv+1
  6949  0B58  0821               	movf	___lldiv@quotient,w
  6950  0B59  00F2               	movwf	?___lldiv
  6951  0B5A  0008               	return
  6952  0B5B                     __end_of___lldiv:	
  6953                           
  6954                           	psect	text33
  6955  08E7                     __ptext33:	
  6956 ;; *************** function _ISR *****************
  6957 ;; Defined at:
  6958 ;;		line 130 in file "main_Master.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;		None
  6961 ;; Auto vars:     Size  Location     Type
  6962 ;;		None
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  1    wreg      void 
  6965 ;; Registers used:
  6966 ;;		wreg, status,2, status,0
  6967 ;; Tracked objects:
  6968 ;;		On entry : 0/0
  6969 ;;		On exit  : 0/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6972 ;;      Params:         0       0       0       0       0
  6973 ;;      Locals:         0       0       0       0       0
  6974 ;;      Temps:          2       0       0       0       0
  6975 ;;      Totals:         2       0       0       0       0
  6976 ;;Total ram usage:        2 bytes
  6977 ;; Hardware stack levels used:    1
  6978 ;; This function calls:
  6979 ;;		Nothing
  6980 ;; This function is called by:
  6981 ;;		Interrupt level 1
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           
  6986                           ;psect for function _ISR
  6987  08E7                     _ISR:	
  6988                           
  6989                           ;main_Master.c: 131:     if (INTCONbits.RBIF == 1 && INTCONbits.RBIE == 1){
  6990  08E7  180B               	btfsc	11,0	;volatile
  6991  08E8  1D8B               	btfss	11,3	;volatile
  6992  08E9  28F1               	goto	i1l131
  6993                           
  6994                           ;main_Master.c: 132:         INTCONbits.RBIF = 0;
  6995  08EA  100B               	bcf	11,0	;volatile
  6996                           
  6997                           ;main_Master.c: 133:         if (banderaBoton == 0){
  6998  08EB  087B               	movf	_banderaBoton,w
  6999  08EC  1D03               	btfss	3,2
  7000  08ED  28F1               	goto	i1l131
  7001                           
  7002                           ;main_Master.c: 134:             banderaBoton = 1;
  7003  08EE  01FB               	clrf	_banderaBoton
  7004  08EF  0AFB               	incf	_banderaBoton,f
  7005                           
  7006                           ;main_Master.c: 135:             INTCONbits.RBIE = 0;
  7007  08F0  118B               	bcf	11,3	;volatile
  7008  08F1                     i1l131:	
  7009  08F1  0871               	movf	??_ISR+1,w
  7010  08F2  008A               	movwf	10
  7011  08F3  0E70               	swapf	??_ISR^(0+4294967168),w
  7012  08F4  0083               	movwf	3
  7013  08F5  0EFE               	swapf	126,f
  7014  08F6  0E7E               	swapf	126,w
  7015  08F7  0009               	retfie
  7016  08F8                     __end_of_ISR:	
  7017  007E                     btemp	set	126	;btemp
  7018  007E                     wtemp0	set	126
  7019                           
  7020                           	psect	intentry
  7021  0004                     __pintentry:	
  7022                           ;incstack = 0
  7023                           ; Regs used in _ISR: [wreg+status,2+status,0]
  7024                           
  7025  0004                     interrupt_function:	
  7026  007E                     saved_w	set	btemp
  7027  0004  00FE               	movwf	btemp
  7028  0005  0E03               	swapf	3,w
  7029  0006  00F0               	movwf	??_ISR
  7030  0007  080A               	movf	10,w
  7031  0008  00F1               	movwf	??_ISR+1
  7032  0009  120A  158A  28E7   	ljmp	_ISR


Data Sizes:
    Strings     142
    Constant    40
    Data        10
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     35      63
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Create_Char@chardata	PTR const unsigned char  size(1) Largest target is 8
		 -> arrowr_vacio(CODE[8]), gota(CODE[8]), termometro(CODE[8]), arrowr(CODE[8]), 
		 -> atilde(CODE[8]), 

    LCD_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_17(CODE[6]), STR_16(CODE[16]), STR_15(CODE[3]), STR_14(CODE[13]), 
		 -> STR_13(CODE[5]), STR_12(CODE[3]), STR_11(CODE[5]), STR_10(CODE[3]), 
		 -> STR_9(CODE[13]), STR_8(CODE[4]), STR_7(CODE[9]), STR_6(CODE[14]), 
		 -> STR_5(CODE[12]), STR_4(CODE[11]), STR_3(CODE[13]), STR_2(CODE[17]), 
		 -> STR_1(CODE[3]), 

    sp__uint_to_array	PTR unsigned int  size(1) Largest target is 6
		 -> uint_to_array@resultado(BANK0[6]), 

    obj_array	PTR unsigned int  size(1) Largest target is 6
		 -> NULL(NULL[0]), uint_to_array@resultado(BANK0[6]), 


Critical Paths under _main in COMMON

    _pressBoton2->_LCD_Set_Cursor
    _pressBoton1->_LCD_clear
    _mostrarLCD->_LCD_Set_Cursor
    _uint_to_array->___awdiv
    _display_Uhrzeit->_LCD_Set_Cursor
    _display_Datum->_LCD_Set_Cursor
    _LCD_Write_String->_LCD_Write_Character
    _LCD_Set_Cursor->_LCD_Cmd
    _get_Time->_BCD_a_DEC
    _BCD_a_DEC->___bmul
    _Zeit_Datum_Set->_DEC_a_BCD
    _I2C_Master_Write->_DEC_a_BCD
    _DEC_a_BCD->___awdiv
    _DEC_a_BCD->___awmod
    ___awdiv->___wmul
    _LCD_init->_LCD_Cmd
    _LCD_clear->_LCD_Cmd
    _LCD_Create_Char->_LCD_Cmd
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_mostrarLCD
    _mostrarLCD->_uint_to_array
    _uint_to_array->___awdiv
    _display_Uhrzeit->___awdiv
    _display_Datum->___awdiv
    _get_Time->_I2C_Master_Write
    _SetUp->_Zeit_Datum_Set
    _Zeit_Datum_Set->_I2C_Master_Write
    _I2C_Master_Write->_DEC_a_BCD
    _DEC_a_BCD->___awdiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   56157
                                             33 BANK0      2     2      0
                              _SetUp
                           _get_Time
                         _mostrarLCD
                        _pressBoton1
                        _pressBoton2
                       _uartTX_Write
 ---------------------------------------------------------------------------------
 (1) _uartTX_Write                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pressBoton2                                          2     2      0    2383
                                              0 BANK0      2     2      0
                     _LCD_Set_Cursor
                _LCD_Write_Character
                          _LCD_clear
 ---------------------------------------------------------------------------------
 (1) _pressBoton1                                          2     2      0      22
                                              7 COMMON     2     2      0
                          _LCD_clear
 ---------------------------------------------------------------------------------
 (1) _mostrarLCD                                          10    10      0   29996
                                             23 BANK0     10    10      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                          _LCD_clear
                      _display_Datum
                    _display_Uhrzeit
                      _uint_to_array
 ---------------------------------------------------------------------------------
 (2) _uint_to_array                                       15    15      0    3467
                                              8 BANK0     15    15      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _display_Uhrzeit                                     11    10      1    7387
                                              8 BANK0     11    10      1
                     _LCD_Set_Cursor
                _LCD_Write_Character
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _display_Datum                                       11    10      1    8060
                                              8 BANK0     11    10      1
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     3     3      0     673
                                              4 COMMON     3     3      0
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       5     4      1    2339
                                              5 COMMON     5     4      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _get_Time                                             1     1      0   10083
                                             15 BANK0      1     1      0
                          _BCD_a_DEC
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2    2173
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _BCD_a_DEC                                            4     4      0     212
                                              6 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SetUp                                                1     1      0   13651
                                             17 BANK0      1     1      0
                    _I2C_Master_Init
                    _LCD_Create_Char
                          _LCD_clear
                           _LCD_init
                         _OSC_config
                     _Zeit_Datum_Set
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Zeit_Datum_Set                                       2     2      0   12430
                                             15 BANK0      2     2      0
                          _DEC_a_BCD
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    7698
                                             13 BANK0      2     0      2
                          _DEC_a_BCD (ARG)
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DEC_a_BCD                                            6     6      0    4732
                                              9 COMMON     1     1      0
                                              8 BANK0      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    2149
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    2521
                                              8 COMMON     1     1      0
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _OSC_config                                           4     0      4      98
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             2     2      0      22
                                              5 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            2     2      0      22
                                              5 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Create_Char                                      4     3      1     537
                                              5 COMMON     4     3      1
                            _LCD_Cmd
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Character                                  2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetUp
     _I2C_Master_Init
       ___lldiv
     _LCD_Create_Char
       _LCD_Cmd
       _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
     _LCD_init
       _LCD_Cmd
     _OSC_config
     _Zeit_Datum_Set
       _DEC_a_BCD
         ___awdiv
           ___wmul (ARG)
         ___awmod
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _DEC_a_BCD (ARG)
           ___awdiv
             ___wmul (ARG)
           ___awmod
         _I2C_Master_Wait (ARG)
     _uart_init
   _get_Time
     _BCD_a_DEC
       ___bmul
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _DEC_a_BCD (ARG)
         ___awdiv
           ___wmul (ARG)
         ___awmod
       _I2C_Master_Wait (ARG)
   _mostrarLCD
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _DEC_a_BCD (ARG)
         ___awdiv
           ___wmul (ARG)
         ___awmod
       _I2C_Master_Wait (ARG)
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     _LCD_Write_String
       _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
     _display_Datum
       _LCD_Set_Cursor
         _LCD_Cmd
       _LCD_Write_Character
       _LCD_Write_String
         _LCD_Write_Character
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _display_Uhrzeit
       _LCD_Set_Cursor
         _LCD_Cmd
       _LCD_Write_Character
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _uint_to_array
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _pressBoton1
     _LCD_clear
       _LCD_Cmd
   _pressBoton2
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
   _uartTX_Write

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     23      3F       5       78.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4B      12        0.0%
ABS                  0      0      4B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat May 02 15:24:57 2020

                           pc 0002                ___bmul@product 0074       __end_of_LCD_Create_Char 09CA  
                 __CFG_CP$OFF 0000                  ___awdiv@sign 0025            __size_of_BCD_a_DEC 0016  
                          fsr 0004           ___wmul@multiplicand 0074            mostrarLCD@pantalla 003A  
                         l311 08CF                           l330 09F0                           l329 09ED  
                         l438 08C4                           l564 0965                           _GIE 005F  
                __CFG_CPD$OFF 0000                           _ISR 08E7                           u965 0966  
                         u975 096D            __size_of_DEC_a_BCD 0030       __end_of_display_Uhrzeit 06D2  
                         _dia 005C                           _mes 005A                           _min 005E  
                         _seg 0053                           fsr0 0004                           indf 0000  
                ___awmod@sign 0078                ?_display_Datum 0028  __size_of_LCD_Write_Character 000F  
             __end_of_LCD_Cmd 0A25                  __CFG_LVP$OFF 0000                          ?_ISR 0070  
              _LCD_Set_Cursor 06D2                          l3200 0C08                          l4002 0B52  
                        l3202 0C1B                          l4120 002D                          l3208 0C1F  
                        l4122 0042                          l4220 01C3                          l4132 007A  
                        l3172 0BCD                          l2630 06E8                          l2622 06D4  
                        l4230 0204                          l3190 0BEE                          l2720 0DF7  
                        l2632 06ED                          l4160 011B                          l3184 0BE3  
                        l4320 0D9F                          l4312 0D83                          l4304 0D67  
                        l2730 0E1A                          l2722 0DFE                          l2626 06DE  
                        l4242 0240                          l4154 00F9                          l4146 00D4  
                        l3178 0BD8                          l2732 0E1F                          l2724 0E05  
                        l2716 0DEB                          l2644 097F                          l4236 0219  
                        l4324 0DAB                          l2726 0E0C                          l2718 0DF0  
                        l2734 0E26                          l4254 028B                          l4326 0DB6  
                        l4334 0DD5                          l2728 0E13                          l2664 095D  
                        l4248 026A                          l4184 0175                          l4168 013F  
                        l4328 0DCF                          l2682 0900                          l4276 02F7  
                        l4348 0F4C                          l2838 09B4                          l3910 0AB7  
                        l2678 08FA                          l4278 0306                          l4294 0D4C  
                        l3920 0ABF                          l3904 0AAC                          l4296 0D4E  
                        l3922 0ACD                          l3932 0AEE                          l4830 06F5  
                        l4840 0E53                          l4832 0E2B                          l3936 0AF6  
                        l3928 0AE3                          l3960 0A6C                          l3952 0A66  
                        l4824 0DBE                          l4842 0E5D                          l4834 0E35  
                        l4850 0E30                          l3962 0A7A                          l3970 0A93  
                        l4826 0C10                          l4844 0E67                          l4860 0E62  
                        l4836 0E3F                          l4852 0E3A                          l3948 0A5F  
                        l4828 030E                          l3990 0B1D                          l4846 0E71  
                        l4862 0E6C                          l4838 0E49                          l4854 0E44  
                        l3974 0A9B                          l3966 0A88                          l4864 0E76  
                        l4856 0E4E                          l4848 0E7B                          l4858 0E58  
                        l3988 0B0D                          l3998 0B45                          STR_1 07B6  
                        STR_2 072E                          STR_3 076A                          STR_4 0790  
                        STR_5 0784                          STR_6 074F                          STR_7 079B  
                        STR_8 07AF                          STR_9 075D                          u1125 0950  
                        u2007 093F                          u2017 08E1                          u2027 09FE  
                        _IOCB 0096                          u2037 0A09                          u1085 09A6  
                        u2047 0A15                          u1415 0ACE                          u2057 0A20  
                        u1425 0ADA                          u1435 0AE4                          u1515 0A80  
                        u1605 0B34                          u1525 0A89                          u1615 0B46  
                        u1640 0C38                          u1635 07CE                          u1395 0AC2  
                        u1555 0A3D                          u1575 0B11                          u1495 0A6F  
                        u1807 0FD5                          u1817 0FE5                          u1595 0B1F  
                        u1907 02EA                          u1827 0FF5                          u1747 0F6F  
                        u1917 0B5F                          u1837 0D61                          u1757 0F81  
                        u1927 0B6E                          u1847 0D7D                          u1767 0F93  
                        u1937 0B7A                          u1857 0D99                          u1777 0FA5  
                        u1947 0B84                          u1867 0DB1                          u1787 0FB5  
                        _PEIE 005E                          u1957 0B8E                          u1877 0DE2  
                        u1797 0FC5                          u1967 0B99                          u1887 0BF7  
                        u1977 0BA6                          u1897 0C2A                          u1987 0BB3  
                        u1997 0BBE                          _WPUB 0095                  __CFG_WRT$OFF 0000  
                        _accZ 0049             ?_LCD_Write_String 0070                          _jahr 0059  
                        _main 0F47                          _gota 0706                          _hora 005D  
                        btemp 007E                 _uint_to_array 0C31                          start 000C  
          ??_LCD_Write_String 0074                 __CFG_IESO$OFF 0000            __size_of_LCD_clear 0016  
           ___bmul@multiplier 0075                         ??_ISR 0070              ?_I2C_Master_Init 0026  
            ?_I2C_Master_Read 0072              ?_I2C_Master_Wait 0070              ?_I2C_Master_Stop 0070  
            __end_of_LCD_init 0BC2                         ?_main 0070               __end_of___awdiv 0AFB  
             DEC_a_BCD@numDEC 0079                         STR_10 07B9                         STR_11 07AA  
                       STR_13 07AA                         STR_14 0777                         STR_15 07B3  
                       STR_16 073F                         STR_17 07A4                 __CFG_WDTE$OFF 0000  
             __end_of___awmod 0AA0               __end_of___lldiv 0B5B               ___awdiv@divisor 0020  
                       i1l131 08F1               ___awdiv@counter 0024                         _RCREG 001A  
                       _SPBRG 0099                         _PORTC 0007                         _PORTD 0008  
                       _TRISB 0086                         _TRISC 0087                         _TRISD 0088  
                       _SSPIE 0463                         _SSPIF 0063                         _TXREG 0019  
                _sprintbuffer 004B                __CFG_FCMEN$OFF 0000        __end_of_LCD_Set_Cursor 06FE  
                       _SetUp 0CB6                         _ancho 004C                         _datum 005B  
                       _largo 004D                __CFG_BOREN$OFF 0000                   ?_OSC_config 0072  
                       pclath 000A             __end_of_BCD_a_DEC 095B                ?_uint_to_array 0070  
                       status 0003                         wtemp0 007E             __end_of_DEC_a_BCD 0A55  
              __CFG_MCLRE$OFF 0000               __initialization 000F                  __end_of_main 1000  
                __end_of_gota 070E              ?_LCD_Create_Char 0075                        ??_main 0041  
                   ??_LCD_Cmd 0072               ??_display_Datum 0029              ?_display_Uhrzeit 0028  
           ?_I2C_Master_Start 0070             ?_I2C_Master_Write 002D             __end_of_LCD_clear 0945  
                      ?_SetUp 0070               ?_LCD_Set_Cursor 0075            ??_I2C_Master_Start 0072  
          ??_I2C_Master_Write 007A                  _banderaPUSH1 007A                  _banderaPUSH2 004E  
            ___awdiv@dividend 0022                        _ANSELH 0189                  _banderaBoton 007B  
                      _SPBRGH 009A                        _SSPADD 0093                        _TRISC0 0438  
                      _TRISC1 0439                        _TRISC3 043B                        _TRISC4 043C  
          uint_to_array@F1343 0043                        _SSPCON 0014                        _SSPBUF 0013  
            ??_Zeit_Datum_Set 002F   LCD_Write_Character@caracter 0073                __CFG_PWRTE$OFF 0000  
            __end_of_get_Time 0528                        ___bmul 08F8                        ___wmul 095B  
                   ??___awdiv 0078                     ??___awmod 0076                     ??___lldiv 0020  
                      _atilde 0716                        _arrowr 0726                        _estado 0054  
            ___awdiv@quotient 0026               ___awmod@divisor 0072           __size_of_OSC_config 00AC  
             ___awmod@counter 0077                  ?_pressBoton1 0070                  ?_pressBoton2 0070  
                      saved_w 007E               ??_uint_to_array 0028       __end_of__initialization 0025  
                   ?_LCD_init 0070           ___bmul@multiplicand 0072                __pcstackCOMMON 0070  
               __end_of_SetUp 0D41           _LCD_Write_Character 08D8                  __pidataBANK0 07F2  
        display_Datum@columna 0028                _OPTION_REGbits 0081               _temperatura_obj 0050  
                     ??_SetUp 0031          ?_LCD_Write_Character 0070                LCD_Cmd@comando 0074  
                  __pbssBANK0 0043     LCD_Set_Cursor@corrimiento 0079                    ??_LCD_init 0075  
        __end_of_arrowr_vacio 0726                    __pmaintext 0F47                       ?___bmul 0072  
                     ?___wmul 0072                    __pintentry 0004     __size_of_LCD_Write_String 0022  
        OSC_config@frecuencia 0072           display_Uhrzeit@fila 002C            __size_of_uart_init 0015  
                     _LCD_Cmd 09F6         ??_LCD_Write_Character 0072                     ?_get_Time 0070  
                     _SSPCON2 0091                       _SSPSTAT 0094                    __stringtab 0700  
                ??_OSC_config 0076                     _BCD_a_DEC 0945                 ?_uartTX_Write 0070  
      uint_to_array@resultado 0030               __size_of___bmul 0011                     _DEC_a_BCD 0A25  
                     ___awdiv 0AA0                       ___awmod 0A55                       ___lldiv 0AFB  
             __size_of___wmul 0021             display_Datum@fila 002C                       _d_atras 0055  
            ??_LCD_Set_Cursor 0076                       __ptext1 08BF                       __ptext2 0D41  
                     __ptext3 0BC2                       __ptext4 0029                       __ptext5 0C31  
                     __ptext6 095B                       __ptext7 0600                       __ptext8 0528  
                     __ptext9 097C            __end_of_OSC_config 0E96                  __size_of_ISR 0011  
         uint_to_array@numero 0036                       _humedad 0058              ___awmod@dividend 0074  
    __size_of_I2C_Master_Init 0036      __size_of_I2C_Master_Read 002C      __size_of_I2C_Master_Wait 0009  
    __size_of_I2C_Master_Stop 0007          __size_of_pressBoton1 006F          __size_of_pressBoton2 00A9  
                  ??_get_Time 002F                       clrloop0 08C8                     _LCD_clear 092F  
        end_of_initialization 0025                ??_uartTX_Write 0072     __size_of_I2C_Master_Start 0007  
           __end_of_uart_init 092F     __size_of_I2C_Master_Write 0008               ___lldiv@divisor 0072  
                  ?_BCD_a_DEC 0070               ___lldiv@counter 0025                     _RCSTAbits 0018  
            I2C_Master_Init@c 0026              I2C_Master_Read@a 0072                    ?_DEC_a_BCD 0070  
                  _mostrarLCD 0029                     _PORTBbits 0006                     _PORTCbits 0007  
                  _termometro 070E      __size_of_LCD_Create_Char 002C                     _TRISCbits 0087  
       __end_of_display_Datum 0600                    ?_LCD_clear 0070             LCD_Write_String@a 0076  
           LCD_Write_String@n 0074      __size_of_display_Uhrzeit 00D2                     _TXSTAbits 0098  
           __size_of_LCD_init 0067                __end_of___bmul 0909         LCD_Set_Cursor@columna 0075  
              __end_of___wmul 097C              _LCD_Write_String 097C                   _BAUDCTLbits 0187  
              __end_of_atilde 071E                __end_of_arrowr 072E                  _arrowr_vacio 071E  
         start_initialization 000F                   __end_of_ISR 08F8             ??_I2C_Master_Init 002A  
           ??_I2C_Master_Read 0074             ??_I2C_Master_Wait 0072         __end_of_uint_to_array 0CB6  
           ??_I2C_Master_Stop 0072      __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??_BCD_a_DEC 0076  
                    ??___bmul 0073       LCD_Create_Char@chardata 0075                   ??_DEC_a_BCD 0028  
                    ??___wmul 0076                    init_fetch0 0909                   ?_mostrarLCD 0070  
                 __pdataBANK0 0055       __size_of_Zeit_Datum_Set 00B1               BCD_a_DEC@numBCD 0079  
                    ?_LCD_Cmd 0070          __end_of_uartTX_Write 08C7                   __pbssCOMMON 007A  
                   ___latbits 0002                 __pcstackBANK0 0020           display_Datum@jahr_d 0032  
         display_Datum@jahr_u 0031                   ??_LCD_clear 0075             __size_of_get_Time 01F6  
           ??_LCD_Create_Char 0076              _I2C_Master_Start 08A9              _I2C_Master_Write 08B7  
       uint_to_array@centenas 002F             ??_display_Uhrzeit 0029                      ?___awdiv 0020  
                    ?___awmod 0072                      ?___lldiv 0072                     __pstrings 0700  
 __end_of_LCD_Write_Character 08E7                     _obj_array 004F                __size_of_SetUp 008B  
        display_Uhrzeit@Uhr_d 0032          display_Uhrzeit@Uhr_u 0031           __size_of_mostrarLCD 0309  
        display_Uhrzeit@min_d 0030          display_Uhrzeit@min_u 002F          display_Uhrzeit@seg_d 002E  
        display_Uhrzeit@seg_u 002D             interrupt_function 0004                ___wmul@product 0076  
                    _LCD_init 0B5B                     clear_ram0 08C7              LCD_Create_Char@n 0078  
                    _PIR1bits 000C                     _uart_init 091A                     _velocidad 0052  
                 __stringbase 0705             ___wmul@multiplier 0072                 ??_pressBoton1 0077  
               ??_pressBoton2 0020              __size_of_LCD_Cmd 002F           I2C_Master_Read@temp 0076  
    __end_of_LCD_Write_String 099E                   _inclinacion 0057        LCD_Create_Char@charnum 0077  
                  ?_uart_init 0072                _Zeit_Datum_Set 0E96              __size_of___awdiv 005B  
            __size_of___awmod 004B              __size_of___lldiv 0060         __size_of_uartTX_Write 0008  
          display_Datum@dia_d 002E            display_Datum@dia_u 002D              uartTX_Write@dato 0072  
          __end_of__stringtab 0706            display_Datum@mes_d 0030            display_Datum@mes_u 002F  
                    _d_frente 0056               _I2C_Master_Init 07BC               _I2C_Master_Read 09CA  
        uint_to_array@decenas 002E               _I2C_Master_Wait 08CF               _I2C_Master_Stop 08B0  
                    __ptext10 06D2                      __ptext11 0332                      __ptext20 08A9  
                    __ptext12 09CA                      __ptext21 08CF                      __ptext13 0945  
                    __ptext30 09F6                      __ptext22 0A25                      __ptext14 08F8  
                    __ptext31 07BC                      __ptext23 0A55                      __ptext15 0CB6  
                    __ptext32 0AFB                      __ptext24 0AA0                      __ptext16 091A  
                    __ptext33 08E7                      __ptext25 0DEA                      __ptext17 0E96  
                    __ptext26 0B5B                      __ptext18 08B7                      __ptext27 092F  
                    __ptext19 08B0                      __ptext28 099E                      __ptext29 08D8  
                    _get_Time 0332             __CFG_BOR4V$BOR40V 0000       __size_of_LCD_Set_Cursor 002C  
         __end_of_pressBoton1 0C31           __end_of_pressBoton2 0DEA                 __size_of_main 00B9  
      display_Uhrzeit@columna 0028                  _uartTX_Write 08BF        __end_of_Zeit_Datum_Set 0F47  
      __size_of_display_Datum 00D8                  ??_mostrarLCD 0037           LCD_Set_Cursor@linea 0078  
             _LCD_Create_Char 099E      __end_of_I2C_Master_Start 08B0      __end_of_I2C_Master_Write 08BF  
                  _INTCONbits 000B                      init_ram0 090D               _display_Uhrzeit 0600  
                    intlevel1 0000            __end_of_mostrarLCD 0332              ___lldiv@dividend 0076  
                   stringcode 0700                    _OSCCONbits 008F            __end_of_termometro 0716  
             ?_Zeit_Datum_Set 0070                   ??_uart_init 0074       __end_of_I2C_Master_Init 07F2  
     __end_of_I2C_Master_Read 09F6       __end_of_I2C_Master_Wait 08D8       __end_of_I2C_Master_Stop 08B7  
                 _temperatura 0051        __size_of_uint_to_array 0085              ___lldiv@quotient 0021  
           I2C_Master_Write@d 002D                   _pressBoton1 0BC2                   _pressBoton2 0D41  
                    stringdir 0700                      stringtab 0700                   _SSPCON2bits 0091  
               _display_Datum 0528                    _OSC_config 0DEA  

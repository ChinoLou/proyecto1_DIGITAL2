

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun May 03 00:47:30 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.05
    56                           ; Generated 20/12/2018 GMT
    57                           ; 
    58                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  0088                     	;# 
   129  0089                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008F                     	;# 
   134  0090                     	;# 
   135  0091                     	;# 
   136  0092                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  0105                     	;# 
   153  0107                     	;# 
   154  0108                     	;# 
   155  0109                     	;# 
   156  010C                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0185                     	;# 
   162  0187                     	;# 
   163  0188                     	;# 
   164  0189                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0000                     	;# 
   168  0001                     	;# 
   169  0002                     	;# 
   170  0003                     	;# 
   171  0004                     	;# 
   172  0005                     	;# 
   173  0006                     	;# 
   174  0007                     	;# 
   175  0008                     	;# 
   176  0009                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000D                     	;# 
   181  000E                     	;# 
   182  000E                     	;# 
   183  000F                     	;# 
   184  0010                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0013                     	;# 
   188  0014                     	;# 
   189  0015                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  0081                     	;# 
   203  0085                     	;# 
   204  0086                     	;# 
   205  0087                     	;# 
   206  0088                     	;# 
   207  0089                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  0105                     	;# 
   231  0107                     	;# 
   232  0108                     	;# 
   233  0109                     	;# 
   234  010C                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  0185                     	;# 
   240  0187                     	;# 
   241  0188                     	;# 
   242  0189                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  008F                     	;# 
   290  0090                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009A                     	;# 
   303  009B                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  0105                     	;# 
   309  0107                     	;# 
   310  0108                     	;# 
   311  0109                     	;# 
   312  010C                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010E                     	;# 
   316  010F                     	;# 
   317  0185                     	;# 
   318  0187                     	;# 
   319  0188                     	;# 
   320  0189                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323  0000                     	;# 
   324  0001                     	;# 
   325  0002                     	;# 
   326  0003                     	;# 
   327  0004                     	;# 
   328  0005                     	;# 
   329  0006                     	;# 
   330  0007                     	;# 
   331  0008                     	;# 
   332  0009                     	;# 
   333  000A                     	;# 
   334  000B                     	;# 
   335  000C                     	;# 
   336  000D                     	;# 
   337  000E                     	;# 
   338  000E                     	;# 
   339  000F                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0014                     	;# 
   345  0015                     	;# 
   346  0015                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001B                     	;# 
   354  001C                     	;# 
   355  001D                     	;# 
   356  001E                     	;# 
   357  001F                     	;# 
   358  0081                     	;# 
   359  0085                     	;# 
   360  0086                     	;# 
   361  0087                     	;# 
   362  0088                     	;# 
   363  0089                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  008F                     	;# 
   368  0090                     	;# 
   369  0091                     	;# 
   370  0092                     	;# 
   371  0093                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0094                     	;# 
   375  0095                     	;# 
   376  0096                     	;# 
   377  0097                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009A                     	;# 
   381  009B                     	;# 
   382  009C                     	;# 
   383  009D                     	;# 
   384  009E                     	;# 
   385  009F                     	;# 
   386  0105                     	;# 
   387  0107                     	;# 
   388  0108                     	;# 
   389  0109                     	;# 
   390  010C                     	;# 
   391  010C                     	;# 
   392  010D                     	;# 
   393  010E                     	;# 
   394  010F                     	;# 
   395  0185                     	;# 
   396  0187                     	;# 
   397  0188                     	;# 
   398  0189                     	;# 
   399  018C                     	;# 
   400  018D                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  000E                     	;# 
   416  000E                     	;# 
   417  000F                     	;# 
   418  0010                     	;# 
   419  0011                     	;# 
   420  0012                     	;# 
   421  0013                     	;# 
   422  0014                     	;# 
   423  0015                     	;# 
   424  0015                     	;# 
   425  0016                     	;# 
   426  0017                     	;# 
   427  0018                     	;# 
   428  0019                     	;# 
   429  001A                     	;# 
   430  001B                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  001D                     	;# 
   434  001E                     	;# 
   435  001F                     	;# 
   436  0081                     	;# 
   437  0085                     	;# 
   438  0086                     	;# 
   439  0087                     	;# 
   440  0088                     	;# 
   441  0089                     	;# 
   442  008C                     	;# 
   443  008D                     	;# 
   444  008E                     	;# 
   445  008F                     	;# 
   446  0090                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0094                     	;# 
   453  0095                     	;# 
   454  0096                     	;# 
   455  0097                     	;# 
   456  0098                     	;# 
   457  0099                     	;# 
   458  009A                     	;# 
   459  009B                     	;# 
   460  009C                     	;# 
   461  009D                     	;# 
   462  009E                     	;# 
   463  009F                     	;# 
   464  0105                     	;# 
   465  0107                     	;# 
   466  0108                     	;# 
   467  0109                     	;# 
   468  010C                     	;# 
   469  010C                     	;# 
   470  010D                     	;# 
   471  010E                     	;# 
   472  010F                     	;# 
   473  0185                     	;# 
   474  0187                     	;# 
   475  0188                     	;# 
   476  0189                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479  0000                     	;# 
   480  0001                     	;# 
   481  0002                     	;# 
   482  0003                     	;# 
   483  0004                     	;# 
   484  0005                     	;# 
   485  0006                     	;# 
   486  0007                     	;# 
   487  0008                     	;# 
   488  0009                     	;# 
   489  000A                     	;# 
   490  000B                     	;# 
   491  000C                     	;# 
   492  000D                     	;# 
   493  000E                     	;# 
   494  000E                     	;# 
   495  000F                     	;# 
   496  0010                     	;# 
   497  0011                     	;# 
   498  0012                     	;# 
   499  0013                     	;# 
   500  0014                     	;# 
   501  0015                     	;# 
   502  0015                     	;# 
   503  0016                     	;# 
   504  0017                     	;# 
   505  0018                     	;# 
   506  0019                     	;# 
   507  001A                     	;# 
   508  001B                     	;# 
   509  001B                     	;# 
   510  001C                     	;# 
   511  001D                     	;# 
   512  001E                     	;# 
   513  001F                     	;# 
   514  0081                     	;# 
   515  0085                     	;# 
   516  0086                     	;# 
   517  0087                     	;# 
   518  0088                     	;# 
   519  0089                     	;# 
   520  008C                     	;# 
   521  008D                     	;# 
   522  008E                     	;# 
   523  008F                     	;# 
   524  0090                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0093                     	;# 
   529  0093                     	;# 
   530  0094                     	;# 
   531  0095                     	;# 
   532  0096                     	;# 
   533  0097                     	;# 
   534  0098                     	;# 
   535  0099                     	;# 
   536  009A                     	;# 
   537  009B                     	;# 
   538  009C                     	;# 
   539  009D                     	;# 
   540  009E                     	;# 
   541  009F                     	;# 
   542  0105                     	;# 
   543  0107                     	;# 
   544  0108                     	;# 
   545  0109                     	;# 
   546  010C                     	;# 
   547  010C                     	;# 
   548  010D                     	;# 
   549  010E                     	;# 
   550  010F                     	;# 
   551  0185                     	;# 
   552  0187                     	;# 
   553  0188                     	;# 
   554  0189                     	;# 
   555  018C                     	;# 
   556  018D                     	;# 
   557  0000                     	;# 
   558  0001                     	;# 
   559  0002                     	;# 
   560  0003                     	;# 
   561  0004                     	;# 
   562  0005                     	;# 
   563  0006                     	;# 
   564  0007                     	;# 
   565  0008                     	;# 
   566  0009                     	;# 
   567  000A                     	;# 
   568  000B                     	;# 
   569  000C                     	;# 
   570  000D                     	;# 
   571  000E                     	;# 
   572  000E                     	;# 
   573  000F                     	;# 
   574  0010                     	;# 
   575  0011                     	;# 
   576  0012                     	;# 
   577  0013                     	;# 
   578  0014                     	;# 
   579  0015                     	;# 
   580  0015                     	;# 
   581  0016                     	;# 
   582  0017                     	;# 
   583  0018                     	;# 
   584  0019                     	;# 
   585  001A                     	;# 
   586  001B                     	;# 
   587  001B                     	;# 
   588  001C                     	;# 
   589  001D                     	;# 
   590  001E                     	;# 
   591  001F                     	;# 
   592  0081                     	;# 
   593  0085                     	;# 
   594  0086                     	;# 
   595  0087                     	;# 
   596  0088                     	;# 
   597  0089                     	;# 
   598  008C                     	;# 
   599  008D                     	;# 
   600  008E                     	;# 
   601  008F                     	;# 
   602  0090                     	;# 
   603  0091                     	;# 
   604  0092                     	;# 
   605  0093                     	;# 
   606  0093                     	;# 
   607  0093                     	;# 
   608  0094                     	;# 
   609  0095                     	;# 
   610  0096                     	;# 
   611  0097                     	;# 
   612  0098                     	;# 
   613  0099                     	;# 
   614  009A                     	;# 
   615  009B                     	;# 
   616  009C                     	;# 
   617  009D                     	;# 
   618  009E                     	;# 
   619  009F                     	;# 
   620  0105                     	;# 
   621  0107                     	;# 
   622  0108                     	;# 
   623  0109                     	;# 
   624  010C                     	;# 
   625  010C                     	;# 
   626  010D                     	;# 
   627  010E                     	;# 
   628  010F                     	;# 
   629  0185                     	;# 
   630  0187                     	;# 
   631  0188                     	;# 
   632  0189                     	;# 
   633  018C                     	;# 
   634  018D                     	;# 
   635  0000                     	;# 
   636  0001                     	;# 
   637  0002                     	;# 
   638  0003                     	;# 
   639  0004                     	;# 
   640  0005                     	;# 
   641  0006                     	;# 
   642  0007                     	;# 
   643  0008                     	;# 
   644  0009                     	;# 
   645  000A                     	;# 
   646  000B                     	;# 
   647  000C                     	;# 
   648  000D                     	;# 
   649  000E                     	;# 
   650  000E                     	;# 
   651  000F                     	;# 
   652  0010                     	;# 
   653  0011                     	;# 
   654  0012                     	;# 
   655  0013                     	;# 
   656  0014                     	;# 
   657  0015                     	;# 
   658  0015                     	;# 
   659  0016                     	;# 
   660  0017                     	;# 
   661  0018                     	;# 
   662  0019                     	;# 
   663  001A                     	;# 
   664  001B                     	;# 
   665  001B                     	;# 
   666  001C                     	;# 
   667  001D                     	;# 
   668  001E                     	;# 
   669  001F                     	;# 
   670  0081                     	;# 
   671  0085                     	;# 
   672  0086                     	;# 
   673  0087                     	;# 
   674  0088                     	;# 
   675  0089                     	;# 
   676  008C                     	;# 
   677  008D                     	;# 
   678  008E                     	;# 
   679  008F                     	;# 
   680  0090                     	;# 
   681  0091                     	;# 
   682  0092                     	;# 
   683  0093                     	;# 
   684  0093                     	;# 
   685  0093                     	;# 
   686  0094                     	;# 
   687  0095                     	;# 
   688  0096                     	;# 
   689  0097                     	;# 
   690  0098                     	;# 
   691  0099                     	;# 
   692  009A                     	;# 
   693  009B                     	;# 
   694  009C                     	;# 
   695  009D                     	;# 
   696  009E                     	;# 
   697  009F                     	;# 
   698  0105                     	;# 
   699  0107                     	;# 
   700  0108                     	;# 
   701  0109                     	;# 
   702  010C                     	;# 
   703  010C                     	;# 
   704  010D                     	;# 
   705  010E                     	;# 
   706  010F                     	;# 
   707  0185                     	;# 
   708  0187                     	;# 
   709  0188                     	;# 
   710  0189                     	;# 
   711  018C                     	;# 
   712  018D                     	;# 
   713                           
   714                           	psect	idataBANK0
   715  07F2                     __pidataBANK0:	
   716                           
   717                           ;initializer for _d_atras
   718  07F2  3466               	retlw	102
   719                           
   720                           ;initializer for _d_frente
   721  07F3  3466               	retlw	102
   722                           
   723                           ;initializer for _inclinacion
   724  07F4  3404               	retlw	4
   725                           
   726                           ;initializer for _humedad
   727  07F5  3405               	retlw	5
   728                           
   729                           ;initializer for _jahr
   730  07F6  3414               	retlw	20
   731                           
   732                           ;initializer for _mes
   733  07F7  3403               	retlw	3
   734                           
   735                           ;initializer for _datum
   736  07F8  3406               	retlw	6
   737                           
   738                           ;initializer for _dia
   739  07F9  3405               	retlw	5
   740                           
   741                           ;initializer for _hora
   742  07FA  3410               	retlw	16
   743                           
   744                           ;initializer for _min
   745  07FB  3415               	retlw	21
   746                           
   747                           	psect	strings
   748  0700                     __pstrings:	
   749  0700                     stringtab:	
   750  0700                     __stringtab:	
   751  0700                     stringcode:	
   752                           ;	String table - string pointers are 1 byte each
   753                           
   754  0700                     stringdir:	
   755  0700  3007               	movlw	high stringdir
   756  0701  008A               	movwf	10
   757  0702  0804               	movf	4,w
   758  0703  0A84               	incf	4,f
   759  0704  0782               	addwf	2,f
   760  0705                     __stringbase:	
   761  0705  3400               	retlw	0
   762  0706                     __end_of__stringtab:	
   763  0706                     _gota:	
   764  0706  3404               	retlw	4
   765  0707  340A               	retlw	10
   766  0708  340A               	retlw	10
   767  0709  3411               	retlw	17
   768  070A  3411               	retlw	17
   769  070B  3411               	retlw	17
   770  070C  340E               	retlw	14
   771  070D  3400               	retlw	0
   772  070E                     __end_of_gota:	
   773  070E                     _termometro:	
   774  070E  3404               	retlw	4
   775  070F  340A               	retlw	10
   776  0710  340A               	retlw	10
   777  0711  340E               	retlw	14
   778  0712  340E               	retlw	14
   779  0713  341F               	retlw	31
   780  0714  341F               	retlw	31
   781  0715  340E               	retlw	14
   782  0716                     __end_of_termometro:	
   783  0716                     _atilde:	
   784  0716  3402               	retlw	2
   785  0717  3404               	retlw	4
   786  0718  3400               	retlw	0
   787  0719  340E               	retlw	14
   788  071A  3401               	retlw	1
   789  071B  340F               	retlw	15
   790  071C  3411               	retlw	17
   791  071D  340F               	retlw	15
   792  071E                     __end_of_atilde:	
   793  071E                     _arrowr_vacio:	
   794  071E  3400               	retlw	0
   795  071F  3408               	retlw	8
   796  0720  340C               	retlw	12
   797  0721  340A               	retlw	10
   798  0722  3409               	retlw	9
   799  0723  340A               	retlw	10
   800  0724  340C               	retlw	12
   801  0725  3408               	retlw	8
   802  0726                     __end_of_arrowr_vacio:	
   803  0726                     _arrowr:	
   804  0726  3400               	retlw	0
   805  0727  3408               	retlw	8
   806  0728  340C               	retlw	12
   807  0729  340E               	retlw	14
   808  072A  340F               	retlw	15
   809  072B  340E               	retlw	14
   810  072C  340C               	retlw	12
   811  072D  3408               	retlw	8
   812  072E                     __end_of_arrowr:	
   813  0019                     _TXREG	set	25
   814  001A                     _RCREG	set	26
   815  0018                     _RCSTAbits	set	24
   816  0008                     _PORTD	set	8
   817  0005                     _PORTAbits	set	5
   818  0013                     _SSPBUF	set	19
   819  0014                     _SSPCON	set	20
   820  0006                     _PORTBbits	set	6
   821  001F                     _ADCON0bits	set	31
   822  001E                     _ADRESH	set	30
   823  000C                     _PIR1bits	set	12
   824  0005                     _PORTA	set	5
   825  000B                     _INTCONbits	set	11
   826  0063                     _SSPIF	set	99
   827  005E                     _PEIE	set	94
   828  005F                     _GIE	set	95
   829  009A                     _SPBRGH	set	154
   830  0099                     _SPBRG	set	153
   831  0098                     _TXSTAbits	set	152
   832  0091                     _SSPCON2bits	set	145
   833  0087                     _TRISCbits	set	135
   834  0094                     _SSPSTAT	set	148
   835  0093                     _SSPADD	set	147
   836  0091                     _SSPCON2	set	145
   837  008F                     _OSCCONbits	set	143
   838  009F                     _ADCON1bits	set	159
   839  0089                     _TRISE	set	137
   840  0085                     _TRISA	set	133
   841  0088                     _TRISD	set	136
   842  0096                     _IOCB	set	150
   843  0081                     _OPTION_REGbits	set	129
   844  0095                     _WPUB	set	149
   845  0086                     _TRISB	set	134
   846  0463                     _SSPIE	set	1123
   847  043C                     _TRISC4	set	1084
   848  043B                     _TRISC3	set	1083
   849  0187                     _BAUDCTLbits	set	391
   850  0188                     _ANSEL	set	392
   851  0189                     _ANSELH	set	393
   852  072E                     STR_2:	
   853  072E  3441               	retlw	65	;'A'
   854  072F  346D               	retlw	109	;'m'
   855  0730  3462               	retlw	98	;'b'
   856  0731  3469               	retlw	105	;'i'
   857  0732  3465               	retlw	101	;'e'
   858  0733  346E               	retlw	110	;'n'
   859  0734  3474               	retlw	116	;'t'
   860  0735  3465               	retlw	101	;'e'
   861  0736  343A               	retlw	58	;':'
   862  0737  3420               	retlw	32	;' '
   863  0738  3453               	retlw	83	;'S'
   864  0739  3475               	retlw	117	;'u'
   865  073A  3465               	retlw	101	;'e'
   866  073B  346C               	retlw	108	;'l'
   867  073C  346F               	retlw	111	;'o'
   868  073D  343A               	retlw	58	;':'
   869  073E  3400               	retlw	0
   870  073F                     STR_16:	
   871  073F  3456               	retlw	86	;'V'
   872  0740  3461               	retlw	97	;'a'
   873  0741  346D               	retlw	109	;'m'
   874  0742  346F               	retlw	111	;'o'
   875  0743  346E               	retlw	110	;'n'
   876  0744  346F               	retlw	111	;'o'
   877  0745  3473               	retlw	115	;'s'
   878  0746  3420               	retlw	32	;' '
   879  0747  3450               	retlw	80	;'P'
   880  0748  3465               	retlw	101	;'e'
   881  0749  3472               	retlw	114	;'r'
   882  074A  3472               	retlw	114	;'r'
   883  074B  346F               	retlw	111	;'o'
   884  074C  3473               	retlw	115	;'s'
   885  074D  3421               	retlw	33	;'!'
   886  074E  3400               	retlw	0
   887  074F                     STR_6:	
   888  074F  3445               	retlw	69	;'E'
   889  0750  344D               	retlw	77	;'M'
   890  0751  3445               	retlw	69	;'E'
   891  0752  3452               	retlw	82	;'R'
   892  0753  3447               	retlw	71	;'G'
   893  0754  3445               	retlw	69	;'E'
   894  0755  344E               	retlw	78	;'N'
   895  0756  3443               	retlw	67	;'C'
   896  0757  3449               	retlw	73	;'I'
   897  0758  3441               	retlw	65	;'A'
   898  0759  3421               	retlw	33	;'!'
   899  075A  3420               	retlw	32	;' '
   900  075B  3420               	retlw	32	;' '
   901  075C  3400               	retlw	0
   902  075D                     STR_9:	
   903  075D  3473               	retlw	115	;'s'
   904  075E  343A               	retlw	58	;':'
   905  075F  3420               	retlw	32	;' '
   906  0760  347C               	retlw	124	;'|'
   907  0761  3420               	retlw	32	;' '
   908  0762  3446               	retlw	70	;'F'
   909  0763  3472               	retlw	114	;'r'
   910  0764  3465               	retlw	101	;'e'
   911  0765  346E               	retlw	110	;'n'
   912  0766  3474               	retlw	116	;'t'
   913  0767  3465               	retlw	101	;'e'
   914  0768  343A               	retlw	58	;':'
   915  0769  3400               	retlw	0
   916  076A                     STR_3:	
   917  076A  3449               	retlw	73	;'I'
   918  076B  346E               	retlw	110	;'n'
   919  076C  3463               	retlw	99	;'c'
   920  076D  346C               	retlw	108	;'l'
   921  076E  3469               	retlw	105	;'i'
   922  076F  346E               	retlw	110	;'n'
   923  0770  3461               	retlw	97	;'a'
   924  0771  3463               	retlw	99	;'c'
   925  0772  3469               	retlw	105	;'i'
   926  0773  346F               	retlw	111	;'o'
   927  0774  346E               	retlw	110	;'n'
   928  0775  343A               	retlw	58	;':'
   929  0776  3400               	retlw	0
   930  0777                     STR_14:	
   931  0777  3454               	retlw	84	;'T'
   932  0778  346F               	retlw	111	;'o'
   933  0779  346D               	retlw	109	;'m'
   934  077A  3461               	retlw	97	;'a'
   935  077B  3472               	retlw	114	;'r'
   936  077C  3420               	retlw	32	;' '
   937  077D  3464               	retlw	100	;'d'
   938  077E  3461               	retlw	97	;'a'
   939  077F  3474               	retlw	116	;'t'
   940  0780  346F               	retlw	111	;'o'
   941  0781  3473               	retlw	115	;'s'
   942  0782  343A               	retlw	58	;':'
   943  0783  3400               	retlw	0
   944  0784                     STR_5:	
   945  0784  3450               	retlw	80	;'P'
   946  0785  3465               	retlw	101	;'e'
   947  0786  346C               	retlw	108	;'l'
   948  0787  3469               	retlw	105	;'i'
   949  0788  3467               	retlw	103	;'g'
   950  0789  3472               	retlw	114	;'r'
   951  078A  346F               	retlw	111	;'o'
   952  078B  3421               	retlw	33	;'!'
   953  078C  3420               	retlw	32	;' '
   954  078D  3420               	retlw	32	;' '
   955  078E  3420               	retlw	32	;' '
   956  078F  3400               	retlw	0
   957  0790                     STR_4:	
   958  0790  3445               	retlw	69	;'E'
   959  0791  3473               	retlw	115	;'s'
   960  0792  3474               	retlw	116	;'t'
   961  0793  3461               	retlw	97	;'a'
   962  0794  3462               	retlw	98	;'b'
   963  0795  346C               	retlw	108	;'l'
   964  0796  3465               	retlw	101	;'e'
   965  0797  3420               	retlw	32	;' '
   966  0798  3420               	retlw	32	;' '
   967  0799  3420               	retlw	32	;' '
   968  079A  3400               	retlw	0
   969  079B                     STR_7:	
   970  079B  3448               	retlw	72	;'H'
   971  079C  3475               	retlw	117	;'u'
   972  079D  346D               	retlw	109	;'m'
   973  079E  3465               	retlw	101	;'e'
   974  079F  3464               	retlw	100	;'d'
   975  07A0  3461               	retlw	97	;'a'
   976  07A1  3464               	retlw	100	;'d'
   977  07A2  343A               	retlw	58	;':'
   978  07A3  3400               	retlw	0
   979  07A4                     STR_17:	
   980  07A4  3445               	retlw	69	;'E'
   981  07A5  3452               	retlw	82	;'R'
   982  07A6  3452               	retlw	82	;'R'
   983  07A7  344F               	retlw	79	;'O'
   984  07A8  3452               	retlw	82	;'R'
   985  07A9  3400               	retlw	0
   986  07AA                     STR_11:	
   987  07AA  342D               	retlw	45	;'-'
   988  07AB  342D               	retlw	45	;'-'
   989  07AC  342D               	retlw	45	;'-'
   990  07AD  342D               	retlw	45	;'-'
   991  07AE  3400               	retlw	0
   992  07AF                     STR_8:	
   993  07AF  3441               	retlw	65	;'A'
   994  07B0  3474               	retlw	116	;'t'
   995  07B1  3472               	retlw	114	;'r'
   996  07B2  3400               	retlw	0
   997  07B3                     STR_15:	
   998  07B3  3478               	retlw	120	;'x'
   999  07B4  3420               	retlw	32	;' '
  1000  07B5  3400               	retlw	0
  1001  07B6                     STR_1:	
  1002  07B6  3432               	retlw	50	;'2'
  1003  07B7  3430               	retlw	48	;'0'
  1004  07B8  3400               	retlw	0
  1005  07B9                     STR_10:	
  1006  07B9  3463               	retlw	99	;'c'
  1007  07BA  346D               	retlw	109	;'m'
  1008  07BB  3400               	retlw	0
  1009  07AA                     
  1010                           ; #config settings
  1011  0000                     
  1012                           	psect	cinit
  1013  000F                     start_initialization:	
  1014  000F                     __initialization:	
  1015                           
  1016                           ; Initialize objects allocated to BANK0
  1017  000F  1383               	bcf	3,7	;select IRP bank0
  1018  0010  305F               	movlw	low (__pdataBANK0+10)
  1019  0011  00FD               	movwf	btemp+-1
  1020  0012  3007               	movlw	high __pidataBANK0
  1021  0013  00FE               	movwf	btemp
  1022  0014  30F2               	movlw	low __pidataBANK0
  1023  0015  00FF               	movwf	btemp+1
  1024  0016  3055               	movlw	low __pdataBANK0
  1025  0017  0084               	movwf	4
  1026  0018  120A  158A  2041  120A  118A  	fcall	init_ram0
  1027                           
  1028                           ; Clear objects allocated to BANK0
  1029  001D  3043               	movlw	low __pbssBANK0
  1030  001E  0084               	movwf	4
  1031  001F  3055               	movlw	low (__pbssBANK0+18)
  1032  0020  120A  118A  26F8   	fcall	clear_ram0
  1033                           
  1034                           ; Clear objects allocated to COMMON
  1035  0023  01FA               	clrf	__pbssCOMMON& (0+127)
  1036  0024  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1037  0025                     end_of_initialization:	
  1038                           ;End of C runtime variable initialization code
  1039                           
  1040  0025                     __end_of__initialization:	
  1041  0025  0183               	clrf	3
  1042  0026  120A  158A  2D66   	ljmp	_main	;jump to C main() function
  1043                           
  1044                           	psect	bssCOMMON
  1045  007A                     __pbssCOMMON:	
  1046  007A                     _banderaPUSH1:	
  1047  007A                     	ds	1
  1048  007B                     _banderaBoton:	
  1049  007B                     	ds	1
  1050                           
  1051                           	psect	bssBANK0
  1052  0043                     __pbssBANK0:	
  1053  0043                     uint_to_array@F1343:	
  1054  0043                     	ds	6
  1055  0049                     _accZ:	
  1056  0049                     	ds	2
  1057  004B                     _sprintbuffer:	
  1058  004B                     	ds	1
  1059  004C                     _ancho:	
  1060  004C                     	ds	1
  1061  004D                     _largo:	
  1062  004D                     	ds	1
  1063  004E                     _banderaPUSH2:	
  1064  004E                     	ds	1
  1065  004F                     _obj_array:	
  1066  004F                     	ds	1
  1067  0050                     _temperatura_obj:	
  1068  0050                     	ds	1
  1069  0051                     _temperatura:	
  1070  0051                     	ds	1
  1071  0052                     _velocidad:	
  1072  0052                     	ds	1
  1073  0053                     _seg:	
  1074  0053                     	ds	1
  1075  0054                     _estado:	
  1076  0054                     	ds	1
  1077                           
  1078                           	psect	dataBANK0
  1079  0055                     __pdataBANK0:	
  1080  0055                     _d_atras:	
  1081  0055                     	ds	1
  1082  0056                     _d_frente:	
  1083  0056                     	ds	1
  1084  0057                     _inclinacion:	
  1085  0057                     	ds	1
  1086  0058                     _humedad:	
  1087  0058                     	ds	1
  1088  0059                     _jahr:	
  1089  0059                     	ds	1
  1090  005A                     _mes:	
  1091  005A                     	ds	1
  1092  005B                     _datum:	
  1093  005B                     	ds	1
  1094  005C                     _dia:	
  1095  005C                     	ds	1
  1096  005D                     _hora:	
  1097  005D                     	ds	1
  1098  005E                     _min:	
  1099  005E                     	ds	1
  1100                           
  1101                           	psect	inittext
  1102  083D                     init_fetch0:	
  1103                           ;	Called with low address in FSR and high address in W
  1104                           
  1105  083D  087E               	movf	126,w
  1106  083E  008A               	movwf	10
  1107  083F  087F               	movf	127,w
  1108  0840  0082               	movwf	2
  1109  0841                     init_ram0:	
  1110                           ;Called with:
  1111                           ;	high address of idata address in btemp 
  1112                           ;	low address of idata address in btemp+1 
  1113                           ;	low address of data in FSR
  1114                           ;	high address + 1 of data in btemp-1
  1115                           
  1116  0841  203D  120A  158A   	fcall	init_fetch0
  1117  0844  0080               	movwf	0
  1118  0845  0A84               	incf	4,f
  1119  0846  0804               	movf	4,w
  1120  0847  067D               	xorwf	125,w
  1121  0848  1903               	btfsc	3,2
  1122  0849  3400               	retlw	0
  1123  084A  0AFF               	incf	127,f
  1124  084B  1903               	btfsc	3,2
  1125  084C  0AFE               	incf	126,f
  1126  084D  2841               	goto	init_ram0
  1127                           
  1128                           	psect	clrtext
  1129  06F8                     clear_ram0:	
  1130                           ;	Called with FSR containing the base address, and
  1131                           ;	W with the last address+1
  1132                           
  1133  06F8  0064               	clrwdt	;clear the watchdog before getting into this loop
  1134  06F9                     clrloop0:	
  1135  06F9  0180               	clrf	0	;clear RAM location pointed to by FSR
  1136  06FA  0A84               	incf	4,f	;increment pointer
  1137  06FB  0604               	xorwf	4,w	;XOR with final address
  1138  06FC  1903               	btfsc	3,2	;have we reached the end yet?
  1139  06FD  3400               	retlw	0	;all done for this memory range, return
  1140  06FE  0604               	xorwf	4,w	;XOR again to restore value
  1141  06FF  2EF9               	goto	clrloop0	;do the next byte
  1142                           
  1143                           	psect	cstackCOMMON
  1144  0070                     __pcstackCOMMON:	
  1145  0070                     ?_SetUp:	
  1146  0070                     ?_uartTX_Write:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ?_get_Time:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ?_get_temperatura:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ?_get_temperatura_obj:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ?_inclinacion_:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_mostrarLCD:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ?_pressBoton1:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_pressBoton2:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ?_LCD_init:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_LCD_clear:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ?_Zeit_Datum_Set:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_init_ADC:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ?_LCD_Write_Character:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_LCD_Write_String:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ?_uint_to_array:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?_I2C_Master_Start:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ?_I2C_Master_Stop:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ?_ISR:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ??_ISR:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_main:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_BCD_a_DEC:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_DEC_a_BCD:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_I2C_Master_Wait:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ?_LCD_Cmd:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218                           
  1219                           ; 1 bytes @ 0x0
  1220  0070                     	ds	2
  1221  0072                     ??_uartTX_Write:	
  1222  0072                     ?_OSC_config:	
  1223                           ; 1 bytes @ 0x2
  1224                           
  1225  0072                     ?_uart_init:	
  1226                           ; 1 bytes @ 0x2
  1227                           
  1228  0072                     ??_init_ADC:	
  1229                           ; 1 bytes @ 0x2
  1230                           
  1231  0072                     ??_LCD_Write_Character:	
  1232                           ; 1 bytes @ 0x2
  1233                           
  1234  0072                     ??_I2C_Master_Start:	
  1235                           ; 1 bytes @ 0x2
  1236                           
  1237  0072                     ??_I2C_Master_Stop:	
  1238                           ; 1 bytes @ 0x2
  1239                           
  1240  0072                     ??_I2C_Master_Wait:	
  1241                           ; 1 bytes @ 0x2
  1242                           
  1243  0072                     ??_LCD_Cmd:	
  1244                           ; 1 bytes @ 0x2
  1245                           
  1246  0072                     ?___bmul:	
  1247                           ; 1 bytes @ 0x2
  1248                           
  1249  0072                     ?_I2C_Master_Read:	
  1250                           ; 1 bytes @ 0x2
  1251                           
  1252  0072                     ?___wmul:	
  1253                           ; 2 bytes @ 0x2
  1254                           
  1255  0072                     ?___awmod:	
  1256                           ; 2 bytes @ 0x2
  1257                           
  1258  0072                     ?___lldiv:	
  1259                           ; 2 bytes @ 0x2
  1260                           
  1261  0072                     uartTX_Write@dato:	
  1262                           ; 4 bytes @ 0x2
  1263                           
  1264  0072                     ___bmul@multiplicand:	
  1265                           ; 1 bytes @ 0x2
  1266                           
  1267  0072                     I2C_Master_Read@a:	
  1268                           ; 1 bytes @ 0x2
  1269                           
  1270  0072                     ___wmul@multiplier:	
  1271                           ; 2 bytes @ 0x2
  1272                           
  1273  0072                     ___awmod@divisor:	
  1274                           ; 2 bytes @ 0x2
  1275                           
  1276  0072                     OSC_config@frecuencia:	
  1277                           ; 2 bytes @ 0x2
  1278                           
  1279  0072                     ___lldiv@divisor:	
  1280                           ; 4 bytes @ 0x2
  1281                           
  1282                           
  1283                           ; 4 bytes @ 0x2
  1284  0072                     	ds	1
  1285  0073                     ??___bmul:	
  1286  0073                     LCD_Write_Character@caracter:	
  1287                           ; 1 bytes @ 0x3
  1288                           
  1289                           
  1290                           ; 1 bytes @ 0x3
  1291  0073                     	ds	1
  1292  0074                     ??_uart_init:	
  1293  0074                     ??_LCD_Write_String:	
  1294                           ; 1 bytes @ 0x4
  1295                           
  1296  0074                     ??_I2C_Master_Read:	
  1297                           ; 1 bytes @ 0x4
  1298                           
  1299  0074                     init_ADC@channel:	
  1300                           ; 1 bytes @ 0x4
  1301                           
  1302  0074                     LCD_Cmd@comando:	
  1303                           ; 1 bytes @ 0x4
  1304                           
  1305  0074                     ___bmul@product:	
  1306                           ; 1 bytes @ 0x4
  1307                           
  1308  0074                     LCD_Write_String@n:	
  1309                           ; 1 bytes @ 0x4
  1310                           
  1311  0074                     ___wmul@multiplicand:	
  1312                           ; 2 bytes @ 0x4
  1313                           
  1314  0074                     ___awmod@dividend:	
  1315                           ; 2 bytes @ 0x4
  1316                           
  1317                           
  1318                           ; 2 bytes @ 0x4
  1319  0074                     	ds	1
  1320  0075                     ??_get_temperatura:	
  1321  0075                     ??_get_temperatura_obj:	
  1322                           ; 1 bytes @ 0x5
  1323                           
  1324  0075                     ??_inclinacion_:	
  1325                           ; 1 bytes @ 0x5
  1326                           
  1327  0075                     ??_LCD_init:	
  1328                           ; 1 bytes @ 0x5
  1329                           
  1330  0075                     ?_LCD_Create_Char:	
  1331                           ; 1 bytes @ 0x5
  1332                           
  1333  0075                     ??_LCD_clear:	
  1334                           ; 1 bytes @ 0x5
  1335                           
  1336  0075                     ?_LCD_Set_Cursor:	
  1337                           ; 1 bytes @ 0x5
  1338                           
  1339  0075                     LCD_Set_Cursor@columna:	
  1340                           ; 1 bytes @ 0x5
  1341                           
  1342  0075                     LCD_Create_Char@chardata:	
  1343                           ; 1 bytes @ 0x5
  1344                           
  1345  0075                     ___bmul@multiplier:	
  1346                           ; 1 bytes @ 0x5
  1347                           
  1348                           
  1349                           ; 1 bytes @ 0x5
  1350  0075                     	ds	1
  1351  0076                     ??_OSC_config:	
  1352  0076                     ??_LCD_Create_Char:	
  1353                           ; 1 bytes @ 0x6
  1354                           
  1355  0076                     ??_LCD_Set_Cursor:	
  1356                           ; 1 bytes @ 0x6
  1357                           
  1358  0076                     ??_BCD_a_DEC:	
  1359                           ; 1 bytes @ 0x6
  1360                           
  1361  0076                     ??___wmul:	
  1362                           ; 1 bytes @ 0x6
  1363                           
  1364  0076                     ??___awmod:	
  1365                           ; 1 bytes @ 0x6
  1366                           
  1367  0076                     LCD_Write_String@a:	
  1368                           ; 1 bytes @ 0x6
  1369                           
  1370  0076                     I2C_Master_Read@temp:	
  1371                           ; 1 bytes @ 0x6
  1372                           
  1373  0076                     ___wmul@product:	
  1374                           ; 2 bytes @ 0x6
  1375                           
  1376  0076                     ___lldiv@dividend:	
  1377                           ; 2 bytes @ 0x6
  1378                           
  1379                           
  1380                           ; 4 bytes @ 0x6
  1381  0076                     	ds	1
  1382  0077                     ??_pressBoton1:	
  1383  0077                     LCD_Create_Char@charnum:	
  1384                           ; 1 bytes @ 0x7
  1385                           
  1386  0077                     ___awmod@counter:	
  1387                           ; 1 bytes @ 0x7
  1388                           
  1389                           
  1390                           ; 1 bytes @ 0x7
  1391  0077                     	ds	1
  1392  0078                     ??___awdiv:	
  1393  0078                     LCD_Set_Cursor@linea:	
  1394                           ; 1 bytes @ 0x8
  1395                           
  1396  0078                     LCD_Create_Char@n:	
  1397                           ; 1 bytes @ 0x8
  1398                           
  1399  0078                     ___awmod@sign:	
  1400                           ; 1 bytes @ 0x8
  1401                           
  1402                           
  1403                           ; 1 bytes @ 0x8
  1404  0078                     	ds	1
  1405  0079                     BCD_a_DEC@numBCD:	
  1406  0079                     DEC_a_BCD@numDEC:	
  1407                           ; 1 bytes @ 0x9
  1408                           
  1409  0079                     LCD_Set_Cursor@corrimiento:	
  1410                           ; 1 bytes @ 0x9
  1411                           
  1412                           
  1413                           ; 1 bytes @ 0x9
  1414  0079                     	ds	1
  1415  007A                     ??_I2C_Master_Write:	
  1416                           
  1417                           	psect	cstackBANK0
  1418  0020                     __pcstackBANK0:	
  1419                           ; 1 bytes @ 0xA
  1420                           
  1421  0020                     ??_pressBoton2:	
  1422  0020                     ??___lldiv:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425  0020                     ?___awdiv:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428  0020                     ___awdiv@divisor:	
  1429                           ; 2 bytes @ 0x0
  1430                           
  1431                           
  1432                           ; 2 bytes @ 0x0
  1433  0020                     	ds	1
  1434  0021                     ___lldiv@quotient:	
  1435                           
  1436                           ; 4 bytes @ 0x1
  1437  0021                     	ds	1
  1438  0022                     ___awdiv@dividend:	
  1439                           
  1440                           ; 2 bytes @ 0x2
  1441  0022                     	ds	2
  1442  0024                     ___awdiv@counter:	
  1443                           
  1444                           ; 1 bytes @ 0x4
  1445  0024                     	ds	1
  1446  0025                     ___lldiv@counter:	
  1447  0025                     ___awdiv@sign:	
  1448                           ; 1 bytes @ 0x5
  1449                           
  1450                           
  1451                           ; 1 bytes @ 0x5
  1452  0025                     	ds	1
  1453  0026                     ?_I2C_Master_Init:	
  1454  0026                     ___awdiv@quotient:	
  1455                           ; 1 bytes @ 0x6
  1456                           
  1457  0026                     I2C_Master_Init@c:	
  1458                           ; 2 bytes @ 0x6
  1459                           
  1460                           
  1461                           ; 4 bytes @ 0x6
  1462  0026                     	ds	2
  1463  0028                     ??_uint_to_array:	
  1464  0028                     ?_display_Uhrzeit:	
  1465                           ; 1 bytes @ 0x8
  1466                           
  1467  0028                     ?_display_Datum:	
  1468                           ; 1 bytes @ 0x8
  1469                           
  1470  0028                     ??_DEC_a_BCD:	
  1471                           ; 1 bytes @ 0x8
  1472                           
  1473  0028                     display_Uhrzeit@columna:	
  1474                           ; 1 bytes @ 0x8
  1475                           
  1476  0028                     display_Datum@columna:	
  1477                           ; 1 bytes @ 0x8
  1478                           
  1479                           
  1480                           ; 1 bytes @ 0x8
  1481  0028                     	ds	1
  1482  0029                     ??_display_Uhrzeit:	
  1483  0029                     ??_display_Datum:	
  1484                           ; 1 bytes @ 0x9
  1485                           
  1486                           
  1487                           ; 1 bytes @ 0x9
  1488  0029                     	ds	1
  1489  002A                     ??_I2C_Master_Init:	
  1490                           
  1491                           ; 1 bytes @ 0xA
  1492  002A                     	ds	2
  1493  002C                     display_Uhrzeit@fila:	
  1494  002C                     display_Datum@fila:	
  1495                           ; 1 bytes @ 0xC
  1496                           
  1497                           
  1498                           ; 1 bytes @ 0xC
  1499  002C                     	ds	1
  1500  002D                     ?_I2C_Master_Write:	
  1501  002D                     display_Uhrzeit@seg_u:	
  1502                           ; 1 bytes @ 0xD
  1503                           
  1504  002D                     display_Datum@dia_u:	
  1505                           ; 1 bytes @ 0xD
  1506                           
  1507  002D                     I2C_Master_Write@d:	
  1508                           ; 1 bytes @ 0xD
  1509                           
  1510                           
  1511                           ; 2 bytes @ 0xD
  1512  002D                     	ds	1
  1513  002E                     display_Uhrzeit@seg_d:	
  1514  002E                     display_Datum@dia_d:	
  1515                           ; 1 bytes @ 0xE
  1516                           
  1517  002E                     uint_to_array@decenas:	
  1518                           ; 1 bytes @ 0xE
  1519                           
  1520                           
  1521                           ; 1 bytes @ 0xE
  1522  002E                     	ds	1
  1523  002F                     ??_get_Time:	
  1524  002F                     ??_Zeit_Datum_Set:	
  1525                           ; 1 bytes @ 0xF
  1526                           
  1527  002F                     display_Uhrzeit@min_u:	
  1528                           ; 1 bytes @ 0xF
  1529                           
  1530  002F                     display_Datum@mes_u:	
  1531                           ; 1 bytes @ 0xF
  1532                           
  1533  002F                     uint_to_array@centenas:	
  1534                           ; 1 bytes @ 0xF
  1535                           
  1536                           
  1537                           ; 1 bytes @ 0xF
  1538  002F                     	ds	1
  1539  0030                     display_Uhrzeit@min_d:	
  1540  0030                     display_Datum@mes_d:	
  1541                           ; 1 bytes @ 0x10
  1542                           
  1543  0030                     uint_to_array@resultado:	
  1544                           ; 1 bytes @ 0x10
  1545                           
  1546                           
  1547                           ; 6 bytes @ 0x10
  1548  0030                     	ds	1
  1549  0031                     ??_SetUp:	
  1550  0031                     display_Uhrzeit@Uhr_u:	
  1551                           ; 1 bytes @ 0x11
  1552                           
  1553  0031                     display_Datum@jahr_u:	
  1554                           ; 1 bytes @ 0x11
  1555                           
  1556                           
  1557                           ; 1 bytes @ 0x11
  1558  0031                     	ds	1
  1559  0032                     display_Uhrzeit@Uhr_d:	
  1560  0032                     display_Datum@jahr_d:	
  1561                           ; 1 bytes @ 0x12
  1562                           
  1563                           
  1564                           ; 1 bytes @ 0x12
  1565  0032                     	ds	4
  1566  0036                     uint_to_array@numero:	
  1567                           
  1568                           ; 1 bytes @ 0x16
  1569  0036                     	ds	1
  1570  0037                     ??_mostrarLCD:	
  1571                           
  1572                           ; 1 bytes @ 0x17
  1573  0037                     	ds	3
  1574  003A                     mostrarLCD@pantalla:	
  1575                           
  1576                           ; 1 bytes @ 0x1A
  1577  003A                     	ds	7
  1578  0041                     ??_main:	
  1579                           
  1580                           ; 1 bytes @ 0x21
  1581  0041                     	ds	2
  1582                           
  1583                           	psect	maintext
  1584  0D66                     __pmaintext:	
  1585 ;;
  1586 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1587 ;;
  1588 ;; *************** function _main *****************
  1589 ;; Defined at:
  1590 ;;		line 144 in file "main_Master.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;		None
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;		None
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  1    wreg      void 
  1597 ;; Registers used:
  1598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : B00/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1604 ;;      Params:         0       0       0       0       0
  1605 ;;      Locals:         0       0       0       0       0
  1606 ;;      Temps:          0       2       0       0       0
  1607 ;;      Totals:         0       2       0       0       0
  1608 ;;Total ram usage:        2 bytes
  1609 ;; Hardware stack levels required when called:    5
  1610 ;; This function calls:
  1611 ;;		_SetUp
  1612 ;;		_get_Time
  1613 ;;		_get_temperatura
  1614 ;;		_get_temperatura_obj
  1615 ;;		_inclinacion_
  1616 ;;		_mostrarLCD
  1617 ;;		_pressBoton1
  1618 ;;		_pressBoton2
  1619 ;;		_uartTX_Write
  1620 ;; This function is called by:
  1621 ;;		Startup code after reset
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           
  1626                           ;psect for function _main
  1627  0D66                     _main:	
  1628                           
  1629                           ;main_Master.c: 145:     SetUp();
  1630                           
  1631                           ;incstack = 0
  1632                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1633  0D66  120A  158A  24D7  120A  158A  	fcall	_SetUp
  1634  0D6B                     l4530:	
  1635                           
  1636                           ;main_Master.c: 148:         uartTX_Write(125);
  1637  0D6B  307D               	movlw	125
  1638  0D6C  160A  118A  27F8  120A  158A  	fcall	_uartTX_Write
  1639                           
  1640                           ;main_Master.c: 149:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1641  0D71  300D               	movlw	13
  1642  0D72  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0D73  1303               	bcf	3,6	;RP1=0, select bank0
  1644  0D74  00C2               	movwf	??_main+1
  1645  0D75  30FB               	movlw	251
  1646  0D76  00C1               	movwf	??_main
  1647  0D77                     u1887:	
  1648  0D77  0BC1               	decfsz	??_main,f
  1649  0D78  2D77               	goto	u1887
  1650  0D79  0BC2               	decfsz	??_main+1,f
  1651  0D7A  2D77               	goto	u1887
  1652                           
  1653                           ;main_Master.c: 150:         get_Time();
  1654  0D7B  120A  118A  2358  120A  158A  	fcall	_get_Time
  1655                           
  1656                           ;main_Master.c: 151:         uartTX_Write(hora);
  1657  0D80  1283               	bcf	3,5	;RP0=0, select bank0
  1658  0D81  1303               	bcf	3,6	;RP1=0, select bank0
  1659  0D82  085D               	movf	_hora,w
  1660  0D83  160A  118A  27F8  120A  158A  	fcall	_uartTX_Write
  1661                           
  1662                           ;main_Master.c: 152:         _delay((unsigned long)((50)*(4000000/4000.0)));
  1663  0D88  3041               	movlw	65
  1664  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  1665  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  1666  0D8B  00C2               	movwf	??_main+1
  1667  0D8C  30ED               	movlw	237
  1668  0D8D  00C1               	movwf	??_main
  1669  0D8E                     u1897:	
  1670  0D8E  0BC1               	decfsz	??_main,f
  1671  0D8F  2D8E               	goto	u1897
  1672  0D90  0BC2               	decfsz	??_main+1,f
  1673  0D91  2D8E               	goto	u1897
  1674  0D92  2D93               	nop2
  1675                           
  1676                           ;main_Master.c: 153:         uartTX_Write(min);
  1677  0D93  1283               	bcf	3,5	;RP0=0, select bank0
  1678  0D94  1303               	bcf	3,6	;RP1=0, select bank0
  1679  0D95  085E               	movf	_min,w
  1680  0D96  160A  118A  27F8  120A  158A  	fcall	_uartTX_Write
  1681                           
  1682                           ;main_Master.c: 154:         _delay((unsigned long)((50)*(4000000/4000.0)));
  1683  0D9B  3041               	movlw	65
  1684  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  1685  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  1686  0D9E  00C2               	movwf	??_main+1
  1687  0D9F  30ED               	movlw	237
  1688  0DA0  00C1               	movwf	??_main
  1689  0DA1                     u1907:	
  1690  0DA1  0BC1               	decfsz	??_main,f
  1691  0DA2  2DA1               	goto	u1907
  1692  0DA3  0BC2               	decfsz	??_main+1,f
  1693  0DA4  2DA1               	goto	u1907
  1694  0DA5  2DA6               	nop2
  1695                           
  1696                           ;main_Master.c: 155:         uartTX_Write(seg);
  1697  0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  1698  0DA7  1303               	bcf	3,6	;RP1=0, select bank0
  1699  0DA8  0853               	movf	_seg,w
  1700  0DA9  160A  118A  27F8  120A  158A  	fcall	_uartTX_Write
  1701                           
  1702                           ;main_Master.c: 156:         get_temperatura();
  1703  0DAE  120A  158A  208F  120A  158A  	fcall	_get_temperatura
  1704                           
  1705                           ;main_Master.c: 157:         uartTX_Write(temperatura);
  1706  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  1707  0DB4  1303               	bcf	3,6	;RP1=0, select bank0
  1708  0DB5  0851               	movf	_temperatura,w
  1709  0DB6  160A  118A  27F8  120A  158A  	fcall	_uartTX_Write
  1710                           
  1711                           ;main_Master.c: 158:         get_temperatura_obj();
  1712  0DBB  120A  158A  20A6  120A  158A  	fcall	_get_temperatura_obj
  1713                           
  1714                           ;main_Master.c: 159:         uartTX_Write(temperatura_obj);
  1715  0DC0  1283               	bcf	3,5	;RP0=0, select bank0
  1716  0DC1  1303               	bcf	3,6	;RP1=0, select bank0
  1717  0DC2  0850               	movf	_temperatura_obj,w
  1718  0DC3  160A  118A  27F8  120A  158A  	fcall	_uartTX_Write
  1719                           
  1720                           ;main_Master.c: 160:         inclinacion_();
  1721  0DC8  120A  158A  20BD  120A  158A  	fcall	_inclinacion_
  1722                           
  1723                           ;main_Master.c: 161:         uartTX_Write(inclinacion);
  1724  0DCD  1283               	bcf	3,5	;RP0=0, select bank0
  1725  0DCE  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0DCF  0857               	movf	_inclinacion,w
  1727  0DD0  160A  118A  27F8  120A  158A  	fcall	_uartTX_Write
  1728                           
  1729                           ;main_Master.c: 168:         mostrarLCD(estado);
  1730  0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  1731  0DD6  1303               	bcf	3,6	;RP1=0, select bank0
  1732  0DD7  0854               	movf	_estado,w
  1733  0DD8  120A  118A  2029  120A  158A  	fcall	_mostrarLCD
  1734                           
  1735                           ;main_Master.c: 169:         pressBoton1();
  1736  0DDD  120A  158A  2367  120A  158A  	fcall	_pressBoton1
  1737                           
  1738                           ;main_Master.c: 170:         pressBoton2();
  1739  0DE2  120A  158A  25FA  120A  158A  	fcall	_pressBoton2
  1740                           
  1741                           ;main_Master.c: 173:         uartTX_Write(humedad);
  1742  0DE7  3005               	movlw	5
  1743  0DE8  160A  118A  27F8  120A  158A  	fcall	_uartTX_Write
  1744                           
  1745                           ;main_Master.c: 174:         uartTX_Write(d_frente);
  1746  0DED  3066               	movlw	102
  1747  0DEE  160A  118A  27F8  120A  158A  	fcall	_uartTX_Write
  1748                           
  1749                           ;main_Master.c: 175:         uartTX_Write(d_atras);
  1750  0DF3  3066               	movlw	102
  1751  0DF4  160A  118A  27F8  120A  158A  	fcall	_uartTX_Write
  1752  0DF9  2D6B               	goto	l4530
  1753  0DFA                     __end_of_main:	
  1754                           
  1755                           	psect	text1
  1756  17F8                     __ptext1:	
  1757 ;; *************** function _uartTX_Write *****************
  1758 ;; Defined at:
  1759 ;;		line 34 in file "UART.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  dato            1    wreg     unsigned char 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  dato            1    2[COMMON] unsigned char 
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  1    wreg      void 
  1766 ;; Registers used:
  1767 ;;		wreg
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1773 ;;      Params:         0       0       0       0       0
  1774 ;;      Locals:         1       0       0       0       0
  1775 ;;      Temps:          0       0       0       0       0
  1776 ;;      Totals:         1       0       0       0       0
  1777 ;;Total ram usage:        1 bytes
  1778 ;; Hardware stack levels used:    1
  1779 ;; Hardware stack levels required when called:    1
  1780 ;; This function calls:
  1781 ;;		Nothing
  1782 ;; This function is called by:
  1783 ;;		_main
  1784 ;;		_uartTX_Write_Str
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           
  1789                           ;psect for function _uartTX_Write
  1790  17F8                     _uartTX_Write:	
  1791                           
  1792                           ;incstack = 0
  1793                           ; Regs used in _uartTX_Write: [wreg]
  1794                           ;uartTX_Write@dato stored from wreg
  1795  17F8  00F2               	movwf	uartTX_Write@dato
  1796                           
  1797                           ;UART.c: 35:     TXREG = dato;
  1798  17F9  0872               	movf	uartTX_Write@dato,w
  1799  17FA  1283               	bcf	3,5	;RP0=0, select bank0
  1800  17FB  1303               	bcf	3,6	;RP1=0, select bank0
  1801  17FC  0099               	movwf	25	;volatile
  1802  17FD                     l488:	
  1803                           ;UART.c: 36:     while(PIR1bits.TXIF == 0);
  1804                           
  1805  17FD  1A0C               	btfsc	12,4	;volatile
  1806  17FE  0008               	return
  1807  17FF  2FFD               	goto	l488
  1808  1800                     __end_of_uartTX_Write:	
  1809                           
  1810                           	psect	text2
  1811  0DFA                     __ptext2:	
  1812 ;; *************** function _pressBoton2 *****************
  1813 ;; Defined at:
  1814 ;;		line 648 in file "main_Master.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;		None
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;		None
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  1    wreg      void 
  1821 ;; Registers used:
  1822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1828 ;;      Params:         0       0       0       0       0
  1829 ;;      Locals:         0       0       0       0       0
  1830 ;;      Temps:          0       2       0       0       0
  1831 ;;      Totals:         0       2       0       0       0
  1832 ;;Total ram usage:        2 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; Hardware stack levels required when called:    3
  1835 ;; This function calls:
  1836 ;;		_LCD_Set_Cursor
  1837 ;;		_LCD_Write_Character
  1838 ;;		_LCD_clear
  1839 ;; This function is called by:
  1840 ;;		_main
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           
  1845                           ;psect for function _pressBoton2
  1846  0DFA                     _pressBoton2:	
  1847                           
  1848                           ;main_Master.c: 649:     if (banderaBoton == 1){
  1849                           
  1850                           ;incstack = 0
  1851                           ; Regs used in _pressBoton2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1852  0DFA  037B               	decf	_banderaBoton,w
  1853  0DFB  1D03               	btfss	3,2
  1854  0DFC  2E8E               	goto	l4516
  1855                           
  1856                           ;main_Master.c: 650:         if (banderaPUSH2 == 0){
  1857  0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0DFF  084E               	movf	_banderaPUSH2,w
  1860  0E00  1D03               	btfss	3,2
  1861  0E01  2E8E               	goto	l4516
  1862                           
  1863                           ;main_Master.c: 651:             if (PORTBbits.RB2 == 0){
  1864  0E02  1D06               	btfss	6,2	;volatile
  1865  0E03  2E6F               	goto	l4508
  1866  0E04  2E88               	goto	l4510
  1867  0E05                     l4476:	
  1868                           
  1869                           ;main_Master.c: 654:                         estado = 6;
  1870  0E05  3006               	movlw	6
  1871  0E06  2E60               	goto	L5
  1872  0E07                     l4478:	
  1873                           ;main_Master.c: 655:                         break;
  1874                           
  1875                           
  1876                           ;main_Master.c: 657:                         LCD_Set_Cursor(2,0);
  1877  0E07  01F5               	clrf	LCD_Set_Cursor@columna
  1878  0E08  3002               	movlw	2
  1879  0E09  120A  158A  216F  120A  158A  	fcall	_LCD_Set_Cursor
  1880                           
  1881                           ;main_Master.c: 658:                         LCD_Write_Character(1);
  1882  0E0E  3001               	movlw	1
  1883  0E0F  120A  158A  200C  120A  158A  	fcall	_LCD_Write_Character
  1884                           
  1885                           ;main_Master.c: 659:                         _delay((unsigned long)((100)*(4000000/4000.
      +                          0)));
  1886  0E14  3082               	movlw	130
  1887  0E15  1283               	bcf	3,5	;RP0=0, select bank0
  1888  0E16  1303               	bcf	3,6	;RP1=0, select bank0
  1889  0E17  00A1               	movwf	??_pressBoton2+1
  1890  0E18  30DD               	movlw	221
  1891  0E19  00A0               	movwf	??_pressBoton2
  1892  0E1A                     u1917:	
  1893  0E1A  0BA0               	decfsz	??_pressBoton2,f
  1894  0E1B  2E1A               	goto	u1917
  1895  0E1C  0BA1               	decfsz	??_pressBoton2+1,f
  1896  0E1D  2E1A               	goto	u1917
  1897                           
  1898                           ;main_Master.c: 660:                         estado = 7;
  1899  0E1E  3007               	movlw	7
  1900  0E1F  2E5E               	goto	L6
  1901  0E20                     l4486:	
  1902                           ;main_Master.c: 661:                         break;
  1903                           
  1904                           
  1905                           ;main_Master.c: 663:                         LCD_Set_Cursor(2,7);
  1906  0E20  3007               	movlw	7
  1907  0E21  00A0               	movwf	??_pressBoton2
  1908  0E22  0820               	movf	??_pressBoton2,w
  1909  0E23  00F5               	movwf	LCD_Set_Cursor@columna
  1910  0E24  3002               	movlw	2
  1911  0E25  120A  158A  216F  120A  158A  	fcall	_LCD_Set_Cursor
  1912                           
  1913                           ;main_Master.c: 664:                         LCD_Write_Character(1);
  1914  0E2A  3001               	movlw	1
  1915  0E2B  120A  158A  200C  120A  158A  	fcall	_LCD_Write_Character
  1916                           
  1917                           ;main_Master.c: 665:                         _delay((unsigned long)((100)*(4000000/4000.
      +                          0)));
  1918  0E30  3082               	movlw	130
  1919  0E31  1283               	bcf	3,5	;RP0=0, select bank0
  1920  0E32  1303               	bcf	3,6	;RP1=0, select bank0
  1921  0E33  00A1               	movwf	??_pressBoton2+1
  1922  0E34  30DD               	movlw	221
  1923  0E35  00A0               	movwf	??_pressBoton2
  1924  0E36                     u1927:	
  1925  0E36  0BA0               	decfsz	??_pressBoton2,f
  1926  0E37  2E36               	goto	u1927
  1927  0E38  0BA1               	decfsz	??_pressBoton2+1,f
  1928  0E39  2E36               	goto	u1927
  1929                           
  1930                           ;main_Master.c: 666:                         estado = 8;
  1931  0E3A  3008               	movlw	8
  1932  0E3B  2E5E               	goto	L6
  1933  0E3C                     l4494:	
  1934                           ;main_Master.c: 667:                         break;
  1935                           
  1936                           
  1937                           ;main_Master.c: 669:                         LCD_Set_Cursor(2,10);
  1938  0E3C  300A               	movlw	10
  1939  0E3D  00A0               	movwf	??_pressBoton2
  1940  0E3E  0820               	movf	??_pressBoton2,w
  1941  0E3F  00F5               	movwf	LCD_Set_Cursor@columna
  1942  0E40  3002               	movlw	2
  1943  0E41  120A  158A  216F  120A  158A  	fcall	_LCD_Set_Cursor
  1944                           
  1945                           ;main_Master.c: 670:                         LCD_Write_Character(1);
  1946  0E46  3001               	movlw	1
  1947  0E47  120A  158A  200C  120A  158A  	fcall	_LCD_Write_Character
  1948                           
  1949                           ;main_Master.c: 671:                         _delay((unsigned long)((100)*(4000000/4000.
      +                          0)));
  1950  0E4C  3082               	movlw	130
  1951  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  1952  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  1953  0E4F  00A1               	movwf	??_pressBoton2+1
  1954  0E50  30DD               	movlw	221
  1955  0E51  00A0               	movwf	??_pressBoton2
  1956  0E52                     u1937:	
  1957  0E52  0BA0               	decfsz	??_pressBoton2,f
  1958  0E53  2E52               	goto	u1937
  1959  0E54  0BA1               	decfsz	??_pressBoton2+1,f
  1960  0E55  2E52               	goto	u1937
  1961                           
  1962                           ;main_Master.c: 672:                         estado = 9;
  1963  0E56  3009               	movlw	9
  1964  0E57  2E5E               	goto	L6
  1965  0E58                     l4502:	
  1966                           ;main_Master.c: 673:                         break;
  1967                           
  1968                           
  1969                           ;main_Master.c: 675:                         LCD_clear();
  1970  0E58  120A  158A  2063  120A  158A  	fcall	_LCD_clear
  1971                           
  1972                           ;main_Master.c: 676:                         estado = 10;
  1973  0E5D  300A               	movlw	10
  1974  0E5E                     L6:	
  1975  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  1976  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  1977  0E60                     L5:	
  1978  0E60  00A0               	movwf	??_pressBoton2
  1979  0E61  0820               	movf	??_pressBoton2,w
  1980  0E62  00D4               	movwf	_estado
  1981                           
  1982                           ;main_Master.c: 677:                         break;
  1983  0E63  2E88               	goto	l4510
  1984  0E64                     l4506:	
  1985                           
  1986                           ;main_Master.c: 679:                         _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  1987  0E64  300D               	movlw	13
  1988  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0E66  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0E67  00A1               	movwf	??_pressBoton2+1
  1991  0E68  30FB               	movlw	251
  1992  0E69  00A0               	movwf	??_pressBoton2
  1993  0E6A                     u1947:	
  1994  0E6A  0BA0               	decfsz	??_pressBoton2,f
  1995  0E6B  2E6A               	goto	u1947
  1996  0E6C  0BA1               	decfsz	??_pressBoton2+1,f
  1997  0E6D  2E6A               	goto	u1947
  1998                           
  1999                           ;main_Master.c: 680:                 }
  2000  0E6E  2E88               	goto	l4510
  2001  0E6F                     l4508:	
  2002  0E6F  0854               	movf	_estado,w
  2003  0E70  00A0               	movwf	??_pressBoton2
  2004  0E71  01A1               	clrf	??_pressBoton2+1
  2005                           
  2006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2007                           ; Switch size 1, requested type "simple"
  2008                           ; Number of cases is 1, Range of values is 0 to 0
  2009                           ; switch strategies available:
  2010                           ; Name         Instructions Cycles
  2011                           ; simple_byte            4     3 (average)
  2012                           ; direct_byte           11     8 (fixed)
  2013                           ; jumptable            260     6 (fixed)
  2014                           ;	Chosen strategy is simple_byte
  2015  0E72  0821               	movf	??_pressBoton2+1,w
  2016  0E73  3A00               	xorlw	0	; case 0
  2017  0E74  1903               	skipnz
  2018  0E75  2E77               	goto	l5020
  2019  0E76  2E64               	goto	l4506
  2020  0E77                     l5020:	
  2021                           
  2022                           ; Switch size 1, requested type "simple"
  2023                           ; Number of cases is 5, Range of values is 5 to 9
  2024                           ; switch strategies available:
  2025                           ; Name         Instructions Cycles
  2026                           ; simple_byte           16     9 (average)
  2027                           ; direct_byte           26    11 (fixed)
  2028                           ; jumptable            263     9 (fixed)
  2029                           ;	Chosen strategy is simple_byte
  2030  0E77  0820               	movf	??_pressBoton2,w
  2031  0E78  3A05               	xorlw	5	; case 5
  2032  0E79  1903               	skipnz
  2033  0E7A  2E05               	goto	l4476
  2034  0E7B  3A03               	xorlw	3	; case 6
  2035  0E7C  1903               	skipnz
  2036  0E7D  2E07               	goto	l4478
  2037  0E7E  3A01               	xorlw	1	; case 7
  2038  0E7F  1903               	skipnz
  2039  0E80  2E20               	goto	l4486
  2040  0E81  3A0F               	xorlw	15	; case 8
  2041  0E82  1903               	skipnz
  2042  0E83  2E3C               	goto	l4494
  2043  0E84  3A01               	xorlw	1	; case 9
  2044  0E85  1903               	skipnz
  2045  0E86  2E58               	goto	l4502
  2046  0E87  2E64               	goto	l4506
  2047  0E88                     l4510:	
  2048                           
  2049                           ;main_Master.c: 682:                 banderaBoton = 0;
  2050  0E88  01FB               	clrf	_banderaBoton
  2051                           
  2052                           ;main_Master.c: 683:                 banderaPUSH2 = 1;
  2053  0E89  1283               	bcf	3,5	;RP0=0, select bank0
  2054  0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  2055  0E8B  01CE               	clrf	_banderaPUSH2
  2056  0E8C  0ACE               	incf	_banderaPUSH2,f
  2057                           
  2058                           ;main_Master.c: 684:                 INTCONbits.RBIE = 1;
  2059  0E8D  158B               	bsf	11,3	;volatile
  2060  0E8E                     l4516:	
  2061                           
  2062                           ;main_Master.c: 687:     if (banderaPUSH2 == 1){
  2063  0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  2064  0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  2065  0E90  034E               	decf	_banderaPUSH2,w
  2066  0E91  1D03               	btfss	3,2
  2067  0E92  0008               	return
  2068                           
  2069                           ;main_Master.c: 688:         if (PORTBbits.RB2 == 1){
  2070  0E93  1D06               	btfss	6,2	;volatile
  2071  0E94  0008               	return
  2072                           
  2073                           ;main_Master.c: 689:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2074  0E95  300D               	movlw	13
  2075  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  2076  0E97  1303               	bcf	3,6	;RP1=0, select bank0
  2077  0E98  00A1               	movwf	??_pressBoton2+1
  2078  0E99  30FB               	movlw	251
  2079  0E9A  00A0               	movwf	??_pressBoton2
  2080  0E9B                     u1957:	
  2081  0E9B  0BA0               	decfsz	??_pressBoton2,f
  2082  0E9C  2E9B               	goto	u1957
  2083  0E9D  0BA1               	decfsz	??_pressBoton2+1,f
  2084  0E9E  2E9B               	goto	u1957
  2085                           
  2086                           ;main_Master.c: 690:         banderaPUSH2 = 0;
  2087  0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  2088  0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  2089  0EA1  01CE               	clrf	_banderaPUSH2
  2090  0EA2  0008               	return
  2091  0EA3                     __end_of_pressBoton2:	
  2092                           
  2093                           	psect	text3
  2094  0B67                     __ptext3:	
  2095 ;; *************** function _pressBoton1 *****************
  2096 ;; Defined at:
  2097 ;;		line 603 in file "main_Master.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2111 ;;      Params:         0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0
  2113 ;;      Temps:          2       0       0       0       0
  2114 ;;      Totals:         2       0       0       0       0
  2115 ;;Total ram usage:        2 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    3
  2118 ;; This function calls:
  2119 ;;		_LCD_clear
  2120 ;; This function is called by:
  2121 ;;		_main
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           
  2126                           ;psect for function _pressBoton1
  2127  0B67                     _pressBoton1:	
  2128                           
  2129                           ;main_Master.c: 604:     if (banderaBoton == 1){
  2130                           
  2131                           ;incstack = 0
  2132                           ; Regs used in _pressBoton1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2133  0B67  037B               	decf	_banderaBoton,w
  2134  0B68  1D03               	btfss	3,2
  2135  0B69  2BC4               	goto	l3366
  2136                           
  2137                           ;main_Master.c: 605:         if (banderaPUSH1 == 0){
  2138  0B6A  087A               	movf	_banderaPUSH1,w
  2139  0B6B  1D03               	btfss	3,2
  2140  0B6C  2BC4               	goto	l3366
  2141                           
  2142                           ;main_Master.c: 606:             if (PORTBbits.RB1 == 0){
  2143  0B6D  1283               	bcf	3,5	;RP0=0, select bank0
  2144  0B6E  1303               	bcf	3,6	;RP1=0, select bank0
  2145  0B6F  1C86               	btfss	6,1	;volatile
  2146  0B70  2BAD               	goto	l3358
  2147  0B71  2BC4               	goto	l3366
  2148  0B72                     l3330:	
  2149                           
  2150                           ;main_Master.c: 609:                         velocidad ++;
  2151  0B72  3001               	movlw	1
  2152  0B73  00F7               	movwf	??_pressBoton1
  2153  0B74  0877               	movf	??_pressBoton1,w
  2154  0B75  07D2               	addwf	_velocidad,f
  2155                           
  2156                           ;main_Master.c: 610:                         if (velocidad > 3){
  2157  0B76  3004               	movlw	4
  2158  0B77  0252               	subwf	_velocidad,w
  2159  0B78  1C03               	skipc
  2160  0B79  2BC0               	goto	l3360
  2161                           
  2162                           ;main_Master.c: 611:                             velocidad = 1;
  2163  0B7A  01D2               	clrf	_velocidad
  2164  0B7B  0AD2               	incf	_velocidad,f
  2165  0B7C  2BC0               	goto	l3360
  2166  0B7D                     l3336:	
  2167                           
  2168                           ;main_Master.c: 615:                         largo ++;
  2169  0B7D  3001               	movlw	1
  2170  0B7E  00F7               	movwf	??_pressBoton1
  2171  0B7F  0877               	movf	??_pressBoton1,w
  2172  0B80  07CD               	addwf	_largo,f
  2173                           
  2174                           ;main_Master.c: 616:                         if (largo > 8){
  2175  0B81  3009               	movlw	9
  2176  0B82  024D               	subwf	_largo,w
  2177  0B83  1C03               	skipc
  2178  0B84  2BC0               	goto	l3360
  2179                           
  2180                           ;main_Master.c: 617:                             largo = 1;
  2181  0B85  01CD               	clrf	_largo
  2182  0B86  0ACD               	incf	_largo,f
  2183  0B87  2BC0               	goto	l3360
  2184  0B88                     l3342:	
  2185                           
  2186                           ;main_Master.c: 621:                         ancho ++;
  2187  0B88  3001               	movlw	1
  2188  0B89  00F7               	movwf	??_pressBoton1
  2189  0B8A  0877               	movf	??_pressBoton1,w
  2190  0B8B  07CC               	addwf	_ancho,f
  2191                           
  2192                           ;main_Master.c: 622:                         if (ancho > 8){
  2193  0B8C  3009               	movlw	9
  2194  0B8D  024C               	subwf	_ancho,w
  2195  0B8E  1C03               	skipc
  2196  0B8F  2BC0               	goto	l3360
  2197                           
  2198                           ;main_Master.c: 623:                             ancho = 1;
  2199  0B90  01CC               	clrf	_ancho
  2200  0B91  0ACC               	incf	_ancho,f
  2201  0B92  2BC0               	goto	l3360
  2202  0B93                     l3348:	
  2203                           
  2204                           ;main_Master.c: 627:                         LCD_clear();
  2205  0B93  120A  158A  2063  120A  158A  	fcall	_LCD_clear
  2206                           
  2207                           ;main_Master.c: 628:                     _delay((unsigned long)((10)*(4000000/4000.0)));
  2208  0B98  300D               	movlw	13
  2209  0B99  00F8               	movwf	??_pressBoton1+1
  2210  0B9A  30FB               	movlw	251
  2211  0B9B  00F7               	movwf	??_pressBoton1
  2212  0B9C                     u1967:	
  2213  0B9C  0BF7               	decfsz	??_pressBoton1,f
  2214  0B9D  2B9C               	goto	u1967
  2215  0B9E  0BF8               	decfsz	??_pressBoton1+1,f
  2216  0B9F  2B9C               	goto	u1967
  2217  0BA0  2BA1               	nop2
  2218                           
  2219                           ;main_Master.c: 629:                     estado ++;
  2220  0BA1  3001               	movlw	1
  2221  0BA2  00F7               	movwf	??_pressBoton1
  2222  0BA3  0877               	movf	??_pressBoton1,w
  2223  0BA4  1283               	bcf	3,5	;RP0=0, select bank0
  2224  0BA5  1303               	bcf	3,6	;RP1=0, select bank0
  2225  0BA6  07D4               	addwf	_estado,f
  2226                           
  2227                           ;main_Master.c: 630:                     if (estado > 5){
  2228  0BA7  3006               	movlw	6
  2229  0BA8  0254               	subwf	_estado,w
  2230  0BA9  1C03               	skipc
  2231  0BAA  2BC0               	goto	l3360
  2232                           
  2233                           ;main_Master.c: 631:                         estado = 0;
  2234  0BAB  01D4               	clrf	_estado
  2235  0BAC  2BC0               	goto	l3360
  2236  0BAD                     l3358:	
  2237  0BAD  0854               	movf	_estado,w
  2238  0BAE  00F7               	movwf	??_pressBoton1
  2239  0BAF  01F8               	clrf	??_pressBoton1+1
  2240                           
  2241                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2242                           ; Switch size 1, requested type "simple"
  2243                           ; Number of cases is 1, Range of values is 0 to 0
  2244                           ; switch strategies available:
  2245                           ; Name         Instructions Cycles
  2246                           ; simple_byte            4     3 (average)
  2247                           ; direct_byte           11     8 (fixed)
  2248                           ; jumptable            260     6 (fixed)
  2249                           ;	Chosen strategy is simple_byte
  2250  0BB0  0878               	movf	??_pressBoton1+1,w
  2251  0BB1  3A00               	xorlw	0	; case 0
  2252  0BB2  1903               	skipnz
  2253  0BB3  2BB5               	goto	l5022
  2254  0BB4  2B93               	goto	l3348
  2255  0BB5                     l5022:	
  2256                           
  2257                           ; Switch size 1, requested type "simple"
  2258                           ; Number of cases is 3, Range of values is 6 to 8
  2259                           ; switch strategies available:
  2260                           ; Name         Instructions Cycles
  2261                           ; simple_byte           10     6 (average)
  2262                           ; direct_byte           20    11 (fixed)
  2263                           ; jumptable            263     9 (fixed)
  2264                           ;	Chosen strategy is simple_byte
  2265  0BB5  0877               	movf	??_pressBoton1,w
  2266  0BB6  3A06               	xorlw	6	; case 6
  2267  0BB7  1903               	skipnz
  2268  0BB8  2B72               	goto	l3330
  2269  0BB9  3A01               	xorlw	1	; case 7
  2270  0BBA  1903               	skipnz
  2271  0BBB  2B7D               	goto	l3336
  2272  0BBC  3A0F               	xorlw	15	; case 8
  2273  0BBD  1903               	skipnz
  2274  0BBE  2B88               	goto	l3342
  2275  0BBF  2B93               	goto	l3348
  2276  0BC0                     l3360:	
  2277                           
  2278                           ;main_Master.c: 634:                 banderaBoton = 0;
  2279  0BC0  01FB               	clrf	_banderaBoton
  2280                           
  2281                           ;main_Master.c: 635:                 banderaPUSH1 = 1;
  2282  0BC1  01FA               	clrf	_banderaPUSH1
  2283  0BC2  0AFA               	incf	_banderaPUSH1,f
  2284                           
  2285                           ;main_Master.c: 636:                 INTCONbits.RBIE = 1;
  2286  0BC3  158B               	bsf	11,3	;volatile
  2287  0BC4                     l3366:	
  2288                           
  2289                           ;main_Master.c: 640:     if (banderaPUSH1 == 1){
  2290  0BC4  037A               	decf	_banderaPUSH1,w
  2291  0BC5  1D03               	btfss	3,2
  2292  0BC6  0008               	return
  2293                           
  2294                           ;main_Master.c: 641:         if (PORTBbits.RB1 == 1){
  2295  0BC7  1283               	bcf	3,5	;RP0=0, select bank0
  2296  0BC8  1303               	bcf	3,6	;RP1=0, select bank0
  2297  0BC9  1C86               	btfss	6,1	;volatile
  2298  0BCA  0008               	return
  2299                           
  2300                           ;main_Master.c: 642:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2301  0BCB  300D               	movlw	13
  2302  0BCC  00F8               	movwf	??_pressBoton1+1
  2303  0BCD  30FB               	movlw	251
  2304  0BCE  00F7               	movwf	??_pressBoton1
  2305  0BCF                     u1977:	
  2306  0BCF  0BF7               	decfsz	??_pressBoton1,f
  2307  0BD0  2BCF               	goto	u1977
  2308  0BD1  0BF8               	decfsz	??_pressBoton1+1,f
  2309  0BD2  2BCF               	goto	u1977
  2310  0BD3  2BD4               	nop2
  2311                           
  2312                           ;main_Master.c: 643:         banderaPUSH1 = 0;
  2313  0BD4  01FA               	clrf	_banderaPUSH1
  2314  0BD5  0008               	return
  2315  0BD6                     __end_of_pressBoton1:	
  2316                           
  2317                           	psect	text4
  2318  0029                     __ptext4:	
  2319 ;; *************** function _mostrarLCD *****************
  2320 ;; Defined at:
  2321 ;;		line 426 in file "main_Master.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;  pantalla        1    wreg     unsigned char 
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;  pantalla        1   26[BANK0 ] unsigned char 
  2326 ;;  dec_atras       1    0        unsigned char 
  2327 ;;  uni_atras       1    0        unsigned char 
  2328 ;;  dec_frente      1    0        unsigned char 
  2329 ;;  uni_frente      1    0        unsigned char 
  2330 ;;  decenas_hume    1    0        unsigned char 
  2331 ;;  unidades_hum    1    0        unsigned char 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      void 
  2334 ;; Registers used:
  2335 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2341 ;;      Params:         0       0       0       0       0
  2342 ;;      Locals:         0       7       0       0       0
  2343 ;;      Temps:          0       3       0       0       0
  2344 ;;      Totals:         0      10       0       0       0
  2345 ;;Total ram usage:       10 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; Hardware stack levels required when called:    4
  2348 ;; This function calls:
  2349 ;;		_I2C_Master_Start
  2350 ;;		_I2C_Master_Stop
  2351 ;;		_I2C_Master_Write
  2352 ;;		_LCD_Set_Cursor
  2353 ;;		_LCD_Write_Character
  2354 ;;		_LCD_Write_String
  2355 ;;		_LCD_clear
  2356 ;;		_display_Datum
  2357 ;;		_display_Uhrzeit
  2358 ;;		_uint_to_array
  2359 ;; This function is called by:
  2360 ;;		_main
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           
  2365                           ;psect for function _mostrarLCD
  2366  0029                     _mostrarLCD:	
  2367                           
  2368                           ;incstack = 0
  2369                           ; Regs used in _mostrarLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2370                           ;mostrarLCD@pantalla stored from wreg
  2371  0029  1283               	bcf	3,5	;RP0=0, select bank0
  2372  002A  1303               	bcf	3,6	;RP1=0, select bank0
  2373  002B  00BA               	movwf	mostrarLCD@pantalla
  2374                           
  2375                           ;main_Master.c: 427:     switch(pantalla){
  2376  002C  2B2C               	goto	l4460
  2377  002D                     l4294:	
  2378                           
  2379                           ;main_Master.c: 429:             display_Uhrzeit(2,4);
  2380  002D  3004               	movlw	4
  2381  002E  00B7               	movwf	??_mostrarLCD
  2382  002F  0837               	movf	??_mostrarLCD,w
  2383  0030  00A8               	movwf	display_Uhrzeit@columna
  2384  0031  3002               	movlw	2
  2385  0032  120A  118A  2626  120A  118A  	fcall	_display_Uhrzeit
  2386                           
  2387                           ;main_Master.c: 430:             display_Datum(1,3);
  2388  0037  3003               	movlw	3
  2389  0038  1283               	bcf	3,5	;RP0=0, select bank0
  2390  0039  1303               	bcf	3,6	;RP1=0, select bank0
  2391  003A  00B7               	movwf	??_mostrarLCD
  2392  003B  0837               	movf	??_mostrarLCD,w
  2393  003C  00A8               	movwf	display_Datum@columna
  2394  003D  3001               	movlw	1
  2395  003E  120A  118A  254E   	fcall	_display_Datum
  2396                           
  2397                           ;main_Master.c: 431:             break;
  2398  0041  0008               	return
  2399  0042                     l4296:	
  2400                           
  2401                           ;main_Master.c: 433:             LCD_Set_Cursor(1,0);
  2402  0042  01F5               	clrf	LCD_Set_Cursor@columna
  2403  0043  3001               	movlw	1
  2404  0044  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2405                           
  2406                           ;main_Master.c: 434:             LCD_Write_String("Ambiente: Suelo:");
  2407  0049  3029               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2408  004A  120A  158A  20F5  120A  118A  	fcall	_LCD_Write_String
  2409                           
  2410                           ;main_Master.c: 435:             LCD_Set_Cursor(2,2);
  2411  004F  3002               	movlw	2
  2412  0050  1283               	bcf	3,5	;RP0=0, select bank0
  2413  0051  1303               	bcf	3,6	;RP1=0, select bank0
  2414  0052  00B7               	movwf	??_mostrarLCD
  2415  0053  0837               	movf	??_mostrarLCD,w
  2416  0054  00F5               	movwf	LCD_Set_Cursor@columna
  2417  0055  3002               	movlw	2
  2418  0056  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2419                           
  2420                           ;main_Master.c: 436:             LCD_Write_Character(2);
  2421  005B  3002               	movlw	2
  2422  005C  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2423                           
  2424                           ;main_Master.c: 437:             obj_array = uint_to_array(temperatura);
  2425  0061  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0062  1303               	bcf	3,6	;RP1=0, select bank0
  2427  0063  0851               	movf	_temperatura,w
  2428  0064  120A  158A  2452  120A  118A  	fcall	_uint_to_array
  2429  0069  1283               	bcf	3,5	;RP0=0, select bank0
  2430  006A  1303               	bcf	3,6	;RP1=0, select bank0
  2431  006B  00B7               	movwf	??_mostrarLCD
  2432  006C  0837               	movf	??_mostrarLCD,w
  2433  006D  00CF               	movwf	_obj_array
  2434                           
  2435                           ;main_Master.c: 438:             if (obj_array[0] == 0){
  2436  006E  084F               	movf	_obj_array,w
  2437  006F  0084               	movwf	4
  2438  0070  1383               	bcf	3,7	;select IRP bank0
  2439  0071  0800               	movf	0,w
  2440  0072  00B7               	movwf	??_mostrarLCD
  2441  0073  0A84               	incf	4,f
  2442  0074  0800               	movf	0,w
  2443  0075  00B8               	movwf	??_mostrarLCD+1
  2444  0076  0837               	movf	??_mostrarLCD,w
  2445  0077  0438               	iorwf	??_mostrarLCD+1,w
  2446  0078  1D03               	btfss	3,2
  2447  0079  287C               	goto	l4306
  2448                           
  2449                           ;main_Master.c: 439:                 LCD_Write_Character(' ');
  2450  007A  3020               	movlw	32
  2451  007B  2880               	goto	L7
  2452  007C                     l4306:	
  2453                           ;main_Master.c: 440:             }
  2454                           
  2455                           
  2456                           ;main_Master.c: 442:                 LCD_Write_Character('0' + obj_array[0]);
  2457  007C  084F               	movf	_obj_array,w
  2458  007D  0084               	movwf	4
  2459  007E  0800               	movf	0,w
  2460  007F  3E30               	addlw	48
  2461  0080                     L7:	
  2462  0080  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2463                           
  2464                           ;main_Master.c: 444:             LCD_Write_Character('0' + obj_array[1]);
  2465                           
  2466                           ;main_Master.c: 443:             }
  2467  0085  1283               	bcf	3,5	;RP0=0, select bank0
  2468  0086  1303               	bcf	3,6	;RP1=0, select bank0
  2469  0087  084F               	movf	_obj_array,w
  2470  0088  3E02               	addlw	2
  2471  0089  0084               	movwf	4
  2472  008A  1383               	bcf	3,7	;select IRP bank0
  2473  008B  0800               	movf	0,w
  2474  008C  3E30               	addlw	48
  2475  008D  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2476                           
  2477                           ;main_Master.c: 445:             LCD_Write_Character('0' + obj_array[2]);
  2478  0092  1283               	bcf	3,5	;RP0=0, select bank0
  2479  0093  1303               	bcf	3,6	;RP1=0, select bank0
  2480  0094  084F               	movf	_obj_array,w
  2481  0095  3E04               	addlw	4
  2482  0096  0084               	movwf	4
  2483  0097  1383               	bcf	3,7	;select IRP bank0
  2484  0098  0800               	movf	0,w
  2485  0099  3E30               	addlw	48
  2486  009A  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2487                           
  2488                           ;main_Master.c: 446:             LCD_Write_Character(223);
  2489  009F  30DF               	movlw	223
  2490  00A0  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2491                           
  2492                           ;main_Master.c: 447:             LCD_Write_Character('C');
  2493  00A5  3043               	movlw	67
  2494  00A6  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2495                           
  2496                           ;main_Master.c: 449:             LCD_Set_Cursor(2,10);
  2497  00AB  300A               	movlw	10
  2498  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  2499  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  2500  00AE  00B7               	movwf	??_mostrarLCD
  2501  00AF  0837               	movf	??_mostrarLCD,w
  2502  00B0  00F5               	movwf	LCD_Set_Cursor@columna
  2503  00B1  3002               	movlw	2
  2504  00B2  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2505                           
  2506                           ;main_Master.c: 450:             LCD_Write_Character(2);
  2507  00B7  3002               	movlw	2
  2508  00B8  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2509                           
  2510                           ;main_Master.c: 451:             obj_array = uint_to_array(temperatura_obj);
  2511  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  2512  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  2513  00BF  0850               	movf	_temperatura_obj,w
  2514  00C0  120A  158A  2452  120A  118A  	fcall	_uint_to_array
  2515  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  2516  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  2517  00C7  00B7               	movwf	??_mostrarLCD
  2518  00C8  0837               	movf	??_mostrarLCD,w
  2519  00C9  00CF               	movwf	_obj_array
  2520                           
  2521                           ;main_Master.c: 452:             if (obj_array[0] == 0){
  2522  00CA  084F               	movf	_obj_array,w
  2523  00CB  0084               	movwf	4
  2524  00CC  1383               	bcf	3,7	;select IRP bank0
  2525  00CD  0800               	movf	0,w
  2526  00CE  00B7               	movwf	??_mostrarLCD
  2527  00CF  0A84               	incf	4,f
  2528  00D0  0800               	movf	0,w
  2529  00D1  00B8               	movwf	??_mostrarLCD+1
  2530  00D2  0837               	movf	??_mostrarLCD,w
  2531  00D3  0438               	iorwf	??_mostrarLCD+1,w
  2532  00D4  1D03               	btfss	3,2
  2533  00D5  28D8               	goto	l4320
  2534                           
  2535                           ;main_Master.c: 453:                 LCD_Write_Character(' ');
  2536  00D6  3020               	movlw	32
  2537  00D7  28DC               	goto	L8
  2538  00D8                     l4320:	
  2539                           ;main_Master.c: 454:             }
  2540                           
  2541                           
  2542                           ;main_Master.c: 456:                 LCD_Write_Character('0' + obj_array[0]);
  2543  00D8  084F               	movf	_obj_array,w
  2544  00D9  0084               	movwf	4
  2545  00DA  0800               	movf	0,w
  2546  00DB  3E30               	addlw	48
  2547  00DC                     L8:	
  2548  00DC  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2549                           
  2550                           ;main_Master.c: 459:             if (obj_array[1] == 0 && obj_array[0] == 0){
  2551  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  2552  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  2553  00E3  084F               	movf	_obj_array,w
  2554  00E4  3E02               	addlw	2
  2555  00E5  0084               	movwf	4
  2556  00E6  1383               	bcf	3,7	;select IRP bank0
  2557  00E7  0800               	movf	0,w
  2558  00E8  00B7               	movwf	??_mostrarLCD
  2559  00E9  0A84               	incf	4,f
  2560  00EA  0800               	movf	0,w
  2561  00EB  00B8               	movwf	??_mostrarLCD+1
  2562  00EC  0837               	movf	??_mostrarLCD,w
  2563  00ED  0438               	iorwf	??_mostrarLCD+1,w
  2564  00EE  1D03               	btfss	3,2
  2565  00EF  28FD               	goto	l4328
  2566  00F0  084F               	movf	_obj_array,w
  2567  00F1  0084               	movwf	4
  2568  00F2  0800               	movf	0,w
  2569  00F3  00B7               	movwf	??_mostrarLCD
  2570  00F4  0A84               	incf	4,f
  2571  00F5  0800               	movf	0,w
  2572  00F6  00B8               	movwf	??_mostrarLCD+1
  2573  00F7  0837               	movf	??_mostrarLCD,w
  2574  00F8  0438               	iorwf	??_mostrarLCD+1,w
  2575  00F9  1D03               	btfss	3,2
  2576  00FA  28FD               	goto	l4328
  2577                           
  2578                           ;main_Master.c: 460:                 LCD_Write_Character(' ');
  2579  00FB  3020               	movlw	32
  2580  00FC  2902               	goto	L9
  2581  00FD                     l4328:	
  2582                           ;main_Master.c: 461:             }
  2583                           
  2584                           
  2585                           ;main_Master.c: 463:                 LCD_Write_Character('0' + obj_array[1]);
  2586  00FD  084F               	movf	_obj_array,w
  2587  00FE  3E02               	addlw	2
  2588  00FF  0084               	movwf	4
  2589  0100  0800               	movf	0,w
  2590  0101  3E30               	addlw	48
  2591  0102                     L9:	
  2592  0102  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2593                           
  2594                           ;main_Master.c: 465:             LCD_Write_Character('0' + obj_array[2]);
  2595                           
  2596                           ;main_Master.c: 464:             }
  2597  0107  1283               	bcf	3,5	;RP0=0, select bank0
  2598  0108  1303               	bcf	3,6	;RP1=0, select bank0
  2599  0109  084F               	movf	_obj_array,w
  2600  010A  3E04               	addlw	4
  2601  010B  0084               	movwf	4
  2602  010C  1383               	bcf	3,7	;select IRP bank0
  2603  010D  0800               	movf	0,w
  2604  010E  3E30               	addlw	48
  2605  010F  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2606                           
  2607                           ;main_Master.c: 466:             LCD_Write_Character(223);
  2608  0114  30DF               	movlw	223
  2609  0115  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2610                           
  2611                           ;main_Master.c: 467:             LCD_Write_Character('C');
  2612  011A  3043               	movlw	67
  2613  011B  120A  158A  200C   	fcall	_LCD_Write_Character
  2614                           
  2615                           ;main_Master.c: 468:             break;
  2616  011E  0008               	return
  2617  011F                     l4334:	
  2618                           
  2619                           ;main_Master.c: 470:             LCD_Set_Cursor(1,0);
  2620  011F  01F5               	clrf	LCD_Set_Cursor@columna
  2621  0120  3001               	movlw	1
  2622  0121  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2623                           
  2624                           ;main_Master.c: 471:             LCD_Write_String("Inclinacion:");
  2625  0126  3065               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2626  0127  120A  158A  20F5  120A  118A  	fcall	_LCD_Write_String
  2627                           
  2628                           ;main_Master.c: 472:             LCD_Set_Cursor(2, 5);
  2629  012C  3005               	movlw	5
  2630  012D  1283               	bcf	3,5	;RP0=0, select bank0
  2631  012E  1303               	bcf	3,6	;RP1=0, select bank0
  2632  012F  00B7               	movwf	??_mostrarLCD
  2633  0130  0837               	movf	??_mostrarLCD,w
  2634  0131  00F5               	movwf	LCD_Set_Cursor@columna
  2635  0132  3002               	movlw	2
  2636  0133  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2637                           
  2638                           ;main_Master.c: 476:             LCD_Set_Cursor(2, 5);
  2639  0138  3005               	movlw	5
  2640  0139  1283               	bcf	3,5	;RP0=0, select bank0
  2641  013A  1303               	bcf	3,6	;RP1=0, select bank0
  2642  013B  00B7               	movwf	??_mostrarLCD
  2643  013C  0837               	movf	??_mostrarLCD,w
  2644  013D  00F5               	movwf	LCD_Set_Cursor@columna
  2645  013E  3002               	movlw	2
  2646  013F  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2647                           
  2648                           ;main_Master.c: 477:             if(inclinacion < 40){
  2649  0144  3028               	movlw	40
  2650  0145  1283               	bcf	3,5	;RP0=0, select bank0
  2651  0146  1303               	bcf	3,6	;RP1=0, select bank0
  2652  0147  0257               	subwf	_inclinacion,w
  2653  0148  1803               	skipnc
  2654  0149  294F               	goto	l4340
  2655                           
  2656                           ;main_Master.c: 478:                 LCD_Write_String("Estable   ");
  2657  014A  308B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2658  014B  120A  158A  20F5   	fcall	_LCD_Write_String
  2659                           
  2660                           ;main_Master.c: 479:             }
  2661  014E  0008               	return
  2662  014F                     l4340:	
  2663  014F  305B               	movlw	91
  2664  0150  0257               	subwf	_inclinacion,w
  2665  0151  1C03               	skipc
  2666  0152  295C               	goto	l4346
  2667  0153  3096               	movlw	150
  2668  0154  0257               	subwf	_inclinacion,w
  2669  0155  1803               	skipnc
  2670  0156  295C               	goto	l4346
  2671                           
  2672                           ;main_Master.c: 481:                 LCD_Write_String("Peligro!   ");
  2673  0157  307F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2674  0158  120A  158A  20F5   	fcall	_LCD_Write_String
  2675                           
  2676                           ;main_Master.c: 482:             }
  2677  015B  0008               	return
  2678  015C                     l4346:	
  2679  015C  30B5               	movlw	181
  2680  015D  0257               	subwf	_inclinacion,w
  2681  015E  1C03               	skipc
  2682  015F  0008               	return
  2683                           
  2684                           ;main_Master.c: 484:                 LCD_Write_String("EMERGENCIA!  ");
  2685  0160  304A               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2686  0161  120A  158A  20F5   	fcall	_LCD_Write_String
  2687                           
  2688                           ;main_Master.c: 487:             break;
  2689  0164  0008               	return
  2690  0165                     l4350:	
  2691                           
  2692                           ;main_Master.c: 489:             LCD_Set_Cursor(1,0);
  2693  0165  01F5               	clrf	LCD_Set_Cursor@columna
  2694  0166  3001               	movlw	1
  2695  0167  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2696                           
  2697                           ;main_Master.c: 490:             LCD_Write_String("Humedad:");
  2698  016C  3096               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2699  016D  120A  158A  20F5  120A  118A  	fcall	_LCD_Write_String
  2700                           
  2701                           ;main_Master.c: 491:             LCD_Set_Cursor(2,4);
  2702  0172  3004               	movlw	4
  2703  0173  1283               	bcf	3,5	;RP0=0, select bank0
  2704  0174  1303               	bcf	3,6	;RP1=0, select bank0
  2705  0175  00B7               	movwf	??_mostrarLCD
  2706  0176  0837               	movf	??_mostrarLCD,w
  2707  0177  00F5               	movwf	LCD_Set_Cursor@columna
  2708  0178  3002               	movlw	2
  2709  0179  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2710                           
  2711                           ;main_Master.c: 492:             LCD_Write_Character(3);
  2712  017E  3003               	movlw	3
  2713  017F  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2714                           
  2715                           ;main_Master.c: 493:             LCD_Write_Character(' ');
  2716  0184  3020               	movlw	32
  2717  0185  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2718                           
  2719                           ;main_Master.c: 497:                 LCD_Write_Character(' ');
  2720                           
  2721                           ;main_Master.c: 496:             if(decenas_humedad == 0){
  2722  018A  3020               	movlw	32
  2723  018B  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2724                           
  2725                           ;main_Master.c: 502:             LCD_Write_Character('0'+unidades_humedad);
  2726                           
  2727                           ;main_Master.c: 501:             }
  2728  0190  3035               	movlw	53
  2729  0191  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2730                           
  2731                           ;main_Master.c: 503:             LCD_Write_Character('%');
  2732  0196  3025               	movlw	37
  2733  0197  120A  158A  200C   	fcall	_LCD_Write_Character
  2734                           
  2735                           ;main_Master.c: 504:             break;
  2736  019A  0008               	return
  2737  019B                     l4366:	
  2738                           
  2739                           ;main_Master.c: 506:             LCD_Set_Cursor(1,0);
  2740  019B  01F5               	clrf	LCD_Set_Cursor@columna
  2741  019C  3001               	movlw	1
  2742  019D  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2743                           
  2744                           ;main_Master.c: 507:             LCD_Write_String("Atr");
  2745  01A2  30AA               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2746  01A3  120A  158A  20F5  120A  118A  	fcall	_LCD_Write_String
  2747                           
  2748                           ;main_Master.c: 508:             LCD_Write_Character(0);
  2749  01A8  3000               	movlw	0
  2750  01A9  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2751                           
  2752                           ;main_Master.c: 509:             LCD_Write_String("s: | Frente:");
  2753  01AE  3058               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2754  01AF  120A  158A  20F5  120A  118A  	fcall	_LCD_Write_String
  2755                           
  2756                           ;main_Master.c: 510:             LCD_Set_Cursor(2,2);
  2757  01B4  3002               	movlw	2
  2758  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  2759  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  2760  01B7  00B7               	movwf	??_mostrarLCD
  2761  01B8  0837               	movf	??_mostrarLCD,w
  2762  01B9  00F5               	movwf	LCD_Set_Cursor@columna
  2763  01BA  3002               	movlw	2
  2764  01BB  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2765                           
  2766                           ;main_Master.c: 524:                 LCD_Write_String("----");
  2767                           
  2768                           ;main_Master.c: 511:             if(d_frente < 100){
  2769  01C0  30A5               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2770  01C1  120A  158A  20F5  120A  118A  	fcall	_LCD_Write_String
  2771                           
  2772                           ;main_Master.c: 527:             LCD_Set_Cursor(2,7);
  2773                           
  2774                           ;main_Master.c: 525:             }
  2775  01C6  3007               	movlw	7
  2776  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  2777  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  2778  01C9  00B7               	movwf	??_mostrarLCD
  2779  01CA  0837               	movf	??_mostrarLCD,w
  2780  01CB  00F5               	movwf	LCD_Set_Cursor@columna
  2781  01CC  3002               	movlw	2
  2782  01CD  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2783                           
  2784                           ;main_Master.c: 528:             LCD_Write_Character('|');
  2785  01D2  307C               	movlw	124
  2786  01D3  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2787                           
  2788                           ;main_Master.c: 529:             LCD_Set_Cursor(2,11);
  2789  01D8  300B               	movlw	11
  2790  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  2791  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  2792  01DB  00B7               	movwf	??_mostrarLCD
  2793  01DC  0837               	movf	??_mostrarLCD,w
  2794  01DD  00F5               	movwf	LCD_Set_Cursor@columna
  2795  01DE  3002               	movlw	2
  2796  01DF  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2797                           
  2798                           ;main_Master.c: 543:                 LCD_Write_String("----");
  2799                           
  2800                           ;main_Master.c: 530:             if(d_atras < 100){
  2801  01E4  30A5               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2802  01E5  120A  158A  20F5   	fcall	_LCD_Write_String
  2803  01E8  0008               	return
  2804  01E9                     l4402:	
  2805                           
  2806                           ;main_Master.c: 547:             LCD_Set_Cursor(1, 0);
  2807  01E9  01F5               	clrf	LCD_Set_Cursor@columna
  2808  01EA  3001               	movlw	1
  2809  01EB  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2810                           
  2811                           ;main_Master.c: 548:             LCD_Write_String("Tomar datos:");
  2812  01F0  3072               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2813  01F1  120A  158A  20F5  120A  118A  	fcall	_LCD_Write_String
  2814                           
  2815                           ;main_Master.c: 549:             LCD_Set_Cursor(2,1);
  2816  01F6  01F5               	clrf	LCD_Set_Cursor@columna
  2817  01F7  0AF5               	incf	LCD_Set_Cursor@columna,f
  2818  01F8  3002               	movlw	2
  2819  01F9  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2820                           
  2821                           ;main_Master.c: 550:             LCD_Write_Character(velocidad + '0');
  2822  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  2823  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  2824  0200  0852               	movf	_velocidad,w
  2825  0201  3E30               	addlw	48
  2826  0202  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2827                           
  2828                           ;main_Master.c: 551:             LCD_Set_Cursor(2,8);
  2829  0207  3008               	movlw	8
  2830  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2831  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2832  020A  00B7               	movwf	??_mostrarLCD
  2833  020B  0837               	movf	??_mostrarLCD,w
  2834  020C  00F5               	movwf	LCD_Set_Cursor@columna
  2835  020D  3002               	movlw	2
  2836  020E  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2837                           
  2838                           ;main_Master.c: 552:             LCD_Write_Character('0' + largo);
  2839  0213  1283               	bcf	3,5	;RP0=0, select bank0
  2840  0214  1303               	bcf	3,6	;RP1=0, select bank0
  2841  0215  084D               	movf	_largo,w
  2842  0216  3E30               	addlw	48
  2843  0217  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2844                           
  2845                           ;main_Master.c: 553:             LCD_Write_String("x ");
  2846  021C  30AE               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2847  021D  120A  158A  20F5  120A  118A  	fcall	_LCD_Write_String
  2848                           
  2849                           ;main_Master.c: 554:             LCD_Write_Character('0' + ancho);
  2850  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2851  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2852  0224  084C               	movf	_ancho,w
  2853  0225  3E30               	addlw	48
  2854  0226  120A  158A  200C   	fcall	_LCD_Write_Character
  2855                           
  2856                           ;main_Master.c: 555:             break;
  2857  0229  0008               	return
  2858  022A                     l4412:	
  2859                           
  2860                           ;main_Master.c: 557:             LCD_Set_Cursor(2,0);
  2861  022A  01F5               	clrf	LCD_Set_Cursor@columna
  2862  022B  3002               	movlw	2
  2863  022C  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2864                           
  2865                           ;main_Master.c: 558:             LCD_Write_Character(4);
  2866  0231  3004               	movlw	4
  2867  0232  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2868                           
  2869                           ;main_Master.c: 559:             LCD_Write_Character(velocidad + '0');
  2870  0237  1283               	bcf	3,5	;RP0=0, select bank0
  2871  0238  1303               	bcf	3,6	;RP1=0, select bank0
  2872  0239  0852               	movf	_velocidad,w
  2873  023A  3E30               	addlw	48
  2874  023B  120A  158A  200C   	fcall	_LCD_Write_Character
  2875                           
  2876                           ;main_Master.c: 560:             break;
  2877  023E  0008               	return
  2878  023F                     l4418:	
  2879                           
  2880                           ;main_Master.c: 562:             LCD_Set_Cursor(2,0);
  2881  023F  01F5               	clrf	LCD_Set_Cursor@columna
  2882  0240  3002               	movlw	2
  2883  0241  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2884                           
  2885                           ;main_Master.c: 563:             LCD_Write_Character(' ');
  2886  0246  3020               	movlw	32
  2887  0247  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2888                           
  2889                           ;main_Master.c: 564:             LCD_Set_Cursor(2,7);
  2890  024C  3007               	movlw	7
  2891  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2892  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2893  024F  00B7               	movwf	??_mostrarLCD
  2894  0250  0837               	movf	??_mostrarLCD,w
  2895  0251  00F5               	movwf	LCD_Set_Cursor@columna
  2896  0252  3002               	movlw	2
  2897  0253  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2898                           
  2899                           ;main_Master.c: 565:             LCD_Write_Character(4);
  2900  0258  3004               	movlw	4
  2901  0259  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2902                           
  2903                           ;main_Master.c: 566:             LCD_Write_Character('0' + largo);
  2904  025E  1283               	bcf	3,5	;RP0=0, select bank0
  2905  025F  1303               	bcf	3,6	;RP1=0, select bank0
  2906  0260  084D               	movf	_largo,w
  2907  0261  3E30               	addlw	48
  2908  0262  120A  158A  200C   	fcall	_LCD_Write_Character
  2909                           
  2910                           ;main_Master.c: 567:             break;
  2911  0265  0008               	return
  2912  0266                     l4424:	
  2913                           
  2914                           ;main_Master.c: 569:             LCD_Set_Cursor(2,7);
  2915  0266  3007               	movlw	7
  2916  0267  00B7               	movwf	??_mostrarLCD
  2917  0268  0837               	movf	??_mostrarLCD,w
  2918  0269  00F5               	movwf	LCD_Set_Cursor@columna
  2919  026A  3002               	movlw	2
  2920  026B  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2921                           
  2922                           ;main_Master.c: 570:             LCD_Write_Character(' ');
  2923  0270  3020               	movlw	32
  2924  0271  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2925                           
  2926                           ;main_Master.c: 571:             LCD_Set_Cursor(2,10);
  2927  0276  300A               	movlw	10
  2928  0277  1283               	bcf	3,5	;RP0=0, select bank0
  2929  0278  1303               	bcf	3,6	;RP1=0, select bank0
  2930  0279  00B7               	movwf	??_mostrarLCD
  2931  027A  0837               	movf	??_mostrarLCD,w
  2932  027B  00F5               	movwf	LCD_Set_Cursor@columna
  2933  027C  3002               	movlw	2
  2934  027D  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2935                           
  2936                           ;main_Master.c: 572:             LCD_Write_Character(4);
  2937  0282  3004               	movlw	4
  2938  0283  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2939                           
  2940                           ;main_Master.c: 573:             LCD_Write_Character('0' + ancho);
  2941  0288  1283               	bcf	3,5	;RP0=0, select bank0
  2942  0289  1303               	bcf	3,6	;RP1=0, select bank0
  2943  028A  084C               	movf	_ancho,w
  2944  028B  3E30               	addlw	48
  2945  028C  120A  158A  200C   	fcall	_LCD_Write_Character
  2946                           
  2947                           ;main_Master.c: 574:             break;
  2948  028F  0008               	return
  2949  0290                     l4430:	
  2950                           
  2951                           ;main_Master.c: 576:             LCD_Set_Cursor(2,10);
  2952  0290  300A               	movlw	10
  2953  0291  00B7               	movwf	??_mostrarLCD
  2954  0292  0837               	movf	??_mostrarLCD,w
  2955  0293  00F5               	movwf	LCD_Set_Cursor@columna
  2956  0294  3002               	movlw	2
  2957  0295  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2958                           
  2959                           ;main_Master.c: 577:             LCD_Write_Character(' ');
  2960  029A  3020               	movlw	32
  2961  029B  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  2962                           
  2963                           ;main_Master.c: 578:             LCD_Set_Cursor(2,15);
  2964  02A0  300F               	movlw	15
  2965  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  2966  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  2967  02A3  00B7               	movwf	??_mostrarLCD
  2968  02A4  0837               	movf	??_mostrarLCD,w
  2969  02A5  00F5               	movwf	LCD_Set_Cursor@columna
  2970  02A6  3002               	movlw	2
  2971  02A7  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2972                           
  2973                           ;main_Master.c: 579:             LCD_Write_Character(1);
  2974  02AC  3001               	movlw	1
  2975  02AD  120A  158A  200C   	fcall	_LCD_Write_Character
  2976                           
  2977                           ;main_Master.c: 580:             break;
  2978  02B0  0008               	return
  2979  02B1                     l4436:	
  2980                           
  2981                           ;main_Master.c: 582:             LCD_Set_Cursor(1,0);
  2982  02B1  01F5               	clrf	LCD_Set_Cursor@columna
  2983  02B2  3001               	movlw	1
  2984  02B3  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  2985                           
  2986                           ;main_Master.c: 583:             LCD_Write_String("Vamonos Perros!");
  2987  02B8  303A               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2988  02B9  120A  158A  20F5  120A  118A  	fcall	_LCD_Write_String
  2989                           
  2990                           ;main_Master.c: 585:             I2C_Master_Start();
  2991  02BE  160A  118A  27E2  120A  118A  	fcall	_I2C_Master_Start
  2992                           
  2993                           ;main_Master.c: 586:             I2C_Master_Write(0x30);
  2994  02C3  3030               	movlw	48
  2995  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2996  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  2997  02C6  00AD               	movwf	I2C_Master_Write@d
  2998  02C7  3000               	movlw	0
  2999  02C8  00AE               	movwf	I2C_Master_Write@d+1
  3000  02C9  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  3001                           
  3002                           ;main_Master.c: 587:             I2C_Master_Write(0x69);
  3003  02CE  3069               	movlw	105
  3004  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  3005  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  3006  02D1  00AD               	movwf	I2C_Master_Write@d
  3007  02D2  3000               	movlw	0
  3008  02D3  00AE               	movwf	I2C_Master_Write@d+1
  3009  02D4  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  3010                           
  3011                           ;main_Master.c: 588:             I2C_Master_Write(largo);
  3012  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  3013  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  3014  02DB  084D               	movf	_largo,w
  3015  02DC  00B7               	movwf	??_mostrarLCD
  3016  02DD  01B8               	clrf	??_mostrarLCD+1
  3017  02DE  0837               	movf	??_mostrarLCD,w
  3018  02DF  00AD               	movwf	I2C_Master_Write@d
  3019  02E0  0838               	movf	??_mostrarLCD+1,w
  3020  02E1  00AE               	movwf	I2C_Master_Write@d+1
  3021  02E2  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  3022                           
  3023                           ;main_Master.c: 589:             I2C_Master_Write(ancho);
  3024  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  3025  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  3026  02E9  084C               	movf	_ancho,w
  3027  02EA  00B7               	movwf	??_mostrarLCD
  3028  02EB  01B8               	clrf	??_mostrarLCD+1
  3029  02EC  0837               	movf	??_mostrarLCD,w
  3030  02ED  00AD               	movwf	I2C_Master_Write@d
  3031  02EE  0838               	movf	??_mostrarLCD+1,w
  3032  02EF  00AE               	movwf	I2C_Master_Write@d+1
  3033  02F0  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  3034                           
  3035                           ;main_Master.c: 590:             I2C_Master_Write(velocidad);
  3036  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  3037  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  3038  02F7  0852               	movf	_velocidad,w
  3039  02F8  00B7               	movwf	??_mostrarLCD
  3040  02F9  01B8               	clrf	??_mostrarLCD+1
  3041  02FA  0837               	movf	??_mostrarLCD,w
  3042  02FB  00AD               	movwf	I2C_Master_Write@d
  3043  02FC  0838               	movf	??_mostrarLCD+1,w
  3044  02FD  00AE               	movwf	I2C_Master_Write@d+1
  3045  02FE  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  3046                           
  3047                           ;main_Master.c: 591:             I2C_Master_Stop();
  3048  0303  160A  118A  27E9  120A  118A  	fcall	_I2C_Master_Stop
  3049                           
  3050                           ;main_Master.c: 593:             _delay((unsigned long)((500)*(4000000/4000.0)));
  3051  0308  3003               	movlw	3
  3052  0309  1283               	bcf	3,5	;RP0=0, select bank0
  3053  030A  1303               	bcf	3,6	;RP1=0, select bank0
  3054  030B  00B9               	movwf	??_mostrarLCD+2
  3055  030C  308A               	movlw	138
  3056  030D  00B8               	movwf	??_mostrarLCD+1
  3057  030E  3055               	movlw	85
  3058  030F  00B7               	movwf	??_mostrarLCD
  3059  0310                     u1987:	
  3060  0310  0BB7               	decfsz	??_mostrarLCD,f
  3061  0311  2B10               	goto	u1987
  3062  0312  0BB8               	decfsz	??_mostrarLCD+1,f
  3063  0313  2B10               	goto	u1987
  3064  0314  0BB9               	decfsz	??_mostrarLCD+2,f
  3065  0315  2B10               	goto	u1987
  3066                           
  3067                           ;main_Master.c: 594:             LCD_clear();
  3068  0316  120A  158A  2063   	fcall	_LCD_clear
  3069                           
  3070                           ;main_Master.c: 595:             estado = 0;
  3071  0319  1283               	bcf	3,5	;RP0=0, select bank0
  3072  031A  1303               	bcf	3,6	;RP1=0, select bank0
  3073  031B  01D4               	clrf	_estado
  3074                           
  3075                           ;main_Master.c: 596:             break;
  3076  031C  0008               	return
  3077  031D                     l4458:	
  3078                           
  3079                           ;main_Master.c: 598:             LCD_Set_Cursor(1,9);
  3080  031D  3009               	movlw	9
  3081  031E  00B7               	movwf	??_mostrarLCD
  3082  031F  0837               	movf	??_mostrarLCD,w
  3083  0320  00F5               	movwf	LCD_Set_Cursor@columna
  3084  0321  3001               	movlw	1
  3085  0322  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  3086                           
  3087                           ;main_Master.c: 599:             LCD_Write_String("ERROR");
  3088  0327  309F               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  3089  0328  120A  158A  20F5   	fcall	_LCD_Write_String
  3090                           
  3091                           ;main_Master.c: 600:     }
  3092  032B  0008               	return
  3093  032C                     l4460:	
  3094  032C  083A               	movf	mostrarLCD@pantalla,w
  3095  032D  00B7               	movwf	??_mostrarLCD
  3096  032E  01B8               	clrf	??_mostrarLCD+1
  3097                           
  3098                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3099                           ; Switch size 1, requested type "simple"
  3100                           ; Number of cases is 1, Range of values is 0 to 0
  3101                           ; switch strategies available:
  3102                           ; Name         Instructions Cycles
  3103                           ; simple_byte            4     3 (average)
  3104                           ; direct_byte           11     8 (fixed)
  3105                           ; jumptable            260     6 (fixed)
  3106                           ;	Chosen strategy is simple_byte
  3107  032F  0838               	movf	??_mostrarLCD+1,w
  3108  0330  3A00               	xorlw	0	; case 0
  3109  0331  1903               	skipnz
  3110  0332  2B34               	goto	l5024
  3111  0333  2B1D               	goto	l4458
  3112  0334                     l5024:	
  3113                           
  3114                           ; Switch size 1, requested type "simple"
  3115                           ; Number of cases is 11, Range of values is 0 to 10
  3116                           ; switch strategies available:
  3117                           ; Name         Instructions Cycles
  3118                           ; simple_byte           34    18 (average)
  3119                           ; direct_byte           41     8 (fixed)
  3120                           ; jumptable            260     6 (fixed)
  3121                           ;	Chosen strategy is simple_byte
  3122  0334  0837               	movf	??_mostrarLCD,w
  3123  0335  3A00               	xorlw	0	; case 0
  3124  0336  1903               	skipnz
  3125  0337  282D               	goto	l4294
  3126  0338  3A01               	xorlw	1	; case 1
  3127  0339  1903               	skipnz
  3128  033A  2842               	goto	l4296
  3129  033B  3A03               	xorlw	3	; case 2
  3130  033C  1903               	skipnz
  3131  033D  291F               	goto	l4334
  3132  033E  3A01               	xorlw	1	; case 3
  3133  033F  1903               	skipnz
  3134  0340  2965               	goto	l4350
  3135  0341  3A07               	xorlw	7	; case 4
  3136  0342  1903               	skipnz
  3137  0343  299B               	goto	l4366
  3138  0344  3A01               	xorlw	1	; case 5
  3139  0345  1903               	skipnz
  3140  0346  29E9               	goto	l4402
  3141  0347  3A03               	xorlw	3	; case 6
  3142  0348  1903               	skipnz
  3143  0349  2A2A               	goto	l4412
  3144  034A  3A01               	xorlw	1	; case 7
  3145  034B  1903               	skipnz
  3146  034C  2A3F               	goto	l4418
  3147  034D  3A0F               	xorlw	15	; case 8
  3148  034E  1903               	skipnz
  3149  034F  2A66               	goto	l4424
  3150  0350  3A01               	xorlw	1	; case 9
  3151  0351  1903               	skipnz
  3152  0352  2A90               	goto	l4430
  3153  0353  3A03               	xorlw	3	; case 10
  3154  0354  1903               	skipnz
  3155  0355  2AB1               	goto	l4436
  3156  0356  2B1D               	goto	l4458
  3157  0357  0008               	return
  3158  0358                     __end_of_mostrarLCD:	
  3159                           
  3160                           	psect	text5
  3161  0C52                     __ptext5:	
  3162 ;; *************** function _uint_to_array *****************
  3163 ;; Defined at:
  3164 ;;		line 181 in file "LCD_8bits.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;  numero          1    wreg     unsigned char 
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;  numero          1   22[BANK0 ] unsigned char 
  3169 ;;  resultado       6   16[BANK0 ] unsigned int [3]
  3170 ;;  centenas        1   15[BANK0 ] unsigned char 
  3171 ;;  decenas         1   14[BANK0 ] unsigned char 
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      PTR unsigned int 
  3174 ;; Registers used:
  3175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3181 ;;      Params:         0       0       0       0       0
  3182 ;;      Locals:         0       9       0       0       0
  3183 ;;      Temps:          0       6       0       0       0
  3184 ;;      Totals:         0      15       0       0       0
  3185 ;;Total ram usage:       15 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:    2
  3188 ;; This function calls:
  3189 ;;		___awdiv
  3190 ;;		___wmul
  3191 ;; This function is called by:
  3192 ;;		_mostrarLCD
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           
  3197                           ;psect for function _uint_to_array
  3198  0C52                     _uint_to_array:	
  3199                           
  3200                           ;incstack = 0
  3201                           ; Regs used in _uint_to_array: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3202                           ;uint_to_array@numero stored from wreg
  3203  0C52  1283               	bcf	3,5	;RP0=0, select bank0
  3204  0C53  1303               	bcf	3,6	;RP1=0, select bank0
  3205  0C54  00B6               	movwf	uint_to_array@numero
  3206                           
  3207                           ;LCD_8bits.c: 182:     uint16_t resultado[3] = {0,0,0};
  3208  0C55  3030               	movlw	uint_to_array@resultado& (0+255)
  3209  0C56  0084               	movwf	4
  3210  0C57  3006               	movlw	6
  3211  0C58  00FF               	movwf	127
  3212  0C59                     u1740:	
  3213  0C59  1383               	bcf	3,7	;select IRP bank0
  3214  0C5A  0180               	clrf	0
  3215  0C5B  0A84               	incf	4,f
  3216  0C5C  0BFF               	decfsz	127,f
  3217  0C5D  2C59               	goto	u1740
  3218                           
  3219                           ;LCD_8bits.c: 183:     resultado[0] = numero/100;
  3220  0C5E  3064               	movlw	100
  3221  0C5F  00A0               	movwf	___awdiv@divisor
  3222  0C60  3000               	movlw	0
  3223  0C61  00A1               	movwf	___awdiv@divisor+1
  3224  0C62  0836               	movf	uint_to_array@numero,w
  3225  0C63  00A8               	movwf	??_uint_to_array
  3226  0C64  01A9               	clrf	??_uint_to_array+1
  3227  0C65  0828               	movf	??_uint_to_array,w
  3228  0C66  00A2               	movwf	___awdiv@dividend
  3229  0C67  0829               	movf	??_uint_to_array+1,w
  3230  0C68  00A3               	movwf	___awdiv@dividend+1
  3231  0C69  120A  158A  2245  120A  158A  	fcall	___awdiv
  3232  0C6E  1283               	bcf	3,5	;RP0=0, select bank0
  3233  0C6F  1303               	bcf	3,6	;RP1=0, select bank0
  3234  0C70  0821               	movf	?___awdiv+1,w
  3235  0C71  00B1               	movwf	uint_to_array@resultado+1
  3236  0C72  0820               	movf	?___awdiv,w
  3237  0C73  00B0               	movwf	uint_to_array@resultado
  3238                           
  3239                           ;LCD_8bits.c: 184:     uint8_t centenas = resultado[0];
  3240  0C74  0830               	movf	uint_to_array@resultado,w
  3241  0C75  00A8               	movwf	??_uint_to_array
  3242  0C76  0828               	movf	??_uint_to_array,w
  3243  0C77  00AF               	movwf	uint_to_array@centenas
  3244                           
  3245                           ;LCD_8bits.c: 185:     resultado[1] = (numero - (centenas *100))/10;
  3246  0C78  300A               	movlw	10
  3247  0C79  00A0               	movwf	___awdiv@divisor
  3248  0C7A  3000               	movlw	0
  3249  0C7B  00A1               	movwf	___awdiv@divisor+1
  3250  0C7C  082F               	movf	uint_to_array@centenas,w
  3251  0C7D  00A8               	movwf	??_uint_to_array
  3252  0C7E  01A9               	clrf	??_uint_to_array+1
  3253  0C7F  0828               	movf	??_uint_to_array,w
  3254  0C80  00F2               	movwf	___wmul@multiplier
  3255  0C81  0829               	movf	??_uint_to_array+1,w
  3256  0C82  00F3               	movwf	___wmul@multiplier+1
  3257  0C83  309C               	movlw	156
  3258  0C84  00F4               	movwf	___wmul@multiplicand
  3259  0C85  30FF               	movlw	255
  3260  0C86  00F5               	movwf	___wmul@multiplicand+1
  3261  0C87  120A  158A  20D4  120A  158A  	fcall	___wmul
  3262  0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  3263  0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  3264  0C8E  0836               	movf	uint_to_array@numero,w
  3265  0C8F  0772               	addwf	?___wmul,w
  3266  0C90  00A2               	movwf	___awdiv@dividend
  3267  0C91  0873               	movf	?___wmul+1,w
  3268  0C92  1803               	skipnc
  3269  0C93  0A73               	incf	?___wmul+1,w
  3270  0C94  00A3               	movwf	___awdiv@dividend+1
  3271  0C95  120A  158A  2245  120A  158A  	fcall	___awdiv
  3272  0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  3273  0C9B  1303               	bcf	3,6	;RP1=0, select bank0
  3274  0C9C  0821               	movf	?___awdiv+1,w
  3275  0C9D  00B3               	movwf	uint_to_array@resultado+3
  3276  0C9E  0820               	movf	?___awdiv,w
  3277  0C9F  00B2               	movwf	uint_to_array@resultado+2
  3278                           
  3279                           ;LCD_8bits.c: 186:     uint8_t decenas = resultado[1];
  3280  0CA0  0832               	movf	uint_to_array@resultado+2,w
  3281  0CA1  00A8               	movwf	??_uint_to_array
  3282  0CA2  0828               	movf	??_uint_to_array,w
  3283  0CA3  00AE               	movwf	uint_to_array@decenas
  3284                           
  3285                           ;LCD_8bits.c: 187:     resultado[2] = numero -(centenas*100+decenas*10);
  3286  0CA4  082F               	movf	uint_to_array@centenas,w
  3287  0CA5  00A8               	movwf	??_uint_to_array
  3288  0CA6  01A9               	clrf	??_uint_to_array+1
  3289  0CA7  0828               	movf	??_uint_to_array,w
  3290  0CA8  00F2               	movwf	___wmul@multiplier
  3291  0CA9  0829               	movf	??_uint_to_array+1,w
  3292  0CAA  00F3               	movwf	___wmul@multiplier+1
  3293  0CAB  309C               	movlw	156
  3294  0CAC  00F4               	movwf	___wmul@multiplicand
  3295  0CAD  30FF               	movlw	255
  3296  0CAE  00F5               	movwf	___wmul@multiplicand+1
  3297  0CAF  120A  158A  20D4  120A  158A  	fcall	___wmul
  3298  0CB4  1283               	bcf	3,5	;RP0=0, select bank0
  3299  0CB5  1303               	bcf	3,6	;RP1=0, select bank0
  3300  0CB6  0836               	movf	uint_to_array@numero,w
  3301  0CB7  0772               	addwf	?___wmul,w
  3302  0CB8  00AA               	movwf	??_uint_to_array+2
  3303  0CB9  0873               	movf	?___wmul+1,w
  3304  0CBA  1803               	skipnc
  3305  0CBB  0A73               	incf	?___wmul+1,w
  3306  0CBC  00AB               	movwf	??_uint_to_array+3
  3307  0CBD  082E               	movf	uint_to_array@decenas,w
  3308  0CBE  00AC               	movwf	??_uint_to_array+4
  3309  0CBF  01AD               	clrf	??_uint_to_array+5
  3310  0CC0  082C               	movf	??_uint_to_array+4,w
  3311  0CC1  00F2               	movwf	___wmul@multiplier
  3312  0CC2  082D               	movf	??_uint_to_array+5,w
  3313  0CC3  00F3               	movwf	___wmul@multiplier+1
  3314  0CC4  30F6               	movlw	246
  3315  0CC5  00F4               	movwf	___wmul@multiplicand
  3316  0CC6  30FF               	movlw	255
  3317  0CC7  00F5               	movwf	___wmul@multiplicand+1
  3318  0CC8  120A  158A  20D4   	fcall	___wmul
  3319  0CCB  0872               	movf	?___wmul,w
  3320  0CCC  1283               	bcf	3,5	;RP0=0, select bank0
  3321  0CCD  1303               	bcf	3,6	;RP1=0, select bank0
  3322  0CCE  072A               	addwf	??_uint_to_array+2,w
  3323  0CCF  00B4               	movwf	uint_to_array@resultado+4
  3324  0CD0  0873               	movf	?___wmul+1,w
  3325  0CD1  1803               	skipnc
  3326  0CD2  0A73               	incf	?___wmul+1,w
  3327  0CD3  072B               	addwf	??_uint_to_array+3,w
  3328  0CD4  00B5               	movwf	uint_to_array@resultado+5
  3329                           
  3330                           ;LCD_8bits.c: 188:     return(resultado);
  3331  0CD5  3030               	movlw	(low (uint_to_array@resultado| 0))& (0+255)
  3332  0CD6  0008               	return
  3333  0CD7                     __end_of_uint_to_array:	
  3334                           
  3335                           	psect	text6
  3336  08D4                     __ptext6:	
  3337 ;; *************** function ___wmul *****************
  3338 ;; Defined at:
  3339 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  multiplier      2    2[COMMON] unsigned int 
  3342 ;;  multiplicand    2    4[COMMON] unsigned int 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  product         2    6[COMMON] unsigned int 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  2    2[COMMON] unsigned int 
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, status,0
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3354 ;;      Params:         4       0       0       0       0
  3355 ;;      Locals:         2       0       0       0       0
  3356 ;;      Temps:          0       0       0       0       0
  3357 ;;      Totals:         6       0       0       0       0
  3358 ;;Total ram usage:        6 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    1
  3361 ;; This function calls:
  3362 ;;		Nothing
  3363 ;; This function is called by:
  3364 ;;		_uint_to_array
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           
  3369                           ;psect for function ___wmul
  3370  08D4                     ___wmul:	
  3371                           
  3372                           ;incstack = 0
  3373                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3374  08D4  01F6               	clrf	___wmul@product
  3375  08D5  01F7               	clrf	___wmul@product+1
  3376  08D6                     l2774:	
  3377  08D6  1C72               	btfss	___wmul@multiplier,0
  3378  08D7  28DE               	goto	l614
  3379  08D8  0874               	movf	___wmul@multiplicand,w
  3380  08D9  07F6               	addwf	___wmul@product,f
  3381  08DA  1803               	skipnc
  3382  08DB  0AF7               	incf	___wmul@product+1,f
  3383  08DC  0875               	movf	___wmul@multiplicand+1,w
  3384  08DD  07F7               	addwf	___wmul@product+1,f
  3385  08DE                     l614:	
  3386  08DE  3001               	movlw	1
  3387  08DF                     u1015:	
  3388  08DF  1003               	clrc
  3389  08E0  0DF4               	rlf	___wmul@multiplicand,f
  3390  08E1  0DF5               	rlf	___wmul@multiplicand+1,f
  3391  08E2  3EFF               	addlw	-1
  3392  08E3  1D03               	skipz
  3393  08E4  28DF               	goto	u1015
  3394  08E5  3001               	movlw	1
  3395  08E6                     u1025:	
  3396  08E6  1003               	clrc
  3397  08E7  0CF3               	rrf	___wmul@multiplier+1,f
  3398  08E8  0CF2               	rrf	___wmul@multiplier,f
  3399  08E9  3EFF               	addlw	-1
  3400  08EA  1D03               	skipz
  3401  08EB  28E6               	goto	u1025
  3402  08EC  0872               	movf	___wmul@multiplier,w
  3403  08ED  0473               	iorwf	___wmul@multiplier+1,w
  3404  08EE  1D03               	btfss	3,2
  3405  08EF  28D6               	goto	l2774
  3406  08F0  0877               	movf	___wmul@product+1,w
  3407  08F1  00F3               	movwf	?___wmul+1
  3408  08F2  0876               	movf	___wmul@product,w
  3409  08F3  00F2               	movwf	?___wmul
  3410  08F4  0008               	return
  3411  08F5                     __end_of___wmul:	
  3412                           
  3413                           	psect	text7
  3414  0626                     __ptext7:	
  3415 ;; *************** function _display_Uhrzeit *****************
  3416 ;; Defined at:
  3417 ;;		line 385 in file "main_Master.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;  fila            1    wreg     unsigned char 
  3420 ;;  columna         1    8[BANK0 ] unsigned char 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;  fila            1   12[BANK0 ] unsigned char 
  3423 ;;  Uhr_d           1   18[BANK0 ] unsigned char 
  3424 ;;  Uhr_u           1   17[BANK0 ] unsigned char 
  3425 ;;  min_d           1   16[BANK0 ] unsigned char 
  3426 ;;  min_u           1   15[BANK0 ] unsigned char 
  3427 ;;  seg_d           1   14[BANK0 ] unsigned char 
  3428 ;;  seg_u           1   13[BANK0 ] unsigned char 
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      void 
  3431 ;; Registers used:
  3432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3438 ;;      Params:         0       1       0       0       0
  3439 ;;      Locals:         0       7       0       0       0
  3440 ;;      Temps:          0       3       0       0       0
  3441 ;;      Totals:         0      11       0       0       0
  3442 ;;Total ram usage:       11 bytes
  3443 ;; Hardware stack levels used:    1
  3444 ;; Hardware stack levels required when called:    3
  3445 ;; This function calls:
  3446 ;;		_LCD_Set_Cursor
  3447 ;;		_LCD_Write_Character
  3448 ;;		___awdiv
  3449 ;;		___awmod
  3450 ;; This function is called by:
  3451 ;;		_mostrarLCD
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           
  3456                           ;psect for function _display_Uhrzeit
  3457  0626                     _display_Uhrzeit:	
  3458                           
  3459                           ;incstack = 0
  3460                           ; Regs used in _display_Uhrzeit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3461                           ;display_Uhrzeit@fila stored from wreg
  3462  0626  1283               	bcf	3,5	;RP0=0, select bank0
  3463  0627  1303               	bcf	3,6	;RP1=0, select bank0
  3464  0628  00AC               	movwf	display_Uhrzeit@fila
  3465                           
  3466                           ;main_Master.c: 386:     char seg_u = seg%10;
  3467  0629  300A               	movlw	10
  3468  062A  00F2               	movwf	___awmod@divisor
  3469  062B  3000               	movlw	0
  3470  062C  00F3               	movwf	___awmod@divisor+1
  3471  062D  0853               	movf	_seg,w
  3472  062E  00A9               	movwf	??_display_Uhrzeit
  3473  062F  01AA               	clrf	??_display_Uhrzeit+1
  3474  0630  0829               	movf	??_display_Uhrzeit,w
  3475  0631  00F4               	movwf	___awmod@dividend
  3476  0632  082A               	movf	??_display_Uhrzeit+1,w
  3477  0633  00F5               	movwf	___awmod@dividend+1
  3478  0634  120A  158A  21FA  120A  118A  	fcall	___awmod
  3479  0639  0872               	movf	?___awmod,w
  3480  063A  1283               	bcf	3,5	;RP0=0, select bank0
  3481  063B  1303               	bcf	3,6	;RP1=0, select bank0
  3482  063C  00AB               	movwf	??_display_Uhrzeit+2
  3483  063D  082B               	movf	??_display_Uhrzeit+2,w
  3484  063E  00AD               	movwf	display_Uhrzeit@seg_u
  3485                           
  3486                           ;main_Master.c: 387:     char seg_d = seg/10;
  3487  063F  300A               	movlw	10
  3488  0640  00A0               	movwf	___awdiv@divisor
  3489  0641  3000               	movlw	0
  3490  0642  00A1               	movwf	___awdiv@divisor+1
  3491  0643  0853               	movf	_seg,w
  3492  0644  00A9               	movwf	??_display_Uhrzeit
  3493  0645  01AA               	clrf	??_display_Uhrzeit+1
  3494  0646  0829               	movf	??_display_Uhrzeit,w
  3495  0647  00A2               	movwf	___awdiv@dividend
  3496  0648  082A               	movf	??_display_Uhrzeit+1,w
  3497  0649  00A3               	movwf	___awdiv@dividend+1
  3498  064A  120A  158A  2245  120A  118A  	fcall	___awdiv
  3499  064F  1283               	bcf	3,5	;RP0=0, select bank0
  3500  0650  1303               	bcf	3,6	;RP1=0, select bank0
  3501  0651  0820               	movf	?___awdiv,w
  3502  0652  00AB               	movwf	??_display_Uhrzeit+2
  3503  0653  082B               	movf	??_display_Uhrzeit+2,w
  3504  0654  00AE               	movwf	display_Uhrzeit@seg_d
  3505                           
  3506                           ;main_Master.c: 388:     char min_u = min%10;
  3507  0655  300A               	movlw	10
  3508  0656  00F2               	movwf	___awmod@divisor
  3509  0657  3000               	movlw	0
  3510  0658  00F3               	movwf	___awmod@divisor+1
  3511  0659  085E               	movf	_min,w
  3512  065A  00A9               	movwf	??_display_Uhrzeit
  3513  065B  01AA               	clrf	??_display_Uhrzeit+1
  3514  065C  0829               	movf	??_display_Uhrzeit,w
  3515  065D  00F4               	movwf	___awmod@dividend
  3516  065E  082A               	movf	??_display_Uhrzeit+1,w
  3517  065F  00F5               	movwf	___awmod@dividend+1
  3518  0660  120A  158A  21FA  120A  118A  	fcall	___awmod
  3519  0665  0872               	movf	?___awmod,w
  3520  0666  1283               	bcf	3,5	;RP0=0, select bank0
  3521  0667  1303               	bcf	3,6	;RP1=0, select bank0
  3522  0668  00AB               	movwf	??_display_Uhrzeit+2
  3523  0669  082B               	movf	??_display_Uhrzeit+2,w
  3524  066A  00AF               	movwf	display_Uhrzeit@min_u
  3525                           
  3526                           ;main_Master.c: 389:     char min_d = min/10;
  3527  066B  300A               	movlw	10
  3528  066C  00A0               	movwf	___awdiv@divisor
  3529  066D  3000               	movlw	0
  3530  066E  00A1               	movwf	___awdiv@divisor+1
  3531  066F  085E               	movf	_min,w
  3532  0670  00A9               	movwf	??_display_Uhrzeit
  3533  0671  01AA               	clrf	??_display_Uhrzeit+1
  3534  0672  0829               	movf	??_display_Uhrzeit,w
  3535  0673  00A2               	movwf	___awdiv@dividend
  3536  0674  082A               	movf	??_display_Uhrzeit+1,w
  3537  0675  00A3               	movwf	___awdiv@dividend+1
  3538  0676  120A  158A  2245  120A  118A  	fcall	___awdiv
  3539  067B  1283               	bcf	3,5	;RP0=0, select bank0
  3540  067C  1303               	bcf	3,6	;RP1=0, select bank0
  3541  067D  0820               	movf	?___awdiv,w
  3542  067E  00AB               	movwf	??_display_Uhrzeit+2
  3543  067F  082B               	movf	??_display_Uhrzeit+2,w
  3544  0680  00B0               	movwf	display_Uhrzeit@min_d
  3545                           
  3546                           ;main_Master.c: 390:     char Uhr_u = hora%10;
  3547  0681  300A               	movlw	10
  3548  0682  00F2               	movwf	___awmod@divisor
  3549  0683  3000               	movlw	0
  3550  0684  00F3               	movwf	___awmod@divisor+1
  3551  0685  085D               	movf	_hora,w
  3552  0686  00A9               	movwf	??_display_Uhrzeit
  3553  0687  01AA               	clrf	??_display_Uhrzeit+1
  3554  0688  0829               	movf	??_display_Uhrzeit,w
  3555  0689  00F4               	movwf	___awmod@dividend
  3556  068A  082A               	movf	??_display_Uhrzeit+1,w
  3557  068B  00F5               	movwf	___awmod@dividend+1
  3558  068C  120A  158A  21FA  120A  118A  	fcall	___awmod
  3559  0691  0872               	movf	?___awmod,w
  3560  0692  1283               	bcf	3,5	;RP0=0, select bank0
  3561  0693  1303               	bcf	3,6	;RP1=0, select bank0
  3562  0694  00AB               	movwf	??_display_Uhrzeit+2
  3563  0695  082B               	movf	??_display_Uhrzeit+2,w
  3564  0696  00B1               	movwf	display_Uhrzeit@Uhr_u
  3565                           
  3566                           ;main_Master.c: 391:     char Uhr_d = hora/10;
  3567  0697  300A               	movlw	10
  3568  0698  00A0               	movwf	___awdiv@divisor
  3569  0699  3000               	movlw	0
  3570  069A  00A1               	movwf	___awdiv@divisor+1
  3571  069B  085D               	movf	_hora,w
  3572  069C  00A9               	movwf	??_display_Uhrzeit
  3573  069D  01AA               	clrf	??_display_Uhrzeit+1
  3574  069E  0829               	movf	??_display_Uhrzeit,w
  3575  069F  00A2               	movwf	___awdiv@dividend
  3576  06A0  082A               	movf	??_display_Uhrzeit+1,w
  3577  06A1  00A3               	movwf	___awdiv@dividend+1
  3578  06A2  120A  158A  2245  120A  118A  	fcall	___awdiv
  3579  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  3580  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  3581  06A9  0820               	movf	?___awdiv,w
  3582  06AA  00AB               	movwf	??_display_Uhrzeit+2
  3583  06AB  082B               	movf	??_display_Uhrzeit+2,w
  3584  06AC  00B2               	movwf	display_Uhrzeit@Uhr_d
  3585                           
  3586                           ;main_Master.c: 393:     LCD_Set_Cursor(fila, columna);
  3587  06AD  0828               	movf	display_Uhrzeit@columna,w
  3588  06AE  00A9               	movwf	??_display_Uhrzeit
  3589  06AF  0829               	movf	??_display_Uhrzeit,w
  3590  06B0  00F5               	movwf	LCD_Set_Cursor@columna
  3591  06B1  082C               	movf	display_Uhrzeit@fila,w
  3592  06B2  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  3593                           
  3594                           ;main_Master.c: 394:     LCD_Write_Character(Uhr_d + '0');
  3595  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  3596  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  3597  06B9  0832               	movf	display_Uhrzeit@Uhr_d,w
  3598  06BA  3E30               	addlw	48
  3599  06BB  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  3600                           
  3601                           ;main_Master.c: 395:     LCD_Write_Character(Uhr_u + '0');
  3602  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  3603  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  3604  06C2  0831               	movf	display_Uhrzeit@Uhr_u,w
  3605  06C3  3E30               	addlw	48
  3606  06C4  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  3607                           
  3608                           ;main_Master.c: 396:     LCD_Write_Character(':');
  3609  06C9  303A               	movlw	58
  3610  06CA  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  3611                           
  3612                           ;main_Master.c: 397:     LCD_Write_Character(min_d + '0');
  3613  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  3614  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  3615  06D1  0830               	movf	display_Uhrzeit@min_d,w
  3616  06D2  3E30               	addlw	48
  3617  06D3  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  3618                           
  3619                           ;main_Master.c: 398:     LCD_Write_Character(min_u + '0');
  3620  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  3621  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  3622  06DA  082F               	movf	display_Uhrzeit@min_u,w
  3623  06DB  3E30               	addlw	48
  3624  06DC  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  3625                           
  3626                           ;main_Master.c: 399:     LCD_Write_Character(':');
  3627  06E1  303A               	movlw	58
  3628  06E2  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  3629                           
  3630                           ;main_Master.c: 400:     LCD_Write_Character(seg_d + '0');
  3631  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  3632  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  3633  06E9  082E               	movf	display_Uhrzeit@seg_d,w
  3634  06EA  3E30               	addlw	48
  3635  06EB  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  3636                           
  3637                           ;main_Master.c: 401:     LCD_Write_Character(seg_u + '0');
  3638  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  3639  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  3640  06F2  082D               	movf	display_Uhrzeit@seg_u,w
  3641  06F3  3E30               	addlw	48
  3642  06F4  120A  158A  200C   	fcall	_LCD_Write_Character
  3643  06F7  0008               	return
  3644  06F8                     __end_of_display_Uhrzeit:	
  3645                           
  3646                           	psect	text8
  3647  054E                     __ptext8:	
  3648 ;; *************** function _display_Datum *****************
  3649 ;; Defined at:
  3650 ;;		line 405 in file "main_Master.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;  fila            1    wreg     unsigned char 
  3653 ;;  columna         1    8[BANK0 ] unsigned char 
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;  fila            1   12[BANK0 ] unsigned char 
  3656 ;;  jahr_d          1   18[BANK0 ] unsigned char 
  3657 ;;  jahr_u          1   17[BANK0 ] unsigned char 
  3658 ;;  mes_d           1   16[BANK0 ] unsigned char 
  3659 ;;  mes_u           1   15[BANK0 ] unsigned char 
  3660 ;;  dia_d           1   14[BANK0 ] unsigned char 
  3661 ;;  dia_u           1   13[BANK0 ] unsigned char 
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  1    wreg      void 
  3664 ;; Registers used:
  3665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3671 ;;      Params:         0       1       0       0       0
  3672 ;;      Locals:         0       7       0       0       0
  3673 ;;      Temps:          0       3       0       0       0
  3674 ;;      Totals:         0      11       0       0       0
  3675 ;;Total ram usage:       11 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; Hardware stack levels required when called:    3
  3678 ;; This function calls:
  3679 ;;		_LCD_Set_Cursor
  3680 ;;		_LCD_Write_Character
  3681 ;;		_LCD_Write_String
  3682 ;;		___awdiv
  3683 ;;		___awmod
  3684 ;; This function is called by:
  3685 ;;		_mostrarLCD
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           
  3690                           ;psect for function _display_Datum
  3691  054E                     _display_Datum:	
  3692                           
  3693                           ;incstack = 0
  3694                           ; Regs used in _display_Datum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3695                           ;display_Datum@fila stored from wreg
  3696  054E  1283               	bcf	3,5	;RP0=0, select bank0
  3697  054F  1303               	bcf	3,6	;RP1=0, select bank0
  3698  0550  00AC               	movwf	display_Datum@fila
  3699                           
  3700                           ;main_Master.c: 406:     char dia_u = datum%10;
  3701  0551  300A               	movlw	10
  3702  0552  00F2               	movwf	___awmod@divisor
  3703  0553  3000               	movlw	0
  3704  0554  00F3               	movwf	___awmod@divisor+1
  3705  0555  085B               	movf	_datum,w
  3706  0556  00A9               	movwf	??_display_Datum
  3707  0557  01AA               	clrf	??_display_Datum+1
  3708  0558  0829               	movf	??_display_Datum,w
  3709  0559  00F4               	movwf	___awmod@dividend
  3710  055A  082A               	movf	??_display_Datum+1,w
  3711  055B  00F5               	movwf	___awmod@dividend+1
  3712  055C  120A  158A  21FA  120A  118A  	fcall	___awmod
  3713  0561  0872               	movf	?___awmod,w
  3714  0562  1283               	bcf	3,5	;RP0=0, select bank0
  3715  0563  1303               	bcf	3,6	;RP1=0, select bank0
  3716  0564  00AB               	movwf	??_display_Datum+2
  3717  0565  082B               	movf	??_display_Datum+2,w
  3718  0566  00AD               	movwf	display_Datum@dia_u
  3719                           
  3720                           ;main_Master.c: 407:     char dia_d = datum/10;
  3721  0567  300A               	movlw	10
  3722  0568  00A0               	movwf	___awdiv@divisor
  3723  0569  3000               	movlw	0
  3724  056A  00A1               	movwf	___awdiv@divisor+1
  3725  056B  085B               	movf	_datum,w
  3726  056C  00A9               	movwf	??_display_Datum
  3727  056D  01AA               	clrf	??_display_Datum+1
  3728  056E  0829               	movf	??_display_Datum,w
  3729  056F  00A2               	movwf	___awdiv@dividend
  3730  0570  082A               	movf	??_display_Datum+1,w
  3731  0571  00A3               	movwf	___awdiv@dividend+1
  3732  0572  120A  158A  2245  120A  118A  	fcall	___awdiv
  3733  0577  1283               	bcf	3,5	;RP0=0, select bank0
  3734  0578  1303               	bcf	3,6	;RP1=0, select bank0
  3735  0579  0820               	movf	?___awdiv,w
  3736  057A  00AB               	movwf	??_display_Datum+2
  3737  057B  082B               	movf	??_display_Datum+2,w
  3738  057C  00AE               	movwf	display_Datum@dia_d
  3739                           
  3740                           ;main_Master.c: 408:     char mes_u = mes%10;
  3741  057D  300A               	movlw	10
  3742  057E  00F2               	movwf	___awmod@divisor
  3743  057F  3000               	movlw	0
  3744  0580  00F3               	movwf	___awmod@divisor+1
  3745  0581  085A               	movf	_mes,w
  3746  0582  00A9               	movwf	??_display_Datum
  3747  0583  01AA               	clrf	??_display_Datum+1
  3748  0584  0829               	movf	??_display_Datum,w
  3749  0585  00F4               	movwf	___awmod@dividend
  3750  0586  082A               	movf	??_display_Datum+1,w
  3751  0587  00F5               	movwf	___awmod@dividend+1
  3752  0588  120A  158A  21FA  120A  118A  	fcall	___awmod
  3753  058D  0872               	movf	?___awmod,w
  3754  058E  1283               	bcf	3,5	;RP0=0, select bank0
  3755  058F  1303               	bcf	3,6	;RP1=0, select bank0
  3756  0590  00AB               	movwf	??_display_Datum+2
  3757  0591  082B               	movf	??_display_Datum+2,w
  3758  0592  00AF               	movwf	display_Datum@mes_u
  3759                           
  3760                           ;main_Master.c: 409:     char mes_d = mes/10;
  3761  0593  300A               	movlw	10
  3762  0594  00A0               	movwf	___awdiv@divisor
  3763  0595  3000               	movlw	0
  3764  0596  00A1               	movwf	___awdiv@divisor+1
  3765  0597  085A               	movf	_mes,w
  3766  0598  00A9               	movwf	??_display_Datum
  3767  0599  01AA               	clrf	??_display_Datum+1
  3768  059A  0829               	movf	??_display_Datum,w
  3769  059B  00A2               	movwf	___awdiv@dividend
  3770  059C  082A               	movf	??_display_Datum+1,w
  3771  059D  00A3               	movwf	___awdiv@dividend+1
  3772  059E  120A  158A  2245  120A  118A  	fcall	___awdiv
  3773  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  3774  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  3775  05A5  0820               	movf	?___awdiv,w
  3776  05A6  00AB               	movwf	??_display_Datum+2
  3777  05A7  082B               	movf	??_display_Datum+2,w
  3778  05A8  00B0               	movwf	display_Datum@mes_d
  3779                           
  3780                           ;main_Master.c: 410:     char jahr_u = jahr%10;
  3781  05A9  300A               	movlw	10
  3782  05AA  00F2               	movwf	___awmod@divisor
  3783  05AB  3000               	movlw	0
  3784  05AC  00F3               	movwf	___awmod@divisor+1
  3785  05AD  0859               	movf	_jahr,w
  3786  05AE  00A9               	movwf	??_display_Datum
  3787  05AF  01AA               	clrf	??_display_Datum+1
  3788  05B0  0829               	movf	??_display_Datum,w
  3789  05B1  00F4               	movwf	___awmod@dividend
  3790  05B2  082A               	movf	??_display_Datum+1,w
  3791  05B3  00F5               	movwf	___awmod@dividend+1
  3792  05B4  120A  158A  21FA  120A  118A  	fcall	___awmod
  3793  05B9  0872               	movf	?___awmod,w
  3794  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  3795  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  3796  05BC  00AB               	movwf	??_display_Datum+2
  3797  05BD  082B               	movf	??_display_Datum+2,w
  3798  05BE  00B1               	movwf	display_Datum@jahr_u
  3799                           
  3800                           ;main_Master.c: 411:     char jahr_d = jahr/10;
  3801  05BF  300A               	movlw	10
  3802  05C0  00A0               	movwf	___awdiv@divisor
  3803  05C1  3000               	movlw	0
  3804  05C2  00A1               	movwf	___awdiv@divisor+1
  3805  05C3  0859               	movf	_jahr,w
  3806  05C4  00A9               	movwf	??_display_Datum
  3807  05C5  01AA               	clrf	??_display_Datum+1
  3808  05C6  0829               	movf	??_display_Datum,w
  3809  05C7  00A2               	movwf	___awdiv@dividend
  3810  05C8  082A               	movf	??_display_Datum+1,w
  3811  05C9  00A3               	movwf	___awdiv@dividend+1
  3812  05CA  120A  158A  2245  120A  118A  	fcall	___awdiv
  3813  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  3814  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  3815  05D1  0820               	movf	?___awdiv,w
  3816  05D2  00AB               	movwf	??_display_Datum+2
  3817  05D3  082B               	movf	??_display_Datum+2,w
  3818  05D4  00B2               	movwf	display_Datum@jahr_d
  3819                           
  3820                           ;main_Master.c: 413:     LCD_Set_Cursor(fila, columna);
  3821  05D5  0828               	movf	display_Datum@columna,w
  3822  05D6  00A9               	movwf	??_display_Datum
  3823  05D7  0829               	movf	??_display_Datum,w
  3824  05D8  00F5               	movwf	LCD_Set_Cursor@columna
  3825  05D9  082C               	movf	display_Datum@fila,w
  3826  05DA  120A  158A  216F  120A  118A  	fcall	_LCD_Set_Cursor
  3827                           
  3828                           ;main_Master.c: 414:     LCD_Write_Character(dia_d + '0');
  3829  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  3830  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  3831  05E1  082E               	movf	display_Datum@dia_d,w
  3832  05E2  3E30               	addlw	48
  3833  05E3  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  3834                           
  3835                           ;main_Master.c: 415:     LCD_Write_Character(dia_u + '0');
  3836  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  3837  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  3838  05EA  082D               	movf	display_Datum@dia_u,w
  3839  05EB  3E30               	addlw	48
  3840  05EC  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  3841                           
  3842                           ;main_Master.c: 416:     LCD_Write_Character('/');
  3843  05F1  302F               	movlw	47
  3844  05F2  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  3845                           
  3846                           ;main_Master.c: 417:     LCD_Write_Character(mes_d + '0');
  3847  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3848  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  3849  05F9  0830               	movf	display_Datum@mes_d,w
  3850  05FA  3E30               	addlw	48
  3851  05FB  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  3852                           
  3853                           ;main_Master.c: 418:     LCD_Write_Character(mes_u + '0');
  3854  0600  1283               	bcf	3,5	;RP0=0, select bank0
  3855  0601  1303               	bcf	3,6	;RP1=0, select bank0
  3856  0602  082F               	movf	display_Datum@mes_u,w
  3857  0603  3E30               	addlw	48
  3858  0604  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  3859                           
  3860                           ;main_Master.c: 419:     LCD_Write_Character('/');
  3861  0609  302F               	movlw	47
  3862  060A  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  3863                           
  3864                           ;main_Master.c: 420:     LCD_Write_String("20");
  3865  060F  30B1               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3866  0610  120A  158A  20F5  120A  118A  	fcall	_LCD_Write_String
  3867                           
  3868                           ;main_Master.c: 421:     LCD_Write_Character(jahr_d + '0');
  3869  0615  1283               	bcf	3,5	;RP0=0, select bank0
  3870  0616  1303               	bcf	3,6	;RP1=0, select bank0
  3871  0617  0832               	movf	display_Datum@jahr_d,w
  3872  0618  3E30               	addlw	48
  3873  0619  120A  158A  200C  120A  118A  	fcall	_LCD_Write_Character
  3874                           
  3875                           ;main_Master.c: 422:     LCD_Write_Character(jahr_u + '0');
  3876  061E  1283               	bcf	3,5	;RP0=0, select bank0
  3877  061F  1303               	bcf	3,6	;RP1=0, select bank0
  3878  0620  0831               	movf	display_Datum@jahr_u,w
  3879  0621  3E30               	addlw	48
  3880  0622  120A  158A  200C   	fcall	_LCD_Write_Character
  3881  0625  0008               	return
  3882  0626                     __end_of_display_Datum:	
  3883                           
  3884                           	psect	text9
  3885  08F5                     __ptext9:	
  3886 ;; *************** function _LCD_Write_String *****************
  3887 ;; Defined at:
  3888 ;;		line 73 in file "LCD_8bits.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  a               1    wreg     PTR unsigned char 
  3891 ;;		 -> STR_17(6), STR_16(16), STR_15(3), STR_14(13), 
  3892 ;;		 -> STR_13(5), STR_12(3), STR_11(5), STR_10(3), 
  3893 ;;		 -> STR_9(13), STR_8(4), STR_7(9), STR_6(14), 
  3894 ;;		 -> STR_5(12), STR_4(11), STR_3(13), STR_2(17), 
  3895 ;;		 -> STR_1(3), 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  a               1    6[COMMON] PTR unsigned char 
  3898 ;;		 -> STR_17(6), STR_16(16), STR_15(3), STR_14(13), 
  3899 ;;		 -> STR_13(5), STR_12(3), STR_11(5), STR_10(3), 
  3900 ;;		 -> STR_9(13), STR_8(4), STR_7(9), STR_6(14), 
  3901 ;;		 -> STR_5(12), STR_4(11), STR_3(13), STR_2(17), 
  3902 ;;		 -> STR_1(3), 
  3903 ;;  n               2    4[COMMON] int 
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  1    wreg      void 
  3906 ;; Registers used:
  3907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3913 ;;      Params:         0       0       0       0       0
  3914 ;;      Locals:         3       0       0       0       0
  3915 ;;      Temps:          0       0       0       0       0
  3916 ;;      Totals:         3       0       0       0       0
  3917 ;;Total ram usage:        3 bytes
  3918 ;; Hardware stack levels used:    1
  3919 ;; Hardware stack levels required when called:    2
  3920 ;; This function calls:
  3921 ;;		_LCD_Write_Character
  3922 ;; This function is called by:
  3923 ;;		_display_Datum
  3924 ;;		_mostrarLCD
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           
  3929                           ;psect for function _LCD_Write_String
  3930  08F5                     _LCD_Write_String:	
  3931                           
  3932                           ;incstack = 0
  3933                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3934                           ;LCD_Write_String@a stored from wreg
  3935  08F5  00F6               	movwf	LCD_Write_String@a
  3936                           
  3937                           ;LCD_8bits.c: 74:     int n;;LCD_8bits.c: 75:     for(n = 0; a[n] != '\0'; n++){
  3938  08F6  01F4               	clrf	LCD_Write_String@n
  3939  08F7  01F5               	clrf	LCD_Write_String@n+1
  3940  08F8                     l2754:	
  3941  08F8  0874               	movf	LCD_Write_String@n,w
  3942  08F9  0776               	addwf	LCD_Write_String@a,w
  3943  08FA  0084               	movwf	4
  3944  08FB  120A  118A  2700  120A  158A  	fcall	stringdir
  3945  0900  3A00               	xorlw	0
  3946  0901  1903               	btfsc	3,2
  3947  0902  0008               	return
  3948                           
  3949                           ;LCD_8bits.c: 76:         LCD_Write_Character(a[n]);
  3950  0903  0874               	movf	LCD_Write_String@n,w
  3951  0904  0776               	addwf	LCD_Write_String@a,w
  3952  0905  0084               	movwf	4
  3953  0906  120A  118A  2700  120A  158A  	fcall	stringdir
  3954  090B  120A  158A  200C  120A  158A  	fcall	_LCD_Write_Character
  3955                           
  3956                           ;LCD_8bits.c: 77:     }
  3957  0910  3001               	movlw	1
  3958  0911  07F4               	addwf	LCD_Write_String@n,f
  3959  0912  1803               	skipnc
  3960  0913  0AF5               	incf	LCD_Write_String@n+1,f
  3961  0914  3000               	movlw	0
  3962  0915  07F5               	addwf	LCD_Write_String@n+1,f
  3963  0916  28F8               	goto	l2754
  3964  0917                     __end_of_LCD_Write_String:	
  3965                           
  3966                           	psect	text10
  3967  096F                     __ptext10:	
  3968 ;; *************** function _LCD_Set_Cursor *****************
  3969 ;; Defined at:
  3970 ;;		line 80 in file "LCD_8bits.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;  linea           1    wreg     unsigned char 
  3973 ;;  columna         1    5[COMMON] unsigned char 
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;  linea           1    8[COMMON] unsigned char 
  3976 ;;  corrimiento     1    9[COMMON] unsigned char 
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      void 
  3979 ;; Registers used:
  3980 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3986 ;;      Params:         1       0       0       0       0
  3987 ;;      Locals:         2       0       0       0       0
  3988 ;;      Temps:          2       0       0       0       0
  3989 ;;      Totals:         5       0       0       0       0
  3990 ;;Total ram usage:        5 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; Hardware stack levels required when called:    2
  3993 ;; This function calls:
  3994 ;;		_LCD_Cmd
  3995 ;; This function is called by:
  3996 ;;		_display_Uhrzeit
  3997 ;;		_display_Datum
  3998 ;;		_mostrarLCD
  3999 ;;		_pressBoton2
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           
  4004                           ;psect for function _LCD_Set_Cursor
  4005  096F                     _LCD_Set_Cursor:	
  4006                           
  4007                           ;incstack = 0
  4008                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4009                           ;LCD_Set_Cursor@linea stored from wreg
  4010  096F  00F8               	movwf	LCD_Set_Cursor@linea
  4011                           
  4012                           ;LCD_8bits.c: 82:     switch (linea){
  4013  0970  298A               	goto	l2742
  4014  0971                     l2732:	
  4015                           
  4016                           ;LCD_8bits.c: 84:             corrimiento = 0x80 + columna;
  4017  0971  0875               	movf	LCD_Set_Cursor@columna,w
  4018  0972  3E80               	addlw	128
  4019  0973  00F6               	movwf	??_LCD_Set_Cursor
  4020  0974  0876               	movf	??_LCD_Set_Cursor,w
  4021  0975  00F9               	movwf	LCD_Set_Cursor@corrimiento
  4022                           
  4023                           ;LCD_8bits.c: 85:             LCD_Cmd(corrimiento);
  4024  0976  0879               	movf	LCD_Set_Cursor@corrimiento,w
  4025  0977  120A  158A  219B   	fcall	_LCD_Cmd
  4026                           
  4027                           ;LCD_8bits.c: 86:             break;
  4028  097A  0008               	return
  4029  097B                     l2736:	
  4030                           
  4031                           ;LCD_8bits.c: 88:             corrimiento = 0x80 + 0x40 + columna;
  4032  097B  0875               	movf	LCD_Set_Cursor@columna,w
  4033  097C  3EC0               	addlw	192
  4034  097D  00F6               	movwf	??_LCD_Set_Cursor
  4035  097E  0876               	movf	??_LCD_Set_Cursor,w
  4036  097F  00F9               	movwf	LCD_Set_Cursor@corrimiento
  4037                           
  4038                           ;LCD_8bits.c: 89:             LCD_Cmd(corrimiento);
  4039  0980  0879               	movf	LCD_Set_Cursor@corrimiento,w
  4040  0981  120A  158A  219B   	fcall	_LCD_Cmd
  4041                           
  4042                           ;LCD_8bits.c: 90:             break;
  4043  0984  0008               	return
  4044  0985                     l2740:	
  4045                           
  4046                           ;LCD_8bits.c: 92:             LCD_Cmd(0x80);
  4047  0985  3080               	movlw	128
  4048  0986  120A  158A  219B   	fcall	_LCD_Cmd
  4049                           
  4050                           ;LCD_8bits.c: 93:     }
  4051  0989  0008               	return
  4052  098A                     l2742:	
  4053  098A  0878               	movf	LCD_Set_Cursor@linea,w
  4054  098B  00F6               	movwf	??_LCD_Set_Cursor
  4055  098C  01F7               	clrf	??_LCD_Set_Cursor+1
  4056                           
  4057                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4058                           ; Switch size 1, requested type "simple"
  4059                           ; Number of cases is 1, Range of values is 0 to 0
  4060                           ; switch strategies available:
  4061                           ; Name         Instructions Cycles
  4062                           ; simple_byte            4     3 (average)
  4063                           ; direct_byte           11     8 (fixed)
  4064                           ; jumptable            260     6 (fixed)
  4065                           ;	Chosen strategy is simple_byte
  4066  098D  0877               	movf	??_LCD_Set_Cursor+1,w
  4067  098E  3A00               	xorlw	0	; case 0
  4068  098F  1903               	skipnz
  4069  0990  2992               	goto	l5026
  4070  0991  2985               	goto	l2740
  4071  0992                     l5026:	
  4072                           
  4073                           ; Switch size 1, requested type "simple"
  4074                           ; Number of cases is 2, Range of values is 1 to 2
  4075                           ; switch strategies available:
  4076                           ; Name         Instructions Cycles
  4077                           ; simple_byte            7     4 (average)
  4078                           ; direct_byte           17    11 (fixed)
  4079                           ; jumptable            263     9 (fixed)
  4080                           ;	Chosen strategy is simple_byte
  4081  0992  0876               	movf	??_LCD_Set_Cursor,w
  4082  0993  3A01               	xorlw	1	; case 1
  4083  0994  1903               	skipnz
  4084  0995  2971               	goto	l2732
  4085  0996  3A03               	xorlw	3	; case 2
  4086  0997  1903               	skipnz
  4087  0998  297B               	goto	l2736
  4088  0999  2985               	goto	l2740
  4089  099A  0008               	return
  4090  099B                     __end_of_LCD_Set_Cursor:	
  4091                           
  4092                           	psect	text11
  4093  08BD                     __ptext11:	
  4094 ;; *************** function _inclinacion_ *****************
  4095 ;; Defined at:
  4096 ;;		line 223 in file "main_Master.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;		None
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;		None
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  1    wreg      void 
  4103 ;; Registers used:
  4104 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4110 ;;      Params:         0       0       0       0       0
  4111 ;;      Locals:         0       0       0       0       0
  4112 ;;      Temps:          2       0       0       0       0
  4113 ;;      Totals:         2       0       0       0       0
  4114 ;;Total ram usage:        2 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; Hardware stack levels required when called:    2
  4117 ;; This function calls:
  4118 ;;		_init_ADC
  4119 ;; This function is called by:
  4120 ;;		_main
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           
  4125                           ;psect for function _inclinacion_
  4126  08BD                     _inclinacion_:	
  4127                           
  4128                           ;main_Master.c: 224:     init_ADC(0x07);
  4129                           
  4130                           ;incstack = 0
  4131                           ; Regs used in _inclinacion_: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4132  08BD  3007               	movlw	7
  4133  08BE  120A  158A  23D6  120A  158A  	fcall	_init_ADC
  4134                           
  4135                           ;main_Master.c: 225:     PIR1bits.ADIF = 0;
  4136  08C3  1283               	bcf	3,5	;RP0=0, select bank0
  4137  08C4  1303               	bcf	3,6	;RP1=0, select bank0
  4138  08C5  130C               	bcf	12,6	;volatile
  4139                           
  4140                           ;main_Master.c: 226:     inclinacion = ADRESH;
  4141  08C6  081E               	movf	30,w	;volatile
  4142  08C7  00F5               	movwf	??_inclinacion_
  4143  08C8  0875               	movf	??_inclinacion_,w
  4144  08C9  00D7               	movwf	_inclinacion
  4145                           
  4146                           ;main_Master.c: 227:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4147  08CA  300D               	movlw	13
  4148  08CB  00F6               	movwf	??_inclinacion_+1
  4149  08CC  30FB               	movlw	251
  4150  08CD  00F5               	movwf	??_inclinacion_
  4151  08CE                     u1997:	
  4152  08CE  0BF5               	decfsz	??_inclinacion_,f
  4153  08CF  28CE               	goto	u1997
  4154  08D0  0BF6               	decfsz	??_inclinacion_+1,f
  4155  08D1  28CE               	goto	u1997
  4156  08D2  28D3               	nop2
  4157  08D3  0008               	return
  4158  08D4                     __end_of_inclinacion_:	
  4159                           
  4160                           	psect	text12
  4161  08A6                     __ptext12:	
  4162 ;; *************** function _get_temperatura_obj *****************
  4163 ;; Defined at:
  4164 ;;		line 216 in file "main_Master.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;		None
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;		None
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  1    wreg      void 
  4171 ;; Registers used:
  4172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4178 ;;      Params:         0       0       0       0       0
  4179 ;;      Locals:         0       0       0       0       0
  4180 ;;      Temps:          2       0       0       0       0
  4181 ;;      Totals:         2       0       0       0       0
  4182 ;;Total ram usage:        2 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; Hardware stack levels required when called:    2
  4185 ;; This function calls:
  4186 ;;		_init_ADC
  4187 ;; This function is called by:
  4188 ;;		_main
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           
  4193                           ;psect for function _get_temperatura_obj
  4194  08A6                     _get_temperatura_obj:	
  4195                           
  4196                           ;main_Master.c: 217:     init_ADC(0x06);
  4197                           
  4198                           ;incstack = 0
  4199                           ; Regs used in _get_temperatura_obj: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4200  08A6  3006               	movlw	6
  4201  08A7  120A  158A  23D6  120A  158A  	fcall	_init_ADC
  4202                           
  4203                           ;main_Master.c: 218:     PIR1bits.ADIF = 0;
  4204  08AC  1283               	bcf	3,5	;RP0=0, select bank0
  4205  08AD  1303               	bcf	3,6	;RP1=0, select bank0
  4206  08AE  130C               	bcf	12,6	;volatile
  4207                           
  4208                           ;main_Master.c: 219:     temperatura_obj = ADRESH;
  4209  08AF  081E               	movf	30,w	;volatile
  4210  08B0  00F5               	movwf	??_get_temperatura_obj
  4211  08B1  0875               	movf	??_get_temperatura_obj,w
  4212  08B2  00D0               	movwf	_temperatura_obj
  4213                           
  4214                           ;main_Master.c: 220:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4215  08B3  300D               	movlw	13
  4216  08B4  00F6               	movwf	??_get_temperatura_obj+1
  4217  08B5  30FB               	movlw	251
  4218  08B6  00F5               	movwf	??_get_temperatura_obj
  4219  08B7                     u2007:	
  4220  08B7  0BF5               	decfsz	??_get_temperatura_obj,f
  4221  08B8  28B7               	goto	u2007
  4222  08B9  0BF6               	decfsz	??_get_temperatura_obj+1,f
  4223  08BA  28B7               	goto	u2007
  4224  08BB  28BC               	nop2
  4225  08BC  0008               	return
  4226  08BD                     __end_of_get_temperatura_obj:	
  4227                           
  4228                           	psect	text13
  4229  088F                     __ptext13:	
  4230 ;; *************** function _get_temperatura *****************
  4231 ;; Defined at:
  4232 ;;		line 209 in file "main_Master.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;		None
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;		None
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      void 
  4239 ;; Registers used:
  4240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4246 ;;      Params:         0       0       0       0       0
  4247 ;;      Locals:         0       0       0       0       0
  4248 ;;      Temps:          2       0       0       0       0
  4249 ;;      Totals:         2       0       0       0       0
  4250 ;;Total ram usage:        2 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; Hardware stack levels required when called:    2
  4253 ;; This function calls:
  4254 ;;		_init_ADC
  4255 ;; This function is called by:
  4256 ;;		_main
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           
  4261                           ;psect for function _get_temperatura
  4262  088F                     _get_temperatura:	
  4263                           
  4264                           ;main_Master.c: 210:     init_ADC(0x05);
  4265                           
  4266                           ;incstack = 0
  4267                           ; Regs used in _get_temperatura: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4268  088F  3005               	movlw	5
  4269  0890  120A  158A  23D6  120A  158A  	fcall	_init_ADC
  4270                           
  4271                           ;main_Master.c: 211:     PIR1bits.ADIF = 0;
  4272  0895  1283               	bcf	3,5	;RP0=0, select bank0
  4273  0896  1303               	bcf	3,6	;RP1=0, select bank0
  4274  0897  130C               	bcf	12,6	;volatile
  4275                           
  4276                           ;main_Master.c: 212:     temperatura = ADRESH;
  4277  0898  081E               	movf	30,w	;volatile
  4278  0899  00F5               	movwf	??_get_temperatura
  4279  089A  0875               	movf	??_get_temperatura,w
  4280  089B  00D1               	movwf	_temperatura
  4281                           
  4282                           ;main_Master.c: 213:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4283  089C  300D               	movlw	13
  4284  089D  00F6               	movwf	??_get_temperatura+1
  4285  089E  30FB               	movlw	251
  4286  089F  00F5               	movwf	??_get_temperatura
  4287  08A0                     u2017:	
  4288  08A0  0BF5               	decfsz	??_get_temperatura,f
  4289  08A1  28A0               	goto	u2017
  4290  08A2  0BF6               	decfsz	??_get_temperatura+1,f
  4291  08A3  28A0               	goto	u2017
  4292  08A4  28A5               	nop2
  4293  08A5  0008               	return
  4294  08A6                     __end_of_get_temperatura:	
  4295                           
  4296                           	psect	text14
  4297  0BD6                     __ptext14:	
  4298 ;; *************** function _init_ADC *****************
  4299 ;; Defined at:
  4300 ;;		line 230 in file "main_Master.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;  channel         1    wreg     unsigned char 
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  channel         1    4[COMMON] unsigned char 
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  1    wreg      void 
  4307 ;; Registers used:
  4308 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4314 ;;      Params:         0       0       0       0       0
  4315 ;;      Locals:         1       0       0       0       0
  4316 ;;      Temps:          2       0       0       0       0
  4317 ;;      Totals:         3       0       0       0       0
  4318 ;;Total ram usage:        3 bytes
  4319 ;; Hardware stack levels used:    1
  4320 ;; Hardware stack levels required when called:    1
  4321 ;; This function calls:
  4322 ;;		Nothing
  4323 ;; This function is called by:
  4324 ;;		_get_temperatura
  4325 ;;		_get_temperatura_obj
  4326 ;;		_inclinacion_
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           
  4331                           ;psect for function _init_ADC
  4332  0BD6                     _init_ADC:	
  4333                           
  4334                           ;incstack = 0
  4335                           ; Regs used in _init_ADC: [wreg-fsr0h+status,2+status,0]
  4336                           ;init_ADC@channel stored from wreg
  4337  0BD6  00F4               	movwf	init_ADC@channel
  4338                           
  4339                           ;main_Master.c: 231:     ADCON0bits.ADCS1 = 0;
  4340  0BD7  1283               	bcf	3,5	;RP0=0, select bank0
  4341  0BD8  1303               	bcf	3,6	;RP1=0, select bank0
  4342  0BD9  139F               	bcf	31,7	;volatile
  4343                           
  4344                           ;main_Master.c: 232:     ADCON0bits.ADCS0 = 1;
  4345  0BDA  171F               	bsf	31,6	;volatile
  4346                           
  4347                           ;main_Master.c: 235:     switch(channel){
  4348  0BDB  2C0B               	goto	l2990
  4349  0BDC                     l171:	
  4350                           ;main_Master.c: 236:         case 0:
  4351                           
  4352  0BDC  2C06               	goto	l188
  4353  0BDD                     l173:	
  4354                           ;main_Master.c: 242:         case 1:
  4355                           
  4356                           ;main_Master.c: 241:             break;
  4357                           
  4358                           ;main_Master.c: 240:             ADCON0bits.CHS0 = 0;
  4359                           
  4360                           ;main_Master.c: 239:             ADCON0bits.CHS1 = 0;
  4361                           
  4362                           ;main_Master.c: 238:             ADCON0bits.CHS2 = 0;
  4363                           
  4364                           ;main_Master.c: 237:             ADCON0bits.CHS3 = 0;
  4365                           
  4366                           
  4367                           ;main_Master.c: 243:             ADCON0bits.CHS3 = 0;
  4368  0BDD  129F               	bcf	31,5	;volatile
  4369  0BDE  2BEE               	goto	L39
  4370  0BDF                     l174:	
  4371                           ;main_Master.c: 248:         case 2:
  4372                           
  4373                           ;main_Master.c: 247:             break;
  4374                           
  4375                           ;main_Master.c: 246:             ADCON0bits.CHS0 = 1;
  4376                           
  4377                           ;main_Master.c: 245:             ADCON0bits.CHS1 = 0;
  4378                           
  4379                           ;main_Master.c: 244:             ADCON0bits.CHS2 = 0;
  4380                           
  4381                           
  4382                           ;main_Master.c: 249:             ADCON0bits.CHS3 = 0;
  4383  0BDF  129F               	bcf	31,5	;volatile
  4384  0BE0  2BF1               	goto	L40
  4385  0BE1                     l175:	
  4386                           ;main_Master.c: 254:         case 3:
  4387                           
  4388                           ;main_Master.c: 253:             break;
  4389                           
  4390                           ;main_Master.c: 252:             ADCON0bits.CHS0 = 0;
  4391                           
  4392                           ;main_Master.c: 251:             ADCON0bits.CHS1 = 1;
  4393                           
  4394                           ;main_Master.c: 250:             ADCON0bits.CHS2 = 0;
  4395                           
  4396                           
  4397                           ;main_Master.c: 255:             ADCON0bits.CHS3 = 0;
  4398  0BE1  129F               	bcf	31,5	;volatile
  4399  0BE2  2BF4               	goto	L35
  4400  0BE3                     l176:	
  4401                           ;main_Master.c: 260:         case 4:
  4402                           
  4403                           ;main_Master.c: 259:             break;
  4404                           
  4405                           ;main_Master.c: 258:             ADCON0bits.CHS0 = 1;
  4406                           
  4407                           ;main_Master.c: 257:             ADCON0bits.CHS1 = 1;
  4408                           
  4409                           ;main_Master.c: 256:             ADCON0bits.CHS2 = 0;
  4410                           
  4411                           
  4412                           ;main_Master.c: 261:             ADCON0bits.CHS3 = 0;
  4413  0BE3  129F               	bcf	31,5	;volatile
  4414  0BE4  2BF7               	goto	L36
  4415  0BE5                     l177:	
  4416                           ;main_Master.c: 266:         case 5:
  4417                           
  4418                           ;main_Master.c: 265:             break;
  4419                           
  4420                           ;main_Master.c: 264:             ADCON0bits.CHS0 = 0;
  4421                           
  4422                           ;main_Master.c: 263:             ADCON0bits.CHS1 = 0;
  4423                           
  4424                           ;main_Master.c: 262:             ADCON0bits.CHS2 = 1;
  4425                           
  4426                           
  4427                           ;main_Master.c: 267:             ADCON0bits.CHS3 = 0;
  4428  0BE5  129F               	bcf	31,5	;volatile
  4429  0BE6  2BFA               	goto	L37
  4430  0BE7                     l178:	
  4431                           ;main_Master.c: 272:         case 6:
  4432                           
  4433                           ;main_Master.c: 271:             break;
  4434                           
  4435                           ;main_Master.c: 270:             ADCON0bits.CHS0 = 1;
  4436                           
  4437                           ;main_Master.c: 269:             ADCON0bits.CHS1 = 0;
  4438                           
  4439                           ;main_Master.c: 268:             ADCON0bits.CHS2 = 1;
  4440                           
  4441                           
  4442                           ;main_Master.c: 273:             ADCON0bits.CHS3 = 0;
  4443  0BE7  129F               	bcf	31,5	;volatile
  4444  0BE8  2BFE               	goto	L38
  4445  0BE9                     l179:	
  4446                           ;main_Master.c: 278:         case 7:
  4447                           
  4448                           ;main_Master.c: 277:             break;
  4449                           
  4450                           ;main_Master.c: 276:             ADCON0bits.CHS0 = 0;
  4451                           
  4452                           ;main_Master.c: 275:             ADCON0bits.CHS1 = 1;
  4453                           
  4454                           ;main_Master.c: 274:             ADCON0bits.CHS2 = 1;
  4455                           
  4456                           
  4457                           ;main_Master.c: 279:             ADCON0bits.CHS3 = 0;
  4458  0BE9  129F               	bcf	31,5	;volatile
  4459  0BEA  2C02               	goto	L25
  4460  0BEB                     l180:	
  4461                           ;main_Master.c: 284:         case 8:
  4462                           
  4463                           ;main_Master.c: 283:             break;
  4464                           
  4465                           ;main_Master.c: 282:             ADCON0bits.CHS0 = 1;
  4466                           
  4467                           ;main_Master.c: 281:             ADCON0bits.CHS1 = 1;
  4468                           
  4469                           ;main_Master.c: 280:             ADCON0bits.CHS2 = 1;
  4470                           
  4471                           
  4472                           ;main_Master.c: 285:             ADCON0bits.CHS3 = 1;
  4473  0BEB  169F               	bsf	31,5	;volatile
  4474  0BEC  2C07               	goto	L26
  4475  0BED                     l181:	
  4476                           ;main_Master.c: 290:         case 9:
  4477                           
  4478                           ;main_Master.c: 289:             break;
  4479                           
  4480                           ;main_Master.c: 288:             ADCON0bits.CHS0 = 0;
  4481                           
  4482                           ;main_Master.c: 287:             ADCON0bits.CHS1 = 0;
  4483                           
  4484                           ;main_Master.c: 286:             ADCON0bits.CHS2 = 0;
  4485                           
  4486                           
  4487                           ;main_Master.c: 291:             ADCON0bits.CHS3 = 1;
  4488  0BED  169F               	bsf	31,5	;volatile
  4489  0BEE                     L39:	
  4490                           
  4491                           ;main_Master.c: 292:             ADCON0bits.CHS2 = 0;
  4492  0BEE  121F               	bcf	31,4	;volatile
  4493  0BEF  2BFB               	goto	L33
  4494  0BF0                     l182:	
  4495                           ;main_Master.c: 296:         case 10:
  4496                           
  4497                           ;main_Master.c: 295:             break;
  4498                           
  4499                           ;main_Master.c: 294:             ADCON0bits.CHS0 = 1;
  4500                           
  4501                           ;main_Master.c: 293:             ADCON0bits.CHS1 = 0;
  4502                           
  4503                           
  4504                           ;main_Master.c: 297:             ADCON0bits.CHS3 = 1;
  4505  0BF0  169F               	bsf	31,5	;volatile
  4506  0BF1                     L40:	
  4507                           
  4508                           ;main_Master.c: 298:             ADCON0bits.CHS2 = 0;
  4509  0BF1  121F               	bcf	31,4	;volatile
  4510  0BF2  2BFF               	goto	L34
  4511  0BF3                     l183:	
  4512                           ;main_Master.c: 302:         case 11:
  4513                           
  4514                           ;main_Master.c: 301:             break;
  4515                           
  4516                           ;main_Master.c: 300:             ADCON0bits.CHS0 = 0;
  4517                           
  4518                           ;main_Master.c: 299:             ADCON0bits.CHS1 = 1;
  4519                           
  4520                           
  4521                           ;main_Master.c: 303:             ADCON0bits.CHS3 = 1;
  4522  0BF3  169F               	bsf	31,5	;volatile
  4523  0BF4                     L35:	
  4524                           
  4525                           ;main_Master.c: 304:             ADCON0bits.CHS2 = 0;
  4526  0BF4  121F               	bcf	31,4	;volatile
  4527  0BF5  2C03               	goto	L27
  4528  0BF6                     l184:	
  4529                           ;main_Master.c: 308:         case 12:
  4530                           
  4531                           ;main_Master.c: 307:             break;
  4532                           
  4533                           ;main_Master.c: 306:             ADCON0bits.CHS0 = 1;
  4534                           
  4535                           ;main_Master.c: 305:             ADCON0bits.CHS1 = 1;
  4536                           
  4537                           
  4538                           ;main_Master.c: 309:             ADCON0bits.CHS3 = 1;
  4539  0BF6  169F               	bsf	31,5	;volatile
  4540  0BF7                     L36:	
  4541                           
  4542                           ;main_Master.c: 310:             ADCON0bits.CHS2 = 1;
  4543  0BF7  161F               	bsf	31,4	;volatile
  4544  0BF8  2C08               	goto	L28
  4545  0BF9                     l185:	
  4546                           ;main_Master.c: 314:         case 13:
  4547                           
  4548                           ;main_Master.c: 313:             break;
  4549                           
  4550                           ;main_Master.c: 312:             ADCON0bits.CHS0 = 0;
  4551                           
  4552                           ;main_Master.c: 311:             ADCON0bits.CHS1 = 0;
  4553                           
  4554                           
  4555                           ;main_Master.c: 315:             ADCON0bits.CHS3 = 1;
  4556  0BF9  169F               	bsf	31,5	;volatile
  4557  0BFA                     L37:	
  4558                           
  4559                           ;main_Master.c: 316:             ADCON0bits.CHS2 = 1;
  4560  0BFA  161F               	bsf	31,4	;volatile
  4561  0BFB                     L33:	
  4562                           
  4563                           ;main_Master.c: 317:             ADCON0bits.CHS1 = 0;
  4564  0BFB  119F               	bcf	31,3	;volatile
  4565  0BFC  2C04               	goto	L23
  4566  0BFD                     l186:	
  4567                           ;main_Master.c: 320:         case 14:
  4568                           
  4569                           ;main_Master.c: 319:             break;
  4570                           
  4571                           ;main_Master.c: 318:             ADCON0bits.CHS0 = 1;
  4572                           
  4573                           
  4574                           ;main_Master.c: 321:             ADCON0bits.CHS3 = 1;
  4575  0BFD  169F               	bsf	31,5	;volatile
  4576  0BFE                     L38:	
  4577                           
  4578                           ;main_Master.c: 322:             ADCON0bits.CHS2 = 1;
  4579  0BFE  161F               	bsf	31,4	;volatile
  4580  0BFF                     L34:	
  4581                           
  4582                           ;main_Master.c: 323:             ADCON0bits.CHS1 = 1;
  4583  0BFF  159F               	bsf	31,3	;volatile
  4584  0C00  2C09               	goto	L24
  4585  0C01                     l187:	
  4586                           ;main_Master.c: 326:         case 15:
  4587                           
  4588                           ;main_Master.c: 325:             break;
  4589                           
  4590                           ;main_Master.c: 324:             ADCON0bits.CHS0 = 0;
  4591                           
  4592                           
  4593                           ;main_Master.c: 327:             ADCON0bits.CHS3 = 1;
  4594  0C01  169F               	bsf	31,5	;volatile
  4595  0C02                     L25:	
  4596                           
  4597                           ;main_Master.c: 328:             ADCON0bits.CHS2 = 1;
  4598  0C02  161F               	bsf	31,4	;volatile
  4599  0C03                     L27:	
  4600                           
  4601                           ;main_Master.c: 329:             ADCON0bits.CHS1 = 1;
  4602  0C03  159F               	bsf	31,3	;volatile
  4603  0C04                     L23:	
  4604                           
  4605                           ;main_Master.c: 330:             ADCON0bits.CHS0 = 1;
  4606  0C04  151F               	bsf	31,2	;volatile
  4607                           
  4608                           ;main_Master.c: 331:             break;
  4609  0C05  2C45               	goto	l172
  4610  0C06                     l188:	
  4611                           ;main_Master.c: 332:         default:
  4612                           
  4613                           
  4614                           ;main_Master.c: 333:             ADCON0bits.CHS3 = 0;
  4615  0C06  129F               	bcf	31,5	;volatile
  4616  0C07                     L26:	
  4617                           
  4618                           ;main_Master.c: 334:             ADCON0bits.CHS2 = 0;
  4619  0C07  121F               	bcf	31,4	;volatile
  4620  0C08                     L28:	
  4621                           
  4622                           ;main_Master.c: 335:             ADCON0bits.CHS1 = 0;
  4623  0C08  119F               	bcf	31,3	;volatile
  4624  0C09                     L24:	
  4625                           
  4626                           ;main_Master.c: 336:             ADCON0bits.CHS0 = 0;
  4627  0C09  111F               	bcf	31,2	;volatile
  4628                           
  4629                           ;main_Master.c: 337:             break;
  4630  0C0A  2C45               	goto	l172
  4631  0C0B                     l2990:	
  4632  0C0B  0874               	movf	init_ADC@channel,w
  4633  0C0C  00F2               	movwf	??_init_ADC
  4634  0C0D  01F3               	clrf	??_init_ADC+1
  4635                           
  4636                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4637                           ; Switch size 1, requested type "simple"
  4638                           ; Number of cases is 1, Range of values is 0 to 0
  4639                           ; switch strategies available:
  4640                           ; Name         Instructions Cycles
  4641                           ; simple_byte            4     3 (average)
  4642                           ; direct_byte           11     8 (fixed)
  4643                           ; jumptable            260     6 (fixed)
  4644                           ;	Chosen strategy is simple_byte
  4645  0C0E  0873               	movf	??_init_ADC+1,w
  4646  0C0F  3A00               	xorlw	0	; case 0
  4647  0C10  1903               	skipnz
  4648  0C11  2C13               	goto	l5028
  4649  0C12  2C06               	goto	l188
  4650  0C13                     l5028:	
  4651                           
  4652                           ; Switch size 1, requested type "simple"
  4653                           ; Number of cases is 16, Range of values is 0 to 15
  4654                           ; switch strategies available:
  4655                           ; Name         Instructions Cycles
  4656                           ; simple_byte           49    25 (average)
  4657                           ; direct_byte           56     8 (fixed)
  4658                           ; jumptable            260     6 (fixed)
  4659                           ;	Chosen strategy is simple_byte
  4660  0C13  0872               	movf	??_init_ADC,w
  4661  0C14  3A00               	xorlw	0	; case 0
  4662  0C15  1903               	skipnz
  4663  0C16  2BDC               	goto	l171
  4664  0C17  3A01               	xorlw	1	; case 1
  4665  0C18  1903               	skipnz
  4666  0C19  2BDD               	goto	l173
  4667  0C1A  3A03               	xorlw	3	; case 2
  4668  0C1B  1903               	skipnz
  4669  0C1C  2BDF               	goto	l174
  4670  0C1D  3A01               	xorlw	1	; case 3
  4671  0C1E  1903               	skipnz
  4672  0C1F  2BE1               	goto	l175
  4673  0C20  3A07               	xorlw	7	; case 4
  4674  0C21  1903               	skipnz
  4675  0C22  2BE3               	goto	l176
  4676  0C23  3A01               	xorlw	1	; case 5
  4677  0C24  1903               	skipnz
  4678  0C25  2BE5               	goto	l177
  4679  0C26  3A03               	xorlw	3	; case 6
  4680  0C27  1903               	skipnz
  4681  0C28  2BE7               	goto	l178
  4682  0C29  3A01               	xorlw	1	; case 7
  4683  0C2A  1903               	skipnz
  4684  0C2B  2BE9               	goto	l179
  4685  0C2C  3A0F               	xorlw	15	; case 8
  4686  0C2D  1903               	skipnz
  4687  0C2E  2BEB               	goto	l180
  4688  0C2F  3A01               	xorlw	1	; case 9
  4689  0C30  1903               	skipnz
  4690  0C31  2BED               	goto	l181
  4691  0C32  3A03               	xorlw	3	; case 10
  4692  0C33  1903               	skipnz
  4693  0C34  2BF0               	goto	l182
  4694  0C35  3A01               	xorlw	1	; case 11
  4695  0C36  1903               	skipnz
  4696  0C37  2BF3               	goto	l183
  4697  0C38  3A07               	xorlw	7	; case 12
  4698  0C39  1903               	skipnz
  4699  0C3A  2BF6               	goto	l184
  4700  0C3B  3A01               	xorlw	1	; case 13
  4701  0C3C  1903               	skipnz
  4702  0C3D  2BF9               	goto	l185
  4703  0C3E  3A03               	xorlw	3	; case 14
  4704  0C3F  1903               	skipnz
  4705  0C40  2BFD               	goto	l186
  4706  0C41  3A01               	xorlw	1	; case 15
  4707  0C42  1903               	skipnz
  4708  0C43  2C01               	goto	l187
  4709  0C44  2C06               	goto	l188
  4710  0C45                     l172:	
  4711                           
  4712                           ;main_Master.c: 340:     ADCON1bits.ADFM = 0;
  4713  0C45  1683               	bsf	3,5	;RP0=1, select bank1
  4714  0C46  1303               	bcf	3,6	;RP1=0, select bank1
  4715  0C47  139F               	bcf	31,7	;volatile
  4716                           
  4717                           ;main_Master.c: 341:     ADCON1bits.VCFG1 = 0;
  4718  0C48  129F               	bcf	31,5	;volatile
  4719                           
  4720                           ;main_Master.c: 342:     ADCON1bits.VCFG0 = 0;
  4721  0C49  121F               	bcf	31,4	;volatile
  4722                           
  4723                           ;main_Master.c: 343:     ADCON0bits.ADON = 1;
  4724  0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  4725  0C4B  1303               	bcf	3,6	;RP1=0, select bank0
  4726  0C4C  141F               	bsf	31,0	;volatile
  4727                           
  4728                           ;main_Master.c: 345:     PIR1bits.ADIF = 0;
  4729  0C4D  130C               	bcf	12,6	;volatile
  4730                           
  4731                           ;main_Master.c: 347:     ADCON0bits.GO = 1;
  4732  0C4E  149F               	bsf	31,1	;volatile
  4733  0C4F                     l189:	
  4734                           ;main_Master.c: 349:     }
  4735                           
  4736                           
  4737                           ;main_Master.c: 348:     while(ADCON0bits.GO == 1){
  4738  0C4F  1C9F               	btfss	31,1	;volatile
  4739  0C50  0008               	return
  4740  0C51  2C4F               	goto	l189
  4741  0C52                     __end_of_init_ADC:	
  4742                           
  4743                           	psect	text15
  4744  0358                     __ptext15:	
  4745 ;; *************** function _get_Time *****************
  4746 ;; Defined at:
  4747 ;;		line 78 in file "RTC.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;		None
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;		None
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  1    wreg      void 
  4754 ;; Registers used:
  4755 ;;		wreg, status,2, status,0, pclath, cstack
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4761 ;;      Params:         0       0       0       0       0
  4762 ;;      Locals:         0       0       0       0       0
  4763 ;;      Temps:          0       1       0       0       0
  4764 ;;      Totals:         0       1       0       0       0
  4765 ;;Total ram usage:        1 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; Hardware stack levels required when called:    3
  4768 ;; This function calls:
  4769 ;;		_BCD_a_DEC
  4770 ;;		_I2C_Master_Read
  4771 ;;		_I2C_Master_Start
  4772 ;;		_I2C_Master_Stop
  4773 ;;		_I2C_Master_Write
  4774 ;; This function is called by:
  4775 ;;		_main
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           
  4780                           ;psect for function _get_Time
  4781  0358                     _get_Time:	
  4782                           
  4783                           ;RTC.c: 79:     I2C_Master_Start();
  4784                           
  4785                           ;incstack = 0
  4786                           ; Regs used in _get_Time: [wreg+status,2+status,0+pclath+cstack]
  4787  0358  160A  118A  27E2  120A  118A  	fcall	_I2C_Master_Start
  4788                           
  4789                           ;RTC.c: 80:     I2C_Master_Write(0xD0);
  4790  035D  30D0               	movlw	208
  4791  035E  1283               	bcf	3,5	;RP0=0, select bank0
  4792  035F  1303               	bcf	3,6	;RP1=0, select bank0
  4793  0360  00AD               	movwf	I2C_Master_Write@d
  4794  0361  3000               	movlw	0
  4795  0362  00AE               	movwf	I2C_Master_Write@d+1
  4796  0363  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  4797                           
  4798                           ;RTC.c: 81:     I2C_Master_Write(0);
  4799  0368  3000               	movlw	0
  4800  0369  1283               	bcf	3,5	;RP0=0, select bank0
  4801  036A  1303               	bcf	3,6	;RP1=0, select bank0
  4802  036B  00AD               	movwf	I2C_Master_Write@d
  4803  036C  00AE               	movwf	I2C_Master_Write@d+1
  4804  036D  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  4805                           
  4806                           ;RTC.c: 82:     I2C_Master_Stop();
  4807  0372  160A  118A  27E9  120A  118A  	fcall	_I2C_Master_Stop
  4808                           
  4809                           ;RTC.c: 83:     I2C_Master_Start();
  4810  0377  160A  118A  27E2  120A  118A  	fcall	_I2C_Master_Start
  4811                           
  4812                           ;RTC.c: 84:     I2C_Master_Write(0xD1);
  4813  037C  30D1               	movlw	209
  4814  037D  1283               	bcf	3,5	;RP0=0, select bank0
  4815  037E  1303               	bcf	3,6	;RP1=0, select bank0
  4816  037F  00AD               	movwf	I2C_Master_Write@d
  4817  0380  3000               	movlw	0
  4818  0381  00AE               	movwf	I2C_Master_Write@d+1
  4819  0382  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  4820                           
  4821                           ;RTC.c: 85:     seg = BCD_a_DEC(I2C_Master_Read(0));
  4822  0387  3000               	movlw	0
  4823  0388  00F2               	movwf	I2C_Master_Read@a
  4824  0389  00F3               	movwf	I2C_Master_Read@a+1
  4825  038A  120A  158A  2143  120A  118A  	fcall	_I2C_Master_Read
  4826  038F  0872               	movf	?_I2C_Master_Read,w
  4827  0390  120A  158A  2079  120A  118A  	fcall	_BCD_a_DEC
  4828  0395  1283               	bcf	3,5	;RP0=0, select bank0
  4829  0396  1303               	bcf	3,6	;RP1=0, select bank0
  4830  0397  00AF               	movwf	??_get_Time
  4831  0398  082F               	movf	??_get_Time,w
  4832  0399  00D3               	movwf	_seg
  4833                           
  4834                           ;RTC.c: 86:     I2C_Master_Stop();
  4835  039A  160A  118A  27E9  120A  118A  	fcall	_I2C_Master_Stop
  4836                           
  4837                           ;RTC.c: 88:     I2C_Master_Start();
  4838  039F  160A  118A  27E2  120A  118A  	fcall	_I2C_Master_Start
  4839                           
  4840                           ;RTC.c: 89:     I2C_Master_Write(0xD0);
  4841  03A4  30D0               	movlw	208
  4842  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  4843  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  4844  03A7  00AD               	movwf	I2C_Master_Write@d
  4845  03A8  3000               	movlw	0
  4846  03A9  00AE               	movwf	I2C_Master_Write@d+1
  4847  03AA  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  4848                           
  4849                           ;RTC.c: 90:     I2C_Master_Write(1);
  4850  03AF  3001               	movlw	1
  4851  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  4852  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  4853  03B2  00AD               	movwf	I2C_Master_Write@d
  4854  03B3  3000               	movlw	0
  4855  03B4  00AE               	movwf	I2C_Master_Write@d+1
  4856  03B5  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  4857                           
  4858                           ;RTC.c: 91:     I2C_Master_Stop();
  4859  03BA  160A  118A  27E9  120A  118A  	fcall	_I2C_Master_Stop
  4860                           
  4861                           ;RTC.c: 92:     I2C_Master_Start();
  4862  03BF  160A  118A  27E2  120A  118A  	fcall	_I2C_Master_Start
  4863                           
  4864                           ;RTC.c: 93:     I2C_Master_Write(0xD1);
  4865  03C4  30D1               	movlw	209
  4866  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  4867  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  4868  03C7  00AD               	movwf	I2C_Master_Write@d
  4869  03C8  3000               	movlw	0
  4870  03C9  00AE               	movwf	I2C_Master_Write@d+1
  4871  03CA  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  4872                           
  4873                           ;RTC.c: 94:     min = BCD_a_DEC(I2C_Master_Read(0));
  4874  03CF  3000               	movlw	0
  4875  03D0  00F2               	movwf	I2C_Master_Read@a
  4876  03D1  00F3               	movwf	I2C_Master_Read@a+1
  4877  03D2  120A  158A  2143  120A  118A  	fcall	_I2C_Master_Read
  4878  03D7  0872               	movf	?_I2C_Master_Read,w
  4879  03D8  120A  158A  2079  120A  118A  	fcall	_BCD_a_DEC
  4880  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  4881  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  4882  03DF  00AF               	movwf	??_get_Time
  4883  03E0  082F               	movf	??_get_Time,w
  4884  03E1  00DE               	movwf	_min
  4885                           
  4886                           ;RTC.c: 95:     I2C_Master_Stop();
  4887  03E2  160A  118A  27E9  120A  118A  	fcall	_I2C_Master_Stop
  4888                           
  4889                           ;RTC.c: 97:     I2C_Master_Start();
  4890  03E7  160A  118A  27E2  120A  118A  	fcall	_I2C_Master_Start
  4891                           
  4892                           ;RTC.c: 98:     I2C_Master_Write(0xD0);
  4893  03EC  30D0               	movlw	208
  4894  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  4895  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  4896  03EF  00AD               	movwf	I2C_Master_Write@d
  4897  03F0  3000               	movlw	0
  4898  03F1  00AE               	movwf	I2C_Master_Write@d+1
  4899  03F2  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  4900                           
  4901                           ;RTC.c: 99:     I2C_Master_Write(2);
  4902  03F7  3002               	movlw	2
  4903  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  4904  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  4905  03FA  00AD               	movwf	I2C_Master_Write@d
  4906  03FB  3000               	movlw	0
  4907  03FC  00AE               	movwf	I2C_Master_Write@d+1
  4908  03FD  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  4909                           
  4910                           ;RTC.c: 100:     I2C_Master_Stop();
  4911  0402  160A  118A  27E9  120A  118A  	fcall	_I2C_Master_Stop
  4912                           
  4913                           ;RTC.c: 101:     I2C_Master_Start();
  4914  0407  160A  118A  27E2  120A  118A  	fcall	_I2C_Master_Start
  4915                           
  4916                           ;RTC.c: 102:     I2C_Master_Write(0xD1);
  4917  040C  30D1               	movlw	209
  4918  040D  1283               	bcf	3,5	;RP0=0, select bank0
  4919  040E  1303               	bcf	3,6	;RP1=0, select bank0
  4920  040F  00AD               	movwf	I2C_Master_Write@d
  4921  0410  3000               	movlw	0
  4922  0411  00AE               	movwf	I2C_Master_Write@d+1
  4923  0412  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  4924                           
  4925                           ;RTC.c: 103:     hora = BCD_a_DEC(I2C_Master_Read(0));
  4926  0417  3000               	movlw	0
  4927  0418  00F2               	movwf	I2C_Master_Read@a
  4928  0419  00F3               	movwf	I2C_Master_Read@a+1
  4929  041A  120A  158A  2143  120A  118A  	fcall	_I2C_Master_Read
  4930  041F  0872               	movf	?_I2C_Master_Read,w
  4931  0420  120A  158A  2079  120A  118A  	fcall	_BCD_a_DEC
  4932  0425  1283               	bcf	3,5	;RP0=0, select bank0
  4933  0426  1303               	bcf	3,6	;RP1=0, select bank0
  4934  0427  00AF               	movwf	??_get_Time
  4935  0428  082F               	movf	??_get_Time,w
  4936  0429  00DD               	movwf	_hora
  4937                           
  4938                           ;RTC.c: 104:     I2C_Master_Stop();
  4939  042A  160A  118A  27E9  120A  118A  	fcall	_I2C_Master_Stop
  4940                           
  4941                           ;RTC.c: 107:     I2C_Master_Start();
  4942  042F  160A  118A  27E2  120A  118A  	fcall	_I2C_Master_Start
  4943                           
  4944                           ;RTC.c: 108:     I2C_Master_Write(0xD0);
  4945  0434  30D0               	movlw	208
  4946  0435  1283               	bcf	3,5	;RP0=0, select bank0
  4947  0436  1303               	bcf	3,6	;RP1=0, select bank0
  4948  0437  00AD               	movwf	I2C_Master_Write@d
  4949  0438  3000               	movlw	0
  4950  0439  00AE               	movwf	I2C_Master_Write@d+1
  4951  043A  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  4952                           
  4953                           ;RTC.c: 109:     I2C_Master_Write(3);
  4954  043F  3003               	movlw	3
  4955  0440  1283               	bcf	3,5	;RP0=0, select bank0
  4956  0441  1303               	bcf	3,6	;RP1=0, select bank0
  4957  0442  00AD               	movwf	I2C_Master_Write@d
  4958  0443  3000               	movlw	0
  4959  0444  00AE               	movwf	I2C_Master_Write@d+1
  4960  0445  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  4961                           
  4962                           ;RTC.c: 110:     I2C_Master_Stop();
  4963  044A  160A  118A  27E9  120A  118A  	fcall	_I2C_Master_Stop
  4964                           
  4965                           ;RTC.c: 111:     I2C_Master_Start();
  4966  044F  160A  118A  27E2  120A  118A  	fcall	_I2C_Master_Start
  4967                           
  4968                           ;RTC.c: 112:     I2C_Master_Write(0xD1);
  4969  0454  30D1               	movlw	209
  4970  0455  1283               	bcf	3,5	;RP0=0, select bank0
  4971  0456  1303               	bcf	3,6	;RP1=0, select bank0
  4972  0457  00AD               	movwf	I2C_Master_Write@d
  4973  0458  3000               	movlw	0
  4974  0459  00AE               	movwf	I2C_Master_Write@d+1
  4975  045A  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  4976                           
  4977                           ;RTC.c: 113:     dia = BCD_a_DEC(I2C_Master_Read(0));
  4978  045F  3000               	movlw	0
  4979  0460  00F2               	movwf	I2C_Master_Read@a
  4980  0461  00F3               	movwf	I2C_Master_Read@a+1
  4981  0462  120A  158A  2143  120A  118A  	fcall	_I2C_Master_Read
  4982  0467  0872               	movf	?_I2C_Master_Read,w
  4983  0468  120A  158A  2079  120A  118A  	fcall	_BCD_a_DEC
  4984  046D  1283               	bcf	3,5	;RP0=0, select bank0
  4985  046E  1303               	bcf	3,6	;RP1=0, select bank0
  4986  046F  00AF               	movwf	??_get_Time
  4987  0470  082F               	movf	??_get_Time,w
  4988  0471  00DC               	movwf	_dia
  4989                           
  4990                           ;RTC.c: 114:     I2C_Master_Stop();
  4991  0472  160A  118A  27E9  120A  118A  	fcall	_I2C_Master_Stop
  4992                           
  4993                           ;RTC.c: 116:     I2C_Master_Start();
  4994  0477  160A  118A  27E2  120A  118A  	fcall	_I2C_Master_Start
  4995                           
  4996                           ;RTC.c: 117:     I2C_Master_Write(0xD0);
  4997  047C  30D0               	movlw	208
  4998  047D  1283               	bcf	3,5	;RP0=0, select bank0
  4999  047E  1303               	bcf	3,6	;RP1=0, select bank0
  5000  047F  00AD               	movwf	I2C_Master_Write@d
  5001  0480  3000               	movlw	0
  5002  0481  00AE               	movwf	I2C_Master_Write@d+1
  5003  0482  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  5004                           
  5005                           ;RTC.c: 118:     I2C_Master_Write(4);
  5006  0487  3004               	movlw	4
  5007  0488  1283               	bcf	3,5	;RP0=0, select bank0
  5008  0489  1303               	bcf	3,6	;RP1=0, select bank0
  5009  048A  00AD               	movwf	I2C_Master_Write@d
  5010  048B  3000               	movlw	0
  5011  048C  00AE               	movwf	I2C_Master_Write@d+1
  5012  048D  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  5013                           
  5014                           ;RTC.c: 119:     I2C_Master_Stop();
  5015  0492  160A  118A  27E9  120A  118A  	fcall	_I2C_Master_Stop
  5016                           
  5017                           ;RTC.c: 120:     I2C_Master_Start();
  5018  0497  160A  118A  27E2  120A  118A  	fcall	_I2C_Master_Start
  5019                           
  5020                           ;RTC.c: 121:     I2C_Master_Write(0xD1);
  5021  049C  30D1               	movlw	209
  5022  049D  1283               	bcf	3,5	;RP0=0, select bank0
  5023  049E  1303               	bcf	3,6	;RP1=0, select bank0
  5024  049F  00AD               	movwf	I2C_Master_Write@d
  5025  04A0  3000               	movlw	0
  5026  04A1  00AE               	movwf	I2C_Master_Write@d+1
  5027  04A2  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  5028                           
  5029                           ;RTC.c: 122:     datum = BCD_a_DEC(I2C_Master_Read(0));
  5030  04A7  3000               	movlw	0
  5031  04A8  00F2               	movwf	I2C_Master_Read@a
  5032  04A9  00F3               	movwf	I2C_Master_Read@a+1
  5033  04AA  120A  158A  2143  120A  118A  	fcall	_I2C_Master_Read
  5034  04AF  0872               	movf	?_I2C_Master_Read,w
  5035  04B0  120A  158A  2079  120A  118A  	fcall	_BCD_a_DEC
  5036  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  5037  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  5038  04B7  00AF               	movwf	??_get_Time
  5039  04B8  082F               	movf	??_get_Time,w
  5040  04B9  00DB               	movwf	_datum
  5041                           
  5042                           ;RTC.c: 123:     I2C_Master_Stop();
  5043  04BA  160A  118A  27E9  120A  118A  	fcall	_I2C_Master_Stop
  5044                           
  5045                           ;RTC.c: 125:     I2C_Master_Start();
  5046  04BF  160A  118A  27E2  120A  118A  	fcall	_I2C_Master_Start
  5047                           
  5048                           ;RTC.c: 126:     I2C_Master_Write(0xD0);
  5049  04C4  30D0               	movlw	208
  5050  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  5051  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  5052  04C7  00AD               	movwf	I2C_Master_Write@d
  5053  04C8  3000               	movlw	0
  5054  04C9  00AE               	movwf	I2C_Master_Write@d+1
  5055  04CA  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  5056                           
  5057                           ;RTC.c: 127:     I2C_Master_Write(5);
  5058  04CF  3005               	movlw	5
  5059  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  5060  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  5061  04D2  00AD               	movwf	I2C_Master_Write@d
  5062  04D3  3000               	movlw	0
  5063  04D4  00AE               	movwf	I2C_Master_Write@d+1
  5064  04D5  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  5065                           
  5066                           ;RTC.c: 128:     I2C_Master_Stop();
  5067  04DA  160A  118A  27E9  120A  118A  	fcall	_I2C_Master_Stop
  5068                           
  5069                           ;RTC.c: 129:     I2C_Master_Start();
  5070  04DF  160A  118A  27E2  120A  118A  	fcall	_I2C_Master_Start
  5071                           
  5072                           ;RTC.c: 130:     I2C_Master_Write(0xD1);
  5073  04E4  30D1               	movlw	209
  5074  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  5075  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  5076  04E7  00AD               	movwf	I2C_Master_Write@d
  5077  04E8  3000               	movlw	0
  5078  04E9  00AE               	movwf	I2C_Master_Write@d+1
  5079  04EA  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  5080                           
  5081                           ;RTC.c: 131:     mes = BCD_a_DEC(I2C_Master_Read(0));
  5082  04EF  3000               	movlw	0
  5083  04F0  00F2               	movwf	I2C_Master_Read@a
  5084  04F1  00F3               	movwf	I2C_Master_Read@a+1
  5085  04F2  120A  158A  2143  120A  118A  	fcall	_I2C_Master_Read
  5086  04F7  0872               	movf	?_I2C_Master_Read,w
  5087  04F8  120A  158A  2079  120A  118A  	fcall	_BCD_a_DEC
  5088  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  5089  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  5090  04FF  00AF               	movwf	??_get_Time
  5091  0500  082F               	movf	??_get_Time,w
  5092  0501  00DA               	movwf	_mes
  5093                           
  5094                           ;RTC.c: 132:     I2C_Master_Stop();
  5095  0502  160A  118A  27E9  120A  118A  	fcall	_I2C_Master_Stop
  5096                           
  5097                           ;RTC.c: 134:     I2C_Master_Start();
  5098  0507  160A  118A  27E2  120A  118A  	fcall	_I2C_Master_Start
  5099                           
  5100                           ;RTC.c: 135:     I2C_Master_Write(0xD0);
  5101  050C  30D0               	movlw	208
  5102  050D  1283               	bcf	3,5	;RP0=0, select bank0
  5103  050E  1303               	bcf	3,6	;RP1=0, select bank0
  5104  050F  00AD               	movwf	I2C_Master_Write@d
  5105  0510  3000               	movlw	0
  5106  0511  00AE               	movwf	I2C_Master_Write@d+1
  5107  0512  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  5108                           
  5109                           ;RTC.c: 136:     I2C_Master_Write(6);
  5110  0517  3006               	movlw	6
  5111  0518  1283               	bcf	3,5	;RP0=0, select bank0
  5112  0519  1303               	bcf	3,6	;RP1=0, select bank0
  5113  051A  00AD               	movwf	I2C_Master_Write@d
  5114  051B  3000               	movlw	0
  5115  051C  00AE               	movwf	I2C_Master_Write@d+1
  5116  051D  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  5117                           
  5118                           ;RTC.c: 137:     I2C_Master_Stop();
  5119  0522  160A  118A  27E9  120A  118A  	fcall	_I2C_Master_Stop
  5120                           
  5121                           ;RTC.c: 138:     I2C_Master_Start();
  5122  0527  160A  118A  27E2  120A  118A  	fcall	_I2C_Master_Start
  5123                           
  5124                           ;RTC.c: 139:     I2C_Master_Write(0xD1);
  5125  052C  30D1               	movlw	209
  5126  052D  1283               	bcf	3,5	;RP0=0, select bank0
  5127  052E  1303               	bcf	3,6	;RP1=0, select bank0
  5128  052F  00AD               	movwf	I2C_Master_Write@d
  5129  0530  3000               	movlw	0
  5130  0531  00AE               	movwf	I2C_Master_Write@d+1
  5131  0532  160A  118A  27F0  120A  118A  	fcall	_I2C_Master_Write
  5132                           
  5133                           ;RTC.c: 140:     jahr = BCD_a_DEC(I2C_Master_Read(0));
  5134  0537  3000               	movlw	0
  5135  0538  00F2               	movwf	I2C_Master_Read@a
  5136  0539  00F3               	movwf	I2C_Master_Read@a+1
  5137  053A  120A  158A  2143  120A  118A  	fcall	_I2C_Master_Read
  5138  053F  0872               	movf	?_I2C_Master_Read,w
  5139  0540  120A  158A  2079  120A  118A  	fcall	_BCD_a_DEC
  5140  0545  1283               	bcf	3,5	;RP0=0, select bank0
  5141  0546  1303               	bcf	3,6	;RP1=0, select bank0
  5142  0547  00AF               	movwf	??_get_Time
  5143  0548  082F               	movf	??_get_Time,w
  5144  0549  00D9               	movwf	_jahr
  5145                           
  5146                           ;RTC.c: 141:     I2C_Master_Stop();
  5147  054A  160A  118A  27E9   	fcall	_I2C_Master_Stop
  5148  054D  0008               	return
  5149  054E                     __end_of_get_Time:	
  5150                           
  5151                           	psect	text16
  5152  0943                     __ptext16:	
  5153 ;; *************** function _I2C_Master_Read *****************
  5154 ;; Defined at:
  5155 ;;		line 74 in file "I2C.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;  a               2    2[COMMON] unsigned short 
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;  temp            2    6[COMMON] unsigned short 
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  2    2[COMMON] unsigned short 
  5162 ;; Registers used:
  5163 ;;		wreg, status,2, status,0, pclath, cstack
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5169 ;;      Params:         2       0       0       0       0
  5170 ;;      Locals:         2       0       0       0       0
  5171 ;;      Temps:          2       0       0       0       0
  5172 ;;      Totals:         6       0       0       0       0
  5173 ;;Total ram usage:        6 bytes
  5174 ;; Hardware stack levels used:    1
  5175 ;; Hardware stack levels required when called:    2
  5176 ;; This function calls:
  5177 ;;		_I2C_Master_Wait
  5178 ;; This function is called by:
  5179 ;;		_get_Time
  5180 ;;		_get_hora
  5181 ;;		_temp_objeto
  5182 ;;		_temp_ambiente
  5183 ;;		_Acc_X
  5184 ;;		_Acc_Y
  5185 ;;		_Acc_Z
  5186 ;;		_Gy_X
  5187 ;;		_Gy_Y
  5188 ;;		_Gy_Z
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192                           
  5193                           ;psect for function _I2C_Master_Read
  5194  0943                     _I2C_Master_Read:	
  5195                           
  5196                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  5197                           
  5198                           ;incstack = 0
  5199                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  5200  0943  120A  158A  2003  120A  158A  	fcall	_I2C_Master_Wait
  5201                           
  5202                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  5203  0948  1683               	bsf	3,5	;RP0=1, select bank1
  5204  0949  1303               	bcf	3,6	;RP1=0, select bank1
  5205  094A  1591               	bsf	17,3	;volatile
  5206                           
  5207                           ;I2C.c: 79:     I2C_Master_Wait();
  5208  094B  120A  158A  2003  120A  158A  	fcall	_I2C_Master_Wait
  5209                           
  5210                           ;I2C.c: 80:     temp = SSPBUF;
  5211  0950  1283               	bcf	3,5	;RP0=0, select bank0
  5212  0951  1303               	bcf	3,6	;RP1=0, select bank0
  5213  0952  0813               	movf	19,w	;volatile
  5214  0953  00F4               	movwf	??_I2C_Master_Read
  5215  0954  01F5               	clrf	??_I2C_Master_Read+1
  5216  0955  0874               	movf	??_I2C_Master_Read,w
  5217  0956  00F6               	movwf	I2C_Master_Read@temp
  5218  0957  0875               	movf	??_I2C_Master_Read+1,w
  5219  0958  00F7               	movwf	I2C_Master_Read@temp+1
  5220                           
  5221                           ;I2C.c: 81:     I2C_Master_Wait();
  5222  0959  120A  158A  2003  120A  158A  	fcall	_I2C_Master_Wait
  5223                           
  5224                           ;I2C.c: 82:     if(a == 1){
  5225  095E  0372               	decf	I2C_Master_Read@a,w
  5226  095F  0473               	iorwf	I2C_Master_Read@a+1,w
  5227  0960  1D03               	btfss	3,2
  5228  0961  2966               	goto	l379
  5229                           
  5230                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  5231  0962  1683               	bsf	3,5	;RP0=1, select bank1
  5232  0963  1303               	bcf	3,6	;RP1=0, select bank1
  5233  0964  1291               	bcf	17,5	;volatile
  5234                           
  5235                           ;I2C.c: 84:     }else{
  5236  0965  2969               	goto	l380
  5237  0966                     l379:	
  5238                           
  5239                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  5240  0966  1683               	bsf	3,5	;RP0=1, select bank1
  5241  0967  1303               	bcf	3,6	;RP1=0, select bank1
  5242  0968  1691               	bsf	17,5	;volatile
  5243  0969                     l380:	
  5244                           ;I2C.c: 86:     }
  5245                           
  5246                           
  5247                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  5248  0969  1611               	bsf	17,4	;volatile
  5249                           
  5250                           ;I2C.c: 88:     return temp;
  5251  096A  0877               	movf	I2C_Master_Read@temp+1,w
  5252  096B  00F3               	movwf	?_I2C_Master_Read+1
  5253  096C  0876               	movf	I2C_Master_Read@temp,w
  5254  096D  00F2               	movwf	?_I2C_Master_Read
  5255  096E  0008               	return
  5256  096F                     __end_of_I2C_Master_Read:	
  5257                           
  5258                           	psect	text17
  5259  0879                     __ptext17:	
  5260 ;; *************** function _BCD_a_DEC *****************
  5261 ;; Defined at:
  5262 ;;		line 27 in file "RTC.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  numBCD          1    wreg     unsigned char 
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;  numBCD          1    9[COMMON] unsigned char 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      unsigned char 
  5269 ;; Registers used:
  5270 ;;		wreg, status,2, status,0, pclath, cstack
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5276 ;;      Params:         0       0       0       0       0
  5277 ;;      Locals:         1       0       0       0       0
  5278 ;;      Temps:          3       0       0       0       0
  5279 ;;      Totals:         4       0       0       0       0
  5280 ;;Total ram usage:        4 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    2
  5283 ;; This function calls:
  5284 ;;		___bmul
  5285 ;; This function is called by:
  5286 ;;		_get_Time
  5287 ;;		_get_hora
  5288 ;; This function uses a non-reentrant model
  5289 ;;
  5290                           
  5291                           
  5292                           ;psect for function _BCD_a_DEC
  5293  0879                     _BCD_a_DEC:	
  5294                           
  5295                           ;incstack = 0
  5296                           ; Regs used in _BCD_a_DEC: [wreg+status,2+status,0+pclath+cstack]
  5297                           ;BCD_a_DEC@numBCD stored from wreg
  5298  0879  00F9               	movwf	BCD_a_DEC@numBCD
  5299                           
  5300                           ;RTC.c: 28:     return (numBCD >> 4) * 10 + (numBCD & 0x0F);
  5301  087A  300F               	movlw	15
  5302  087B  0579               	andwf	BCD_a_DEC@numBCD,w
  5303  087C  00F6               	movwf	??_BCD_a_DEC
  5304  087D  300A               	movlw	10
  5305  087E  00F7               	movwf	??_BCD_a_DEC+1
  5306  087F  0877               	movf	??_BCD_a_DEC+1,w
  5307  0880  00F2               	movwf	___bmul@multiplicand
  5308  0881  0879               	movf	BCD_a_DEC@numBCD,w
  5309  0882  00F8               	movwf	??_BCD_a_DEC+2
  5310  0883  3004               	movlw	4
  5311  0884                     u1185:	
  5312  0884  1003               	clrc
  5313  0885  0CF8               	rrf	??_BCD_a_DEC+2,f
  5314  0886  3EFF               	addlw	-1
  5315  0887  1D03               	skipz
  5316  0888  2884               	goto	u1185
  5317  0889  0878               	movf	??_BCD_a_DEC+2,w
  5318  088A  120A  158A  202C   	fcall	___bmul
  5319  088D  0776               	addwf	??_BCD_a_DEC,w
  5320  088E  0008               	return
  5321  088F                     __end_of_BCD_a_DEC:	
  5322                           
  5323                           	psect	text18
  5324  082C                     __ptext18:	
  5325 ;; *************** function ___bmul *****************
  5326 ;; Defined at:
  5327 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;  multiplier      1    wreg     unsigned char 
  5330 ;;  multiplicand    1    2[COMMON] unsigned char 
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;  multiplier      1    5[COMMON] unsigned char 
  5333 ;;  product         1    4[COMMON] unsigned char 
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  1    wreg      unsigned char 
  5336 ;; Registers used:
  5337 ;;		wreg, status,2, status,0
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5343 ;;      Params:         1       0       0       0       0
  5344 ;;      Locals:         2       0       0       0       0
  5345 ;;      Temps:          1       0       0       0       0
  5346 ;;      Totals:         4       0       0       0       0
  5347 ;;Total ram usage:        4 bytes
  5348 ;; Hardware stack levels used:    1
  5349 ;; Hardware stack levels required when called:    1
  5350 ;; This function calls:
  5351 ;;		Nothing
  5352 ;; This function is called by:
  5353 ;;		_BCD_a_DEC
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           
  5358                           ;psect for function ___bmul
  5359  082C                     ___bmul:	
  5360                           
  5361                           ;incstack = 0
  5362                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5363                           ;___bmul@multiplier stored from wreg
  5364  082C  00F5               	movwf	___bmul@multiplier
  5365  082D  01F4               	clrf	___bmul@product
  5366  082E                     l2788:	
  5367  082E  1C75               	btfss	___bmul@multiplier,0
  5368  082F  2834               	goto	l2792
  5369  0830  0872               	movf	___bmul@multiplicand,w
  5370  0831  00F3               	movwf	??___bmul
  5371  0832  0873               	movf	??___bmul,w
  5372  0833  07F4               	addwf	___bmul@product,f
  5373  0834                     l2792:	
  5374  0834  1003               	clrc
  5375  0835  0DF2               	rlf	___bmul@multiplicand,f
  5376  0836  1003               	clrc
  5377  0837  0CF5               	rrf	___bmul@multiplier,f
  5378  0838  0875               	movf	___bmul@multiplier,w
  5379  0839  1D03               	btfss	3,2
  5380  083A  282E               	goto	l2788
  5381  083B  0874               	movf	___bmul@product,w
  5382  083C  0008               	return
  5383  083D                     __end_of___bmul:	
  5384                           
  5385                           	psect	text19
  5386  0CD7                     __ptext19:	
  5387 ;; *************** function _SetUp *****************
  5388 ;; Defined at:
  5389 ;;		line 180 in file "main_Master.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;		None
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;		None
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  1    wreg      void 
  5396 ;; Registers used:
  5397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5403 ;;      Params:         0       0       0       0       0
  5404 ;;      Locals:         0       0       0       0       0
  5405 ;;      Temps:          0       1       0       0       0
  5406 ;;      Totals:         0       1       0       0       0
  5407 ;;Total ram usage:        1 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; Hardware stack levels required when called:    4
  5410 ;; This function calls:
  5411 ;;		_I2C_Master_Init
  5412 ;;		_LCD_Create_Char
  5413 ;;		_LCD_clear
  5414 ;;		_LCD_init
  5415 ;;		_OSC_config
  5416 ;;		_Zeit_Datum_Set
  5417 ;;		_uart_init
  5418 ;; This function is called by:
  5419 ;;		_main
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423                           
  5424                           ;psect for function _SetUp
  5425  0CD7                     _SetUp:	
  5426                           
  5427                           ;main_Master.c: 181:     TRISB = 0;
  5428                           
  5429                           ;incstack = 0
  5430                           ; Regs used in _SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5431  0CD7  1683               	bsf	3,5	;RP0=1, select bank1
  5432  0CD8  1303               	bcf	3,6	;RP1=0, select bank1
  5433  0CD9  0186               	clrf	6	;volatile
  5434                           
  5435                           ;main_Master.c: 182:     OSC_config(4000000);
  5436  0CDA  3000               	movlw	0
  5437  0CDB  00F5               	movwf	OSC_config@frecuencia+3
  5438  0CDC  303D               	movlw	61
  5439  0CDD  00F4               	movwf	OSC_config@frecuencia+2
  5440  0CDE  3009               	movlw	9
  5441  0CDF  00F3               	movwf	OSC_config@frecuencia+1
  5442  0CE0  3000               	movlw	0
  5443  0CE1  00F2               	movwf	OSC_config@frecuencia
  5444  0CE2  120A  158A  26A3  120A  158A  	fcall	_OSC_config
  5445                           
  5446                           ;main_Master.c: 183:     TRISB = 0b00000110;
  5447  0CE7  3006               	movlw	6
  5448  0CE8  1683               	bsf	3,5	;RP0=1, select bank1
  5449  0CE9  1303               	bcf	3,6	;RP1=0, select bank1
  5450  0CEA  0086               	movwf	6	;volatile
  5451                           
  5452                           ;main_Master.c: 184:     ANSELH = 0;
  5453  0CEB  1683               	bsf	3,5	;RP0=1, select bank3
  5454  0CEC  1703               	bsf	3,6	;RP1=1, select bank3
  5455  0CED  0189               	clrf	9	;volatile
  5456                           
  5457                           ;main_Master.c: 185:     WPUB = 0b00000110;
  5458  0CEE  3006               	movlw	6
  5459  0CEF  1683               	bsf	3,5	;RP0=1, select bank1
  5460  0CF0  1303               	bcf	3,6	;RP1=0, select bank1
  5461  0CF1  0095               	movwf	21	;volatile
  5462                           
  5463                           ;main_Master.c: 186:     OPTION_REGbits.nRBPU = 0;
  5464  0CF2  1381               	bcf	1,7	;volatile
  5465                           
  5466                           ;main_Master.c: 187:     IOCB = 0b00000110;
  5467  0CF3  3006               	movlw	6
  5468  0CF4  0096               	movwf	22	;volatile
  5469                           
  5470                           ;main_Master.c: 188:     INTCONbits.RBIE = 1;
  5471  0CF5  158B               	bsf	11,3	;volatile
  5472                           
  5473                           ;main_Master.c: 189:     INTCONbits.GIE = 1;
  5474  0CF6  178B               	bsf	11,7	;volatile
  5475                           
  5476                           ;main_Master.c: 190:     TRISD = 0;
  5477  0CF7  0188               	clrf	8	;volatile
  5478                           
  5479                           ;main_Master.c: 191:     PORTA = 0;
  5480  0CF8  1283               	bcf	3,5	;RP0=0, select bank0
  5481  0CF9  1303               	bcf	3,6	;RP1=0, select bank0
  5482  0CFA  0185               	clrf	5	;volatile
  5483                           
  5484                           ;main_Master.c: 192:     TRISA = 0;
  5485  0CFB  1683               	bsf	3,5	;RP0=1, select bank1
  5486  0CFC  1303               	bcf	3,6	;RP1=0, select bank1
  5487  0CFD  0185               	clrf	5	;volatile
  5488                           
  5489                           ;main_Master.c: 193:     TRISE = 0b0111;
  5490  0CFE  3007               	movlw	7
  5491  0CFF  0089               	movwf	9	;volatile
  5492                           
  5493                           ;main_Master.c: 194:     ANSEL = 0b01110000;
  5494  0D00  3070               	movlw	112
  5495  0D01  1683               	bsf	3,5	;RP0=1, select bank3
  5496  0D02  1703               	bsf	3,6	;RP1=1, select bank3
  5497  0D03  0088               	movwf	8	;volatile
  5498                           
  5499                           ;main_Master.c: 195:     LCD_init();
  5500  0D04  120A  158A  2300  120A  158A  	fcall	_LCD_init
  5501                           
  5502                           ;main_Master.c: 196:     LCD_Create_Char(0, atilde);
  5503  0D09  3011               	movlw	(low ((_atilde-__stringbase)| (0+32768)))& (0+255)
  5504  0D0A  1283               	bcf	3,5	;RP0=0, select bank0
  5505  0D0B  1303               	bcf	3,6	;RP1=0, select bank0
  5506  0D0C  00B1               	movwf	??_SetUp
  5507  0D0D  0831               	movf	??_SetUp,w
  5508  0D0E  00F5               	movwf	LCD_Create_Char@chardata
  5509  0D0F  3000               	movlw	0
  5510  0D10  120A  158A  2117  120A  158A  	fcall	_LCD_Create_Char
  5511                           
  5512                           ;main_Master.c: 197:     LCD_Create_Char(1, arrowr);
  5513  0D15  3021               	movlw	(low ((_arrowr-__stringbase)| (0+32768)))& (0+255)
  5514  0D16  1283               	bcf	3,5	;RP0=0, select bank0
  5515  0D17  1303               	bcf	3,6	;RP1=0, select bank0
  5516  0D18  00B1               	movwf	??_SetUp
  5517  0D19  0831               	movf	??_SetUp,w
  5518  0D1A  00F5               	movwf	LCD_Create_Char@chardata
  5519  0D1B  3001               	movlw	1
  5520  0D1C  120A  158A  2117  120A  158A  	fcall	_LCD_Create_Char
  5521                           
  5522                           ;main_Master.c: 198:     LCD_Create_Char(2, termometro);
  5523  0D21  3009               	movlw	(low ((_termometro-__stringbase)| (0+32768)))& (0+255)
  5524  0D22  1283               	bcf	3,5	;RP0=0, select bank0
  5525  0D23  1303               	bcf	3,6	;RP1=0, select bank0
  5526  0D24  00B1               	movwf	??_SetUp
  5527  0D25  0831               	movf	??_SetUp,w
  5528  0D26  00F5               	movwf	LCD_Create_Char@chardata
  5529  0D27  3002               	movlw	2
  5530  0D28  120A  158A  2117  120A  158A  	fcall	_LCD_Create_Char
  5531                           
  5532                           ;main_Master.c: 199:     LCD_Create_Char(3, gota);
  5533  0D2D  3001               	movlw	(low ((_gota-__stringbase)| (0+32768)))& (0+255)
  5534  0D2E  1283               	bcf	3,5	;RP0=0, select bank0
  5535  0D2F  1303               	bcf	3,6	;RP1=0, select bank0
  5536  0D30  00B1               	movwf	??_SetUp
  5537  0D31  0831               	movf	??_SetUp,w
  5538  0D32  00F5               	movwf	LCD_Create_Char@chardata
  5539  0D33  3003               	movlw	3
  5540  0D34  120A  158A  2117  120A  158A  	fcall	_LCD_Create_Char
  5541                           
  5542                           ;main_Master.c: 200:     LCD_Create_Char(4, arrowr_vacio);
  5543  0D39  3019               	movlw	(low ((_arrowr_vacio-__stringbase)| (0+32768)))& (0+255)
  5544  0D3A  1283               	bcf	3,5	;RP0=0, select bank0
  5545  0D3B  1303               	bcf	3,6	;RP1=0, select bank0
  5546  0D3C  00B1               	movwf	??_SetUp
  5547  0D3D  0831               	movf	??_SetUp,w
  5548  0D3E  00F5               	movwf	LCD_Create_Char@chardata
  5549  0D3F  3004               	movlw	4
  5550  0D40  120A  158A  2117  120A  158A  	fcall	_LCD_Create_Char
  5551                           
  5552                           ;main_Master.c: 201:     LCD_clear();
  5553  0D45  120A  158A  2063  120A  158A  	fcall	_LCD_clear
  5554                           
  5555                           ;main_Master.c: 202:     uart_init(9600);
  5556  0D4A  3080               	movlw	128
  5557  0D4B  00F2               	movwf	?_uart_init
  5558  0D4C  3025               	movlw	37
  5559  0D4D  00F3               	movwf	?_uart_init+1
  5560  0D4E  120A  158A  204E  120A  158A  	fcall	_uart_init
  5561                           
  5562                           ;main_Master.c: 203:     I2C_Master_Init(100000);
  5563  0D53  3000               	movlw	0
  5564  0D54  1283               	bcf	3,5	;RP0=0, select bank0
  5565  0D55  1303               	bcf	3,6	;RP1=0, select bank0
  5566  0D56  00A9               	movwf	I2C_Master_Init@c+3
  5567  0D57  3001               	movlw	1
  5568  0D58  00A8               	movwf	I2C_Master_Init@c+2
  5569  0D59  3086               	movlw	134
  5570  0D5A  00A7               	movwf	I2C_Master_Init@c+1
  5571  0D5B  30A0               	movlw	160
  5572  0D5C  00A6               	movwf	I2C_Master_Init@c
  5573  0D5D  120A  118A  27BC  120A  158A  	fcall	_I2C_Master_Init
  5574                           
  5575                           ;main_Master.c: 206:     Zeit_Datum_Set();
  5576  0D62  120A  158A  274F   	fcall	_Zeit_Datum_Set
  5577  0D65  0008               	return
  5578  0D66                     __end_of_SetUp:	
  5579                           
  5580                           	psect	text20
  5581  084E                     __ptext20:	
  5582 ;; *************** function _uart_init *****************
  5583 ;; Defined at:
  5584 ;;		line 14 in file "UART.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;		None
  5587 ;; Auto vars:     Size  Location     Type
  5588 ;;		None
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  1    wreg      void 
  5591 ;; Registers used:
  5592 ;;		wreg, status,2
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5598 ;;      Params:         2       0       0       0       0
  5599 ;;      Locals:         0       0       0       0       0
  5600 ;;      Temps:          0       0       0       0       0
  5601 ;;      Totals:         2       0       0       0       0
  5602 ;;Total ram usage:        2 bytes
  5603 ;; Hardware stack levels used:    1
  5604 ;; Hardware stack levels required when called:    1
  5605 ;; This function calls:
  5606 ;;		Nothing
  5607 ;; This function is called by:
  5608 ;;		_SetUp
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           
  5613                           ;psect for function _uart_init
  5614  084E                     _uart_init:	
  5615                           
  5616                           ;UART.c: 15:     TXSTAbits.SYNC = 0;
  5617                           
  5618                           ;incstack = 0
  5619                           ; Regs used in _uart_init: [wreg+status,2]
  5620  084E  1683               	bsf	3,5	;RP0=1, select bank1
  5621  084F  1303               	bcf	3,6	;RP1=0, select bank1
  5622  0850  1218               	bcf	24,4	;volatile
  5623                           
  5624                           ;UART.c: 16:     TXSTAbits.BRGH = 1;
  5625  0851  1518               	bsf	24,2	;volatile
  5626                           
  5627                           ;UART.c: 17:     BAUDCTLbits.BRG16 = 1;
  5628  0852  1683               	bsf	3,5	;RP0=1, select bank3
  5629  0853  1703               	bsf	3,6	;RP1=1, select bank3
  5630  0854  1587               	bsf	7,3	;volatile
  5631                           
  5632                           ;UART.c: 18:     SPBRG = 103;
  5633  0855  3067               	movlw	103
  5634  0856  1683               	bsf	3,5	;RP0=1, select bank1
  5635  0857  1303               	bcf	3,6	;RP1=0, select bank1
  5636  0858  0099               	movwf	25	;volatile
  5637                           
  5638                           ;UART.c: 19:     SPBRGH = 0;
  5639  0859  019A               	clrf	26	;volatile
  5640                           
  5641                           ;UART.c: 21:     RCSTAbits.SPEN = 1;
  5642  085A  1283               	bcf	3,5	;RP0=0, select bank0
  5643  085B  1303               	bcf	3,6	;RP1=0, select bank0
  5644  085C  1798               	bsf	24,7	;volatile
  5645                           
  5646                           ;UART.c: 22:     RCSTAbits.RX9 = 0;
  5647  085D  1318               	bcf	24,6	;volatile
  5648                           
  5649                           ;UART.c: 23:     RCSTAbits.CREN = 1;
  5650  085E  1618               	bsf	24,4	;volatile
  5651                           
  5652                           ;UART.c: 25:     TXSTAbits.TXEN = 1;
  5653  085F  1683               	bsf	3,5	;RP0=1, select bank1
  5654  0860  1303               	bcf	3,6	;RP1=0, select bank1
  5655  0861  1698               	bsf	24,5	;volatile
  5656  0862  0008               	return
  5657  0863                     __end_of_uart_init:	
  5658                           
  5659                           	psect	text21
  5660  0F4F                     __ptext21:	
  5661 ;; *************** function _Zeit_Datum_Set *****************
  5662 ;; Defined at:
  5663 ;;		line 64 in file "RTC.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;		None
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;		None
  5668 ;; Return value:  Size  Location     Type
  5669 ;;                  1    wreg      void 
  5670 ;; Registers used:
  5671 ;;		wreg, status,2, status,0, pclath, cstack
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5677 ;;      Params:         0       0       0       0       0
  5678 ;;      Locals:         0       0       0       0       0
  5679 ;;      Temps:          0       2       0       0       0
  5680 ;;      Totals:         0       2       0       0       0
  5681 ;;Total ram usage:        2 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:    3
  5684 ;; This function calls:
  5685 ;;		_DEC_a_BCD
  5686 ;;		_I2C_Master_Start
  5687 ;;		_I2C_Master_Stop
  5688 ;;		_I2C_Master_Write
  5689 ;; This function is called by:
  5690 ;;		_SetUp
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694                           
  5695                           ;psect for function _Zeit_Datum_Set
  5696  0F4F                     _Zeit_Datum_Set:	
  5697                           
  5698                           ;RTC.c: 65:     I2C_Master_Start();
  5699                           
  5700                           ;incstack = 0
  5701                           ; Regs used in _Zeit_Datum_Set: [wreg+status,2+status,0+pclath+cstack]
  5702  0F4F  160A  118A  27E2  120A  158A  	fcall	_I2C_Master_Start
  5703                           
  5704                           ;RTC.c: 66:     I2C_Master_Write(0xD0);
  5705  0F54  30D0               	movlw	208
  5706  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  5707  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  5708  0F57  00AD               	movwf	I2C_Master_Write@d
  5709  0F58  3000               	movlw	0
  5710  0F59  00AE               	movwf	I2C_Master_Write@d+1
  5711  0F5A  160A  118A  27F0  120A  158A  	fcall	_I2C_Master_Write
  5712                           
  5713                           ;RTC.c: 67:     I2C_Master_Write(0);
  5714  0F5F  3000               	movlw	0
  5715  0F60  1283               	bcf	3,5	;RP0=0, select bank0
  5716  0F61  1303               	bcf	3,6	;RP1=0, select bank0
  5717  0F62  00AD               	movwf	I2C_Master_Write@d
  5718  0F63  00AE               	movwf	I2C_Master_Write@d+1
  5719  0F64  160A  118A  27F0  120A  158A  	fcall	_I2C_Master_Write
  5720                           
  5721                           ;RTC.c: 68:     I2C_Master_Write(DEC_a_BCD(seg));
  5722  0F69  1283               	bcf	3,5	;RP0=0, select bank0
  5723  0F6A  1303               	bcf	3,6	;RP1=0, select bank0
  5724  0F6B  0853               	movf	_seg,w
  5725  0F6C  120A  158A  21CA  120A  158A  	fcall	_DEC_a_BCD
  5726  0F71  1283               	bcf	3,5	;RP0=0, select bank0
  5727  0F72  1303               	bcf	3,6	;RP1=0, select bank0
  5728  0F73  00AF               	movwf	??_Zeit_Datum_Set
  5729  0F74  01B0               	clrf	??_Zeit_Datum_Set+1
  5730  0F75  082F               	movf	??_Zeit_Datum_Set,w
  5731  0F76  00AD               	movwf	I2C_Master_Write@d
  5732  0F77  0830               	movf	??_Zeit_Datum_Set+1,w
  5733  0F78  00AE               	movwf	I2C_Master_Write@d+1
  5734  0F79  160A  118A  27F0  120A  158A  	fcall	_I2C_Master_Write
  5735                           
  5736                           ;RTC.c: 69:     I2C_Master_Write(DEC_a_BCD(min));
  5737  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  5738  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  5739  0F80  085E               	movf	_min,w
  5740  0F81  120A  158A  21CA  120A  158A  	fcall	_DEC_a_BCD
  5741  0F86  1283               	bcf	3,5	;RP0=0, select bank0
  5742  0F87  1303               	bcf	3,6	;RP1=0, select bank0
  5743  0F88  00AF               	movwf	??_Zeit_Datum_Set
  5744  0F89  01B0               	clrf	??_Zeit_Datum_Set+1
  5745  0F8A  082F               	movf	??_Zeit_Datum_Set,w
  5746  0F8B  00AD               	movwf	I2C_Master_Write@d
  5747  0F8C  0830               	movf	??_Zeit_Datum_Set+1,w
  5748  0F8D  00AE               	movwf	I2C_Master_Write@d+1
  5749  0F8E  160A  118A  27F0  120A  158A  	fcall	_I2C_Master_Write
  5750                           
  5751                           ;RTC.c: 70:     I2C_Master_Write(DEC_a_BCD(hora));
  5752  0F93  1283               	bcf	3,5	;RP0=0, select bank0
  5753  0F94  1303               	bcf	3,6	;RP1=0, select bank0
  5754  0F95  085D               	movf	_hora,w
  5755  0F96  120A  158A  21CA  120A  158A  	fcall	_DEC_a_BCD
  5756  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  5757  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  5758  0F9D  00AF               	movwf	??_Zeit_Datum_Set
  5759  0F9E  01B0               	clrf	??_Zeit_Datum_Set+1
  5760  0F9F  082F               	movf	??_Zeit_Datum_Set,w
  5761  0FA0  00AD               	movwf	I2C_Master_Write@d
  5762  0FA1  0830               	movf	??_Zeit_Datum_Set+1,w
  5763  0FA2  00AE               	movwf	I2C_Master_Write@d+1
  5764  0FA3  160A  118A  27F0  120A  158A  	fcall	_I2C_Master_Write
  5765                           
  5766                           ;RTC.c: 71:     I2C_Master_Write(DEC_a_BCD(dia));
  5767  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  5768  0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  5769  0FAA  085C               	movf	_dia,w
  5770  0FAB  120A  158A  21CA  120A  158A  	fcall	_DEC_a_BCD
  5771  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  5772  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  5773  0FB2  00AF               	movwf	??_Zeit_Datum_Set
  5774  0FB3  01B0               	clrf	??_Zeit_Datum_Set+1
  5775  0FB4  082F               	movf	??_Zeit_Datum_Set,w
  5776  0FB5  00AD               	movwf	I2C_Master_Write@d
  5777  0FB6  0830               	movf	??_Zeit_Datum_Set+1,w
  5778  0FB7  00AE               	movwf	I2C_Master_Write@d+1
  5779  0FB8  160A  118A  27F0  120A  158A  	fcall	_I2C_Master_Write
  5780                           
  5781                           ;RTC.c: 72:     I2C_Master_Write(DEC_a_BCD(datum));
  5782  0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  5783  0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  5784  0FBF  085B               	movf	_datum,w
  5785  0FC0  120A  158A  21CA  120A  158A  	fcall	_DEC_a_BCD
  5786  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  5787  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  5788  0FC7  00AF               	movwf	??_Zeit_Datum_Set
  5789  0FC8  01B0               	clrf	??_Zeit_Datum_Set+1
  5790  0FC9  082F               	movf	??_Zeit_Datum_Set,w
  5791  0FCA  00AD               	movwf	I2C_Master_Write@d
  5792  0FCB  0830               	movf	??_Zeit_Datum_Set+1,w
  5793  0FCC  00AE               	movwf	I2C_Master_Write@d+1
  5794  0FCD  160A  118A  27F0  120A  158A  	fcall	_I2C_Master_Write
  5795                           
  5796                           ;RTC.c: 73:     I2C_Master_Write(DEC_a_BCD(mes));
  5797  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  5798  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  5799  0FD4  085A               	movf	_mes,w
  5800  0FD5  120A  158A  21CA  120A  158A  	fcall	_DEC_a_BCD
  5801  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  5802  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  5803  0FDC  00AF               	movwf	??_Zeit_Datum_Set
  5804  0FDD  01B0               	clrf	??_Zeit_Datum_Set+1
  5805  0FDE  082F               	movf	??_Zeit_Datum_Set,w
  5806  0FDF  00AD               	movwf	I2C_Master_Write@d
  5807  0FE0  0830               	movf	??_Zeit_Datum_Set+1,w
  5808  0FE1  00AE               	movwf	I2C_Master_Write@d+1
  5809  0FE2  160A  118A  27F0  120A  158A  	fcall	_I2C_Master_Write
  5810                           
  5811                           ;RTC.c: 74:     I2C_Master_Write(DEC_a_BCD(jahr));
  5812  0FE7  1283               	bcf	3,5	;RP0=0, select bank0
  5813  0FE8  1303               	bcf	3,6	;RP1=0, select bank0
  5814  0FE9  0859               	movf	_jahr,w
  5815  0FEA  120A  158A  21CA  120A  158A  	fcall	_DEC_a_BCD
  5816  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  5817  0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  5818  0FF1  00AF               	movwf	??_Zeit_Datum_Set
  5819  0FF2  01B0               	clrf	??_Zeit_Datum_Set+1
  5820  0FF3  082F               	movf	??_Zeit_Datum_Set,w
  5821  0FF4  00AD               	movwf	I2C_Master_Write@d
  5822  0FF5  0830               	movf	??_Zeit_Datum_Set+1,w
  5823  0FF6  00AE               	movwf	I2C_Master_Write@d+1
  5824  0FF7  160A  118A  27F0  120A  158A  	fcall	_I2C_Master_Write
  5825                           
  5826                           ;RTC.c: 75:     I2C_Master_Stop();
  5827  0FFC  160A  118A  27E9   	fcall	_I2C_Master_Stop
  5828  0FFF  0008               	return
  5829  1000                     __end_of_Zeit_Datum_Set:	
  5830                           
  5831                           	psect	text22
  5832  17F0                     __ptext22:	
  5833 ;; *************** function _I2C_Master_Write *****************
  5834 ;; Defined at:
  5835 ;;		line 65 in file "I2C.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;  d               2   13[BANK0 ] unsigned int 
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;		None
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1    wreg      void 
  5842 ;; Registers used:
  5843 ;;		wreg, status,2, status,0, pclath, cstack
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5849 ;;      Params:         0       2       0       0       0
  5850 ;;      Locals:         0       0       0       0       0
  5851 ;;      Temps:          0       0       0       0       0
  5852 ;;      Totals:         0       2       0       0       0
  5853 ;;Total ram usage:        2 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:    2
  5856 ;; This function calls:
  5857 ;;		_I2C_Master_Wait
  5858 ;; This function is called by:
  5859 ;;		_mostrarLCD
  5860 ;;		_Zeit_Datum_Set
  5861 ;;		_get_Time
  5862 ;;		_get_hora
  5863 ;;		_temp_objeto
  5864 ;;		_temp_ambiente
  5865 ;;		_IMU_init
  5866 ;;		_Acc_X
  5867 ;;		_Acc_Y
  5868 ;;		_Acc_Z
  5869 ;;		_Gy_X
  5870 ;;		_Gy_Y
  5871 ;;		_Gy_Z
  5872 ;; This function uses a non-reentrant model
  5873 ;;
  5874                           
  5875                           
  5876                           ;psect for function _I2C_Master_Write
  5877  17F0                     _I2C_Master_Write:	
  5878                           
  5879                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  5880                           
  5881                           ;incstack = 0
  5882                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  5883  17F0  120A  158A  2003   	fcall	_I2C_Master_Wait
  5884                           
  5885                           ;I2C.c: 68:     SSPBUF = d;
  5886  17F3  1283               	bcf	3,5	;RP0=0, select bank0
  5887  17F4  1303               	bcf	3,6	;RP1=0, select bank0
  5888  17F5  082D               	movf	I2C_Master_Write@d,w
  5889  17F6  0093               	movwf	19	;volatile
  5890  17F7  0008               	return
  5891  17F8                     __end_of_I2C_Master_Write:	
  5892                           
  5893                           	psect	text23
  5894  17E9                     __ptext23:	
  5895 ;; *************** function _I2C_Master_Stop *****************
  5896 ;; Defined at:
  5897 ;;		line 55 in file "I2C.c"
  5898 ;; Parameters:    Size  Location     Type
  5899 ;;		None
  5900 ;; Auto vars:     Size  Location     Type
  5901 ;;		None
  5902 ;; Return value:  Size  Location     Type
  5903 ;;                  1    wreg      void 
  5904 ;; Registers used:
  5905 ;;		wreg, status,2, status,0, pclath, cstack
  5906 ;; Tracked objects:
  5907 ;;		On entry : 0/0
  5908 ;;		On exit  : 0/0
  5909 ;;		Unchanged: 0/0
  5910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5911 ;;      Params:         0       0       0       0       0
  5912 ;;      Locals:         0       0       0       0       0
  5913 ;;      Temps:          0       0       0       0       0
  5914 ;;      Totals:         0       0       0       0       0
  5915 ;;Total ram usage:        0 bytes
  5916 ;; Hardware stack levels used:    1
  5917 ;; Hardware stack levels required when called:    2
  5918 ;; This function calls:
  5919 ;;		_I2C_Master_Wait
  5920 ;; This function is called by:
  5921 ;;		_mostrarLCD
  5922 ;;		_Zeit_Datum_Set
  5923 ;;		_get_Time
  5924 ;;		_get_hora
  5925 ;;		_temp_objeto
  5926 ;;		_temp_ambiente
  5927 ;;		_IMU_init
  5928 ;;		_Acc_X
  5929 ;;		_Acc_Y
  5930 ;;		_Acc_Z
  5931 ;;		_Gy_X
  5932 ;;		_Gy_Y
  5933 ;;		_Gy_Z
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           
  5938                           ;psect for function _I2C_Master_Stop
  5939  17E9                     _I2C_Master_Stop:	
  5940                           
  5941                           ;I2C.c: 57:     I2C_Master_Wait();
  5942                           
  5943                           ;incstack = 0
  5944                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  5945  17E9  120A  158A  2003   	fcall	_I2C_Master_Wait
  5946                           
  5947                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  5948  17EC  1683               	bsf	3,5	;RP0=1, select bank1
  5949  17ED  1303               	bcf	3,6	;RP1=0, select bank1
  5950  17EE  1511               	bsf	17,2	;volatile
  5951  17EF  0008               	return
  5952  17F0                     __end_of_I2C_Master_Stop:	
  5953                           
  5954                           	psect	text24
  5955  17E2                     __ptext24:	
  5956 ;; *************** function _I2C_Master_Start *****************
  5957 ;; Defined at:
  5958 ;;		line 39 in file "I2C.c"
  5959 ;; Parameters:    Size  Location     Type
  5960 ;;		None
  5961 ;; Auto vars:     Size  Location     Type
  5962 ;;		None
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  1    wreg      void 
  5965 ;; Registers used:
  5966 ;;		wreg, status,2, status,0, pclath, cstack
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 0/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5972 ;;      Params:         0       0       0       0       0
  5973 ;;      Locals:         0       0       0       0       0
  5974 ;;      Temps:          0       0       0       0       0
  5975 ;;      Totals:         0       0       0       0       0
  5976 ;;Total ram usage:        0 bytes
  5977 ;; Hardware stack levels used:    1
  5978 ;; Hardware stack levels required when called:    2
  5979 ;; This function calls:
  5980 ;;		_I2C_Master_Wait
  5981 ;; This function is called by:
  5982 ;;		_mostrarLCD
  5983 ;;		_Zeit_Datum_Set
  5984 ;;		_get_Time
  5985 ;;		_get_hora
  5986 ;;		_temp_objeto
  5987 ;;		_temp_ambiente
  5988 ;;		_IMU_init
  5989 ;;		_Acc_X
  5990 ;;		_Acc_Y
  5991 ;;		_Acc_Z
  5992 ;;		_Gy_X
  5993 ;;		_Gy_Y
  5994 ;;		_Gy_Z
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           
  5999                           ;psect for function _I2C_Master_Start
  6000  17E2                     _I2C_Master_Start:	
  6001                           
  6002                           ;I2C.c: 41:     I2C_Master_Wait();
  6003                           
  6004                           ;incstack = 0
  6005                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  6006  17E2  120A  158A  2003   	fcall	_I2C_Master_Wait
  6007                           
  6008                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  6009  17E5  1683               	bsf	3,5	;RP0=1, select bank1
  6010  17E6  1303               	bcf	3,6	;RP1=0, select bank1
  6011  17E7  1411               	bsf	17,0	;volatile
  6012  17E8  0008               	return
  6013  17E9                     __end_of_I2C_Master_Start:	
  6014                           
  6015                           	psect	text25
  6016  0803                     __ptext25:	
  6017 ;; *************** function _I2C_Master_Wait *****************
  6018 ;; Defined at:
  6019 ;;		line 32 in file "I2C.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;		None
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;		None
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  1    wreg      void 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6033 ;;      Params:         0       0       0       0       0
  6034 ;;      Locals:         0       0       0       0       0
  6035 ;;      Temps:          0       0       0       0       0
  6036 ;;      Totals:         0       0       0       0       0
  6037 ;;Total ram usage:        0 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; Hardware stack levels required when called:    1
  6040 ;; This function calls:
  6041 ;;		Nothing
  6042 ;; This function is called by:
  6043 ;;		_I2C_Master_Start
  6044 ;;		_I2C_Master_Stop
  6045 ;;		_I2C_Master_Write
  6046 ;;		_I2C_Master_Read
  6047 ;;		_I2C_Master_RepeatedStart
  6048 ;; This function uses a non-reentrant model
  6049 ;;
  6050                           
  6051                           
  6052                           ;psect for function _I2C_Master_Wait
  6053  0803                     _I2C_Master_Wait:	
  6054  0803                     l361:	
  6055                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  6056                           
  6057                           ;incstack = 0
  6058                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  6059                           
  6060  0803  1683               	bsf	3,5	;RP0=1, select bank1
  6061  0804  1303               	bcf	3,6	;RP1=0, select bank1
  6062  0805  1914               	btfsc	20,2	;volatile
  6063  0806  2803               	goto	l361
  6064  0807  0811               	movf	17,w	;volatile
  6065  0808  391F               	andlw	31
  6066  0809  1903               	btfsc	3,2
  6067  080A  0008               	return
  6068  080B  2803               	goto	l361
  6069  080C                     __end_of_I2C_Master_Wait:	
  6070                           
  6071                           	psect	text26
  6072  09CA                     __ptext26:	
  6073 ;; *************** function _DEC_a_BCD *****************
  6074 ;; Defined at:
  6075 ;;		line 32 in file "RTC.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;  numDEC          1    wreg     unsigned char 
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;  numDEC          1    9[COMMON] unsigned char 
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  1    wreg      unsigned char 
  6082 ;; Registers used:
  6083 ;;		wreg, status,2, status,0, pclath, cstack
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6089 ;;      Params:         0       0       0       0       0
  6090 ;;      Locals:         1       0       0       0       0
  6091 ;;      Temps:          0       5       0       0       0
  6092 ;;      Totals:         1       5       0       0       0
  6093 ;;Total ram usage:        6 bytes
  6094 ;; Hardware stack levels used:    1
  6095 ;; Hardware stack levels required when called:    2
  6096 ;; This function calls:
  6097 ;;		___awdiv
  6098 ;;		___awmod
  6099 ;; This function is called by:
  6100 ;;		_Zeit_Datum_Set
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           
  6105                           ;psect for function _DEC_a_BCD
  6106  09CA                     _DEC_a_BCD:	
  6107                           
  6108                           ;incstack = 0
  6109                           ; Regs used in _DEC_a_BCD: [wreg+status,2+status,0+pclath+cstack]
  6110                           ;DEC_a_BCD@numDEC stored from wreg
  6111  09CA  00F9               	movwf	DEC_a_BCD@numDEC
  6112                           
  6113                           ;RTC.c: 33:     return ((numDEC / 10) << 4) + (numDEC % 10);
  6114  09CB  300A               	movlw	10
  6115  09CC  1283               	bcf	3,5	;RP0=0, select bank0
  6116  09CD  1303               	bcf	3,6	;RP1=0, select bank0
  6117  09CE  00A0               	movwf	___awdiv@divisor
  6118  09CF  3000               	movlw	0
  6119  09D0  00A1               	movwf	___awdiv@divisor+1
  6120  09D1  0879               	movf	DEC_a_BCD@numDEC,w
  6121  09D2  00A8               	movwf	??_DEC_a_BCD
  6122  09D3  01A9               	clrf	??_DEC_a_BCD+1
  6123  09D4  0828               	movf	??_DEC_a_BCD,w
  6124  09D5  00A2               	movwf	___awdiv@dividend
  6125  09D6  0829               	movf	??_DEC_a_BCD+1,w
  6126  09D7  00A3               	movwf	___awdiv@dividend+1
  6127  09D8  120A  158A  2245  120A  158A  	fcall	___awdiv
  6128  09DD  1283               	bcf	3,5	;RP0=0, select bank0
  6129  09DE  1303               	bcf	3,6	;RP1=0, select bank0
  6130  09DF  0820               	movf	?___awdiv,w
  6131  09E0  00AA               	movwf	??_DEC_a_BCD+2
  6132  09E1  3004               	movlw	4
  6133  09E2                     u1655:	
  6134  09E2  1003               	clrc
  6135  09E3  0DAA               	rlf	??_DEC_a_BCD+2,f
  6136  09E4  3EFF               	addlw	-1
  6137  09E5  1D03               	skipz
  6138  09E6  29E2               	goto	u1655
  6139  09E7  300A               	movlw	10
  6140  09E8  00F2               	movwf	___awmod@divisor
  6141  09E9  3000               	movlw	0
  6142  09EA  00F3               	movwf	___awmod@divisor+1
  6143  09EB  0879               	movf	DEC_a_BCD@numDEC,w
  6144  09EC  00AB               	movwf	??_DEC_a_BCD+3
  6145  09ED  01AC               	clrf	??_DEC_a_BCD+4
  6146  09EE  082B               	movf	??_DEC_a_BCD+3,w
  6147  09EF  00F4               	movwf	___awmod@dividend
  6148  09F0  082C               	movf	??_DEC_a_BCD+4,w
  6149  09F1  00F5               	movwf	___awmod@dividend+1
  6150  09F2  120A  158A  21FA   	fcall	___awmod
  6151  09F5  0872               	movf	?___awmod,w
  6152  09F6  1283               	bcf	3,5	;RP0=0, select bank0
  6153  09F7  1303               	bcf	3,6	;RP1=0, select bank0
  6154  09F8  072A               	addwf	??_DEC_a_BCD+2,w
  6155  09F9  0008               	return
  6156  09FA                     __end_of_DEC_a_BCD:	
  6157                           
  6158                           	psect	text27
  6159  09FA                     __ptext27:	
  6160 ;; *************** function ___awmod *****************
  6161 ;; Defined at:
  6162 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;  divisor         2    2[COMMON] int 
  6165 ;;  dividend        2    4[COMMON] int 
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;  sign            1    8[COMMON] unsigned char 
  6168 ;;  counter         1    7[COMMON] unsigned char 
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  2    2[COMMON] int 
  6171 ;; Registers used:
  6172 ;;		wreg, status,2, status,0
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6178 ;;      Params:         4       0       0       0       0
  6179 ;;      Locals:         2       0       0       0       0
  6180 ;;      Temps:          1       0       0       0       0
  6181 ;;      Totals:         7       0       0       0       0
  6182 ;;Total ram usage:        7 bytes
  6183 ;; Hardware stack levels used:    1
  6184 ;; Hardware stack levels required when called:    1
  6185 ;; This function calls:
  6186 ;;		Nothing
  6187 ;; This function is called by:
  6188 ;;		_display_Uhrzeit
  6189 ;;		_display_Datum
  6190 ;;		_mostrarLCD
  6191 ;;		_DEC_a_BCD
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           
  6196                           ;psect for function ___awmod
  6197  09FA                     ___awmod:	
  6198                           
  6199                           ;incstack = 0
  6200                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6201  09FA  01F8               	clrf	___awmod@sign
  6202  09FB  1FF5               	btfss	___awmod@dividend+1,7
  6203  09FC  2A04               	goto	l4118
  6204  09FD  09F4               	comf	___awmod@dividend,f
  6205  09FE  09F5               	comf	___awmod@dividend+1,f
  6206  09FF  0AF4               	incf	___awmod@dividend,f
  6207  0A00  1903               	skipnz
  6208  0A01  0AF5               	incf	___awmod@dividend+1,f
  6209  0A02  01F8               	clrf	___awmod@sign
  6210  0A03  0AF8               	incf	___awmod@sign,f
  6211  0A04                     l4118:	
  6212  0A04  1FF3               	btfss	___awmod@divisor+1,7
  6213  0A05  2A0B               	goto	l4122
  6214  0A06  09F2               	comf	___awmod@divisor,f
  6215  0A07  09F3               	comf	___awmod@divisor+1,f
  6216  0A08  0AF2               	incf	___awmod@divisor,f
  6217  0A09  1903               	skipnz
  6218  0A0A  0AF3               	incf	___awmod@divisor+1,f
  6219  0A0B                     l4122:	
  6220  0A0B  0872               	movf	___awmod@divisor,w
  6221  0A0C  0473               	iorwf	___awmod@divisor+1,w
  6222  0A0D  1903               	btfsc	3,2
  6223  0A0E  2A38               	goto	l4140
  6224  0A0F  01F7               	clrf	___awmod@counter
  6225  0A10  0AF7               	incf	___awmod@counter,f
  6226  0A11                     l4130:	
  6227  0A11  1BF3               	btfsc	___awmod@divisor+1,7
  6228  0A12  2A1F               	goto	l4132
  6229  0A13  3001               	movlw	1
  6230  0A14                     u1595:	
  6231  0A14  1003               	clrc
  6232  0A15  0DF2               	rlf	___awmod@divisor,f
  6233  0A16  0DF3               	rlf	___awmod@divisor+1,f
  6234  0A17  3EFF               	addlw	-1
  6235  0A18  1D03               	skipz
  6236  0A19  2A14               	goto	u1595
  6237  0A1A  3001               	movlw	1
  6238  0A1B  00F6               	movwf	??___awmod
  6239  0A1C  0876               	movf	??___awmod,w
  6240  0A1D  07F7               	addwf	___awmod@counter,f
  6241  0A1E  2A11               	goto	l4130
  6242  0A1F                     l4132:	
  6243  0A1F  0873               	movf	___awmod@divisor+1,w
  6244  0A20  0275               	subwf	___awmod@dividend+1,w
  6245  0A21  1D03               	skipz
  6246  0A22  2A25               	goto	u1615
  6247  0A23  0872               	movf	___awmod@divisor,w
  6248  0A24  0274               	subwf	___awmod@dividend,w
  6249  0A25                     u1615:	
  6250  0A25  1C03               	skipc
  6251  0A26  2A2D               	goto	l4136
  6252  0A27  0872               	movf	___awmod@divisor,w
  6253  0A28  02F4               	subwf	___awmod@dividend,f
  6254  0A29  0873               	movf	___awmod@divisor+1,w
  6255  0A2A  1C03               	skipc
  6256  0A2B  03F5               	decf	___awmod@dividend+1,f
  6257  0A2C  02F5               	subwf	___awmod@dividend+1,f
  6258  0A2D                     l4136:	
  6259  0A2D  3001               	movlw	1
  6260  0A2E                     u1625:	
  6261  0A2E  1003               	clrc
  6262  0A2F  0CF3               	rrf	___awmod@divisor+1,f
  6263  0A30  0CF2               	rrf	___awmod@divisor,f
  6264  0A31  3EFF               	addlw	-1
  6265  0A32  1D03               	skipz
  6266  0A33  2A2E               	goto	u1625
  6267  0A34  3001               	movlw	1
  6268  0A35  02F7               	subwf	___awmod@counter,f
  6269  0A36  1D03               	btfss	3,2
  6270  0A37  2A1F               	goto	l4132
  6271  0A38                     l4140:	
  6272  0A38  0878               	movf	___awmod@sign,w
  6273  0A39  1903               	btfsc	3,2
  6274  0A3A  2A40               	goto	l4144
  6275  0A3B  09F4               	comf	___awmod@dividend,f
  6276  0A3C  09F5               	comf	___awmod@dividend+1,f
  6277  0A3D  0AF4               	incf	___awmod@dividend,f
  6278  0A3E  1903               	skipnz
  6279  0A3F  0AF5               	incf	___awmod@dividend+1,f
  6280  0A40                     l4144:	
  6281  0A40  0875               	movf	___awmod@dividend+1,w
  6282  0A41  00F3               	movwf	?___awmod+1
  6283  0A42  0874               	movf	___awmod@dividend,w
  6284  0A43  00F2               	movwf	?___awmod
  6285  0A44  0008               	return
  6286  0A45                     __end_of___awmod:	
  6287                           
  6288                           	psect	text28
  6289  0A45                     __ptext28:	
  6290 ;; *************** function ___awdiv *****************
  6291 ;; Defined at:
  6292 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  6293 ;; Parameters:    Size  Location     Type
  6294 ;;  divisor         2    0[BANK0 ] int 
  6295 ;;  dividend        2    2[BANK0 ] int 
  6296 ;; Auto vars:     Size  Location     Type
  6297 ;;  quotient        2    6[BANK0 ] int 
  6298 ;;  sign            1    5[BANK0 ] unsigned char 
  6299 ;;  counter         1    4[BANK0 ] unsigned char 
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  2    0[BANK0 ] int 
  6302 ;; Registers used:
  6303 ;;		wreg, status,2, status,0
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6309 ;;      Params:         0       4       0       0       0
  6310 ;;      Locals:         0       4       0       0       0
  6311 ;;      Temps:          1       0       0       0       0
  6312 ;;      Totals:         1       8       0       0       0
  6313 ;;Total ram usage:        9 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; Hardware stack levels required when called:    1
  6316 ;; This function calls:
  6317 ;;		Nothing
  6318 ;; This function is called by:
  6319 ;;		_display_Uhrzeit
  6320 ;;		_display_Datum
  6321 ;;		_mostrarLCD
  6322 ;;		_DEC_a_BCD
  6323 ;;		_uint_to_array
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           
  6328                           ;psect for function ___awdiv
  6329  0A45                     ___awdiv:	
  6330                           
  6331                           ;incstack = 0
  6332                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6333  0A45  1283               	bcf	3,5	;RP0=0, select bank0
  6334  0A46  1303               	bcf	3,6	;RP1=0, select bank0
  6335  0A47  01A5               	clrf	___awdiv@sign
  6336  0A48  1FA1               	btfss	___awdiv@divisor+1,7
  6337  0A49  2A51               	goto	l4074
  6338  0A4A  09A0               	comf	___awdiv@divisor,f
  6339  0A4B  09A1               	comf	___awdiv@divisor+1,f
  6340  0A4C  0AA0               	incf	___awdiv@divisor,f
  6341  0A4D  1903               	skipnz
  6342  0A4E  0AA1               	incf	___awdiv@divisor+1,f
  6343  0A4F  01A5               	clrf	___awdiv@sign
  6344  0A50  0AA5               	incf	___awdiv@sign,f
  6345  0A51                     l4074:	
  6346  0A51  1FA3               	btfss	___awdiv@dividend+1,7
  6347  0A52  2A5C               	goto	l4080
  6348  0A53  09A2               	comf	___awdiv@dividend,f
  6349  0A54  09A3               	comf	___awdiv@dividend+1,f
  6350  0A55  0AA2               	incf	___awdiv@dividend,f
  6351  0A56  1903               	skipnz
  6352  0A57  0AA3               	incf	___awdiv@dividend+1,f
  6353  0A58  3001               	movlw	1
  6354  0A59  00F8               	movwf	??___awdiv
  6355  0A5A  0878               	movf	??___awdiv,w
  6356  0A5B  06A5               	xorwf	___awdiv@sign,f
  6357  0A5C                     l4080:	
  6358  0A5C  01A6               	clrf	___awdiv@quotient
  6359  0A5D  01A7               	clrf	___awdiv@quotient+1
  6360  0A5E  0820               	movf	___awdiv@divisor,w
  6361  0A5F  0421               	iorwf	___awdiv@divisor+1,w
  6362  0A60  1903               	btfsc	3,2
  6363  0A61  2A93               	goto	l4102
  6364  0A62  01A4               	clrf	___awdiv@counter
  6365  0A63  0AA4               	incf	___awdiv@counter,f
  6366  0A64                     l4090:	
  6367  0A64  1BA1               	btfsc	___awdiv@divisor+1,7
  6368  0A65  2A72               	goto	l4092
  6369  0A66  3001               	movlw	1
  6370  0A67                     u1495:	
  6371  0A67  1003               	clrc
  6372  0A68  0DA0               	rlf	___awdiv@divisor,f
  6373  0A69  0DA1               	rlf	___awdiv@divisor+1,f
  6374  0A6A  3EFF               	addlw	-1
  6375  0A6B  1D03               	skipz
  6376  0A6C  2A67               	goto	u1495
  6377  0A6D  3001               	movlw	1
  6378  0A6E  00F8               	movwf	??___awdiv
  6379  0A6F  0878               	movf	??___awdiv,w
  6380  0A70  07A4               	addwf	___awdiv@counter,f
  6381  0A71  2A64               	goto	l4090
  6382  0A72                     l4092:	
  6383  0A72  3001               	movlw	1
  6384  0A73                     u1515:	
  6385  0A73  1003               	clrc
  6386  0A74  0DA6               	rlf	___awdiv@quotient,f
  6387  0A75  0DA7               	rlf	___awdiv@quotient+1,f
  6388  0A76  3EFF               	addlw	-1
  6389  0A77  1D03               	skipz
  6390  0A78  2A73               	goto	u1515
  6391  0A79  0821               	movf	___awdiv@divisor+1,w
  6392  0A7A  0223               	subwf	___awdiv@dividend+1,w
  6393  0A7B  1D03               	skipz
  6394  0A7C  2A7F               	goto	u1525
  6395  0A7D  0820               	movf	___awdiv@divisor,w
  6396  0A7E  0222               	subwf	___awdiv@dividend,w
  6397  0A7F                     u1525:	
  6398  0A7F  1C03               	skipc
  6399  0A80  2A88               	goto	l4098
  6400  0A81  0820               	movf	___awdiv@divisor,w
  6401  0A82  02A2               	subwf	___awdiv@dividend,f
  6402  0A83  0821               	movf	___awdiv@divisor+1,w
  6403  0A84  1C03               	skipc
  6404  0A85  03A3               	decf	___awdiv@dividend+1,f
  6405  0A86  02A3               	subwf	___awdiv@dividend+1,f
  6406  0A87  1426               	bsf	___awdiv@quotient,0
  6407  0A88                     l4098:	
  6408  0A88  3001               	movlw	1
  6409  0A89                     u1535:	
  6410  0A89  1003               	clrc
  6411  0A8A  0CA1               	rrf	___awdiv@divisor+1,f
  6412  0A8B  0CA0               	rrf	___awdiv@divisor,f
  6413  0A8C  3EFF               	addlw	-1
  6414  0A8D  1D03               	skipz
  6415  0A8E  2A89               	goto	u1535
  6416  0A8F  3001               	movlw	1
  6417  0A90  02A4               	subwf	___awdiv@counter,f
  6418  0A91  1D03               	btfss	3,2
  6419  0A92  2A72               	goto	l4092
  6420  0A93                     l4102:	
  6421  0A93  0825               	movf	___awdiv@sign,w
  6422  0A94  1903               	btfsc	3,2
  6423  0A95  2A9B               	goto	l4106
  6424  0A96  09A6               	comf	___awdiv@quotient,f
  6425  0A97  09A7               	comf	___awdiv@quotient+1,f
  6426  0A98  0AA6               	incf	___awdiv@quotient,f
  6427  0A99  1903               	skipnz
  6428  0A9A  0AA7               	incf	___awdiv@quotient+1,f
  6429  0A9B                     l4106:	
  6430  0A9B  0827               	movf	___awdiv@quotient+1,w
  6431  0A9C  00A1               	movwf	?___awdiv+1
  6432  0A9D  0826               	movf	___awdiv@quotient,w
  6433  0A9E  00A0               	movwf	?___awdiv
  6434  0A9F  0008               	return
  6435  0AA0                     __end_of___awdiv:	
  6436                           
  6437                           	psect	text29
  6438  0EA3                     __ptext29:	
  6439 ;; *************** function _OSC_config *****************
  6440 ;; Defined at:
  6441 ;;		line 353 in file "main_Master.c"
  6442 ;; Parameters:    Size  Location     Type
  6443 ;;  frecuencia      4    2[COMMON] unsigned long 
  6444 ;; Auto vars:     Size  Location     Type
  6445 ;;		None
  6446 ;; Return value:  Size  Location     Type
  6447 ;;                  1    wreg      void 
  6448 ;; Registers used:
  6449 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6450 ;; Tracked objects:
  6451 ;;		On entry : 0/0
  6452 ;;		On exit  : 0/0
  6453 ;;		Unchanged: 0/0
  6454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6455 ;;      Params:         4       0       0       0       0
  6456 ;;      Locals:         0       0       0       0       0
  6457 ;;      Temps:          0       0       0       0       0
  6458 ;;      Totals:         4       0       0       0       0
  6459 ;;Total ram usage:        4 bytes
  6460 ;; Hardware stack levels used:    1
  6461 ;; Hardware stack levels required when called:    1
  6462 ;; This function calls:
  6463 ;;		Nothing
  6464 ;; This function is called by:
  6465 ;;		_SetUp
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469                           
  6470                           ;psect for function _OSC_config
  6471  0EA3                     _OSC_config:	
  6472                           
  6473                           ;main_Master.c: 354:     switch(frecuencia){
  6474                           
  6475                           ;incstack = 0
  6476                           ; Regs used in _OSC_config: [wreg-fsr0h+status,2+status,0]
  6477  0EA3  2EDF               	goto	l2844
  6478  0EA4                     l2826:	
  6479                           
  6480                           ;main_Master.c: 356:             OSCCONbits.IRCF = 0b111;
  6481  0EA4  3070               	movlw	112
  6482  0EA5  1683               	bsf	3,5	;RP0=1, select bank1
  6483  0EA6  1303               	bcf	3,6	;RP1=0, select bank1
  6484  0EA7  048F               	iorwf	15,f	;volatile
  6485                           
  6486                           ;main_Master.c: 357:             break;
  6487  0EA8  0008               	return
  6488  0EA9                     l2828:	
  6489                           
  6490                           ;main_Master.c: 359:             OSCCONbits.IRCF = 0b110;
  6491  0EA9  1683               	bsf	3,5	;RP0=1, select bank1
  6492  0EAA  1303               	bcf	3,6	;RP1=0, select bank1
  6493  0EAB  080F               	movf	15,w	;volatile
  6494  0EAC  398F               	andlw	-113
  6495  0EAD  3860               	iorlw	96
  6496  0EAE  008F               	movwf	15	;volatile
  6497                           
  6498                           ;main_Master.c: 360:             break;
  6499  0EAF  0008               	return
  6500  0EB0                     l2830:	
  6501                           
  6502                           ;main_Master.c: 362:             OSCCONbits.IRCF = 0b101;
  6503  0EB0  1683               	bsf	3,5	;RP0=1, select bank1
  6504  0EB1  1303               	bcf	3,6	;RP1=0, select bank1
  6505  0EB2  080F               	movf	15,w	;volatile
  6506  0EB3  398F               	andlw	-113
  6507  0EB4  3850               	iorlw	80
  6508  0EB5  008F               	movwf	15	;volatile
  6509                           
  6510                           ;main_Master.c: 363:             break;
  6511  0EB6  0008               	return
  6512  0EB7                     l2832:	
  6513                           
  6514                           ;main_Master.c: 365:             OSCCONbits.IRCF = 0b100;
  6515  0EB7  1683               	bsf	3,5	;RP0=1, select bank1
  6516  0EB8  1303               	bcf	3,6	;RP1=0, select bank1
  6517  0EB9  080F               	movf	15,w	;volatile
  6518  0EBA  398F               	andlw	-113
  6519  0EBB  3840               	iorlw	64
  6520  0EBC  008F               	movwf	15	;volatile
  6521                           
  6522                           ;main_Master.c: 366:             break;
  6523  0EBD  0008               	return
  6524  0EBE                     l2834:	
  6525                           
  6526                           ;main_Master.c: 368:             OSCCONbits.IRCF = 0b011;
  6527  0EBE  1683               	bsf	3,5	;RP0=1, select bank1
  6528  0EBF  1303               	bcf	3,6	;RP1=0, select bank1
  6529  0EC0  080F               	movf	15,w	;volatile
  6530  0EC1  398F               	andlw	-113
  6531  0EC2  3830               	iorlw	48
  6532  0EC3  008F               	movwf	15	;volatile
  6533                           
  6534                           ;main_Master.c: 369:             break;
  6535  0EC4  0008               	return
  6536  0EC5                     l2836:	
  6537                           
  6538                           ;main_Master.c: 371:             OSCCONbits.IRCF = 0b010;
  6539  0EC5  1683               	bsf	3,5	;RP0=1, select bank1
  6540  0EC6  1303               	bcf	3,6	;RP1=0, select bank1
  6541  0EC7  080F               	movf	15,w	;volatile
  6542  0EC8  398F               	andlw	-113
  6543  0EC9  3820               	iorlw	32
  6544  0ECA  008F               	movwf	15	;volatile
  6545                           
  6546                           ;main_Master.c: 372:             break;
  6547  0ECB  0008               	return
  6548  0ECC                     l2838:	
  6549                           
  6550                           ;main_Master.c: 374:             OSCCONbits.IRCF = 0b001;
  6551  0ECC  1683               	bsf	3,5	;RP0=1, select bank1
  6552  0ECD  1303               	bcf	3,6	;RP1=0, select bank1
  6553  0ECE  080F               	movf	15,w	;volatile
  6554  0ECF  398F               	andlw	-113
  6555  0ED0  3810               	iorlw	16
  6556  0ED1  008F               	movwf	15	;volatile
  6557                           
  6558                           ;main_Master.c: 375:             break;
  6559  0ED2  0008               	return
  6560  0ED3                     l2840:	
  6561                           
  6562                           ;main_Master.c: 377:             OSCCONbits.IRCF = 0b000;
  6563  0ED3  308F               	movlw	-113
  6564  0ED4  1683               	bsf	3,5	;RP0=1, select bank1
  6565  0ED5  1303               	bcf	3,6	;RP1=0, select bank1
  6566  0ED6  058F               	andwf	15,f	;volatile
  6567                           
  6568                           ;main_Master.c: 378:             break;
  6569  0ED7  0008               	return
  6570  0ED8                     l2842:	
  6571                           
  6572                           ;main_Master.c: 380:             OSCCONbits.IRCF = 0b110;
  6573  0ED8  1683               	bsf	3,5	;RP0=1, select bank1
  6574  0ED9  1303               	bcf	3,6	;RP1=0, select bank1
  6575  0EDA  080F               	movf	15,w	;volatile
  6576  0EDB  398F               	andlw	-113
  6577  0EDC  3860               	iorlw	96
  6578  0EDD  008F               	movwf	15	;volatile
  6579                           
  6580                           ;main_Master.c: 381:     }
  6581  0EDE  0008               	return
  6582  0EDF                     l2844:	
  6583                           
  6584                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 9 sub-sw
      +                          itches
  6585                           ; Switch size 1, requested type "simple"
  6586                           ; Number of cases is 1, Range of values is 0 to 0
  6587                           ; switch strategies available:
  6588                           ; Name         Instructions Cycles
  6589                           ; simple_byte            4     3 (average)
  6590                           ; direct_byte           11     8 (fixed)
  6591                           ; jumptable            260     6 (fixed)
  6592                           ;	Chosen strategy is simple_byte
  6593  0EDF  0875               	movf	OSC_config@frecuencia+3,w
  6594  0EE0  3A00               	xorlw	0	; case 0
  6595  0EE1  1903               	skipnz
  6596  0EE2  2F34               	goto	l5046
  6597  0EE3  2ED8               	goto	l2842
  6598  0EE4                     l5030:	
  6599                           
  6600                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6601                           ; Switch size 1, requested type "simple"
  6602                           ; Number of cases is 1, Range of values is 125 to 125
  6603                           ; switch strategies available:
  6604                           ; Name         Instructions Cycles
  6605                           ; simple_byte            4     3 (average)
  6606                           ; direct_byte           14    11 (fixed)
  6607                           ; jumptable            263     9 (fixed)
  6608                           ;	Chosen strategy is simple_byte
  6609  0EE4  0873               	movf	OSC_config@frecuencia+1,w
  6610  0EE5  3A7D               	xorlw	125	; case 125
  6611  0EE6  1903               	skipnz
  6612  0EE7  2EE9               	goto	l5048
  6613  0EE8  2ED8               	goto	l2842
  6614  0EE9                     l5048:	
  6615                           
  6616                           ; Switch size 1, requested type "simple"
  6617                           ; Number of cases is 1, Range of values is 0 to 0
  6618                           ; switch strategies available:
  6619                           ; Name         Instructions Cycles
  6620                           ; simple_byte            4     3 (average)
  6621                           ; direct_byte           11     8 (fixed)
  6622                           ; jumptable            260     6 (fixed)
  6623                           ;	Chosen strategy is simple_byte
  6624  0EE9  0872               	movf	OSC_config@frecuencia,w
  6625  0EEA  3A00               	xorlw	0	; case 0
  6626  0EEB  1903               	skipnz
  6627  0EEC  2ED3               	goto	l2840
  6628  0EED  2ED8               	goto	l2842
  6629  0EEE                     l5032:	
  6630                           
  6631                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6632                           ; Switch size 1, requested type "simple"
  6633                           ; Number of cases is 1, Range of values is 232 to 232
  6634                           ; switch strategies available:
  6635                           ; Name         Instructions Cycles
  6636                           ; simple_byte            4     3 (average)
  6637                           ; direct_byte           14    11 (fixed)
  6638                           ; jumptable            263     9 (fixed)
  6639                           ;	Chosen strategy is simple_byte
  6640  0EEE  0873               	movf	OSC_config@frecuencia+1,w
  6641  0EEF  3AE8               	xorlw	232	; case 232
  6642  0EF0  1903               	skipnz
  6643  0EF1  2EF3               	goto	l5050
  6644  0EF2  2ED8               	goto	l2842
  6645  0EF3                     l5050:	
  6646                           
  6647                           ; Switch size 1, requested type "simple"
  6648                           ; Number of cases is 1, Range of values is 72 to 72
  6649                           ; switch strategies available:
  6650                           ; Name         Instructions Cycles
  6651                           ; simple_byte            4     3 (average)
  6652                           ; direct_byte           14    11 (fixed)
  6653                           ; jumptable            263     9 (fixed)
  6654                           ;	Chosen strategy is simple_byte
  6655  0EF3  0872               	movf	OSC_config@frecuencia,w
  6656  0EF4  3A48               	xorlw	72	; case 72
  6657  0EF5  1903               	skipnz
  6658  0EF6  2ECC               	goto	l2838
  6659  0EF7  2ED8               	goto	l2842
  6660  0EF8                     l5034:	
  6661                           
  6662                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6663                           ; Switch size 1, requested type "simple"
  6664                           ; Number of cases is 1, Range of values is 208 to 208
  6665                           ; switch strategies available:
  6666                           ; Name         Instructions Cycles
  6667                           ; simple_byte            4     3 (average)
  6668                           ; direct_byte           14    11 (fixed)
  6669                           ; jumptable            263     9 (fixed)
  6670                           ;	Chosen strategy is simple_byte
  6671  0EF8  0873               	movf	OSC_config@frecuencia+1,w
  6672  0EF9  3AD0               	xorlw	208	; case 208
  6673  0EFA  1903               	skipnz
  6674  0EFB  2EFD               	goto	l5052
  6675  0EFC  2ED8               	goto	l2842
  6676  0EFD                     l5052:	
  6677                           
  6678                           ; Switch size 1, requested type "simple"
  6679                           ; Number of cases is 1, Range of values is 144 to 144
  6680                           ; switch strategies available:
  6681                           ; Name         Instructions Cycles
  6682                           ; simple_byte            4     3 (average)
  6683                           ; direct_byte           14    11 (fixed)
  6684                           ; jumptable            263     9 (fixed)
  6685                           ;	Chosen strategy is simple_byte
  6686  0EFD  0872               	movf	OSC_config@frecuencia,w
  6687  0EFE  3A90               	xorlw	144	; case 144
  6688  0EFF  1903               	skipnz
  6689  0F00  2EC5               	goto	l2836
  6690  0F01  2ED8               	goto	l2842
  6691  0F02                     l5036:	
  6692                           
  6693                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6694                           ; Switch size 1, requested type "simple"
  6695                           ; Number of cases is 1, Range of values is 161 to 161
  6696                           ; switch strategies available:
  6697                           ; Name         Instructions Cycles
  6698                           ; simple_byte            4     3 (average)
  6699                           ; direct_byte           14    11 (fixed)
  6700                           ; jumptable            263     9 (fixed)
  6701                           ;	Chosen strategy is simple_byte
  6702  0F02  0873               	movf	OSC_config@frecuencia+1,w
  6703  0F03  3AA1               	xorlw	161	; case 161
  6704  0F04  1903               	skipnz
  6705  0F05  2F07               	goto	l5054
  6706  0F06  2ED8               	goto	l2842
  6707  0F07                     l5054:	
  6708                           
  6709                           ; Switch size 1, requested type "simple"
  6710                           ; Number of cases is 1, Range of values is 32 to 32
  6711                           ; switch strategies available:
  6712                           ; Name         Instructions Cycles
  6713                           ; simple_byte            4     3 (average)
  6714                           ; direct_byte           14    11 (fixed)
  6715                           ; jumptable            263     9 (fixed)
  6716                           ;	Chosen strategy is simple_byte
  6717  0F07  0872               	movf	OSC_config@frecuencia,w
  6718  0F08  3A20               	xorlw	32	; case 32
  6719  0F09  1903               	skipnz
  6720  0F0A  2EBE               	goto	l2834
  6721  0F0B  2ED8               	goto	l2842
  6722  0F0C                     l5038:	
  6723                           
  6724                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6725                           ; Switch size 1, requested type "simple"
  6726                           ; Number of cases is 1, Range of values is 66 to 66
  6727                           ; switch strategies available:
  6728                           ; Name         Instructions Cycles
  6729                           ; simple_byte            4     3 (average)
  6730                           ; direct_byte           14    11 (fixed)
  6731                           ; jumptable            263     9 (fixed)
  6732                           ;	Chosen strategy is simple_byte
  6733  0F0C  0873               	movf	OSC_config@frecuencia+1,w
  6734  0F0D  3A42               	xorlw	66	; case 66
  6735  0F0E  1903               	skipnz
  6736  0F0F  2F11               	goto	l5056
  6737  0F10  2ED8               	goto	l2842
  6738  0F11                     l5056:	
  6739                           
  6740                           ; Switch size 1, requested type "simple"
  6741                           ; Number of cases is 1, Range of values is 64 to 64
  6742                           ; switch strategies available:
  6743                           ; Name         Instructions Cycles
  6744                           ; simple_byte            4     3 (average)
  6745                           ; direct_byte           14    11 (fixed)
  6746                           ; jumptable            263     9 (fixed)
  6747                           ;	Chosen strategy is simple_byte
  6748  0F11  0872               	movf	OSC_config@frecuencia,w
  6749  0F12  3A40               	xorlw	64	; case 64
  6750  0F13  1903               	skipnz
  6751  0F14  2EB7               	goto	l2832
  6752  0F15  2ED8               	goto	l2842
  6753  0F16                     l5040:	
  6754                           
  6755                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6756                           ; Switch size 1, requested type "simple"
  6757                           ; Number of cases is 1, Range of values is 132 to 132
  6758                           ; switch strategies available:
  6759                           ; Name         Instructions Cycles
  6760                           ; simple_byte            4     3 (average)
  6761                           ; direct_byte           14    11 (fixed)
  6762                           ; jumptable            263     9 (fixed)
  6763                           ;	Chosen strategy is simple_byte
  6764  0F16  0873               	movf	OSC_config@frecuencia+1,w
  6765  0F17  3A84               	xorlw	132	; case 132
  6766  0F18  1903               	skipnz
  6767  0F19  2F1B               	goto	l5058
  6768  0F1A  2ED8               	goto	l2842
  6769  0F1B                     l5058:	
  6770                           
  6771                           ; Switch size 1, requested type "simple"
  6772                           ; Number of cases is 1, Range of values is 128 to 128
  6773                           ; switch strategies available:
  6774                           ; Name         Instructions Cycles
  6775                           ; simple_byte            4     3 (average)
  6776                           ; direct_byte           14    11 (fixed)
  6777                           ; jumptable            263     9 (fixed)
  6778                           ;	Chosen strategy is simple_byte
  6779  0F1B  0872               	movf	OSC_config@frecuencia,w
  6780  0F1C  3A80               	xorlw	128	; case 128
  6781  0F1D  1903               	skipnz
  6782  0F1E  2EB0               	goto	l2830
  6783  0F1F  2ED8               	goto	l2842
  6784  0F20                     l5042:	
  6785                           
  6786                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6787                           ; Switch size 1, requested type "simple"
  6788                           ; Number of cases is 1, Range of values is 9 to 9
  6789                           ; switch strategies available:
  6790                           ; Name         Instructions Cycles
  6791                           ; simple_byte            4     3 (average)
  6792                           ; direct_byte           14    11 (fixed)
  6793                           ; jumptable            263     9 (fixed)
  6794                           ;	Chosen strategy is simple_byte
  6795  0F20  0873               	movf	OSC_config@frecuencia+1,w
  6796  0F21  3A09               	xorlw	9	; case 9
  6797  0F22  1903               	skipnz
  6798  0F23  2F25               	goto	l5060
  6799  0F24  2ED8               	goto	l2842
  6800  0F25                     l5060:	
  6801                           
  6802                           ; Switch size 1, requested type "simple"
  6803                           ; Number of cases is 1, Range of values is 0 to 0
  6804                           ; switch strategies available:
  6805                           ; Name         Instructions Cycles
  6806                           ; simple_byte            4     3 (average)
  6807                           ; direct_byte           11     8 (fixed)
  6808                           ; jumptable            260     6 (fixed)
  6809                           ;	Chosen strategy is simple_byte
  6810  0F25  0872               	movf	OSC_config@frecuencia,w
  6811  0F26  3A00               	xorlw	0	; case 0
  6812  0F27  1903               	skipnz
  6813  0F28  2EA9               	goto	l2828
  6814  0F29  2ED8               	goto	l2842
  6815  0F2A                     l5044:	
  6816                           
  6817                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6818                           ; Switch size 1, requested type "simple"
  6819                           ; Number of cases is 1, Range of values is 18 to 18
  6820                           ; switch strategies available:
  6821                           ; Name         Instructions Cycles
  6822                           ; simple_byte            4     3 (average)
  6823                           ; direct_byte           14    11 (fixed)
  6824                           ; jumptable            263     9 (fixed)
  6825                           ;	Chosen strategy is simple_byte
  6826  0F2A  0873               	movf	OSC_config@frecuencia+1,w
  6827  0F2B  3A12               	xorlw	18	; case 18
  6828  0F2C  1903               	skipnz
  6829  0F2D  2F2F               	goto	l5062
  6830  0F2E  2ED8               	goto	l2842
  6831  0F2F                     l5062:	
  6832                           
  6833                           ; Switch size 1, requested type "simple"
  6834                           ; Number of cases is 1, Range of values is 0 to 0
  6835                           ; switch strategies available:
  6836                           ; Name         Instructions Cycles
  6837                           ; simple_byte            4     3 (average)
  6838                           ; direct_byte           11     8 (fixed)
  6839                           ; jumptable            260     6 (fixed)
  6840                           ;	Chosen strategy is simple_byte
  6841  0F2F  0872               	movf	OSC_config@frecuencia,w
  6842  0F30  3A00               	xorlw	0	; case 0
  6843  0F31  1903               	skipnz
  6844  0F32  2EA4               	goto	l2826
  6845  0F33  2ED8               	goto	l2842
  6846  0F34                     l5046:	
  6847                           
  6848                           ; Switch size 1, requested type "simple"
  6849                           ; Number of cases is 8, Range of values is 0 to 122
  6850                           ; switch strategies available:
  6851                           ; Name         Instructions Cycles
  6852                           ; simple_byte           25    13 (average)
  6853                           ; jumptable            260     6 (fixed)
  6854                           ;	Chosen strategy is simple_byte
  6855  0F34  0874               	movf	OSC_config@frecuencia+2,w
  6856  0F35  3A00               	xorlw	0	; case 0
  6857  0F36  1903               	skipnz
  6858  0F37  2EE4               	goto	l5030
  6859  0F38  3A01               	xorlw	1	; case 1
  6860  0F39  1903               	skipnz
  6861  0F3A  2EEE               	goto	l5032
  6862  0F3B  3A02               	xorlw	2	; case 3
  6863  0F3C  1903               	skipnz
  6864  0F3D  2EF8               	goto	l5034
  6865  0F3E  3A04               	xorlw	4	; case 7
  6866  0F3F  1903               	skipnz
  6867  0F40  2F02               	goto	l5036
  6868  0F41  3A08               	xorlw	8	; case 15
  6869  0F42  1903               	skipnz
  6870  0F43  2F0C               	goto	l5038
  6871  0F44  3A11               	xorlw	17	; case 30
  6872  0F45  1903               	skipnz
  6873  0F46  2F16               	goto	l5040
  6874  0F47  3A23               	xorlw	35	; case 61
  6875  0F48  1903               	skipnz
  6876  0F49  2F20               	goto	l5042
  6877  0F4A  3A47               	xorlw	71	; case 122
  6878  0F4B  1903               	skipnz
  6879  0F4C  2F2A               	goto	l5044
  6880  0F4D  2ED8               	goto	l2842
  6881  0F4E  0008               	return
  6882  0F4F                     __end_of_OSC_config:	
  6883                           
  6884                           	psect	text30
  6885  0B00                     __ptext30:	
  6886 ;; *************** function _LCD_init *****************
  6887 ;; Defined at:
  6888 ;;		line 44 in file "LCD_8bits.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;		None
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;		None
  6893 ;; Return value:  Size  Location     Type
  6894 ;;                  1    wreg      void 
  6895 ;; Registers used:
  6896 ;;		wreg, status,2, status,0, pclath, cstack
  6897 ;; Tracked objects:
  6898 ;;		On entry : 0/0
  6899 ;;		On exit  : 0/0
  6900 ;;		Unchanged: 0/0
  6901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6902 ;;      Params:         0       0       0       0       0
  6903 ;;      Locals:         0       0       0       0       0
  6904 ;;      Temps:          2       0       0       0       0
  6905 ;;      Totals:         2       0       0       0       0
  6906 ;;Total ram usage:        2 bytes
  6907 ;; Hardware stack levels used:    1
  6908 ;; Hardware stack levels required when called:    2
  6909 ;; This function calls:
  6910 ;;		_LCD_Cmd
  6911 ;; This function is called by:
  6912 ;;		_SetUp
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           
  6917                           ;psect for function _LCD_init
  6918  0B00                     _LCD_init:	
  6919                           
  6920                           ;LCD_8bits.c: 45:     _delay((unsigned long)((20)*(4000000/4000.0)));
  6921                           
  6922                           ;incstack = 0
  6923                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  6924  0B00  301A               	movlw	26
  6925  0B01  00F6               	movwf	??_LCD_init+1
  6926  0B02  30F8               	movlw	248
  6927  0B03  00F5               	movwf	??_LCD_init
  6928  0B04                     u2027:	
  6929  0B04  0BF5               	decfsz	??_LCD_init,f
  6930  0B05  2B04               	goto	u2027
  6931  0B06  0BF6               	decfsz	??_LCD_init+1,f
  6932  0B07  2B04               	goto	u2027
  6933  0B08  0000               	nop
  6934                           
  6935                           ;LCD_8bits.c: 46:     LCD_Cmd(0x30);
  6936  0B09  3030               	movlw	48
  6937  0B0A  120A  158A  219B  120A  158A  	fcall	_LCD_Cmd
  6938                           
  6939                           ;LCD_8bits.c: 47:     _delay((unsigned long)((5)*(4000000/4000.0)));
  6940  0B0F  3007               	movlw	7
  6941  0B10  00F6               	movwf	??_LCD_init+1
  6942  0B11  307D               	movlw	125
  6943  0B12  00F5               	movwf	??_LCD_init
  6944  0B13                     u2037:	
  6945  0B13  0BF5               	decfsz	??_LCD_init,f
  6946  0B14  2B13               	goto	u2037
  6947  0B15  0BF6               	decfsz	??_LCD_init+1,f
  6948  0B16  2B13               	goto	u2037
  6949                           
  6950                           ;LCD_8bits.c: 48:     LCD_Cmd(0x30);
  6951  0B17  3030               	movlw	48
  6952  0B18  120A  158A  219B  120A  158A  	fcall	_LCD_Cmd
  6953                           
  6954                           ;LCD_8bits.c: 49:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  6955  0B1D  3021               	movlw	33
  6956  0B1E  00F5               	movwf	??_LCD_init
  6957  0B1F                     u2047:	
  6958  0B1F  0BF5               	decfsz	??_LCD_init,f
  6959  0B20  2B1F               	goto	u2047
  6960                           
  6961                           ;LCD_8bits.c: 50:     LCD_Cmd(0x30);
  6962  0B21  3030               	movlw	48
  6963  0B22  120A  158A  219B  120A  158A  	fcall	_LCD_Cmd
  6964                           
  6965                           ;LCD_8bits.c: 51:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  6966  0B27  3021               	movlw	33
  6967  0B28  00F5               	movwf	??_LCD_init
  6968  0B29                     u2057:	
  6969  0B29  0BF5               	decfsz	??_LCD_init,f
  6970  0B2A  2B29               	goto	u2057
  6971                           
  6972                           ;LCD_8bits.c: 52:     LCD_Cmd(0x38);
  6973  0B2B  3038               	movlw	56
  6974  0B2C  120A  158A  219B  120A  158A  	fcall	_LCD_Cmd
  6975                           
  6976                           ;LCD_8bits.c: 53:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  6977  0B31  3011               	movlw	17
  6978  0B32  00F5               	movwf	??_LCD_init
  6979  0B33                     u2067:	
  6980  0B33  0BF5               	decfsz	??_LCD_init,f
  6981  0B34  2B33               	goto	u2067
  6982  0B35  0000               	nop
  6983                           
  6984                           ;LCD_8bits.c: 54:     LCD_Cmd(0x08);
  6985  0B36  3008               	movlw	8
  6986  0B37  120A  158A  219B  120A  158A  	fcall	_LCD_Cmd
  6987                           
  6988                           ;LCD_8bits.c: 55:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  6989  0B3C  3011               	movlw	17
  6990  0B3D  00F5               	movwf	??_LCD_init
  6991  0B3E                     u2077:	
  6992  0B3E  0BF5               	decfsz	??_LCD_init,f
  6993  0B3F  2B3E               	goto	u2077
  6994  0B40  0000               	nop
  6995                           
  6996                           ;LCD_8bits.c: 56:     LCD_Cmd(0x01);
  6997  0B41  3001               	movlw	1
  6998  0B42  120A  158A  219B  120A  158A  	fcall	_LCD_Cmd
  6999                           
  7000                           ;LCD_8bits.c: 57:     _delay((unsigned long)((3)*(4000000/4000.0)));
  7001  0B47  3004               	movlw	4
  7002  0B48  00F6               	movwf	??_LCD_init+1
  7003  0B49  30E4               	movlw	228
  7004  0B4A  00F5               	movwf	??_LCD_init
  7005  0B4B                     u2087:	
  7006  0B4B  0BF5               	decfsz	??_LCD_init,f
  7007  0B4C  2B4B               	goto	u2087
  7008  0B4D  0BF6               	decfsz	??_LCD_init+1,f
  7009  0B4E  2B4B               	goto	u2087
  7010  0B4F  0000               	nop
  7011                           
  7012                           ;LCD_8bits.c: 58:     LCD_Cmd(0x06);
  7013  0B50  3006               	movlw	6
  7014  0B51  120A  158A  219B  120A  158A  	fcall	_LCD_Cmd
  7015                           
  7016                           ;LCD_8bits.c: 59:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7017  0B56  3011               	movlw	17
  7018  0B57  00F5               	movwf	??_LCD_init
  7019  0B58                     u2097:	
  7020  0B58  0BF5               	decfsz	??_LCD_init,f
  7021  0B59  2B58               	goto	u2097
  7022  0B5A  0000               	nop
  7023                           
  7024                           ;LCD_8bits.c: 60:     LCD_Cmd(0x0C);
  7025  0B5B  300C               	movlw	12
  7026  0B5C  120A  158A  219B  120A  158A  	fcall	_LCD_Cmd
  7027                           
  7028                           ;LCD_8bits.c: 61:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7029  0B61  3011               	movlw	17
  7030  0B62  00F5               	movwf	??_LCD_init
  7031  0B63                     u2107:	
  7032  0B63  0BF5               	decfsz	??_LCD_init,f
  7033  0B64  2B63               	goto	u2107
  7034  0B65  0000               	nop
  7035  0B66  0008               	return
  7036  0B67                     __end_of_LCD_init:	
  7037                           
  7038                           	psect	text31
  7039  0863                     __ptext31:	
  7040 ;; *************** function _LCD_clear *****************
  7041 ;; Defined at:
  7042 ;;		line 32 in file "LCD_8bits.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;		None
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;		None
  7047 ;; Return value:  Size  Location     Type
  7048 ;;                  1    wreg      void 
  7049 ;; Registers used:
  7050 ;;		wreg, status,2, status,0, pclath, cstack
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7056 ;;      Params:         0       0       0       0       0
  7057 ;;      Locals:         0       0       0       0       0
  7058 ;;      Temps:          2       0       0       0       0
  7059 ;;      Totals:         2       0       0       0       0
  7060 ;;Total ram usage:        2 bytes
  7061 ;; Hardware stack levels used:    1
  7062 ;; Hardware stack levels required when called:    2
  7063 ;; This function calls:
  7064 ;;		_LCD_Cmd
  7065 ;; This function is called by:
  7066 ;;		_SetUp
  7067 ;;		_mostrarLCD
  7068 ;;		_pressBoton1
  7069 ;;		_pressBoton2
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           
  7074                           ;psect for function _LCD_clear
  7075  0863                     _LCD_clear:	
  7076                           
  7077                           ;LCD_8bits.c: 33:     LCD_Cmd(0x00);
  7078                           
  7079                           ;incstack = 0
  7080                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  7081  0863  3000               	movlw	0
  7082  0864  120A  158A  219B  120A  158A  	fcall	_LCD_Cmd
  7083                           
  7084                           ;LCD_8bits.c: 34:     LCD_Cmd(0x01);
  7085  0869  3001               	movlw	1
  7086  086A  120A  158A  219B  120A  158A  	fcall	_LCD_Cmd
  7087                           
  7088                           ;LCD_8bits.c: 35:     _delay((unsigned long)((4)*(4000000/4000.0)));
  7089  086F  3006               	movlw	6
  7090  0870  00F6               	movwf	??_LCD_clear+1
  7091  0871  3030               	movlw	48
  7092  0872  00F5               	movwf	??_LCD_clear
  7093  0873                     u2117:	
  7094  0873  0BF5               	decfsz	??_LCD_clear,f
  7095  0874  2873               	goto	u2117
  7096  0875  0BF6               	decfsz	??_LCD_clear+1,f
  7097  0876  2873               	goto	u2117
  7098  0877  0000               	nop
  7099  0878  0008               	return
  7100  0879                     __end_of_LCD_clear:	
  7101                           
  7102                           	psect	text32
  7103  0917                     __ptext32:	
  7104 ;; *************** function _LCD_Create_Char *****************
  7105 ;; Defined at:
  7106 ;;		line 116 in file "LCD_8bits.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;  charnum         1    wreg     unsigned char 
  7109 ;;  chardata        1    5[COMMON] PTR const unsigned char 
  7110 ;;		 -> arrowr_vacio(8), gota(8), termometro(8), arrowr(8), 
  7111 ;;		 -> atilde(8), 
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;  charnum         1    7[COMMON] unsigned char 
  7114 ;;  n               1    8[COMMON] unsigned char 
  7115 ;; Return value:  Size  Location     Type
  7116 ;;                  1    wreg      void 
  7117 ;; Registers used:
  7118 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7119 ;; Tracked objects:
  7120 ;;		On entry : 0/0
  7121 ;;		On exit  : 0/0
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7124 ;;      Params:         1       0       0       0       0
  7125 ;;      Locals:         2       0       0       0       0
  7126 ;;      Temps:          1       0       0       0       0
  7127 ;;      Totals:         4       0       0       0       0
  7128 ;;Total ram usage:        4 bytes
  7129 ;; Hardware stack levels used:    1
  7130 ;; Hardware stack levels required when called:    2
  7131 ;; This function calls:
  7132 ;;		_LCD_Cmd
  7133 ;;		_LCD_Write_Character
  7134 ;; This function is called by:
  7135 ;;		_SetUp
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           
  7139                           
  7140                           ;psect for function _LCD_Create_Char
  7141  0917                     _LCD_Create_Char:	
  7142                           
  7143                           ;incstack = 0
  7144                           ; Regs used in _LCD_Create_Char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7145                           ;LCD_Create_Char@charnum stored from wreg
  7146  0917  00F7               	movwf	LCD_Create_Char@charnum
  7147                           
  7148                           ;LCD_8bits.c: 117:  uint8_t n;;LCD_8bits.c: 118:  charnum &= 0x07;
  7149  0918  3007               	movlw	7
  7150  0919  00F6               	movwf	??_LCD_Create_Char
  7151  091A  0876               	movf	??_LCD_Create_Char,w
  7152  091B  05F7               	andwf	LCD_Create_Char@charnum,f
  7153                           
  7154                           ;LCD_8bits.c: 119:  LCD_Cmd(0x40 | (charnum << 3));
  7155  091C  0877               	movf	LCD_Create_Char@charnum,w
  7156  091D  00F6               	movwf	??_LCD_Create_Char
  7157  091E  3002               	movlw	2
  7158  091F                     u1135:	
  7159  091F  1003               	clrc
  7160  0920  0DF6               	rlf	??_LCD_Create_Char,f
  7161  0921  3EFF               	addlw	-1
  7162  0922  1D03               	skipz
  7163  0923  291F               	goto	u1135
  7164  0924  1003               	clrc
  7165  0925  0D76               	rlf	??_LCD_Create_Char,w
  7166  0926  3840               	iorlw	64
  7167  0927  120A  158A  219B  120A  158A  	fcall	_LCD_Cmd
  7168                           
  7169                           ;LCD_8bits.c: 120:  for (n = 0; n < 8; n++)
  7170  092C  01F8               	clrf	LCD_Create_Char@n
  7171  092D                     l2948:	
  7172                           
  7173                           ;LCD_8bits.c: 121:   LCD_Write_Character(chardata[n]);
  7174  092D  0878               	movf	LCD_Create_Char@n,w
  7175  092E  0775               	addwf	LCD_Create_Char@chardata,w
  7176  092F  0084               	movwf	4
  7177  0930  120A  118A  2700  120A  158A  	fcall	stringdir
  7178  0935  120A  158A  200C  120A  158A  	fcall	_LCD_Write_Character
  7179  093A  3001               	movlw	1
  7180  093B  00F6               	movwf	??_LCD_Create_Char
  7181  093C  0876               	movf	??_LCD_Create_Char,w
  7182  093D  07F8               	addwf	LCD_Create_Char@n,f
  7183  093E  3008               	movlw	8
  7184  093F  0278               	subwf	LCD_Create_Char@n,w
  7185  0940  1803               	btfsc	3,0
  7186  0941  0008               	return
  7187  0942  292D               	goto	l2948
  7188  0943                     __end_of_LCD_Create_Char:	
  7189                           
  7190                           	psect	text33
  7191  080C                     __ptext33:	
  7192 ;; *************** function _LCD_Write_Character *****************
  7193 ;; Defined at:
  7194 ;;		line 64 in file "LCD_8bits.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;  caracter        1    wreg     unsigned char 
  7197 ;; Auto vars:     Size  Location     Type
  7198 ;;  caracter        1    3[COMMON] unsigned char 
  7199 ;; Return value:  Size  Location     Type
  7200 ;;                  1    wreg      void 
  7201 ;; Registers used:
  7202 ;;		wreg
  7203 ;; Tracked objects:
  7204 ;;		On entry : 0/0
  7205 ;;		On exit  : 0/0
  7206 ;;		Unchanged: 0/0
  7207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7208 ;;      Params:         0       0       0       0       0
  7209 ;;      Locals:         1       0       0       0       0
  7210 ;;      Temps:          1       0       0       0       0
  7211 ;;      Totals:         2       0       0       0       0
  7212 ;;Total ram usage:        2 bytes
  7213 ;; Hardware stack levels used:    1
  7214 ;; Hardware stack levels required when called:    1
  7215 ;; This function calls:
  7216 ;;		Nothing
  7217 ;; This function is called by:
  7218 ;;		_display_Uhrzeit
  7219 ;;		_display_Datum
  7220 ;;		_mostrarLCD
  7221 ;;		_pressBoton2
  7222 ;;		_LCD_Write_String
  7223 ;;		_LCD_Create_Char
  7224 ;; This function uses a non-reentrant model
  7225 ;;
  7226                           
  7227                           
  7228                           ;psect for function _LCD_Write_Character
  7229  080C                     _LCD_Write_Character:	
  7230                           
  7231                           ;incstack = 0
  7232                           ; Regs used in _LCD_Write_Character: [wreg]
  7233                           ;LCD_Write_Character@caracter stored from wreg
  7234  080C  00F3               	movwf	LCD_Write_Character@caracter
  7235                           
  7236                           ;LCD_8bits.c: 65:     PORTAbits.RA0 = 1;
  7237  080D  1283               	bcf	3,5	;RP0=0, select bank0
  7238  080E  1303               	bcf	3,6	;RP1=0, select bank0
  7239  080F  1405               	bsf	5,0	;volatile
  7240                           
  7241                           ;LCD_8bits.c: 67:     PORTD = caracter;
  7242  0810  0873               	movf	LCD_Write_Character@caracter,w
  7243  0811  0088               	movwf	8	;volatile
  7244                           
  7245                           ;LCD_8bits.c: 68:     PORTAbits.RA1 = 1;
  7246  0812  1485               	bsf	5,1	;volatile
  7247                           
  7248                           ;LCD_8bits.c: 69:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  7249  0813  300D               	movlw	13
  7250  0814  00F2               	movwf	??_LCD_Write_Character
  7251  0815                     u2127:	
  7252  0815  0BF2               	decfsz	??_LCD_Write_Character,f
  7253  0816  2815               	goto	u2127
  7254                           
  7255                           ;LCD_8bits.c: 70:     PORTAbits.RA1 = 0;
  7256  0817  1283               	bcf	3,5	;RP0=0, select bank0
  7257  0818  1303               	bcf	3,6	;RP1=0, select bank0
  7258  0819  1085               	bcf	5,1	;volatile
  7259  081A  0008               	return
  7260  081B                     __end_of_LCD_Write_Character:	
  7261                           
  7262                           	psect	text34
  7263  099B                     __ptext34:	
  7264 ;; *************** function _LCD_Cmd *****************
  7265 ;; Defined at:
  7266 ;;		line 21 in file "LCD_8bits.c"
  7267 ;; Parameters:    Size  Location     Type
  7268 ;;  comando         1    wreg     unsigned char 
  7269 ;; Auto vars:     Size  Location     Type
  7270 ;;  comando         1    4[COMMON] unsigned char 
  7271 ;; Return value:  Size  Location     Type
  7272 ;;                  1    wreg      void 
  7273 ;; Registers used:
  7274 ;;		wreg
  7275 ;; Tracked objects:
  7276 ;;		On entry : 0/0
  7277 ;;		On exit  : 0/0
  7278 ;;		Unchanged: 0/0
  7279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7280 ;;      Params:         0       0       0       0       0
  7281 ;;      Locals:         1       0       0       0       0
  7282 ;;      Temps:          2       0       0       0       0
  7283 ;;      Totals:         3       0       0       0       0
  7284 ;;Total ram usage:        3 bytes
  7285 ;; Hardware stack levels used:    1
  7286 ;; Hardware stack levels required when called:    1
  7287 ;; This function calls:
  7288 ;;		Nothing
  7289 ;; This function is called by:
  7290 ;;		_LCD_clear
  7291 ;;		_LCD_init
  7292 ;;		_LCD_Set_Cursor
  7293 ;;		_LCD_Create_Char
  7294 ;;		_LCD_home
  7295 ;;		_LCD_Shift_links
  7296 ;;		_LCD_Shift_rechts
  7297 ;;		_LCD_Cursor_rechts
  7298 ;;		_LCD_Cursor_links
  7299 ;; This function uses a non-reentrant model
  7300 ;;
  7301                           
  7302                           
  7303                           ;psect for function _LCD_Cmd
  7304  099B                     _LCD_Cmd:	
  7305                           
  7306                           ;incstack = 0
  7307                           ; Regs used in _LCD_Cmd: [wreg]
  7308                           ;LCD_Cmd@comando stored from wreg
  7309  099B  00F4               	movwf	LCD_Cmd@comando
  7310                           
  7311                           ;LCD_8bits.c: 22:     PORTAbits.RA0 = 0;
  7312  099C  1283               	bcf	3,5	;RP0=0, select bank0
  7313  099D  1303               	bcf	3,6	;RP1=0, select bank0
  7314  099E  1005               	bcf	5,0	;volatile
  7315                           
  7316                           ;LCD_8bits.c: 23:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7317  099F  3007               	movlw	7
  7318  09A0  00F3               	movwf	??_LCD_Cmd+1
  7319  09A1  307D               	movlw	125
  7320  09A2  00F2               	movwf	??_LCD_Cmd
  7321  09A3                     u2137:	
  7322  09A3  0BF2               	decfsz	??_LCD_Cmd,f
  7323  09A4  29A3               	goto	u2137
  7324  09A5  0BF3               	decfsz	??_LCD_Cmd+1,f
  7325  09A6  29A3               	goto	u2137
  7326                           
  7327                           ;LCD_8bits.c: 24:     PORTAbits.RA1 = 1;
  7328  09A7  1283               	bcf	3,5	;RP0=0, select bank0
  7329  09A8  1303               	bcf	3,6	;RP1=0, select bank0
  7330  09A9  1485               	bsf	5,1	;volatile
  7331                           
  7332                           ;LCD_8bits.c: 25:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7333  09AA  3007               	movlw	7
  7334  09AB  00F3               	movwf	??_LCD_Cmd+1
  7335  09AC  307D               	movlw	125
  7336  09AD  00F2               	movwf	??_LCD_Cmd
  7337  09AE                     u2147:	
  7338  09AE  0BF2               	decfsz	??_LCD_Cmd,f
  7339  09AF  29AE               	goto	u2147
  7340  09B0  0BF3               	decfsz	??_LCD_Cmd+1,f
  7341  09B1  29AE               	goto	u2147
  7342                           
  7343                           ;LCD_8bits.c: 26:     PORTD = comando;
  7344  09B2  0874               	movf	LCD_Cmd@comando,w
  7345  09B3  1283               	bcf	3,5	;RP0=0, select bank0
  7346  09B4  1303               	bcf	3,6	;RP1=0, select bank0
  7347  09B5  0088               	movwf	8	;volatile
  7348                           
  7349                           ;LCD_8bits.c: 27:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7350  09B6  3007               	movlw	7
  7351  09B7  00F3               	movwf	??_LCD_Cmd+1
  7352  09B8  307D               	movlw	125
  7353  09B9  00F2               	movwf	??_LCD_Cmd
  7354  09BA                     u2157:	
  7355  09BA  0BF2               	decfsz	??_LCD_Cmd,f
  7356  09BB  29BA               	goto	u2157
  7357  09BC  0BF3               	decfsz	??_LCD_Cmd+1,f
  7358  09BD  29BA               	goto	u2157
  7359                           
  7360                           ;LCD_8bits.c: 28:     PORTAbits.RA1 = 0;
  7361  09BE  1283               	bcf	3,5	;RP0=0, select bank0
  7362  09BF  1303               	bcf	3,6	;RP1=0, select bank0
  7363  09C0  1085               	bcf	5,1	;volatile
  7364                           
  7365                           ;LCD_8bits.c: 29:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7366  09C1  3007               	movlw	7
  7367  09C2  00F3               	movwf	??_LCD_Cmd+1
  7368  09C3  307D               	movlw	125
  7369  09C4  00F2               	movwf	??_LCD_Cmd
  7370  09C5                     u2167:	
  7371  09C5  0BF2               	decfsz	??_LCD_Cmd,f
  7372  09C6  29C5               	goto	u2167
  7373  09C7  0BF3               	decfsz	??_LCD_Cmd+1,f
  7374  09C8  29C5               	goto	u2167
  7375  09C9  0008               	return
  7376  09CA                     __end_of_LCD_Cmd:	
  7377                           
  7378                           	psect	text35
  7379  07BC                     __ptext35:	
  7380 ;; *************** function _I2C_Master_Init *****************
  7381 ;; Defined at:
  7382 ;;		line 16 in file "I2C.c"
  7383 ;; Parameters:    Size  Location     Type
  7384 ;;  c               4    6[BANK0 ] const unsigned long 
  7385 ;; Auto vars:     Size  Location     Type
  7386 ;;		None
  7387 ;; Return value:  Size  Location     Type
  7388 ;;                  1    wreg      void 
  7389 ;; Registers used:
  7390 ;;		wreg, status,2, status,0, pclath, cstack
  7391 ;; Tracked objects:
  7392 ;;		On entry : 0/0
  7393 ;;		On exit  : 0/0
  7394 ;;		Unchanged: 0/0
  7395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7396 ;;      Params:         0       4       0       0       0
  7397 ;;      Locals:         0       0       0       0       0
  7398 ;;      Temps:          0       4       0       0       0
  7399 ;;      Totals:         0       8       0       0       0
  7400 ;;Total ram usage:        8 bytes
  7401 ;; Hardware stack levels used:    1
  7402 ;; Hardware stack levels required when called:    2
  7403 ;; This function calls:
  7404 ;;		___lldiv
  7405 ;; This function is called by:
  7406 ;;		_SetUp
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           
  7411                           ;psect for function _I2C_Master_Init
  7412  07BC                     _I2C_Master_Init:	
  7413                           
  7414                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  7415                           
  7416                           ;incstack = 0
  7417                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  7418  07BC  3028               	movlw	40
  7419  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  7420  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  7421  07BF  0094               	movwf	20	;volatile
  7422                           
  7423                           ;I2C.c: 19:     SSPCON2 = 0;
  7424  07C0  1683               	bsf	3,5	;RP0=1, select bank1
  7425  07C1  1303               	bcf	3,6	;RP1=0, select bank1
  7426  07C2  0191               	clrf	17	;volatile
  7427                           
  7428                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  7429  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  7430  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  7431  07C5  0826               	movf	I2C_Master_Init@c,w
  7432  07C6  00AA               	movwf	??_I2C_Master_Init
  7433  07C7  0827               	movf	I2C_Master_Init@c+1,w
  7434  07C8  00AB               	movwf	??_I2C_Master_Init+1
  7435  07C9  0828               	movf	I2C_Master_Init@c+2,w
  7436  07CA  00AC               	movwf	??_I2C_Master_Init+2
  7437  07CB  0829               	movf	I2C_Master_Init@c+3,w
  7438  07CC  00AD               	movwf	??_I2C_Master_Init+3
  7439  07CD  3002               	movlw	2
  7440  07CE                     u1735:	
  7441  07CE  1003               	clrc
  7442  07CF  0DAA               	rlf	??_I2C_Master_Init,f
  7443  07D0  0DAB               	rlf	??_I2C_Master_Init+1,f
  7444  07D1  0DAC               	rlf	??_I2C_Master_Init+2,f
  7445  07D2  0DAD               	rlf	??_I2C_Master_Init+3,f
  7446  07D3  3EFF               	addlw	-1
  7447  07D4  1D03               	skipz
  7448  07D5  2FCE               	goto	u1735
  7449  07D6  082D               	movf	??_I2C_Master_Init+3,w
  7450  07D7  00F5               	movwf	___lldiv@divisor+3
  7451  07D8  082C               	movf	??_I2C_Master_Init+2,w
  7452  07D9  00F4               	movwf	___lldiv@divisor+2
  7453  07DA  082B               	movf	??_I2C_Master_Init+1,w
  7454  07DB  00F3               	movwf	___lldiv@divisor+1
  7455  07DC  082A               	movf	??_I2C_Master_Init,w
  7456  07DD  00F2               	movwf	___lldiv@divisor
  7457  07DE  3000               	movlw	0
  7458  07DF  00F9               	movwf	___lldiv@dividend+3
  7459  07E0  303D               	movlw	61
  7460  07E1  00F8               	movwf	___lldiv@dividend+2
  7461  07E2  3009               	movlw	9
  7462  07E3  00F7               	movwf	___lldiv@dividend+1
  7463  07E4  3000               	movlw	0
  7464  07E5  00F6               	movwf	___lldiv@dividend
  7465  07E6  120A  158A  22A0   	fcall	___lldiv
  7466  07E9  0872               	movf	?___lldiv,w
  7467  07EA  3EFF               	addlw	255
  7468  07EB  1683               	bsf	3,5	;RP0=1, select bank1
  7469  07EC  1303               	bcf	3,6	;RP1=0, select bank1
  7470  07ED  0093               	movwf	19	;volatile
  7471                           
  7472                           ;I2C.c: 21:     SSPSTAT = 0;
  7473  07EE  0194               	clrf	20	;volatile
  7474                           
  7475                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  7476  07EF  1587               	bsf	7,3	;volatile
  7477                           
  7478                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  7479  07F0  1607               	bsf	7,4	;volatile
  7480  07F1  0008               	return
  7481  07F2                     __end_of_I2C_Master_Init:	
  7482                           
  7483                           	psect	text36
  7484  0AA0                     __ptext36:	
  7485 ;; *************** function ___lldiv *****************
  7486 ;; Defined at:
  7487 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;  divisor         4    2[COMMON] unsigned long 
  7490 ;;  dividend        4    6[COMMON] unsigned long 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  quotient        4    1[BANK0 ] unsigned long 
  7493 ;;  counter         1    5[BANK0 ] unsigned char 
  7494 ;; Return value:  Size  Location     Type
  7495 ;;                  4    2[COMMON] unsigned long 
  7496 ;; Registers used:
  7497 ;;		wreg, status,2, status,0
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/0
  7500 ;;		On exit  : 0/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7503 ;;      Params:         8       0       0       0       0
  7504 ;;      Locals:         0       5       0       0       0
  7505 ;;      Temps:          0       1       0       0       0
  7506 ;;      Totals:         8       6       0       0       0
  7507 ;;Total ram usage:       14 bytes
  7508 ;; Hardware stack levels used:    1
  7509 ;; Hardware stack levels required when called:    1
  7510 ;; This function calls:
  7511 ;;		Nothing
  7512 ;; This function is called by:
  7513 ;;		_I2C_Master_Init
  7514 ;; This function uses a non-reentrant model
  7515 ;;
  7516                           
  7517                           
  7518                           ;psect for function ___lldiv
  7519  0AA0                     ___lldiv:	
  7520                           
  7521                           ;incstack = 0
  7522                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7523  0AA0  3000               	movlw	0
  7524  0AA1  1283               	bcf	3,5	;RP0=0, select bank0
  7525  0AA2  1303               	bcf	3,6	;RP1=0, select bank0
  7526  0AA3  00A4               	movwf	___lldiv@quotient+3
  7527  0AA4  3000               	movlw	0
  7528  0AA5  00A3               	movwf	___lldiv@quotient+2
  7529  0AA6  3000               	movlw	0
  7530  0AA7  00A2               	movwf	___lldiv@quotient+1
  7531  0AA8  3000               	movlw	0
  7532  0AA9  00A1               	movwf	___lldiv@quotient
  7533  0AAA  0875               	movf	___lldiv@divisor+3,w
  7534  0AAB  0474               	iorwf	___lldiv@divisor+2,w
  7535  0AAC  0473               	iorwf	___lldiv@divisor+1,w
  7536  0AAD  0472               	iorwf	___lldiv@divisor,w
  7537  0AAE  1903               	skipnz
  7538  0AAF  2AF7               	goto	l4172
  7539  0AB0  01A5               	clrf	___lldiv@counter
  7540  0AB1  0AA5               	incf	___lldiv@counter,f
  7541  0AB2                     l4158:	
  7542  0AB2  1BF5               	btfsc	___lldiv@divisor+3,7
  7543  0AB3  2AC2               	goto	l4160
  7544  0AB4  3001               	movlw	1
  7545  0AB5  00A0               	movwf	??___lldiv
  7546  0AB6                     u1675:	
  7547  0AB6  1003               	clrc
  7548  0AB7  0DF2               	rlf	___lldiv@divisor,f
  7549  0AB8  0DF3               	rlf	___lldiv@divisor+1,f
  7550  0AB9  0DF4               	rlf	___lldiv@divisor+2,f
  7551  0ABA  0DF5               	rlf	___lldiv@divisor+3,f
  7552  0ABB  0BA0               	decfsz	??___lldiv,f
  7553  0ABC  2AB6               	goto	u1675
  7554  0ABD  3001               	movlw	1
  7555  0ABE  00A0               	movwf	??___lldiv
  7556  0ABF  0820               	movf	??___lldiv,w
  7557  0AC0  07A5               	addwf	___lldiv@counter,f
  7558  0AC1  2AB2               	goto	l4158
  7559  0AC2                     l4160:	
  7560  0AC2  3001               	movlw	1
  7561  0AC3  00A0               	movwf	??___lldiv
  7562  0AC4                     u1695:	
  7563  0AC4  1003               	clrc
  7564  0AC5  0DA1               	rlf	___lldiv@quotient,f
  7565  0AC6  0DA2               	rlf	___lldiv@quotient+1,f
  7566  0AC7  0DA3               	rlf	___lldiv@quotient+2,f
  7567  0AC8  0DA4               	rlf	___lldiv@quotient+3,f
  7568  0AC9  0BA0               	decfsz	??___lldiv,f
  7569  0ACA  2AC4               	goto	u1695
  7570  0ACB  0875               	movf	___lldiv@divisor+3,w
  7571  0ACC  0279               	subwf	___lldiv@dividend+3,w
  7572  0ACD  1D03               	skipz
  7573  0ACE  2AD9               	goto	u1705
  7574  0ACF  0874               	movf	___lldiv@divisor+2,w
  7575  0AD0  0278               	subwf	___lldiv@dividend+2,w
  7576  0AD1  1D03               	skipz
  7577  0AD2  2AD9               	goto	u1705
  7578  0AD3  0873               	movf	___lldiv@divisor+1,w
  7579  0AD4  0277               	subwf	___lldiv@dividend+1,w
  7580  0AD5  1D03               	skipz
  7581  0AD6  2AD9               	goto	u1705
  7582  0AD7  0872               	movf	___lldiv@divisor,w
  7583  0AD8  0276               	subwf	___lldiv@dividend,w
  7584  0AD9                     u1705:	
  7585  0AD9  1C03               	skipc
  7586  0ADA  2AEA               	goto	l4168
  7587  0ADB  0872               	movf	___lldiv@divisor,w
  7588  0ADC  02F6               	subwf	___lldiv@dividend,f
  7589  0ADD  0873               	movf	___lldiv@divisor+1,w
  7590  0ADE  1C03               	skipc
  7591  0ADF  0F73               	incfsz	___lldiv@divisor+1,w
  7592  0AE0  02F7               	subwf	___lldiv@dividend+1,f
  7593  0AE1  0874               	movf	___lldiv@divisor+2,w
  7594  0AE2  1C03               	skipc
  7595  0AE3  0F74               	incfsz	___lldiv@divisor+2,w
  7596  0AE4  02F8               	subwf	___lldiv@dividend+2,f
  7597  0AE5  0875               	movf	___lldiv@divisor+3,w
  7598  0AE6  1C03               	skipc
  7599  0AE7  0F75               	incfsz	___lldiv@divisor+3,w
  7600  0AE8  02F9               	subwf	___lldiv@dividend+3,f
  7601  0AE9  1421               	bsf	___lldiv@quotient,0
  7602  0AEA                     l4168:	
  7603  0AEA  3001               	movlw	1
  7604  0AEB                     u1715:	
  7605  0AEB  1003               	clrc
  7606  0AEC  0CF5               	rrf	___lldiv@divisor+3,f
  7607  0AED  0CF4               	rrf	___lldiv@divisor+2,f
  7608  0AEE  0CF3               	rrf	___lldiv@divisor+1,f
  7609  0AEF  0CF2               	rrf	___lldiv@divisor,f
  7610  0AF0  3EFF               	addlw	-1
  7611  0AF1  1D03               	skipz
  7612  0AF2  2AEB               	goto	u1715
  7613  0AF3  3001               	movlw	1
  7614  0AF4  02A5               	subwf	___lldiv@counter,f
  7615  0AF5  1D03               	btfss	3,2
  7616  0AF6  2AC2               	goto	l4160
  7617  0AF7                     l4172:	
  7618  0AF7  0824               	movf	___lldiv@quotient+3,w
  7619  0AF8  00F5               	movwf	?___lldiv+3
  7620  0AF9  0823               	movf	___lldiv@quotient+2,w
  7621  0AFA  00F4               	movwf	?___lldiv+2
  7622  0AFB  0822               	movf	___lldiv@quotient+1,w
  7623  0AFC  00F3               	movwf	?___lldiv+1
  7624  0AFD  0821               	movf	___lldiv@quotient,w
  7625  0AFE  00F2               	movwf	?___lldiv
  7626  0AFF  0008               	return
  7627  0B00                     __end_of___lldiv:	
  7628                           
  7629                           	psect	text37
  7630  081B                     __ptext37:	
  7631 ;; *************** function _ISR *****************
  7632 ;; Defined at:
  7633 ;;		line 134 in file "main_Master.c"
  7634 ;; Parameters:    Size  Location     Type
  7635 ;;		None
  7636 ;; Auto vars:     Size  Location     Type
  7637 ;;		None
  7638 ;; Return value:  Size  Location     Type
  7639 ;;                  1    wreg      void 
  7640 ;; Registers used:
  7641 ;;		wreg, status,2, status,0
  7642 ;; Tracked objects:
  7643 ;;		On entry : 0/0
  7644 ;;		On exit  : 0/0
  7645 ;;		Unchanged: 0/0
  7646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7647 ;;      Params:         0       0       0       0       0
  7648 ;;      Locals:         0       0       0       0       0
  7649 ;;      Temps:          2       0       0       0       0
  7650 ;;      Totals:         2       0       0       0       0
  7651 ;;Total ram usage:        2 bytes
  7652 ;; Hardware stack levels used:    1
  7653 ;; This function calls:
  7654 ;;		Nothing
  7655 ;; This function is called by:
  7656 ;;		Interrupt level 1
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           
  7661                           ;psect for function _ISR
  7662  081B                     _ISR:	
  7663                           
  7664                           ;main_Master.c: 135:     if (INTCONbits.RBIF == 1 && INTCONbits.RBIE == 1){
  7665  081B  180B               	btfsc	11,0	;volatile
  7666  081C  1D8B               	btfss	11,3	;volatile
  7667  081D  2825               	goto	i1l147
  7668                           
  7669                           ;main_Master.c: 136:         INTCONbits.RBIF = 0;
  7670  081E  100B               	bcf	11,0	;volatile
  7671                           
  7672                           ;main_Master.c: 137:         if (banderaBoton == 0){
  7673  081F  087B               	movf	_banderaBoton,w
  7674  0820  1D03               	btfss	3,2
  7675  0821  2825               	goto	i1l147
  7676                           
  7677                           ;main_Master.c: 138:             banderaBoton = 1;
  7678  0822  01FB               	clrf	_banderaBoton
  7679  0823  0AFB               	incf	_banderaBoton,f
  7680                           
  7681                           ;main_Master.c: 139:             INTCONbits.RBIE = 0;
  7682  0824  118B               	bcf	11,3	;volatile
  7683  0825                     i1l147:	
  7684  0825  0871               	movf	??_ISR+1,w
  7685  0826  008A               	movwf	10
  7686  0827  0E70               	swapf	??_ISR^(0+4294967168),w
  7687  0828  0083               	movwf	3
  7688  0829  0EFE               	swapf	126,f
  7689  082A  0E7E               	swapf	126,w
  7690  082B  0009               	retfie
  7691  082C                     __end_of_ISR:	
  7692  007E                     btemp	set	126	;btemp
  7693  007E                     wtemp0	set	126
  7694                           
  7695                           	psect	intentry
  7696  0004                     __pintentry:	
  7697                           ;incstack = 0
  7698                           ; Regs used in _ISR: [wreg+status,2+status,0]
  7699                           
  7700  0004                     interrupt_function:	
  7701  007E                     saved_w	set	btemp
  7702  0004  00FE               	movwf	btemp
  7703  0005  0E03               	swapf	3,w
  7704  0006  00F0               	movwf	??_ISR
  7705  0007  080A               	movf	10,w
  7706  0008  00F1               	movwf	??_ISR+1
  7707  0009  120A  158A  281B   	ljmp	_ISR


Data Sizes:
    Strings     142
    Constant    40
    Data        10
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     35      63
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Create_Char@chardata	PTR const unsigned char  size(1) Largest target is 8
		 -> arrowr_vacio(CODE[8]), gota(CODE[8]), termometro(CODE[8]), arrowr(CODE[8]), 
		 -> atilde(CODE[8]), 

    LCD_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_17(CODE[6]), STR_16(CODE[16]), STR_15(CODE[3]), STR_14(CODE[13]), 
		 -> STR_13(CODE[5]), STR_12(CODE[3]), STR_11(CODE[5]), STR_10(CODE[3]), 
		 -> STR_9(CODE[13]), STR_8(CODE[4]), STR_7(CODE[9]), STR_6(CODE[14]), 
		 -> STR_5(CODE[12]), STR_4(CODE[11]), STR_3(CODE[13]), STR_2(CODE[17]), 
		 -> STR_1(CODE[3]), 

    sp__uint_to_array	PTR unsigned int  size(1) Largest target is 6
		 -> uint_to_array@resultado(BANK0[6]), 

    obj_array	PTR unsigned int  size(1) Largest target is 6
		 -> NULL(NULL[0]), uint_to_array@resultado(BANK0[6]), 


Critical Paths under _main in COMMON

    _pressBoton2->_LCD_Set_Cursor
    _pressBoton1->_LCD_clear
    _mostrarLCD->_LCD_Set_Cursor
    _uint_to_array->___awdiv
    _display_Uhrzeit->_LCD_Set_Cursor
    _display_Datum->_LCD_Set_Cursor
    _LCD_Write_String->_LCD_Write_Character
    _LCD_Set_Cursor->_LCD_Cmd
    _inclinacion_->_init_ADC
    _get_temperatura_obj->_init_ADC
    _get_temperatura->_init_ADC
    _get_Time->_BCD_a_DEC
    _BCD_a_DEC->___bmul
    _Zeit_Datum_Set->_DEC_a_BCD
    _I2C_Master_Write->_DEC_a_BCD
    _DEC_a_BCD->___awdiv
    _DEC_a_BCD->___awmod
    ___awdiv->___wmul
    _LCD_init->_LCD_Cmd
    _LCD_clear->_LCD_Cmd
    _LCD_Create_Char->_LCD_Cmd
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_mostrarLCD
    _mostrarLCD->_uint_to_array
    _uint_to_array->___awdiv
    _display_Uhrzeit->___awdiv
    _display_Datum->___awdiv
    _get_Time->_I2C_Master_Write
    _SetUp->_Zeit_Datum_Set
    _Zeit_Datum_Set->_I2C_Master_Write
    _I2C_Master_Write->_DEC_a_BCD
    _DEC_a_BCD->___awdiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   56223
                                             33 BANK0      2     2      0
                              _SetUp
                           _get_Time
                    _get_temperatura
                _get_temperatura_obj
                       _inclinacion_
                         _mostrarLCD
                        _pressBoton1
                        _pressBoton2
                       _uartTX_Write
 ---------------------------------------------------------------------------------
 (1) _uartTX_Write                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pressBoton2                                          2     2      0    2383
                                              0 BANK0      2     2      0
                     _LCD_Set_Cursor
                _LCD_Write_Character
                          _LCD_clear
 ---------------------------------------------------------------------------------
 (1) _pressBoton1                                          2     2      0      22
                                              7 COMMON     2     2      0
                          _LCD_clear
 ---------------------------------------------------------------------------------
 (1) _mostrarLCD                                          10    10      0   29996
                                             23 BANK0     10    10      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                          _LCD_clear
                      _display_Datum
                    _display_Uhrzeit
                      _uint_to_array
 ---------------------------------------------------------------------------------
 (2) _uint_to_array                                       15    15      0    3467
                                              8 BANK0     15    15      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _display_Uhrzeit                                     11    10      1    7387
                                              8 BANK0     11    10      1
                     _LCD_Set_Cursor
                _LCD_Write_Character
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _display_Datum                                       11    10      1    8060
                                              8 BANK0     11    10      1
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     3     3      0     673
                                              4 COMMON     3     3      0
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       5     4      1    2339
                                              5 COMMON     5     4      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _inclinacion_                                         2     2      0      22
                                              5 COMMON     2     2      0
                           _init_ADC
 ---------------------------------------------------------------------------------
 (1) _get_temperatura_obj                                  2     2      0      22
                                              5 COMMON     2     2      0
                           _init_ADC
 ---------------------------------------------------------------------------------
 (1) _get_temperatura                                      2     2      0      22
                                              5 COMMON     2     2      0
                           _init_ADC
 ---------------------------------------------------------------------------------
 (2) _init_ADC                                             3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _get_Time                                             1     1      0   10083
                                             15 BANK0      1     1      0
                          _BCD_a_DEC
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2    2173
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _BCD_a_DEC                                            4     4      0     212
                                              6 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SetUp                                                1     1      0   13651
                                             17 BANK0      1     1      0
                    _I2C_Master_Init
                    _LCD_Create_Char
                          _LCD_clear
                           _LCD_init
                         _OSC_config
                     _Zeit_Datum_Set
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Zeit_Datum_Set                                       2     2      0   12430
                                             15 BANK0      2     2      0
                          _DEC_a_BCD
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    7698
                                             13 BANK0      2     0      2
                          _DEC_a_BCD (ARG)
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DEC_a_BCD                                            6     6      0    4732
                                              9 COMMON     1     1      0
                                              8 BANK0      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    2149
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    2521
                                              8 COMMON     1     1      0
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _OSC_config                                           4     0      4      98
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             2     2      0      22
                                              5 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            2     2      0      22
                                              5 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Create_Char                                      4     3      1     537
                                              5 COMMON     4     3      1
                            _LCD_Cmd
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Character                                  2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetUp
     _I2C_Master_Init
       ___lldiv
     _LCD_Create_Char
       _LCD_Cmd
       _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
     _LCD_init
       _LCD_Cmd
     _OSC_config
     _Zeit_Datum_Set
       _DEC_a_BCD
         ___awdiv
           ___wmul (ARG)
         ___awmod
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _DEC_a_BCD (ARG)
           ___awdiv
             ___wmul (ARG)
           ___awmod
         _I2C_Master_Wait (ARG)
     _uart_init
   _get_Time
     _BCD_a_DEC
       ___bmul
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _DEC_a_BCD (ARG)
         ___awdiv
           ___wmul (ARG)
         ___awmod
       _I2C_Master_Wait (ARG)
   _get_temperatura
     _init_ADC
   _get_temperatura_obj
     _init_ADC
   _inclinacion_
     _init_ADC
   _mostrarLCD
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _DEC_a_BCD (ARG)
         ___awdiv
           ___wmul (ARG)
         ___awmod
       _I2C_Master_Wait (ARG)
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     _LCD_Write_String
       _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
     _display_Datum
       _LCD_Set_Cursor
         _LCD_Cmd
       _LCD_Write_Character
       _LCD_Write_String
         _LCD_Write_Character
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _display_Uhrzeit
       _LCD_Set_Cursor
         _LCD_Cmd
       _LCD_Write_Character
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _uint_to_array
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _pressBoton1
     _LCD_clear
       _LCD_Cmd
   _pressBoton2
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
   _uartTX_Write

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     23      3F       5       78.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4B      12        0.0%
ABS                  0      0      4B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun May 03 00:47:30 2020

                           pc 0002                ___bmul@product 0074       __end_of_LCD_Create_Char 0943  
                 __CFG_CP$OFF 0000                  ___awdiv@sign 0025            __size_of_BCD_a_DEC 0016  
                          fsr 0004           ___wmul@multiplicand 0074            mostrarLCD@pantalla 003A  
                         l171 0BDC                           l180 0BEB                           l172 0C45  
                         l181 0BED                           l173 0BDD                           l182 0BF0  
                         l174 0BDF                           l183 0BF3                           l175 0BE1  
                         l184 0BF6                           l176 0BE3                           l361 0803  
                         l185 0BF9                           l177 0BE5                           l186 0BFD  
                         l178 0BE7                           l187 0C01                           l179 0BE9  
                         l380 0969                           l188 0C06                           l189 0C4F  
                         l614 08DE                           l379 0966                           l488 17FD  
                         _GIE 005F                  __CFG_CPD$OFF 0000                           _ISR 081B  
          __size_of_DEC_a_BCD 0030       __end_of_display_Uhrzeit 06F8                           _dia 005C  
                         _mes 005A                           _min 005E                           _seg 0053  
                         fsr0 0004                           indf 0000                  ___awmod@sign 0078  
              ?_display_Datum 0028  __size_of_LCD_Write_Character 000F               __end_of_LCD_Cmd 09CA  
                __CFG_LVP$OFF 0000                          ?_ISR 0070                _LCD_Set_Cursor 096F  
                        l4102 0A93                          l4106 0A9B                          l4130 0A11  
                        l4122 0A0B                          l3330 0B72                          l4132 0A1F  
                        l4140 0A38                          l5020 0E77                          l5030 0EE4  
                        l4118 0A04                          l5022 0BB5                          l3342 0B88  
                        l4160 0AC2                          l5040 0F16                          l5032 0EEE  
                        l4080 0A5C                          l4144 0A40                          l4136 0A2D  
                        l5024 0334                          l4320 00D8                          l3336 0B7D  
                        l3360 0BC0                          l5042 0F20                          l5034 0EF8  
                        l5050 0EF3                          l4090 0A64                          l4074 0A51  
                        l5026 0992                          l4402 01E9                          l4306 007C  
                        l4172 0AF7                          l5044 0F2A                          l5060 0F25  
                        l5036 0F02                          l5052 0EFD                          l4092 0A72  
                        l5028 0C13                          l2740 0985                          l2732 0971  
                        l4412 022A                          l4340 014F                          l3348 0B93  
                        l4158 0AB2                          l5062 0F2F                          l5038 0F0C  
                        l5054 0F07                          l5046 0F34                          l2830 0EB0  
                        l2742 098A                          l4430 0290                          l4350 0165  
                        l4334 011F                          l3358 0BAD                          l3366 0BC4  
                        l4502 0E58                          l4510 0E88                          l4168 0AEA  
                        l5056 0F11                          l5048 0EE9                          l2840 0ED3  
                        l2832 0EB7                          l2736 097B                          l4424 0266  
                        l4328 00FD                          l5058 0F1B                          l2842 0ED8  
                        l2834 0EBE                          l2826 0EA4                          l4098 0A88  
                        l2754 08F8                          l4418 023F                          l4346 015C  
                        l4506 0E64                          l4530 0D6B                          l2836 0EC5  
                        l2828 0EA9                          l2844 0EDF                          l4436 02B1  
                        l4460 032C                          l4508 0E6F                          l4516 0E8E  
                        l2838 0ECC                          l2774 08D6                          l4366 019B  
                        l4294 002D                          l2792 0834                          l4296 0042  
                        l4458 031D                          l2948 092D                          l2788 082E  
                        l4476 0E05                          l2990 0C0B                          l4494 0E3C  
                        l4486 0E20                          l4478 0E07                          STR_1 07B6  
                        STR_2 072E                          STR_3 076A                          STR_4 0790  
                        STR_5 0784                          STR_6 074F                          STR_7 079B  
                        STR_8 07AF                          STR_9 075D                          u1015 08DF  
                        u1025 08E6                          u1135 091F                          u2007 08B7  
                        u2017 08A0                          u2107 0B63                          u2027 0B04  
                        _IOCB 0096                          u2117 0873                          u2037 0B13  
                        u2127 0815                          u2047 0B1F                          u2137 09A3  
                        u2057 0B29                          u1185 0884                          u2147 09AE  
                        u2067 0B33                          u1515 0A73                          u2157 09BA  
                        u2077 0B3E                          u1525 0A7F                          u2167 09C5  
                        u2087 0B4B                          u1535 0A89                          u1615 0A25  
                        u1705 0AD9                          u2097 0B58                          u1625 0A2E  
                        u1715 0AEB                          u1740 0C59                          u1735 07CE  
                        u1495 0A67                          u1655 09E2                          u1675 0AB6  
                        u1595 0A14                          u1907 0DA1                          u1917 0E1A  
                        u1695 0AC4                          u1927 0E36                          u1937 0E52  
                        u1947 0E6A                          _PEIE 005E                          u1957 0E9B  
                        u1967 0B9C                          u1887 0D77                          u1977 0BCF  
                        u1897 0D8E                          u1987 0310                          u1997 08CE  
                        _WPUB 0095                  __CFG_WRT$OFF 0000                          _accZ 0049  
           ?_LCD_Write_String 0070                          _jahr 0059                          _main 0D66  
                        _gota 0706                          _hora 005D                          btemp 007E  
               _uint_to_array 0C52                          start 000C            ??_LCD_Write_String 0074  
               __CFG_IESO$OFF 0000            __size_of_LCD_clear 0016             ___bmul@multiplier 0075  
                       ??_ISR 0070              ?_I2C_Master_Init 0026              ?_I2C_Master_Read 0072  
            ?_I2C_Master_Wait 0070              ?_I2C_Master_Stop 0070              __end_of_LCD_init 0B67  
                       ?_main 0070               __end_of___awdiv 0AA0               DEC_a_BCD@numDEC 0079  
                       STR_10 07B9                         STR_11 07AA                         STR_13 07AA  
                       STR_14 0777                         STR_15 07B3                         STR_16 073F  
                       STR_17 07A4                 __CFG_WDTE$OFF 0000               __end_of___awmod 0A45  
                       _ANSEL 0188               __end_of___lldiv 0B00               ___awdiv@divisor 0020  
                       i1l147 0825               ___awdiv@counter 0024                         _RCREG 001A  
                       _SPBRG 0099                         _PORTA 0005                         _PORTD 0008  
                       _TRISA 0085                         _TRISB 0086                         _TRISD 0088  
                       _SSPIE 0463                         _TRISE 0089                         _SSPIF 0063  
                       _TXREG 0019              ?_get_temperatura 0070                  _sprintbuffer 004B  
              __CFG_FCMEN$OFF 0000        __end_of_LCD_Set_Cursor 099B                         _SetUp 0CD7  
                       _ancho 004C                         _datum 005B                         _largo 004D  
              __CFG_BOREN$OFF 0000                   ?_OSC_config 0072                         pclath 000A  
           __end_of_BCD_a_DEC 088F                ?_uint_to_array 0070                         status 0003  
               ?_inclinacion_ 0070                         wtemp0 007E             __end_of_DEC_a_BCD 09FA  
              __CFG_MCLRE$OFF 0000               __initialization 000F                  __end_of_main 0DFA  
                __end_of_gota 070E              ?_LCD_Create_Char 0075                        ??_main 0041  
                   ??_LCD_Cmd 0072               ??_display_Datum 0029              ?_display_Uhrzeit 0028  
           ?_I2C_Master_Start 0070             ?_I2C_Master_Write 002D             __end_of_LCD_clear 0879  
                      ?_SetUp 0070               ?_LCD_Set_Cursor 0075            ??_I2C_Master_Start 0072  
          ??_I2C_Master_Write 007A                        _ADRESH 001E                  _banderaPUSH1 007A  
                _banderaPUSH2 004E              ___awdiv@dividend 0022                        _ANSELH 0189  
                _banderaBoton 007B                ??_inclinacion_ 0075                        _SPBRGH 009A  
                      _SSPADD 0093                        _TRISC3 043B                        _TRISC4 043C  
          uint_to_array@F1343 0043                        _SSPCON 0014                        _SSPBUF 0013  
            ??_Zeit_Datum_Set 002F   LCD_Write_Character@caracter 0073                __CFG_PWRTE$OFF 0000  
            __end_of_get_Time 054E                        ___bmul 082C                        ___wmul 08D4  
                   ??___awdiv 0078                     ??___awmod 0076                     ??___lldiv 0020  
            __end_of_init_ADC 0C52                        _atilde 0716                        _arrowr 0726  
                      _estado 0054              ___awdiv@quotient 0026               ___awmod@divisor 0072  
         __size_of_OSC_config 00AC               ___awmod@counter 0077                  ?_pressBoton1 0070  
                ?_pressBoton2 0070                        saved_w 007E               ??_uint_to_array 0028  
     __end_of__initialization 0025                     ?_LCD_init 0070           ___bmul@multiplicand 0072  
             init_ADC@channel 0074                __pcstackCOMMON 0070                 __end_of_SetUp 0D66  
         _LCD_Write_Character 080C                  __pidataBANK0 07F2  __size_of_get_temperatura_obj 0017  
        display_Datum@columna 0028                _OPTION_REGbits 0081               _temperatura_obj 0050  
                     ??_SetUp 0031          ?_LCD_Write_Character 0070                LCD_Cmd@comando 0074  
                  __pbssBANK0 0043     LCD_Set_Cursor@corrimiento 0079                    ??_LCD_init 0075  
        __end_of_arrowr_vacio 0726                    __pmaintext 0D66                       ?___bmul 0072  
                     ?___wmul 0072                    __pintentry 0004     __size_of_LCD_Write_String 0022  
        __end_of_inclinacion_ 08D4          OSC_config@frecuencia 0072           display_Uhrzeit@fila 002C  
          __size_of_uart_init 0015                       _LCD_Cmd 099B         ??_LCD_Write_Character 0072  
                   ?_get_Time 0070                       _SSPCON2 0091                       _SSPSTAT 0094  
                  __stringtab 0700                  ??_OSC_config 0076                     ?_init_ADC 0070  
                   _BCD_a_DEC 0879                 ?_uartTX_Write 0070        uint_to_array@resultado 0030  
             __size_of___bmul 0011                     _DEC_a_BCD 09CA                       ___awdiv 0A45  
                     ___awmod 09FA                       ___lldiv 0AA0               __size_of___wmul 0021  
           display_Datum@fila 002C                       _d_atras 0055              ??_LCD_Set_Cursor 0076  
                     __ptext1 17F8                       __ptext2 0DFA                       __ptext3 0B67  
                     __ptext4 0029                       __ptext5 0C52                       __ptext6 08D4  
                     __ptext7 0626                       __ptext8 054E                       __ptext9 08F5  
          __end_of_OSC_config 0F4F                  __size_of_ISR 0011           uint_to_array@numero 0036  
                     _humedad 0058              ___awmod@dividend 0074      __size_of_I2C_Master_Init 0036  
    __size_of_I2C_Master_Read 002C      __size_of_I2C_Master_Wait 0009      __size_of_I2C_Master_Stop 0007  
        __size_of_pressBoton1 006F          __size_of_pressBoton2 00A9                    ??_get_Time 002F  
                     clrloop0 06F9                     _LCD_clear 0863          end_of_initialization 0025  
                  ??_init_ADC 0072      __size_of_get_temperatura 0017                ??_uartTX_Write 0072  
   __size_of_I2C_Master_Start 0007             __end_of_uart_init 0863     __size_of_I2C_Master_Write 0008  
             ___lldiv@divisor 0072                    ?_BCD_a_DEC 0070               ___lldiv@counter 0025  
                   _RCSTAbits 0018              I2C_Master_Init@c 0026              I2C_Master_Read@a 0072  
                  ?_DEC_a_BCD 0070                    _mostrarLCD 0029                     _PORTAbits 0005  
                   _PORTBbits 0006                    _termometro 070E      __size_of_LCD_Create_Char 002C  
                   _TRISCbits 0087         __end_of_display_Datum 0626           _get_temperatura_obj 08A6  
                  ?_LCD_clear 0070             LCD_Write_String@a 0076             LCD_Write_String@n 0074  
    __size_of_display_Uhrzeit 00D2                     _TXSTAbits 0098             __size_of_LCD_init 0067  
       __size_of_inclinacion_ 0017          ?_get_temperatura_obj 0070                __end_of___bmul 083D  
       LCD_Set_Cursor@columna 0075                __end_of___wmul 08F5              _LCD_Write_String 08F5  
                 _BAUDCTLbits 0187                __end_of_atilde 071E                __end_of_arrowr 072E  
                _arrowr_vacio 071E           start_initialization 000F                   __end_of_ISR 082C  
           ??_I2C_Master_Init 002A             ??_I2C_Master_Read 0074             ??_I2C_Master_Wait 0072  
       __end_of_uint_to_array 0CD7             ??_I2C_Master_Stop 0072                  _inclinacion_ 08BD  
    __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??_BCD_a_DEC 0076             ??_get_temperatura 0075  
                    ??___bmul 0073       LCD_Create_Char@chardata 0075         ??_get_temperatura_obj 0075  
                 ??_DEC_a_BCD 0028                      ??___wmul 0076                    init_fetch0 083D  
                 ?_mostrarLCD 0070                   __pdataBANK0 0055       __size_of_Zeit_Datum_Set 00B1  
             BCD_a_DEC@numBCD 0079                      ?_LCD_Cmd 0070          __end_of_uartTX_Write 1800  
                 __pbssCOMMON 007A                     ___latbits 0002                 __pcstackBANK0 0020  
         display_Datum@jahr_d 0032           display_Datum@jahr_u 0031                   ??_LCD_clear 0075  
           __size_of_get_Time 01F6             ??_LCD_Create_Char 0076             __size_of_init_ADC 007C  
            _I2C_Master_Start 17E2              _I2C_Master_Write 17F0         uint_to_array@centenas 002F  
           ??_display_Uhrzeit 0029                      ?___awdiv 0020                      ?___awmod 0072  
                    ?___lldiv 0072                     __pstrings 0700   __end_of_LCD_Write_Character 081B  
                   _obj_array 004F                __size_of_SetUp 008F          display_Uhrzeit@Uhr_d 0032  
        display_Uhrzeit@Uhr_u 0031           __size_of_mostrarLCD 032F          display_Uhrzeit@min_d 0030  
        display_Uhrzeit@min_u 002F          display_Uhrzeit@seg_d 002E          display_Uhrzeit@seg_u 002D  
           interrupt_function 0004                ___wmul@product 0076                      _LCD_init 0B00  
                   clear_ram0 06F8              LCD_Create_Char@n 0078                      _PIR1bits 000C  
                   _uart_init 084E                     _velocidad 0052                    _ADCON0bits 001F  
                 __stringbase 0705                    _ADCON1bits 009F             ___wmul@multiplier 0072  
               ??_pressBoton1 0077                 ??_pressBoton2 0020              __size_of_LCD_Cmd 002F  
         I2C_Master_Read@temp 0076      __end_of_LCD_Write_String 0917                   _inclinacion 0057  
      LCD_Create_Char@charnum 0077                    ?_uart_init 0072                _Zeit_Datum_Set 0F4F  
            __size_of___awdiv 005B              __size_of___awmod 004B              __size_of___lldiv 0060  
       __size_of_uartTX_Write 0008            display_Datum@dia_d 002E            display_Datum@dia_u 002D  
            uartTX_Write@dato 0072            __end_of__stringtab 0706            display_Datum@mes_d 0030  
          display_Datum@mes_u 002F                      _d_frente 0056               _I2C_Master_Init 07BC  
             _I2C_Master_Read 0943          uint_to_array@decenas 002E               _I2C_Master_Wait 0803  
             _I2C_Master_Stop 17E9                      __ptext10 096F                      __ptext11 08BD  
                    __ptext20 084E                      __ptext12 08A6                      __ptext21 0F4F  
                    __ptext13 088F                      __ptext30 0B00                      __ptext22 17F0  
                    __ptext14 0BD6                      __ptext31 0863                      __ptext23 17E9  
                    __ptext15 0358                      __ptext32 0917                      __ptext24 17E2  
                    __ptext16 0943                      __ptext33 080C                      __ptext25 0803  
                    __ptext17 0879                      __ptext34 099B                      __ptext26 09CA  
                    __ptext18 082C                      __ptext35 07BC                      __ptext27 09FA  
                    __ptext19 0CD7                      __ptext36 0AA0                      __ptext28 0A45  
                    __ptext37 081B                      __ptext29 0EA3                      _get_Time 0358  
           __CFG_BOR4V$BOR40V 0000       __size_of_LCD_Set_Cursor 002C               _get_temperatura 088F  
         __end_of_pressBoton1 0BD6           __end_of_pressBoton2 0EA3                      _init_ADC 0BD6  
               __size_of_main 0094        display_Uhrzeit@columna 0028                  _uartTX_Write 17F8  
      __end_of_Zeit_Datum_Set 1000        __size_of_display_Datum 00D8                  ??_mostrarLCD 0037  
         LCD_Set_Cursor@linea 0078               _LCD_Create_Char 0917      __end_of_I2C_Master_Start 17E9  
    __end_of_I2C_Master_Write 17F8                    _INTCONbits 000B                      init_ram0 0841  
             _display_Uhrzeit 0626                      intlevel1 0000            __end_of_mostrarLCD 0358  
            ___lldiv@dividend 0076   __end_of_get_temperatura_obj 08BD                     stringcode 0700  
                  _OSCCONbits 008F            __end_of_termometro 0716               ?_Zeit_Datum_Set 0070  
                 ??_uart_init 0074       __end_of_I2C_Master_Init 07F2       __end_of_I2C_Master_Read 096F  
     __end_of_I2C_Master_Wait 080C       __end_of_I2C_Master_Stop 17F0                   _temperatura 0051  
      __size_of_uint_to_array 0085              ___lldiv@quotient 0021             I2C_Master_Write@d 002D  
     __end_of_get_temperatura 08A6                   _pressBoton1 0B67                   _pressBoton2 0DFA  
                    stringdir 0700                      stringtab 0700                   _SSPCON2bits 0091  
               _display_Datum 054E                    _OSC_config 0EA3  

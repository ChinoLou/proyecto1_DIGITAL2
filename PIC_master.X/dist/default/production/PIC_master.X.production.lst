

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 22 22:13:01 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	intentry,global,class=CODE,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 2.05
    60                           ; Generated 20/12/2018 GMT
    61                           ; 
    62                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F887 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0088                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  0105                     	;# 
   157  0107                     	;# 
   158  0108                     	;# 
   159  0109                     	;# 
   160  010C                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  0185                     	;# 
   166  0187                     	;# 
   167  0188                     	;# 
   168  0189                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0008                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  000E                     	;# 
   187  000F                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001D                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0088                     	;# 
   211  0089                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  008F                     	;# 
   216  0090                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0095                     	;# 
   224  0096                     	;# 
   225  0097                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009A                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  0105                     	;# 
   235  0107                     	;# 
   236  0108                     	;# 
   237  0109                     	;# 
   238  010C                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  0185                     	;# 
   244  0187                     	;# 
   245  0188                     	;# 
   246  0189                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0088                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  008F                     	;# 
   294  0090                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0097                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009A                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  009F                     	;# 
   312  0105                     	;# 
   313  0107                     	;# 
   314  0108                     	;# 
   315  0109                     	;# 
   316  010C                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  0185                     	;# 
   322  0187                     	;# 
   323  0188                     	;# 
   324  0189                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  0000                     	;# 
   328  0001                     	;# 
   329  0002                     	;# 
   330  0003                     	;# 
   331  0004                     	;# 
   332  0005                     	;# 
   333  0006                     	;# 
   334  0007                     	;# 
   335  0008                     	;# 
   336  0009                     	;# 
   337  000A                     	;# 
   338  000B                     	;# 
   339  000C                     	;# 
   340  000D                     	;# 
   341  000E                     	;# 
   342  000E                     	;# 
   343  000F                     	;# 
   344  0010                     	;# 
   345  0011                     	;# 
   346  0012                     	;# 
   347  0013                     	;# 
   348  0014                     	;# 
   349  0015                     	;# 
   350  0015                     	;# 
   351  0016                     	;# 
   352  0017                     	;# 
   353  0018                     	;# 
   354  0019                     	;# 
   355  001A                     	;# 
   356  001B                     	;# 
   357  001B                     	;# 
   358  001C                     	;# 
   359  001D                     	;# 
   360  001E                     	;# 
   361  001F                     	;# 
   362  0081                     	;# 
   363  0085                     	;# 
   364  0086                     	;# 
   365  0087                     	;# 
   366  0088                     	;# 
   367  0089                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  008F                     	;# 
   372  0090                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0093                     	;# 
   378  0094                     	;# 
   379  0095                     	;# 
   380  0096                     	;# 
   381  0097                     	;# 
   382  0098                     	;# 
   383  0099                     	;# 
   384  009A                     	;# 
   385  009B                     	;# 
   386  009C                     	;# 
   387  009D                     	;# 
   388  009E                     	;# 
   389  009F                     	;# 
   390  0105                     	;# 
   391  0107                     	;# 
   392  0108                     	;# 
   393  0109                     	;# 
   394  010C                     	;# 
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  010F                     	;# 
   399  0185                     	;# 
   400  0187                     	;# 
   401  0188                     	;# 
   402  0189                     	;# 
   403  018C                     	;# 
   404  018D                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000D                     	;# 
   419  000E                     	;# 
   420  000E                     	;# 
   421  000F                     	;# 
   422  0010                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0013                     	;# 
   426  0014                     	;# 
   427  0015                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0017                     	;# 
   431  0018                     	;# 
   432  0019                     	;# 
   433  001A                     	;# 
   434  001B                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  001D                     	;# 
   438  001E                     	;# 
   439  001F                     	;# 
   440  0081                     	;# 
   441  0085                     	;# 
   442  0086                     	;# 
   443  0087                     	;# 
   444  0088                     	;# 
   445  0089                     	;# 
   446  008C                     	;# 
   447  008D                     	;# 
   448  008E                     	;# 
   449  008F                     	;# 
   450  0090                     	;# 
   451  0091                     	;# 
   452  0092                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0094                     	;# 
   457  0095                     	;# 
   458  0096                     	;# 
   459  0097                     	;# 
   460  0098                     	;# 
   461  0099                     	;# 
   462  009A                     	;# 
   463  009B                     	;# 
   464  009C                     	;# 
   465  009D                     	;# 
   466  009E                     	;# 
   467  009F                     	;# 
   468  0105                     	;# 
   469  0107                     	;# 
   470  0108                     	;# 
   471  0109                     	;# 
   472  010C                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  010F                     	;# 
   477  0185                     	;# 
   478  0187                     	;# 
   479  0188                     	;# 
   480  0189                     	;# 
   481  018C                     	;# 
   482  018D                     	;# 
   483  0000                     	;# 
   484  0001                     	;# 
   485  0002                     	;# 
   486  0003                     	;# 
   487  0004                     	;# 
   488  0005                     	;# 
   489  0006                     	;# 
   490  0007                     	;# 
   491  0008                     	;# 
   492  0009                     	;# 
   493  000A                     	;# 
   494  000B                     	;# 
   495  000C                     	;# 
   496  000D                     	;# 
   497  000E                     	;# 
   498  000E                     	;# 
   499  000F                     	;# 
   500  0010                     	;# 
   501  0011                     	;# 
   502  0012                     	;# 
   503  0013                     	;# 
   504  0014                     	;# 
   505  0015                     	;# 
   506  0015                     	;# 
   507  0016                     	;# 
   508  0017                     	;# 
   509  0018                     	;# 
   510  0019                     	;# 
   511  001A                     	;# 
   512  001B                     	;# 
   513  001B                     	;# 
   514  001C                     	;# 
   515  001D                     	;# 
   516  001E                     	;# 
   517  001F                     	;# 
   518  0081                     	;# 
   519  0085                     	;# 
   520  0086                     	;# 
   521  0087                     	;# 
   522  0088                     	;# 
   523  0089                     	;# 
   524  008C                     	;# 
   525  008D                     	;# 
   526  008E                     	;# 
   527  008F                     	;# 
   528  0090                     	;# 
   529  0091                     	;# 
   530  0092                     	;# 
   531  0093                     	;# 
   532  0093                     	;# 
   533  0093                     	;# 
   534  0094                     	;# 
   535  0095                     	;# 
   536  0096                     	;# 
   537  0097                     	;# 
   538  0098                     	;# 
   539  0099                     	;# 
   540  009A                     	;# 
   541  009B                     	;# 
   542  009C                     	;# 
   543  009D                     	;# 
   544  009E                     	;# 
   545  009F                     	;# 
   546  0105                     	;# 
   547  0107                     	;# 
   548  0108                     	;# 
   549  0109                     	;# 
   550  010C                     	;# 
   551  010C                     	;# 
   552  010D                     	;# 
   553  010E                     	;# 
   554  010F                     	;# 
   555  0185                     	;# 
   556  0187                     	;# 
   557  0188                     	;# 
   558  0189                     	;# 
   559  018C                     	;# 
   560  018D                     	;# 
   561  0000                     	;# 
   562  0001                     	;# 
   563  0002                     	;# 
   564  0003                     	;# 
   565  0004                     	;# 
   566  0005                     	;# 
   567  0006                     	;# 
   568  0007                     	;# 
   569  0008                     	;# 
   570  0009                     	;# 
   571  000A                     	;# 
   572  000B                     	;# 
   573  000C                     	;# 
   574  000D                     	;# 
   575  000E                     	;# 
   576  000E                     	;# 
   577  000F                     	;# 
   578  0010                     	;# 
   579  0011                     	;# 
   580  0012                     	;# 
   581  0013                     	;# 
   582  0014                     	;# 
   583  0015                     	;# 
   584  0015                     	;# 
   585  0016                     	;# 
   586  0017                     	;# 
   587  0018                     	;# 
   588  0019                     	;# 
   589  001A                     	;# 
   590  001B                     	;# 
   591  001B                     	;# 
   592  001C                     	;# 
   593  001D                     	;# 
   594  001E                     	;# 
   595  001F                     	;# 
   596  0081                     	;# 
   597  0085                     	;# 
   598  0086                     	;# 
   599  0087                     	;# 
   600  0088                     	;# 
   601  0089                     	;# 
   602  008C                     	;# 
   603  008D                     	;# 
   604  008E                     	;# 
   605  008F                     	;# 
   606  0090                     	;# 
   607  0091                     	;# 
   608  0092                     	;# 
   609  0093                     	;# 
   610  0093                     	;# 
   611  0093                     	;# 
   612  0094                     	;# 
   613  0095                     	;# 
   614  0096                     	;# 
   615  0097                     	;# 
   616  0098                     	;# 
   617  0099                     	;# 
   618  009A                     	;# 
   619  009B                     	;# 
   620  009C                     	;# 
   621  009D                     	;# 
   622  009E                     	;# 
   623  009F                     	;# 
   624  0105                     	;# 
   625  0107                     	;# 
   626  0108                     	;# 
   627  0109                     	;# 
   628  010C                     	;# 
   629  010C                     	;# 
   630  010D                     	;# 
   631  010E                     	;# 
   632  010F                     	;# 
   633  0185                     	;# 
   634  0187                     	;# 
   635  0188                     	;# 
   636  0189                     	;# 
   637  018C                     	;# 
   638  018D                     	;# 
   639  0000                     	;# 
   640  0001                     	;# 
   641  0002                     	;# 
   642  0003                     	;# 
   643  0004                     	;# 
   644  0005                     	;# 
   645  0006                     	;# 
   646  0007                     	;# 
   647  0008                     	;# 
   648  0009                     	;# 
   649  000A                     	;# 
   650  000B                     	;# 
   651  000C                     	;# 
   652  000D                     	;# 
   653  000E                     	;# 
   654  000E                     	;# 
   655  000F                     	;# 
   656  0010                     	;# 
   657  0011                     	;# 
   658  0012                     	;# 
   659  0013                     	;# 
   660  0014                     	;# 
   661  0015                     	;# 
   662  0015                     	;# 
   663  0016                     	;# 
   664  0017                     	;# 
   665  0018                     	;# 
   666  0019                     	;# 
   667  001A                     	;# 
   668  001B                     	;# 
   669  001B                     	;# 
   670  001C                     	;# 
   671  001D                     	;# 
   672  001E                     	;# 
   673  001F                     	;# 
   674  0081                     	;# 
   675  0085                     	;# 
   676  0086                     	;# 
   677  0087                     	;# 
   678  0088                     	;# 
   679  0089                     	;# 
   680  008C                     	;# 
   681  008D                     	;# 
   682  008E                     	;# 
   683  008F                     	;# 
   684  0090                     	;# 
   685  0091                     	;# 
   686  0092                     	;# 
   687  0093                     	;# 
   688  0093                     	;# 
   689  0093                     	;# 
   690  0094                     	;# 
   691  0095                     	;# 
   692  0096                     	;# 
   693  0097                     	;# 
   694  0098                     	;# 
   695  0099                     	;# 
   696  009A                     	;# 
   697  009B                     	;# 
   698  009C                     	;# 
   699  009D                     	;# 
   700  009E                     	;# 
   701  009F                     	;# 
   702  0105                     	;# 
   703  0107                     	;# 
   704  0108                     	;# 
   705  0109                     	;# 
   706  010C                     	;# 
   707  010C                     	;# 
   708  010D                     	;# 
   709  010E                     	;# 
   710  010F                     	;# 
   711  0185                     	;# 
   712  0187                     	;# 
   713  0188                     	;# 
   714  0189                     	;# 
   715  018C                     	;# 
   716  018D                     	;# 
   717                           
   718                           	psect	idataBANK0
   719  08BD                     __pidataBANK0:	
   720                           
   721                           ;initializer for _d_atras
   722  08BD  340F               	retlw	15
   723                           
   724                           ;initializer for _d_frente
   725  08BE  340F               	retlw	15
   726                           
   727                           ;initializer for _inclinacion
   728  08BF  3404               	retlw	4
   729                           
   730                           ;initializer for _humedad
   731  08C0  3405               	retlw	5
   732                           
   733                           ;initializer for _jahr
   734  08C1  3414               	retlw	20
   735                           
   736                           ;initializer for _mes
   737  08C2  3403               	retlw	3
   738                           
   739                           ;initializer for _datum
   740  08C3  3406               	retlw	6
   741                           
   742                           ;initializer for _dia
   743  08C4  3405               	retlw	5
   744                           
   745                           ;initializer for _hora
   746  08C5  3410               	retlw	16
   747                           
   748                           ;initializer for _min
   749  08C6  3415               	retlw	21
   750                           
   751                           	psect	strings
   752  0800                     __pstrings:	
   753  0800                     stringtab:	
   754  0800                     __stringtab:	
   755  0800                     stringcode:	
   756                           ;	String table - string pointers are 1 byte each
   757                           
   758  0800                     stringdir:	
   759  0800  3008               	movlw	high stringdir
   760  0801  008A               	movwf	10
   761  0802  0804               	movf	4,w
   762  0803  0A84               	incf	4,f
   763  0804  0782               	addwf	2,f
   764  0805                     __stringbase:	
   765  0805  3400               	retlw	0
   766  0806                     __end_of__stringtab:	
   767  0806                     _gota:	
   768  0806  3404               	retlw	4
   769  0807  340A               	retlw	10
   770  0808  340A               	retlw	10
   771  0809  3411               	retlw	17
   772  080A  3411               	retlw	17
   773  080B  3411               	retlw	17
   774  080C  340E               	retlw	14
   775  080D  3400               	retlw	0
   776  080E                     __end_of_gota:	
   777  080E                     _termometro:	
   778  080E  3404               	retlw	4
   779  080F  340A               	retlw	10
   780  0810  340A               	retlw	10
   781  0811  340E               	retlw	14
   782  0812  340E               	retlw	14
   783  0813  341F               	retlw	31
   784  0814  341F               	retlw	31
   785  0815  340E               	retlw	14
   786  0816                     __end_of_termometro:	
   787  0816                     _atilde:	
   788  0816  3402               	retlw	2
   789  0817  3404               	retlw	4
   790  0818  3400               	retlw	0
   791  0819  340E               	retlw	14
   792  081A  3401               	retlw	1
   793  081B  340F               	retlw	15
   794  081C  3411               	retlw	17
   795  081D  340F               	retlw	15
   796  081E                     __end_of_atilde:	
   797  081E                     _arrowr_vacio:	
   798  081E  3400               	retlw	0
   799  081F  3408               	retlw	8
   800  0820  340C               	retlw	12
   801  0821  340A               	retlw	10
   802  0822  3409               	retlw	9
   803  0823  340A               	retlw	10
   804  0824  340C               	retlw	12
   805  0825  3408               	retlw	8
   806  0826                     __end_of_arrowr_vacio:	
   807  0826                     _arrowr:	
   808  0826  3400               	retlw	0
   809  0827  3408               	retlw	8
   810  0828  340C               	retlw	12
   811  0829  340E               	retlw	14
   812  082A  340F               	retlw	15
   813  082B  340E               	retlw	14
   814  082C  340C               	retlw	12
   815  082D  3408               	retlw	8
   816  082E                     __end_of_arrowr:	
   817  0019                     _TXREG	set	25
   818  001A                     _RCREG	set	26
   819  0018                     _RCSTAbits	set	24
   820  0008                     _PORTD	set	8
   821  0007                     _PORTCbits	set	7
   822  0013                     _SSPBUF	set	19
   823  0014                     _SSPCON	set	20
   824  0006                     _PORTBbits	set	6
   825  0007                     _PORTC	set	7
   826  000B                     _INTCONbits	set	11
   827  0063                     _SSPIF	set	99
   828  005E                     _PEIE	set	94
   829  005F                     _GIE	set	95
   830  009A                     _SPBRGH	set	154
   831  0099                     _SPBRG	set	153
   832  0098                     _TXSTAbits	set	152
   833  0091                     _SSPCON2bits	set	145
   834  0087                     _TRISCbits	set	135
   835  0094                     _SSPSTAT	set	148
   836  0093                     _SSPADD	set	147
   837  0091                     _SSPCON2	set	145
   838  008F                     _OSCCONbits	set	143
   839  0088                     _TRISD	set	136
   840  0096                     _IOCB	set	150
   841  0081                     _OPTION_REGbits	set	129
   842  0095                     _WPUB	set	149
   843  0086                     _TRISB	set	134
   844  0087                     _TRISC	set	135
   845  04C1                     _TRMT	set	1217
   846  0463                     _SSPIE	set	1123
   847  043C                     _TRISC4	set	1084
   848  043B                     _TRISC3	set	1083
   849  0439                     _TRISC1	set	1081
   850  0438                     _TRISC0	set	1080
   851  0187                     _BAUDCTLbits	set	391
   852  0189                     _ANSELH	set	393
   853  082E                     STR_2:	
   854  082E  3441               	retlw	65	;'A'
   855  082F  346D               	retlw	109	;'m'
   856  0830  3462               	retlw	98	;'b'
   857  0831  3469               	retlw	105	;'i'
   858  0832  3465               	retlw	101	;'e'
   859  0833  346E               	retlw	110	;'n'
   860  0834  3474               	retlw	116	;'t'
   861  0835  3465               	retlw	101	;'e'
   862  0836  343A               	retlw	58	;':'
   863  0837  3420               	retlw	32	;' '
   864  0838  3453               	retlw	83	;'S'
   865  0839  3475               	retlw	117	;'u'
   866  083A  3465               	retlw	101	;'e'
   867  083B  346C               	retlw	108	;'l'
   868  083C  346F               	retlw	111	;'o'
   869  083D  343A               	retlw	58	;':'
   870  083E  3400               	retlw	0
   871  083F                     STR_16:	
   872  083F  3456               	retlw	86	;'V'
   873  0840  3461               	retlw	97	;'a'
   874  0841  346D               	retlw	109	;'m'
   875  0842  346F               	retlw	111	;'o'
   876  0843  346E               	retlw	110	;'n'
   877  0844  346F               	retlw	111	;'o'
   878  0845  3473               	retlw	115	;'s'
   879  0846  3420               	retlw	32	;' '
   880  0847  3450               	retlw	80	;'P'
   881  0848  3465               	retlw	101	;'e'
   882  0849  3472               	retlw	114	;'r'
   883  084A  3472               	retlw	114	;'r'
   884  084B  346F               	retlw	111	;'o'
   885  084C  3473               	retlw	115	;'s'
   886  084D  3421               	retlw	33	;'!'
   887  084E  3400               	retlw	0
   888  084F                     STR_6:	
   889  084F  3445               	retlw	69	;'E'
   890  0850  344D               	retlw	77	;'M'
   891  0851  3445               	retlw	69	;'E'
   892  0852  3452               	retlw	82	;'R'
   893  0853  3447               	retlw	71	;'G'
   894  0854  3445               	retlw	69	;'E'
   895  0855  344E               	retlw	78	;'N'
   896  0856  3443               	retlw	67	;'C'
   897  0857  3449               	retlw	73	;'I'
   898  0858  3441               	retlw	65	;'A'
   899  0859  3421               	retlw	33	;'!'
   900  085A  3420               	retlw	32	;' '
   901  085B  3420               	retlw	32	;' '
   902  085C  3400               	retlw	0
   903  085D                     STR_9:	
   904  085D  3473               	retlw	115	;'s'
   905  085E  343A               	retlw	58	;':'
   906  085F  3420               	retlw	32	;' '
   907  0860  347C               	retlw	124	;'|'
   908  0861  3420               	retlw	32	;' '
   909  0862  3446               	retlw	70	;'F'
   910  0863  3472               	retlw	114	;'r'
   911  0864  3465               	retlw	101	;'e'
   912  0865  346E               	retlw	110	;'n'
   913  0866  3474               	retlw	116	;'t'
   914  0867  3465               	retlw	101	;'e'
   915  0868  343A               	retlw	58	;':'
   916  0869  3400               	retlw	0
   917  086A                     STR_3:	
   918  086A  3449               	retlw	73	;'I'
   919  086B  346E               	retlw	110	;'n'
   920  086C  3463               	retlw	99	;'c'
   921  086D  346C               	retlw	108	;'l'
   922  086E  3469               	retlw	105	;'i'
   923  086F  346E               	retlw	110	;'n'
   924  0870  3461               	retlw	97	;'a'
   925  0871  3463               	retlw	99	;'c'
   926  0872  3469               	retlw	105	;'i'
   927  0873  346F               	retlw	111	;'o'
   928  0874  346E               	retlw	110	;'n'
   929  0875  343A               	retlw	58	;':'
   930  0876  3400               	retlw	0
   931  0877                     STR_14:	
   932  0877  3454               	retlw	84	;'T'
   933  0878  346F               	retlw	111	;'o'
   934  0879  346D               	retlw	109	;'m'
   935  087A  3461               	retlw	97	;'a'
   936  087B  3472               	retlw	114	;'r'
   937  087C  3420               	retlw	32	;' '
   938  087D  3464               	retlw	100	;'d'
   939  087E  3461               	retlw	97	;'a'
   940  087F  3474               	retlw	116	;'t'
   941  0880  346F               	retlw	111	;'o'
   942  0881  3473               	retlw	115	;'s'
   943  0882  343A               	retlw	58	;':'
   944  0883  3400               	retlw	0
   945  0884                     STR_5:	
   946  0884  3450               	retlw	80	;'P'
   947  0885  3465               	retlw	101	;'e'
   948  0886  346C               	retlw	108	;'l'
   949  0887  3469               	retlw	105	;'i'
   950  0888  3467               	retlw	103	;'g'
   951  0889  3472               	retlw	114	;'r'
   952  088A  346F               	retlw	111	;'o'
   953  088B  3421               	retlw	33	;'!'
   954  088C  3420               	retlw	32	;' '
   955  088D  3420               	retlw	32	;' '
   956  088E  3420               	retlw	32	;' '
   957  088F  3400               	retlw	0
   958  0890                     STR_4:	
   959  0890  3445               	retlw	69	;'E'
   960  0891  3473               	retlw	115	;'s'
   961  0892  3474               	retlw	116	;'t'
   962  0893  3461               	retlw	97	;'a'
   963  0894  3462               	retlw	98	;'b'
   964  0895  346C               	retlw	108	;'l'
   965  0896  3465               	retlw	101	;'e'
   966  0897  3420               	retlw	32	;' '
   967  0898  3420               	retlw	32	;' '
   968  0899  3420               	retlw	32	;' '
   969  089A  3400               	retlw	0
   970  089B                     STR_7:	
   971  089B  3448               	retlw	72	;'H'
   972  089C  3475               	retlw	117	;'u'
   973  089D  346D               	retlw	109	;'m'
   974  089E  3465               	retlw	101	;'e'
   975  089F  3464               	retlw	100	;'d'
   976  08A0  3461               	retlw	97	;'a'
   977  08A1  3464               	retlw	100	;'d'
   978  08A2  343A               	retlw	58	;':'
   979  08A3  3400               	retlw	0
   980  08A4                     STR_17:	
   981  08A4  3445               	retlw	69	;'E'
   982  08A5  3452               	retlw	82	;'R'
   983  08A6  3452               	retlw	82	;'R'
   984  08A7  344F               	retlw	79	;'O'
   985  08A8  3452               	retlw	82	;'R'
   986  08A9  3400               	retlw	0
   987  08AA                     STR_11:	
   988  08AA  342D               	retlw	45	;'-'
   989  08AB  342D               	retlw	45	;'-'
   990  08AC  342D               	retlw	45	;'-'
   991  08AD  342D               	retlw	45	;'-'
   992  08AE  3400               	retlw	0
   993  08AF                     STR_8:	
   994  08AF  3441               	retlw	65	;'A'
   995  08B0  3474               	retlw	116	;'t'
   996  08B1  3472               	retlw	114	;'r'
   997  08B2  3400               	retlw	0
   998  08B3                     STR_15:	
   999  08B3  3478               	retlw	120	;'x'
  1000  08B4  3420               	retlw	32	;' '
  1001  08B5  3400               	retlw	0
  1002  08B6                     STR_1:	
  1003  08B6  3432               	retlw	50	;'2'
  1004  08B7  3430               	retlw	48	;'0'
  1005  08B8  3400               	retlw	0
  1006  08B9                     STR_10:	
  1007  08B9  3463               	retlw	99	;'c'
  1008  08BA  346D               	retlw	109	;'m'
  1009  08BB  3400               	retlw	0
  1010  08AA                     
  1011                           ; #config settings
  1012  0000                     
  1013                           	psect	cinit
  1014  000F                     start_initialization:	
  1015  000F                     __initialization:	
  1016                           
  1017                           ; Initialize objects allocated to BANK0
  1018  000F  1383               	bcf	3,7	;select IRP bank0
  1019  0010  3070               	movlw	low (__pdataBANK0+10)
  1020  0011  00FD               	movwf	btemp+-1
  1021  0012  3008               	movlw	high __pidataBANK0
  1022  0013  00FE               	movwf	btemp
  1023  0014  30BD               	movlw	low __pidataBANK0
  1024  0015  00FF               	movwf	btemp+1
  1025  0016  3066               	movlw	low __pdataBANK0
  1026  0017  0084               	movwf	4
  1027  0018  160A  118A  22F6   	fcall	init_ram0
  1028                           
  1029                           ; Clear objects allocated to BANK1
  1030  001B  1683               	bsf	3,5	;RP0=1, select bank1
  1031  001C  1303               	bcf	3,6	;RP1=0, select bank1
  1032  001D  01A0               	clrf	__pbssBANK1& (0+127)
  1033  001E  01A1               	clrf	(__pbssBANK1+1)& (0+127)
  1034  001F  01A2               	clrf	(__pbssBANK1+2)& (0+127)
  1035  0020  01A3               	clrf	(__pbssBANK1+3)& (0+127)
  1036  0021  01A4               	clrf	(__pbssBANK1+4)& (0+127)
  1037  0022  01A5               	clrf	(__pbssBANK1+5)& (0+127)
  1038                           
  1039                           ; Clear objects allocated to BANK0
  1040  0023  1283               	bcf	3,5	;RP0=0, select bank0
  1041  0024  1303               	bcf	3,6	;RP1=0, select bank0
  1042  0025  01DA               	clrf	__pbssBANK0& (0+127)
  1043  0026  01DB               	clrf	(__pbssBANK0+1)& (0+127)
  1044  0027  01DC               	clrf	(__pbssBANK0+2)& (0+127)
  1045  0028  01DD               	clrf	(__pbssBANK0+3)& (0+127)
  1046  0029  01DE               	clrf	(__pbssBANK0+4)& (0+127)
  1047  002A  01DF               	clrf	(__pbssBANK0+5)& (0+127)
  1048  002B  01E0               	clrf	(__pbssBANK0+6)& (0+127)
  1049  002C  01E1               	clrf	(__pbssBANK0+7)& (0+127)
  1050  002D  01E2               	clrf	(__pbssBANK0+8)& (0+127)
  1051  002E  01E3               	clrf	(__pbssBANK0+9)& (0+127)
  1052  002F  01E4               	clrf	(__pbssBANK0+10)& (0+127)
  1053  0030  01E5               	clrf	(__pbssBANK0+11)& (0+127)
  1054                           
  1055                           ; Clear objects allocated to COMMON
  1056  0031  01FA               	clrf	__pbssCOMMON& (0+127)
  1057  0032  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1058  0033                     end_of_initialization:	
  1059                           ;End of C runtime variable initialization code
  1060                           
  1061  0033                     __end_of__initialization:	
  1062  0033  0183               	clrf	3
  1063  0034  120A  158A  2AD5   	ljmp	_main	;jump to C main() function
  1064                           
  1065                           	psect	bssCOMMON
  1066  007A                     __pbssCOMMON:	
  1067  007A                     _seg:	
  1068  007A                     	ds	1
  1069  007B                     _estado:	
  1070  007B                     	ds	1
  1071                           
  1072                           	psect	bssBANK0
  1073  005A                     __pbssBANK0:	
  1074  005A                     _accZ:	
  1075  005A                     	ds	2
  1076  005C                     _sprintbuffer:	
  1077  005C                     	ds	1
  1078  005D                     _ancho:	
  1079  005D                     	ds	1
  1080  005E                     _largo:	
  1081  005E                     	ds	1
  1082  005F                     _banderaPUSH2:	
  1083  005F                     	ds	1
  1084  0060                     _banderaPUSH1:	
  1085  0060                     	ds	1
  1086  0061                     _banderaBoton:	
  1087  0061                     	ds	1
  1088  0062                     _obj_array:	
  1089  0062                     	ds	1
  1090  0063                     _temperatura_obj:	
  1091  0063                     	ds	1
  1092  0064                     _temperatura:	
  1093  0064                     	ds	1
  1094  0065                     _velocidad:	
  1095  0065                     	ds	1
  1096                           
  1097                           	psect	dataBANK0
  1098  0066                     __pdataBANK0:	
  1099  0066                     _d_atras:	
  1100  0066                     	ds	1
  1101  0067                     _d_frente:	
  1102  0067                     	ds	1
  1103  0068                     _inclinacion:	
  1104  0068                     	ds	1
  1105  0069                     _humedad:	
  1106  0069                     	ds	1
  1107  006A                     _jahr:	
  1108  006A                     	ds	1
  1109  006B                     _mes:	
  1110  006B                     	ds	1
  1111  006C                     _datum:	
  1112  006C                     	ds	1
  1113  006D                     _dia:	
  1114  006D                     	ds	1
  1115  006E                     _hora:	
  1116  006E                     	ds	1
  1117  006F                     _min:	
  1118  006F                     	ds	1
  1119                           
  1120                           	psect	bssBANK1
  1121  00A0                     __pbssBANK1:	
  1122  00A0                     uint_to_array@F1343:	
  1123  00A0                     	ds	6
  1124                           
  1125                           	psect	inittext
  1126  12F2                     init_fetch0:	
  1127                           ;	Called with low address in FSR and high address in W
  1128                           
  1129  12F2  087E               	movf	126,w
  1130  12F3  008A               	movwf	10
  1131  12F4  087F               	movf	127,w
  1132  12F5  0082               	movwf	2
  1133  12F6                     init_ram0:	
  1134                           ;Called with:
  1135                           ;	high address of idata address in btemp 
  1136                           ;	low address of idata address in btemp+1 
  1137                           ;	low address of data in FSR
  1138                           ;	high address + 1 of data in btemp-1
  1139                           
  1140  12F6  22F2  160A  118A   	fcall	init_fetch0
  1141  12F9  0080               	movwf	0
  1142  12FA  0A84               	incf	4,f
  1143  12FB  0804               	movf	4,w
  1144  12FC  067D               	xorwf	125,w
  1145  12FD  1903               	btfsc	3,2
  1146  12FE  3400               	retlw	0
  1147  12FF  0AFF               	incf	127,f
  1148  1300  1903               	btfsc	3,2
  1149  1301  0AFE               	incf	126,f
  1150  1302  2AF6               	goto	init_ram0
  1151                           
  1152                           	psect	cstackCOMMON
  1153  0070                     __pcstackCOMMON:	
  1154  0070                     ?_SetUp:	
  1155  0070                     ?_get_PICslave:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ?_get_Time:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_mostrarLCD:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ?_pressBoton1:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_pressBoton2:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ?_uartTX_Write:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_LCD_init:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ?_LCD_clear:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_IMU_init:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ?_LCD_Write_Character:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_LCD_Write_String:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ?_uint_to_array:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?_I2C_Master_Start:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ?_I2C_Master_Stop:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ?_ISR:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ??_ISR:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_main:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_BCD_a_DEC:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_I2C_Master_Wait:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_LCD_Cmd:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215                           
  1216                           ; 1 bytes @ 0x0
  1217  0070                     	ds	2
  1218  0072                     ?_ver_inclinacion:	
  1219  0072                     ??_uartTX_Write:	
  1220                           ; 1 bytes @ 0x2
  1221                           
  1222  0072                     ?_OSC_config:	
  1223                           ; 1 bytes @ 0x2
  1224                           
  1225  0072                     ?_uart_init:	
  1226                           ; 1 bytes @ 0x2
  1227                           
  1228  0072                     ??_LCD_Write_Character:	
  1229                           ; 1 bytes @ 0x2
  1230                           
  1231  0072                     ??_I2C_Master_Start:	
  1232                           ; 1 bytes @ 0x2
  1233                           
  1234  0072                     ?_I2C_Master_Write:	
  1235                           ; 1 bytes @ 0x2
  1236                           
  1237  0072                     ??_I2C_Master_Stop:	
  1238                           ; 1 bytes @ 0x2
  1239                           
  1240  0072                     ??_I2C_Master_Wait:	
  1241                           ; 1 bytes @ 0x2
  1242                           
  1243  0072                     ??_LCD_Cmd:	
  1244                           ; 1 bytes @ 0x2
  1245                           
  1246  0072                     ?___bmul:	
  1247                           ; 1 bytes @ 0x2
  1248                           
  1249  0072                     ?_I2C_Master_Read:	
  1250                           ; 1 bytes @ 0x2
  1251                           
  1252  0072                     ?___wmul:	
  1253                           ; 2 bytes @ 0x2
  1254                           
  1255  0072                     ?___awmod:	
  1256                           ; 2 bytes @ 0x2
  1257                           
  1258  0072                     ?___lwdiv:	
  1259                           ; 2 bytes @ 0x2
  1260                           
  1261  0072                     ?___lldiv:	
  1262                           ; 2 bytes @ 0x2
  1263                           
  1264  0072                     uartTX_Write@dato:	
  1265                           ; 4 bytes @ 0x2
  1266                           
  1267  0072                     ___bmul@multiplicand:	
  1268                           ; 1 bytes @ 0x2
  1269                           
  1270  0072                     ver_inclinacion@valor:	
  1271                           ; 1 bytes @ 0x2
  1272                           
  1273  0072                     I2C_Master_Write@d:	
  1274                           ; 2 bytes @ 0x2
  1275                           
  1276  0072                     I2C_Master_Read@a:	
  1277                           ; 2 bytes @ 0x2
  1278                           
  1279  0072                     ___wmul@multiplier:	
  1280                           ; 2 bytes @ 0x2
  1281                           
  1282  0072                     ___awmod@divisor:	
  1283                           ; 2 bytes @ 0x2
  1284                           
  1285  0072                     ___lwdiv@divisor:	
  1286                           ; 2 bytes @ 0x2
  1287                           
  1288  0072                     OSC_config@frecuencia:	
  1289                           ; 2 bytes @ 0x2
  1290                           
  1291  0072                     ___lldiv@divisor:	
  1292                           ; 4 bytes @ 0x2
  1293                           
  1294                           
  1295                           ; 4 bytes @ 0x2
  1296  0072                     	ds	1
  1297  0073                     ??___bmul:	
  1298  0073                     LCD_Write_Character@caracter:	
  1299                           ; 1 bytes @ 0x3
  1300                           
  1301                           
  1302                           ; 1 bytes @ 0x3
  1303  0073                     	ds	1
  1304  0074                     ??_ver_inclinacion:	
  1305  0074                     ??_uart_init:	
  1306                           ; 1 bytes @ 0x4
  1307                           
  1308  0074                     ??_IMU_init:	
  1309                           ; 1 bytes @ 0x4
  1310                           
  1311  0074                     ??_LCD_Write_String:	
  1312                           ; 1 bytes @ 0x4
  1313                           
  1314  0074                     ??_I2C_Master_Write:	
  1315                           ; 1 bytes @ 0x4
  1316                           
  1317  0074                     ??_I2C_Master_Read:	
  1318                           ; 1 bytes @ 0x4
  1319                           
  1320  0074                     LCD_Cmd@comando:	
  1321                           ; 1 bytes @ 0x4
  1322                           
  1323  0074                     ___bmul@product:	
  1324                           ; 1 bytes @ 0x4
  1325                           
  1326  0074                     LCD_Write_String@n:	
  1327                           ; 1 bytes @ 0x4
  1328                           
  1329  0074                     ___wmul@multiplicand:	
  1330                           ; 2 bytes @ 0x4
  1331                           
  1332  0074                     ___awmod@dividend:	
  1333                           ; 2 bytes @ 0x4
  1334                           
  1335  0074                     ___lwdiv@dividend:	
  1336                           ; 2 bytes @ 0x4
  1337                           
  1338                           
  1339                           ; 2 bytes @ 0x4
  1340  0074                     	ds	1
  1341  0075                     ??_LCD_init:	
  1342  0075                     ?_LCD_Create_Char:	
  1343                           ; 1 bytes @ 0x5
  1344                           
  1345  0075                     ??_LCD_clear:	
  1346                           ; 1 bytes @ 0x5
  1347                           
  1348  0075                     ?_LCD_Set_Cursor:	
  1349                           ; 1 bytes @ 0x5
  1350                           
  1351  0075                     ver_inclinacion@posicion:	
  1352                           ; 1 bytes @ 0x5
  1353                           
  1354  0075                     LCD_Set_Cursor@columna:	
  1355                           ; 1 bytes @ 0x5
  1356                           
  1357  0075                     LCD_Create_Char@chardata:	
  1358                           ; 1 bytes @ 0x5
  1359                           
  1360  0075                     ___bmul@multiplier:	
  1361                           ; 1 bytes @ 0x5
  1362                           
  1363                           
  1364                           ; 1 bytes @ 0x5
  1365  0075                     	ds	1
  1366  0076                     ??_OSC_config:	
  1367  0076                     ??_LCD_Create_Char:	
  1368                           ; 1 bytes @ 0x6
  1369                           
  1370  0076                     ??_LCD_Set_Cursor:	
  1371                           ; 1 bytes @ 0x6
  1372                           
  1373  0076                     ??_BCD_a_DEC:	
  1374                           ; 1 bytes @ 0x6
  1375                           
  1376  0076                     ??___wmul:	
  1377                           ; 1 bytes @ 0x6
  1378                           
  1379  0076                     ??___awmod:	
  1380                           ; 1 bytes @ 0x6
  1381                           
  1382  0076                     ??___lwdiv:	
  1383                           ; 1 bytes @ 0x6
  1384                           
  1385  0076                     LCD_Write_String@a:	
  1386                           ; 1 bytes @ 0x6
  1387                           
  1388  0076                     I2C_Master_Read@temp:	
  1389                           ; 1 bytes @ 0x6
  1390                           
  1391  0076                     ___wmul@product:	
  1392                           ; 2 bytes @ 0x6
  1393                           
  1394  0076                     ___lldiv@dividend:	
  1395                           ; 2 bytes @ 0x6
  1396                           
  1397                           
  1398                           ; 4 bytes @ 0x6
  1399  0076                     	ds	1
  1400  0077                     ??_pressBoton1:	
  1401  0077                     LCD_Create_Char@charnum:	
  1402                           ; 1 bytes @ 0x7
  1403                           
  1404  0077                     ___awmod@counter:	
  1405                           ; 1 bytes @ 0x7
  1406                           
  1407  0077                     ___lwdiv@quotient:	
  1408                           ; 1 bytes @ 0x7
  1409                           
  1410                           
  1411                           ; 2 bytes @ 0x7
  1412  0077                     	ds	1
  1413  0078                     ??_get_PICslave:	
  1414  0078                     ??___awdiv:	
  1415                           ; 1 bytes @ 0x8
  1416                           
  1417  0078                     ?_Acc_Z:	
  1418                           ; 1 bytes @ 0x8
  1419                           
  1420  0078                     LCD_Set_Cursor@linea:	
  1421                           ; 2 bytes @ 0x8
  1422                           
  1423  0078                     LCD_Create_Char@n:	
  1424                           ; 1 bytes @ 0x8
  1425                           
  1426  0078                     ___awmod@sign:	
  1427                           ; 1 bytes @ 0x8
  1428                           
  1429                           
  1430                           ; 1 bytes @ 0x8
  1431  0078                     	ds	1
  1432  0079                     BCD_a_DEC@numBCD:	
  1433  0079                     LCD_Set_Cursor@corrimiento:	
  1434                           ; 1 bytes @ 0x9
  1435                           
  1436  0079                     ___lwdiv@counter:	
  1437                           ; 1 bytes @ 0x9
  1438                           
  1439                           
  1440                           ; 1 bytes @ 0x9
  1441  0079                     	ds	1
  1442                           
  1443                           	psect	cstackBANK0
  1444  0020                     __pcstackBANK0:	
  1445  0020                     ??_get_Time:	
  1446  0020                     ??_Acc_Z:	
  1447                           ; 1 bytes @ 0x0
  1448                           
  1449  0020                     ??_pressBoton2:	
  1450                           ; 1 bytes @ 0x0
  1451                           
  1452  0020                     ??___lldiv:	
  1453                           ; 1 bytes @ 0x0
  1454                           
  1455  0020                     ?___awdiv:	
  1456                           ; 1 bytes @ 0x0
  1457                           
  1458  0020                     ?___xxtofl:	
  1459                           ; 2 bytes @ 0x0
  1460                           
  1461  0020                     get_PICslave@address:	
  1462                           ; 4 bytes @ 0x0
  1463                           
  1464  0020                     ___awdiv@divisor:	
  1465                           ; 1 bytes @ 0x0
  1466                           
  1467  0020                     ___xxtofl@val:	
  1468                           ; 2 bytes @ 0x0
  1469                           
  1470                           
  1471                           ; 4 bytes @ 0x0
  1472  0020                     	ds	1
  1473  0021                     get_PICslave@dato:	
  1474  0021                     ___lldiv@quotient:	
  1475                           ; 1 bytes @ 0x1
  1476                           
  1477                           
  1478                           ; 4 bytes @ 0x1
  1479  0021                     	ds	1
  1480  0022                     Acc_Z@acc:	
  1481  0022                     ___awdiv@dividend:	
  1482                           ; 2 bytes @ 0x2
  1483                           
  1484                           
  1485                           ; 2 bytes @ 0x2
  1486  0022                     	ds	2
  1487  0024                     ??___xxtofl:	
  1488  0024                     ___awdiv@counter:	
  1489                           ; 1 bytes @ 0x4
  1490                           
  1491                           
  1492                           ; 1 bytes @ 0x4
  1493  0024                     	ds	1
  1494  0025                     ___lldiv@counter:	
  1495  0025                     ___awdiv@sign:	
  1496                           ; 1 bytes @ 0x5
  1497                           
  1498                           
  1499                           ; 1 bytes @ 0x5
  1500  0025                     	ds	1
  1501  0026                     ?_I2C_Master_Init:	
  1502  0026                     ___awdiv@quotient:	
  1503                           ; 1 bytes @ 0x6
  1504                           
  1505  0026                     I2C_Master_Init@c:	
  1506                           ; 2 bytes @ 0x6
  1507                           
  1508                           
  1509                           ; 4 bytes @ 0x6
  1510  0026                     	ds	2
  1511  0028                     ??_uint_to_array:	
  1512  0028                     ?_display_Uhrzeit:	
  1513                           ; 1 bytes @ 0x8
  1514                           
  1515  0028                     ?_display_Datum:	
  1516                           ; 1 bytes @ 0x8
  1517                           
  1518  0028                     display_Uhrzeit@columna:	
  1519                           ; 1 bytes @ 0x8
  1520                           
  1521  0028                     display_Datum@columna:	
  1522                           ; 1 bytes @ 0x8
  1523                           
  1524  0028                     ___xxtofl@sign:	
  1525                           ; 1 bytes @ 0x8
  1526                           
  1527                           
  1528                           ; 1 bytes @ 0x8
  1529  0028                     	ds	1
  1530  0029                     ??_display_Uhrzeit:	
  1531  0029                     ??_display_Datum:	
  1532                           ; 1 bytes @ 0x9
  1533                           
  1534  0029                     ___xxtofl@exp:	
  1535                           ; 1 bytes @ 0x9
  1536                           
  1537                           
  1538                           ; 1 bytes @ 0x9
  1539  0029                     	ds	1
  1540  002A                     ??_I2C_Master_Init:	
  1541  002A                     ___xxtofl@arg:	
  1542                           ; 1 bytes @ 0xA
  1543                           
  1544                           
  1545                           ; 4 bytes @ 0xA
  1546  002A                     	ds	2
  1547  002C                     display_Uhrzeit@fila:	
  1548  002C                     display_Datum@fila:	
  1549                           ; 1 bytes @ 0xC
  1550                           
  1551                           
  1552                           ; 1 bytes @ 0xC
  1553  002C                     	ds	1
  1554  002D                     display_Uhrzeit@seg_u:	
  1555  002D                     display_Datum@dia_u:	
  1556                           ; 1 bytes @ 0xD
  1557                           
  1558                           
  1559                           ; 1 bytes @ 0xD
  1560  002D                     	ds	1
  1561  002E                     ??_SetUp:	
  1562  002E                     ?___fladd:	
  1563                           ; 1 bytes @ 0xE
  1564                           
  1565  002E                     display_Uhrzeit@seg_d:	
  1566                           ; 4 bytes @ 0xE
  1567                           
  1568  002E                     display_Datum@dia_d:	
  1569                           ; 1 bytes @ 0xE
  1570                           
  1571  002E                     uint_to_array@decenas:	
  1572                           ; 1 bytes @ 0xE
  1573                           
  1574  002E                     ___fladd@b:	
  1575                           ; 1 bytes @ 0xE
  1576                           
  1577                           
  1578                           ; 4 bytes @ 0xE
  1579  002E                     	ds	1
  1580  002F                     display_Uhrzeit@min_u:	
  1581  002F                     display_Datum@mes_u:	
  1582                           ; 1 bytes @ 0xF
  1583                           
  1584  002F                     uint_to_array@centenas:	
  1585                           ; 1 bytes @ 0xF
  1586                           
  1587                           
  1588                           ; 1 bytes @ 0xF
  1589  002F                     	ds	1
  1590  0030                     display_Uhrzeit@min_d:	
  1591  0030                     display_Datum@mes_d:	
  1592                           ; 1 bytes @ 0x10
  1593                           
  1594  0030                     uint_to_array@resultado:	
  1595                           ; 1 bytes @ 0x10
  1596                           
  1597                           
  1598                           ; 6 bytes @ 0x10
  1599  0030                     	ds	1
  1600  0031                     display_Uhrzeit@Uhr_u:	
  1601  0031                     display_Datum@jahr_u:	
  1602                           ; 1 bytes @ 0x11
  1603                           
  1604                           
  1605                           ; 1 bytes @ 0x11
  1606  0031                     	ds	1
  1607  0032                     display_Uhrzeit@Uhr_d:	
  1608  0032                     display_Datum@jahr_d:	
  1609                           ; 1 bytes @ 0x12
  1610                           
  1611  0032                     ___fladd@a:	
  1612                           ; 1 bytes @ 0x12
  1613                           
  1614                           
  1615                           ; 4 bytes @ 0x12
  1616  0032                     	ds	4
  1617  0036                     ??___fladd:	
  1618  0036                     uint_to_array@numero:	
  1619                           ; 1 bytes @ 0x16
  1620                           
  1621                           
  1622                           ; 1 bytes @ 0x16
  1623  0036                     	ds	1
  1624  0037                     ??_mostrarLCD:	
  1625                           
  1626                           ; 1 bytes @ 0x17
  1627  0037                     	ds	3
  1628  003A                     mostrarLCD@pantalla:	
  1629                           
  1630                           ; 1 bytes @ 0x1A
  1631  003A                     	ds	2
  1632  003C                     mostrarLCD@uni_frente:	
  1633                           
  1634                           ; 1 bytes @ 0x1C
  1635  003C                     	ds	1
  1636  003D                     mostrarLCD@uni_atras:	
  1637                           
  1638                           ; 1 bytes @ 0x1D
  1639  003D                     	ds	1
  1640  003E                     ___fladd@signs:	
  1641                           
  1642                           ; 1 bytes @ 0x1E
  1643  003E                     	ds	1
  1644  003F                     mostrarLCD@dec_frente:	
  1645  003F                     ___fladd@aexp:	
  1646                           ; 1 bytes @ 0x1F
  1647                           
  1648                           
  1649                           ; 1 bytes @ 0x1F
  1650  003F                     	ds	1
  1651  0040                     mostrarLCD@dec_atras:	
  1652  0040                     ___fladd@bexp:	
  1653                           ; 1 bytes @ 0x20
  1654                           
  1655                           
  1656                           ; 1 bytes @ 0x20
  1657  0040                     	ds	1
  1658  0041                     ___fladd@grs:	
  1659                           
  1660                           ; 1 bytes @ 0x21
  1661  0041                     	ds	1
  1662  0042                     ?___fltol:	
  1663  0042                     ___fltol@f1:	
  1664                           ; 4 bytes @ 0x22
  1665                           
  1666                           
  1667                           ; 4 bytes @ 0x22
  1668  0042                     	ds	4
  1669  0046                     ??___fltol:	
  1670                           
  1671                           ; 1 bytes @ 0x26
  1672  0046                     	ds	5
  1673  004B                     ___fltol@sign1:	
  1674                           
  1675                           ; 1 bytes @ 0x2B
  1676  004B                     	ds	1
  1677  004C                     ___fltol@exp1:	
  1678                           
  1679                           ; 1 bytes @ 0x2C
  1680  004C                     	ds	1
  1681  004D                     ?_temp_ambiente:	
  1682  004D                     ?_temp_objeto:	
  1683                           ; 2 bytes @ 0x2D
  1684                           
  1685                           
  1686                           ; 2 bytes @ 0x2D
  1687  004D                     	ds	2
  1688  004F                     ??_temp_ambiente:	
  1689  004F                     ??_temp_objeto:	
  1690                           ; 1 bytes @ 0x2F
  1691                           
  1692                           
  1693                           ; 1 bytes @ 0x2F
  1694  004F                     	ds	5
  1695  0054                     temp_objeto@temp:	
  1696  0054                     temp_ambiente@temp:	
  1697                           ; 2 bytes @ 0x34
  1698                           
  1699                           
  1700                           ; 2 bytes @ 0x34
  1701  0054                     	ds	2
  1702  0056                     temp_objeto@temp_LSB:	
  1703  0056                     temp_ambiente@temp_LSB:	
  1704                           ; 1 bytes @ 0x36
  1705                           
  1706                           
  1707                           ; 1 bytes @ 0x36
  1708  0056                     	ds	1
  1709  0057                     temp_objeto@temp_MSB:	
  1710  0057                     temp_ambiente@temp_MSB:	
  1711                           ; 2 bytes @ 0x37
  1712                           
  1713                           
  1714                           ; 2 bytes @ 0x37
  1715  0057                     	ds	2
  1716  0059                     ??_main:	
  1717                           
  1718                           ; 1 bytes @ 0x39
  1719  0059                     	ds	1
  1720                           
  1721                           	psect	maintext
  1722  0AD5                     __pmaintext:	
  1723 ;;
  1724 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1725 ;;
  1726 ;; *************** function _main *****************
  1727 ;; Defined at:
  1728 ;;		line 142 in file "main_Master.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;		None
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : B00/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1742 ;;      Params:         0       0       0       0       0
  1743 ;;      Locals:         0       0       0       0       0
  1744 ;;      Temps:          0       1       0       0       0
  1745 ;;      Totals:         0       1       0       0       0
  1746 ;;Total ram usage:        1 bytes
  1747 ;; Hardware stack levels required when called:    5
  1748 ;; This function calls:
  1749 ;;		_Acc_Z
  1750 ;;		_SetUp
  1751 ;;		_get_PICslave
  1752 ;;		_get_Time
  1753 ;;		_mostrarLCD
  1754 ;;		_pressBoton1
  1755 ;;		_pressBoton2
  1756 ;;		_temp_ambiente
  1757 ;;		_temp_objeto
  1758 ;;		_uartTX_Write
  1759 ;;		_ver_inclinacion
  1760 ;; This function is called by:
  1761 ;;		Startup code after reset
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           
  1766                           ;psect for function _main
  1767  0AD5                     _main:	
  1768                           
  1769                           ;main_Master.c: 143:     SetUp();
  1770                           
  1771                           ;incstack = 0
  1772                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1773  0AD5  120A  158A  20FE  120A  158A  	fcall	_SetUp
  1774  0ADA                     l5149:	
  1775                           
  1776                           ;main_Master.c: 146:         d_atras = get_PICslave(0x31);
  1777  0ADA  3031               	movlw	49
  1778  0ADB  160A  118A  239A  120A  158A  	fcall	_get_PICslave
  1779  0AE0  1283               	bcf	3,5	;RP0=0, select bank0
  1780  0AE1  1303               	bcf	3,6	;RP1=0, select bank0
  1781  0AE2  00D9               	movwf	??_main
  1782  0AE3  0859               	movf	??_main,w
  1783  0AE4  00E6               	movwf	_d_atras
  1784                           
  1785                           ;main_Master.c: 150:         get_Time();
  1786  0AE5  120A  118A  25F5  120A  158A  	fcall	_get_Time
  1787                           
  1788                           ;main_Master.c: 151:         temperatura = temp_ambiente();
  1789  0AEA  120A  158A  242B  120A  158A  	fcall	_temp_ambiente
  1790  0AEF  1283               	bcf	3,5	;RP0=0, select bank0
  1791  0AF0  1303               	bcf	3,6	;RP1=0, select bank0
  1792  0AF1  084D               	movf	?_temp_ambiente,w
  1793  0AF2  00D9               	movwf	??_main
  1794  0AF3  0859               	movf	??_main,w
  1795  0AF4  00E4               	movwf	_temperatura
  1796                           
  1797                           ;main_Master.c: 152:         temperatura_obj = temp_objeto();
  1798  0AF5  120A  158A  24E1  120A  158A  	fcall	_temp_objeto
  1799  0AFA  1283               	bcf	3,5	;RP0=0, select bank0
  1800  0AFB  1303               	bcf	3,6	;RP1=0, select bank0
  1801  0AFC  084D               	movf	?_temp_objeto,w
  1802  0AFD  00D9               	movwf	??_main
  1803  0AFE  0859               	movf	??_main,w
  1804  0AFF  00E3               	movwf	_temperatura_obj
  1805                           
  1806                           ;main_Master.c: 153:         d_frente = get_PICslave(0x31);
  1807  0B00  3031               	movlw	49
  1808  0B01  160A  118A  239A  120A  158A  	fcall	_get_PICslave
  1809  0B06  1283               	bcf	3,5	;RP0=0, select bank0
  1810  0B07  1303               	bcf	3,6	;RP1=0, select bank0
  1811  0B08  00D9               	movwf	??_main
  1812  0B09  0859               	movf	??_main,w
  1813  0B0A  00E7               	movwf	_d_frente
  1814                           
  1815                           ;main_Master.c: 154:         accZ = Acc_Z();
  1816  0B0B  160A  118A  26F7  120A  158A  	fcall	_Acc_Z
  1817  0B10  0879               	movf	?_Acc_Z+1,w
  1818  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  1819  0B12  1303               	bcf	3,6	;RP1=0, select bank0
  1820  0B13  00DB               	movwf	_accZ+1
  1821  0B14  0878               	movf	?_Acc_Z,w
  1822  0B15  00DA               	movwf	_accZ
  1823                           
  1824                           ;main_Master.c: 155:         inclinacion = ver_inclinacion(accZ);
  1825  0B16  085B               	movf	_accZ+1,w
  1826  0B17  00F3               	movwf	ver_inclinacion@valor+1
  1827  0B18  085A               	movf	_accZ,w
  1828  0B19  00F2               	movwf	ver_inclinacion@valor
  1829  0B1A  120A  158A  20C7  120A  158A  	fcall	_ver_inclinacion
  1830  0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  1831  0B20  1303               	bcf	3,6	;RP1=0, select bank0
  1832  0B21  00D9               	movwf	??_main
  1833  0B22  0859               	movf	??_main,w
  1834  0B23  00E8               	movwf	_inclinacion
  1835                           
  1836                           ;main_Master.c: 160:         mostrarLCD(estado);
  1837  0B24  087B               	movf	_estado,w
  1838  0B25  120A  118A  2037  120A  158A  	fcall	_mostrarLCD
  1839                           
  1840                           ;main_Master.c: 161:         pressBoton1();
  1841  0B2A  160A  118A  2688  120A  158A  	fcall	_pressBoton1
  1842                           
  1843                           ;main_Master.c: 162:         pressBoton2();
  1844  0B2F  120A  158A  222E  120A  158A  	fcall	_pressBoton2
  1845                           
  1846                           ;main_Master.c: 164:         uartTX_Write(125);
  1847  0B34  307D               	movlw	125
  1848  0B35  160A  118A  22C8  120A  158A  	fcall	_uartTX_Write
  1849                           
  1850                           ;main_Master.c: 165:         uartTX_Write(hora);
  1851  0B3A  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0B3B  1303               	bcf	3,6	;RP1=0, select bank0
  1853  0B3C  086E               	movf	_hora,w
  1854  0B3D  160A  118A  22C8  120A  158A  	fcall	_uartTX_Write
  1855                           
  1856                           ;main_Master.c: 166:         uartTX_Write(min);
  1857  0B42  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0B43  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0B44  086F               	movf	_min,w
  1860  0B45  160A  118A  22C8  120A  158A  	fcall	_uartTX_Write
  1861                           
  1862                           ;main_Master.c: 167:         uartTX_Write(seg);
  1863  0B4A  087A               	movf	_seg,w
  1864  0B4B  160A  118A  22C8  120A  158A  	fcall	_uartTX_Write
  1865                           
  1866                           ;main_Master.c: 168:         uartTX_Write(temperatura);
  1867  0B50  1283               	bcf	3,5	;RP0=0, select bank0
  1868  0B51  1303               	bcf	3,6	;RP1=0, select bank0
  1869  0B52  0864               	movf	_temperatura,w
  1870  0B53  160A  118A  22C8  120A  158A  	fcall	_uartTX_Write
  1871                           
  1872                           ;main_Master.c: 169:         uartTX_Write(temperatura_obj);
  1873  0B58  1283               	bcf	3,5	;RP0=0, select bank0
  1874  0B59  1303               	bcf	3,6	;RP1=0, select bank0
  1875  0B5A  0863               	movf	_temperatura_obj,w
  1876  0B5B  160A  118A  22C8  120A  158A  	fcall	_uartTX_Write
  1877                           
  1878                           ;main_Master.c: 170:         uartTX_Write(inclinacion);
  1879  0B60  1283               	bcf	3,5	;RP0=0, select bank0
  1880  0B61  1303               	bcf	3,6	;RP1=0, select bank0
  1881  0B62  0868               	movf	_inclinacion,w
  1882  0B63  160A  118A  22C8  120A  158A  	fcall	_uartTX_Write
  1883                           
  1884                           ;main_Master.c: 171:         uartTX_Write(humedad);
  1885  0B68  3005               	movlw	5
  1886  0B69  160A  118A  22C8  120A  158A  	fcall	_uartTX_Write
  1887                           
  1888                           ;main_Master.c: 172:         uartTX_Write(d_frente);
  1889  0B6E  1283               	bcf	3,5	;RP0=0, select bank0
  1890  0B6F  1303               	bcf	3,6	;RP1=0, select bank0
  1891  0B70  0867               	movf	_d_frente,w
  1892  0B71  160A  118A  22C8  120A  158A  	fcall	_uartTX_Write
  1893                           
  1894                           ;main_Master.c: 173:         uartTX_Write(d_atras);
  1895  0B76  1283               	bcf	3,5	;RP0=0, select bank0
  1896  0B77  1303               	bcf	3,6	;RP1=0, select bank0
  1897  0B78  0866               	movf	_d_atras,w
  1898  0B79  160A  118A  22C8  120A  158A  	fcall	_uartTX_Write
  1899  0B7E  2ADA               	goto	l5149
  1900  0B7F                     __end_of_main:	
  1901                           
  1902                           	psect	text1
  1903  08C7                     __ptext1:	
  1904 ;; *************** function _ver_inclinacion *****************
  1905 ;; Defined at:
  1906 ;;		line 549 in file "main_Master.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  valor           2    2[COMMON] int 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  posicion        1    5[COMMON] unsigned char 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      unsigned char 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, btemp+1
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1920 ;;      Params:         2       0       0       0       0
  1921 ;;      Locals:         1       0       0       0       0
  1922 ;;      Temps:          1       0       0       0       0
  1923 ;;      Totals:         4       0       0       0       0
  1924 ;;Total ram usage:        4 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:    1
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_main
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           
  1935                           ;psect for function _ver_inclinacion
  1936  08C7                     _ver_inclinacion:	
  1937                           
  1938                           ;main_Master.c: 550:     uint8_t posicion = 0;
  1939                           
  1940                           ;incstack = 0
  1941                           ; Regs used in _ver_inclinacion: [wreg+status,2+btemp+1]
  1942  08C7  01F5               	clrf	ver_inclinacion@posicion
  1943                           
  1944                           ;main_Master.c: 551:     if (valor>1900){
  1945  08C8  0873               	movf	ver_inclinacion@valor+1,w
  1946  08C9  3A80               	xorlw	128
  1947  08CA  00FF               	movwf	127
  1948  08CB  3087               	movlw	135
  1949  08CC  027F               	subwf	127,w
  1950  08CD  1D03               	skipz
  1951  08CE  28D1               	goto	u2745
  1952  08CF  306D               	movlw	109
  1953  08D0  0272               	subwf	ver_inclinacion@valor,w
  1954  08D1                     u2745:	
  1955  08D1  1C03               	skipc
  1956  08D2  28D5               	goto	l3711
  1957                           
  1958                           ;main_Master.c: 552:         posicion = 0;
  1959  08D3  01F5               	clrf	ver_inclinacion@posicion
  1960                           
  1961                           ;main_Master.c: 553:     }
  1962  08D4  28FC               	goto	l250
  1963  08D5                     l3711:	
  1964  08D5  0873               	movf	ver_inclinacion@valor+1,w
  1965  08D6  3A80               	xorlw	128
  1966  08D7  00FF               	movwf	127
  1967  08D8  3087               	movlw	135
  1968  08D9  027F               	subwf	127,w
  1969  08DA  1D03               	skipz
  1970  08DB  28DE               	goto	u2755
  1971  08DC  306C               	movlw	108
  1972  08DD  0272               	subwf	ver_inclinacion@valor,w
  1973  08DE                     u2755:	
  1974  08DE  1803               	skipnc
  1975  08DF  28ED               	goto	l3717
  1976  08E0  0873               	movf	ver_inclinacion@valor+1,w
  1977  08E1  3A80               	xorlw	128
  1978  08E2  00FF               	movwf	127
  1979  08E3  307C               	movlw	124
  1980  08E4  027F               	subwf	127,w
  1981  08E5  1D03               	skipz
  1982  08E6  28E9               	goto	u2765
  1983  08E7  30E1               	movlw	225
  1984  08E8  0272               	subwf	ver_inclinacion@valor,w
  1985  08E9                     u2765:	
  1986  08E9  1C03               	skipc
  1987  08EA  28ED               	goto	l3717
  1988                           
  1989                           ;main_Master.c: 555:         posicion = 90;
  1990  08EB  305A               	movlw	90
  1991  08EC  28F9               	goto	L1
  1992  08ED                     l3717:	
  1993                           ;main_Master.c: 556:     }
  1994                           
  1995  08ED  0873               	movf	ver_inclinacion@valor+1,w
  1996  08EE  3A80               	xorlw	128
  1997  08EF  00FF               	movwf	127
  1998  08F0  307C               	movlw	124
  1999  08F1  027F               	subwf	127,w
  2000  08F2  1D03               	skipz
  2001  08F3  28F6               	goto	u2775
  2002  08F4  30E0               	movlw	224
  2003  08F5  0272               	subwf	ver_inclinacion@valor,w
  2004  08F6                     u2775:	
  2005  08F6  1803               	skipnc
  2006  08F7  28FC               	goto	l250
  2007                           
  2008                           ;main_Master.c: 558:         posicion = 180;
  2009  08F8  30B4               	movlw	180
  2010  08F9                     L1:	
  2011  08F9  00F4               	movwf	??_ver_inclinacion
  2012  08FA  0874               	movf	??_ver_inclinacion,w
  2013  08FB  00F5               	movwf	ver_inclinacion@posicion
  2014  08FC                     l250:	
  2015                           
  2016                           ;main_Master.c: 560:     return posicion;
  2017  08FC  0875               	movf	ver_inclinacion@posicion,w
  2018  08FD  0008               	return
  2019  08FE                     __end_of_ver_inclinacion:	
  2020                           
  2021                           	psect	text2
  2022  12C8                     __ptext2:	
  2023 ;; *************** function _uartTX_Write *****************
  2024 ;; Defined at:
  2025 ;;		line 33 in file "UART.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  dato            1    wreg     unsigned char 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  dato            1    2[COMMON] unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2039 ;;      Params:         0       0       0       0       0
  2040 ;;      Locals:         1       0       0       0       0
  2041 ;;      Temps:          0       0       0       0       0
  2042 ;;      Totals:         1       0       0       0       0
  2043 ;;Total ram usage:        1 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:    1
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_main
  2050 ;;		_uartTX_Write_Str
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           
  2055                           ;psect for function _uartTX_Write
  2056  12C8                     _uartTX_Write:	
  2057                           
  2058                           ;incstack = 0
  2059                           ; Regs used in _uartTX_Write: [wreg]
  2060                           ;uartTX_Write@dato stored from wreg
  2061  12C8  00F2               	movwf	uartTX_Write@dato
  2062  12C9                     l453:	
  2063                           ;UART.c: 34:     while(!TRMT);
  2064                           
  2065  12C9  1683               	bsf	3,5	;RP0=1, select bank1
  2066  12CA  1303               	bcf	3,6	;RP1=0, select bank1
  2067  12CB  1C98               	btfss	24,1	;volatile
  2068  12CC  2AC9               	goto	l453
  2069                           
  2070                           ;UART.c: 35:     TXREG = dato;
  2071  12CD  0872               	movf	uartTX_Write@dato,w
  2072  12CE  1283               	bcf	3,5	;RP0=0, select bank0
  2073  12CF  1303               	bcf	3,6	;RP1=0, select bank0
  2074  12D0  0099               	movwf	25	;volatile
  2075  12D1  0008               	return
  2076  12D2                     __end_of_uartTX_Write:	
  2077                           
  2078                           	psect	text3
  2079  0CE1                     __ptext3:	
  2080 ;; *************** function _temp_objeto *****************
  2081 ;; Defined at:
  2082 ;;		line 16 in file "Temperatura_I2C.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;		None
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  temp_MSB        2   55[BANK0 ] unsigned int 
  2087 ;;  temp            2   52[BANK0 ] unsigned int 
  2088 ;;  temp_LSB        1   54[BANK0 ] unsigned char 
  2089 ;;  PEC             1    0        unsigned char 
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  2   45[BANK0 ] int 
  2092 ;; Registers used:
  2093 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2099 ;;      Params:         0       2       0       0       0
  2100 ;;      Locals:         0       6       0       0       0
  2101 ;;      Temps:          0       4       0       0       0
  2102 ;;      Totals:         0      12       0       0       0
  2103 ;;Total ram usage:       12 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:    3
  2106 ;; This function calls:
  2107 ;;		_I2C_Master_Read
  2108 ;;		_I2C_Master_Start
  2109 ;;		_I2C_Master_Stop
  2110 ;;		_I2C_Master_Write
  2111 ;;		___fladd
  2112 ;;		___fltol
  2113 ;;		___lwdiv
  2114 ;;		___xxtofl
  2115 ;; This function is called by:
  2116 ;;		_main
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           
  2121                           ;psect for function _temp_objeto
  2122  0CE1                     _temp_objeto:	
  2123                           
  2124                           ;Temperatura_I2C.c: 17:     uint16_t temp_MSB;;Temperatura_I2C.c: 18:     uint8_t temp_L
      +                          SB;;Temperatura_I2C.c: 19:     uint8_t PEC;;Temperatura_I2C.c: 20:     uint16_t temp;;Te
      +                          mperatura_I2C.c: 21:     I2C_Master_Start();
  2125                           
  2126                           ;incstack = 0
  2127                           ; Regs used in _temp_objeto: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2128  0CE1  160A  118A  22A9  120A  158A  	fcall	_I2C_Master_Start
  2129                           
  2130                           ;Temperatura_I2C.c: 22:     I2C_Master_Write(0x00);
  2131  0CE6  3000               	movlw	0
  2132  0CE7  00F2               	movwf	I2C_Master_Write@d
  2133  0CE8  00F3               	movwf	I2C_Master_Write@d+1
  2134  0CE9  160A  118A  22B7  120A  158A  	fcall	_I2C_Master_Write
  2135                           
  2136                           ;Temperatura_I2C.c: 23:     I2C_Master_Write(0x07);
  2137  0CEE  3007               	movlw	7
  2138  0CEF  00F2               	movwf	I2C_Master_Write@d
  2139  0CF0  3000               	movlw	0
  2140  0CF1  00F3               	movwf	I2C_Master_Write@d+1
  2141  0CF2  160A  118A  22B7  120A  158A  	fcall	_I2C_Master_Write
  2142                           
  2143                           ;Temperatura_I2C.c: 26:     I2C_Master_Start();
  2144  0CF7  160A  118A  22A9  120A  158A  	fcall	_I2C_Master_Start
  2145                           
  2146                           ;Temperatura_I2C.c: 27:     I2C_Master_Write(0x01);
  2147  0CFC  3001               	movlw	1
  2148  0CFD  00F2               	movwf	I2C_Master_Write@d
  2149  0CFE  3000               	movlw	0
  2150  0CFF  00F3               	movwf	I2C_Master_Write@d+1
  2151  0D00  160A  118A  22B7  120A  158A  	fcall	_I2C_Master_Write
  2152                           
  2153                           ;Temperatura_I2C.c: 28:     temp_LSB = I2C_Master_Read(0);
  2154  0D05  3000               	movlw	0
  2155  0D06  00F2               	movwf	I2C_Master_Read@a
  2156  0D07  00F3               	movwf	I2C_Master_Read@a+1
  2157  0D08  160A  118A  23C5  120A  158A  	fcall	_I2C_Master_Read
  2158  0D0D  0872               	movf	?_I2C_Master_Read,w
  2159  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  2160  0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  2161  0D10  00CF               	movwf	??_temp_objeto
  2162  0D11  084F               	movf	??_temp_objeto,w
  2163  0D12  00D6               	movwf	temp_objeto@temp_LSB
  2164                           
  2165                           ;Temperatura_I2C.c: 29:     temp_MSB = I2C_Master_Read(0);
  2166  0D13  3000               	movlw	0
  2167  0D14  00F2               	movwf	I2C_Master_Read@a
  2168  0D15  00F3               	movwf	I2C_Master_Read@a+1
  2169  0D16  160A  118A  23C5  120A  158A  	fcall	_I2C_Master_Read
  2170  0D1B  0873               	movf	?_I2C_Master_Read+1,w
  2171  0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  2172  0D1D  1303               	bcf	3,6	;RP1=0, select bank0
  2173  0D1E  00D8               	movwf	temp_objeto@temp_MSB+1
  2174  0D1F  0872               	movf	?_I2C_Master_Read,w
  2175  0D20  00D7               	movwf	temp_objeto@temp_MSB
  2176  0D21  3000               	movlw	0
  2177  0D22  00F2               	movwf	I2C_Master_Read@a
  2178  0D23  00F3               	movwf	I2C_Master_Read@a+1
  2179  0D24  160A  118A  23C5  120A  158A  	fcall	_I2C_Master_Read
  2180                           
  2181                           ;Temperatura_I2C.c: 31:     I2C_Master_Stop();
  2182  0D29  160A  118A  22B0  120A  158A  	fcall	_I2C_Master_Stop
  2183                           
  2184                           ;Temperatura_I2C.c: 32:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2185  0D2E  3041               	movlw	65
  2186  0D2F  1283               	bcf	3,5	;RP0=0, select bank0
  2187  0D30  1303               	bcf	3,6	;RP1=0, select bank0
  2188  0D31  00D0               	movwf	??_temp_objeto+1
  2189  0D32  30ED               	movlw	237
  2190  0D33  00CF               	movwf	??_temp_objeto
  2191  0D34                     u3607:	
  2192  0D34  0BCF               	decfsz	??_temp_objeto,f
  2193  0D35  2D34               	goto	u3607
  2194  0D36  0BD0               	decfsz	??_temp_objeto+1,f
  2195  0D37  2D34               	goto	u3607
  2196  0D38  2D39               	nop2
  2197                           
  2198                           ;Temperatura_I2C.c: 34:     temp_MSB = temp_MSB <<8;
  2199  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2200  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2201  0D3B  0857               	movf	temp_objeto@temp_MSB,w
  2202  0D3C  00D0               	movwf	??_temp_objeto+1
  2203  0D3D  01CF               	clrf	??_temp_objeto
  2204  0D3E  084F               	movf	??_temp_objeto,w
  2205  0D3F  00D7               	movwf	temp_objeto@temp_MSB
  2206  0D40  0850               	movf	??_temp_objeto+1,w
  2207  0D41  00D8               	movwf	temp_objeto@temp_MSB+1
  2208                           
  2209                           ;Temperatura_I2C.c: 35:     temp = (((temp_MSB+temp_LSB)/50)-273.15);
  2210  0D42  0856               	movf	temp_objeto@temp_LSB,w
  2211  0D43  0757               	addwf	temp_objeto@temp_MSB,w
  2212  0D44  00F4               	movwf	___lwdiv@dividend
  2213  0D45  0858               	movf	temp_objeto@temp_MSB+1,w
  2214  0D46  1803               	skipnc
  2215  0D47  0A58               	incf	temp_objeto@temp_MSB+1,w
  2216  0D48  00F5               	movwf	___lwdiv@dividend+1
  2217  0D49  3032               	movlw	50
  2218  0D4A  00F2               	movwf	___lwdiv@divisor
  2219  0D4B  3000               	movlw	0
  2220  0D4C  00F3               	movwf	___lwdiv@divisor+1
  2221  0D4D  120A  118A  27C1  120A  158A  	fcall	___lwdiv
  2222  0D52  0872               	movf	?___lwdiv,w
  2223  0D53  1283               	bcf	3,5	;RP0=0, select bank0
  2224  0D54  1303               	bcf	3,6	;RP1=0, select bank0
  2225  0D55  00CF               	movwf	??_temp_objeto
  2226  0D56  0873               	movf	?___lwdiv+1,w
  2227  0D57  00D0               	movwf	??_temp_objeto+1
  2228  0D58  01D1               	clrf	??_temp_objeto+2
  2229  0D59  01D2               	clrf	??_temp_objeto+3
  2230  0D5A  0852               	movf	??_temp_objeto+3,w
  2231  0D5B  00A3               	movwf	___xxtofl@val+3
  2232  0D5C  0851               	movf	??_temp_objeto+2,w
  2233  0D5D  00A2               	movwf	___xxtofl@val+2
  2234  0D5E  0850               	movf	??_temp_objeto+1,w
  2235  0D5F  00A1               	movwf	___xxtofl@val+1
  2236  0D60  084F               	movf	??_temp_objeto,w
  2237  0D61  00A0               	movwf	___xxtofl@val
  2238  0D62  3000               	movlw	0
  2239  0D63  120A  158A  2189  120A  158A  	fcall	___xxtofl
  2240  0D68  1283               	bcf	3,5	;RP0=0, select bank0
  2241  0D69  1303               	bcf	3,6	;RP1=0, select bank0
  2242  0D6A  0823               	movf	?___xxtofl+3,w
  2243  0D6B  00B5               	movwf	___fladd@a+3
  2244  0D6C  0822               	movf	?___xxtofl+2,w
  2245  0D6D  00B4               	movwf	___fladd@a+2
  2246  0D6E  0821               	movf	?___xxtofl+1,w
  2247  0D6F  00B3               	movwf	___fladd@a+1
  2248  0D70  0820               	movf	?___xxtofl,w
  2249  0D71  00B2               	movwf	___fladd@a
  2250  0D72  30C3               	movlw	195
  2251  0D73  00B1               	movwf	___fladd@b+3
  2252  0D74  3088               	movlw	136
  2253  0D75  00B0               	movwf	___fladd@b+2
  2254  0D76  3093               	movlw	147
  2255  0D77  00AF               	movwf	___fladd@b+1
  2256  0D78  3033               	movlw	51
  2257  0D79  00AE               	movwf	___fladd@b
  2258  0D7A  120A  118A  23C6  120A  158A  	fcall	___fladd
  2259  0D7F  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0D80  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0D81  0831               	movf	?___fladd+3,w
  2262  0D82  00C5               	movwf	___fltol@f1+3
  2263  0D83  0830               	movf	?___fladd+2,w
  2264  0D84  00C4               	movwf	___fltol@f1+2
  2265  0D85  082F               	movf	?___fladd+1,w
  2266  0D86  00C3               	movwf	___fltol@f1+1
  2267  0D87  082E               	movf	?___fladd,w
  2268  0D88  00C2               	movwf	___fltol@f1
  2269  0D89  160A  118A  261B   	fcall	___fltol
  2270  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2271  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2272  0D8E  0843               	movf	?___fltol+1,w
  2273  0D8F  00D5               	movwf	temp_objeto@temp+1
  2274  0D90  0842               	movf	?___fltol,w
  2275  0D91  00D4               	movwf	temp_objeto@temp
  2276                           
  2277                           ;Temperatura_I2C.c: 36:     return(temp);
  2278  0D92  0855               	movf	temp_objeto@temp+1,w
  2279  0D93  00CE               	movwf	?_temp_objeto+1
  2280  0D94  0854               	movf	temp_objeto@temp,w
  2281  0D95  00CD               	movwf	?_temp_objeto
  2282  0D96  0008               	return
  2283  0D97                     __end_of_temp_objeto:	
  2284                           
  2285                           	psect	text4
  2286  0C2B                     __ptext4:	
  2287 ;; *************** function _temp_ambiente *****************
  2288 ;; Defined at:
  2289 ;;		line 39 in file "Temperatura_I2C.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;		None
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;  temp_MSB        2   55[BANK0 ] unsigned int 
  2294 ;;  temp            2   52[BANK0 ] unsigned int 
  2295 ;;  temp_LSB        1   54[BANK0 ] unsigned char 
  2296 ;;  PEC             1    0        unsigned char 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  2   45[BANK0 ] int 
  2299 ;; Registers used:
  2300 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2306 ;;      Params:         0       2       0       0       0
  2307 ;;      Locals:         0       6       0       0       0
  2308 ;;      Temps:          0       4       0       0       0
  2309 ;;      Totals:         0      12       0       0       0
  2310 ;;Total ram usage:       12 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    3
  2313 ;; This function calls:
  2314 ;;		_I2C_Master_Read
  2315 ;;		_I2C_Master_Start
  2316 ;;		_I2C_Master_Stop
  2317 ;;		_I2C_Master_Write
  2318 ;;		___fladd
  2319 ;;		___fltol
  2320 ;;		___lwdiv
  2321 ;;		___xxtofl
  2322 ;; This function is called by:
  2323 ;;		_main
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           
  2328                           ;psect for function _temp_ambiente
  2329  0C2B                     _temp_ambiente:	
  2330                           
  2331                           ;Temperatura_I2C.c: 40:     uint16_t temp_MSB;;Temperatura_I2C.c: 41:     uint8_t temp_L
      +                          SB;;Temperatura_I2C.c: 42:     uint8_t PEC;;Temperatura_I2C.c: 43:     uint16_t temp;;Te
      +                          mperatura_I2C.c: 44:     I2C_Master_Start();
  2332                           
  2333                           ;incstack = 0
  2334                           ; Regs used in _temp_ambiente: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2335  0C2B  160A  118A  22A9  120A  158A  	fcall	_I2C_Master_Start
  2336                           
  2337                           ;Temperatura_I2C.c: 45:     I2C_Master_Write(0x00);
  2338  0C30  3000               	movlw	0
  2339  0C31  00F2               	movwf	I2C_Master_Write@d
  2340  0C32  00F3               	movwf	I2C_Master_Write@d+1
  2341  0C33  160A  118A  22B7  120A  158A  	fcall	_I2C_Master_Write
  2342                           
  2343                           ;Temperatura_I2C.c: 46:     I2C_Master_Write(0x06);
  2344  0C38  3006               	movlw	6
  2345  0C39  00F2               	movwf	I2C_Master_Write@d
  2346  0C3A  3000               	movlw	0
  2347  0C3B  00F3               	movwf	I2C_Master_Write@d+1
  2348  0C3C  160A  118A  22B7  120A  158A  	fcall	_I2C_Master_Write
  2349                           
  2350                           ;Temperatura_I2C.c: 49:     I2C_Master_Start();
  2351  0C41  160A  118A  22A9  120A  158A  	fcall	_I2C_Master_Start
  2352                           
  2353                           ;Temperatura_I2C.c: 50:     I2C_Master_Write(0x01);
  2354  0C46  3001               	movlw	1
  2355  0C47  00F2               	movwf	I2C_Master_Write@d
  2356  0C48  3000               	movlw	0
  2357  0C49  00F3               	movwf	I2C_Master_Write@d+1
  2358  0C4A  160A  118A  22B7  120A  158A  	fcall	_I2C_Master_Write
  2359                           
  2360                           ;Temperatura_I2C.c: 51:     temp_LSB = I2C_Master_Read(0);
  2361  0C4F  3000               	movlw	0
  2362  0C50  00F2               	movwf	I2C_Master_Read@a
  2363  0C51  00F3               	movwf	I2C_Master_Read@a+1
  2364  0C52  160A  118A  23C5  120A  158A  	fcall	_I2C_Master_Read
  2365  0C57  0872               	movf	?_I2C_Master_Read,w
  2366  0C58  1283               	bcf	3,5	;RP0=0, select bank0
  2367  0C59  1303               	bcf	3,6	;RP1=0, select bank0
  2368  0C5A  00CF               	movwf	??_temp_ambiente
  2369  0C5B  084F               	movf	??_temp_ambiente,w
  2370  0C5C  00D6               	movwf	temp_ambiente@temp_LSB
  2371                           
  2372                           ;Temperatura_I2C.c: 52:     temp_MSB = I2C_Master_Read(0);
  2373  0C5D  3000               	movlw	0
  2374  0C5E  00F2               	movwf	I2C_Master_Read@a
  2375  0C5F  00F3               	movwf	I2C_Master_Read@a+1
  2376  0C60  160A  118A  23C5  120A  158A  	fcall	_I2C_Master_Read
  2377  0C65  0873               	movf	?_I2C_Master_Read+1,w
  2378  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  2379  0C67  1303               	bcf	3,6	;RP1=0, select bank0
  2380  0C68  00D8               	movwf	temp_ambiente@temp_MSB+1
  2381  0C69  0872               	movf	?_I2C_Master_Read,w
  2382  0C6A  00D7               	movwf	temp_ambiente@temp_MSB
  2383  0C6B  3000               	movlw	0
  2384  0C6C  00F2               	movwf	I2C_Master_Read@a
  2385  0C6D  00F3               	movwf	I2C_Master_Read@a+1
  2386  0C6E  160A  118A  23C5  120A  158A  	fcall	_I2C_Master_Read
  2387                           
  2388                           ;Temperatura_I2C.c: 54:     I2C_Master_Stop();
  2389  0C73  160A  118A  22B0  120A  158A  	fcall	_I2C_Master_Stop
  2390                           
  2391                           ;Temperatura_I2C.c: 55:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2392  0C78  3041               	movlw	65
  2393  0C79  1283               	bcf	3,5	;RP0=0, select bank0
  2394  0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  2395  0C7B  00D0               	movwf	??_temp_ambiente+1
  2396  0C7C  30ED               	movlw	237
  2397  0C7D  00CF               	movwf	??_temp_ambiente
  2398  0C7E                     u3617:	
  2399  0C7E  0BCF               	decfsz	??_temp_ambiente,f
  2400  0C7F  2C7E               	goto	u3617
  2401  0C80  0BD0               	decfsz	??_temp_ambiente+1,f
  2402  0C81  2C7E               	goto	u3617
  2403  0C82  2C83               	nop2
  2404                           
  2405                           ;Temperatura_I2C.c: 57:     temp_MSB = temp_MSB <<8;
  2406  0C83  1283               	bcf	3,5	;RP0=0, select bank0
  2407  0C84  1303               	bcf	3,6	;RP1=0, select bank0
  2408  0C85  0857               	movf	temp_ambiente@temp_MSB,w
  2409  0C86  00D0               	movwf	??_temp_ambiente+1
  2410  0C87  01CF               	clrf	??_temp_ambiente
  2411  0C88  084F               	movf	??_temp_ambiente,w
  2412  0C89  00D7               	movwf	temp_ambiente@temp_MSB
  2413  0C8A  0850               	movf	??_temp_ambiente+1,w
  2414  0C8B  00D8               	movwf	temp_ambiente@temp_MSB+1
  2415                           
  2416                           ;Temperatura_I2C.c: 58:     temp = (((temp_MSB+temp_LSB)/50)-273.15);
  2417  0C8C  0856               	movf	temp_ambiente@temp_LSB,w
  2418  0C8D  0757               	addwf	temp_ambiente@temp_MSB,w
  2419  0C8E  00F4               	movwf	___lwdiv@dividend
  2420  0C8F  0858               	movf	temp_ambiente@temp_MSB+1,w
  2421  0C90  1803               	skipnc
  2422  0C91  0A58               	incf	temp_ambiente@temp_MSB+1,w
  2423  0C92  00F5               	movwf	___lwdiv@dividend+1
  2424  0C93  3032               	movlw	50
  2425  0C94  00F2               	movwf	___lwdiv@divisor
  2426  0C95  3000               	movlw	0
  2427  0C96  00F3               	movwf	___lwdiv@divisor+1
  2428  0C97  120A  118A  27C1  120A  158A  	fcall	___lwdiv
  2429  0C9C  0872               	movf	?___lwdiv,w
  2430  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2431  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2432  0C9F  00CF               	movwf	??_temp_ambiente
  2433  0CA0  0873               	movf	?___lwdiv+1,w
  2434  0CA1  00D0               	movwf	??_temp_ambiente+1
  2435  0CA2  01D1               	clrf	??_temp_ambiente+2
  2436  0CA3  01D2               	clrf	??_temp_ambiente+3
  2437  0CA4  0852               	movf	??_temp_ambiente+3,w
  2438  0CA5  00A3               	movwf	___xxtofl@val+3
  2439  0CA6  0851               	movf	??_temp_ambiente+2,w
  2440  0CA7  00A2               	movwf	___xxtofl@val+2
  2441  0CA8  0850               	movf	??_temp_ambiente+1,w
  2442  0CA9  00A1               	movwf	___xxtofl@val+1
  2443  0CAA  084F               	movf	??_temp_ambiente,w
  2444  0CAB  00A0               	movwf	___xxtofl@val
  2445  0CAC  3000               	movlw	0
  2446  0CAD  120A  158A  2189  120A  158A  	fcall	___xxtofl
  2447  0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  2448  0CB3  1303               	bcf	3,6	;RP1=0, select bank0
  2449  0CB4  0823               	movf	?___xxtofl+3,w
  2450  0CB5  00B5               	movwf	___fladd@a+3
  2451  0CB6  0822               	movf	?___xxtofl+2,w
  2452  0CB7  00B4               	movwf	___fladd@a+2
  2453  0CB8  0821               	movf	?___xxtofl+1,w
  2454  0CB9  00B3               	movwf	___fladd@a+1
  2455  0CBA  0820               	movf	?___xxtofl,w
  2456  0CBB  00B2               	movwf	___fladd@a
  2457  0CBC  30C3               	movlw	195
  2458  0CBD  00B1               	movwf	___fladd@b+3
  2459  0CBE  3088               	movlw	136
  2460  0CBF  00B0               	movwf	___fladd@b+2
  2461  0CC0  3093               	movlw	147
  2462  0CC1  00AF               	movwf	___fladd@b+1
  2463  0CC2  3033               	movlw	51
  2464  0CC3  00AE               	movwf	___fladd@b
  2465  0CC4  120A  118A  23C6  120A  158A  	fcall	___fladd
  2466  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  2467  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  2468  0CCB  0831               	movf	?___fladd+3,w
  2469  0CCC  00C5               	movwf	___fltol@f1+3
  2470  0CCD  0830               	movf	?___fladd+2,w
  2471  0CCE  00C4               	movwf	___fltol@f1+2
  2472  0CCF  082F               	movf	?___fladd+1,w
  2473  0CD0  00C3               	movwf	___fltol@f1+1
  2474  0CD1  082E               	movf	?___fladd,w
  2475  0CD2  00C2               	movwf	___fltol@f1
  2476  0CD3  160A  118A  261B   	fcall	___fltol
  2477  0CD6  1283               	bcf	3,5	;RP0=0, select bank0
  2478  0CD7  1303               	bcf	3,6	;RP1=0, select bank0
  2479  0CD8  0843               	movf	?___fltol+1,w
  2480  0CD9  00D5               	movwf	temp_ambiente@temp+1
  2481  0CDA  0842               	movf	?___fltol,w
  2482  0CDB  00D4               	movwf	temp_ambiente@temp
  2483                           
  2484                           ;Temperatura_I2C.c: 59:     return(temp);
  2485  0CDC  0855               	movf	temp_ambiente@temp+1,w
  2486  0CDD  00CE               	movwf	?_temp_ambiente+1
  2487  0CDE  0854               	movf	temp_ambiente@temp,w
  2488  0CDF  00CD               	movwf	?_temp_ambiente
  2489  0CE0  0008               	return
  2490  0CE1                     __end_of_temp_ambiente:	
  2491                           
  2492                           	psect	text5
  2493  0989                     __ptext5:	
  2494 ;; *************** function ___xxtofl *****************
  2495 ;; Defined at:
  2496 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  sign            1    wreg     unsigned char 
  2499 ;;  val             4    0[BANK0 ] long 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  sign            1    8[BANK0 ] unsigned char 
  2502 ;;  arg             4   10[BANK0 ] unsigned long 
  2503 ;;  exp             1    9[BANK0 ] unsigned char 
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  4    0[BANK0 ] unsigned char 
  2506 ;; Registers used:
  2507 ;;		wreg, status,2, status,0
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2513 ;;      Params:         0       4       0       0       0
  2514 ;;      Locals:         0       6       0       0       0
  2515 ;;      Temps:          0       4       0       0       0
  2516 ;;      Totals:         0      14       0       0       0
  2517 ;;Total ram usage:       14 bytes
  2518 ;; Hardware stack levels used:    1
  2519 ;; Hardware stack levels required when called:    1
  2520 ;; This function calls:
  2521 ;;		Nothing
  2522 ;; This function is called by:
  2523 ;;		_temp_objeto
  2524 ;;		_temp_ambiente
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           
  2529                           ;psect for function ___xxtofl
  2530  0989                     ___xxtofl:	
  2531                           
  2532                           ;incstack = 0
  2533                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2534                           ;___xxtofl@sign stored from wreg
  2535  0989  1283               	bcf	3,5	;RP0=0, select bank0
  2536  098A  1303               	bcf	3,6	;RP1=0, select bank0
  2537  098B  00A8               	movwf	___xxtofl@sign
  2538  098C  0828               	movf	___xxtofl@sign,w
  2539  098D  1D03               	btfss	3,2
  2540  098E  1FA3               	btfss	___xxtofl@val+3,7
  2541  098F  29A0               	goto	l3585
  2542  0990  0920               	comf	___xxtofl@val,w
  2543  0991  00AA               	movwf	___xxtofl@arg
  2544  0992  0921               	comf	___xxtofl@val+1,w
  2545  0993  00AB               	movwf	___xxtofl@arg+1
  2546  0994  0922               	comf	___xxtofl@val+2,w
  2547  0995  00AC               	movwf	___xxtofl@arg+2
  2548  0996  0923               	comf	___xxtofl@val+3,w
  2549  0997  00AD               	movwf	___xxtofl@arg+3
  2550  0998  0AAA               	incf	___xxtofl@arg,f
  2551  0999  1903               	skipnz
  2552  099A  0AAB               	incf	___xxtofl@arg+1,f
  2553  099B  1903               	skipnz
  2554  099C  0AAC               	incf	___xxtofl@arg+2,f
  2555  099D  1903               	skipnz
  2556  099E  0AAD               	incf	___xxtofl@arg+3,f
  2557  099F  29A8               	goto	l1006
  2558  09A0                     l3585:	
  2559  09A0  0823               	movf	___xxtofl@val+3,w
  2560  09A1  00AD               	movwf	___xxtofl@arg+3
  2561  09A2  0822               	movf	___xxtofl@val+2,w
  2562  09A3  00AC               	movwf	___xxtofl@arg+2
  2563  09A4  0821               	movf	___xxtofl@val+1,w
  2564  09A5  00AB               	movwf	___xxtofl@arg+1
  2565  09A6  0820               	movf	___xxtofl@val,w
  2566  09A7  00AA               	movwf	___xxtofl@arg
  2567  09A8                     l1006:	
  2568  09A8  0823               	movf	___xxtofl@val+3,w
  2569  09A9  0422               	iorwf	___xxtofl@val+2,w
  2570  09AA  0421               	iorwf	___xxtofl@val+1,w
  2571  09AB  0420               	iorwf	___xxtofl@val,w
  2572  09AC  1D03               	skipz
  2573  09AD  29B7               	goto	l3591
  2574  09AE  3000               	movlw	0
  2575  09AF  00A3               	movwf	?___xxtofl+3
  2576  09B0  3000               	movlw	0
  2577  09B1  00A2               	movwf	?___xxtofl+2
  2578  09B2  3000               	movlw	0
  2579  09B3  00A1               	movwf	?___xxtofl+1
  2580  09B4  3000               	movlw	0
  2581  09B5  00A0               	movwf	?___xxtofl
  2582  09B6  0008               	return
  2583  09B7                     l3591:	
  2584  09B7  3096               	movlw	150
  2585  09B8  00A4               	movwf	??___xxtofl
  2586  09B9  0824               	movf	??___xxtofl,w
  2587  09BA  00A9               	movwf	___xxtofl@exp
  2588  09BB                     l3595:	
  2589  09BB  30FE               	movlw	254
  2590  09BC  052D               	andwf	___xxtofl@arg+3,w
  2591  09BD  1903               	btfsc	3,2
  2592  09BE  29E8               	goto	l1012
  2593  09BF  3001               	movlw	1
  2594  09C0  00A4               	movwf	??___xxtofl
  2595  09C1  0824               	movf	??___xxtofl,w
  2596  09C2  07A9               	addwf	___xxtofl@exp,f
  2597  09C3  3001               	movlw	1
  2598  09C4                     u2635:	
  2599  09C4  1003               	clrc
  2600  09C5  0CAD               	rrf	___xxtofl@arg+3,f
  2601  09C6  0CAC               	rrf	___xxtofl@arg+2,f
  2602  09C7  0CAB               	rrf	___xxtofl@arg+1,f
  2603  09C8  0CAA               	rrf	___xxtofl@arg,f
  2604  09C9  3EFF               	addlw	-1
  2605  09CA  1D03               	skipz
  2606  09CB  29C4               	goto	u2635
  2607  09CC  29BB               	goto	l3595
  2608  09CD                     l3597:	
  2609  09CD  3001               	movlw	1
  2610  09CE  00A4               	movwf	??___xxtofl
  2611  09CF  0824               	movf	??___xxtofl,w
  2612  09D0  07A9               	addwf	___xxtofl@exp,f
  2613  09D1  3001               	movlw	1
  2614  09D2  07AA               	addwf	___xxtofl@arg,f
  2615  09D3  3000               	movlw	0
  2616  09D4  1803               	skipnc
  2617  09D5  3001               	movlw	1
  2618  09D6  07AB               	addwf	___xxtofl@arg+1,f
  2619  09D7  3000               	movlw	0
  2620  09D8  1803               	skipnc
  2621  09D9  3001               	movlw	1
  2622  09DA  07AC               	addwf	___xxtofl@arg+2,f
  2623  09DB  3000               	movlw	0
  2624  09DC  1803               	skipnc
  2625  09DD  3001               	movlw	1
  2626  09DE  07AD               	addwf	___xxtofl@arg+3,f
  2627  09DF  3001               	movlw	1
  2628  09E0                     u2655:	
  2629  09E0  1003               	clrc
  2630  09E1  0CAD               	rrf	___xxtofl@arg+3,f
  2631  09E2  0CAC               	rrf	___xxtofl@arg+2,f
  2632  09E3  0CAB               	rrf	___xxtofl@arg+1,f
  2633  09E4  0CAA               	rrf	___xxtofl@arg,f
  2634  09E5  3EFF               	addlw	-1
  2635  09E6  1D03               	skipz
  2636  09E7  29E0               	goto	u2655
  2637  09E8                     l1012:	
  2638  09E8  30FF               	movlw	255
  2639  09E9  052D               	andwf	___xxtofl@arg+3,w
  2640  09EA  1903               	btfsc	3,2
  2641  09EB  29FC               	goto	l3605
  2642  09EC  29CD               	goto	l3597
  2643  09ED                     l3607:	
  2644  09ED  3002               	movlw	2
  2645  09EE  0229               	subwf	___xxtofl@exp,w
  2646  09EF  1C03               	btfss	3,0
  2647  09F0  29FE               	goto	l1019
  2648  09F1  3001               	movlw	1
  2649  09F2  02A9               	subwf	___xxtofl@exp,f
  2650  09F3  3001               	movlw	1
  2651  09F4  00A4               	movwf	??___xxtofl
  2652  09F5                     u2675:	
  2653  09F5  1003               	clrc
  2654  09F6  0DAA               	rlf	___xxtofl@arg,f
  2655  09F7  0DAB               	rlf	___xxtofl@arg+1,f
  2656  09F8  0DAC               	rlf	___xxtofl@arg+2,f
  2657  09F9  0DAD               	rlf	___xxtofl@arg+3,f
  2658  09FA  0BA4               	decfsz	??___xxtofl,f
  2659  09FB  29F5               	goto	u2675
  2660  09FC                     l3605:	
  2661  09FC  1FAC               	btfss	___xxtofl@arg+2,7
  2662  09FD  29ED               	goto	l3607
  2663  09FE                     l1019:	
  2664  09FE  1829               	btfsc	___xxtofl@exp,0
  2665  09FF  2A08               	goto	l1020
  2666  0A00  30FF               	movlw	255
  2667  0A01  05AA               	andwf	___xxtofl@arg,f
  2668  0A02  30FF               	movlw	255
  2669  0A03  05AB               	andwf	___xxtofl@arg+1,f
  2670  0A04  307F               	movlw	127
  2671  0A05  05AC               	andwf	___xxtofl@arg+2,f
  2672  0A06  30FF               	movlw	255
  2673  0A07  05AD               	andwf	___xxtofl@arg+3,f
  2674  0A08                     l1020:	
  2675  0A08  1003               	clrc
  2676  0A09  0CA9               	rrf	___xxtofl@exp,f
  2677  0A0A  0829               	movf	___xxtofl@exp,w
  2678  0A0B  00A4               	movwf	??___xxtofl
  2679  0A0C  01A5               	clrf	??___xxtofl+1
  2680  0A0D  01A6               	clrf	??___xxtofl+2
  2681  0A0E  01A7               	clrf	??___xxtofl+3
  2682  0A0F  3018               	movlw	24
  2683  0A10                     u2715:	
  2684  0A10  1003               	clrc
  2685  0A11  0DA4               	rlf	??___xxtofl,f
  2686  0A12  0DA5               	rlf	??___xxtofl+1,f
  2687  0A13  0DA6               	rlf	??___xxtofl+2,f
  2688  0A14  0DA7               	rlf	??___xxtofl+3,f
  2689  0A15  3EFF               	addlw	-1
  2690  0A16  1D03               	skipz
  2691  0A17  2A10               	goto	u2715
  2692  0A18  0824               	movf	??___xxtofl,w
  2693  0A19  04AA               	iorwf	___xxtofl@arg,f
  2694  0A1A  0825               	movf	??___xxtofl+1,w
  2695  0A1B  04AB               	iorwf	___xxtofl@arg+1,f
  2696  0A1C  0826               	movf	??___xxtofl+2,w
  2697  0A1D  04AC               	iorwf	___xxtofl@arg+2,f
  2698  0A1E  0827               	movf	??___xxtofl+3,w
  2699  0A1F  04AD               	iorwf	___xxtofl@arg+3,f
  2700  0A20  0828               	movf	___xxtofl@sign,w
  2701  0A21  1D03               	btfss	3,2
  2702  0A22  1FA3               	btfss	___xxtofl@val+3,7
  2703  0A23  2A25               	goto	l3619
  2704  0A24  17AD               	bsf	___xxtofl@arg+3,7
  2705  0A25                     l3619:	
  2706  0A25  082D               	movf	___xxtofl@arg+3,w
  2707  0A26  00A3               	movwf	?___xxtofl+3
  2708  0A27  082C               	movf	___xxtofl@arg+2,w
  2709  0A28  00A2               	movwf	?___xxtofl+2
  2710  0A29  082B               	movf	___xxtofl@arg+1,w
  2711  0A2A  00A1               	movwf	?___xxtofl+1
  2712  0A2B  082A               	movf	___xxtofl@arg,w
  2713  0A2C  00A0               	movwf	?___xxtofl
  2714  0A2D  0008               	return
  2715  0A2E                     __end_of___xxtofl:	
  2716                           
  2717                           	psect	text6
  2718  07C1                     __ptext6:	
  2719 ;; *************** function ___lwdiv *****************
  2720 ;; Defined at:
  2721 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  divisor         2    2[COMMON] unsigned int 
  2724 ;;  dividend        2    4[COMMON] unsigned int 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  quotient        2    7[COMMON] unsigned int 
  2727 ;;  counter         1    9[COMMON] unsigned char 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  2    2[COMMON] unsigned int 
  2730 ;; Registers used:
  2731 ;;		wreg, status,2, status,0
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2737 ;;      Params:         4       0       0       0       0
  2738 ;;      Locals:         3       0       0       0       0
  2739 ;;      Temps:          1       0       0       0       0
  2740 ;;      Totals:         8       0       0       0       0
  2741 ;;Total ram usage:        8 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    1
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_temp_objeto
  2748 ;;		_temp_ambiente
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           
  2753                           ;psect for function ___lwdiv
  2754  07C1                     ___lwdiv:	
  2755                           
  2756                           ;incstack = 0
  2757                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2758  07C1  01F7               	clrf	___lwdiv@quotient
  2759  07C2  01F8               	clrf	___lwdiv@quotient+1
  2760  07C3  0872               	movf	___lwdiv@divisor,w
  2761  07C4  0473               	iorwf	___lwdiv@divisor+1,w
  2762  07C5  1903               	btfsc	3,2
  2763  07C6  2FF8               	goto	l3381
  2764  07C7  01F9               	clrf	___lwdiv@counter
  2765  07C8  0AF9               	incf	___lwdiv@counter,f
  2766  07C9                     l3369:	
  2767  07C9  1BF3               	btfsc	___lwdiv@divisor+1,7
  2768  07CA  2FD7               	goto	l3371
  2769  07CB  3001               	movlw	1
  2770  07CC                     u2085:	
  2771  07CC  1003               	clrc
  2772  07CD  0DF2               	rlf	___lwdiv@divisor,f
  2773  07CE  0DF3               	rlf	___lwdiv@divisor+1,f
  2774  07CF  3EFF               	addlw	-1
  2775  07D0  1D03               	skipz
  2776  07D1  2FCC               	goto	u2085
  2777  07D2  3001               	movlw	1
  2778  07D3  00F6               	movwf	??___lwdiv
  2779  07D4  0876               	movf	??___lwdiv,w
  2780  07D5  07F9               	addwf	___lwdiv@counter,f
  2781  07D6  2FC9               	goto	l3369
  2782  07D7                     l3371:	
  2783  07D7  3001               	movlw	1
  2784  07D8                     u2105:	
  2785  07D8  1003               	clrc
  2786  07D9  0DF7               	rlf	___lwdiv@quotient,f
  2787  07DA  0DF8               	rlf	___lwdiv@quotient+1,f
  2788  07DB  3EFF               	addlw	-1
  2789  07DC  1D03               	skipz
  2790  07DD  2FD8               	goto	u2105
  2791  07DE  0873               	movf	___lwdiv@divisor+1,w
  2792  07DF  0275               	subwf	___lwdiv@dividend+1,w
  2793  07E0  1D03               	skipz
  2794  07E1  2FE4               	goto	u2115
  2795  07E2  0872               	movf	___lwdiv@divisor,w
  2796  07E3  0274               	subwf	___lwdiv@dividend,w
  2797  07E4                     u2115:	
  2798  07E4  1C03               	skipc
  2799  07E5  2FED               	goto	l3377
  2800  07E6  0872               	movf	___lwdiv@divisor,w
  2801  07E7  02F4               	subwf	___lwdiv@dividend,f
  2802  07E8  0873               	movf	___lwdiv@divisor+1,w
  2803  07E9  1C03               	skipc
  2804  07EA  03F5               	decf	___lwdiv@dividend+1,f
  2805  07EB  02F5               	subwf	___lwdiv@dividend+1,f
  2806  07EC  1477               	bsf	___lwdiv@quotient,0
  2807  07ED                     l3377:	
  2808  07ED  3001               	movlw	1
  2809  07EE                     u2125:	
  2810  07EE  1003               	clrc
  2811  07EF  0CF3               	rrf	___lwdiv@divisor+1,f
  2812  07F0  0CF2               	rrf	___lwdiv@divisor,f
  2813  07F1  3EFF               	addlw	-1
  2814  07F2  1D03               	skipz
  2815  07F3  2FEE               	goto	u2125
  2816  07F4  3001               	movlw	1
  2817  07F5  02F9               	subwf	___lwdiv@counter,f
  2818  07F6  1D03               	btfss	3,2
  2819  07F7  2FD7               	goto	l3371
  2820  07F8                     l3381:	
  2821  07F8  0878               	movf	___lwdiv@quotient+1,w
  2822  07F9  00F3               	movwf	?___lwdiv+1
  2823  07FA  0877               	movf	___lwdiv@quotient,w
  2824  07FB  00F2               	movwf	?___lwdiv
  2825  07FC  0008               	return
  2826  07FD                     __end_of___lwdiv:	
  2827                           
  2828                           	psect	text7
  2829  161B                     __ptext7:	
  2830 ;; *************** function ___fltol *****************
  2831 ;; Defined at:
  2832 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;  f1              4   34[BANK0 ] unsigned int 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  exp1            1   44[BANK0 ] unsigned char 
  2837 ;;  sign1           1   43[BANK0 ] unsigned char 
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  4   34[BANK0 ] long 
  2840 ;; Registers used:
  2841 ;;		wreg, status,2, status,0
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2847 ;;      Params:         0       4       0       0       0
  2848 ;;      Locals:         0       2       0       0       0
  2849 ;;      Temps:          0       5       0       0       0
  2850 ;;      Totals:         0      11       0       0       0
  2851 ;;Total ram usage:       11 bytes
  2852 ;; Hardware stack levels used:    1
  2853 ;; Hardware stack levels required when called:    1
  2854 ;; This function calls:
  2855 ;;		Nothing
  2856 ;; This function is called by:
  2857 ;;		_temp_objeto
  2858 ;;		_temp_ambiente
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           
  2863                           ;psect for function ___fltol
  2864  161B                     ___fltol:	
  2865                           
  2866                           ;incstack = 0
  2867                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2868  161B  1003               	clrc
  2869  161C  1283               	bcf	3,5	;RP0=0, select bank0
  2870  161D  1303               	bcf	3,6	;RP1=0, select bank0
  2871  161E  0D44               	rlf	___fltol@f1+2,w
  2872  161F  0D45               	rlf	___fltol@f1+3,w
  2873  1620  00C6               	movwf	??___fltol
  2874  1621  0846               	movf	??___fltol,w
  2875  1622  00CC               	movwf	___fltol@exp1
  2876  1623  084C               	movf	___fltol@exp1,w
  2877  1624  1D03               	btfss	3,2
  2878  1625  2E2F               	goto	l4799
  2879  1626                     l4795:	
  2880  1626  3000               	movlw	0
  2881  1627  00C5               	movwf	?___fltol+3
  2882  1628  3000               	movlw	0
  2883  1629  00C4               	movwf	?___fltol+2
  2884  162A  3000               	movlw	0
  2885  162B  00C3               	movwf	?___fltol+1
  2886  162C  3000               	movlw	0
  2887  162D  00C2               	movwf	?___fltol
  2888  162E  0008               	return
  2889  162F                     l4799:	
  2890  162F  0842               	movf	___fltol@f1,w
  2891  1630  00C6               	movwf	??___fltol
  2892  1631  0843               	movf	___fltol@f1+1,w
  2893  1632  00C7               	movwf	??___fltol+1
  2894  1633  0844               	movf	___fltol@f1+2,w
  2895  1634  00C8               	movwf	??___fltol+2
  2896  1635  0845               	movf	___fltol@f1+3,w
  2897  1636  00C9               	movwf	??___fltol+3
  2898  1637  301F               	movlw	31
  2899  1638                     u3345:	
  2900  1638  1003               	clrc
  2901  1639  0CC9               	rrf	??___fltol+3,f
  2902  163A  0CC8               	rrf	??___fltol+2,f
  2903  163B  0CC7               	rrf	??___fltol+1,f
  2904  163C  0CC6               	rrf	??___fltol,f
  2905  163D  3EFF               	addlw	-1
  2906  163E  1D03               	skipz
  2907  163F  2E38               	goto	u3345
  2908  1640  0846               	movf	??___fltol,w
  2909  1641  00CA               	movwf	??___fltol+4
  2910  1642  084A               	movf	??___fltol+4,w
  2911  1643  00CB               	movwf	___fltol@sign1
  2912  1644  17C4               	bsf	___fltol@f1+2,7
  2913  1645  30FF               	movlw	255
  2914  1646  05C2               	andwf	___fltol@f1,f
  2915  1647  30FF               	movlw	255
  2916  1648  05C3               	andwf	___fltol@f1+1,f
  2917  1649  30FF               	movlw	255
  2918  164A  05C4               	andwf	___fltol@f1+2,f
  2919  164B  3000               	movlw	0
  2920  164C  05C5               	andwf	___fltol@f1+3,f
  2921  164D  3096               	movlw	150
  2922  164E  02CC               	subwf	___fltol@exp1,f
  2923  164F  1FCC               	btfss	___fltol@exp1,7
  2924  1650  2E66               	goto	l4817
  2925  1651  084C               	movf	___fltol@exp1,w
  2926  1652  3A80               	xorlw	128
  2927  1653  3E97               	addlw	151
  2928  1654  1C03               	btfss	3,0
  2929  1655  2E26               	goto	l4795
  2930  1656                     l4815:	
  2931  1656  3001               	movlw	1
  2932  1657                     u3375:	
  2933  1657  1003               	clrc
  2934  1658  0CC5               	rrf	___fltol@f1+3,f
  2935  1659  0CC4               	rrf	___fltol@f1+2,f
  2936  165A  0CC3               	rrf	___fltol@f1+1,f
  2937  165B  0CC2               	rrf	___fltol@f1,f
  2938  165C  3EFF               	addlw	-1
  2939  165D  1D03               	skipz
  2940  165E  2E57               	goto	u3375
  2941  165F  3001               	movlw	1
  2942  1660  00C6               	movwf	??___fltol
  2943  1661  0846               	movf	??___fltol,w
  2944  1662  07CC               	addwf	___fltol@exp1,f
  2945  1663  1903               	btfsc	3,2
  2946  1664  2E79               	goto	l4825
  2947  1665  2E56               	goto	l4815
  2948  1666                     l4817:	
  2949  1666  3020               	movlw	32
  2950  1667  024C               	subwf	___fltol@exp1,w
  2951  1668  1803               	btfsc	3,0
  2952  1669  2E26               	goto	l4795
  2953  166A                     l772:	
  2954  166A  084C               	movf	___fltol@exp1,w
  2955  166B  1903               	btfsc	3,2
  2956  166C  2E79               	goto	l4825
  2957  166D  3001               	movlw	1
  2958  166E  00C6               	movwf	??___fltol
  2959  166F                     u3405:	
  2960  166F  1003               	clrc
  2961  1670  0DC2               	rlf	___fltol@f1,f
  2962  1671  0DC3               	rlf	___fltol@f1+1,f
  2963  1672  0DC4               	rlf	___fltol@f1+2,f
  2964  1673  0DC5               	rlf	___fltol@f1+3,f
  2965  1674  0BC6               	decfsz	??___fltol,f
  2966  1675  2E6F               	goto	u3405
  2967  1676  3001               	movlw	1
  2968  1677  02CC               	subwf	___fltol@exp1,f
  2969  1678  2E6A               	goto	l772
  2970  1679                     l4825:	
  2971  1679  084B               	movf	___fltol@sign1,w
  2972  167A  1903               	btfsc	3,2
  2973  167B  0008               	return
  2974  167C  09C2               	comf	___fltol@f1,f
  2975  167D  09C3               	comf	___fltol@f1+1,f
  2976  167E  09C4               	comf	___fltol@f1+2,f
  2977  167F  09C5               	comf	___fltol@f1+3,f
  2978  1680  0AC2               	incf	___fltol@f1,f
  2979  1681  1903               	skipnz
  2980  1682  0AC3               	incf	___fltol@f1+1,f
  2981  1683  1903               	skipnz
  2982  1684  0AC4               	incf	___fltol@f1+2,f
  2983  1685  1903               	skipnz
  2984  1686  0AC5               	incf	___fltol@f1+3,f
  2985  1687  0008               	return
  2986  1688                     __end_of___fltol:	
  2987                           
  2988                           	psect	text8
  2989  03C6                     __ptext8:	
  2990 ;; *************** function ___fladd *****************
  2991 ;; Defined at:
  2992 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;  b               4   14[BANK0 ] long 
  2995 ;;  a               4   18[BANK0 ] long 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;  grs             1   33[BANK0 ] unsigned char 
  2998 ;;  bexp            1   32[BANK0 ] unsigned char 
  2999 ;;  aexp            1   31[BANK0 ] unsigned char 
  3000 ;;  signs           1   30[BANK0 ] unsigned char 
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  4   14[BANK0 ] unsigned char 
  3003 ;; Registers used:
  3004 ;;		wreg, status,2, status,0, btemp+1
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3010 ;;      Params:         0       8       0       0       0
  3011 ;;      Locals:         0       4       0       0       0
  3012 ;;      Temps:          0       8       0       0       0
  3013 ;;      Totals:         0      20       0       0       0
  3014 ;;Total ram usage:       20 bytes
  3015 ;; Hardware stack levels used:    1
  3016 ;; Hardware stack levels required when called:    1
  3017 ;; This function calls:
  3018 ;;		Nothing
  3019 ;; This function is called by:
  3020 ;;		_temp_objeto
  3021 ;;		_temp_ambiente
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           
  3026                           ;psect for function ___fladd
  3027  03C6                     ___fladd:	
  3028                           
  3029                           ;incstack = 0
  3030                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3031  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  3032  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  3033  03C8  0831               	movf	___fladd@b+3,w
  3034  03C9  3980               	andlw	128
  3035  03CA  00B6               	movwf	??___fladd
  3036  03CB  0836               	movf	??___fladd,w
  3037  03CC  00BE               	movwf	___fladd@signs
  3038  03CD  0831               	movf	___fladd@b+3,w
  3039  03CE  00B6               	movwf	??___fladd
  3040  03CF  0736               	addwf	??___fladd,w
  3041  03D0  00B7               	movwf	??___fladd+1
  3042  03D1  0837               	movf	??___fladd+1,w
  3043  03D2  00C0               	movwf	___fladd@bexp
  3044  03D3  1BB0               	btfsc	___fladd@b+2,7
  3045  03D4  1440               	bsf	___fladd@bexp,0
  3046  03D5  0840               	movf	___fladd@bexp,w
  3047  03D6  1903               	btfsc	3,2
  3048  03D7  2BE6               	goto	l3403
  3049  03D8  0A40               	incf	___fladd@bexp,w
  3050  03D9  1D03               	btfss	3,2
  3051  03DA  2BE3               	goto	l3399
  3052  03DB  3000               	movlw	0
  3053  03DC  00B1               	movwf	___fladd@b+3
  3054  03DD  3000               	movlw	0
  3055  03DE  00B0               	movwf	___fladd@b+2
  3056  03DF  3000               	movlw	0
  3057  03E0  00AF               	movwf	___fladd@b+1
  3058  03E1  3000               	movlw	0
  3059  03E2  00AE               	movwf	___fladd@b
  3060  03E3                     l3399:	
  3061  03E3  17B0               	bsf	___fladd@b+2,7
  3062  03E4  01B1               	clrf	___fladd@b+3
  3063  03E5  2BEE               	goto	l3405
  3064  03E6                     l3403:	
  3065  03E6  3000               	movlw	0
  3066  03E7  00B1               	movwf	___fladd@b+3
  3067  03E8  3000               	movlw	0
  3068  03E9  00B0               	movwf	___fladd@b+2
  3069  03EA  3000               	movlw	0
  3070  03EB  00AF               	movwf	___fladd@b+1
  3071  03EC  3000               	movlw	0
  3072  03ED  00AE               	movwf	___fladd@b
  3073  03EE                     l3405:	
  3074  03EE  0835               	movf	___fladd@a+3,w
  3075  03EF  3980               	andlw	128
  3076  03F0  00B6               	movwf	??___fladd
  3077  03F1  0836               	movf	??___fladd,w
  3078  03F2  00BF               	movwf	___fladd@aexp
  3079  03F3  083F               	movf	___fladd@aexp,w
  3080  03F4  063E               	xorwf	___fladd@signs,w
  3081  03F5  1D03               	btfss	3,2
  3082  03F6  173E               	bsf	___fladd@signs,6
  3083  03F7  0835               	movf	___fladd@a+3,w
  3084  03F8  00B6               	movwf	??___fladd
  3085  03F9  0736               	addwf	??___fladd,w
  3086  03FA  00B7               	movwf	??___fladd+1
  3087  03FB  0837               	movf	??___fladd+1,w
  3088  03FC  00BF               	movwf	___fladd@aexp
  3089  03FD  1BB4               	btfsc	___fladd@a+2,7
  3090  03FE  143F               	bsf	___fladd@aexp,0
  3091  03FF  083F               	movf	___fladd@aexp,w
  3092  0400  1903               	btfsc	3,2
  3093  0401  2C10               	goto	l3427
  3094  0402  0A3F               	incf	___fladd@aexp,w
  3095  0403  1D03               	btfss	3,2
  3096  0404  2C0D               	goto	l3423
  3097  0405  3000               	movlw	0
  3098  0406  00B5               	movwf	___fladd@a+3
  3099  0407  3000               	movlw	0
  3100  0408  00B4               	movwf	___fladd@a+2
  3101  0409  3000               	movlw	0
  3102  040A  00B3               	movwf	___fladd@a+1
  3103  040B  3000               	movlw	0
  3104  040C  00B2               	movwf	___fladd@a
  3105  040D                     l3423:	
  3106  040D  17B4               	bsf	___fladd@a+2,7
  3107  040E  01B5               	clrf	___fladd@a+3
  3108  040F  2C18               	goto	l872
  3109  0410                     l3427:	
  3110  0410  3000               	movlw	0
  3111  0411  00B5               	movwf	___fladd@a+3
  3112  0412  3000               	movlw	0
  3113  0413  00B4               	movwf	___fladd@a+2
  3114  0414  3000               	movlw	0
  3115  0415  00B3               	movwf	___fladd@a+1
  3116  0416  3000               	movlw	0
  3117  0417  00B2               	movwf	___fladd@a
  3118  0418                     l872:	
  3119  0418  0840               	movf	___fladd@bexp,w
  3120  0419  023F               	subwf	___fladd@aexp,w
  3121  041A  1803               	skipnc
  3122  041B  2C5E               	goto	l3463
  3123  041C  1F3E               	btfss	___fladd@signs,6
  3124  041D  2C22               	goto	l3433
  3125  041E  3080               	movlw	128
  3126  041F  00B6               	movwf	??___fladd
  3127  0420  0836               	movf	??___fladd,w
  3128  0421  06BE               	xorwf	___fladd@signs,f
  3129  0422                     l3433:	
  3130  0422  0840               	movf	___fladd@bexp,w
  3131  0423  00B6               	movwf	??___fladd
  3132  0424  0836               	movf	??___fladd,w
  3133  0425  00C1               	movwf	___fladd@grs
  3134  0426  083F               	movf	___fladd@aexp,w
  3135  0427  00B6               	movwf	??___fladd
  3136  0428  0836               	movf	??___fladd,w
  3137  0429  00C0               	movwf	___fladd@bexp
  3138  042A  0841               	movf	___fladd@grs,w
  3139  042B  00B6               	movwf	??___fladd
  3140  042C  0836               	movf	??___fladd,w
  3141  042D  00BF               	movwf	___fladd@aexp
  3142  042E  082E               	movf	___fladd@b,w
  3143  042F  00B6               	movwf	??___fladd
  3144  0430  0836               	movf	??___fladd,w
  3145  0431  00C1               	movwf	___fladd@grs
  3146  0432  0832               	movf	___fladd@a,w
  3147  0433  00B6               	movwf	??___fladd
  3148  0434  0836               	movf	??___fladd,w
  3149  0435  00AE               	movwf	___fladd@b
  3150  0436  0841               	movf	___fladd@grs,w
  3151  0437  00B6               	movwf	??___fladd
  3152  0438  0836               	movf	??___fladd,w
  3153  0439  00B2               	movwf	___fladd@a
  3154  043A  082F               	movf	___fladd@b+1,w
  3155  043B  00B6               	movwf	??___fladd
  3156  043C  0836               	movf	??___fladd,w
  3157  043D  00C1               	movwf	___fladd@grs
  3158  043E  0833               	movf	___fladd@a+1,w
  3159  043F  00B6               	movwf	??___fladd
  3160  0440  0836               	movf	??___fladd,w
  3161  0441  00AF               	movwf	___fladd@b+1
  3162  0442  0841               	movf	___fladd@grs,w
  3163  0443  00B6               	movwf	??___fladd
  3164  0444  0836               	movf	??___fladd,w
  3165  0445  00B3               	movwf	___fladd@a+1
  3166  0446  0830               	movf	___fladd@b+2,w
  3167  0447  00B6               	movwf	??___fladd
  3168  0448  0836               	movf	??___fladd,w
  3169  0449  00C1               	movwf	___fladd@grs
  3170  044A  0834               	movf	___fladd@a+2,w
  3171  044B  00B6               	movwf	??___fladd
  3172  044C  0836               	movf	??___fladd,w
  3173  044D  00B0               	movwf	___fladd@b+2
  3174  044E  0841               	movf	___fladd@grs,w
  3175  044F  00B6               	movwf	??___fladd
  3176  0450  0836               	movf	??___fladd,w
  3177  0451  00B4               	movwf	___fladd@a+2
  3178  0452  0831               	movf	___fladd@b+3,w
  3179  0453  00B6               	movwf	??___fladd
  3180  0454  0836               	movf	??___fladd,w
  3181  0455  00C1               	movwf	___fladd@grs
  3182  0456  0835               	movf	___fladd@a+3,w
  3183  0457  00B6               	movwf	??___fladd
  3184  0458  0836               	movf	??___fladd,w
  3185  0459  00B1               	movwf	___fladd@b+3
  3186  045A  0841               	movf	___fladd@grs,w
  3187  045B  00B6               	movwf	??___fladd
  3188  045C  0836               	movf	??___fladd,w
  3189  045D  00B5               	movwf	___fladd@a+3
  3190  045E                     l3463:	
  3191  045E  01C1               	clrf	___fladd@grs
  3192  045F  083F               	movf	___fladd@aexp,w
  3193  0460  00B6               	movwf	??___fladd
  3194  0461  01B7               	clrf	??___fladd+1
  3195  0462  0837               	movf	??___fladd+1,w
  3196  0463  00B9               	movwf	??___fladd+3
  3197  0464  0840               	movf	___fladd@bexp,w
  3198  0465  0236               	subwf	??___fladd,w
  3199  0466  00B8               	movwf	??___fladd+2
  3200  0467  1C03               	skipc
  3201  0468  03B9               	decf	??___fladd+3,f
  3202  0469  0839               	movf	??___fladd+3,w
  3203  046A  3A80               	xorlw	128
  3204  046B  00FF               	movwf	127
  3205  046C  3080               	movlw	128
  3206  046D  027F               	subwf	127,w
  3207  046E  1D03               	skipz
  3208  046F  2C72               	goto	u2235
  3209  0470  301A               	movlw	26
  3210  0471  0238               	subwf	??___fladd+2,w
  3211  0472                     u2235:	
  3212  0472  1C03               	skipc
  3213  0473  2CAB               	goto	l3481
  3214  0474  1283               	bcf	3,5	;RP0=0, select bank0
  3215  0475  1303               	bcf	3,6	;RP1=0, select bank0
  3216  0476  0831               	movf	___fladd@b+3,w
  3217  0477  0430               	iorwf	___fladd@b+2,w
  3218  0478  042F               	iorwf	___fladd@b+1,w
  3219  0479  042E               	iorwf	___fladd@b,w
  3220  047A  1903               	btfsc	3,2
  3221  047B  2C7E               	goto	u2240
  3222  047C  3001               	movlw	1
  3223  047D  2C7F               	goto	u2250
  3224  047E                     u2240:	
  3225  047E  3000               	movlw	0
  3226  047F                     u2250:	
  3227  047F  00B6               	movwf	??___fladd
  3228  0480  0836               	movf	??___fladd,w
  3229  0481  00C1               	movwf	___fladd@grs
  3230  0482  3000               	movlw	0
  3231  0483  00B1               	movwf	___fladd@b+3
  3232  0484  3000               	movlw	0
  3233  0485  00B0               	movwf	___fladd@b+2
  3234  0486  3000               	movlw	0
  3235  0487  00AF               	movwf	___fladd@b+1
  3236  0488  3000               	movlw	0
  3237  0489  00AE               	movwf	___fladd@b
  3238  048A  083F               	movf	___fladd@aexp,w
  3239  048B  00B6               	movwf	??___fladd
  3240  048C  0836               	movf	??___fladd,w
  3241  048D  00C0               	movwf	___fladd@bexp
  3242  048E  2CB1               	goto	l876
  3243  048F                     l878:	
  3244  048F  1C41               	btfss	___fladd@grs,0
  3245  0490  2C9A               	goto	l3471
  3246  0491  0841               	movf	___fladd@grs,w
  3247  0492  00B6               	movwf	??___fladd
  3248  0493  1003               	clrc
  3249  0494  0C36               	rrf	??___fladd,w
  3250  0495  3801               	iorlw	1
  3251  0496  00B7               	movwf	??___fladd+1
  3252  0497  0837               	movf	??___fladd+1,w
  3253  0498  00C1               	movwf	___fladd@grs
  3254  0499  2C9C               	goto	l3473
  3255  049A                     l3471:	
  3256  049A  1003               	clrc
  3257  049B  0CC1               	rrf	___fladd@grs,f
  3258  049C                     l3473:	
  3259  049C  182E               	btfsc	___fladd@b,0
  3260  049D  17C1               	bsf	___fladd@grs,7
  3261  049E  3001               	movlw	1
  3262  049F  00B6               	movwf	??___fladd
  3263  04A0                     u2285:	
  3264  04A0  0D31               	rlf	___fladd@b+3,w
  3265  04A1  0CB1               	rrf	___fladd@b+3,f
  3266  04A2  0CB0               	rrf	___fladd@b+2,f
  3267  04A3  0CAF               	rrf	___fladd@b+1,f
  3268  04A4  0CAE               	rrf	___fladd@b,f
  3269  04A5  0BB6               	decfsz	??___fladd& (0+127),f
  3270  04A6  2CA0               	goto	u2285
  3271  04A7  3001               	movlw	1
  3272  04A8  00B6               	movwf	??___fladd
  3273  04A9  0836               	movf	??___fladd,w
  3274  04AA  07C0               	addwf	___fladd@bexp,f
  3275  04AB                     l3481:	
  3276  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  3277  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  3278  04AD  083F               	movf	___fladd@aexp,w
  3279  04AE  0240               	subwf	___fladd@bexp,w
  3280  04AF  1C03               	skipc
  3281  04B0  2C8F               	goto	l878
  3282  04B1                     l876:	
  3283  04B1  1B3E               	btfsc	___fladd@signs,6
  3284  04B2  2CF2               	goto	l3507
  3285  04B3  0840               	movf	___fladd@bexp,w
  3286  04B4  1D03               	btfss	3,2
  3287  04B5  2CBF               	goto	l3489
  3288  04B6  3000               	movlw	0
  3289  04B7  00B1               	movwf	?___fladd+3
  3290  04B8  3000               	movlw	0
  3291  04B9  00B0               	movwf	?___fladd+2
  3292  04BA  3000               	movlw	0
  3293  04BB  00AF               	movwf	?___fladd+1
  3294  04BC  3000               	movlw	0
  3295  04BD  00AE               	movwf	?___fladd
  3296  04BE  0008               	return
  3297  04BF                     l3489:	
  3298  04BF  0832               	movf	___fladd@a,w
  3299  04C0  07AE               	addwf	___fladd@b,f
  3300  04C1  0833               	movf	___fladd@a+1,w
  3301  04C2  1103               	clrz
  3302  04C3  1803               	skipnc
  3303  04C4  3E01               	addlw	1
  3304  04C5  1D03               	btfss	3,2
  3305  04C6  07AF               	addwf	___fladd@b+1,f
  3306  04C7  0834               	movf	___fladd@a+2,w
  3307  04C8  1103               	clrz
  3308  04C9  1803               	skipnc
  3309  04CA  3E01               	addlw	1
  3310  04CB  1D03               	btfss	3,2
  3311  04CC  07B0               	addwf	___fladd@b+2,f
  3312  04CD  0835               	movf	___fladd@a+3,w
  3313  04CE  1103               	clrz
  3314  04CF  1803               	skipnc
  3315  04D0  3E01               	addlw	1
  3316  04D1  1D03               	btfss	3,2
  3317  04D2  07B1               	addwf	___fladd@b+3,f
  3318  04D3  1C31               	btfss	___fladd@b+3,0
  3319  04D4  2D94               	goto	l3541
  3320  04D5  1C41               	btfss	___fladd@grs,0
  3321  04D6  2CE0               	goto	l3497
  3322  04D7  0841               	movf	___fladd@grs,w
  3323  04D8  00B6               	movwf	??___fladd
  3324  04D9  1003               	clrc
  3325  04DA  0C36               	rrf	??___fladd,w
  3326  04DB  3801               	iorlw	1
  3327  04DC  00B7               	movwf	??___fladd+1
  3328  04DD  0837               	movf	??___fladd+1,w
  3329  04DE  00C1               	movwf	___fladd@grs
  3330  04DF  2CE2               	goto	l3499
  3331  04E0                     l3497:	
  3332  04E0  1003               	clrc
  3333  04E1  0CC1               	rrf	___fladd@grs,f
  3334  04E2                     l3499:	
  3335  04E2  182E               	btfsc	___fladd@b,0
  3336  04E3  17C1               	bsf	___fladd@grs,7
  3337  04E4  3001               	movlw	1
  3338  04E5  00B6               	movwf	??___fladd
  3339  04E6                     u2365:	
  3340  04E6  0D31               	rlf	___fladd@b+3,w
  3341  04E7  0CB1               	rrf	___fladd@b+3,f
  3342  04E8  0CB0               	rrf	___fladd@b+2,f
  3343  04E9  0CAF               	rrf	___fladd@b+1,f
  3344  04EA  0CAE               	rrf	___fladd@b,f
  3345  04EB  0BB6               	decfsz	??___fladd& (0+127),f
  3346  04EC  2CE6               	goto	u2365
  3347  04ED  3001               	movlw	1
  3348  04EE  00B6               	movwf	??___fladd
  3349  04EF  0836               	movf	??___fladd,w
  3350  04F0  07C0               	addwf	___fladd@bexp,f
  3351  04F1  2D94               	goto	l3541
  3352  04F2                     l3507:	
  3353  04F2  0831               	movf	___fladd@b+3,w
  3354  04F3  3A80               	xorlw	128
  3355  04F4  00FF               	movwf	127
  3356  04F5  0835               	movf	___fladd@a+3,w
  3357  04F6  3A80               	xorlw	128
  3358  04F7  027F               	subwf	127,w
  3359  04F8  1D03               	skipz
  3360  04F9  2D04               	goto	u2373
  3361  04FA  0834               	movf	___fladd@a+2,w
  3362  04FB  0230               	subwf	___fladd@b+2,w
  3363  04FC  1D03               	skipz
  3364  04FD  2D04               	goto	u2373
  3365  04FE  0833               	movf	___fladd@a+1,w
  3366  04FF  022F               	subwf	___fladd@b+1,w
  3367  0500  1D03               	skipz
  3368  0501  2D04               	goto	u2373
  3369  0502  0832               	movf	___fladd@a,w
  3370  0503  022E               	subwf	___fladd@b,w
  3371  0504                     u2373:	
  3372  0504  1803               	skipnc
  3373  0505  2D5C               	goto	l3517
  3374  0506  30FF               	movlw	255
  3375  0507  00B6               	movwf	??___fladd
  3376  0508  30FF               	movlw	255
  3377  0509  00B7               	movwf	??___fladd+1
  3378  050A  30FF               	movlw	255
  3379  050B  00B8               	movwf	??___fladd+2
  3380  050C  30FF               	movlw	255
  3381  050D  00B9               	movwf	??___fladd+3
  3382  050E  0832               	movf	___fladd@a,w
  3383  050F  00BA               	movwf	??___fladd+4
  3384  0510  0833               	movf	___fladd@a+1,w
  3385  0511  00BB               	movwf	??___fladd+5
  3386  0512  0834               	movf	___fladd@a+2,w
  3387  0513  00BC               	movwf	??___fladd+6
  3388  0514  0835               	movf	___fladd@a+3,w
  3389  0515  00BD               	movwf	??___fladd+7
  3390  0516  082E               	movf	___fladd@b,w
  3391  0517  02BA               	subwf	??___fladd+4,f
  3392  0518  082F               	movf	___fladd@b+1,w
  3393  0519  1C03               	skipc
  3394  051A  0F2F               	incfsz	___fladd@b+1,w
  3395  051B  2D1D               	goto	u2381
  3396  051C  2D1E               	goto	u2382
  3397  051D                     u2381:	
  3398  051D  02BB               	subwf	??___fladd+5,f
  3399  051E                     u2382:	
  3400  051E  0830               	movf	___fladd@b+2,w
  3401  051F  1C03               	skipc
  3402  0520  0F30               	incfsz	___fladd@b+2,w
  3403  0521  2D23               	goto	u2383
  3404  0522  2D24               	goto	u2384
  3405  0523                     u2383:	
  3406  0523  02BC               	subwf	??___fladd+6,f
  3407  0524                     u2384:	
  3408  0524  0831               	movf	___fladd@b+3,w
  3409  0525  1C03               	skipc
  3410  0526  0F31               	incfsz	___fladd@b+3,w
  3411  0527  2D29               	goto	u2385
  3412  0528  2D2A               	goto	u2386
  3413  0529                     u2385:	
  3414  0529  02BD               	subwf	??___fladd+7,f
  3415  052A                     u2386:	
  3416  052A  083A               	movf	??___fladd+4,w
  3417  052B  07B6               	addwf	??___fladd,f
  3418  052C  083B               	movf	??___fladd+5,w
  3419  052D  1803               	skipnc
  3420  052E  0F3B               	incfsz	??___fladd+5,w
  3421  052F  2D31               	goto	u2390
  3422  0530  2D32               	goto	u2391
  3423  0531                     u2390:	
  3424  0531  07B7               	addwf	??___fladd+1,f
  3425  0532                     u2391:	
  3426  0532  083C               	movf	??___fladd+6,w
  3427  0533  1803               	skipnc
  3428  0534  0F3C               	incfsz	??___fladd+6,w
  3429  0535  2D37               	goto	u2392
  3430  0536  2D38               	goto	u2393
  3431  0537                     u2392:	
  3432  0537  07B8               	addwf	??___fladd+2,f
  3433  0538                     u2393:	
  3434  0538  083D               	movf	??___fladd+7,w
  3435  0539  1803               	skipnc
  3436  053A  0A3D               	incf	??___fladd+7,w
  3437  053B  07B9               	addwf	??___fladd+3,f
  3438  053C  0839               	movf	??___fladd+3,w
  3439  053D  00B1               	movwf	___fladd@b+3
  3440  053E  0838               	movf	??___fladd+2,w
  3441  053F  00B0               	movwf	___fladd@b+2
  3442  0540  0837               	movf	??___fladd+1,w
  3443  0541  00AF               	movwf	___fladd@b+1
  3444  0542  0836               	movf	??___fladd,w
  3445  0543  00AE               	movwf	___fladd@b
  3446  0544  3080               	movlw	128
  3447  0545  00B6               	movwf	??___fladd
  3448  0546  0836               	movf	??___fladd,w
  3449  0547  06BE               	xorwf	___fladd@signs,f
  3450  0548  09C1               	comf	___fladd@grs,f
  3451  0549  0AC1               	incf	___fladd@grs,f
  3452  054A  0841               	movf	___fladd@grs,w
  3453  054B  1D03               	btfss	3,2
  3454  054C  2D6A               	goto	l893
  3455  054D  3001               	movlw	1
  3456  054E  07AE               	addwf	___fladd@b,f
  3457  054F  3000               	movlw	0
  3458  0550  1803               	skipnc
  3459  0551  3001               	movlw	1
  3460  0552  07AF               	addwf	___fladd@b+1,f
  3461  0553  3000               	movlw	0
  3462  0554  1803               	skipnc
  3463  0555  3001               	movlw	1
  3464  0556  07B0               	addwf	___fladd@b+2,f
  3465  0557  3000               	movlw	0
  3466  0558  1803               	skipnc
  3467  0559  3001               	movlw	1
  3468  055A  07B1               	addwf	___fladd@b+3,f
  3469  055B  2D6A               	goto	l893
  3470  055C                     l3517:	
  3471  055C  0832               	movf	___fladd@a,w
  3472  055D  02AE               	subwf	___fladd@b,f
  3473  055E  0833               	movf	___fladd@a+1,w
  3474  055F  1C03               	skipc
  3475  0560  0F33               	incfsz	___fladd@a+1,w
  3476  0561  02AF               	subwf	___fladd@b+1,f
  3477  0562  0834               	movf	___fladd@a+2,w
  3478  0563  1C03               	skipc
  3479  0564  0F34               	incfsz	___fladd@a+2,w
  3480  0565  02B0               	subwf	___fladd@b+2,f
  3481  0566  0835               	movf	___fladd@a+3,w
  3482  0567  1C03               	skipc
  3483  0568  0F35               	incfsz	___fladd@a+3,w
  3484  0569  02B1               	subwf	___fladd@b+3,f
  3485  056A                     l893:	
  3486  056A  0831               	movf	___fladd@b+3,w
  3487  056B  0430               	iorwf	___fladd@b+2,w
  3488  056C  042F               	iorwf	___fladd@b+1,w
  3489  056D  042E               	iorwf	___fladd@b,w
  3490  056E  1D03               	skipz
  3491  056F  2D92               	goto	l3539
  3492  0570  0841               	movf	___fladd@grs,w
  3493  0571  1D03               	btfss	3,2
  3494  0572  2D92               	goto	l3539
  3495  0573  3000               	movlw	0
  3496  0574  00B1               	movwf	?___fladd+3
  3497  0575  3000               	movlw	0
  3498  0576  00B0               	movwf	?___fladd+2
  3499  0577  3000               	movlw	0
  3500  0578  00AF               	movwf	?___fladd+1
  3501  0579  3000               	movlw	0
  3502  057A  00AE               	movwf	?___fladd
  3503  057B  0008               	return
  3504  057C                     l3525:	
  3505  057C  3001               	movlw	1
  3506  057D  00B6               	movwf	??___fladd
  3507  057E                     u2435:	
  3508  057E  1003               	clrc
  3509  057F  0DAE               	rlf	___fladd@b,f
  3510  0580  0DAF               	rlf	___fladd@b+1,f
  3511  0581  0DB0               	rlf	___fladd@b+2,f
  3512  0582  0DB1               	rlf	___fladd@b+3,f
  3513  0583  0BB6               	decfsz	??___fladd,f
  3514  0584  2D7E               	goto	u2435
  3515  0585  1BC1               	btfsc	___fladd@grs,7
  3516  0586  142E               	bsf	___fladd@b,0
  3517  0587  1C41               	btfss	___fladd@grs,0
  3518  0588  2D8B               	goto	l3533
  3519  0589  1403               	setc
  3520  058A  2D8C               	goto	L2
  3521  058B                     l3533:	
  3522  058B  1003               	clrc
  3523  058C                     L2:	
  3524  058C  0DC1               	rlf	___fladd@grs,f
  3525  058D  0840               	movf	___fladd@bexp,w
  3526  058E  1903               	btfsc	3,2
  3527  058F  2D92               	goto	l3539
  3528  0590  3001               	movlw	1
  3529  0591  02C0               	subwf	___fladd@bexp,f
  3530  0592                     l3539:	
  3531  0592  1FB0               	btfss	___fladd@b+2,7
  3532  0593  2D7C               	goto	l3525
  3533  0594                     l3541:	
  3534  0594  01BF               	clrf	___fladd@aexp
  3535  0595  1FC1               	btfss	___fladd@grs,7
  3536  0596  2D9F               	goto	l3551
  3537  0597  0841               	movf	___fladd@grs,w
  3538  0598  397F               	andlw	127
  3539  0599  1903               	btfsc	3,2
  3540  059A  182E               	btfsc	___fladd@b,0
  3541  059B  2D9D               	goto	l3547
  3542  059C  2D9F               	goto	l3551
  3543  059D                     l3547:	
  3544  059D  01BF               	clrf	___fladd@aexp
  3545  059E  0ABF               	incf	___fladd@aexp,f
  3546  059F                     l3551:	
  3547  059F  083F               	movf	___fladd@aexp,w
  3548  05A0  1903               	btfsc	3,2
  3549  05A1  2DD2               	goto	l906
  3550  05A2  3001               	movlw	1
  3551  05A3  07AE               	addwf	___fladd@b,f
  3552  05A4  3000               	movlw	0
  3553  05A5  1803               	skipnc
  3554  05A6  3001               	movlw	1
  3555  05A7  07AF               	addwf	___fladd@b+1,f
  3556  05A8  3000               	movlw	0
  3557  05A9  1803               	skipnc
  3558  05AA  3001               	movlw	1
  3559  05AB  07B0               	addwf	___fladd@b+2,f
  3560  05AC  3000               	movlw	0
  3561  05AD  1803               	skipnc
  3562  05AE  3001               	movlw	1
  3563  05AF  07B1               	addwf	___fladd@b+3,f
  3564  05B0  1C31               	btfss	___fladd@b+3,0
  3565  05B1  2DD2               	goto	l906
  3566  05B2  082E               	movf	___fladd@b,w
  3567  05B3  00B6               	movwf	??___fladd
  3568  05B4  082F               	movf	___fladd@b+1,w
  3569  05B5  00B7               	movwf	??___fladd+1
  3570  05B6  0830               	movf	___fladd@b+2,w
  3571  05B7  00B8               	movwf	??___fladd+2
  3572  05B8  0831               	movf	___fladd@b+3,w
  3573  05B9  00B9               	movwf	??___fladd+3
  3574  05BA  3001               	movlw	1
  3575  05BB  00BA               	movwf	??___fladd+4
  3576  05BC                     u2535:	
  3577  05BC  0D39               	rlf	??___fladd+3,w
  3578  05BD  0CB9               	rrf	??___fladd+3,f
  3579  05BE  0CB8               	rrf	??___fladd+2,f
  3580  05BF  0CB7               	rrf	??___fladd+1,f
  3581  05C0  0CB6               	rrf	??___fladd,f
  3582  05C1  0BBA               	decfsz	??___fladd+4,f
  3583  05C2  2DBC               	goto	u2535
  3584  05C3  0839               	movf	??___fladd+3,w
  3585  05C4  00B1               	movwf	___fladd@b+3
  3586  05C5  0838               	movf	??___fladd+2,w
  3587  05C6  00B0               	movwf	___fladd@b+2
  3588  05C7  0837               	movf	??___fladd+1,w
  3589  05C8  00AF               	movwf	___fladd@b+1
  3590  05C9  0836               	movf	??___fladd,w
  3591  05CA  00AE               	movwf	___fladd@b
  3592  05CB  0A40               	incf	___fladd@bexp,w
  3593  05CC  1903               	btfsc	3,2
  3594  05CD  2DD2               	goto	l906
  3595  05CE  3001               	movlw	1
  3596  05CF  00B6               	movwf	??___fladd
  3597  05D0  0836               	movf	??___fladd,w
  3598  05D1  07C0               	addwf	___fladd@bexp,f
  3599  05D2                     l906:	
  3600  05D2  0A40               	incf	___fladd@bexp,w
  3601  05D3  1D03               	btfss	3,2
  3602  05D4  0840               	movf	___fladd@bexp,w
  3603  05D5  1D03               	btfss	3,2
  3604  05D6  2DE2               	goto	l3569
  3605  05D7  3000               	movlw	0
  3606  05D8  00B1               	movwf	___fladd@b+3
  3607  05D9  3000               	movlw	0
  3608  05DA  00B0               	movwf	___fladd@b+2
  3609  05DB  3000               	movlw	0
  3610  05DC  00AF               	movwf	___fladd@b+1
  3611  05DD  3000               	movlw	0
  3612  05DE  00AE               	movwf	___fladd@b
  3613  05DF  0840               	movf	___fladd@bexp,w
  3614  05E0  1903               	btfsc	3,2
  3615  05E1  01BE               	clrf	___fladd@signs
  3616  05E2                     l3569:	
  3617  05E2  1C40               	btfss	___fladd@bexp,0
  3618  05E3  2DE6               	goto	l3573
  3619  05E4  17B0               	bsf	___fladd@b+2,7
  3620  05E5  2DEA               	goto	l914
  3621  05E6                     l3573:	
  3622  05E6  307F               	movlw	127
  3623  05E7  00B6               	movwf	??___fladd
  3624  05E8  0836               	movf	??___fladd,w
  3625  05E9  05B0               	andwf	___fladd@b+2,f
  3626  05EA                     l914:	
  3627  05EA  0840               	movf	___fladd@bexp,w
  3628  05EB  00B6               	movwf	??___fladd
  3629  05EC  1003               	clrc
  3630  05ED  0C36               	rrf	??___fladd,w
  3631  05EE  00B7               	movwf	??___fladd+1
  3632  05EF  0837               	movf	??___fladd+1,w
  3633  05F0  00B1               	movwf	___fladd@b+3
  3634  05F1  1FBE               	btfss	___fladd@signs,7
  3635  05F2  0008               	return
  3636  05F3  17B1               	bsf	___fladd@b+3,7
  3637  05F4  0008               	return
  3638  05F5                     __end_of___fladd:	
  3639                           
  3640                           	psect	text9
  3641  0A2E                     __ptext9:	
  3642 ;; *************** function _pressBoton2 *****************
  3643 ;; Defined at:
  3644 ;;		line 502 in file "main_Master.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;		None
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;		None
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  1    wreg      void 
  3651 ;; Registers used:
  3652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3658 ;;      Params:         0       0       0       0       0
  3659 ;;      Locals:         0       0       0       0       0
  3660 ;;      Temps:          0       2       0       0       0
  3661 ;;      Totals:         0       2       0       0       0
  3662 ;;Total ram usage:        2 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:    3
  3665 ;; This function calls:
  3666 ;;		_LCD_Set_Cursor
  3667 ;;		_LCD_Write_Character
  3668 ;;		_LCD_clear
  3669 ;; This function is called by:
  3670 ;;		_main
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           
  3675                           ;psect for function _pressBoton2
  3676  0A2E                     _pressBoton2:	
  3677                           
  3678                           ;main_Master.c: 503:     if (banderaBoton == 1){
  3679                           
  3680                           ;incstack = 0
  3681                           ; Regs used in _pressBoton2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3682  0A2E  1283               	bcf	3,5	;RP0=0, select bank0
  3683  0A2F  1303               	bcf	3,6	;RP1=0, select bank0
  3684  0A30  0361               	decf	_banderaBoton,w
  3685  0A31  1D03               	btfss	3,2
  3686  0A32  2AC2               	goto	l5131
  3687                           
  3688                           ;main_Master.c: 504:         if (banderaPUSH2 == 0){
  3689  0A33  085F               	movf	_banderaPUSH2,w
  3690  0A34  1D03               	btfss	3,2
  3691  0A35  2AC2               	goto	l5131
  3692                           
  3693                           ;main_Master.c: 505:             if (PORTBbits.RB2 == 0){
  3694  0A36  1D06               	btfss	6,2	;volatile
  3695  0A37  2AA3               	goto	l5123
  3696  0A38  2ABC               	goto	l5125
  3697  0A39                     l5091:	
  3698                           
  3699                           ;main_Master.c: 508:                         estado = 6;
  3700  0A39  3006               	movlw	6
  3701  0A3A  2A94               	goto	L7
  3702  0A3B                     l5093:	
  3703                           ;main_Master.c: 509:                         break;
  3704                           
  3705                           
  3706                           ;main_Master.c: 511:                         LCD_Set_Cursor(2,0);
  3707  0A3B  01F5               	clrf	LCD_Set_Cursor@columna
  3708  0A3C  3002               	movlw	2
  3709  0A3D  160A  118A  241D  120A  158A  	fcall	_LCD_Set_Cursor
  3710                           
  3711                           ;main_Master.c: 512:                         LCD_Write_Character(1);
  3712  0A42  3001               	movlw	1
  3713  0A43  160A  118A  22D2  120A  158A  	fcall	_LCD_Write_Character
  3714                           
  3715                           ;main_Master.c: 513:                         _delay((unsigned long)((100)*(4000000/4000.
      +                          0)));
  3716  0A48  3082               	movlw	130
  3717  0A49  1283               	bcf	3,5	;RP0=0, select bank0
  3718  0A4A  1303               	bcf	3,6	;RP1=0, select bank0
  3719  0A4B  00A1               	movwf	??_pressBoton2+1
  3720  0A4C  30DD               	movlw	221
  3721  0A4D  00A0               	movwf	??_pressBoton2
  3722  0A4E                     u3627:	
  3723  0A4E  0BA0               	decfsz	??_pressBoton2,f
  3724  0A4F  2A4E               	goto	u3627
  3725  0A50  0BA1               	decfsz	??_pressBoton2+1,f
  3726  0A51  2A4E               	goto	u3627
  3727                           
  3728                           ;main_Master.c: 514:                         estado = 7;
  3729  0A52  3007               	movlw	7
  3730  0A53  2A92               	goto	L8
  3731  0A54                     l5101:	
  3732                           ;main_Master.c: 515:                         break;
  3733                           
  3734                           
  3735                           ;main_Master.c: 517:                         LCD_Set_Cursor(2,7);
  3736  0A54  3007               	movlw	7
  3737  0A55  00A0               	movwf	??_pressBoton2
  3738  0A56  0820               	movf	??_pressBoton2,w
  3739  0A57  00F5               	movwf	LCD_Set_Cursor@columna
  3740  0A58  3002               	movlw	2
  3741  0A59  160A  118A  241D  120A  158A  	fcall	_LCD_Set_Cursor
  3742                           
  3743                           ;main_Master.c: 518:                         LCD_Write_Character(1);
  3744  0A5E  3001               	movlw	1
  3745  0A5F  160A  118A  22D2  120A  158A  	fcall	_LCD_Write_Character
  3746                           
  3747                           ;main_Master.c: 519:                         _delay((unsigned long)((100)*(4000000/4000.
      +                          0)));
  3748  0A64  3082               	movlw	130
  3749  0A65  1283               	bcf	3,5	;RP0=0, select bank0
  3750  0A66  1303               	bcf	3,6	;RP1=0, select bank0
  3751  0A67  00A1               	movwf	??_pressBoton2+1
  3752  0A68  30DD               	movlw	221
  3753  0A69  00A0               	movwf	??_pressBoton2
  3754  0A6A                     u3637:	
  3755  0A6A  0BA0               	decfsz	??_pressBoton2,f
  3756  0A6B  2A6A               	goto	u3637
  3757  0A6C  0BA1               	decfsz	??_pressBoton2+1,f
  3758  0A6D  2A6A               	goto	u3637
  3759                           
  3760                           ;main_Master.c: 520:                         estado = 8;
  3761  0A6E  3008               	movlw	8
  3762  0A6F  2A92               	goto	L8
  3763  0A70                     l5109:	
  3764                           ;main_Master.c: 521:                         break;
  3765                           
  3766                           
  3767                           ;main_Master.c: 523:                         LCD_Set_Cursor(2,10);
  3768  0A70  300A               	movlw	10
  3769  0A71  00A0               	movwf	??_pressBoton2
  3770  0A72  0820               	movf	??_pressBoton2,w
  3771  0A73  00F5               	movwf	LCD_Set_Cursor@columna
  3772  0A74  3002               	movlw	2
  3773  0A75  160A  118A  241D  120A  158A  	fcall	_LCD_Set_Cursor
  3774                           
  3775                           ;main_Master.c: 524:                         LCD_Write_Character(1);
  3776  0A7A  3001               	movlw	1
  3777  0A7B  160A  118A  22D2  120A  158A  	fcall	_LCD_Write_Character
  3778                           
  3779                           ;main_Master.c: 525:                         _delay((unsigned long)((100)*(4000000/4000.
      +                          0)));
  3780  0A80  3082               	movlw	130
  3781  0A81  1283               	bcf	3,5	;RP0=0, select bank0
  3782  0A82  1303               	bcf	3,6	;RP1=0, select bank0
  3783  0A83  00A1               	movwf	??_pressBoton2+1
  3784  0A84  30DD               	movlw	221
  3785  0A85  00A0               	movwf	??_pressBoton2
  3786  0A86                     u3647:	
  3787  0A86  0BA0               	decfsz	??_pressBoton2,f
  3788  0A87  2A86               	goto	u3647
  3789  0A88  0BA1               	decfsz	??_pressBoton2+1,f
  3790  0A89  2A86               	goto	u3647
  3791                           
  3792                           ;main_Master.c: 526:                         estado = 9;
  3793  0A8A  3009               	movlw	9
  3794  0A8B  2A92               	goto	L8
  3795  0A8C                     l5117:	
  3796                           ;main_Master.c: 527:                         break;
  3797                           
  3798                           
  3799                           ;main_Master.c: 529:                         LCD_clear();
  3800  0A8C  160A  118A  232B  120A  158A  	fcall	_LCD_clear
  3801                           
  3802                           ;main_Master.c: 530:                         estado = 10;
  3803  0A91  300A               	movlw	10
  3804  0A92                     L8:	
  3805  0A92  1283               	bcf	3,5	;RP0=0, select bank0
  3806  0A93  1303               	bcf	3,6	;RP1=0, select bank0
  3807  0A94                     L7:	
  3808  0A94  00A0               	movwf	??_pressBoton2
  3809  0A95  0820               	movf	??_pressBoton2,w
  3810  0A96  00FB               	movwf	_estado
  3811                           
  3812                           ;main_Master.c: 531:                         break;
  3813  0A97  2ABC               	goto	l5125
  3814  0A98                     l5121:	
  3815                           
  3816                           ;main_Master.c: 533:                         _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  3817  0A98  300D               	movlw	13
  3818  0A99  1283               	bcf	3,5	;RP0=0, select bank0
  3819  0A9A  1303               	bcf	3,6	;RP1=0, select bank0
  3820  0A9B  00A1               	movwf	??_pressBoton2+1
  3821  0A9C  30FB               	movlw	251
  3822  0A9D  00A0               	movwf	??_pressBoton2
  3823  0A9E                     u3657:	
  3824  0A9E  0BA0               	decfsz	??_pressBoton2,f
  3825  0A9F  2A9E               	goto	u3657
  3826  0AA0  0BA1               	decfsz	??_pressBoton2+1,f
  3827  0AA1  2A9E               	goto	u3657
  3828                           
  3829                           ;main_Master.c: 534:                 }
  3830  0AA2  2ABC               	goto	l5125
  3831  0AA3                     l5123:	
  3832  0AA3  087B               	movf	_estado,w
  3833  0AA4  00A0               	movwf	??_pressBoton2
  3834  0AA5  01A1               	clrf	??_pressBoton2+1
  3835                           
  3836                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3837                           ; Switch size 1, requested type "simple"
  3838                           ; Number of cases is 1, Range of values is 0 to 0
  3839                           ; switch strategies available:
  3840                           ; Name         Instructions Cycles
  3841                           ; simple_byte            4     3 (average)
  3842                           ; direct_byte           11     8 (fixed)
  3843                           ; jumptable            260     6 (fixed)
  3844                           ;	Chosen strategy is simple_byte
  3845  0AA6  0821               	movf	??_pressBoton2+1,w
  3846  0AA7  3A00               	xorlw	0	; case 0
  3847  0AA8  1903               	skipnz
  3848  0AA9  2AAB               	goto	l5649
  3849  0AAA  2A98               	goto	l5121
  3850  0AAB                     l5649:	
  3851                           
  3852                           ; Switch size 1, requested type "simple"
  3853                           ; Number of cases is 5, Range of values is 5 to 9
  3854                           ; switch strategies available:
  3855                           ; Name         Instructions Cycles
  3856                           ; simple_byte           16     9 (average)
  3857                           ; direct_byte           26    11 (fixed)
  3858                           ; jumptable            263     9 (fixed)
  3859                           ;	Chosen strategy is simple_byte
  3860  0AAB  0820               	movf	??_pressBoton2,w
  3861  0AAC  3A05               	xorlw	5	; case 5
  3862  0AAD  1903               	skipnz
  3863  0AAE  2A39               	goto	l5091
  3864  0AAF  3A03               	xorlw	3	; case 6
  3865  0AB0  1903               	skipnz
  3866  0AB1  2A3B               	goto	l5093
  3867  0AB2  3A01               	xorlw	1	; case 7
  3868  0AB3  1903               	skipnz
  3869  0AB4  2A54               	goto	l5101
  3870  0AB5  3A0F               	xorlw	15	; case 8
  3871  0AB6  1903               	skipnz
  3872  0AB7  2A70               	goto	l5109
  3873  0AB8  3A01               	xorlw	1	; case 9
  3874  0AB9  1903               	skipnz
  3875  0ABA  2A8C               	goto	l5117
  3876  0ABB  2A98               	goto	l5121
  3877  0ABC                     l5125:	
  3878                           
  3879                           ;main_Master.c: 536:                 banderaBoton = 0;
  3880  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3881  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3882  0ABE  01E1               	clrf	_banderaBoton
  3883                           
  3884                           ;main_Master.c: 537:                 banderaPUSH2 = 1;
  3885  0ABF  01DF               	clrf	_banderaPUSH2
  3886  0AC0  0ADF               	incf	_banderaPUSH2,f
  3887                           
  3888                           ;main_Master.c: 538:                 INTCONbits.RBIE = 1;
  3889  0AC1  158B               	bsf	11,3	;volatile
  3890  0AC2                     l5131:	
  3891                           
  3892                           ;main_Master.c: 541:     if (banderaPUSH2 == 1){
  3893  0AC2  035F               	decf	_banderaPUSH2,w
  3894  0AC3  1D03               	btfss	3,2
  3895  0AC4  0008               	return
  3896                           
  3897                           ;main_Master.c: 542:         if (PORTBbits.RB2 == 1){
  3898  0AC5  1D06               	btfss	6,2	;volatile
  3899  0AC6  0008               	return
  3900                           
  3901                           ;main_Master.c: 543:         _delay((unsigned long)((10)*(4000000/4000.0)));
  3902  0AC7  300D               	movlw	13
  3903  0AC8  1283               	bcf	3,5	;RP0=0, select bank0
  3904  0AC9  1303               	bcf	3,6	;RP1=0, select bank0
  3905  0ACA  00A1               	movwf	??_pressBoton2+1
  3906  0ACB  30FB               	movlw	251
  3907  0ACC  00A0               	movwf	??_pressBoton2
  3908  0ACD                     u3667:	
  3909  0ACD  0BA0               	decfsz	??_pressBoton2,f
  3910  0ACE  2ACD               	goto	u3667
  3911  0ACF  0BA1               	decfsz	??_pressBoton2+1,f
  3912  0AD0  2ACD               	goto	u3667
  3913                           
  3914                           ;main_Master.c: 544:         banderaPUSH2 = 0;
  3915  0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  3916  0AD2  1303               	bcf	3,6	;RP1=0, select bank0
  3917  0AD3  01DF               	clrf	_banderaPUSH2
  3918  0AD4  0008               	return
  3919  0AD5                     __end_of_pressBoton2:	
  3920                           
  3921                           	psect	text10
  3922  1688                     __ptext10:	
  3923 ;; *************** function _pressBoton1 *****************
  3924 ;; Defined at:
  3925 ;;		line 457 in file "main_Master.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;		None
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;		None
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      void 
  3932 ;; Registers used:
  3933 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3939 ;;      Params:         0       0       0       0       0
  3940 ;;      Locals:         0       0       0       0       0
  3941 ;;      Temps:          2       0       0       0       0
  3942 ;;      Totals:         2       0       0       0       0
  3943 ;;Total ram usage:        2 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; Hardware stack levels required when called:    3
  3946 ;; This function calls:
  3947 ;;		_LCD_clear
  3948 ;; This function is called by:
  3949 ;;		_main
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           
  3954                           ;psect for function _pressBoton1
  3955  1688                     _pressBoton1:	
  3956                           
  3957                           ;main_Master.c: 458:     if (banderaBoton == 1){
  3958                           
  3959                           ;incstack = 0
  3960                           ; Regs used in _pressBoton1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3961  1688  1283               	bcf	3,5	;RP0=0, select bank0
  3962  1689  1303               	bcf	3,6	;RP1=0, select bank0
  3963  168A  0361               	decf	_banderaBoton,w
  3964  168B  1D03               	btfss	3,2
  3965  168C  2EE5               	goto	l3939
  3966                           
  3967                           ;main_Master.c: 459:         if (banderaPUSH1 == 0){
  3968  168D  0860               	movf	_banderaPUSH1,w
  3969  168E  1D03               	btfss	3,2
  3970  168F  2EE5               	goto	l3939
  3971                           
  3972                           ;main_Master.c: 460:             if (PORTBbits.RB1 == 0){
  3973  1690  1C86               	btfss	6,1	;volatile
  3974  1691  2ECC               	goto	l3931
  3975  1692  2EE5               	goto	l3939
  3976  1693                     l3903:	
  3977                           
  3978                           ;main_Master.c: 463:                         velocidad ++;
  3979  1693  3001               	movlw	1
  3980  1694  00F7               	movwf	??_pressBoton1
  3981  1695  0877               	movf	??_pressBoton1,w
  3982  1696  07E5               	addwf	_velocidad,f
  3983                           
  3984                           ;main_Master.c: 464:                         if (velocidad > 3){
  3985  1697  3004               	movlw	4
  3986  1698  0265               	subwf	_velocidad,w
  3987  1699  1C03               	skipc
  3988  169A  2EDF               	goto	l3933
  3989                           
  3990                           ;main_Master.c: 465:                             velocidad = 1;
  3991  169B  01E5               	clrf	_velocidad
  3992  169C  0AE5               	incf	_velocidad,f
  3993  169D  2EDF               	goto	l3933
  3994  169E                     l3909:	
  3995                           
  3996                           ;main_Master.c: 469:                         largo ++;
  3997  169E  3001               	movlw	1
  3998  169F  00F7               	movwf	??_pressBoton1
  3999  16A0  0877               	movf	??_pressBoton1,w
  4000  16A1  07DE               	addwf	_largo,f
  4001                           
  4002                           ;main_Master.c: 470:                         if (largo > 8){
  4003  16A2  3009               	movlw	9
  4004  16A3  025E               	subwf	_largo,w
  4005  16A4  1C03               	skipc
  4006  16A5  2EDF               	goto	l3933
  4007                           
  4008                           ;main_Master.c: 471:                             largo = 1;
  4009  16A6  01DE               	clrf	_largo
  4010  16A7  0ADE               	incf	_largo,f
  4011  16A8  2EDF               	goto	l3933
  4012  16A9                     l3915:	
  4013                           
  4014                           ;main_Master.c: 475:                         ancho ++;
  4015  16A9  3001               	movlw	1
  4016  16AA  00F7               	movwf	??_pressBoton1
  4017  16AB  0877               	movf	??_pressBoton1,w
  4018  16AC  07DD               	addwf	_ancho,f
  4019                           
  4020                           ;main_Master.c: 476:                         if (ancho > 8){
  4021  16AD  3009               	movlw	9
  4022  16AE  025D               	subwf	_ancho,w
  4023  16AF  1C03               	skipc
  4024  16B0  2EDF               	goto	l3933
  4025                           
  4026                           ;main_Master.c: 477:                             ancho = 1;
  4027  16B1  01DD               	clrf	_ancho
  4028  16B2  0ADD               	incf	_ancho,f
  4029  16B3  2EDF               	goto	l3933
  4030  16B4                     l3921:	
  4031                           
  4032                           ;main_Master.c: 481:                         LCD_clear();
  4033  16B4  160A  118A  232B  160A  118A  	fcall	_LCD_clear
  4034                           
  4035                           ;main_Master.c: 482:                     _delay((unsigned long)((10)*(4000000/4000.0)));
  4036  16B9  300D               	movlw	13
  4037  16BA  00F8               	movwf	??_pressBoton1+1
  4038  16BB  30FB               	movlw	251
  4039  16BC  00F7               	movwf	??_pressBoton1
  4040  16BD                     u3677:	
  4041  16BD  0BF7               	decfsz	??_pressBoton1,f
  4042  16BE  2EBD               	goto	u3677
  4043  16BF  0BF8               	decfsz	??_pressBoton1+1,f
  4044  16C0  2EBD               	goto	u3677
  4045  16C1  2EC2               	nop2
  4046                           
  4047                           ;main_Master.c: 483:                     estado ++;
  4048  16C2  3001               	movlw	1
  4049  16C3  00F7               	movwf	??_pressBoton1
  4050  16C4  0877               	movf	??_pressBoton1,w
  4051  16C5  07FB               	addwf	_estado,f
  4052                           
  4053                           ;main_Master.c: 484:                     if (estado > 5){
  4054  16C6  3006               	movlw	6
  4055  16C7  027B               	subwf	_estado,w
  4056  16C8  1C03               	skipc
  4057  16C9  2EDF               	goto	l3933
  4058                           
  4059                           ;main_Master.c: 485:                         estado = 0;
  4060  16CA  01FB               	clrf	_estado
  4061  16CB  2EDF               	goto	l3933
  4062  16CC                     l3931:	
  4063  16CC  087B               	movf	_estado,w
  4064  16CD  00F7               	movwf	??_pressBoton1
  4065  16CE  01F8               	clrf	??_pressBoton1+1
  4066                           
  4067                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4068                           ; Switch size 1, requested type "simple"
  4069                           ; Number of cases is 1, Range of values is 0 to 0
  4070                           ; switch strategies available:
  4071                           ; Name         Instructions Cycles
  4072                           ; simple_byte            4     3 (average)
  4073                           ; direct_byte           11     8 (fixed)
  4074                           ; jumptable            260     6 (fixed)
  4075                           ;	Chosen strategy is simple_byte
  4076  16CF  0878               	movf	??_pressBoton1+1,w
  4077  16D0  3A00               	xorlw	0	; case 0
  4078  16D1  1903               	skipnz
  4079  16D2  2ED4               	goto	l5651
  4080  16D3  2EB4               	goto	l3921
  4081  16D4                     l5651:	
  4082                           
  4083                           ; Switch size 1, requested type "simple"
  4084                           ; Number of cases is 3, Range of values is 6 to 8
  4085                           ; switch strategies available:
  4086                           ; Name         Instructions Cycles
  4087                           ; simple_byte           10     6 (average)
  4088                           ; direct_byte           20    11 (fixed)
  4089                           ; jumptable            263     9 (fixed)
  4090                           ;	Chosen strategy is simple_byte
  4091  16D4  0877               	movf	??_pressBoton1,w
  4092  16D5  3A06               	xorlw	6	; case 6
  4093  16D6  1903               	skipnz
  4094  16D7  2E93               	goto	l3903
  4095  16D8  3A01               	xorlw	1	; case 7
  4096  16D9  1903               	skipnz
  4097  16DA  2E9E               	goto	l3909
  4098  16DB  3A0F               	xorlw	15	; case 8
  4099  16DC  1903               	skipnz
  4100  16DD  2EA9               	goto	l3915
  4101  16DE  2EB4               	goto	l3921
  4102  16DF                     l3933:	
  4103                           
  4104                           ;main_Master.c: 488:                 banderaBoton = 0;
  4105  16DF  1283               	bcf	3,5	;RP0=0, select bank0
  4106  16E0  1303               	bcf	3,6	;RP1=0, select bank0
  4107  16E1  01E1               	clrf	_banderaBoton
  4108                           
  4109                           ;main_Master.c: 489:                 banderaPUSH1 = 1;
  4110  16E2  01E0               	clrf	_banderaPUSH1
  4111  16E3  0AE0               	incf	_banderaPUSH1,f
  4112                           
  4113                           ;main_Master.c: 490:                 INTCONbits.RBIE = 1;
  4114  16E4  158B               	bsf	11,3	;volatile
  4115  16E5                     l3939:	
  4116                           
  4117                           ;main_Master.c: 494:     if (banderaPUSH1 == 1){
  4118  16E5  0360               	decf	_banderaPUSH1,w
  4119  16E6  1D03               	btfss	3,2
  4120  16E7  0008               	return
  4121                           
  4122                           ;main_Master.c: 495:         if (PORTBbits.RB1 == 1){
  4123  16E8  1C86               	btfss	6,1	;volatile
  4124  16E9  0008               	return
  4125                           
  4126                           ;main_Master.c: 496:         _delay((unsigned long)((10)*(4000000/4000.0)));
  4127  16EA  300D               	movlw	13
  4128  16EB  00F8               	movwf	??_pressBoton1+1
  4129  16EC  30FB               	movlw	251
  4130  16ED  00F7               	movwf	??_pressBoton1
  4131  16EE                     u3687:	
  4132  16EE  0BF7               	decfsz	??_pressBoton1,f
  4133  16EF  2EEE               	goto	u3687
  4134  16F0  0BF8               	decfsz	??_pressBoton1+1,f
  4135  16F1  2EEE               	goto	u3687
  4136  16F2  2EF3               	nop2
  4137                           
  4138                           ;main_Master.c: 497:         banderaPUSH1 = 0;
  4139  16F3  1283               	bcf	3,5	;RP0=0, select bank0
  4140  16F4  1303               	bcf	3,6	;RP1=0, select bank0
  4141  16F5  01E0               	clrf	_banderaPUSH1
  4142  16F6  0008               	return
  4143  16F7                     __end_of_pressBoton1:	
  4144                           
  4145                           	psect	text11
  4146  0037                     __ptext11:	
  4147 ;; *************** function _mostrarLCD *****************
  4148 ;; Defined at:
  4149 ;;		line 280 in file "main_Master.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;  pantalla        1    wreg     unsigned char 
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;  pantalla        1   26[BANK0 ] unsigned char 
  4154 ;;  dec_atras       1   32[BANK0 ] unsigned char 
  4155 ;;  uni_atras       1   29[BANK0 ] unsigned char 
  4156 ;;  dec_frente      1   31[BANK0 ] unsigned char 
  4157 ;;  uni_frente      1   28[BANK0 ] unsigned char 
  4158 ;;  decenas_hume    1    0        unsigned char 
  4159 ;;  unidades_hum    1    0        unsigned char 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  1    wreg      void 
  4162 ;; Registers used:
  4163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4169 ;;      Params:         0       0       0       0       0
  4170 ;;      Locals:         0       7       0       0       0
  4171 ;;      Temps:          0       3       0       0       0
  4172 ;;      Totals:         0      10       0       0       0
  4173 ;;Total ram usage:       10 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:    4
  4176 ;; This function calls:
  4177 ;;		_I2C_Master_Start
  4178 ;;		_I2C_Master_Stop
  4179 ;;		_I2C_Master_Write
  4180 ;;		_LCD_Set_Cursor
  4181 ;;		_LCD_Write_Character
  4182 ;;		_LCD_Write_String
  4183 ;;		_LCD_clear
  4184 ;;		___awdiv
  4185 ;;		___awmod
  4186 ;;		_display_Datum
  4187 ;;		_display_Uhrzeit
  4188 ;;		_uint_to_array
  4189 ;; This function is called by:
  4190 ;;		_main
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           
  4195                           ;psect for function _mostrarLCD
  4196  0037                     _mostrarLCD:	
  4197                           
  4198                           ;incstack = 0
  4199                           ; Regs used in _mostrarLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4200                           ;mostrarLCD@pantalla stored from wreg
  4201  0037  1283               	bcf	3,5	;RP0=0, select bank0
  4202  0038  1303               	bcf	3,6	;RP1=0, select bank0
  4203  0039  00BA               	movwf	mostrarLCD@pantalla
  4204                           
  4205                           ;main_Master.c: 281:     switch(pantalla){
  4206  003A  2B9A               	goto	l5075
  4207  003B                     l4913:	
  4208                           
  4209                           ;main_Master.c: 283:             display_Uhrzeit(2,4);
  4210  003B  3004               	movlw	4
  4211  003C  00B7               	movwf	??_mostrarLCD
  4212  003D  0837               	movf	??_mostrarLCD,w
  4213  003E  00A8               	movwf	display_Uhrzeit@columna
  4214  003F  3002               	movlw	2
  4215  0040  120A  158A  2656  120A  118A  	fcall	_display_Uhrzeit
  4216                           
  4217                           ;main_Master.c: 284:             display_Datum(1,3);
  4218  0045  3003               	movlw	3
  4219  0046  1283               	bcf	3,5	;RP0=0, select bank0
  4220  0047  1303               	bcf	3,6	;RP1=0, select bank0
  4221  0048  00B7               	movwf	??_mostrarLCD
  4222  0049  0837               	movf	??_mostrarLCD,w
  4223  004A  00A8               	movwf	display_Datum@columna
  4224  004B  3001               	movlw	1
  4225  004C  120A  158A  2728   	fcall	_display_Datum
  4226                           
  4227                           ;main_Master.c: 285:             break;
  4228  004F  0008               	return
  4229  0050                     l4915:	
  4230                           
  4231                           ;main_Master.c: 287:             LCD_Set_Cursor(1,0);
  4232  0050  01F5               	clrf	LCD_Set_Cursor@columna
  4233  0051  3001               	movlw	1
  4234  0052  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4235                           
  4236                           ;main_Master.c: 288:             LCD_Write_String("Ambiente: Suelo:");
  4237  0057  3029               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  4238  0058  160A  118A  2378  120A  118A  	fcall	_LCD_Write_String
  4239                           
  4240                           ;main_Master.c: 289:             LCD_Set_Cursor(2,2);
  4241  005D  3002               	movlw	2
  4242  005E  1283               	bcf	3,5	;RP0=0, select bank0
  4243  005F  1303               	bcf	3,6	;RP1=0, select bank0
  4244  0060  00B7               	movwf	??_mostrarLCD
  4245  0061  0837               	movf	??_mostrarLCD,w
  4246  0062  00F5               	movwf	LCD_Set_Cursor@columna
  4247  0063  3002               	movlw	2
  4248  0064  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4249                           
  4250                           ;main_Master.c: 290:             LCD_Write_Character(2);
  4251  0069  3002               	movlw	2
  4252  006A  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4253                           
  4254                           ;main_Master.c: 291:             obj_array = uint_to_array(temperatura);
  4255  006F  1283               	bcf	3,5	;RP0=0, select bank0
  4256  0070  1303               	bcf	3,6	;RP1=0, select bank0
  4257  0071  0864               	movf	_temperatura,w
  4258  0072  160A  118A  277B  120A  118A  	fcall	_uint_to_array
  4259  0077  1283               	bcf	3,5	;RP0=0, select bank0
  4260  0078  1303               	bcf	3,6	;RP1=0, select bank0
  4261  0079  00B7               	movwf	??_mostrarLCD
  4262  007A  0837               	movf	??_mostrarLCD,w
  4263  007B  00E2               	movwf	_obj_array
  4264                           
  4265                           ;main_Master.c: 292:             if (obj_array[0] == 0){
  4266  007C  0862               	movf	_obj_array,w
  4267  007D  0084               	movwf	4
  4268  007E  1383               	bcf	3,7	;select IRP bank0
  4269  007F  0800               	movf	0,w
  4270  0080  00B7               	movwf	??_mostrarLCD
  4271  0081  0A84               	incf	4,f
  4272  0082  0800               	movf	0,w
  4273  0083  00B8               	movwf	??_mostrarLCD+1
  4274  0084  0837               	movf	??_mostrarLCD,w
  4275  0085  0438               	iorwf	??_mostrarLCD+1,w
  4276  0086  1D03               	btfss	3,2
  4277  0087  288A               	goto	l4925
  4278                           
  4279                           ;main_Master.c: 293:                 LCD_Write_Character(' ');
  4280  0088  3020               	movlw	32
  4281  0089  288E               	goto	L9
  4282  008A                     l4925:	
  4283                           ;main_Master.c: 294:             }
  4284                           
  4285                           
  4286                           ;main_Master.c: 296:                 LCD_Write_Character('0' + obj_array[0]);
  4287  008A  0862               	movf	_obj_array,w
  4288  008B  0084               	movwf	4
  4289  008C  0800               	movf	0,w
  4290  008D  3E30               	addlw	48
  4291  008E                     L9:	
  4292  008E  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4293                           
  4294                           ;main_Master.c: 298:             LCD_Write_Character('0' + obj_array[1]);
  4295                           
  4296                           ;main_Master.c: 297:             }
  4297  0093  1283               	bcf	3,5	;RP0=0, select bank0
  4298  0094  1303               	bcf	3,6	;RP1=0, select bank0
  4299  0095  0862               	movf	_obj_array,w
  4300  0096  3E02               	addlw	2
  4301  0097  0084               	movwf	4
  4302  0098  1383               	bcf	3,7	;select IRP bank0
  4303  0099  0800               	movf	0,w
  4304  009A  3E30               	addlw	48
  4305  009B  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4306                           
  4307                           ;main_Master.c: 299:             LCD_Write_Character('0' + obj_array[2]);
  4308  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  4309  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  4310  00A2  0862               	movf	_obj_array,w
  4311  00A3  3E04               	addlw	4
  4312  00A4  0084               	movwf	4
  4313  00A5  1383               	bcf	3,7	;select IRP bank0
  4314  00A6  0800               	movf	0,w
  4315  00A7  3E30               	addlw	48
  4316  00A8  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4317                           
  4318                           ;main_Master.c: 300:             LCD_Write_Character(223);
  4319  00AD  30DF               	movlw	223
  4320  00AE  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4321                           
  4322                           ;main_Master.c: 301:             LCD_Write_Character('C');
  4323  00B3  3043               	movlw	67
  4324  00B4  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4325                           
  4326                           ;main_Master.c: 303:             LCD_Set_Cursor(2,10);
  4327  00B9  300A               	movlw	10
  4328  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  4329  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  4330  00BC  00B7               	movwf	??_mostrarLCD
  4331  00BD  0837               	movf	??_mostrarLCD,w
  4332  00BE  00F5               	movwf	LCD_Set_Cursor@columna
  4333  00BF  3002               	movlw	2
  4334  00C0  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4335                           
  4336                           ;main_Master.c: 304:             LCD_Write_Character(2);
  4337  00C5  3002               	movlw	2
  4338  00C6  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4339                           
  4340                           ;main_Master.c: 305:             obj_array = uint_to_array(temperatura_obj);
  4341  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  4342  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  4343  00CD  0863               	movf	_temperatura_obj,w
  4344  00CE  160A  118A  277B  120A  118A  	fcall	_uint_to_array
  4345  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  4346  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  4347  00D5  00B7               	movwf	??_mostrarLCD
  4348  00D6  0837               	movf	??_mostrarLCD,w
  4349  00D7  00E2               	movwf	_obj_array
  4350                           
  4351                           ;main_Master.c: 306:             if (obj_array[0] == 0){
  4352  00D8  0862               	movf	_obj_array,w
  4353  00D9  0084               	movwf	4
  4354  00DA  1383               	bcf	3,7	;select IRP bank0
  4355  00DB  0800               	movf	0,w
  4356  00DC  00B7               	movwf	??_mostrarLCD
  4357  00DD  0A84               	incf	4,f
  4358  00DE  0800               	movf	0,w
  4359  00DF  00B8               	movwf	??_mostrarLCD+1
  4360  00E0  0837               	movf	??_mostrarLCD,w
  4361  00E1  0438               	iorwf	??_mostrarLCD+1,w
  4362  00E2  1D03               	btfss	3,2
  4363  00E3  28E6               	goto	l4939
  4364                           
  4365                           ;main_Master.c: 307:                 LCD_Write_Character(' ');
  4366  00E4  3020               	movlw	32
  4367  00E5  28EA               	goto	L10
  4368  00E6                     l4939:	
  4369                           ;main_Master.c: 308:             }
  4370                           
  4371                           
  4372                           ;main_Master.c: 310:                 LCD_Write_Character('0' + obj_array[0]);
  4373  00E6  0862               	movf	_obj_array,w
  4374  00E7  0084               	movwf	4
  4375  00E8  0800               	movf	0,w
  4376  00E9  3E30               	addlw	48
  4377  00EA                     L10:	
  4378  00EA  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4379                           
  4380                           ;main_Master.c: 313:             if (obj_array[1] == 0 && obj_array[0] == 0){
  4381  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  4382  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  4383  00F1  0862               	movf	_obj_array,w
  4384  00F2  3E02               	addlw	2
  4385  00F3  0084               	movwf	4
  4386  00F4  1383               	bcf	3,7	;select IRP bank0
  4387  00F5  0800               	movf	0,w
  4388  00F6  00B7               	movwf	??_mostrarLCD
  4389  00F7  0A84               	incf	4,f
  4390  00F8  0800               	movf	0,w
  4391  00F9  00B8               	movwf	??_mostrarLCD+1
  4392  00FA  0837               	movf	??_mostrarLCD,w
  4393  00FB  0438               	iorwf	??_mostrarLCD+1,w
  4394  00FC  1D03               	btfss	3,2
  4395  00FD  290B               	goto	l4947
  4396  00FE  0862               	movf	_obj_array,w
  4397  00FF  0084               	movwf	4
  4398  0100  0800               	movf	0,w
  4399  0101  00B7               	movwf	??_mostrarLCD
  4400  0102  0A84               	incf	4,f
  4401  0103  0800               	movf	0,w
  4402  0104  00B8               	movwf	??_mostrarLCD+1
  4403  0105  0837               	movf	??_mostrarLCD,w
  4404  0106  0438               	iorwf	??_mostrarLCD+1,w
  4405  0107  1D03               	btfss	3,2
  4406  0108  290B               	goto	l4947
  4407                           
  4408                           ;main_Master.c: 314:                 LCD_Write_Character(' ');
  4409  0109  3020               	movlw	32
  4410  010A  2910               	goto	L11
  4411  010B                     l4947:	
  4412                           ;main_Master.c: 315:             }
  4413                           
  4414                           
  4415                           ;main_Master.c: 317:                 LCD_Write_Character('0' + obj_array[1]);
  4416  010B  0862               	movf	_obj_array,w
  4417  010C  3E02               	addlw	2
  4418  010D  0084               	movwf	4
  4419  010E  0800               	movf	0,w
  4420  010F  3E30               	addlw	48
  4421  0110                     L11:	
  4422  0110  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4423                           
  4424                           ;main_Master.c: 319:             LCD_Write_Character('0' + obj_array[2]);
  4425                           
  4426                           ;main_Master.c: 318:             }
  4427  0115  1283               	bcf	3,5	;RP0=0, select bank0
  4428  0116  1303               	bcf	3,6	;RP1=0, select bank0
  4429  0117  0862               	movf	_obj_array,w
  4430  0118  3E04               	addlw	4
  4431  0119  0084               	movwf	4
  4432  011A  1383               	bcf	3,7	;select IRP bank0
  4433  011B  0800               	movf	0,w
  4434  011C  3E30               	addlw	48
  4435  011D  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4436                           
  4437                           ;main_Master.c: 320:             LCD_Write_Character(223);
  4438  0122  30DF               	movlw	223
  4439  0123  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4440                           
  4441                           ;main_Master.c: 321:             LCD_Write_Character('C');
  4442  0128  3043               	movlw	67
  4443  0129  160A  118A  22D2   	fcall	_LCD_Write_Character
  4444                           
  4445                           ;main_Master.c: 322:             break;
  4446  012C  0008               	return
  4447  012D                     l4953:	
  4448                           
  4449                           ;main_Master.c: 324:             LCD_Set_Cursor(1,0);
  4450  012D  01F5               	clrf	LCD_Set_Cursor@columna
  4451  012E  3001               	movlw	1
  4452  012F  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4453                           
  4454                           ;main_Master.c: 325:             LCD_Write_String("Inclinacion:");
  4455  0134  3065               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  4456  0135  160A  118A  2378  120A  118A  	fcall	_LCD_Write_String
  4457                           
  4458                           ;main_Master.c: 326:             LCD_Set_Cursor(2, 5);
  4459  013A  3005               	movlw	5
  4460  013B  1283               	bcf	3,5	;RP0=0, select bank0
  4461  013C  1303               	bcf	3,6	;RP1=0, select bank0
  4462  013D  00B7               	movwf	??_mostrarLCD
  4463  013E  0837               	movf	??_mostrarLCD,w
  4464  013F  00F5               	movwf	LCD_Set_Cursor@columna
  4465  0140  3002               	movlw	2
  4466  0141  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4467                           
  4468                           ;main_Master.c: 330:             LCD_Set_Cursor(2, 5);
  4469  0146  3005               	movlw	5
  4470  0147  1283               	bcf	3,5	;RP0=0, select bank0
  4471  0148  1303               	bcf	3,6	;RP1=0, select bank0
  4472  0149  00B7               	movwf	??_mostrarLCD
  4473  014A  0837               	movf	??_mostrarLCD,w
  4474  014B  00F5               	movwf	LCD_Set_Cursor@columna
  4475  014C  3002               	movlw	2
  4476  014D  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4477                           
  4478                           ;main_Master.c: 331:             if(inclinacion == 0){
  4479  0152  1283               	bcf	3,5	;RP0=0, select bank0
  4480  0153  1303               	bcf	3,6	;RP1=0, select bank0
  4481  0154  0868               	movf	_inclinacion,w
  4482  0155  1D03               	btfss	3,2
  4483  0156  295C               	goto	l4959
  4484                           
  4485                           ;main_Master.c: 332:                 LCD_Write_String("Estable   ");
  4486  0157  308B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  4487  0158  160A  118A  2378   	fcall	_LCD_Write_String
  4488                           
  4489                           ;main_Master.c: 333:             }
  4490  015B  0008               	return
  4491  015C                     l4959:	
  4492  015C  305A               	movlw	90
  4493  015D  0668               	xorwf	_inclinacion,w
  4494  015E  1D03               	btfss	3,2
  4495  015F  2965               	goto	l4963
  4496                           
  4497                           ;main_Master.c: 335:                 LCD_Write_String("Peligro!   ");
  4498  0160  307F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  4499  0161  160A  118A  2378   	fcall	_LCD_Write_String
  4500                           
  4501                           ;main_Master.c: 336:             }
  4502  0164  0008               	return
  4503  0165                     l4963:	
  4504  0165  30B4               	movlw	180
  4505  0166  0668               	xorwf	_inclinacion,w
  4506  0167  1D03               	btfss	3,2
  4507  0168  0008               	return
  4508                           
  4509                           ;main_Master.c: 338:                 LCD_Write_String("EMERGENCIA!  ");
  4510  0169  304A               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  4511  016A  160A  118A  2378   	fcall	_LCD_Write_String
  4512                           
  4513                           ;main_Master.c: 341:             break;
  4514  016D  0008               	return
  4515  016E                     l4967:	
  4516                           
  4517                           ;main_Master.c: 343:             LCD_Set_Cursor(1,0);
  4518  016E  01F5               	clrf	LCD_Set_Cursor@columna
  4519  016F  3001               	movlw	1
  4520  0170  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4521                           
  4522                           ;main_Master.c: 344:             LCD_Write_String("Humedad:");
  4523  0175  3096               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  4524  0176  160A  118A  2378  120A  118A  	fcall	_LCD_Write_String
  4525                           
  4526                           ;main_Master.c: 345:             LCD_Set_Cursor(2,4);
  4527  017B  3004               	movlw	4
  4528  017C  1283               	bcf	3,5	;RP0=0, select bank0
  4529  017D  1303               	bcf	3,6	;RP1=0, select bank0
  4530  017E  00B7               	movwf	??_mostrarLCD
  4531  017F  0837               	movf	??_mostrarLCD,w
  4532  0180  00F5               	movwf	LCD_Set_Cursor@columna
  4533  0181  3002               	movlw	2
  4534  0182  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4535                           
  4536                           ;main_Master.c: 346:             LCD_Write_Character(3);
  4537  0187  3003               	movlw	3
  4538  0188  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4539                           
  4540                           ;main_Master.c: 347:             LCD_Write_Character(' ');
  4541  018D  3020               	movlw	32
  4542  018E  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4543                           
  4544                           ;main_Master.c: 351:                 LCD_Write_Character(' ');
  4545                           
  4546                           ;main_Master.c: 350:             if(decenas_humedad == 0){
  4547  0193  3020               	movlw	32
  4548  0194  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4549                           
  4550                           ;main_Master.c: 356:             LCD_Write_Character('0'+unidades_humedad);
  4551                           
  4552                           ;main_Master.c: 355:             }
  4553  0199  3035               	movlw	53
  4554  019A  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4555                           
  4556                           ;main_Master.c: 357:             LCD_Write_Character('%');
  4557  019F  3025               	movlw	37
  4558  01A0  160A  118A  22D2   	fcall	_LCD_Write_Character
  4559                           
  4560                           ;main_Master.c: 358:             break;
  4561  01A3  0008               	return
  4562  01A4                     l4983:	
  4563                           
  4564                           ;main_Master.c: 360:             LCD_Set_Cursor(1,0);
  4565  01A4  01F5               	clrf	LCD_Set_Cursor@columna
  4566  01A5  3001               	movlw	1
  4567  01A6  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4568                           
  4569                           ;main_Master.c: 361:             LCD_Write_String("Atr");
  4570  01AB  30AA               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  4571  01AC  160A  118A  2378  120A  118A  	fcall	_LCD_Write_String
  4572                           
  4573                           ;main_Master.c: 362:             LCD_Write_Character(0);
  4574  01B1  3000               	movlw	0
  4575  01B2  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4576                           
  4577                           ;main_Master.c: 363:             LCD_Write_String("s: | Frente:");
  4578  01B7  3058               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  4579  01B8  160A  118A  2378  120A  118A  	fcall	_LCD_Write_String
  4580                           
  4581                           ;main_Master.c: 364:             LCD_Set_Cursor(2,11);
  4582  01BD  300B               	movlw	11
  4583  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  4584  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  4585  01C0  00B7               	movwf	??_mostrarLCD
  4586  01C1  0837               	movf	??_mostrarLCD,w
  4587  01C2  00F5               	movwf	LCD_Set_Cursor@columna
  4588  01C3  3002               	movlw	2
  4589  01C4  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4590                           
  4591                           ;main_Master.c: 365:             if(d_frente < 100){
  4592  01C9  3064               	movlw	100
  4593  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  4594  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  4595  01CC  0267               	subwf	_d_frente,w
  4596  01CD  1803               	skipnc
  4597  01CE  2A12               	goto	l5003
  4598                           
  4599                           ;main_Master.c: 366:                 uint8_t dec_frente = d_frente/10;
  4600  01CF  300A               	movlw	10
  4601  01D0  00A0               	movwf	___awdiv@divisor
  4602  01D1  3000               	movlw	0
  4603  01D2  00A1               	movwf	___awdiv@divisor+1
  4604  01D3  0867               	movf	_d_frente,w
  4605  01D4  00B7               	movwf	??_mostrarLCD
  4606  01D5  01B8               	clrf	??_mostrarLCD+1
  4607  01D6  0837               	movf	??_mostrarLCD,w
  4608  01D7  00A2               	movwf	___awdiv@dividend
  4609  01D8  0838               	movf	??_mostrarLCD+1,w
  4610  01D9  00A3               	movwf	___awdiv@dividend+1
  4611  01DA  160A  118A  24F9  120A  118A  	fcall	___awdiv
  4612  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  4613  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  4614  01E1  0820               	movf	?___awdiv,w
  4615  01E2  00B9               	movwf	??_mostrarLCD+2
  4616  01E3  0839               	movf	??_mostrarLCD+2,w
  4617  01E4  00BF               	movwf	mostrarLCD@dec_frente
  4618                           
  4619                           ;main_Master.c: 367:                 uint8_t uni_frente = d_frente%10;
  4620  01E5  300A               	movlw	10
  4621  01E6  00F2               	movwf	___awmod@divisor
  4622  01E7  3000               	movlw	0
  4623  01E8  00F3               	movwf	___awmod@divisor+1
  4624  01E9  0867               	movf	_d_frente,w
  4625  01EA  00B7               	movwf	??_mostrarLCD
  4626  01EB  01B8               	clrf	??_mostrarLCD+1
  4627  01EC  0837               	movf	??_mostrarLCD,w
  4628  01ED  00F4               	movwf	___awmod@dividend
  4629  01EE  0838               	movf	??_mostrarLCD+1,w
  4630  01EF  00F5               	movwf	___awmod@dividend+1
  4631  01F0  160A  118A  24AE  120A  118A  	fcall	___awmod
  4632  01F5  0872               	movf	?___awmod,w
  4633  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  4634  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  4635  01F8  00B9               	movwf	??_mostrarLCD+2
  4636  01F9  0839               	movf	??_mostrarLCD+2,w
  4637  01FA  00BC               	movwf	mostrarLCD@uni_frente
  4638                           
  4639                           ;main_Master.c: 368:                 if(dec_frente == 0){
  4640  01FB  083F               	movf	mostrarLCD@dec_frente,w
  4641  01FC  1D03               	btfss	3,2
  4642  01FD  2A00               	goto	l4999
  4643                           
  4644                           ;main_Master.c: 369:                     LCD_Write_Character(' ');
  4645  01FE  3020               	movlw	32
  4646  01FF  2A02               	goto	L12
  4647  0200                     l4999:	
  4648                           ;main_Master.c: 370:                 }
  4649                           
  4650                           
  4651                           ;main_Master.c: 372:                     LCD_Write_Character('0' + dec_frente);
  4652  0200  083F               	movf	mostrarLCD@dec_frente,w
  4653  0201  3E30               	addlw	48
  4654  0202                     L12:	
  4655  0202  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4656                           
  4657                           ;main_Master.c: 374:                 LCD_Write_Character('0' + uni_frente);
  4658                           
  4659                           ;main_Master.c: 373:                 }
  4660  0207  1283               	bcf	3,5	;RP0=0, select bank0
  4661  0208  1303               	bcf	3,6	;RP1=0, select bank0
  4662  0209  083C               	movf	mostrarLCD@uni_frente,w
  4663  020A  3E30               	addlw	48
  4664  020B  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4665                           
  4666                           ;main_Master.c: 375:                 LCD_Write_String("cm");
  4667  0210  30B4               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  4668  0211  2A13               	goto	L13
  4669  0212                     l5003:	
  4670                           ;main_Master.c: 376:             }
  4671                           
  4672                           
  4673                           ;main_Master.c: 378:                 LCD_Write_String("----");
  4674  0212  30A5               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  4675  0213                     L13:	
  4676  0213  160A  118A  2378  120A  118A  	fcall	_LCD_Write_String
  4677                           
  4678                           ;main_Master.c: 381:             LCD_Set_Cursor(2,7);
  4679                           
  4680                           ;main_Master.c: 379:             }
  4681  0218  3007               	movlw	7
  4682  0219  1283               	bcf	3,5	;RP0=0, select bank0
  4683  021A  1303               	bcf	3,6	;RP1=0, select bank0
  4684  021B  00B7               	movwf	??_mostrarLCD
  4685  021C  0837               	movf	??_mostrarLCD,w
  4686  021D  00F5               	movwf	LCD_Set_Cursor@columna
  4687  021E  3002               	movlw	2
  4688  021F  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4689                           
  4690                           ;main_Master.c: 382:             LCD_Write_Character('|');
  4691  0224  307C               	movlw	124
  4692  0225  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4693                           
  4694                           ;main_Master.c: 383:             LCD_Set_Cursor(2,2);
  4695  022A  3002               	movlw	2
  4696  022B  1283               	bcf	3,5	;RP0=0, select bank0
  4697  022C  1303               	bcf	3,6	;RP1=0, select bank0
  4698  022D  00B7               	movwf	??_mostrarLCD
  4699  022E  0837               	movf	??_mostrarLCD,w
  4700  022F  00F5               	movwf	LCD_Set_Cursor@columna
  4701  0230  3002               	movlw	2
  4702  0231  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4703                           
  4704                           ;main_Master.c: 384:             if(d_atras < 100){
  4705  0236  3064               	movlw	100
  4706  0237  1283               	bcf	3,5	;RP0=0, select bank0
  4707  0238  1303               	bcf	3,6	;RP1=0, select bank0
  4708  0239  0266               	subwf	_d_atras,w
  4709  023A  1803               	skipnc
  4710  023B  2A82               	goto	l5021
  4711                           
  4712                           ;main_Master.c: 385:                 uint8_t dec_atras = d_atras/10;
  4713  023C  300A               	movlw	10
  4714  023D  00A0               	movwf	___awdiv@divisor
  4715  023E  3000               	movlw	0
  4716  023F  00A1               	movwf	___awdiv@divisor+1
  4717  0240  0866               	movf	_d_atras,w
  4718  0241  00B7               	movwf	??_mostrarLCD
  4719  0242  01B8               	clrf	??_mostrarLCD+1
  4720  0243  0837               	movf	??_mostrarLCD,w
  4721  0244  00A2               	movwf	___awdiv@dividend
  4722  0245  0838               	movf	??_mostrarLCD+1,w
  4723  0246  00A3               	movwf	___awdiv@dividend+1
  4724  0247  160A  118A  24F9  120A  118A  	fcall	___awdiv
  4725  024C  1283               	bcf	3,5	;RP0=0, select bank0
  4726  024D  1303               	bcf	3,6	;RP1=0, select bank0
  4727  024E  0820               	movf	?___awdiv,w
  4728  024F  00B9               	movwf	??_mostrarLCD+2
  4729  0250  0839               	movf	??_mostrarLCD+2,w
  4730  0251  00C0               	movwf	mostrarLCD@dec_atras
  4731                           
  4732                           ;main_Master.c: 386:                 uint8_t uni_atras = d_atras%10;
  4733  0252  300A               	movlw	10
  4734  0253  00F2               	movwf	___awmod@divisor
  4735  0254  3000               	movlw	0
  4736  0255  00F3               	movwf	___awmod@divisor+1
  4737  0256  0866               	movf	_d_atras,w
  4738  0257  00B7               	movwf	??_mostrarLCD
  4739  0258  01B8               	clrf	??_mostrarLCD+1
  4740  0259  0837               	movf	??_mostrarLCD,w
  4741  025A  00F4               	movwf	___awmod@dividend
  4742  025B  0838               	movf	??_mostrarLCD+1,w
  4743  025C  00F5               	movwf	___awmod@dividend+1
  4744  025D  160A  118A  24AE  120A  118A  	fcall	___awmod
  4745  0262  0872               	movf	?___awmod,w
  4746  0263  1283               	bcf	3,5	;RP0=0, select bank0
  4747  0264  1303               	bcf	3,6	;RP1=0, select bank0
  4748  0265  00B9               	movwf	??_mostrarLCD+2
  4749  0266  0839               	movf	??_mostrarLCD+2,w
  4750  0267  00BD               	movwf	mostrarLCD@uni_atras
  4751                           
  4752                           ;main_Master.c: 387:                 if(dec_atras == 0){
  4753  0268  0840               	movf	mostrarLCD@dec_atras,w
  4754  0269  1D03               	btfss	3,2
  4755  026A  2A6D               	goto	l5017
  4756                           
  4757                           ;main_Master.c: 388:                     LCD_Write_Character(' ');
  4758  026B  3020               	movlw	32
  4759  026C  2A6F               	goto	L14
  4760  026D                     l5017:	
  4761                           ;main_Master.c: 389:                 }
  4762                           
  4763                           
  4764                           ;main_Master.c: 391:                     LCD_Write_Character('0' + dec_atras);
  4765  026D  0840               	movf	mostrarLCD@dec_atras,w
  4766  026E  3E30               	addlw	48
  4767  026F                     L14:	
  4768  026F  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4769                           
  4770                           ;main_Master.c: 393:                 LCD_Write_Character('0' + uni_atras);
  4771                           
  4772                           ;main_Master.c: 392:                 }
  4773  0274  1283               	bcf	3,5	;RP0=0, select bank0
  4774  0275  1303               	bcf	3,6	;RP1=0, select bank0
  4775  0276  083D               	movf	mostrarLCD@uni_atras,w
  4776  0277  3E30               	addlw	48
  4777  0278  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4778                           
  4779                           ;main_Master.c: 394:                 LCD_Write_String("cm");
  4780  027D  30B4               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  4781  027E  160A  118A  2378   	fcall	_LCD_Write_String
  4782                           
  4783                           ;main_Master.c: 395:             }
  4784  0281  0008               	return
  4785  0282                     l5021:	
  4786                           
  4787                           ;main_Master.c: 397:                 LCD_Write_String("----");
  4788  0282  30A5               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  4789  0283  160A  118A  2378   	fcall	_LCD_Write_String
  4790  0286  0008               	return
  4791  0287                     l5023:	
  4792                           
  4793                           ;main_Master.c: 401:             LCD_Set_Cursor(1, 0);
  4794  0287  01F5               	clrf	LCD_Set_Cursor@columna
  4795  0288  3001               	movlw	1
  4796  0289  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4797                           
  4798                           ;main_Master.c: 402:             LCD_Write_String("Tomar datos:");
  4799  028E  3072               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  4800  028F  160A  118A  2378  120A  118A  	fcall	_LCD_Write_String
  4801                           
  4802                           ;main_Master.c: 403:             LCD_Set_Cursor(2,1);
  4803  0294  01F5               	clrf	LCD_Set_Cursor@columna
  4804  0295  0AF5               	incf	LCD_Set_Cursor@columna,f
  4805  0296  3002               	movlw	2
  4806  0297  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4807                           
  4808                           ;main_Master.c: 404:             LCD_Write_Character(velocidad + '0');
  4809  029C  1283               	bcf	3,5	;RP0=0, select bank0
  4810  029D  1303               	bcf	3,6	;RP1=0, select bank0
  4811  029E  0865               	movf	_velocidad,w
  4812  029F  3E30               	addlw	48
  4813  02A0  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4814                           
  4815                           ;main_Master.c: 405:             LCD_Set_Cursor(2,8);
  4816  02A5  3008               	movlw	8
  4817  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  4818  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  4819  02A8  00B7               	movwf	??_mostrarLCD
  4820  02A9  0837               	movf	??_mostrarLCD,w
  4821  02AA  00F5               	movwf	LCD_Set_Cursor@columna
  4822  02AB  3002               	movlw	2
  4823  02AC  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4824                           
  4825                           ;main_Master.c: 406:             LCD_Write_Character('0' + largo);
  4826  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  4827  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  4828  02B3  085E               	movf	_largo,w
  4829  02B4  3E30               	addlw	48
  4830  02B5  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4831                           
  4832                           ;main_Master.c: 407:             LCD_Write_String("x ");
  4833  02BA  30AE               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  4834  02BB  160A  118A  2378  120A  118A  	fcall	_LCD_Write_String
  4835                           
  4836                           ;main_Master.c: 408:             LCD_Write_Character('0' + ancho);
  4837  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  4838  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  4839  02C2  085D               	movf	_ancho,w
  4840  02C3  3E30               	addlw	48
  4841  02C4  160A  118A  22D2   	fcall	_LCD_Write_Character
  4842                           
  4843                           ;main_Master.c: 409:             break;
  4844  02C7  0008               	return
  4845  02C8                     l5033:	
  4846                           
  4847                           ;main_Master.c: 411:             LCD_Set_Cursor(2,0);
  4848  02C8  01F5               	clrf	LCD_Set_Cursor@columna
  4849  02C9  3002               	movlw	2
  4850  02CA  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4851                           
  4852                           ;main_Master.c: 412:             LCD_Write_Character(4);
  4853  02CF  3004               	movlw	4
  4854  02D0  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4855                           
  4856                           ;main_Master.c: 413:             LCD_Write_Character(velocidad + '0');
  4857  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  4858  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  4859  02D7  0865               	movf	_velocidad,w
  4860  02D8  3E30               	addlw	48
  4861  02D9  160A  118A  22D2   	fcall	_LCD_Write_Character
  4862                           
  4863                           ;main_Master.c: 414:             break;
  4864  02DC  0008               	return
  4865  02DD                     l5039:	
  4866                           
  4867                           ;main_Master.c: 416:             LCD_Set_Cursor(2,0);
  4868  02DD  01F5               	clrf	LCD_Set_Cursor@columna
  4869  02DE  3002               	movlw	2
  4870  02DF  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4871                           
  4872                           ;main_Master.c: 417:             LCD_Write_Character(' ');
  4873  02E4  3020               	movlw	32
  4874  02E5  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4875                           
  4876                           ;main_Master.c: 418:             LCD_Set_Cursor(2,7);
  4877  02EA  3007               	movlw	7
  4878  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  4879  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  4880  02ED  00B7               	movwf	??_mostrarLCD
  4881  02EE  0837               	movf	??_mostrarLCD,w
  4882  02EF  00F5               	movwf	LCD_Set_Cursor@columna
  4883  02F0  3002               	movlw	2
  4884  02F1  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4885                           
  4886                           ;main_Master.c: 419:             LCD_Write_Character(4);
  4887  02F6  3004               	movlw	4
  4888  02F7  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4889                           
  4890                           ;main_Master.c: 420:             LCD_Write_Character('0' + largo);
  4891  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  4892  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  4893  02FE  085E               	movf	_largo,w
  4894  02FF  3E30               	addlw	48
  4895  0300  160A  118A  22D2   	fcall	_LCD_Write_Character
  4896                           
  4897                           ;main_Master.c: 421:             break;
  4898  0303  0008               	return
  4899  0304                     l5045:	
  4900                           
  4901                           ;main_Master.c: 423:             LCD_Set_Cursor(2,7);
  4902  0304  3007               	movlw	7
  4903  0305  00B7               	movwf	??_mostrarLCD
  4904  0306  0837               	movf	??_mostrarLCD,w
  4905  0307  00F5               	movwf	LCD_Set_Cursor@columna
  4906  0308  3002               	movlw	2
  4907  0309  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4908                           
  4909                           ;main_Master.c: 424:             LCD_Write_Character(' ');
  4910  030E  3020               	movlw	32
  4911  030F  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4912                           
  4913                           ;main_Master.c: 425:             LCD_Set_Cursor(2,10);
  4914  0314  300A               	movlw	10
  4915  0315  1283               	bcf	3,5	;RP0=0, select bank0
  4916  0316  1303               	bcf	3,6	;RP1=0, select bank0
  4917  0317  00B7               	movwf	??_mostrarLCD
  4918  0318  0837               	movf	??_mostrarLCD,w
  4919  0319  00F5               	movwf	LCD_Set_Cursor@columna
  4920  031A  3002               	movlw	2
  4921  031B  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4922                           
  4923                           ;main_Master.c: 426:             LCD_Write_Character(4);
  4924  0320  3004               	movlw	4
  4925  0321  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4926                           
  4927                           ;main_Master.c: 427:             LCD_Write_Character('0' + ancho);
  4928  0326  1283               	bcf	3,5	;RP0=0, select bank0
  4929  0327  1303               	bcf	3,6	;RP1=0, select bank0
  4930  0328  085D               	movf	_ancho,w
  4931  0329  3E30               	addlw	48
  4932  032A  160A  118A  22D2   	fcall	_LCD_Write_Character
  4933                           
  4934                           ;main_Master.c: 428:             break;
  4935  032D  0008               	return
  4936  032E                     l5051:	
  4937                           
  4938                           ;main_Master.c: 430:             LCD_Set_Cursor(2,10);
  4939  032E  300A               	movlw	10
  4940  032F  00B7               	movwf	??_mostrarLCD
  4941  0330  0837               	movf	??_mostrarLCD,w
  4942  0331  00F5               	movwf	LCD_Set_Cursor@columna
  4943  0332  3002               	movlw	2
  4944  0333  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4945                           
  4946                           ;main_Master.c: 431:             LCD_Write_Character(' ');
  4947  0338  3020               	movlw	32
  4948  0339  160A  118A  22D2  120A  118A  	fcall	_LCD_Write_Character
  4949                           
  4950                           ;main_Master.c: 432:             LCD_Set_Cursor(2,15);
  4951  033E  300F               	movlw	15
  4952  033F  1283               	bcf	3,5	;RP0=0, select bank0
  4953  0340  1303               	bcf	3,6	;RP1=0, select bank0
  4954  0341  00B7               	movwf	??_mostrarLCD
  4955  0342  0837               	movf	??_mostrarLCD,w
  4956  0343  00F5               	movwf	LCD_Set_Cursor@columna
  4957  0344  3002               	movlw	2
  4958  0345  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4959                           
  4960                           ;main_Master.c: 433:             LCD_Write_Character(1);
  4961  034A  3001               	movlw	1
  4962  034B  160A  118A  22D2   	fcall	_LCD_Write_Character
  4963                           
  4964                           ;main_Master.c: 434:             break;
  4965  034E  0008               	return
  4966  034F                     l5057:	
  4967                           
  4968                           ;main_Master.c: 436:             LCD_Set_Cursor(1,0);
  4969  034F  01F5               	clrf	LCD_Set_Cursor@columna
  4970  0350  3001               	movlw	1
  4971  0351  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  4972                           
  4973                           ;main_Master.c: 437:             LCD_Write_String("Vamonos Perros!");
  4974  0356  303A               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  4975  0357  160A  118A  2378  120A  118A  	fcall	_LCD_Write_String
  4976                           
  4977                           ;main_Master.c: 439:             I2C_Master_Start();
  4978  035C  160A  118A  22A9  120A  118A  	fcall	_I2C_Master_Start
  4979                           
  4980                           ;main_Master.c: 440:             I2C_Master_Write(0x30);
  4981  0361  3030               	movlw	48
  4982  0362  00F2               	movwf	I2C_Master_Write@d
  4983  0363  3000               	movlw	0
  4984  0364  00F3               	movwf	I2C_Master_Write@d+1
  4985  0365  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  4986                           
  4987                           ;main_Master.c: 441:             I2C_Master_Write(0x69);
  4988  036A  3069               	movlw	105
  4989  036B  00F2               	movwf	I2C_Master_Write@d
  4990  036C  3000               	movlw	0
  4991  036D  00F3               	movwf	I2C_Master_Write@d+1
  4992  036E  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  4993                           
  4994                           ;main_Master.c: 445:             I2C_Master_Stop();
  4995  0373  160A  118A  22B0  120A  118A  	fcall	_I2C_Master_Stop
  4996                           
  4997                           ;main_Master.c: 447:             _delay((unsigned long)((500)*(4000000/4000.0)));
  4998  0378  3003               	movlw	3
  4999  0379  1283               	bcf	3,5	;RP0=0, select bank0
  5000  037A  1303               	bcf	3,6	;RP1=0, select bank0
  5001  037B  00B9               	movwf	??_mostrarLCD+2
  5002  037C  308A               	movlw	138
  5003  037D  00B8               	movwf	??_mostrarLCD+1
  5004  037E  3055               	movlw	85
  5005  037F  00B7               	movwf	??_mostrarLCD
  5006  0380                     u3697:	
  5007  0380  0BB7               	decfsz	??_mostrarLCD,f
  5008  0381  2B80               	goto	u3697
  5009  0382  0BB8               	decfsz	??_mostrarLCD+1,f
  5010  0383  2B80               	goto	u3697
  5011  0384  0BB9               	decfsz	??_mostrarLCD+2,f
  5012  0385  2B80               	goto	u3697
  5013                           
  5014                           ;main_Master.c: 448:             LCD_clear();
  5015  0386  160A  118A  232B   	fcall	_LCD_clear
  5016                           
  5017                           ;main_Master.c: 449:             estado = 0;
  5018  0389  01FB               	clrf	_estado
  5019                           
  5020                           ;main_Master.c: 450:             break;
  5021  038A  0008               	return
  5022  038B                     l5073:	
  5023                           
  5024                           ;main_Master.c: 452:             LCD_Set_Cursor(1,9);
  5025  038B  3009               	movlw	9
  5026  038C  00B7               	movwf	??_mostrarLCD
  5027  038D  0837               	movf	??_mostrarLCD,w
  5028  038E  00F5               	movwf	LCD_Set_Cursor@columna
  5029  038F  3001               	movlw	1
  5030  0390  160A  118A  241D  120A  118A  	fcall	_LCD_Set_Cursor
  5031                           
  5032                           ;main_Master.c: 453:             LCD_Write_String("ERROR");
  5033  0395  309F               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  5034  0396  160A  118A  2378   	fcall	_LCD_Write_String
  5035                           
  5036                           ;main_Master.c: 454:     }
  5037  0399  0008               	return
  5038  039A                     l5075:	
  5039  039A  083A               	movf	mostrarLCD@pantalla,w
  5040  039B  00B7               	movwf	??_mostrarLCD
  5041  039C  01B8               	clrf	??_mostrarLCD+1
  5042                           
  5043                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5044                           ; Switch size 1, requested type "simple"
  5045                           ; Number of cases is 1, Range of values is 0 to 0
  5046                           ; switch strategies available:
  5047                           ; Name         Instructions Cycles
  5048                           ; simple_byte            4     3 (average)
  5049                           ; direct_byte           11     8 (fixed)
  5050                           ; jumptable            260     6 (fixed)
  5051                           ;	Chosen strategy is simple_byte
  5052  039D  0838               	movf	??_mostrarLCD+1,w
  5053  039E  3A00               	xorlw	0	; case 0
  5054  039F  1903               	skipnz
  5055  03A0  2BA2               	goto	l5653
  5056  03A1  2B8B               	goto	l5073
  5057  03A2                     l5653:	
  5058                           
  5059                           ; Switch size 1, requested type "simple"
  5060                           ; Number of cases is 11, Range of values is 0 to 10
  5061                           ; switch strategies available:
  5062                           ; Name         Instructions Cycles
  5063                           ; simple_byte           34    18 (average)
  5064                           ; direct_byte           41     8 (fixed)
  5065                           ; jumptable            260     6 (fixed)
  5066                           ;	Chosen strategy is simple_byte
  5067  03A2  0837               	movf	??_mostrarLCD,w
  5068  03A3  3A00               	xorlw	0	; case 0
  5069  03A4  1903               	skipnz
  5070  03A5  283B               	goto	l4913
  5071  03A6  3A01               	xorlw	1	; case 1
  5072  03A7  1903               	skipnz
  5073  03A8  2850               	goto	l4915
  5074  03A9  3A03               	xorlw	3	; case 2
  5075  03AA  1903               	skipnz
  5076  03AB  292D               	goto	l4953
  5077  03AC  3A01               	xorlw	1	; case 3
  5078  03AD  1903               	skipnz
  5079  03AE  296E               	goto	l4967
  5080  03AF  3A07               	xorlw	7	; case 4
  5081  03B0  1903               	skipnz
  5082  03B1  29A4               	goto	l4983
  5083  03B2  3A01               	xorlw	1	; case 5
  5084  03B3  1903               	skipnz
  5085  03B4  2A87               	goto	l5023
  5086  03B5  3A03               	xorlw	3	; case 6
  5087  03B6  1903               	skipnz
  5088  03B7  2AC8               	goto	l5033
  5089  03B8  3A01               	xorlw	1	; case 7
  5090  03B9  1903               	skipnz
  5091  03BA  2ADD               	goto	l5039
  5092  03BB  3A0F               	xorlw	15	; case 8
  5093  03BC  1903               	skipnz
  5094  03BD  2B04               	goto	l5045
  5095  03BE  3A01               	xorlw	1	; case 9
  5096  03BF  1903               	skipnz
  5097  03C0  2B2E               	goto	l5051
  5098  03C1  3A03               	xorlw	3	; case 10
  5099  03C2  1903               	skipnz
  5100  03C3  2B4F               	goto	l5057
  5101  03C4  2B8B               	goto	l5073
  5102  03C5  0008               	return
  5103  03C6                     __end_of_mostrarLCD:	
  5104                           
  5105                           	psect	text12
  5106  177B                     __ptext12:	
  5107 ;; *************** function _uint_to_array *****************
  5108 ;; Defined at:
  5109 ;;		line 181 in file "LCD_8bits.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;  numero          1    wreg     unsigned char 
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;  numero          1   22[BANK0 ] unsigned char 
  5114 ;;  resultado       6   16[BANK0 ] unsigned int [3]
  5115 ;;  centenas        1   15[BANK0 ] unsigned char 
  5116 ;;  decenas         1   14[BANK0 ] unsigned char 
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  1    wreg      PTR unsigned int 
  5119 ;; Registers used:
  5120 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5126 ;;      Params:         0       0       0       0       0
  5127 ;;      Locals:         0       9       0       0       0
  5128 ;;      Temps:          0       6       0       0       0
  5129 ;;      Totals:         0      15       0       0       0
  5130 ;;Total ram usage:       15 bytes
  5131 ;; Hardware stack levels used:    1
  5132 ;; Hardware stack levels required when called:    2
  5133 ;; This function calls:
  5134 ;;		___awdiv
  5135 ;;		___wmul
  5136 ;; This function is called by:
  5137 ;;		_mostrarLCD
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           
  5142                           ;psect for function _uint_to_array
  5143  177B                     _uint_to_array:	
  5144                           
  5145                           ;incstack = 0
  5146                           ; Regs used in _uint_to_array: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5147                           ;uint_to_array@numero stored from wreg
  5148  177B  1283               	bcf	3,5	;RP0=0, select bank0
  5149  177C  1303               	bcf	3,6	;RP1=0, select bank0
  5150  177D  00B6               	movwf	uint_to_array@numero
  5151                           
  5152                           ;LCD_8bits.c: 182:     uint16_t resultado[3] = {0,0,0};
  5153  177E  3030               	movlw	uint_to_array@resultado& (0+255)
  5154  177F  0084               	movwf	4
  5155  1780  3006               	movlw	6
  5156  1781  00FF               	movwf	127
  5157  1782                     u3310:	
  5158  1782  1383               	bcf	3,7	;select IRP bank0
  5159  1783  0180               	clrf	0
  5160  1784  0A84               	incf	4,f
  5161  1785  0BFF               	decfsz	127,f
  5162  1786  2F82               	goto	u3310
  5163                           
  5164                           ;LCD_8bits.c: 183:     resultado[0] = numero/100;
  5165  1787  3064               	movlw	100
  5166  1788  00A0               	movwf	___awdiv@divisor
  5167  1789  3000               	movlw	0
  5168  178A  00A1               	movwf	___awdiv@divisor+1
  5169  178B  0836               	movf	uint_to_array@numero,w
  5170  178C  00A8               	movwf	??_uint_to_array
  5171  178D  01A9               	clrf	??_uint_to_array+1
  5172  178E  0828               	movf	??_uint_to_array,w
  5173  178F  00A2               	movwf	___awdiv@dividend
  5174  1790  0829               	movf	??_uint_to_array+1,w
  5175  1791  00A3               	movwf	___awdiv@dividend+1
  5176  1792  160A  118A  24F9  160A  118A  	fcall	___awdiv
  5177  1797  1283               	bcf	3,5	;RP0=0, select bank0
  5178  1798  1303               	bcf	3,6	;RP1=0, select bank0
  5179  1799  0821               	movf	?___awdiv+1,w
  5180  179A  00B1               	movwf	uint_to_array@resultado+1
  5181  179B  0820               	movf	?___awdiv,w
  5182  179C  00B0               	movwf	uint_to_array@resultado
  5183                           
  5184                           ;LCD_8bits.c: 184:     uint8_t centenas = resultado[0];
  5185  179D  0830               	movf	uint_to_array@resultado,w
  5186  179E  00A8               	movwf	??_uint_to_array
  5187  179F  0828               	movf	??_uint_to_array,w
  5188  17A0  00AF               	movwf	uint_to_array@centenas
  5189                           
  5190                           ;LCD_8bits.c: 185:     resultado[1] = (numero - (centenas *100))/10;
  5191  17A1  300A               	movlw	10
  5192  17A2  00A0               	movwf	___awdiv@divisor
  5193  17A3  3000               	movlw	0
  5194  17A4  00A1               	movwf	___awdiv@divisor+1
  5195  17A5  082F               	movf	uint_to_array@centenas,w
  5196  17A6  00A8               	movwf	??_uint_to_array
  5197  17A7  01A9               	clrf	??_uint_to_array+1
  5198  17A8  0828               	movf	??_uint_to_array,w
  5199  17A9  00F2               	movwf	___wmul@multiplier
  5200  17AA  0829               	movf	??_uint_to_array+1,w
  5201  17AB  00F3               	movwf	___wmul@multiplier+1
  5202  17AC  309C               	movlw	156
  5203  17AD  00F4               	movwf	___wmul@multiplicand
  5204  17AE  30FF               	movlw	255
  5205  17AF  00F5               	movwf	___wmul@multiplicand+1
  5206  17B0  160A  118A  2357  160A  118A  	fcall	___wmul
  5207  17B5  1283               	bcf	3,5	;RP0=0, select bank0
  5208  17B6  1303               	bcf	3,6	;RP1=0, select bank0
  5209  17B7  0836               	movf	uint_to_array@numero,w
  5210  17B8  0772               	addwf	?___wmul,w
  5211  17B9  00A2               	movwf	___awdiv@dividend
  5212  17BA  0873               	movf	?___wmul+1,w
  5213  17BB  1803               	skipnc
  5214  17BC  0A73               	incf	?___wmul+1,w
  5215  17BD  00A3               	movwf	___awdiv@dividend+1
  5216  17BE  160A  118A  24F9  160A  118A  	fcall	___awdiv
  5217  17C3  1283               	bcf	3,5	;RP0=0, select bank0
  5218  17C4  1303               	bcf	3,6	;RP1=0, select bank0
  5219  17C5  0821               	movf	?___awdiv+1,w
  5220  17C6  00B3               	movwf	uint_to_array@resultado+3
  5221  17C7  0820               	movf	?___awdiv,w
  5222  17C8  00B2               	movwf	uint_to_array@resultado+2
  5223                           
  5224                           ;LCD_8bits.c: 186:     uint8_t decenas = resultado[1];
  5225  17C9  0832               	movf	uint_to_array@resultado+2,w
  5226  17CA  00A8               	movwf	??_uint_to_array
  5227  17CB  0828               	movf	??_uint_to_array,w
  5228  17CC  00AE               	movwf	uint_to_array@decenas
  5229                           
  5230                           ;LCD_8bits.c: 187:     resultado[2] = numero -(centenas*100+decenas*10);
  5231  17CD  082F               	movf	uint_to_array@centenas,w
  5232  17CE  00A8               	movwf	??_uint_to_array
  5233  17CF  01A9               	clrf	??_uint_to_array+1
  5234  17D0  0828               	movf	??_uint_to_array,w
  5235  17D1  00F2               	movwf	___wmul@multiplier
  5236  17D2  0829               	movf	??_uint_to_array+1,w
  5237  17D3  00F3               	movwf	___wmul@multiplier+1
  5238  17D4  309C               	movlw	156
  5239  17D5  00F4               	movwf	___wmul@multiplicand
  5240  17D6  30FF               	movlw	255
  5241  17D7  00F5               	movwf	___wmul@multiplicand+1
  5242  17D8  160A  118A  2357  160A  118A  	fcall	___wmul
  5243  17DD  1283               	bcf	3,5	;RP0=0, select bank0
  5244  17DE  1303               	bcf	3,6	;RP1=0, select bank0
  5245  17DF  0836               	movf	uint_to_array@numero,w
  5246  17E0  0772               	addwf	?___wmul,w
  5247  17E1  00AA               	movwf	??_uint_to_array+2
  5248  17E2  0873               	movf	?___wmul+1,w
  5249  17E3  1803               	skipnc
  5250  17E4  0A73               	incf	?___wmul+1,w
  5251  17E5  00AB               	movwf	??_uint_to_array+3
  5252  17E6  082E               	movf	uint_to_array@decenas,w
  5253  17E7  00AC               	movwf	??_uint_to_array+4
  5254  17E8  01AD               	clrf	??_uint_to_array+5
  5255  17E9  082C               	movf	??_uint_to_array+4,w
  5256  17EA  00F2               	movwf	___wmul@multiplier
  5257  17EB  082D               	movf	??_uint_to_array+5,w
  5258  17EC  00F3               	movwf	___wmul@multiplier+1
  5259  17ED  30F6               	movlw	246
  5260  17EE  00F4               	movwf	___wmul@multiplicand
  5261  17EF  30FF               	movlw	255
  5262  17F0  00F5               	movwf	___wmul@multiplicand+1
  5263  17F1  160A  118A  2357   	fcall	___wmul
  5264  17F4  0872               	movf	?___wmul,w
  5265  17F5  1283               	bcf	3,5	;RP0=0, select bank0
  5266  17F6  1303               	bcf	3,6	;RP1=0, select bank0
  5267  17F7  072A               	addwf	??_uint_to_array+2,w
  5268  17F8  00B4               	movwf	uint_to_array@resultado+4
  5269  17F9  0873               	movf	?___wmul+1,w
  5270  17FA  1803               	skipnc
  5271  17FB  0A73               	incf	?___wmul+1,w
  5272  17FC  072B               	addwf	??_uint_to_array+3,w
  5273  17FD  00B5               	movwf	uint_to_array@resultado+5
  5274                           
  5275                           ;LCD_8bits.c: 188:     return(resultado);
  5276  17FE  3030               	movlw	(low (uint_to_array@resultado| 0))& (0+255)
  5277  17FF  0008               	return
  5278  1800                     __end_of_uint_to_array:	
  5279                           
  5280                           	psect	text13
  5281  1357                     __ptext13:	
  5282 ;; *************** function ___wmul *****************
  5283 ;; Defined at:
  5284 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;  multiplier      2    2[COMMON] unsigned int 
  5287 ;;  multiplicand    2    4[COMMON] unsigned int 
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;  product         2    6[COMMON] unsigned int 
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  2    2[COMMON] unsigned int 
  5292 ;; Registers used:
  5293 ;;		wreg, status,2, status,0
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5299 ;;      Params:         4       0       0       0       0
  5300 ;;      Locals:         2       0       0       0       0
  5301 ;;      Temps:          0       0       0       0       0
  5302 ;;      Totals:         6       0       0       0       0
  5303 ;;Total ram usage:        6 bytes
  5304 ;; Hardware stack levels used:    1
  5305 ;; Hardware stack levels required when called:    1
  5306 ;; This function calls:
  5307 ;;		Nothing
  5308 ;; This function is called by:
  5309 ;;		_uint_to_array
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           
  5314                           ;psect for function ___wmul
  5315  1357                     ___wmul:	
  5316                           
  5317                           ;incstack = 0
  5318                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5319  1357  01F6               	clrf	___wmul@product
  5320  1358  01F7               	clrf	___wmul@product+1
  5321  1359                     l2905:	
  5322  1359  1C72               	btfss	___wmul@multiplier,0
  5323  135A  2B61               	goto	l579
  5324  135B  0874               	movf	___wmul@multiplicand,w
  5325  135C  07F6               	addwf	___wmul@product,f
  5326  135D  1803               	skipnc
  5327  135E  0AF7               	incf	___wmul@product+1,f
  5328  135F  0875               	movf	___wmul@multiplicand+1,w
  5329  1360  07F7               	addwf	___wmul@product+1,f
  5330  1361                     l579:	
  5331  1361  3001               	movlw	1
  5332  1362                     u1605:	
  5333  1362  1003               	clrc
  5334  1363  0DF4               	rlf	___wmul@multiplicand,f
  5335  1364  0DF5               	rlf	___wmul@multiplicand+1,f
  5336  1365  3EFF               	addlw	-1
  5337  1366  1D03               	skipz
  5338  1367  2B62               	goto	u1605
  5339  1368  3001               	movlw	1
  5340  1369                     u1615:	
  5341  1369  1003               	clrc
  5342  136A  0CF3               	rrf	___wmul@multiplier+1,f
  5343  136B  0CF2               	rrf	___wmul@multiplier,f
  5344  136C  3EFF               	addlw	-1
  5345  136D  1D03               	skipz
  5346  136E  2B69               	goto	u1615
  5347  136F  0872               	movf	___wmul@multiplier,w
  5348  1370  0473               	iorwf	___wmul@multiplier+1,w
  5349  1371  1D03               	btfss	3,2
  5350  1372  2B59               	goto	l2905
  5351  1373  0877               	movf	___wmul@product+1,w
  5352  1374  00F3               	movwf	?___wmul+1
  5353  1375  0876               	movf	___wmul@product,w
  5354  1376  00F2               	movwf	?___wmul
  5355  1377  0008               	return
  5356  1378                     __end_of___wmul:	
  5357                           
  5358                           	psect	text14
  5359  0E56                     __ptext14:	
  5360 ;; *************** function _display_Uhrzeit *****************
  5361 ;; Defined at:
  5362 ;;		line 239 in file "main_Master.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;  fila            1    wreg     unsigned char 
  5365 ;;  columna         1    8[BANK0 ] unsigned char 
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;  fila            1   12[BANK0 ] unsigned char 
  5368 ;;  Uhr_d           1   18[BANK0 ] unsigned char 
  5369 ;;  Uhr_u           1   17[BANK0 ] unsigned char 
  5370 ;;  min_d           1   16[BANK0 ] unsigned char 
  5371 ;;  min_u           1   15[BANK0 ] unsigned char 
  5372 ;;  seg_d           1   14[BANK0 ] unsigned char 
  5373 ;;  seg_u           1   13[BANK0 ] unsigned char 
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  1    wreg      void 
  5376 ;; Registers used:
  5377 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5383 ;;      Params:         0       1       0       0       0
  5384 ;;      Locals:         0       7       0       0       0
  5385 ;;      Temps:          0       3       0       0       0
  5386 ;;      Totals:         0      11       0       0       0
  5387 ;;Total ram usage:       11 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; Hardware stack levels required when called:    3
  5390 ;; This function calls:
  5391 ;;		_LCD_Set_Cursor
  5392 ;;		_LCD_Write_Character
  5393 ;;		___awdiv
  5394 ;;		___awmod
  5395 ;; This function is called by:
  5396 ;;		_mostrarLCD
  5397 ;; This function uses a non-reentrant model
  5398 ;;
  5399                           
  5400                           
  5401                           ;psect for function _display_Uhrzeit
  5402  0E56                     _display_Uhrzeit:	
  5403                           
  5404                           ;incstack = 0
  5405                           ; Regs used in _display_Uhrzeit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5406                           ;display_Uhrzeit@fila stored from wreg
  5407  0E56  1283               	bcf	3,5	;RP0=0, select bank0
  5408  0E57  1303               	bcf	3,6	;RP1=0, select bank0
  5409  0E58  00AC               	movwf	display_Uhrzeit@fila
  5410                           
  5411                           ;main_Master.c: 240:     char seg_u = seg%10;
  5412  0E59  300A               	movlw	10
  5413  0E5A  00F2               	movwf	___awmod@divisor
  5414  0E5B  3000               	movlw	0
  5415  0E5C  00F3               	movwf	___awmod@divisor+1
  5416  0E5D  087A               	movf	_seg,w
  5417  0E5E  00A9               	movwf	??_display_Uhrzeit
  5418  0E5F  01AA               	clrf	??_display_Uhrzeit+1
  5419  0E60  0829               	movf	??_display_Uhrzeit,w
  5420  0E61  00F4               	movwf	___awmod@dividend
  5421  0E62  082A               	movf	??_display_Uhrzeit+1,w
  5422  0E63  00F5               	movwf	___awmod@dividend+1
  5423  0E64  160A  118A  24AE  120A  158A  	fcall	___awmod
  5424  0E69  0872               	movf	?___awmod,w
  5425  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  5426  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  5427  0E6C  00AB               	movwf	??_display_Uhrzeit+2
  5428  0E6D  082B               	movf	??_display_Uhrzeit+2,w
  5429  0E6E  00AD               	movwf	display_Uhrzeit@seg_u
  5430                           
  5431                           ;main_Master.c: 241:     char seg_d = seg/10;
  5432  0E6F  300A               	movlw	10
  5433  0E70  00A0               	movwf	___awdiv@divisor
  5434  0E71  3000               	movlw	0
  5435  0E72  00A1               	movwf	___awdiv@divisor+1
  5436  0E73  087A               	movf	_seg,w
  5437  0E74  00A9               	movwf	??_display_Uhrzeit
  5438  0E75  01AA               	clrf	??_display_Uhrzeit+1
  5439  0E76  0829               	movf	??_display_Uhrzeit,w
  5440  0E77  00A2               	movwf	___awdiv@dividend
  5441  0E78  082A               	movf	??_display_Uhrzeit+1,w
  5442  0E79  00A3               	movwf	___awdiv@dividend+1
  5443  0E7A  160A  118A  24F9  120A  158A  	fcall	___awdiv
  5444  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  5445  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  5446  0E81  0820               	movf	?___awdiv,w
  5447  0E82  00AB               	movwf	??_display_Uhrzeit+2
  5448  0E83  082B               	movf	??_display_Uhrzeit+2,w
  5449  0E84  00AE               	movwf	display_Uhrzeit@seg_d
  5450                           
  5451                           ;main_Master.c: 242:     char min_u = min%10;
  5452  0E85  300A               	movlw	10
  5453  0E86  00F2               	movwf	___awmod@divisor
  5454  0E87  3000               	movlw	0
  5455  0E88  00F3               	movwf	___awmod@divisor+1
  5456  0E89  086F               	movf	_min,w
  5457  0E8A  00A9               	movwf	??_display_Uhrzeit
  5458  0E8B  01AA               	clrf	??_display_Uhrzeit+1
  5459  0E8C  0829               	movf	??_display_Uhrzeit,w
  5460  0E8D  00F4               	movwf	___awmod@dividend
  5461  0E8E  082A               	movf	??_display_Uhrzeit+1,w
  5462  0E8F  00F5               	movwf	___awmod@dividend+1
  5463  0E90  160A  118A  24AE  120A  158A  	fcall	___awmod
  5464  0E95  0872               	movf	?___awmod,w
  5465  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  5466  0E97  1303               	bcf	3,6	;RP1=0, select bank0
  5467  0E98  00AB               	movwf	??_display_Uhrzeit+2
  5468  0E99  082B               	movf	??_display_Uhrzeit+2,w
  5469  0E9A  00AF               	movwf	display_Uhrzeit@min_u
  5470                           
  5471                           ;main_Master.c: 243:     char min_d = min/10;
  5472  0E9B  300A               	movlw	10
  5473  0E9C  00A0               	movwf	___awdiv@divisor
  5474  0E9D  3000               	movlw	0
  5475  0E9E  00A1               	movwf	___awdiv@divisor+1
  5476  0E9F  086F               	movf	_min,w
  5477  0EA0  00A9               	movwf	??_display_Uhrzeit
  5478  0EA1  01AA               	clrf	??_display_Uhrzeit+1
  5479  0EA2  0829               	movf	??_display_Uhrzeit,w
  5480  0EA3  00A2               	movwf	___awdiv@dividend
  5481  0EA4  082A               	movf	??_display_Uhrzeit+1,w
  5482  0EA5  00A3               	movwf	___awdiv@dividend+1
  5483  0EA6  160A  118A  24F9  120A  158A  	fcall	___awdiv
  5484  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  5485  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  5486  0EAD  0820               	movf	?___awdiv,w
  5487  0EAE  00AB               	movwf	??_display_Uhrzeit+2
  5488  0EAF  082B               	movf	??_display_Uhrzeit+2,w
  5489  0EB0  00B0               	movwf	display_Uhrzeit@min_d
  5490                           
  5491                           ;main_Master.c: 244:     char Uhr_u = hora%10;
  5492  0EB1  300A               	movlw	10
  5493  0EB2  00F2               	movwf	___awmod@divisor
  5494  0EB3  3000               	movlw	0
  5495  0EB4  00F3               	movwf	___awmod@divisor+1
  5496  0EB5  086E               	movf	_hora,w
  5497  0EB6  00A9               	movwf	??_display_Uhrzeit
  5498  0EB7  01AA               	clrf	??_display_Uhrzeit+1
  5499  0EB8  0829               	movf	??_display_Uhrzeit,w
  5500  0EB9  00F4               	movwf	___awmod@dividend
  5501  0EBA  082A               	movf	??_display_Uhrzeit+1,w
  5502  0EBB  00F5               	movwf	___awmod@dividend+1
  5503  0EBC  160A  118A  24AE  120A  158A  	fcall	___awmod
  5504  0EC1  0872               	movf	?___awmod,w
  5505  0EC2  1283               	bcf	3,5	;RP0=0, select bank0
  5506  0EC3  1303               	bcf	3,6	;RP1=0, select bank0
  5507  0EC4  00AB               	movwf	??_display_Uhrzeit+2
  5508  0EC5  082B               	movf	??_display_Uhrzeit+2,w
  5509  0EC6  00B1               	movwf	display_Uhrzeit@Uhr_u
  5510                           
  5511                           ;main_Master.c: 245:     char Uhr_d = hora/10;
  5512  0EC7  300A               	movlw	10
  5513  0EC8  00A0               	movwf	___awdiv@divisor
  5514  0EC9  3000               	movlw	0
  5515  0ECA  00A1               	movwf	___awdiv@divisor+1
  5516  0ECB  086E               	movf	_hora,w
  5517  0ECC  00A9               	movwf	??_display_Uhrzeit
  5518  0ECD  01AA               	clrf	??_display_Uhrzeit+1
  5519  0ECE  0829               	movf	??_display_Uhrzeit,w
  5520  0ECF  00A2               	movwf	___awdiv@dividend
  5521  0ED0  082A               	movf	??_display_Uhrzeit+1,w
  5522  0ED1  00A3               	movwf	___awdiv@dividend+1
  5523  0ED2  160A  118A  24F9  120A  158A  	fcall	___awdiv
  5524  0ED7  1283               	bcf	3,5	;RP0=0, select bank0
  5525  0ED8  1303               	bcf	3,6	;RP1=0, select bank0
  5526  0ED9  0820               	movf	?___awdiv,w
  5527  0EDA  00AB               	movwf	??_display_Uhrzeit+2
  5528  0EDB  082B               	movf	??_display_Uhrzeit+2,w
  5529  0EDC  00B2               	movwf	display_Uhrzeit@Uhr_d
  5530                           
  5531                           ;main_Master.c: 247:     LCD_Set_Cursor(fila, columna);
  5532  0EDD  0828               	movf	display_Uhrzeit@columna,w
  5533  0EDE  00A9               	movwf	??_display_Uhrzeit
  5534  0EDF  0829               	movf	??_display_Uhrzeit,w
  5535  0EE0  00F5               	movwf	LCD_Set_Cursor@columna
  5536  0EE1  082C               	movf	display_Uhrzeit@fila,w
  5537  0EE2  160A  118A  241D  120A  158A  	fcall	_LCD_Set_Cursor
  5538                           
  5539                           ;main_Master.c: 248:     LCD_Write_Character(Uhr_d + '0');
  5540  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  5541  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  5542  0EE9  0832               	movf	display_Uhrzeit@Uhr_d,w
  5543  0EEA  3E30               	addlw	48
  5544  0EEB  160A  118A  22D2  120A  158A  	fcall	_LCD_Write_Character
  5545                           
  5546                           ;main_Master.c: 249:     LCD_Write_Character(Uhr_u + '0');
  5547  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  5548  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  5549  0EF2  0831               	movf	display_Uhrzeit@Uhr_u,w
  5550  0EF3  3E30               	addlw	48
  5551  0EF4  160A  118A  22D2  120A  158A  	fcall	_LCD_Write_Character
  5552                           
  5553                           ;main_Master.c: 250:     LCD_Write_Character(':');
  5554  0EF9  303A               	movlw	58
  5555  0EFA  160A  118A  22D2  120A  158A  	fcall	_LCD_Write_Character
  5556                           
  5557                           ;main_Master.c: 251:     LCD_Write_Character(min_d + '0');
  5558  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  5559  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  5560  0F01  0830               	movf	display_Uhrzeit@min_d,w
  5561  0F02  3E30               	addlw	48
  5562  0F03  160A  118A  22D2  120A  158A  	fcall	_LCD_Write_Character
  5563                           
  5564                           ;main_Master.c: 252:     LCD_Write_Character(min_u + '0');
  5565  0F08  1283               	bcf	3,5	;RP0=0, select bank0
  5566  0F09  1303               	bcf	3,6	;RP1=0, select bank0
  5567  0F0A  082F               	movf	display_Uhrzeit@min_u,w
  5568  0F0B  3E30               	addlw	48
  5569  0F0C  160A  118A  22D2  120A  158A  	fcall	_LCD_Write_Character
  5570                           
  5571                           ;main_Master.c: 253:     LCD_Write_Character(':');
  5572  0F11  303A               	movlw	58
  5573  0F12  160A  118A  22D2  120A  158A  	fcall	_LCD_Write_Character
  5574                           
  5575                           ;main_Master.c: 254:     LCD_Write_Character(seg_d + '0');
  5576  0F17  1283               	bcf	3,5	;RP0=0, select bank0
  5577  0F18  1303               	bcf	3,6	;RP1=0, select bank0
  5578  0F19  082E               	movf	display_Uhrzeit@seg_d,w
  5579  0F1A  3E30               	addlw	48
  5580  0F1B  160A  118A  22D2  120A  158A  	fcall	_LCD_Write_Character
  5581                           
  5582                           ;main_Master.c: 255:     LCD_Write_Character(seg_u + '0');
  5583  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  5584  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  5585  0F22  082D               	movf	display_Uhrzeit@seg_u,w
  5586  0F23  3E30               	addlw	48
  5587  0F24  160A  118A  22D2   	fcall	_LCD_Write_Character
  5588  0F27  0008               	return
  5589  0F28                     __end_of_display_Uhrzeit:	
  5590                           
  5591                           	psect	text15
  5592  0F28                     __ptext15:	
  5593 ;; *************** function _display_Datum *****************
  5594 ;; Defined at:
  5595 ;;		line 259 in file "main_Master.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  fila            1    wreg     unsigned char 
  5598 ;;  columna         1    8[BANK0 ] unsigned char 
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;  fila            1   12[BANK0 ] unsigned char 
  5601 ;;  jahr_d          1   18[BANK0 ] unsigned char 
  5602 ;;  jahr_u          1   17[BANK0 ] unsigned char 
  5603 ;;  mes_d           1   16[BANK0 ] unsigned char 
  5604 ;;  mes_u           1   15[BANK0 ] unsigned char 
  5605 ;;  dia_d           1   14[BANK0 ] unsigned char 
  5606 ;;  dia_u           1   13[BANK0 ] unsigned char 
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  1    wreg      void 
  5609 ;; Registers used:
  5610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5616 ;;      Params:         0       1       0       0       0
  5617 ;;      Locals:         0       7       0       0       0
  5618 ;;      Temps:          0       3       0       0       0
  5619 ;;      Totals:         0      11       0       0       0
  5620 ;;Total ram usage:       11 bytes
  5621 ;; Hardware stack levels used:    1
  5622 ;; Hardware stack levels required when called:    3
  5623 ;; This function calls:
  5624 ;;		_LCD_Set_Cursor
  5625 ;;		_LCD_Write_Character
  5626 ;;		_LCD_Write_String
  5627 ;;		___awdiv
  5628 ;;		___awmod
  5629 ;; This function is called by:
  5630 ;;		_mostrarLCD
  5631 ;; This function uses a non-reentrant model
  5632 ;;
  5633                           
  5634                           
  5635                           ;psect for function _display_Datum
  5636  0F28                     _display_Datum:	
  5637                           
  5638                           ;incstack = 0
  5639                           ; Regs used in _display_Datum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5640                           ;display_Datum@fila stored from wreg
  5641  0F28  1283               	bcf	3,5	;RP0=0, select bank0
  5642  0F29  1303               	bcf	3,6	;RP1=0, select bank0
  5643  0F2A  00AC               	movwf	display_Datum@fila
  5644                           
  5645                           ;main_Master.c: 260:     char dia_u = datum%10;
  5646  0F2B  300A               	movlw	10
  5647  0F2C  00F2               	movwf	___awmod@divisor
  5648  0F2D  3000               	movlw	0
  5649  0F2E  00F3               	movwf	___awmod@divisor+1
  5650  0F2F  086C               	movf	_datum,w
  5651  0F30  00A9               	movwf	??_display_Datum
  5652  0F31  01AA               	clrf	??_display_Datum+1
  5653  0F32  0829               	movf	??_display_Datum,w
  5654  0F33  00F4               	movwf	___awmod@dividend
  5655  0F34  082A               	movf	??_display_Datum+1,w
  5656  0F35  00F5               	movwf	___awmod@dividend+1
  5657  0F36  160A  118A  24AE  120A  158A  	fcall	___awmod
  5658  0F3B  0872               	movf	?___awmod,w
  5659  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  5660  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  5661  0F3E  00AB               	movwf	??_display_Datum+2
  5662  0F3F  082B               	movf	??_display_Datum+2,w
  5663  0F40  00AD               	movwf	display_Datum@dia_u
  5664                           
  5665                           ;main_Master.c: 261:     char dia_d = datum/10;
  5666  0F41  300A               	movlw	10
  5667  0F42  00A0               	movwf	___awdiv@divisor
  5668  0F43  3000               	movlw	0
  5669  0F44  00A1               	movwf	___awdiv@divisor+1
  5670  0F45  086C               	movf	_datum,w
  5671  0F46  00A9               	movwf	??_display_Datum
  5672  0F47  01AA               	clrf	??_display_Datum+1
  5673  0F48  0829               	movf	??_display_Datum,w
  5674  0F49  00A2               	movwf	___awdiv@dividend
  5675  0F4A  082A               	movf	??_display_Datum+1,w
  5676  0F4B  00A3               	movwf	___awdiv@dividend+1
  5677  0F4C  160A  118A  24F9  120A  158A  	fcall	___awdiv
  5678  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  5679  0F52  1303               	bcf	3,6	;RP1=0, select bank0
  5680  0F53  0820               	movf	?___awdiv,w
  5681  0F54  00AB               	movwf	??_display_Datum+2
  5682  0F55  082B               	movf	??_display_Datum+2,w
  5683  0F56  00AE               	movwf	display_Datum@dia_d
  5684                           
  5685                           ;main_Master.c: 262:     char mes_u = mes%10;
  5686  0F57  300A               	movlw	10
  5687  0F58  00F2               	movwf	___awmod@divisor
  5688  0F59  3000               	movlw	0
  5689  0F5A  00F3               	movwf	___awmod@divisor+1
  5690  0F5B  086B               	movf	_mes,w
  5691  0F5C  00A9               	movwf	??_display_Datum
  5692  0F5D  01AA               	clrf	??_display_Datum+1
  5693  0F5E  0829               	movf	??_display_Datum,w
  5694  0F5F  00F4               	movwf	___awmod@dividend
  5695  0F60  082A               	movf	??_display_Datum+1,w
  5696  0F61  00F5               	movwf	___awmod@dividend+1
  5697  0F62  160A  118A  24AE  120A  158A  	fcall	___awmod
  5698  0F67  0872               	movf	?___awmod,w
  5699  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  5700  0F69  1303               	bcf	3,6	;RP1=0, select bank0
  5701  0F6A  00AB               	movwf	??_display_Datum+2
  5702  0F6B  082B               	movf	??_display_Datum+2,w
  5703  0F6C  00AF               	movwf	display_Datum@mes_u
  5704                           
  5705                           ;main_Master.c: 263:     char mes_d = mes/10;
  5706  0F6D  300A               	movlw	10
  5707  0F6E  00A0               	movwf	___awdiv@divisor
  5708  0F6F  3000               	movlw	0
  5709  0F70  00A1               	movwf	___awdiv@divisor+1
  5710  0F71  086B               	movf	_mes,w
  5711  0F72  00A9               	movwf	??_display_Datum
  5712  0F73  01AA               	clrf	??_display_Datum+1
  5713  0F74  0829               	movf	??_display_Datum,w
  5714  0F75  00A2               	movwf	___awdiv@dividend
  5715  0F76  082A               	movf	??_display_Datum+1,w
  5716  0F77  00A3               	movwf	___awdiv@dividend+1
  5717  0F78  160A  118A  24F9  120A  158A  	fcall	___awdiv
  5718  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  5719  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  5720  0F7F  0820               	movf	?___awdiv,w
  5721  0F80  00AB               	movwf	??_display_Datum+2
  5722  0F81  082B               	movf	??_display_Datum+2,w
  5723  0F82  00B0               	movwf	display_Datum@mes_d
  5724                           
  5725                           ;main_Master.c: 264:     char jahr_u = jahr%10;
  5726  0F83  300A               	movlw	10
  5727  0F84  00F2               	movwf	___awmod@divisor
  5728  0F85  3000               	movlw	0
  5729  0F86  00F3               	movwf	___awmod@divisor+1
  5730  0F87  086A               	movf	_jahr,w
  5731  0F88  00A9               	movwf	??_display_Datum
  5732  0F89  01AA               	clrf	??_display_Datum+1
  5733  0F8A  0829               	movf	??_display_Datum,w
  5734  0F8B  00F4               	movwf	___awmod@dividend
  5735  0F8C  082A               	movf	??_display_Datum+1,w
  5736  0F8D  00F5               	movwf	___awmod@dividend+1
  5737  0F8E  160A  118A  24AE  120A  158A  	fcall	___awmod
  5738  0F93  0872               	movf	?___awmod,w
  5739  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  5740  0F95  1303               	bcf	3,6	;RP1=0, select bank0
  5741  0F96  00AB               	movwf	??_display_Datum+2
  5742  0F97  082B               	movf	??_display_Datum+2,w
  5743  0F98  00B1               	movwf	display_Datum@jahr_u
  5744                           
  5745                           ;main_Master.c: 265:     char jahr_d = jahr/10;
  5746  0F99  300A               	movlw	10
  5747  0F9A  00A0               	movwf	___awdiv@divisor
  5748  0F9B  3000               	movlw	0
  5749  0F9C  00A1               	movwf	___awdiv@divisor+1
  5750  0F9D  086A               	movf	_jahr,w
  5751  0F9E  00A9               	movwf	??_display_Datum
  5752  0F9F  01AA               	clrf	??_display_Datum+1
  5753  0FA0  0829               	movf	??_display_Datum,w
  5754  0FA1  00A2               	movwf	___awdiv@dividend
  5755  0FA2  082A               	movf	??_display_Datum+1,w
  5756  0FA3  00A3               	movwf	___awdiv@dividend+1
  5757  0FA4  160A  118A  24F9  120A  158A  	fcall	___awdiv
  5758  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  5759  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  5760  0FAB  0820               	movf	?___awdiv,w
  5761  0FAC  00AB               	movwf	??_display_Datum+2
  5762  0FAD  082B               	movf	??_display_Datum+2,w
  5763  0FAE  00B2               	movwf	display_Datum@jahr_d
  5764                           
  5765                           ;main_Master.c: 267:     LCD_Set_Cursor(fila, columna);
  5766  0FAF  0828               	movf	display_Datum@columna,w
  5767  0FB0  00A9               	movwf	??_display_Datum
  5768  0FB1  0829               	movf	??_display_Datum,w
  5769  0FB2  00F5               	movwf	LCD_Set_Cursor@columna
  5770  0FB3  082C               	movf	display_Datum@fila,w
  5771  0FB4  160A  118A  241D  120A  158A  	fcall	_LCD_Set_Cursor
  5772                           
  5773                           ;main_Master.c: 268:     LCD_Write_Character(dia_d + '0');
  5774  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  5775  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  5776  0FBB  082E               	movf	display_Datum@dia_d,w
  5777  0FBC  3E30               	addlw	48
  5778  0FBD  160A  118A  22D2  120A  158A  	fcall	_LCD_Write_Character
  5779                           
  5780                           ;main_Master.c: 269:     LCD_Write_Character(dia_u + '0');
  5781  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  5782  0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  5783  0FC4  082D               	movf	display_Datum@dia_u,w
  5784  0FC5  3E30               	addlw	48
  5785  0FC6  160A  118A  22D2  120A  158A  	fcall	_LCD_Write_Character
  5786                           
  5787                           ;main_Master.c: 270:     LCD_Write_Character('/');
  5788  0FCB  302F               	movlw	47
  5789  0FCC  160A  118A  22D2  120A  158A  	fcall	_LCD_Write_Character
  5790                           
  5791                           ;main_Master.c: 271:     LCD_Write_Character(mes_d + '0');
  5792  0FD1  1283               	bcf	3,5	;RP0=0, select bank0
  5793  0FD2  1303               	bcf	3,6	;RP1=0, select bank0
  5794  0FD3  0830               	movf	display_Datum@mes_d,w
  5795  0FD4  3E30               	addlw	48
  5796  0FD5  160A  118A  22D2  120A  158A  	fcall	_LCD_Write_Character
  5797                           
  5798                           ;main_Master.c: 272:     LCD_Write_Character(mes_u + '0');
  5799  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  5800  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  5801  0FDC  082F               	movf	display_Datum@mes_u,w
  5802  0FDD  3E30               	addlw	48
  5803  0FDE  160A  118A  22D2  120A  158A  	fcall	_LCD_Write_Character
  5804                           
  5805                           ;main_Master.c: 273:     LCD_Write_Character('/');
  5806  0FE3  302F               	movlw	47
  5807  0FE4  160A  118A  22D2  120A  158A  	fcall	_LCD_Write_Character
  5808                           
  5809                           ;main_Master.c: 274:     LCD_Write_String("20");
  5810  0FE9  30B1               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  5811  0FEA  160A  118A  2378  120A  158A  	fcall	_LCD_Write_String
  5812                           
  5813                           ;main_Master.c: 275:     LCD_Write_Character(jahr_d + '0');
  5814  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  5815  0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  5816  0FF1  0832               	movf	display_Datum@jahr_d,w
  5817  0FF2  3E30               	addlw	48
  5818  0FF3  160A  118A  22D2  120A  158A  	fcall	_LCD_Write_Character
  5819                           
  5820                           ;main_Master.c: 276:     LCD_Write_Character(jahr_u + '0');
  5821  0FF8  1283               	bcf	3,5	;RP0=0, select bank0
  5822  0FF9  1303               	bcf	3,6	;RP1=0, select bank0
  5823  0FFA  0831               	movf	display_Datum@jahr_u,w
  5824  0FFB  3E30               	addlw	48
  5825  0FFC  160A  118A  22D2   	fcall	_LCD_Write_Character
  5826  0FFF  0008               	return
  5827  1000                     __end_of_display_Datum:	
  5828                           
  5829                           	psect	text16
  5830  14AE                     __ptext16:	
  5831 ;; *************** function ___awmod *****************
  5832 ;; Defined at:
  5833 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  5834 ;; Parameters:    Size  Location     Type
  5835 ;;  divisor         2    2[COMMON] int 
  5836 ;;  dividend        2    4[COMMON] int 
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;  sign            1    8[COMMON] unsigned char 
  5839 ;;  counter         1    7[COMMON] unsigned char 
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  2    2[COMMON] int 
  5842 ;; Registers used:
  5843 ;;		wreg, status,2, status,0
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5849 ;;      Params:         4       0       0       0       0
  5850 ;;      Locals:         2       0       0       0       0
  5851 ;;      Temps:          1       0       0       0       0
  5852 ;;      Totals:         7       0       0       0       0
  5853 ;;Total ram usage:        7 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:    1
  5856 ;; This function calls:
  5857 ;;		Nothing
  5858 ;; This function is called by:
  5859 ;;		_display_Uhrzeit
  5860 ;;		_display_Datum
  5861 ;;		_mostrarLCD
  5862 ;;		_DEC_a_BCD
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866                           
  5867                           ;psect for function ___awmod
  5868  14AE                     ___awmod:	
  5869                           
  5870                           ;incstack = 0
  5871                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5872  14AE  01F8               	clrf	___awmod@sign
  5873  14AF  1FF5               	btfss	___awmod@dividend+1,7
  5874  14B0  2CB8               	goto	l3007
  5875  14B1  09F4               	comf	___awmod@dividend,f
  5876  14B2  09F5               	comf	___awmod@dividend+1,f
  5877  14B3  0AF4               	incf	___awmod@dividend,f
  5878  14B4  1903               	skipnz
  5879  14B5  0AF5               	incf	___awmod@dividend+1,f
  5880  14B6  01F8               	clrf	___awmod@sign
  5881  14B7  0AF8               	incf	___awmod@sign,f
  5882  14B8                     l3007:	
  5883  14B8  1FF3               	btfss	___awmod@divisor+1,7
  5884  14B9  2CBF               	goto	l3011
  5885  14BA  09F2               	comf	___awmod@divisor,f
  5886  14BB  09F3               	comf	___awmod@divisor+1,f
  5887  14BC  0AF2               	incf	___awmod@divisor,f
  5888  14BD  1903               	skipnz
  5889  14BE  0AF3               	incf	___awmod@divisor+1,f
  5890  14BF                     l3011:	
  5891  14BF  0872               	movf	___awmod@divisor,w
  5892  14C0  0473               	iorwf	___awmod@divisor+1,w
  5893  14C1  1903               	btfsc	3,2
  5894  14C2  2CEC               	goto	l3029
  5895  14C3  01F7               	clrf	___awmod@counter
  5896  14C4  0AF7               	incf	___awmod@counter,f
  5897  14C5                     l3019:	
  5898  14C5  1BF3               	btfsc	___awmod@divisor+1,7
  5899  14C6  2CD3               	goto	l3021
  5900  14C7  3001               	movlw	1
  5901  14C8                     u1855:	
  5902  14C8  1003               	clrc
  5903  14C9  0DF2               	rlf	___awmod@divisor,f
  5904  14CA  0DF3               	rlf	___awmod@divisor+1,f
  5905  14CB  3EFF               	addlw	-1
  5906  14CC  1D03               	skipz
  5907  14CD  2CC8               	goto	u1855
  5908  14CE  3001               	movlw	1
  5909  14CF  00F6               	movwf	??___awmod
  5910  14D0  0876               	movf	??___awmod,w
  5911  14D1  07F7               	addwf	___awmod@counter,f
  5912  14D2  2CC5               	goto	l3019
  5913  14D3                     l3021:	
  5914  14D3  0873               	movf	___awmod@divisor+1,w
  5915  14D4  0275               	subwf	___awmod@dividend+1,w
  5916  14D5  1D03               	skipz
  5917  14D6  2CD9               	goto	u1875
  5918  14D7  0872               	movf	___awmod@divisor,w
  5919  14D8  0274               	subwf	___awmod@dividend,w
  5920  14D9                     u1875:	
  5921  14D9  1C03               	skipc
  5922  14DA  2CE1               	goto	l3025
  5923  14DB  0872               	movf	___awmod@divisor,w
  5924  14DC  02F4               	subwf	___awmod@dividend,f
  5925  14DD  0873               	movf	___awmod@divisor+1,w
  5926  14DE  1C03               	skipc
  5927  14DF  03F5               	decf	___awmod@dividend+1,f
  5928  14E0  02F5               	subwf	___awmod@dividend+1,f
  5929  14E1                     l3025:	
  5930  14E1  3001               	movlw	1
  5931  14E2                     u1885:	
  5932  14E2  1003               	clrc
  5933  14E3  0CF3               	rrf	___awmod@divisor+1,f
  5934  14E4  0CF2               	rrf	___awmod@divisor,f
  5935  14E5  3EFF               	addlw	-1
  5936  14E6  1D03               	skipz
  5937  14E7  2CE2               	goto	u1885
  5938  14E8  3001               	movlw	1
  5939  14E9  02F7               	subwf	___awmod@counter,f
  5940  14EA  1D03               	btfss	3,2
  5941  14EB  2CD3               	goto	l3021
  5942  14EC                     l3029:	
  5943  14EC  0878               	movf	___awmod@sign,w
  5944  14ED  1903               	btfsc	3,2
  5945  14EE  2CF4               	goto	l3033
  5946  14EF  09F4               	comf	___awmod@dividend,f
  5947  14F0  09F5               	comf	___awmod@dividend+1,f
  5948  14F1  0AF4               	incf	___awmod@dividend,f
  5949  14F2  1903               	skipnz
  5950  14F3  0AF5               	incf	___awmod@dividend+1,f
  5951  14F4                     l3033:	
  5952  14F4  0875               	movf	___awmod@dividend+1,w
  5953  14F5  00F3               	movwf	?___awmod+1
  5954  14F6  0874               	movf	___awmod@dividend,w
  5955  14F7  00F2               	movwf	?___awmod
  5956  14F8  0008               	return
  5957  14F9                     __end_of___awmod:	
  5958                           
  5959                           	psect	text17
  5960  14F9                     __ptext17:	
  5961 ;; *************** function ___awdiv *****************
  5962 ;; Defined at:
  5963 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;  divisor         2    0[BANK0 ] int 
  5966 ;;  dividend        2    2[BANK0 ] int 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;  quotient        2    6[BANK0 ] int 
  5969 ;;  sign            1    5[BANK0 ] unsigned char 
  5970 ;;  counter         1    4[BANK0 ] unsigned char 
  5971 ;; Return value:  Size  Location     Type
  5972 ;;                  2    0[BANK0 ] int 
  5973 ;; Registers used:
  5974 ;;		wreg, status,2, status,0
  5975 ;; Tracked objects:
  5976 ;;		On entry : 0/0
  5977 ;;		On exit  : 0/0
  5978 ;;		Unchanged: 0/0
  5979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5980 ;;      Params:         0       4       0       0       0
  5981 ;;      Locals:         0       4       0       0       0
  5982 ;;      Temps:          1       0       0       0       0
  5983 ;;      Totals:         1       8       0       0       0
  5984 ;;Total ram usage:        9 bytes
  5985 ;; Hardware stack levels used:    1
  5986 ;; Hardware stack levels required when called:    1
  5987 ;; This function calls:
  5988 ;;		Nothing
  5989 ;; This function is called by:
  5990 ;;		_display_Uhrzeit
  5991 ;;		_display_Datum
  5992 ;;		_mostrarLCD
  5993 ;;		_uint_to_array
  5994 ;;		_DEC_a_BCD
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           
  5999                           ;psect for function ___awdiv
  6000  14F9                     ___awdiv:	
  6001                           
  6002                           ;incstack = 0
  6003                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6004  14F9  1283               	bcf	3,5	;RP0=0, select bank0
  6005  14FA  1303               	bcf	3,6	;RP1=0, select bank0
  6006  14FB  01A5               	clrf	___awdiv@sign
  6007  14FC  1FA1               	btfss	___awdiv@divisor+1,7
  6008  14FD  2D05               	goto	l4623
  6009  14FE  09A0               	comf	___awdiv@divisor,f
  6010  14FF  09A1               	comf	___awdiv@divisor+1,f
  6011  1500  0AA0               	incf	___awdiv@divisor,f
  6012  1501  1903               	skipnz
  6013  1502  0AA1               	incf	___awdiv@divisor+1,f
  6014  1503  01A5               	clrf	___awdiv@sign
  6015  1504  0AA5               	incf	___awdiv@sign,f
  6016  1505                     l4623:	
  6017  1505  1FA3               	btfss	___awdiv@dividend+1,7
  6018  1506  2D10               	goto	l4629
  6019  1507  09A2               	comf	___awdiv@dividend,f
  6020  1508  09A3               	comf	___awdiv@dividend+1,f
  6021  1509  0AA2               	incf	___awdiv@dividend,f
  6022  150A  1903               	skipnz
  6023  150B  0AA3               	incf	___awdiv@dividend+1,f
  6024  150C  3001               	movlw	1
  6025  150D  00F8               	movwf	??___awdiv
  6026  150E  0878               	movf	??___awdiv,w
  6027  150F  06A5               	xorwf	___awdiv@sign,f
  6028  1510                     l4629:	
  6029  1510  01A6               	clrf	___awdiv@quotient
  6030  1511  01A7               	clrf	___awdiv@quotient+1
  6031  1512  0820               	movf	___awdiv@divisor,w
  6032  1513  0421               	iorwf	___awdiv@divisor+1,w
  6033  1514  1903               	btfsc	3,2
  6034  1515  2D47               	goto	l4651
  6035  1516  01A4               	clrf	___awdiv@counter
  6036  1517  0AA4               	incf	___awdiv@counter,f
  6037  1518                     l4639:	
  6038  1518  1BA1               	btfsc	___awdiv@divisor+1,7
  6039  1519  2D26               	goto	l4641
  6040  151A  3001               	movlw	1
  6041  151B                     u3235:	
  6042  151B  1003               	clrc
  6043  151C  0DA0               	rlf	___awdiv@divisor,f
  6044  151D  0DA1               	rlf	___awdiv@divisor+1,f
  6045  151E  3EFF               	addlw	-1
  6046  151F  1D03               	skipz
  6047  1520  2D1B               	goto	u3235
  6048  1521  3001               	movlw	1
  6049  1522  00F8               	movwf	??___awdiv
  6050  1523  0878               	movf	??___awdiv,w
  6051  1524  07A4               	addwf	___awdiv@counter,f
  6052  1525  2D18               	goto	l4639
  6053  1526                     l4641:	
  6054  1526  3001               	movlw	1
  6055  1527                     u3255:	
  6056  1527  1003               	clrc
  6057  1528  0DA6               	rlf	___awdiv@quotient,f
  6058  1529  0DA7               	rlf	___awdiv@quotient+1,f
  6059  152A  3EFF               	addlw	-1
  6060  152B  1D03               	skipz
  6061  152C  2D27               	goto	u3255
  6062  152D  0821               	movf	___awdiv@divisor+1,w
  6063  152E  0223               	subwf	___awdiv@dividend+1,w
  6064  152F  1D03               	skipz
  6065  1530  2D33               	goto	u3265
  6066  1531  0820               	movf	___awdiv@divisor,w
  6067  1532  0222               	subwf	___awdiv@dividend,w
  6068  1533                     u3265:	
  6069  1533  1C03               	skipc
  6070  1534  2D3C               	goto	l4647
  6071  1535  0820               	movf	___awdiv@divisor,w
  6072  1536  02A2               	subwf	___awdiv@dividend,f
  6073  1537  0821               	movf	___awdiv@divisor+1,w
  6074  1538  1C03               	skipc
  6075  1539  03A3               	decf	___awdiv@dividend+1,f
  6076  153A  02A3               	subwf	___awdiv@dividend+1,f
  6077  153B  1426               	bsf	___awdiv@quotient,0
  6078  153C                     l4647:	
  6079  153C  3001               	movlw	1
  6080  153D                     u3275:	
  6081  153D  1003               	clrc
  6082  153E  0CA1               	rrf	___awdiv@divisor+1,f
  6083  153F  0CA0               	rrf	___awdiv@divisor,f
  6084  1540  3EFF               	addlw	-1
  6085  1541  1D03               	skipz
  6086  1542  2D3D               	goto	u3275
  6087  1543  3001               	movlw	1
  6088  1544  02A4               	subwf	___awdiv@counter,f
  6089  1545  1D03               	btfss	3,2
  6090  1546  2D26               	goto	l4641
  6091  1547                     l4651:	
  6092  1547  0825               	movf	___awdiv@sign,w
  6093  1548  1903               	btfsc	3,2
  6094  1549  2D4F               	goto	l4655
  6095  154A  09A6               	comf	___awdiv@quotient,f
  6096  154B  09A7               	comf	___awdiv@quotient+1,f
  6097  154C  0AA6               	incf	___awdiv@quotient,f
  6098  154D  1903               	skipnz
  6099  154E  0AA7               	incf	___awdiv@quotient+1,f
  6100  154F                     l4655:	
  6101  154F  0827               	movf	___awdiv@quotient+1,w
  6102  1550  00A1               	movwf	?___awdiv+1
  6103  1551  0826               	movf	___awdiv@quotient,w
  6104  1552  00A0               	movwf	?___awdiv
  6105  1553  0008               	return
  6106  1554                     __end_of___awdiv:	
  6107                           
  6108                           	psect	text18
  6109  1378                     __ptext18:	
  6110 ;; *************** function _LCD_Write_String *****************
  6111 ;; Defined at:
  6112 ;;		line 73 in file "LCD_8bits.c"
  6113 ;; Parameters:    Size  Location     Type
  6114 ;;  a               1    wreg     PTR unsigned char 
  6115 ;;		 -> STR_17(6), STR_16(16), STR_15(3), STR_14(13), 
  6116 ;;		 -> STR_13(5), STR_12(3), STR_11(5), STR_10(3), 
  6117 ;;		 -> STR_9(13), STR_8(4), STR_7(9), STR_6(14), 
  6118 ;;		 -> STR_5(12), STR_4(11), STR_3(13), STR_2(17), 
  6119 ;;		 -> STR_1(3), 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  a               1    6[COMMON] PTR unsigned char 
  6122 ;;		 -> STR_17(6), STR_16(16), STR_15(3), STR_14(13), 
  6123 ;;		 -> STR_13(5), STR_12(3), STR_11(5), STR_10(3), 
  6124 ;;		 -> STR_9(13), STR_8(4), STR_7(9), STR_6(14), 
  6125 ;;		 -> STR_5(12), STR_4(11), STR_3(13), STR_2(17), 
  6126 ;;		 -> STR_1(3), 
  6127 ;;  n               2    4[COMMON] int 
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  1    wreg      void 
  6130 ;; Registers used:
  6131 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/0
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6137 ;;      Params:         0       0       0       0       0
  6138 ;;      Locals:         3       0       0       0       0
  6139 ;;      Temps:          0       0       0       0       0
  6140 ;;      Totals:         3       0       0       0       0
  6141 ;;Total ram usage:        3 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; Hardware stack levels required when called:    2
  6144 ;; This function calls:
  6145 ;;		_LCD_Write_Character
  6146 ;; This function is called by:
  6147 ;;		_display_Datum
  6148 ;;		_mostrarLCD
  6149 ;; This function uses a non-reentrant model
  6150 ;;
  6151                           
  6152                           
  6153                           ;psect for function _LCD_Write_String
  6154  1378                     _LCD_Write_String:	
  6155                           
  6156                           ;incstack = 0
  6157                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6158                           ;LCD_Write_String@a stored from wreg
  6159  1378  00F6               	movwf	LCD_Write_String@a
  6160                           
  6161                           ;LCD_8bits.c: 74:     int n;;LCD_8bits.c: 75:     for(n = 0; a[n] != '\0'; n++){
  6162  1379  01F4               	clrf	LCD_Write_String@n
  6163  137A  01F5               	clrf	LCD_Write_String@n+1
  6164  137B                     l2889:	
  6165  137B  0874               	movf	LCD_Write_String@n,w
  6166  137C  0776               	addwf	LCD_Write_String@a,w
  6167  137D  0084               	movwf	4
  6168  137E  120A  158A  2000  160A  118A  	fcall	stringdir
  6169  1383  3A00               	xorlw	0
  6170  1384  1903               	btfsc	3,2
  6171  1385  0008               	return
  6172                           
  6173                           ;LCD_8bits.c: 76:         LCD_Write_Character(a[n]);
  6174  1386  0874               	movf	LCD_Write_String@n,w
  6175  1387  0776               	addwf	LCD_Write_String@a,w
  6176  1388  0084               	movwf	4
  6177  1389  120A  158A  2000  160A  118A  	fcall	stringdir
  6178  138E  160A  118A  22D2  160A  118A  	fcall	_LCD_Write_Character
  6179                           
  6180                           ;LCD_8bits.c: 77:     }
  6181  1393  3001               	movlw	1
  6182  1394  07F4               	addwf	LCD_Write_String@n,f
  6183  1395  1803               	skipnc
  6184  1396  0AF5               	incf	LCD_Write_String@n+1,f
  6185  1397  3000               	movlw	0
  6186  1398  07F5               	addwf	LCD_Write_String@n+1,f
  6187  1399  2B7B               	goto	l2889
  6188  139A                     __end_of_LCD_Write_String:	
  6189                           
  6190                           	psect	text19
  6191  141D                     __ptext19:	
  6192 ;; *************** function _LCD_Set_Cursor *****************
  6193 ;; Defined at:
  6194 ;;		line 80 in file "LCD_8bits.c"
  6195 ;; Parameters:    Size  Location     Type
  6196 ;;  linea           1    wreg     unsigned char 
  6197 ;;  columna         1    5[COMMON] unsigned char 
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;  linea           1    8[COMMON] unsigned char 
  6200 ;;  corrimiento     1    9[COMMON] unsigned char 
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  1    wreg      void 
  6203 ;; Registers used:
  6204 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6210 ;;      Params:         1       0       0       0       0
  6211 ;;      Locals:         2       0       0       0       0
  6212 ;;      Temps:          2       0       0       0       0
  6213 ;;      Totals:         5       0       0       0       0
  6214 ;;Total ram usage:        5 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; Hardware stack levels required when called:    2
  6217 ;; This function calls:
  6218 ;;		_LCD_Cmd
  6219 ;; This function is called by:
  6220 ;;		_display_Uhrzeit
  6221 ;;		_display_Datum
  6222 ;;		_mostrarLCD
  6223 ;;		_pressBoton2
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           
  6228                           ;psect for function _LCD_Set_Cursor
  6229  141D                     _LCD_Set_Cursor:	
  6230                           
  6231                           ;incstack = 0
  6232                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6233                           ;LCD_Set_Cursor@linea stored from wreg
  6234  141D  00F8               	movwf	LCD_Set_Cursor@linea
  6235                           
  6236                           ;LCD_8bits.c: 82:     switch (linea){
  6237  141E  2C38               	goto	l2877
  6238  141F                     l2867:	
  6239                           
  6240                           ;LCD_8bits.c: 84:             corrimiento = 0x80 + columna;
  6241  141F  0875               	movf	LCD_Set_Cursor@columna,w
  6242  1420  3E80               	addlw	128
  6243  1421  00F6               	movwf	??_LCD_Set_Cursor
  6244  1422  0876               	movf	??_LCD_Set_Cursor,w
  6245  1423  00F9               	movwf	LCD_Set_Cursor@corrimiento
  6246                           
  6247                           ;LCD_8bits.c: 85:             LCD_Cmd(corrimiento);
  6248  1424  0879               	movf	LCD_Set_Cursor@corrimiento,w
  6249  1425  160A  118A  2449   	fcall	_LCD_Cmd
  6250                           
  6251                           ;LCD_8bits.c: 86:             break;
  6252  1428  0008               	return
  6253  1429                     l2871:	
  6254                           
  6255                           ;LCD_8bits.c: 88:             corrimiento = 0x80 + 0x40 + columna;
  6256  1429  0875               	movf	LCD_Set_Cursor@columna,w
  6257  142A  3EC0               	addlw	192
  6258  142B  00F6               	movwf	??_LCD_Set_Cursor
  6259  142C  0876               	movf	??_LCD_Set_Cursor,w
  6260  142D  00F9               	movwf	LCD_Set_Cursor@corrimiento
  6261                           
  6262                           ;LCD_8bits.c: 89:             LCD_Cmd(corrimiento);
  6263  142E  0879               	movf	LCD_Set_Cursor@corrimiento,w
  6264  142F  160A  118A  2449   	fcall	_LCD_Cmd
  6265                           
  6266                           ;LCD_8bits.c: 90:             break;
  6267  1432  0008               	return
  6268  1433                     l2875:	
  6269                           
  6270                           ;LCD_8bits.c: 92:             LCD_Cmd(0x80);
  6271  1433  3080               	movlw	128
  6272  1434  160A  118A  2449   	fcall	_LCD_Cmd
  6273                           
  6274                           ;LCD_8bits.c: 93:     }
  6275  1437  0008               	return
  6276  1438                     l2877:	
  6277  1438  0878               	movf	LCD_Set_Cursor@linea,w
  6278  1439  00F6               	movwf	??_LCD_Set_Cursor
  6279  143A  01F7               	clrf	??_LCD_Set_Cursor+1
  6280                           
  6281                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6282                           ; Switch size 1, requested type "simple"
  6283                           ; Number of cases is 1, Range of values is 0 to 0
  6284                           ; switch strategies available:
  6285                           ; Name         Instructions Cycles
  6286                           ; simple_byte            4     3 (average)
  6287                           ; direct_byte           11     8 (fixed)
  6288                           ; jumptable            260     6 (fixed)
  6289                           ;	Chosen strategy is simple_byte
  6290  143B  0877               	movf	??_LCD_Set_Cursor+1,w
  6291  143C  3A00               	xorlw	0	; case 0
  6292  143D  1903               	skipnz
  6293  143E  2C40               	goto	l5655
  6294  143F  2C33               	goto	l2875
  6295  1440                     l5655:	
  6296                           
  6297                           ; Switch size 1, requested type "simple"
  6298                           ; Number of cases is 2, Range of values is 1 to 2
  6299                           ; switch strategies available:
  6300                           ; Name         Instructions Cycles
  6301                           ; simple_byte            7     4 (average)
  6302                           ; direct_byte           17    11 (fixed)
  6303                           ; jumptable            263     9 (fixed)
  6304                           ;	Chosen strategy is simple_byte
  6305  1440  0876               	movf	??_LCD_Set_Cursor,w
  6306  1441  3A01               	xorlw	1	; case 1
  6307  1442  1903               	skipnz
  6308  1443  2C1F               	goto	l2867
  6309  1444  3A03               	xorlw	3	; case 2
  6310  1445  1903               	skipnz
  6311  1446  2C29               	goto	l2871
  6312  1447  2C33               	goto	l2875
  6313  1448  0008               	return
  6314  1449                     __end_of_LCD_Set_Cursor:	
  6315                           
  6316                           	psect	text20
  6317  05F5                     __ptext20:	
  6318 ;; *************** function _get_Time *****************
  6319 ;; Defined at:
  6320 ;;		line 78 in file "RTC.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;		None
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;		None
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  1    wreg      void 
  6327 ;; Registers used:
  6328 ;;		wreg, status,2, status,0, pclath, cstack
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6334 ;;      Params:         0       0       0       0       0
  6335 ;;      Locals:         0       0       0       0       0
  6336 ;;      Temps:          0       1       0       0       0
  6337 ;;      Totals:         0       1       0       0       0
  6338 ;;Total ram usage:        1 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; Hardware stack levels required when called:    3
  6341 ;; This function calls:
  6342 ;;		_BCD_a_DEC
  6343 ;;		_I2C_Master_Read
  6344 ;;		_I2C_Master_Start
  6345 ;;		_I2C_Master_Stop
  6346 ;;		_I2C_Master_Write
  6347 ;; This function is called by:
  6348 ;;		_main
  6349 ;; This function uses a non-reentrant model
  6350 ;;
  6351                           
  6352                           
  6353                           ;psect for function _get_Time
  6354  05F5                     _get_Time:	
  6355                           
  6356                           ;RTC.c: 79:     I2C_Master_Start();
  6357                           
  6358                           ;incstack = 0
  6359                           ; Regs used in _get_Time: [wreg+status,2+status,0+pclath+cstack]
  6360  05F5  160A  118A  22A9  120A  118A  	fcall	_I2C_Master_Start
  6361                           
  6362                           ;RTC.c: 80:     I2C_Master_Write(0xD0);
  6363  05FA  30D0               	movlw	208
  6364  05FB  00F2               	movwf	I2C_Master_Write@d
  6365  05FC  3000               	movlw	0
  6366  05FD  00F3               	movwf	I2C_Master_Write@d+1
  6367  05FE  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  6368                           
  6369                           ;RTC.c: 81:     I2C_Master_Write(0);
  6370  0603  3000               	movlw	0
  6371  0604  00F2               	movwf	I2C_Master_Write@d
  6372  0605  00F3               	movwf	I2C_Master_Write@d+1
  6373  0606  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  6374                           
  6375                           ;RTC.c: 82:     I2C_Master_Stop();
  6376  060B  160A  118A  22B0  120A  118A  	fcall	_I2C_Master_Stop
  6377                           
  6378                           ;RTC.c: 83:     I2C_Master_Start();
  6379  0610  160A  118A  22A9  120A  118A  	fcall	_I2C_Master_Start
  6380                           
  6381                           ;RTC.c: 84:     I2C_Master_Write(0xD1);
  6382  0615  30D1               	movlw	209
  6383  0616  00F2               	movwf	I2C_Master_Write@d
  6384  0617  3000               	movlw	0
  6385  0618  00F3               	movwf	I2C_Master_Write@d+1
  6386  0619  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  6387                           
  6388                           ;RTC.c: 85:     seg = BCD_a_DEC(I2C_Master_Read(0));
  6389  061E  3000               	movlw	0
  6390  061F  00F2               	movwf	I2C_Master_Read@a
  6391  0620  00F3               	movwf	I2C_Master_Read@a+1
  6392  0621  160A  118A  23C5  120A  118A  	fcall	_I2C_Master_Read
  6393  0626  0872               	movf	?_I2C_Master_Read,w
  6394  0627  160A  118A  2341  120A  118A  	fcall	_BCD_a_DEC
  6395  062C  1283               	bcf	3,5	;RP0=0, select bank0
  6396  062D  1303               	bcf	3,6	;RP1=0, select bank0
  6397  062E  00A0               	movwf	??_get_Time
  6398  062F  0820               	movf	??_get_Time,w
  6399  0630  00FA               	movwf	_seg
  6400                           
  6401                           ;RTC.c: 86:     I2C_Master_Stop();
  6402  0631  160A  118A  22B0  120A  118A  	fcall	_I2C_Master_Stop
  6403                           
  6404                           ;RTC.c: 88:     I2C_Master_Start();
  6405  0636  160A  118A  22A9  120A  118A  	fcall	_I2C_Master_Start
  6406                           
  6407                           ;RTC.c: 89:     I2C_Master_Write(0xD0);
  6408  063B  30D0               	movlw	208
  6409  063C  00F2               	movwf	I2C_Master_Write@d
  6410  063D  3000               	movlw	0
  6411  063E  00F3               	movwf	I2C_Master_Write@d+1
  6412  063F  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  6413                           
  6414                           ;RTC.c: 90:     I2C_Master_Write(1);
  6415  0644  3001               	movlw	1
  6416  0645  00F2               	movwf	I2C_Master_Write@d
  6417  0646  3000               	movlw	0
  6418  0647  00F3               	movwf	I2C_Master_Write@d+1
  6419  0648  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  6420                           
  6421                           ;RTC.c: 91:     I2C_Master_Stop();
  6422  064D  160A  118A  22B0  120A  118A  	fcall	_I2C_Master_Stop
  6423                           
  6424                           ;RTC.c: 92:     I2C_Master_Start();
  6425  0652  160A  118A  22A9  120A  118A  	fcall	_I2C_Master_Start
  6426                           
  6427                           ;RTC.c: 93:     I2C_Master_Write(0xD1);
  6428  0657  30D1               	movlw	209
  6429  0658  00F2               	movwf	I2C_Master_Write@d
  6430  0659  3000               	movlw	0
  6431  065A  00F3               	movwf	I2C_Master_Write@d+1
  6432  065B  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  6433                           
  6434                           ;RTC.c: 94:     min = BCD_a_DEC(I2C_Master_Read(0));
  6435  0660  3000               	movlw	0
  6436  0661  00F2               	movwf	I2C_Master_Read@a
  6437  0662  00F3               	movwf	I2C_Master_Read@a+1
  6438  0663  160A  118A  23C5  120A  118A  	fcall	_I2C_Master_Read
  6439  0668  0872               	movf	?_I2C_Master_Read,w
  6440  0669  160A  118A  2341  120A  118A  	fcall	_BCD_a_DEC
  6441  066E  1283               	bcf	3,5	;RP0=0, select bank0
  6442  066F  1303               	bcf	3,6	;RP1=0, select bank0
  6443  0670  00A0               	movwf	??_get_Time
  6444  0671  0820               	movf	??_get_Time,w
  6445  0672  00EF               	movwf	_min
  6446                           
  6447                           ;RTC.c: 95:     I2C_Master_Stop();
  6448  0673  160A  118A  22B0  120A  118A  	fcall	_I2C_Master_Stop
  6449                           
  6450                           ;RTC.c: 97:     I2C_Master_Start();
  6451  0678  160A  118A  22A9  120A  118A  	fcall	_I2C_Master_Start
  6452                           
  6453                           ;RTC.c: 98:     I2C_Master_Write(0xD0);
  6454  067D  30D0               	movlw	208
  6455  067E  00F2               	movwf	I2C_Master_Write@d
  6456  067F  3000               	movlw	0
  6457  0680  00F3               	movwf	I2C_Master_Write@d+1
  6458  0681  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  6459                           
  6460                           ;RTC.c: 99:     I2C_Master_Write(2);
  6461  0686  3002               	movlw	2
  6462  0687  00F2               	movwf	I2C_Master_Write@d
  6463  0688  3000               	movlw	0
  6464  0689  00F3               	movwf	I2C_Master_Write@d+1
  6465  068A  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  6466                           
  6467                           ;RTC.c: 100:     I2C_Master_Stop();
  6468  068F  160A  118A  22B0  120A  118A  	fcall	_I2C_Master_Stop
  6469                           
  6470                           ;RTC.c: 101:     I2C_Master_Start();
  6471  0694  160A  118A  22A9  120A  118A  	fcall	_I2C_Master_Start
  6472                           
  6473                           ;RTC.c: 102:     I2C_Master_Write(0xD1);
  6474  0699  30D1               	movlw	209
  6475  069A  00F2               	movwf	I2C_Master_Write@d
  6476  069B  3000               	movlw	0
  6477  069C  00F3               	movwf	I2C_Master_Write@d+1
  6478  069D  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  6479                           
  6480                           ;RTC.c: 103:     hora = BCD_a_DEC(I2C_Master_Read(0));
  6481  06A2  3000               	movlw	0
  6482  06A3  00F2               	movwf	I2C_Master_Read@a
  6483  06A4  00F3               	movwf	I2C_Master_Read@a+1
  6484  06A5  160A  118A  23C5  120A  118A  	fcall	_I2C_Master_Read
  6485  06AA  0872               	movf	?_I2C_Master_Read,w
  6486  06AB  160A  118A  2341  120A  118A  	fcall	_BCD_a_DEC
  6487  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  6488  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  6489  06B2  00A0               	movwf	??_get_Time
  6490  06B3  0820               	movf	??_get_Time,w
  6491  06B4  00EE               	movwf	_hora
  6492                           
  6493                           ;RTC.c: 104:     I2C_Master_Stop();
  6494  06B5  160A  118A  22B0  120A  118A  	fcall	_I2C_Master_Stop
  6495                           
  6496                           ;RTC.c: 107:     I2C_Master_Start();
  6497  06BA  160A  118A  22A9  120A  118A  	fcall	_I2C_Master_Start
  6498                           
  6499                           ;RTC.c: 108:     I2C_Master_Write(0xD0);
  6500  06BF  30D0               	movlw	208
  6501  06C0  00F2               	movwf	I2C_Master_Write@d
  6502  06C1  3000               	movlw	0
  6503  06C2  00F3               	movwf	I2C_Master_Write@d+1
  6504  06C3  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  6505                           
  6506                           ;RTC.c: 109:     I2C_Master_Write(3);
  6507  06C8  3003               	movlw	3
  6508  06C9  00F2               	movwf	I2C_Master_Write@d
  6509  06CA  3000               	movlw	0
  6510  06CB  00F3               	movwf	I2C_Master_Write@d+1
  6511  06CC  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  6512                           
  6513                           ;RTC.c: 110:     I2C_Master_Stop();
  6514  06D1  160A  118A  22B0  120A  118A  	fcall	_I2C_Master_Stop
  6515                           
  6516                           ;RTC.c: 111:     I2C_Master_Start();
  6517  06D6  160A  118A  22A9  120A  118A  	fcall	_I2C_Master_Start
  6518                           
  6519                           ;RTC.c: 112:     I2C_Master_Write(0xD1);
  6520  06DB  30D1               	movlw	209
  6521  06DC  00F2               	movwf	I2C_Master_Write@d
  6522  06DD  3000               	movlw	0
  6523  06DE  00F3               	movwf	I2C_Master_Write@d+1
  6524  06DF  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  6525                           
  6526                           ;RTC.c: 113:     dia = BCD_a_DEC(I2C_Master_Read(0));
  6527  06E4  3000               	movlw	0
  6528  06E5  00F2               	movwf	I2C_Master_Read@a
  6529  06E6  00F3               	movwf	I2C_Master_Read@a+1
  6530  06E7  160A  118A  23C5  120A  118A  	fcall	_I2C_Master_Read
  6531  06EC  0872               	movf	?_I2C_Master_Read,w
  6532  06ED  160A  118A  2341  120A  118A  	fcall	_BCD_a_DEC
  6533  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  6534  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  6535  06F4  00A0               	movwf	??_get_Time
  6536  06F5  0820               	movf	??_get_Time,w
  6537  06F6  00ED               	movwf	_dia
  6538                           
  6539                           ;RTC.c: 114:     I2C_Master_Stop();
  6540  06F7  160A  118A  22B0  120A  118A  	fcall	_I2C_Master_Stop
  6541                           
  6542                           ;RTC.c: 116:     I2C_Master_Start();
  6543  06FC  160A  118A  22A9  120A  118A  	fcall	_I2C_Master_Start
  6544                           
  6545                           ;RTC.c: 117:     I2C_Master_Write(0xD0);
  6546  0701  30D0               	movlw	208
  6547  0702  00F2               	movwf	I2C_Master_Write@d
  6548  0703  3000               	movlw	0
  6549  0704  00F3               	movwf	I2C_Master_Write@d+1
  6550  0705  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  6551                           
  6552                           ;RTC.c: 118:     I2C_Master_Write(4);
  6553  070A  3004               	movlw	4
  6554  070B  00F2               	movwf	I2C_Master_Write@d
  6555  070C  3000               	movlw	0
  6556  070D  00F3               	movwf	I2C_Master_Write@d+1
  6557  070E  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  6558                           
  6559                           ;RTC.c: 119:     I2C_Master_Stop();
  6560  0713  160A  118A  22B0  120A  118A  	fcall	_I2C_Master_Stop
  6561                           
  6562                           ;RTC.c: 120:     I2C_Master_Start();
  6563  0718  160A  118A  22A9  120A  118A  	fcall	_I2C_Master_Start
  6564                           
  6565                           ;RTC.c: 121:     I2C_Master_Write(0xD1);
  6566  071D  30D1               	movlw	209
  6567  071E  00F2               	movwf	I2C_Master_Write@d
  6568  071F  3000               	movlw	0
  6569  0720  00F3               	movwf	I2C_Master_Write@d+1
  6570  0721  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  6571                           
  6572                           ;RTC.c: 122:     datum = BCD_a_DEC(I2C_Master_Read(0));
  6573  0726  3000               	movlw	0
  6574  0727  00F2               	movwf	I2C_Master_Read@a
  6575  0728  00F3               	movwf	I2C_Master_Read@a+1
  6576  0729  160A  118A  23C5  120A  118A  	fcall	_I2C_Master_Read
  6577  072E  0872               	movf	?_I2C_Master_Read,w
  6578  072F  160A  118A  2341  120A  118A  	fcall	_BCD_a_DEC
  6579  0734  1283               	bcf	3,5	;RP0=0, select bank0
  6580  0735  1303               	bcf	3,6	;RP1=0, select bank0
  6581  0736  00A0               	movwf	??_get_Time
  6582  0737  0820               	movf	??_get_Time,w
  6583  0738  00EC               	movwf	_datum
  6584                           
  6585                           ;RTC.c: 123:     I2C_Master_Stop();
  6586  0739  160A  118A  22B0  120A  118A  	fcall	_I2C_Master_Stop
  6587                           
  6588                           ;RTC.c: 125:     I2C_Master_Start();
  6589  073E  160A  118A  22A9  120A  118A  	fcall	_I2C_Master_Start
  6590                           
  6591                           ;RTC.c: 126:     I2C_Master_Write(0xD0);
  6592  0743  30D0               	movlw	208
  6593  0744  00F2               	movwf	I2C_Master_Write@d
  6594  0745  3000               	movlw	0
  6595  0746  00F3               	movwf	I2C_Master_Write@d+1
  6596  0747  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  6597                           
  6598                           ;RTC.c: 127:     I2C_Master_Write(5);
  6599  074C  3005               	movlw	5
  6600  074D  00F2               	movwf	I2C_Master_Write@d
  6601  074E  3000               	movlw	0
  6602  074F  00F3               	movwf	I2C_Master_Write@d+1
  6603  0750  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  6604                           
  6605                           ;RTC.c: 128:     I2C_Master_Stop();
  6606  0755  160A  118A  22B0  120A  118A  	fcall	_I2C_Master_Stop
  6607                           
  6608                           ;RTC.c: 129:     I2C_Master_Start();
  6609  075A  160A  118A  22A9  120A  118A  	fcall	_I2C_Master_Start
  6610                           
  6611                           ;RTC.c: 130:     I2C_Master_Write(0xD1);
  6612  075F  30D1               	movlw	209
  6613  0760  00F2               	movwf	I2C_Master_Write@d
  6614  0761  3000               	movlw	0
  6615  0762  00F3               	movwf	I2C_Master_Write@d+1
  6616  0763  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  6617                           
  6618                           ;RTC.c: 131:     mes = BCD_a_DEC(I2C_Master_Read(0));
  6619  0768  3000               	movlw	0
  6620  0769  00F2               	movwf	I2C_Master_Read@a
  6621  076A  00F3               	movwf	I2C_Master_Read@a+1
  6622  076B  160A  118A  23C5  120A  118A  	fcall	_I2C_Master_Read
  6623  0770  0872               	movf	?_I2C_Master_Read,w
  6624  0771  160A  118A  2341  120A  118A  	fcall	_BCD_a_DEC
  6625  0776  1283               	bcf	3,5	;RP0=0, select bank0
  6626  0777  1303               	bcf	3,6	;RP1=0, select bank0
  6627  0778  00A0               	movwf	??_get_Time
  6628  0779  0820               	movf	??_get_Time,w
  6629  077A  00EB               	movwf	_mes
  6630                           
  6631                           ;RTC.c: 132:     I2C_Master_Stop();
  6632  077B  160A  118A  22B0  120A  118A  	fcall	_I2C_Master_Stop
  6633                           
  6634                           ;RTC.c: 134:     I2C_Master_Start();
  6635  0780  160A  118A  22A9  120A  118A  	fcall	_I2C_Master_Start
  6636                           
  6637                           ;RTC.c: 135:     I2C_Master_Write(0xD0);
  6638  0785  30D0               	movlw	208
  6639  0786  00F2               	movwf	I2C_Master_Write@d
  6640  0787  3000               	movlw	0
  6641  0788  00F3               	movwf	I2C_Master_Write@d+1
  6642  0789  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  6643                           
  6644                           ;RTC.c: 136:     I2C_Master_Write(6);
  6645  078E  3006               	movlw	6
  6646  078F  00F2               	movwf	I2C_Master_Write@d
  6647  0790  3000               	movlw	0
  6648  0791  00F3               	movwf	I2C_Master_Write@d+1
  6649  0792  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  6650                           
  6651                           ;RTC.c: 137:     I2C_Master_Stop();
  6652  0797  160A  118A  22B0  120A  118A  	fcall	_I2C_Master_Stop
  6653                           
  6654                           ;RTC.c: 138:     I2C_Master_Start();
  6655  079C  160A  118A  22A9  120A  118A  	fcall	_I2C_Master_Start
  6656                           
  6657                           ;RTC.c: 139:     I2C_Master_Write(0xD1);
  6658  07A1  30D1               	movlw	209
  6659  07A2  00F2               	movwf	I2C_Master_Write@d
  6660  07A3  3000               	movlw	0
  6661  07A4  00F3               	movwf	I2C_Master_Write@d+1
  6662  07A5  160A  118A  22B7  120A  118A  	fcall	_I2C_Master_Write
  6663                           
  6664                           ;RTC.c: 140:     jahr = BCD_a_DEC(I2C_Master_Read(0));
  6665  07AA  3000               	movlw	0
  6666  07AB  00F2               	movwf	I2C_Master_Read@a
  6667  07AC  00F3               	movwf	I2C_Master_Read@a+1
  6668  07AD  160A  118A  23C5  120A  118A  	fcall	_I2C_Master_Read
  6669  07B2  0872               	movf	?_I2C_Master_Read,w
  6670  07B3  160A  118A  2341  120A  118A  	fcall	_BCD_a_DEC
  6671  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  6672  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  6673  07BA  00A0               	movwf	??_get_Time
  6674  07BB  0820               	movf	??_get_Time,w
  6675  07BC  00EA               	movwf	_jahr
  6676                           
  6677                           ;RTC.c: 141:     I2C_Master_Stop();
  6678  07BD  160A  118A  22B0   	fcall	_I2C_Master_Stop
  6679  07C0  0008               	return
  6680  07C1                     __end_of_get_Time:	
  6681                           
  6682                           	psect	text21
  6683  1341                     __ptext21:	
  6684 ;; *************** function _BCD_a_DEC *****************
  6685 ;; Defined at:
  6686 ;;		line 27 in file "RTC.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;  numBCD          1    wreg     unsigned char 
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;  numBCD          1    9[COMMON] unsigned char 
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  1    wreg      unsigned char 
  6693 ;; Registers used:
  6694 ;;		wreg, status,2, status,0, pclath, cstack
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 0/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6700 ;;      Params:         0       0       0       0       0
  6701 ;;      Locals:         1       0       0       0       0
  6702 ;;      Temps:          3       0       0       0       0
  6703 ;;      Totals:         4       0       0       0       0
  6704 ;;Total ram usage:        4 bytes
  6705 ;; Hardware stack levels used:    1
  6706 ;; Hardware stack levels required when called:    2
  6707 ;; This function calls:
  6708 ;;		___bmul
  6709 ;; This function is called by:
  6710 ;;		_get_Time
  6711 ;;		_get_hora
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           
  6716                           ;psect for function _BCD_a_DEC
  6717  1341                     _BCD_a_DEC:	
  6718                           
  6719                           ;incstack = 0
  6720                           ; Regs used in _BCD_a_DEC: [wreg+status,2+status,0+pclath+cstack]
  6721                           ;BCD_a_DEC@numBCD stored from wreg
  6722  1341  00F9               	movwf	BCD_a_DEC@numBCD
  6723                           
  6724                           ;RTC.c: 28:     return (numBCD >> 4) * 10 + (numBCD & 0x0F);
  6725  1342  300F               	movlw	15
  6726  1343  0579               	andwf	BCD_a_DEC@numBCD,w
  6727  1344  00F6               	movwf	??_BCD_a_DEC
  6728  1345  300A               	movlw	10
  6729  1346  00F7               	movwf	??_BCD_a_DEC+1
  6730  1347  0877               	movf	??_BCD_a_DEC+1,w
  6731  1348  00F2               	movwf	___bmul@multiplicand
  6732  1349  0879               	movf	BCD_a_DEC@numBCD,w
  6733  134A  00F8               	movwf	??_BCD_a_DEC+2
  6734  134B  3004               	movlw	4
  6735  134C                     u1965:	
  6736  134C  1003               	clrc
  6737  134D  0CF8               	rrf	??_BCD_a_DEC+2,f
  6738  134E  3EFF               	addlw	-1
  6739  134F  1D03               	skipz
  6740  1350  2B4C               	goto	u1965
  6741  1351  0878               	movf	??_BCD_a_DEC+2,w
  6742  1352  160A  118A  22E1   	fcall	___bmul
  6743  1355  0776               	addwf	??_BCD_a_DEC,w
  6744  1356  0008               	return
  6745  1357                     __end_of_BCD_a_DEC:	
  6746                           
  6747                           	psect	text22
  6748  12E1                     __ptext22:	
  6749 ;; *************** function ___bmul *****************
  6750 ;; Defined at:
  6751 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;  multiplier      1    wreg     unsigned char 
  6754 ;;  multiplicand    1    2[COMMON] unsigned char 
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;  multiplier      1    5[COMMON] unsigned char 
  6757 ;;  product         1    4[COMMON] unsigned char 
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  1    wreg      unsigned char 
  6760 ;; Registers used:
  6761 ;;		wreg, status,2, status,0
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6767 ;;      Params:         1       0       0       0       0
  6768 ;;      Locals:         2       0       0       0       0
  6769 ;;      Temps:          1       0       0       0       0
  6770 ;;      Totals:         4       0       0       0       0
  6771 ;;Total ram usage:        4 bytes
  6772 ;; Hardware stack levels used:    1
  6773 ;; Hardware stack levels required when called:    1
  6774 ;; This function calls:
  6775 ;;		Nothing
  6776 ;; This function is called by:
  6777 ;;		_BCD_a_DEC
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           
  6782                           ;psect for function ___bmul
  6783  12E1                     ___bmul:	
  6784                           
  6785                           ;incstack = 0
  6786                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6787                           ;___bmul@multiplier stored from wreg
  6788  12E1  00F5               	movwf	___bmul@multiplier
  6789  12E2  01F4               	clrf	___bmul@product
  6790  12E3                     l2919:	
  6791  12E3  1C75               	btfss	___bmul@multiplier,0
  6792  12E4  2AE9               	goto	l2923
  6793  12E5  0872               	movf	___bmul@multiplicand,w
  6794  12E6  00F3               	movwf	??___bmul
  6795  12E7  0873               	movf	??___bmul,w
  6796  12E8  07F4               	addwf	___bmul@product,f
  6797  12E9                     l2923:	
  6798  12E9  1003               	clrc
  6799  12EA  0DF2               	rlf	___bmul@multiplicand,f
  6800  12EB  1003               	clrc
  6801  12EC  0CF5               	rrf	___bmul@multiplier,f
  6802  12ED  0875               	movf	___bmul@multiplier,w
  6803  12EE  1D03               	btfss	3,2
  6804  12EF  2AE3               	goto	l2919
  6805  12F0  0874               	movf	___bmul@product,w
  6806  12F1  0008               	return
  6807  12F2                     __end_of___bmul:	
  6808                           
  6809                           	psect	text23
  6810  139A                     __ptext23:	
  6811 ;; *************** function _get_PICslave *****************
  6812 ;; Defined at:
  6813 ;;		line 563 in file "main_Master.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;  address         1    wreg     unsigned char 
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;  address         1    0[BANK0 ] unsigned char 
  6818 ;;  dato            1    1[BANK0 ] unsigned char 
  6819 ;; Return value:  Size  Location     Type
  6820 ;;                  1    wreg      unsigned char 
  6821 ;; Registers used:
  6822 ;;		wreg, status,2, status,0, pclath, cstack
  6823 ;; Tracked objects:
  6824 ;;		On entry : 0/0
  6825 ;;		On exit  : 0/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6828 ;;      Params:         0       0       0       0       0
  6829 ;;      Locals:         0       2       0       0       0
  6830 ;;      Temps:          2       0       0       0       0
  6831 ;;      Totals:         2       2       0       0       0
  6832 ;;Total ram usage:        4 bytes
  6833 ;; Hardware stack levels used:    1
  6834 ;; Hardware stack levels required when called:    3
  6835 ;; This function calls:
  6836 ;;		_I2C_Master_Read
  6837 ;;		_I2C_Master_Start
  6838 ;;		_I2C_Master_Stop
  6839 ;;		_I2C_Master_Write
  6840 ;; This function is called by:
  6841 ;;		_main
  6842 ;; This function uses a non-reentrant model
  6843 ;;
  6844                           
  6845                           
  6846                           ;psect for function _get_PICslave
  6847  139A                     _get_PICslave:	
  6848                           
  6849                           ;incstack = 0
  6850                           ; Regs used in _get_PICslave: [wreg+status,2+status,0+pclath+cstack]
  6851                           ;get_PICslave@address stored from wreg
  6852  139A  1283               	bcf	3,5	;RP0=0, select bank0
  6853  139B  1303               	bcf	3,6	;RP1=0, select bank0
  6854  139C  00A0               	movwf	get_PICslave@address
  6855                           
  6856                           ;main_Master.c: 564:     I2C_Master_Start();
  6857  139D  160A  118A  22A9  160A  118A  	fcall	_I2C_Master_Start
  6858                           
  6859                           ;main_Master.c: 565:     I2C_Master_Write(address);
  6860  13A2  1283               	bcf	3,5	;RP0=0, select bank0
  6861  13A3  1303               	bcf	3,6	;RP1=0, select bank0
  6862  13A4  0820               	movf	get_PICslave@address,w
  6863  13A5  00F8               	movwf	??_get_PICslave
  6864  13A6  01F9               	clrf	??_get_PICslave+1
  6865  13A7  0878               	movf	??_get_PICslave,w
  6866  13A8  00F2               	movwf	I2C_Master_Write@d
  6867  13A9  0879               	movf	??_get_PICslave+1,w
  6868  13AA  00F3               	movwf	I2C_Master_Write@d+1
  6869  13AB  160A  118A  22B7  160A  118A  	fcall	_I2C_Master_Write
  6870                           
  6871                           ;main_Master.c: 566:     uint8_t dato = I2C_Master_Read(0);
  6872  13B0  3000               	movlw	0
  6873  13B1  00F2               	movwf	I2C_Master_Read@a
  6874  13B2  00F3               	movwf	I2C_Master_Read@a+1
  6875  13B3  160A  118A  23C5  160A  118A  	fcall	_I2C_Master_Read
  6876  13B8  0872               	movf	?_I2C_Master_Read,w
  6877  13B9  00F8               	movwf	??_get_PICslave
  6878  13BA  0878               	movf	??_get_PICslave,w
  6879  13BB  1283               	bcf	3,5	;RP0=0, select bank0
  6880  13BC  1303               	bcf	3,6	;RP1=0, select bank0
  6881  13BD  00A1               	movwf	get_PICslave@dato
  6882                           
  6883                           ;main_Master.c: 567:     I2C_Master_Stop();
  6884  13BE  160A  118A  22B0   	fcall	_I2C_Master_Stop
  6885                           
  6886                           ;main_Master.c: 568:     return dato;
  6887  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  6888  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  6889  13C3  0821               	movf	get_PICslave@dato,w
  6890  13C4  0008               	return
  6891  13C5                     __end_of_get_PICslave:	
  6892                           
  6893                           	psect	text24
  6894  08FE                     __ptext24:	
  6895 ;; *************** function _SetUp *****************
  6896 ;; Defined at:
  6897 ;;		line 178 in file "main_Master.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;		None
  6900 ;; Auto vars:     Size  Location     Type
  6901 ;;		None
  6902 ;; Return value:  Size  Location     Type
  6903 ;;                  1    wreg      void 
  6904 ;; Registers used:
  6905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6906 ;; Tracked objects:
  6907 ;;		On entry : 0/0
  6908 ;;		On exit  : 0/0
  6909 ;;		Unchanged: 0/0
  6910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6911 ;;      Params:         0       0       0       0       0
  6912 ;;      Locals:         0       0       0       0       0
  6913 ;;      Temps:          0       1       0       0       0
  6914 ;;      Totals:         0       1       0       0       0
  6915 ;;Total ram usage:        1 bytes
  6916 ;; Hardware stack levels used:    1
  6917 ;; Hardware stack levels required when called:    4
  6918 ;; This function calls:
  6919 ;;		_I2C_Master_Init
  6920 ;;		_IMU_init
  6921 ;;		_LCD_Create_Char
  6922 ;;		_LCD_clear
  6923 ;;		_LCD_init
  6924 ;;		_OSC_config
  6925 ;;		_uart_init
  6926 ;; This function is called by:
  6927 ;;		_main
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           
  6932                           ;psect for function _SetUp
  6933  08FE                     _SetUp:	
  6934                           
  6935                           ;main_Master.c: 179:     TRISC = 0;
  6936                           
  6937                           ;incstack = 0
  6938                           ; Regs used in _SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6939  08FE  1683               	bsf	3,5	;RP0=1, select bank1
  6940  08FF  1303               	bcf	3,6	;RP1=0, select bank1
  6941  0900  0187               	clrf	7	;volatile
  6942                           
  6943                           ;main_Master.c: 180:     PORTC = 0;
  6944  0901  1283               	bcf	3,5	;RP0=0, select bank0
  6945  0902  1303               	bcf	3,6	;RP1=0, select bank0
  6946  0903  0187               	clrf	7	;volatile
  6947                           
  6948                           ;main_Master.c: 181:     TRISB = 0;
  6949  0904  1683               	bsf	3,5	;RP0=1, select bank1
  6950  0905  1303               	bcf	3,6	;RP1=0, select bank1
  6951  0906  0186               	clrf	6	;volatile
  6952                           
  6953                           ;main_Master.c: 182:     OSC_config(4000000);
  6954  0907  3000               	movlw	0
  6955  0908  00F5               	movwf	OSC_config@frecuencia+3
  6956  0909  303D               	movlw	61
  6957  090A  00F4               	movwf	OSC_config@frecuencia+2
  6958  090B  3009               	movlw	9
  6959  090C  00F3               	movwf	OSC_config@frecuencia+1
  6960  090D  3000               	movlw	0
  6961  090E  00F2               	movwf	OSC_config@frecuencia
  6962  090F  120A  158A  237F  120A  158A  	fcall	_OSC_config
  6963                           
  6964                           ;main_Master.c: 183:     TRISB = 0b00000110;
  6965  0914  3006               	movlw	6
  6966  0915  1683               	bsf	3,5	;RP0=1, select bank1
  6967  0916  1303               	bcf	3,6	;RP1=0, select bank1
  6968  0917  0086               	movwf	6	;volatile
  6969                           
  6970                           ;main_Master.c: 184:     ANSELH = 0;
  6971  0918  1683               	bsf	3,5	;RP0=1, select bank3
  6972  0919  1703               	bsf	3,6	;RP1=1, select bank3
  6973  091A  0189               	clrf	9	;volatile
  6974                           
  6975                           ;main_Master.c: 185:     WPUB = 0b00000110;
  6976  091B  3006               	movlw	6
  6977  091C  1683               	bsf	3,5	;RP0=1, select bank1
  6978  091D  1303               	bcf	3,6	;RP1=0, select bank1
  6979  091E  0095               	movwf	21	;volatile
  6980                           
  6981                           ;main_Master.c: 186:     OPTION_REGbits.nRBPU = 0;
  6982  091F  1381               	bcf	1,7	;volatile
  6983                           
  6984                           ;main_Master.c: 187:     IOCB = 0b00000110;
  6985  0920  3006               	movlw	6
  6986  0921  0096               	movwf	22	;volatile
  6987                           
  6988                           ;main_Master.c: 188:     INTCONbits.RBIE = 1;
  6989  0922  158B               	bsf	11,3	;volatile
  6990                           
  6991                           ;main_Master.c: 189:     INTCONbits.GIE = 1;
  6992  0923  178B               	bsf	11,7	;volatile
  6993                           
  6994                           ;main_Master.c: 190:     TRISD = 0;
  6995  0924  0188               	clrf	8	;volatile
  6996                           
  6997                           ;main_Master.c: 191:     TRISC0 = 0;
  6998  0925  1007               	bcf	7,0	;volatile
  6999                           
  7000                           ;main_Master.c: 192:     TRISC1 = 0;
  7001  0926  1087               	bcf	7,1	;volatile
  7002                           
  7003                           ;main_Master.c: 193:     LCD_init();
  7004  0927  160A  118A  25B4  120A  158A  	fcall	_LCD_init
  7005                           
  7006                           ;main_Master.c: 194:     LCD_Create_Char(0, atilde);
  7007  092C  3011               	movlw	(low ((_atilde-__stringbase)| (0+32768)))& (0+255)
  7008  092D  1283               	bcf	3,5	;RP0=0, select bank0
  7009  092E  1303               	bcf	3,6	;RP1=0, select bank0
  7010  092F  00AE               	movwf	??_SetUp
  7011  0930  082E               	movf	??_SetUp,w
  7012  0931  00F5               	movwf	LCD_Create_Char@chardata
  7013  0932  3000               	movlw	0
  7014  0933  160A  118A  23F1  120A  158A  	fcall	_LCD_Create_Char
  7015                           
  7016                           ;main_Master.c: 195:     LCD_Create_Char(1, arrowr);
  7017  0938  3021               	movlw	(low ((_arrowr-__stringbase)| (0+32768)))& (0+255)
  7018  0939  1283               	bcf	3,5	;RP0=0, select bank0
  7019  093A  1303               	bcf	3,6	;RP1=0, select bank0
  7020  093B  00AE               	movwf	??_SetUp
  7021  093C  082E               	movf	??_SetUp,w
  7022  093D  00F5               	movwf	LCD_Create_Char@chardata
  7023  093E  3001               	movlw	1
  7024  093F  160A  118A  23F1  120A  158A  	fcall	_LCD_Create_Char
  7025                           
  7026                           ;main_Master.c: 196:     LCD_Create_Char(2, termometro);
  7027  0944  3009               	movlw	(low ((_termometro-__stringbase)| (0+32768)))& (0+255)
  7028  0945  1283               	bcf	3,5	;RP0=0, select bank0
  7029  0946  1303               	bcf	3,6	;RP1=0, select bank0
  7030  0947  00AE               	movwf	??_SetUp
  7031  0948  082E               	movf	??_SetUp,w
  7032  0949  00F5               	movwf	LCD_Create_Char@chardata
  7033  094A  3002               	movlw	2
  7034  094B  160A  118A  23F1  120A  158A  	fcall	_LCD_Create_Char
  7035                           
  7036                           ;main_Master.c: 197:     LCD_Create_Char(3, gota);
  7037  0950  3001               	movlw	(low ((_gota-__stringbase)| (0+32768)))& (0+255)
  7038  0951  1283               	bcf	3,5	;RP0=0, select bank0
  7039  0952  1303               	bcf	3,6	;RP1=0, select bank0
  7040  0953  00AE               	movwf	??_SetUp
  7041  0954  082E               	movf	??_SetUp,w
  7042  0955  00F5               	movwf	LCD_Create_Char@chardata
  7043  0956  3003               	movlw	3
  7044  0957  160A  118A  23F1  120A  158A  	fcall	_LCD_Create_Char
  7045                           
  7046                           ;main_Master.c: 198:     LCD_Create_Char(4, arrowr_vacio);
  7047  095C  3019               	movlw	(low ((_arrowr_vacio-__stringbase)| (0+32768)))& (0+255)
  7048  095D  1283               	bcf	3,5	;RP0=0, select bank0
  7049  095E  1303               	bcf	3,6	;RP1=0, select bank0
  7050  095F  00AE               	movwf	??_SetUp
  7051  0960  082E               	movf	??_SetUp,w
  7052  0961  00F5               	movwf	LCD_Create_Char@chardata
  7053  0962  3004               	movlw	4
  7054  0963  160A  118A  23F1  120A  158A  	fcall	_LCD_Create_Char
  7055                           
  7056                           ;main_Master.c: 199:     LCD_clear();
  7057  0968  160A  118A  232B  120A  158A  	fcall	_LCD_clear
  7058                           
  7059                           ;main_Master.c: 200:     uart_init(9600);
  7060  096D  3080               	movlw	128
  7061  096E  00F2               	movwf	?_uart_init
  7062  096F  3025               	movlw	37
  7063  0970  00F3               	movwf	?_uart_init+1
  7064  0971  160A  118A  2316  120A  158A  	fcall	_uart_init
  7065                           
  7066                           ;main_Master.c: 201:     I2C_Master_Init(100000);
  7067  0976  3000               	movlw	0
  7068  0977  1283               	bcf	3,5	;RP0=0, select bank0
  7069  0978  1303               	bcf	3,6	;RP1=0, select bank0
  7070  0979  00A9               	movwf	I2C_Master_Init@c+3
  7071  097A  3001               	movlw	1
  7072  097B  00A8               	movwf	I2C_Master_Init@c+2
  7073  097C  3086               	movlw	134
  7074  097D  00A7               	movwf	I2C_Master_Init@c+1
  7075  097E  30A0               	movlw	160
  7076  097F  00A6               	movwf	I2C_Master_Init@c
  7077  0980  160A  118A  2478  120A  158A  	fcall	_I2C_Master_Init
  7078                           
  7079                           ;main_Master.c: 202:     IMU_init();
  7080  0985  120A  158A  2597   	fcall	_IMU_init
  7081  0988  0008               	return
  7082  0989                     __end_of_SetUp:	
  7083                           
  7084                           	psect	text25
  7085  1316                     __ptext25:	
  7086 ;; *************** function _uart_init *****************
  7087 ;; Defined at:
  7088 ;;		line 13 in file "UART.c"
  7089 ;; Parameters:    Size  Location     Type
  7090 ;;		None
  7091 ;; Auto vars:     Size  Location     Type
  7092 ;;		None
  7093 ;; Return value:  Size  Location     Type
  7094 ;;                  1    wreg      void 
  7095 ;; Registers used:
  7096 ;;		wreg, status,2
  7097 ;; Tracked objects:
  7098 ;;		On entry : 0/0
  7099 ;;		On exit  : 0/0
  7100 ;;		Unchanged: 0/0
  7101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7102 ;;      Params:         2       0       0       0       0
  7103 ;;      Locals:         0       0       0       0       0
  7104 ;;      Temps:          0       0       0       0       0
  7105 ;;      Totals:         2       0       0       0       0
  7106 ;;Total ram usage:        2 bytes
  7107 ;; Hardware stack levels used:    1
  7108 ;; Hardware stack levels required when called:    1
  7109 ;; This function calls:
  7110 ;;		Nothing
  7111 ;; This function is called by:
  7112 ;;		_SetUp
  7113 ;; This function uses a non-reentrant model
  7114 ;;
  7115                           
  7116                           
  7117                           ;psect for function _uart_init
  7118  1316                     _uart_init:	
  7119                           
  7120                           ;UART.c: 14:     TXSTAbits.SYNC = 0;
  7121                           
  7122                           ;incstack = 0
  7123                           ; Regs used in _uart_init: [wreg+status,2]
  7124  1316  1683               	bsf	3,5	;RP0=1, select bank1
  7125  1317  1303               	bcf	3,6	;RP1=0, select bank1
  7126  1318  1218               	bcf	24,4	;volatile
  7127                           
  7128                           ;UART.c: 15:     TXSTAbits.BRGH = 1;
  7129  1319  1518               	bsf	24,2	;volatile
  7130                           
  7131                           ;UART.c: 16:     BAUDCTLbits.BRG16 = 1;
  7132  131A  1683               	bsf	3,5	;RP0=1, select bank3
  7133  131B  1703               	bsf	3,6	;RP1=1, select bank3
  7134  131C  1587               	bsf	7,3	;volatile
  7135                           
  7136                           ;UART.c: 17:     SPBRG = 103;
  7137  131D  3067               	movlw	103
  7138  131E  1683               	bsf	3,5	;RP0=1, select bank1
  7139  131F  1303               	bcf	3,6	;RP1=0, select bank1
  7140  1320  0099               	movwf	25	;volatile
  7141                           
  7142                           ;UART.c: 18:     SPBRGH = 0;
  7143  1321  019A               	clrf	26	;volatile
  7144                           
  7145                           ;UART.c: 20:     RCSTAbits.SPEN = 1;
  7146  1322  1283               	bcf	3,5	;RP0=0, select bank0
  7147  1323  1303               	bcf	3,6	;RP1=0, select bank0
  7148  1324  1798               	bsf	24,7	;volatile
  7149                           
  7150                           ;UART.c: 21:     RCSTAbits.RX9 = 0;
  7151  1325  1318               	bcf	24,6	;volatile
  7152                           
  7153                           ;UART.c: 22:     RCSTAbits.CREN = 1;
  7154  1326  1618               	bsf	24,4	;volatile
  7155                           
  7156                           ;UART.c: 24:     TXSTAbits.TXEN = 1;
  7157  1327  1683               	bsf	3,5	;RP0=1, select bank1
  7158  1328  1303               	bcf	3,6	;RP1=0, select bank1
  7159  1329  1698               	bsf	24,5	;volatile
  7160  132A  0008               	return
  7161  132B                     __end_of_uart_init:	
  7162                           
  7163                           	psect	text26
  7164  0B7F                     __ptext26:	
  7165 ;; *************** function _OSC_config *****************
  7166 ;; Defined at:
  7167 ;;		line 207 in file "main_Master.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;  frecuencia      4    2[COMMON] unsigned long 
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;		None
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  1    wreg      void 
  7174 ;; Registers used:
  7175 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7181 ;;      Params:         4       0       0       0       0
  7182 ;;      Locals:         0       0       0       0       0
  7183 ;;      Temps:          0       0       0       0       0
  7184 ;;      Totals:         4       0       0       0       0
  7185 ;;Total ram usage:        4 bytes
  7186 ;; Hardware stack levels used:    1
  7187 ;; Hardware stack levels required when called:    1
  7188 ;; This function calls:
  7189 ;;		Nothing
  7190 ;; This function is called by:
  7191 ;;		_SetUp
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           
  7196                           ;psect for function _OSC_config
  7197  0B7F                     _OSC_config:	
  7198                           
  7199                           ;main_Master.c: 208:     switch(frecuencia){
  7200                           
  7201                           ;incstack = 0
  7202                           ; Regs used in _OSC_config: [wreg-fsr0h+status,2+status,0]
  7203  0B7F  2BBB               	goto	l3057
  7204  0B80                     l3039:	
  7205                           
  7206                           ;main_Master.c: 210:             OSCCONbits.IRCF = 0b111;
  7207  0B80  3070               	movlw	112
  7208  0B81  1683               	bsf	3,5	;RP0=1, select bank1
  7209  0B82  1303               	bcf	3,6	;RP1=0, select bank1
  7210  0B83  048F               	iorwf	15,f	;volatile
  7211                           
  7212                           ;main_Master.c: 211:             break;
  7213  0B84  0008               	return
  7214  0B85                     l3041:	
  7215                           
  7216                           ;main_Master.c: 213:             OSCCONbits.IRCF = 0b110;
  7217  0B85  1683               	bsf	3,5	;RP0=1, select bank1
  7218  0B86  1303               	bcf	3,6	;RP1=0, select bank1
  7219  0B87  080F               	movf	15,w	;volatile
  7220  0B88  398F               	andlw	-113
  7221  0B89  3860               	iorlw	96
  7222  0B8A  008F               	movwf	15	;volatile
  7223                           
  7224                           ;main_Master.c: 214:             break;
  7225  0B8B  0008               	return
  7226  0B8C                     l3043:	
  7227                           
  7228                           ;main_Master.c: 216:             OSCCONbits.IRCF = 0b101;
  7229  0B8C  1683               	bsf	3,5	;RP0=1, select bank1
  7230  0B8D  1303               	bcf	3,6	;RP1=0, select bank1
  7231  0B8E  080F               	movf	15,w	;volatile
  7232  0B8F  398F               	andlw	-113
  7233  0B90  3850               	iorlw	80
  7234  0B91  008F               	movwf	15	;volatile
  7235                           
  7236                           ;main_Master.c: 217:             break;
  7237  0B92  0008               	return
  7238  0B93                     l3045:	
  7239                           
  7240                           ;main_Master.c: 219:             OSCCONbits.IRCF = 0b100;
  7241  0B93  1683               	bsf	3,5	;RP0=1, select bank1
  7242  0B94  1303               	bcf	3,6	;RP1=0, select bank1
  7243  0B95  080F               	movf	15,w	;volatile
  7244  0B96  398F               	andlw	-113
  7245  0B97  3840               	iorlw	64
  7246  0B98  008F               	movwf	15	;volatile
  7247                           
  7248                           ;main_Master.c: 220:             break;
  7249  0B99  0008               	return
  7250  0B9A                     l3047:	
  7251                           
  7252                           ;main_Master.c: 222:             OSCCONbits.IRCF = 0b011;
  7253  0B9A  1683               	bsf	3,5	;RP0=1, select bank1
  7254  0B9B  1303               	bcf	3,6	;RP1=0, select bank1
  7255  0B9C  080F               	movf	15,w	;volatile
  7256  0B9D  398F               	andlw	-113
  7257  0B9E  3830               	iorlw	48
  7258  0B9F  008F               	movwf	15	;volatile
  7259                           
  7260                           ;main_Master.c: 223:             break;
  7261  0BA0  0008               	return
  7262  0BA1                     l3049:	
  7263                           
  7264                           ;main_Master.c: 225:             OSCCONbits.IRCF = 0b010;
  7265  0BA1  1683               	bsf	3,5	;RP0=1, select bank1
  7266  0BA2  1303               	bcf	3,6	;RP1=0, select bank1
  7267  0BA3  080F               	movf	15,w	;volatile
  7268  0BA4  398F               	andlw	-113
  7269  0BA5  3820               	iorlw	32
  7270  0BA6  008F               	movwf	15	;volatile
  7271                           
  7272                           ;main_Master.c: 226:             break;
  7273  0BA7  0008               	return
  7274  0BA8                     l3051:	
  7275                           
  7276                           ;main_Master.c: 228:             OSCCONbits.IRCF = 0b001;
  7277  0BA8  1683               	bsf	3,5	;RP0=1, select bank1
  7278  0BA9  1303               	bcf	3,6	;RP1=0, select bank1
  7279  0BAA  080F               	movf	15,w	;volatile
  7280  0BAB  398F               	andlw	-113
  7281  0BAC  3810               	iorlw	16
  7282  0BAD  008F               	movwf	15	;volatile
  7283                           
  7284                           ;main_Master.c: 229:             break;
  7285  0BAE  0008               	return
  7286  0BAF                     l3053:	
  7287                           
  7288                           ;main_Master.c: 231:             OSCCONbits.IRCF = 0b000;
  7289  0BAF  308F               	movlw	-113
  7290  0BB0  1683               	bsf	3,5	;RP0=1, select bank1
  7291  0BB1  1303               	bcf	3,6	;RP1=0, select bank1
  7292  0BB2  058F               	andwf	15,f	;volatile
  7293                           
  7294                           ;main_Master.c: 232:             break;
  7295  0BB3  0008               	return
  7296  0BB4                     l3055:	
  7297                           
  7298                           ;main_Master.c: 234:             OSCCONbits.IRCF = 0b110;
  7299  0BB4  1683               	bsf	3,5	;RP0=1, select bank1
  7300  0BB5  1303               	bcf	3,6	;RP1=0, select bank1
  7301  0BB6  080F               	movf	15,w	;volatile
  7302  0BB7  398F               	andlw	-113
  7303  0BB8  3860               	iorlw	96
  7304  0BB9  008F               	movwf	15	;volatile
  7305                           
  7306                           ;main_Master.c: 235:     }
  7307  0BBA  0008               	return
  7308  0BBB                     l3057:	
  7309                           
  7310                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 9 sub-sw
      +                          itches
  7311                           ; Switch size 1, requested type "simple"
  7312                           ; Number of cases is 1, Range of values is 0 to 0
  7313                           ; switch strategies available:
  7314                           ; Name         Instructions Cycles
  7315                           ; simple_byte            4     3 (average)
  7316                           ; direct_byte           11     8 (fixed)
  7317                           ; jumptable            260     6 (fixed)
  7318                           ;	Chosen strategy is simple_byte
  7319  0BBB  0875               	movf	OSC_config@frecuencia+3,w
  7320  0BBC  3A00               	xorlw	0	; case 0
  7321  0BBD  1903               	skipnz
  7322  0BBE  2C10               	goto	l5673
  7323  0BBF  2BB4               	goto	l3055
  7324  0BC0                     l5657:	
  7325                           
  7326                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7327                           ; Switch size 1, requested type "simple"
  7328                           ; Number of cases is 1, Range of values is 125 to 125
  7329                           ; switch strategies available:
  7330                           ; Name         Instructions Cycles
  7331                           ; simple_byte            4     3 (average)
  7332                           ; direct_byte           14    11 (fixed)
  7333                           ; jumptable            263     9 (fixed)
  7334                           ;	Chosen strategy is simple_byte
  7335  0BC0  0873               	movf	OSC_config@frecuencia+1,w
  7336  0BC1  3A7D               	xorlw	125	; case 125
  7337  0BC2  1903               	skipnz
  7338  0BC3  2BC5               	goto	l5675
  7339  0BC4  2BB4               	goto	l3055
  7340  0BC5                     l5675:	
  7341                           
  7342                           ; Switch size 1, requested type "simple"
  7343                           ; Number of cases is 1, Range of values is 0 to 0
  7344                           ; switch strategies available:
  7345                           ; Name         Instructions Cycles
  7346                           ; simple_byte            4     3 (average)
  7347                           ; direct_byte           11     8 (fixed)
  7348                           ; jumptable            260     6 (fixed)
  7349                           ;	Chosen strategy is simple_byte
  7350  0BC5  0872               	movf	OSC_config@frecuencia,w
  7351  0BC6  3A00               	xorlw	0	; case 0
  7352  0BC7  1903               	skipnz
  7353  0BC8  2BAF               	goto	l3053
  7354  0BC9  2BB4               	goto	l3055
  7355  0BCA                     l5659:	
  7356                           
  7357                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7358                           ; Switch size 1, requested type "simple"
  7359                           ; Number of cases is 1, Range of values is 232 to 232
  7360                           ; switch strategies available:
  7361                           ; Name         Instructions Cycles
  7362                           ; simple_byte            4     3 (average)
  7363                           ; direct_byte           14    11 (fixed)
  7364                           ; jumptable            263     9 (fixed)
  7365                           ;	Chosen strategy is simple_byte
  7366  0BCA  0873               	movf	OSC_config@frecuencia+1,w
  7367  0BCB  3AE8               	xorlw	232	; case 232
  7368  0BCC  1903               	skipnz
  7369  0BCD  2BCF               	goto	l5677
  7370  0BCE  2BB4               	goto	l3055
  7371  0BCF                     l5677:	
  7372                           
  7373                           ; Switch size 1, requested type "simple"
  7374                           ; Number of cases is 1, Range of values is 72 to 72
  7375                           ; switch strategies available:
  7376                           ; Name         Instructions Cycles
  7377                           ; simple_byte            4     3 (average)
  7378                           ; direct_byte           14    11 (fixed)
  7379                           ; jumptable            263     9 (fixed)
  7380                           ;	Chosen strategy is simple_byte
  7381  0BCF  0872               	movf	OSC_config@frecuencia,w
  7382  0BD0  3A48               	xorlw	72	; case 72
  7383  0BD1  1903               	skipnz
  7384  0BD2  2BA8               	goto	l3051
  7385  0BD3  2BB4               	goto	l3055
  7386  0BD4                     l5661:	
  7387                           
  7388                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7389                           ; Switch size 1, requested type "simple"
  7390                           ; Number of cases is 1, Range of values is 208 to 208
  7391                           ; switch strategies available:
  7392                           ; Name         Instructions Cycles
  7393                           ; simple_byte            4     3 (average)
  7394                           ; direct_byte           14    11 (fixed)
  7395                           ; jumptable            263     9 (fixed)
  7396                           ;	Chosen strategy is simple_byte
  7397  0BD4  0873               	movf	OSC_config@frecuencia+1,w
  7398  0BD5  3AD0               	xorlw	208	; case 208
  7399  0BD6  1903               	skipnz
  7400  0BD7  2BD9               	goto	l5679
  7401  0BD8  2BB4               	goto	l3055
  7402  0BD9                     l5679:	
  7403                           
  7404                           ; Switch size 1, requested type "simple"
  7405                           ; Number of cases is 1, Range of values is 144 to 144
  7406                           ; switch strategies available:
  7407                           ; Name         Instructions Cycles
  7408                           ; simple_byte            4     3 (average)
  7409                           ; direct_byte           14    11 (fixed)
  7410                           ; jumptable            263     9 (fixed)
  7411                           ;	Chosen strategy is simple_byte
  7412  0BD9  0872               	movf	OSC_config@frecuencia,w
  7413  0BDA  3A90               	xorlw	144	; case 144
  7414  0BDB  1903               	skipnz
  7415  0BDC  2BA1               	goto	l3049
  7416  0BDD  2BB4               	goto	l3055
  7417  0BDE                     l5663:	
  7418                           
  7419                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7420                           ; Switch size 1, requested type "simple"
  7421                           ; Number of cases is 1, Range of values is 161 to 161
  7422                           ; switch strategies available:
  7423                           ; Name         Instructions Cycles
  7424                           ; simple_byte            4     3 (average)
  7425                           ; direct_byte           14    11 (fixed)
  7426                           ; jumptable            263     9 (fixed)
  7427                           ;	Chosen strategy is simple_byte
  7428  0BDE  0873               	movf	OSC_config@frecuencia+1,w
  7429  0BDF  3AA1               	xorlw	161	; case 161
  7430  0BE0  1903               	skipnz
  7431  0BE1  2BE3               	goto	l5681
  7432  0BE2  2BB4               	goto	l3055
  7433  0BE3                     l5681:	
  7434                           
  7435                           ; Switch size 1, requested type "simple"
  7436                           ; Number of cases is 1, Range of values is 32 to 32
  7437                           ; switch strategies available:
  7438                           ; Name         Instructions Cycles
  7439                           ; simple_byte            4     3 (average)
  7440                           ; direct_byte           14    11 (fixed)
  7441                           ; jumptable            263     9 (fixed)
  7442                           ;	Chosen strategy is simple_byte
  7443  0BE3  0872               	movf	OSC_config@frecuencia,w
  7444  0BE4  3A20               	xorlw	32	; case 32
  7445  0BE5  1903               	skipnz
  7446  0BE6  2B9A               	goto	l3047
  7447  0BE7  2BB4               	goto	l3055
  7448  0BE8                     l5665:	
  7449                           
  7450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7451                           ; Switch size 1, requested type "simple"
  7452                           ; Number of cases is 1, Range of values is 66 to 66
  7453                           ; switch strategies available:
  7454                           ; Name         Instructions Cycles
  7455                           ; simple_byte            4     3 (average)
  7456                           ; direct_byte           14    11 (fixed)
  7457                           ; jumptable            263     9 (fixed)
  7458                           ;	Chosen strategy is simple_byte
  7459  0BE8  0873               	movf	OSC_config@frecuencia+1,w
  7460  0BE9  3A42               	xorlw	66	; case 66
  7461  0BEA  1903               	skipnz
  7462  0BEB  2BED               	goto	l5683
  7463  0BEC  2BB4               	goto	l3055
  7464  0BED                     l5683:	
  7465                           
  7466                           ; Switch size 1, requested type "simple"
  7467                           ; Number of cases is 1, Range of values is 64 to 64
  7468                           ; switch strategies available:
  7469                           ; Name         Instructions Cycles
  7470                           ; simple_byte            4     3 (average)
  7471                           ; direct_byte           14    11 (fixed)
  7472                           ; jumptable            263     9 (fixed)
  7473                           ;	Chosen strategy is simple_byte
  7474  0BED  0872               	movf	OSC_config@frecuencia,w
  7475  0BEE  3A40               	xorlw	64	; case 64
  7476  0BEF  1903               	skipnz
  7477  0BF0  2B93               	goto	l3045
  7478  0BF1  2BB4               	goto	l3055
  7479  0BF2                     l5667:	
  7480                           
  7481                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7482                           ; Switch size 1, requested type "simple"
  7483                           ; Number of cases is 1, Range of values is 132 to 132
  7484                           ; switch strategies available:
  7485                           ; Name         Instructions Cycles
  7486                           ; simple_byte            4     3 (average)
  7487                           ; direct_byte           14    11 (fixed)
  7488                           ; jumptable            263     9 (fixed)
  7489                           ;	Chosen strategy is simple_byte
  7490  0BF2  0873               	movf	OSC_config@frecuencia+1,w
  7491  0BF3  3A84               	xorlw	132	; case 132
  7492  0BF4  1903               	skipnz
  7493  0BF5  2BF7               	goto	l5685
  7494  0BF6  2BB4               	goto	l3055
  7495  0BF7                     l5685:	
  7496                           
  7497                           ; Switch size 1, requested type "simple"
  7498                           ; Number of cases is 1, Range of values is 128 to 128
  7499                           ; switch strategies available:
  7500                           ; Name         Instructions Cycles
  7501                           ; simple_byte            4     3 (average)
  7502                           ; direct_byte           14    11 (fixed)
  7503                           ; jumptable            263     9 (fixed)
  7504                           ;	Chosen strategy is simple_byte
  7505  0BF7  0872               	movf	OSC_config@frecuencia,w
  7506  0BF8  3A80               	xorlw	128	; case 128
  7507  0BF9  1903               	skipnz
  7508  0BFA  2B8C               	goto	l3043
  7509  0BFB  2BB4               	goto	l3055
  7510  0BFC                     l5669:	
  7511                           
  7512                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7513                           ; Switch size 1, requested type "simple"
  7514                           ; Number of cases is 1, Range of values is 9 to 9
  7515                           ; switch strategies available:
  7516                           ; Name         Instructions Cycles
  7517                           ; simple_byte            4     3 (average)
  7518                           ; direct_byte           14    11 (fixed)
  7519                           ; jumptable            263     9 (fixed)
  7520                           ;	Chosen strategy is simple_byte
  7521  0BFC  0873               	movf	OSC_config@frecuencia+1,w
  7522  0BFD  3A09               	xorlw	9	; case 9
  7523  0BFE  1903               	skipnz
  7524  0BFF  2C01               	goto	l5687
  7525  0C00  2BB4               	goto	l3055
  7526  0C01                     l5687:	
  7527                           
  7528                           ; Switch size 1, requested type "simple"
  7529                           ; Number of cases is 1, Range of values is 0 to 0
  7530                           ; switch strategies available:
  7531                           ; Name         Instructions Cycles
  7532                           ; simple_byte            4     3 (average)
  7533                           ; direct_byte           11     8 (fixed)
  7534                           ; jumptable            260     6 (fixed)
  7535                           ;	Chosen strategy is simple_byte
  7536  0C01  0872               	movf	OSC_config@frecuencia,w
  7537  0C02  3A00               	xorlw	0	; case 0
  7538  0C03  1903               	skipnz
  7539  0C04  2B85               	goto	l3041
  7540  0C05  2BB4               	goto	l3055
  7541  0C06                     l5671:	
  7542                           
  7543                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7544                           ; Switch size 1, requested type "simple"
  7545                           ; Number of cases is 1, Range of values is 18 to 18
  7546                           ; switch strategies available:
  7547                           ; Name         Instructions Cycles
  7548                           ; simple_byte            4     3 (average)
  7549                           ; direct_byte           14    11 (fixed)
  7550                           ; jumptable            263     9 (fixed)
  7551                           ;	Chosen strategy is simple_byte
  7552  0C06  0873               	movf	OSC_config@frecuencia+1,w
  7553  0C07  3A12               	xorlw	18	; case 18
  7554  0C08  1903               	skipnz
  7555  0C09  2C0B               	goto	l5689
  7556  0C0A  2BB4               	goto	l3055
  7557  0C0B                     l5689:	
  7558                           
  7559                           ; Switch size 1, requested type "simple"
  7560                           ; Number of cases is 1, Range of values is 0 to 0
  7561                           ; switch strategies available:
  7562                           ; Name         Instructions Cycles
  7563                           ; simple_byte            4     3 (average)
  7564                           ; direct_byte           11     8 (fixed)
  7565                           ; jumptable            260     6 (fixed)
  7566                           ;	Chosen strategy is simple_byte
  7567  0C0B  0872               	movf	OSC_config@frecuencia,w
  7568  0C0C  3A00               	xorlw	0	; case 0
  7569  0C0D  1903               	skipnz
  7570  0C0E  2B80               	goto	l3039
  7571  0C0F  2BB4               	goto	l3055
  7572  0C10                     l5673:	
  7573                           
  7574                           ; Switch size 1, requested type "simple"
  7575                           ; Number of cases is 8, Range of values is 0 to 122
  7576                           ; switch strategies available:
  7577                           ; Name         Instructions Cycles
  7578                           ; simple_byte           25    13 (average)
  7579                           ; jumptable            260     6 (fixed)
  7580                           ;	Chosen strategy is simple_byte
  7581  0C10  0874               	movf	OSC_config@frecuencia+2,w
  7582  0C11  3A00               	xorlw	0	; case 0
  7583  0C12  1903               	skipnz
  7584  0C13  2BC0               	goto	l5657
  7585  0C14  3A01               	xorlw	1	; case 1
  7586  0C15  1903               	skipnz
  7587  0C16  2BCA               	goto	l5659
  7588  0C17  3A02               	xorlw	2	; case 3
  7589  0C18  1903               	skipnz
  7590  0C19  2BD4               	goto	l5661
  7591  0C1A  3A04               	xorlw	4	; case 7
  7592  0C1B  1903               	skipnz
  7593  0C1C  2BDE               	goto	l5663
  7594  0C1D  3A08               	xorlw	8	; case 15
  7595  0C1E  1903               	skipnz
  7596  0C1F  2BE8               	goto	l5665
  7597  0C20  3A11               	xorlw	17	; case 30
  7598  0C21  1903               	skipnz
  7599  0C22  2BF2               	goto	l5667
  7600  0C23  3A23               	xorlw	35	; case 61
  7601  0C24  1903               	skipnz
  7602  0C25  2BFC               	goto	l5669
  7603  0C26  3A47               	xorlw	71	; case 122
  7604  0C27  1903               	skipnz
  7605  0C28  2C06               	goto	l5671
  7606  0C29  2BB4               	goto	l3055
  7607  0C2A  0008               	return
  7608  0C2B                     __end_of_OSC_config:	
  7609                           
  7610                           	psect	text27
  7611  15B4                     __ptext27:	
  7612 ;; *************** function _LCD_init *****************
  7613 ;; Defined at:
  7614 ;;		line 44 in file "LCD_8bits.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;		None
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;		None
  7619 ;; Return value:  Size  Location     Type
  7620 ;;                  1    wreg      void 
  7621 ;; Registers used:
  7622 ;;		wreg, status,2, status,0, pclath, cstack
  7623 ;; Tracked objects:
  7624 ;;		On entry : 0/0
  7625 ;;		On exit  : 0/0
  7626 ;;		Unchanged: 0/0
  7627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7628 ;;      Params:         0       0       0       0       0
  7629 ;;      Locals:         0       0       0       0       0
  7630 ;;      Temps:          2       0       0       0       0
  7631 ;;      Totals:         2       0       0       0       0
  7632 ;;Total ram usage:        2 bytes
  7633 ;; Hardware stack levels used:    1
  7634 ;; Hardware stack levels required when called:    2
  7635 ;; This function calls:
  7636 ;;		_LCD_Cmd
  7637 ;; This function is called by:
  7638 ;;		_SetUp
  7639 ;; This function uses a non-reentrant model
  7640 ;;
  7641                           
  7642                           
  7643                           ;psect for function _LCD_init
  7644  15B4                     _LCD_init:	
  7645                           
  7646                           ;LCD_8bits.c: 45:     _delay((unsigned long)((20)*(4000000/4000.0)));
  7647                           
  7648                           ;incstack = 0
  7649                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  7650  15B4  301A               	movlw	26
  7651  15B5  00F6               	movwf	??_LCD_init+1
  7652  15B6  30F8               	movlw	248
  7653  15B7  00F5               	movwf	??_LCD_init
  7654  15B8                     u3707:	
  7655  15B8  0BF5               	decfsz	??_LCD_init,f
  7656  15B9  2DB8               	goto	u3707
  7657  15BA  0BF6               	decfsz	??_LCD_init+1,f
  7658  15BB  2DB8               	goto	u3707
  7659  15BC  0000               	nop
  7660                           
  7661                           ;LCD_8bits.c: 46:     LCD_Cmd(0x30);
  7662  15BD  3030               	movlw	48
  7663  15BE  160A  118A  2449  160A  118A  	fcall	_LCD_Cmd
  7664                           
  7665                           ;LCD_8bits.c: 47:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7666  15C3  3007               	movlw	7
  7667  15C4  00F6               	movwf	??_LCD_init+1
  7668  15C5  307D               	movlw	125
  7669  15C6  00F5               	movwf	??_LCD_init
  7670  15C7                     u3717:	
  7671  15C7  0BF5               	decfsz	??_LCD_init,f
  7672  15C8  2DC7               	goto	u3717
  7673  15C9  0BF6               	decfsz	??_LCD_init+1,f
  7674  15CA  2DC7               	goto	u3717
  7675                           
  7676                           ;LCD_8bits.c: 48:     LCD_Cmd(0x30);
  7677  15CB  3030               	movlw	48
  7678  15CC  160A  118A  2449  160A  118A  	fcall	_LCD_Cmd
  7679                           
  7680                           ;LCD_8bits.c: 49:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7681  15D1  3021               	movlw	33
  7682  15D2  00F5               	movwf	??_LCD_init
  7683  15D3                     u3727:	
  7684  15D3  0BF5               	decfsz	??_LCD_init,f
  7685  15D4  2DD3               	goto	u3727
  7686                           
  7687                           ;LCD_8bits.c: 50:     LCD_Cmd(0x30);
  7688  15D5  3030               	movlw	48
  7689  15D6  160A  118A  2449  160A  118A  	fcall	_LCD_Cmd
  7690                           
  7691                           ;LCD_8bits.c: 51:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7692  15DB  3021               	movlw	33
  7693  15DC  00F5               	movwf	??_LCD_init
  7694  15DD                     u3737:	
  7695  15DD  0BF5               	decfsz	??_LCD_init,f
  7696  15DE  2DDD               	goto	u3737
  7697                           
  7698                           ;LCD_8bits.c: 52:     LCD_Cmd(0x38);
  7699  15DF  3038               	movlw	56
  7700  15E0  160A  118A  2449  160A  118A  	fcall	_LCD_Cmd
  7701                           
  7702                           ;LCD_8bits.c: 53:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7703  15E5  3011               	movlw	17
  7704  15E6  00F5               	movwf	??_LCD_init
  7705  15E7                     u3747:	
  7706  15E7  0BF5               	decfsz	??_LCD_init,f
  7707  15E8  2DE7               	goto	u3747
  7708  15E9  0000               	nop
  7709                           
  7710                           ;LCD_8bits.c: 54:     LCD_Cmd(0x08);
  7711  15EA  3008               	movlw	8
  7712  15EB  160A  118A  2449  160A  118A  	fcall	_LCD_Cmd
  7713                           
  7714                           ;LCD_8bits.c: 55:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7715  15F0  3011               	movlw	17
  7716  15F1  00F5               	movwf	??_LCD_init
  7717  15F2                     u3757:	
  7718  15F2  0BF5               	decfsz	??_LCD_init,f
  7719  15F3  2DF2               	goto	u3757
  7720  15F4  0000               	nop
  7721                           
  7722                           ;LCD_8bits.c: 56:     LCD_Cmd(0x01);
  7723  15F5  3001               	movlw	1
  7724  15F6  160A  118A  2449  160A  118A  	fcall	_LCD_Cmd
  7725                           
  7726                           ;LCD_8bits.c: 57:     _delay((unsigned long)((3)*(4000000/4000.0)));
  7727  15FB  3004               	movlw	4
  7728  15FC  00F6               	movwf	??_LCD_init+1
  7729  15FD  30E4               	movlw	228
  7730  15FE  00F5               	movwf	??_LCD_init
  7731  15FF                     u3767:	
  7732  15FF  0BF5               	decfsz	??_LCD_init,f
  7733  1600  2DFF               	goto	u3767
  7734  1601  0BF6               	decfsz	??_LCD_init+1,f
  7735  1602  2DFF               	goto	u3767
  7736  1603  0000               	nop
  7737                           
  7738                           ;LCD_8bits.c: 58:     LCD_Cmd(0x06);
  7739  1604  3006               	movlw	6
  7740  1605  160A  118A  2449  160A  118A  	fcall	_LCD_Cmd
  7741                           
  7742                           ;LCD_8bits.c: 59:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7743  160A  3011               	movlw	17
  7744  160B  00F5               	movwf	??_LCD_init
  7745  160C                     u3777:	
  7746  160C  0BF5               	decfsz	??_LCD_init,f
  7747  160D  2E0C               	goto	u3777
  7748  160E  0000               	nop
  7749                           
  7750                           ;LCD_8bits.c: 60:     LCD_Cmd(0x0C);
  7751  160F  300C               	movlw	12
  7752  1610  160A  118A  2449  160A  118A  	fcall	_LCD_Cmd
  7753                           
  7754                           ;LCD_8bits.c: 61:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7755  1615  3011               	movlw	17
  7756  1616  00F5               	movwf	??_LCD_init
  7757  1617                     u3787:	
  7758  1617  0BF5               	decfsz	??_LCD_init,f
  7759  1618  2E17               	goto	u3787
  7760  1619  0000               	nop
  7761  161A  0008               	return
  7762  161B                     __end_of_LCD_init:	
  7763                           
  7764                           	psect	text28
  7765  132B                     __ptext28:	
  7766 ;; *************** function _LCD_clear *****************
  7767 ;; Defined at:
  7768 ;;		line 32 in file "LCD_8bits.c"
  7769 ;; Parameters:    Size  Location     Type
  7770 ;;		None
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;		None
  7773 ;; Return value:  Size  Location     Type
  7774 ;;                  1    wreg      void 
  7775 ;; Registers used:
  7776 ;;		wreg, status,2, status,0, pclath, cstack
  7777 ;; Tracked objects:
  7778 ;;		On entry : 0/0
  7779 ;;		On exit  : 0/0
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7782 ;;      Params:         0       0       0       0       0
  7783 ;;      Locals:         0       0       0       0       0
  7784 ;;      Temps:          2       0       0       0       0
  7785 ;;      Totals:         2       0       0       0       0
  7786 ;;Total ram usage:        2 bytes
  7787 ;; Hardware stack levels used:    1
  7788 ;; Hardware stack levels required when called:    2
  7789 ;; This function calls:
  7790 ;;		_LCD_Cmd
  7791 ;; This function is called by:
  7792 ;;		_SetUp
  7793 ;;		_mostrarLCD
  7794 ;;		_pressBoton1
  7795 ;;		_pressBoton2
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           
  7800                           ;psect for function _LCD_clear
  7801  132B                     _LCD_clear:	
  7802                           
  7803                           ;LCD_8bits.c: 33:     LCD_Cmd(0x00);
  7804                           
  7805                           ;incstack = 0
  7806                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  7807  132B  3000               	movlw	0
  7808  132C  160A  118A  2449  160A  118A  	fcall	_LCD_Cmd
  7809                           
  7810                           ;LCD_8bits.c: 34:     LCD_Cmd(0x01);
  7811  1331  3001               	movlw	1
  7812  1332  160A  118A  2449  160A  118A  	fcall	_LCD_Cmd
  7813                           
  7814                           ;LCD_8bits.c: 35:     _delay((unsigned long)((4)*(4000000/4000.0)));
  7815  1337  3006               	movlw	6
  7816  1338  00F6               	movwf	??_LCD_clear+1
  7817  1339  3030               	movlw	48
  7818  133A  00F5               	movwf	??_LCD_clear
  7819  133B                     u3797:	
  7820  133B  0BF5               	decfsz	??_LCD_clear,f
  7821  133C  2B3B               	goto	u3797
  7822  133D  0BF6               	decfsz	??_LCD_clear+1,f
  7823  133E  2B3B               	goto	u3797
  7824  133F  0000               	nop
  7825  1340  0008               	return
  7826  1341                     __end_of_LCD_clear:	
  7827                           
  7828                           	psect	text29
  7829  13F1                     __ptext29:	
  7830 ;; *************** function _LCD_Create_Char *****************
  7831 ;; Defined at:
  7832 ;;		line 116 in file "LCD_8bits.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;  charnum         1    wreg     unsigned char 
  7835 ;;  chardata        1    5[COMMON] PTR const unsigned char 
  7836 ;;		 -> arrowr_vacio(8), gota(8), termometro(8), arrowr(8), 
  7837 ;;		 -> atilde(8), 
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;  charnum         1    7[COMMON] unsigned char 
  7840 ;;  n               1    8[COMMON] unsigned char 
  7841 ;; Return value:  Size  Location     Type
  7842 ;;                  1    wreg      void 
  7843 ;; Registers used:
  7844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7845 ;; Tracked objects:
  7846 ;;		On entry : 0/0
  7847 ;;		On exit  : 0/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7850 ;;      Params:         1       0       0       0       0
  7851 ;;      Locals:         2       0       0       0       0
  7852 ;;      Temps:          1       0       0       0       0
  7853 ;;      Totals:         4       0       0       0       0
  7854 ;;Total ram usage:        4 bytes
  7855 ;; Hardware stack levels used:    1
  7856 ;; Hardware stack levels required when called:    2
  7857 ;; This function calls:
  7858 ;;		_LCD_Cmd
  7859 ;;		_LCD_Write_Character
  7860 ;; This function is called by:
  7861 ;;		_SetUp
  7862 ;; This function uses a non-reentrant model
  7863 ;;
  7864                           
  7865                           
  7866                           ;psect for function _LCD_Create_Char
  7867  13F1                     _LCD_Create_Char:	
  7868                           
  7869                           ;incstack = 0
  7870                           ; Regs used in _LCD_Create_Char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7871                           ;LCD_Create_Char@charnum stored from wreg
  7872  13F1  00F7               	movwf	LCD_Create_Char@charnum
  7873                           
  7874                           ;LCD_8bits.c: 117:  uint8_t n;;LCD_8bits.c: 118:  charnum &= 0x07;
  7875  13F2  3007               	movlw	7
  7876  13F3  00F6               	movwf	??_LCD_Create_Char
  7877  13F4  0876               	movf	??_LCD_Create_Char,w
  7878  13F5  05F7               	andwf	LCD_Create_Char@charnum,f
  7879                           
  7880                           ;LCD_8bits.c: 119:  LCD_Cmd(0x40 | (charnum << 3));
  7881  13F6  0877               	movf	LCD_Create_Char@charnum,w
  7882  13F7  00F6               	movwf	??_LCD_Create_Char
  7883  13F8  3002               	movlw	2
  7884  13F9                     u1915:	
  7885  13F9  1003               	clrc
  7886  13FA  0DF6               	rlf	??_LCD_Create_Char,f
  7887  13FB  3EFF               	addlw	-1
  7888  13FC  1D03               	skipz
  7889  13FD  2BF9               	goto	u1915
  7890  13FE  1003               	clrc
  7891  13FF  0D76               	rlf	??_LCD_Create_Char,w
  7892  1400  3840               	iorlw	64
  7893  1401  160A  118A  2449  160A  118A  	fcall	_LCD_Cmd
  7894                           
  7895                           ;LCD_8bits.c: 120:  for (n = 0; n < 8; n++)
  7896  1406  01F8               	clrf	LCD_Create_Char@n
  7897  1407                     l3161:	
  7898                           
  7899                           ;LCD_8bits.c: 121:   LCD_Write_Character(chardata[n]);
  7900  1407  0878               	movf	LCD_Create_Char@n,w
  7901  1408  0775               	addwf	LCD_Create_Char@chardata,w
  7902  1409  0084               	movwf	4
  7903  140A  120A  158A  2000  160A  118A  	fcall	stringdir
  7904  140F  160A  118A  22D2  160A  118A  	fcall	_LCD_Write_Character
  7905  1414  3001               	movlw	1
  7906  1415  00F6               	movwf	??_LCD_Create_Char
  7907  1416  0876               	movf	??_LCD_Create_Char,w
  7908  1417  07F8               	addwf	LCD_Create_Char@n,f
  7909  1418  3008               	movlw	8
  7910  1419  0278               	subwf	LCD_Create_Char@n,w
  7911  141A  1803               	btfsc	3,0
  7912  141B  0008               	return
  7913  141C  2C07               	goto	l3161
  7914  141D                     __end_of_LCD_Create_Char:	
  7915                           
  7916                           	psect	text30
  7917  12D2                     __ptext30:	
  7918 ;; *************** function _LCD_Write_Character *****************
  7919 ;; Defined at:
  7920 ;;		line 64 in file "LCD_8bits.c"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;  caracter        1    wreg     unsigned char 
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;  caracter        1    3[COMMON] unsigned char 
  7925 ;; Return value:  Size  Location     Type
  7926 ;;                  1    wreg      void 
  7927 ;; Registers used:
  7928 ;;		wreg
  7929 ;; Tracked objects:
  7930 ;;		On entry : 0/0
  7931 ;;		On exit  : 0/0
  7932 ;;		Unchanged: 0/0
  7933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7934 ;;      Params:         0       0       0       0       0
  7935 ;;      Locals:         1       0       0       0       0
  7936 ;;      Temps:          1       0       0       0       0
  7937 ;;      Totals:         2       0       0       0       0
  7938 ;;Total ram usage:        2 bytes
  7939 ;; Hardware stack levels used:    1
  7940 ;; Hardware stack levels required when called:    1
  7941 ;; This function calls:
  7942 ;;		Nothing
  7943 ;; This function is called by:
  7944 ;;		_display_Uhrzeit
  7945 ;;		_display_Datum
  7946 ;;		_mostrarLCD
  7947 ;;		_pressBoton2
  7948 ;;		_LCD_Write_String
  7949 ;;		_LCD_Create_Char
  7950 ;; This function uses a non-reentrant model
  7951 ;;
  7952                           
  7953                           
  7954                           ;psect for function _LCD_Write_Character
  7955  12D2                     _LCD_Write_Character:	
  7956                           
  7957                           ;incstack = 0
  7958                           ; Regs used in _LCD_Write_Character: [wreg]
  7959                           ;LCD_Write_Character@caracter stored from wreg
  7960  12D2  00F3               	movwf	LCD_Write_Character@caracter
  7961                           
  7962                           ;LCD_8bits.c: 65:     PORTCbits.RC0 = 1;
  7963  12D3  1283               	bcf	3,5	;RP0=0, select bank0
  7964  12D4  1303               	bcf	3,6	;RP1=0, select bank0
  7965  12D5  1407               	bsf	7,0	;volatile
  7966                           
  7967                           ;LCD_8bits.c: 67:     PORTD = caracter;
  7968  12D6  0873               	movf	LCD_Write_Character@caracter,w
  7969  12D7  0088               	movwf	8	;volatile
  7970                           
  7971                           ;LCD_8bits.c: 68:     PORTCbits.RC1 = 1;
  7972  12D8  1487               	bsf	7,1	;volatile
  7973                           
  7974                           ;LCD_8bits.c: 69:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  7975  12D9  300D               	movlw	13
  7976  12DA  00F2               	movwf	??_LCD_Write_Character
  7977  12DB                     u3807:	
  7978  12DB  0BF2               	decfsz	??_LCD_Write_Character,f
  7979  12DC  2ADB               	goto	u3807
  7980                           
  7981                           ;LCD_8bits.c: 70:     PORTCbits.RC1 = 0;
  7982  12DD  1283               	bcf	3,5	;RP0=0, select bank0
  7983  12DE  1303               	bcf	3,6	;RP1=0, select bank0
  7984  12DF  1087               	bcf	7,1	;volatile
  7985  12E0  0008               	return
  7986  12E1                     __end_of_LCD_Write_Character:	
  7987                           
  7988                           	psect	text31
  7989  1449                     __ptext31:	
  7990 ;; *************** function _LCD_Cmd *****************
  7991 ;; Defined at:
  7992 ;;		line 21 in file "LCD_8bits.c"
  7993 ;; Parameters:    Size  Location     Type
  7994 ;;  comando         1    wreg     unsigned char 
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;  comando         1    4[COMMON] unsigned char 
  7997 ;; Return value:  Size  Location     Type
  7998 ;;                  1    wreg      void 
  7999 ;; Registers used:
  8000 ;;		wreg
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/0
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8006 ;;      Params:         0       0       0       0       0
  8007 ;;      Locals:         1       0       0       0       0
  8008 ;;      Temps:          2       0       0       0       0
  8009 ;;      Totals:         3       0       0       0       0
  8010 ;;Total ram usage:        3 bytes
  8011 ;; Hardware stack levels used:    1
  8012 ;; Hardware stack levels required when called:    1
  8013 ;; This function calls:
  8014 ;;		Nothing
  8015 ;; This function is called by:
  8016 ;;		_LCD_clear
  8017 ;;		_LCD_init
  8018 ;;		_LCD_Set_Cursor
  8019 ;;		_LCD_Create_Char
  8020 ;;		_LCD_home
  8021 ;;		_LCD_Shift_links
  8022 ;;		_LCD_Shift_rechts
  8023 ;;		_LCD_Cursor_rechts
  8024 ;;		_LCD_Cursor_links
  8025 ;; This function uses a non-reentrant model
  8026 ;;
  8027                           
  8028                           
  8029                           ;psect for function _LCD_Cmd
  8030  1449                     _LCD_Cmd:	
  8031                           
  8032                           ;incstack = 0
  8033                           ; Regs used in _LCD_Cmd: [wreg]
  8034                           ;LCD_Cmd@comando stored from wreg
  8035  1449  00F4               	movwf	LCD_Cmd@comando
  8036                           
  8037                           ;LCD_8bits.c: 22:     PORTCbits.RC0 = 0;
  8038  144A  1283               	bcf	3,5	;RP0=0, select bank0
  8039  144B  1303               	bcf	3,6	;RP1=0, select bank0
  8040  144C  1007               	bcf	7,0	;volatile
  8041                           
  8042                           ;LCD_8bits.c: 23:     _delay((unsigned long)((5)*(4000000/4000.0)));
  8043  144D  3007               	movlw	7
  8044  144E  00F3               	movwf	??_LCD_Cmd+1
  8045  144F  307D               	movlw	125
  8046  1450  00F2               	movwf	??_LCD_Cmd
  8047  1451                     u3817:	
  8048  1451  0BF2               	decfsz	??_LCD_Cmd,f
  8049  1452  2C51               	goto	u3817
  8050  1453  0BF3               	decfsz	??_LCD_Cmd+1,f
  8051  1454  2C51               	goto	u3817
  8052                           
  8053                           ;LCD_8bits.c: 24:     PORTCbits.RC1 = 1;
  8054  1455  1283               	bcf	3,5	;RP0=0, select bank0
  8055  1456  1303               	bcf	3,6	;RP1=0, select bank0
  8056  1457  1487               	bsf	7,1	;volatile
  8057                           
  8058                           ;LCD_8bits.c: 25:     _delay((unsigned long)((5)*(4000000/4000.0)));
  8059  1458  3007               	movlw	7
  8060  1459  00F3               	movwf	??_LCD_Cmd+1
  8061  145A  307D               	movlw	125
  8062  145B  00F2               	movwf	??_LCD_Cmd
  8063  145C                     u3827:	
  8064  145C  0BF2               	decfsz	??_LCD_Cmd,f
  8065  145D  2C5C               	goto	u3827
  8066  145E  0BF3               	decfsz	??_LCD_Cmd+1,f
  8067  145F  2C5C               	goto	u3827
  8068                           
  8069                           ;LCD_8bits.c: 26:     PORTD = comando;
  8070  1460  0874               	movf	LCD_Cmd@comando,w
  8071  1461  1283               	bcf	3,5	;RP0=0, select bank0
  8072  1462  1303               	bcf	3,6	;RP1=0, select bank0
  8073  1463  0088               	movwf	8	;volatile
  8074                           
  8075                           ;LCD_8bits.c: 27:     _delay((unsigned long)((5)*(4000000/4000.0)));
  8076  1464  3007               	movlw	7
  8077  1465  00F3               	movwf	??_LCD_Cmd+1
  8078  1466  307D               	movlw	125
  8079  1467  00F2               	movwf	??_LCD_Cmd
  8080  1468                     u3837:	
  8081  1468  0BF2               	decfsz	??_LCD_Cmd,f
  8082  1469  2C68               	goto	u3837
  8083  146A  0BF3               	decfsz	??_LCD_Cmd+1,f
  8084  146B  2C68               	goto	u3837
  8085                           
  8086                           ;LCD_8bits.c: 28:     PORTCbits.RC1 = 0;
  8087  146C  1283               	bcf	3,5	;RP0=0, select bank0
  8088  146D  1303               	bcf	3,6	;RP1=0, select bank0
  8089  146E  1087               	bcf	7,1	;volatile
  8090                           
  8091                           ;LCD_8bits.c: 29:     _delay((unsigned long)((5)*(4000000/4000.0)));
  8092  146F  3007               	movlw	7
  8093  1470  00F3               	movwf	??_LCD_Cmd+1
  8094  1471  307D               	movlw	125
  8095  1472  00F2               	movwf	??_LCD_Cmd
  8096  1473                     u3847:	
  8097  1473  0BF2               	decfsz	??_LCD_Cmd,f
  8098  1474  2C73               	goto	u3847
  8099  1475  0BF3               	decfsz	??_LCD_Cmd+1,f
  8100  1476  2C73               	goto	u3847
  8101  1477  0008               	return
  8102  1478                     __end_of_LCD_Cmd:	
  8103                           
  8104                           	psect	text32
  8105  0D97                     __ptext32:	
  8106 ;; *************** function _IMU_init *****************
  8107 ;; Defined at:
  8108 ;;		line 126 in file "IMU.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;		None
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;		None
  8113 ;; Return value:  Size  Location     Type
  8114 ;;                  1    wreg      void 
  8115 ;; Registers used:
  8116 ;;		wreg, status,2, status,0, pclath, cstack
  8117 ;; Tracked objects:
  8118 ;;		On entry : 0/0
  8119 ;;		On exit  : 0/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8122 ;;      Params:         0       0       0       0       0
  8123 ;;      Locals:         0       0       0       0       0
  8124 ;;      Temps:          2       0       0       0       0
  8125 ;;      Totals:         2       0       0       0       0
  8126 ;;Total ram usage:        2 bytes
  8127 ;; Hardware stack levels used:    1
  8128 ;; Hardware stack levels required when called:    3
  8129 ;; This function calls:
  8130 ;;		_I2C_Master_Start
  8131 ;;		_I2C_Master_Stop
  8132 ;;		_I2C_Master_Write
  8133 ;; This function is called by:
  8134 ;;		_SetUp
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           
  8139                           ;psect for function _IMU_init
  8140  0D97                     _IMU_init:	
  8141                           
  8142                           ;IMU.c: 127:     _delay((unsigned long)((150)*(4000000/4000.0)));
  8143                           
  8144                           ;incstack = 0
  8145                           ; Regs used in _IMU_init: [wreg+status,2+status,0+pclath+cstack]
  8146  0D97  30C3               	movlw	195
  8147  0D98  00F5               	movwf	??_IMU_init+1
  8148  0D99  30CD               	movlw	205
  8149  0D9A  00F4               	movwf	??_IMU_init
  8150  0D9B                     u3857:	
  8151  0D9B  0BF4               	decfsz	??_IMU_init,f
  8152  0D9C  2D9B               	goto	u3857
  8153  0D9D  0BF5               	decfsz	??_IMU_init+1,f
  8154  0D9E  2D9B               	goto	u3857
  8155                           
  8156                           ;IMU.c: 128:  I2C_Master_Start();
  8157  0D9F  160A  118A  22A9  120A  158A  	fcall	_I2C_Master_Start
  8158                           
  8159                           ;IMU.c: 129:     I2C_Master_Write(0b11010010);
  8160  0DA4  30D2               	movlw	210
  8161  0DA5  00F2               	movwf	I2C_Master_Write@d
  8162  0DA6  3000               	movlw	0
  8163  0DA7  00F3               	movwf	I2C_Master_Write@d+1
  8164  0DA8  160A  118A  22B7  120A  158A  	fcall	_I2C_Master_Write
  8165                           
  8166                           ;IMU.c: 130:  I2C_Master_Write(0x19);
  8167  0DAD  3019               	movlw	25
  8168  0DAE  00F2               	movwf	I2C_Master_Write@d
  8169  0DAF  3000               	movlw	0
  8170  0DB0  00F3               	movwf	I2C_Master_Write@d+1
  8171  0DB1  160A  118A  22B7  120A  158A  	fcall	_I2C_Master_Write
  8172                           
  8173                           ;IMU.c: 131:  I2C_Master_Write(0x07);
  8174  0DB6  3007               	movlw	7
  8175  0DB7  00F2               	movwf	I2C_Master_Write@d
  8176  0DB8  3000               	movlw	0
  8177  0DB9  00F3               	movwf	I2C_Master_Write@d+1
  8178  0DBA  160A  118A  22B7  120A  158A  	fcall	_I2C_Master_Write
  8179                           
  8180                           ;IMU.c: 132:  I2C_Master_Stop();
  8181  0DBF  160A  118A  22B0  120A  158A  	fcall	_I2C_Master_Stop
  8182                           
  8183                           ;IMU.c: 134:     I2C_Master_Start();
  8184  0DC4  160A  118A  22A9  120A  158A  	fcall	_I2C_Master_Start
  8185                           
  8186                           ;IMU.c: 135:     I2C_Master_Write(0b11010010);
  8187  0DC9  30D2               	movlw	210
  8188  0DCA  00F2               	movwf	I2C_Master_Write@d
  8189  0DCB  3000               	movlw	0
  8190  0DCC  00F3               	movwf	I2C_Master_Write@d+1
  8191  0DCD  160A  118A  22B7  120A  158A  	fcall	_I2C_Master_Write
  8192                           
  8193                           ;IMU.c: 136:  I2C_Master_Write(0x6B);
  8194  0DD2  306B               	movlw	107
  8195  0DD3  00F2               	movwf	I2C_Master_Write@d
  8196  0DD4  3000               	movlw	0
  8197  0DD5  00F3               	movwf	I2C_Master_Write@d+1
  8198  0DD6  160A  118A  22B7  120A  158A  	fcall	_I2C_Master_Write
  8199                           
  8200                           ;IMU.c: 137:  I2C_Master_Write(0x01);
  8201  0DDB  3001               	movlw	1
  8202  0DDC  00F2               	movwf	I2C_Master_Write@d
  8203  0DDD  3000               	movlw	0
  8204  0DDE  00F3               	movwf	I2C_Master_Write@d+1
  8205  0DDF  160A  118A  22B7  120A  158A  	fcall	_I2C_Master_Write
  8206                           
  8207                           ;IMU.c: 138:  I2C_Master_Stop();
  8208  0DE4  160A  118A  22B0  120A  158A  	fcall	_I2C_Master_Stop
  8209                           
  8210                           ;IMU.c: 140:     I2C_Master_Start();
  8211  0DE9  160A  118A  22A9  120A  158A  	fcall	_I2C_Master_Start
  8212                           
  8213                           ;IMU.c: 141:     I2C_Master_Write(0b11010010);
  8214  0DEE  30D2               	movlw	210
  8215  0DEF  00F2               	movwf	I2C_Master_Write@d
  8216  0DF0  3000               	movlw	0
  8217  0DF1  00F3               	movwf	I2C_Master_Write@d+1
  8218  0DF2  160A  118A  22B7  120A  158A  	fcall	_I2C_Master_Write
  8219                           
  8220                           ;IMU.c: 142:  I2C_Master_Write(0x1A);
  8221  0DF7  301A               	movlw	26
  8222  0DF8  00F2               	movwf	I2C_Master_Write@d
  8223  0DF9  3000               	movlw	0
  8224  0DFA  00F3               	movwf	I2C_Master_Write@d+1
  8225  0DFB  160A  118A  22B7  120A  158A  	fcall	_I2C_Master_Write
  8226                           
  8227                           ;IMU.c: 143:  I2C_Master_Write(0x00);
  8228  0E00  3000               	movlw	0
  8229  0E01  00F2               	movwf	I2C_Master_Write@d
  8230  0E02  00F3               	movwf	I2C_Master_Write@d+1
  8231  0E03  160A  118A  22B7  120A  158A  	fcall	_I2C_Master_Write
  8232                           
  8233                           ;IMU.c: 144:  I2C_Master_Stop();
  8234  0E08  160A  118A  22B0  120A  158A  	fcall	_I2C_Master_Stop
  8235                           
  8236                           ;IMU.c: 146:     I2C_Master_Start();
  8237  0E0D  160A  118A  22A9  120A  158A  	fcall	_I2C_Master_Start
  8238                           
  8239                           ;IMU.c: 147:     I2C_Master_Write(0b11010010);
  8240  0E12  30D2               	movlw	210
  8241  0E13  00F2               	movwf	I2C_Master_Write@d
  8242  0E14  3000               	movlw	0
  8243  0E15  00F3               	movwf	I2C_Master_Write@d+1
  8244  0E16  160A  118A  22B7  120A  158A  	fcall	_I2C_Master_Write
  8245                           
  8246                           ;IMU.c: 148:  I2C_Master_Write(0x1B);
  8247  0E1B  301B               	movlw	27
  8248  0E1C  00F2               	movwf	I2C_Master_Write@d
  8249  0E1D  3000               	movlw	0
  8250  0E1E  00F3               	movwf	I2C_Master_Write@d+1
  8251  0E1F  160A  118A  22B7  120A  158A  	fcall	_I2C_Master_Write
  8252                           
  8253                           ;IMU.c: 149:  I2C_Master_Write(0x18);
  8254  0E24  3018               	movlw	24
  8255  0E25  00F2               	movwf	I2C_Master_Write@d
  8256  0E26  3000               	movlw	0
  8257  0E27  00F3               	movwf	I2C_Master_Write@d+1
  8258  0E28  160A  118A  22B7  120A  158A  	fcall	_I2C_Master_Write
  8259                           
  8260                           ;IMU.c: 150:  I2C_Master_Stop();
  8261  0E2D  160A  118A  22B0  120A  158A  	fcall	_I2C_Master_Stop
  8262                           
  8263                           ;IMU.c: 152:     I2C_Master_Start();
  8264  0E32  160A  118A  22A9  120A  158A  	fcall	_I2C_Master_Start
  8265                           
  8266                           ;IMU.c: 153:     I2C_Master_Write(0b11010010);
  8267  0E37  30D2               	movlw	210
  8268  0E38  00F2               	movwf	I2C_Master_Write@d
  8269  0E39  3000               	movlw	0
  8270  0E3A  00F3               	movwf	I2C_Master_Write@d+1
  8271  0E3B  160A  118A  22B7  120A  158A  	fcall	_I2C_Master_Write
  8272                           
  8273                           ;IMU.c: 154:  I2C_Master_Write(0x1C);
  8274  0E40  301C               	movlw	28
  8275  0E41  00F2               	movwf	I2C_Master_Write@d
  8276  0E42  3000               	movlw	0
  8277  0E43  00F3               	movwf	I2C_Master_Write@d+1
  8278  0E44  160A  118A  22B7  120A  158A  	fcall	_I2C_Master_Write
  8279                           
  8280                           ;IMU.c: 155:  I2C_Master_Write(0x18);
  8281  0E49  3018               	movlw	24
  8282  0E4A  00F2               	movwf	I2C_Master_Write@d
  8283  0E4B  3000               	movlw	0
  8284  0E4C  00F3               	movwf	I2C_Master_Write@d+1
  8285  0E4D  160A  118A  22B7  120A  158A  	fcall	_I2C_Master_Write
  8286                           
  8287                           ;IMU.c: 156:  I2C_Master_Stop();
  8288  0E52  160A  118A  22B0   	fcall	_I2C_Master_Stop
  8289  0E55  0008               	return
  8290  0E56                     __end_of_IMU_init:	
  8291                           
  8292                           	psect	text33
  8293  1478                     __ptext33:	
  8294 ;; *************** function _I2C_Master_Init *****************
  8295 ;; Defined at:
  8296 ;;		line 16 in file "I2C.c"
  8297 ;; Parameters:    Size  Location     Type
  8298 ;;  c               4    6[BANK0 ] const unsigned long 
  8299 ;; Auto vars:     Size  Location     Type
  8300 ;;		None
  8301 ;; Return value:  Size  Location     Type
  8302 ;;                  1    wreg      void 
  8303 ;; Registers used:
  8304 ;;		wreg, status,2, status,0, pclath, cstack
  8305 ;; Tracked objects:
  8306 ;;		On entry : 0/0
  8307 ;;		On exit  : 0/0
  8308 ;;		Unchanged: 0/0
  8309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8310 ;;      Params:         0       4       0       0       0
  8311 ;;      Locals:         0       0       0       0       0
  8312 ;;      Temps:          0       4       0       0       0
  8313 ;;      Totals:         0       8       0       0       0
  8314 ;;Total ram usage:        8 bytes
  8315 ;; Hardware stack levels used:    1
  8316 ;; Hardware stack levels required when called:    2
  8317 ;; This function calls:
  8318 ;;		___lldiv
  8319 ;; This function is called by:
  8320 ;;		_SetUp
  8321 ;; This function uses a non-reentrant model
  8322 ;;
  8323                           
  8324                           
  8325                           ;psect for function _I2C_Master_Init
  8326  1478                     _I2C_Master_Init:	
  8327                           
  8328                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  8329                           
  8330                           ;incstack = 0
  8331                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  8332  1478  3028               	movlw	40
  8333  1479  1283               	bcf	3,5	;RP0=0, select bank0
  8334  147A  1303               	bcf	3,6	;RP1=0, select bank0
  8335  147B  0094               	movwf	20	;volatile
  8336                           
  8337                           ;I2C.c: 19:     SSPCON2 = 0;
  8338  147C  1683               	bsf	3,5	;RP0=1, select bank1
  8339  147D  1303               	bcf	3,6	;RP1=0, select bank1
  8340  147E  0191               	clrf	17	;volatile
  8341                           
  8342                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  8343  147F  1283               	bcf	3,5	;RP0=0, select bank0
  8344  1480  1303               	bcf	3,6	;RP1=0, select bank0
  8345  1481  0826               	movf	I2C_Master_Init@c,w
  8346  1482  00AA               	movwf	??_I2C_Master_Init
  8347  1483  0827               	movf	I2C_Master_Init@c+1,w
  8348  1484  00AB               	movwf	??_I2C_Master_Init+1
  8349  1485  0828               	movf	I2C_Master_Init@c+2,w
  8350  1486  00AC               	movwf	??_I2C_Master_Init+2
  8351  1487  0829               	movf	I2C_Master_Init@c+3,w
  8352  1488  00AD               	movwf	??_I2C_Master_Init+3
  8353  1489  3002               	movlw	2
  8354  148A                     u3305:	
  8355  148A  1003               	clrc
  8356  148B  0DAA               	rlf	??_I2C_Master_Init,f
  8357  148C  0DAB               	rlf	??_I2C_Master_Init+1,f
  8358  148D  0DAC               	rlf	??_I2C_Master_Init+2,f
  8359  148E  0DAD               	rlf	??_I2C_Master_Init+3,f
  8360  148F  3EFF               	addlw	-1
  8361  1490  1D03               	skipz
  8362  1491  2C8A               	goto	u3305
  8363  1492  082D               	movf	??_I2C_Master_Init+3,w
  8364  1493  00F5               	movwf	___lldiv@divisor+3
  8365  1494  082C               	movf	??_I2C_Master_Init+2,w
  8366  1495  00F4               	movwf	___lldiv@divisor+2
  8367  1496  082B               	movf	??_I2C_Master_Init+1,w
  8368  1497  00F3               	movwf	___lldiv@divisor+1
  8369  1498  082A               	movf	??_I2C_Master_Init,w
  8370  1499  00F2               	movwf	___lldiv@divisor
  8371  149A  3000               	movlw	0
  8372  149B  00F9               	movwf	___lldiv@dividend+3
  8373  149C  303D               	movlw	61
  8374  149D  00F8               	movwf	___lldiv@dividend+2
  8375  149E  3009               	movlw	9
  8376  149F  00F7               	movwf	___lldiv@dividend+1
  8377  14A0  3000               	movlw	0
  8378  14A1  00F6               	movwf	___lldiv@dividend
  8379  14A2  160A  118A  2554   	fcall	___lldiv
  8380  14A5  0872               	movf	?___lldiv,w
  8381  14A6  3EFF               	addlw	255
  8382  14A7  1683               	bsf	3,5	;RP0=1, select bank1
  8383  14A8  1303               	bcf	3,6	;RP1=0, select bank1
  8384  14A9  0093               	movwf	19	;volatile
  8385                           
  8386                           ;I2C.c: 21:     SSPSTAT = 0;
  8387  14AA  0194               	clrf	20	;volatile
  8388                           
  8389                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  8390  14AB  1587               	bsf	7,3	;volatile
  8391                           
  8392                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  8393  14AC  1607               	bsf	7,4	;volatile
  8394  14AD  0008               	return
  8395  14AE                     __end_of_I2C_Master_Init:	
  8396                           
  8397                           	psect	text34
  8398  1554                     __ptext34:	
  8399 ;; *************** function ___lldiv *****************
  8400 ;; Defined at:
  8401 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;  divisor         4    2[COMMON] unsigned long 
  8404 ;;  dividend        4    6[COMMON] unsigned long 
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;  quotient        4    1[BANK0 ] unsigned long 
  8407 ;;  counter         1    5[BANK0 ] unsigned char 
  8408 ;; Return value:  Size  Location     Type
  8409 ;;                  4    2[COMMON] unsigned long 
  8410 ;; Registers used:
  8411 ;;		wreg, status,2, status,0
  8412 ;; Tracked objects:
  8413 ;;		On entry : 0/0
  8414 ;;		On exit  : 0/0
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8417 ;;      Params:         8       0       0       0       0
  8418 ;;      Locals:         0       5       0       0       0
  8419 ;;      Temps:          0       1       0       0       0
  8420 ;;      Totals:         8       6       0       0       0
  8421 ;;Total ram usage:       14 bytes
  8422 ;; Hardware stack levels used:    1
  8423 ;; Hardware stack levels required when called:    1
  8424 ;; This function calls:
  8425 ;;		Nothing
  8426 ;; This function is called by:
  8427 ;;		_I2C_Master_Init
  8428 ;; This function uses a non-reentrant model
  8429 ;;
  8430                           
  8431                           
  8432                           ;psect for function ___lldiv
  8433  1554                     ___lldiv:	
  8434                           
  8435                           ;incstack = 0
  8436                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8437  1554  3000               	movlw	0
  8438  1555  1283               	bcf	3,5	;RP0=0, select bank0
  8439  1556  1303               	bcf	3,6	;RP1=0, select bank0
  8440  1557  00A4               	movwf	___lldiv@quotient+3
  8441  1558  3000               	movlw	0
  8442  1559  00A3               	movwf	___lldiv@quotient+2
  8443  155A  3000               	movlw	0
  8444  155B  00A2               	movwf	___lldiv@quotient+1
  8445  155C  3000               	movlw	0
  8446  155D  00A1               	movwf	___lldiv@quotient
  8447  155E  0875               	movf	___lldiv@divisor+3,w
  8448  155F  0474               	iorwf	___lldiv@divisor+2,w
  8449  1560  0473               	iorwf	___lldiv@divisor+1,w
  8450  1561  0472               	iorwf	___lldiv@divisor,w
  8451  1562  1903               	skipnz
  8452  1563  2DAB               	goto	l4611
  8453  1564  01A5               	clrf	___lldiv@counter
  8454  1565  0AA5               	incf	___lldiv@counter,f
  8455  1566                     l4597:	
  8456  1566  1BF5               	btfsc	___lldiv@divisor+3,7
  8457  1567  2D76               	goto	l4599
  8458  1568  3001               	movlw	1
  8459  1569  00A0               	movwf	??___lldiv
  8460  156A                     u3145:	
  8461  156A  1003               	clrc
  8462  156B  0DF2               	rlf	___lldiv@divisor,f
  8463  156C  0DF3               	rlf	___lldiv@divisor+1,f
  8464  156D  0DF4               	rlf	___lldiv@divisor+2,f
  8465  156E  0DF5               	rlf	___lldiv@divisor+3,f
  8466  156F  0BA0               	decfsz	??___lldiv,f
  8467  1570  2D6A               	goto	u3145
  8468  1571  3001               	movlw	1
  8469  1572  00A0               	movwf	??___lldiv
  8470  1573  0820               	movf	??___lldiv,w
  8471  1574  07A5               	addwf	___lldiv@counter,f
  8472  1575  2D66               	goto	l4597
  8473  1576                     l4599:	
  8474  1576  3001               	movlw	1
  8475  1577  00A0               	movwf	??___lldiv
  8476  1578                     u3165:	
  8477  1578  1003               	clrc
  8478  1579  0DA1               	rlf	___lldiv@quotient,f
  8479  157A  0DA2               	rlf	___lldiv@quotient+1,f
  8480  157B  0DA3               	rlf	___lldiv@quotient+2,f
  8481  157C  0DA4               	rlf	___lldiv@quotient+3,f
  8482  157D  0BA0               	decfsz	??___lldiv,f
  8483  157E  2D78               	goto	u3165
  8484  157F  0875               	movf	___lldiv@divisor+3,w
  8485  1580  0279               	subwf	___lldiv@dividend+3,w
  8486  1581  1D03               	skipz
  8487  1582  2D8D               	goto	u3175
  8488  1583  0874               	movf	___lldiv@divisor+2,w
  8489  1584  0278               	subwf	___lldiv@dividend+2,w
  8490  1585  1D03               	skipz
  8491  1586  2D8D               	goto	u3175
  8492  1587  0873               	movf	___lldiv@divisor+1,w
  8493  1588  0277               	subwf	___lldiv@dividend+1,w
  8494  1589  1D03               	skipz
  8495  158A  2D8D               	goto	u3175
  8496  158B  0872               	movf	___lldiv@divisor,w
  8497  158C  0276               	subwf	___lldiv@dividend,w
  8498  158D                     u3175:	
  8499  158D  1C03               	skipc
  8500  158E  2D9E               	goto	l4607
  8501  158F  0872               	movf	___lldiv@divisor,w
  8502  1590  02F6               	subwf	___lldiv@dividend,f
  8503  1591  0873               	movf	___lldiv@divisor+1,w
  8504  1592  1C03               	skipc
  8505  1593  0F73               	incfsz	___lldiv@divisor+1,w
  8506  1594  02F7               	subwf	___lldiv@dividend+1,f
  8507  1595  0874               	movf	___lldiv@divisor+2,w
  8508  1596  1C03               	skipc
  8509  1597  0F74               	incfsz	___lldiv@divisor+2,w
  8510  1598  02F8               	subwf	___lldiv@dividend+2,f
  8511  1599  0875               	movf	___lldiv@divisor+3,w
  8512  159A  1C03               	skipc
  8513  159B  0F75               	incfsz	___lldiv@divisor+3,w
  8514  159C  02F9               	subwf	___lldiv@dividend+3,f
  8515  159D  1421               	bsf	___lldiv@quotient,0
  8516  159E                     l4607:	
  8517  159E  3001               	movlw	1
  8518  159F                     u3185:	
  8519  159F  1003               	clrc
  8520  15A0  0CF5               	rrf	___lldiv@divisor+3,f
  8521  15A1  0CF4               	rrf	___lldiv@divisor+2,f
  8522  15A2  0CF3               	rrf	___lldiv@divisor+1,f
  8523  15A3  0CF2               	rrf	___lldiv@divisor,f
  8524  15A4  3EFF               	addlw	-1
  8525  15A5  1D03               	skipz
  8526  15A6  2D9F               	goto	u3185
  8527  15A7  3001               	movlw	1
  8528  15A8  02A5               	subwf	___lldiv@counter,f
  8529  15A9  1D03               	btfss	3,2
  8530  15AA  2D76               	goto	l4599
  8531  15AB                     l4611:	
  8532  15AB  0824               	movf	___lldiv@quotient+3,w
  8533  15AC  00F5               	movwf	?___lldiv+3
  8534  15AD  0823               	movf	___lldiv@quotient+2,w
  8535  15AE  00F4               	movwf	?___lldiv+2
  8536  15AF  0822               	movf	___lldiv@quotient+1,w
  8537  15B0  00F3               	movwf	?___lldiv+1
  8538  15B1  0821               	movf	___lldiv@quotient,w
  8539  15B2  00F2               	movwf	?___lldiv
  8540  15B3  0008               	return
  8541  15B4                     __end_of___lldiv:	
  8542                           
  8543                           	psect	text35
  8544  16F7                     __ptext35:	
  8545 ;; *************** function _Acc_Z *****************
  8546 ;; Defined at:
  8547 ;;		line 202 in file "IMU.c"
  8548 ;; Parameters:    Size  Location     Type
  8549 ;;		None
  8550 ;; Auto vars:     Size  Location     Type
  8551 ;;  acc             2    2[BANK0 ] int 
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  2    8[COMMON] int 
  8554 ;; Registers used:
  8555 ;;		wreg, status,2, status,0, pclath, cstack
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/0
  8558 ;;		On exit  : 0/0
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8561 ;;      Params:         2       0       0       0       0
  8562 ;;      Locals:         0       2       0       0       0
  8563 ;;      Temps:          0       2       0       0       0
  8564 ;;      Totals:         2       4       0       0       0
  8565 ;;Total ram usage:        6 bytes
  8566 ;; Hardware stack levels used:    1
  8567 ;; Hardware stack levels required when called:    3
  8568 ;; This function calls:
  8569 ;;		_I2C_Master_Read
  8570 ;;		_I2C_Master_Start
  8571 ;;		_I2C_Master_Stop
  8572 ;;		_I2C_Master_Write
  8573 ;; This function is called by:
  8574 ;;		_main
  8575 ;; This function uses a non-reentrant model
  8576 ;;
  8577                           
  8578                           
  8579                           ;psect for function _Acc_Z
  8580  16F7                     _Acc_Z:	
  8581                           
  8582                           ;IMU.c: 203:     I2C_Master_Start();
  8583                           
  8584                           ;incstack = 0
  8585                           ; Regs used in _Acc_Z: [wreg+status,2+status,0+pclath+cstack]
  8586  16F7  160A  118A  22A9  160A  118A  	fcall	_I2C_Master_Start
  8587                           
  8588                           ;IMU.c: 204:     I2C_Master_Write(0b11010010);
  8589  16FC  30D2               	movlw	210
  8590  16FD  00F2               	movwf	I2C_Master_Write@d
  8591  16FE  3000               	movlw	0
  8592  16FF  00F3               	movwf	I2C_Master_Write@d+1
  8593  1700  160A  118A  22B7  160A  118A  	fcall	_I2C_Master_Write
  8594                           
  8595                           ;IMU.c: 205:     I2C_Master_Write(0x3F);
  8596  1705  303F               	movlw	63
  8597  1706  00F2               	movwf	I2C_Master_Write@d
  8598  1707  3000               	movlw	0
  8599  1708  00F3               	movwf	I2C_Master_Write@d+1
  8600  1709  160A  118A  22B7  160A  118A  	fcall	_I2C_Master_Write
  8601                           
  8602                           ;IMU.c: 206:     I2C_Master_Stop();
  8603  170E  160A  118A  22B0  160A  118A  	fcall	_I2C_Master_Stop
  8604                           
  8605                           ;IMU.c: 207:     I2C_Master_Start();
  8606  1713  160A  118A  22A9  160A  118A  	fcall	_I2C_Master_Start
  8607                           
  8608                           ;IMU.c: 208:     I2C_Master_Write(0b11010011);
  8609  1718  30D3               	movlw	211
  8610  1719  00F2               	movwf	I2C_Master_Write@d
  8611  171A  3000               	movlw	0
  8612  171B  00F3               	movwf	I2C_Master_Write@d+1
  8613  171C  160A  118A  22B7  160A  118A  	fcall	_I2C_Master_Write
  8614                           
  8615                           ;IMU.c: 209:     int16_t acc = I2C_Master_Read(0) << 8;
  8616  1721  3000               	movlw	0
  8617  1722  00F2               	movwf	I2C_Master_Read@a
  8618  1723  00F3               	movwf	I2C_Master_Read@a+1
  8619  1724  160A  118A  23C5  160A  118A  	fcall	_I2C_Master_Read
  8620  1729  0872               	movf	?_I2C_Master_Read,w
  8621  172A  1283               	bcf	3,5	;RP0=0, select bank0
  8622  172B  1303               	bcf	3,6	;RP1=0, select bank0
  8623  172C  00A1               	movwf	??_Acc_Z+1
  8624  172D  01A0               	clrf	??_Acc_Z
  8625  172E  0820               	movf	??_Acc_Z,w
  8626  172F  00A2               	movwf	Acc_Z@acc
  8627  1730  0821               	movf	??_Acc_Z+1,w
  8628  1731  00A3               	movwf	Acc_Z@acc+1
  8629                           
  8630                           ;IMU.c: 210:     I2C_Master_Stop();
  8631  1732  160A  118A  22B0  160A  118A  	fcall	_I2C_Master_Stop
  8632                           
  8633                           ;IMU.c: 212:     I2C_Master_Start();
  8634  1737  160A  118A  22A9  160A  118A  	fcall	_I2C_Master_Start
  8635                           
  8636                           ;IMU.c: 213:     I2C_Master_Write(0b11010010);
  8637  173C  30D2               	movlw	210
  8638  173D  00F2               	movwf	I2C_Master_Write@d
  8639  173E  3000               	movlw	0
  8640  173F  00F3               	movwf	I2C_Master_Write@d+1
  8641  1740  160A  118A  22B7  160A  118A  	fcall	_I2C_Master_Write
  8642                           
  8643                           ;IMU.c: 214:     I2C_Master_Write(0x40);
  8644  1745  3040               	movlw	64
  8645  1746  00F2               	movwf	I2C_Master_Write@d
  8646  1747  3000               	movlw	0
  8647  1748  00F3               	movwf	I2C_Master_Write@d+1
  8648  1749  160A  118A  22B7  160A  118A  	fcall	_I2C_Master_Write
  8649                           
  8650                           ;IMU.c: 215:     I2C_Master_Stop();
  8651  174E  160A  118A  22B0  160A  118A  	fcall	_I2C_Master_Stop
  8652                           
  8653                           ;IMU.c: 216:     I2C_Master_Start();
  8654  1753  160A  118A  22A9  160A  118A  	fcall	_I2C_Master_Start
  8655                           
  8656                           ;IMU.c: 217:     I2C_Master_Write(0b11010011);
  8657  1758  30D3               	movlw	211
  8658  1759  00F2               	movwf	I2C_Master_Write@d
  8659  175A  3000               	movlw	0
  8660  175B  00F3               	movwf	I2C_Master_Write@d+1
  8661  175C  160A  118A  22B7  160A  118A  	fcall	_I2C_Master_Write
  8662                           
  8663                           ;IMU.c: 218:     acc = acc | I2C_Master_Read(0) ;
  8664  1761  3000               	movlw	0
  8665  1762  00F2               	movwf	I2C_Master_Read@a
  8666  1763  00F3               	movwf	I2C_Master_Read@a+1
  8667  1764  160A  118A  23C5  160A  118A  	fcall	_I2C_Master_Read
  8668  1769  1283               	bcf	3,5	;RP0=0, select bank0
  8669  176A  1303               	bcf	3,6	;RP1=0, select bank0
  8670  176B  0822               	movf	Acc_Z@acc,w
  8671  176C  0472               	iorwf	?_I2C_Master_Read,w
  8672  176D  00A2               	movwf	Acc_Z@acc
  8673  176E  0823               	movf	Acc_Z@acc+1,w
  8674  176F  0473               	iorwf	?_I2C_Master_Read+1,w
  8675  1770  00A3               	movwf	Acc_Z@acc+1
  8676                           
  8677                           ;IMU.c: 219:     I2C_Master_Stop();
  8678  1771  160A  118A  22B0   	fcall	_I2C_Master_Stop
  8679                           
  8680                           ;IMU.c: 220:     return acc;
  8681  1774  1283               	bcf	3,5	;RP0=0, select bank0
  8682  1775  1303               	bcf	3,6	;RP1=0, select bank0
  8683  1776  0823               	movf	Acc_Z@acc+1,w
  8684  1777  00F9               	movwf	?_Acc_Z+1
  8685  1778  0822               	movf	Acc_Z@acc,w
  8686  1779  00F8               	movwf	?_Acc_Z
  8687  177A  0008               	return
  8688  177B                     __end_of_Acc_Z:	
  8689                           
  8690                           	psect	text36
  8691  12B7                     __ptext36:	
  8692 ;; *************** function _I2C_Master_Write *****************
  8693 ;; Defined at:
  8694 ;;		line 65 in file "I2C.c"
  8695 ;; Parameters:    Size  Location     Type
  8696 ;;  d               2    2[COMMON] unsigned int 
  8697 ;; Auto vars:     Size  Location     Type
  8698 ;;		None
  8699 ;; Return value:  Size  Location     Type
  8700 ;;                  1    wreg      void 
  8701 ;; Registers used:
  8702 ;;		wreg, status,2, status,0, pclath, cstack
  8703 ;; Tracked objects:
  8704 ;;		On entry : 0/0
  8705 ;;		On exit  : 0/0
  8706 ;;		Unchanged: 0/0
  8707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8708 ;;      Params:         2       0       0       0       0
  8709 ;;      Locals:         0       0       0       0       0
  8710 ;;      Temps:          0       0       0       0       0
  8711 ;;      Totals:         2       0       0       0       0
  8712 ;;Total ram usage:        2 bytes
  8713 ;; Hardware stack levels used:    1
  8714 ;; Hardware stack levels required when called:    2
  8715 ;; This function calls:
  8716 ;;		_I2C_Master_Wait
  8717 ;; This function is called by:
  8718 ;;		_mostrarLCD
  8719 ;;		_get_PICslave
  8720 ;;		_get_Time
  8721 ;;		_temp_objeto
  8722 ;;		_temp_ambiente
  8723 ;;		_IMU_init
  8724 ;;		_Acc_Z
  8725 ;;		_get_hora
  8726 ;;		_Zeit_Datum_Set
  8727 ;;		_Acc_X
  8728 ;;		_Acc_Y
  8729 ;;		_Gy_X
  8730 ;;		_Gy_Y
  8731 ;;		_Gy_Z
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735                           
  8736                           ;psect for function _I2C_Master_Write
  8737  12B7                     _I2C_Master_Write:	
  8738                           
  8739                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  8740                           
  8741                           ;incstack = 0
  8742                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8743  12B7  160A  118A  22BF   	fcall	_I2C_Master_Wait
  8744                           
  8745                           ;I2C.c: 68:     SSPBUF = d;
  8746  12BA  0872               	movf	I2C_Master_Write@d,w
  8747  12BB  1283               	bcf	3,5	;RP0=0, select bank0
  8748  12BC  1303               	bcf	3,6	;RP1=0, select bank0
  8749  12BD  0093               	movwf	19	;volatile
  8750  12BE  0008               	return
  8751  12BF                     __end_of_I2C_Master_Write:	
  8752                           
  8753                           	psect	text37
  8754  12B0                     __ptext37:	
  8755 ;; *************** function _I2C_Master_Stop *****************
  8756 ;; Defined at:
  8757 ;;		line 55 in file "I2C.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;		None
  8760 ;; Auto vars:     Size  Location     Type
  8761 ;;		None
  8762 ;; Return value:  Size  Location     Type
  8763 ;;                  1    wreg      void 
  8764 ;; Registers used:
  8765 ;;		wreg, status,2, status,0, pclath, cstack
  8766 ;; Tracked objects:
  8767 ;;		On entry : 0/0
  8768 ;;		On exit  : 0/0
  8769 ;;		Unchanged: 0/0
  8770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8771 ;;      Params:         0       0       0       0       0
  8772 ;;      Locals:         0       0       0       0       0
  8773 ;;      Temps:          0       0       0       0       0
  8774 ;;      Totals:         0       0       0       0       0
  8775 ;;Total ram usage:        0 bytes
  8776 ;; Hardware stack levels used:    1
  8777 ;; Hardware stack levels required when called:    2
  8778 ;; This function calls:
  8779 ;;		_I2C_Master_Wait
  8780 ;; This function is called by:
  8781 ;;		_mostrarLCD
  8782 ;;		_get_PICslave
  8783 ;;		_get_Time
  8784 ;;		_temp_objeto
  8785 ;;		_temp_ambiente
  8786 ;;		_IMU_init
  8787 ;;		_Acc_Z
  8788 ;;		_get_hora
  8789 ;;		_Zeit_Datum_Set
  8790 ;;		_Acc_X
  8791 ;;		_Acc_Y
  8792 ;;		_Gy_X
  8793 ;;		_Gy_Y
  8794 ;;		_Gy_Z
  8795 ;; This function uses a non-reentrant model
  8796 ;;
  8797                           
  8798                           
  8799                           ;psect for function _I2C_Master_Stop
  8800  12B0                     _I2C_Master_Stop:	
  8801                           
  8802                           ;I2C.c: 57:     I2C_Master_Wait();
  8803                           
  8804                           ;incstack = 0
  8805                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  8806  12B0  160A  118A  22BF   	fcall	_I2C_Master_Wait
  8807                           
  8808                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  8809  12B3  1683               	bsf	3,5	;RP0=1, select bank1
  8810  12B4  1303               	bcf	3,6	;RP1=0, select bank1
  8811  12B5  1511               	bsf	17,2	;volatile
  8812  12B6  0008               	return
  8813  12B7                     __end_of_I2C_Master_Stop:	
  8814                           
  8815                           	psect	text38
  8816  12A9                     __ptext38:	
  8817 ;; *************** function _I2C_Master_Start *****************
  8818 ;; Defined at:
  8819 ;;		line 39 in file "I2C.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;		None
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;		None
  8824 ;; Return value:  Size  Location     Type
  8825 ;;                  1    wreg      void 
  8826 ;; Registers used:
  8827 ;;		wreg, status,2, status,0, pclath, cstack
  8828 ;; Tracked objects:
  8829 ;;		On entry : 0/0
  8830 ;;		On exit  : 0/0
  8831 ;;		Unchanged: 0/0
  8832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8833 ;;      Params:         0       0       0       0       0
  8834 ;;      Locals:         0       0       0       0       0
  8835 ;;      Temps:          0       0       0       0       0
  8836 ;;      Totals:         0       0       0       0       0
  8837 ;;Total ram usage:        0 bytes
  8838 ;; Hardware stack levels used:    1
  8839 ;; Hardware stack levels required when called:    2
  8840 ;; This function calls:
  8841 ;;		_I2C_Master_Wait
  8842 ;; This function is called by:
  8843 ;;		_mostrarLCD
  8844 ;;		_get_PICslave
  8845 ;;		_get_Time
  8846 ;;		_temp_objeto
  8847 ;;		_temp_ambiente
  8848 ;;		_IMU_init
  8849 ;;		_Acc_Z
  8850 ;;		_get_hora
  8851 ;;		_Zeit_Datum_Set
  8852 ;;		_Acc_X
  8853 ;;		_Acc_Y
  8854 ;;		_Gy_X
  8855 ;;		_Gy_Y
  8856 ;;		_Gy_Z
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           
  8861                           ;psect for function _I2C_Master_Start
  8862  12A9                     _I2C_Master_Start:	
  8863                           
  8864                           ;I2C.c: 41:     I2C_Master_Wait();
  8865                           
  8866                           ;incstack = 0
  8867                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  8868  12A9  160A  118A  22BF   	fcall	_I2C_Master_Wait
  8869                           
  8870                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  8871  12AC  1683               	bsf	3,5	;RP0=1, select bank1
  8872  12AD  1303               	bcf	3,6	;RP1=0, select bank1
  8873  12AE  1411               	bsf	17,0	;volatile
  8874  12AF  0008               	return
  8875  12B0                     __end_of_I2C_Master_Start:	
  8876                           
  8877                           	psect	text39
  8878  13C5                     __ptext39:	
  8879 ;; *************** function _I2C_Master_Read *****************
  8880 ;; Defined at:
  8881 ;;		line 74 in file "I2C.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;  a               2    2[COMMON] unsigned short 
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;  temp            2    6[COMMON] unsigned short 
  8886 ;; Return value:  Size  Location     Type
  8887 ;;                  2    2[COMMON] unsigned short 
  8888 ;; Registers used:
  8889 ;;		wreg, status,2, status,0, pclath, cstack
  8890 ;; Tracked objects:
  8891 ;;		On entry : 0/0
  8892 ;;		On exit  : 0/0
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8895 ;;      Params:         2       0       0       0       0
  8896 ;;      Locals:         2       0       0       0       0
  8897 ;;      Temps:          2       0       0       0       0
  8898 ;;      Totals:         6       0       0       0       0
  8899 ;;Total ram usage:        6 bytes
  8900 ;; Hardware stack levels used:    1
  8901 ;; Hardware stack levels required when called:    2
  8902 ;; This function calls:
  8903 ;;		_I2C_Master_Wait
  8904 ;; This function is called by:
  8905 ;;		_get_PICslave
  8906 ;;		_get_Time
  8907 ;;		_temp_objeto
  8908 ;;		_temp_ambiente
  8909 ;;		_Acc_Z
  8910 ;;		_get_hora
  8911 ;;		_Acc_X
  8912 ;;		_Acc_Y
  8913 ;;		_Gy_X
  8914 ;;		_Gy_Y
  8915 ;;		_Gy_Z
  8916 ;; This function uses a non-reentrant model
  8917 ;;
  8918                           
  8919                           
  8920                           ;psect for function _I2C_Master_Read
  8921  13C5                     _I2C_Master_Read:	
  8922                           
  8923                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  8924                           
  8925                           ;incstack = 0
  8926                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  8927  13C5  160A  118A  22BF  160A  118A  	fcall	_I2C_Master_Wait
  8928                           
  8929                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  8930  13CA  1683               	bsf	3,5	;RP0=1, select bank1
  8931  13CB  1303               	bcf	3,6	;RP1=0, select bank1
  8932  13CC  1591               	bsf	17,3	;volatile
  8933                           
  8934                           ;I2C.c: 79:     I2C_Master_Wait();
  8935  13CD  160A  118A  22BF  160A  118A  	fcall	_I2C_Master_Wait
  8936                           
  8937                           ;I2C.c: 80:     temp = SSPBUF;
  8938  13D2  1283               	bcf	3,5	;RP0=0, select bank0
  8939  13D3  1303               	bcf	3,6	;RP1=0, select bank0
  8940  13D4  0813               	movf	19,w	;volatile
  8941  13D5  00F4               	movwf	??_I2C_Master_Read
  8942  13D6  01F5               	clrf	??_I2C_Master_Read+1
  8943  13D7  0874               	movf	??_I2C_Master_Read,w
  8944  13D8  00F6               	movwf	I2C_Master_Read@temp
  8945  13D9  0875               	movf	??_I2C_Master_Read+1,w
  8946  13DA  00F7               	movwf	I2C_Master_Read@temp+1
  8947                           
  8948                           ;I2C.c: 81:     I2C_Master_Wait();
  8949  13DB  160A  118A  22BF  160A  118A  	fcall	_I2C_Master_Wait
  8950                           
  8951                           ;I2C.c: 82:     if(a == 1){
  8952  13E0  0372               	decf	I2C_Master_Read@a,w
  8953  13E1  0473               	iorwf	I2C_Master_Read@a+1,w
  8954  13E2  1D03               	btfss	3,2
  8955  13E3  2BE8               	goto	l344
  8956                           
  8957                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  8958  13E4  1683               	bsf	3,5	;RP0=1, select bank1
  8959  13E5  1303               	bcf	3,6	;RP1=0, select bank1
  8960  13E6  1291               	bcf	17,5	;volatile
  8961                           
  8962                           ;I2C.c: 84:     }else{
  8963  13E7  2BEB               	goto	l345
  8964  13E8                     l344:	
  8965                           
  8966                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  8967  13E8  1683               	bsf	3,5	;RP0=1, select bank1
  8968  13E9  1303               	bcf	3,6	;RP1=0, select bank1
  8969  13EA  1691               	bsf	17,5	;volatile
  8970  13EB                     l345:	
  8971                           ;I2C.c: 86:     }
  8972                           
  8973                           
  8974                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  8975  13EB  1611               	bsf	17,4	;volatile
  8976                           
  8977                           ;I2C.c: 88:     return temp;
  8978  13EC  0877               	movf	I2C_Master_Read@temp+1,w
  8979  13ED  00F3               	movwf	?_I2C_Master_Read+1
  8980  13EE  0876               	movf	I2C_Master_Read@temp,w
  8981  13EF  00F2               	movwf	?_I2C_Master_Read
  8982  13F0  0008               	return
  8983  13F1                     __end_of_I2C_Master_Read:	
  8984                           
  8985                           	psect	text40
  8986  12BF                     __ptext40:	
  8987 ;; *************** function _I2C_Master_Wait *****************
  8988 ;; Defined at:
  8989 ;;		line 32 in file "I2C.c"
  8990 ;; Parameters:    Size  Location     Type
  8991 ;;		None
  8992 ;; Auto vars:     Size  Location     Type
  8993 ;;		None
  8994 ;; Return value:  Size  Location     Type
  8995 ;;                  1    wreg      void 
  8996 ;; Registers used:
  8997 ;;		wreg, status,2
  8998 ;; Tracked objects:
  8999 ;;		On entry : 0/0
  9000 ;;		On exit  : 0/0
  9001 ;;		Unchanged: 0/0
  9002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9003 ;;      Params:         0       0       0       0       0
  9004 ;;      Locals:         0       0       0       0       0
  9005 ;;      Temps:          0       0       0       0       0
  9006 ;;      Totals:         0       0       0       0       0
  9007 ;;Total ram usage:        0 bytes
  9008 ;; Hardware stack levels used:    1
  9009 ;; Hardware stack levels required when called:    1
  9010 ;; This function calls:
  9011 ;;		Nothing
  9012 ;; This function is called by:
  9013 ;;		_I2C_Master_Start
  9014 ;;		_I2C_Master_Stop
  9015 ;;		_I2C_Master_Write
  9016 ;;		_I2C_Master_Read
  9017 ;;		_I2C_Master_RepeatedStart
  9018 ;; This function uses a non-reentrant model
  9019 ;;
  9020                           
  9021                           
  9022                           ;psect for function _I2C_Master_Wait
  9023  12BF                     _I2C_Master_Wait:	
  9024  12BF                     l326:	
  9025                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  9026                           
  9027                           ;incstack = 0
  9028                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  9029                           
  9030  12BF  1683               	bsf	3,5	;RP0=1, select bank1
  9031  12C0  1303               	bcf	3,6	;RP1=0, select bank1
  9032  12C1  1914               	btfsc	20,2	;volatile
  9033  12C2  2ABF               	goto	l326
  9034  12C3  0811               	movf	17,w	;volatile
  9035  12C4  391F               	andlw	31
  9036  12C5  1903               	btfsc	3,2
  9037  12C6  0008               	return
  9038  12C7  2ABF               	goto	l326
  9039  12C8                     __end_of_I2C_Master_Wait:	
  9040                           
  9041                           	psect	text41
  9042  1303                     __ptext41:	
  9043 ;; *************** function _ISR *****************
  9044 ;; Defined at:
  9045 ;;		line 132 in file "main_Master.c"
  9046 ;; Parameters:    Size  Location     Type
  9047 ;;		None
  9048 ;; Auto vars:     Size  Location     Type
  9049 ;;		None
  9050 ;; Return value:  Size  Location     Type
  9051 ;;                  1    wreg      void 
  9052 ;; Registers used:
  9053 ;;		wreg, status,2, status,0
  9054 ;; Tracked objects:
  9055 ;;		On entry : 0/0
  9056 ;;		On exit  : 0/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9059 ;;      Params:         0       0       0       0       0
  9060 ;;      Locals:         0       0       0       0       0
  9061 ;;      Temps:          2       0       0       0       0
  9062 ;;      Totals:         2       0       0       0       0
  9063 ;;Total ram usage:        2 bytes
  9064 ;; Hardware stack levels used:    1
  9065 ;; This function calls:
  9066 ;;		Nothing
  9067 ;; This function is called by:
  9068 ;;		Interrupt level 1
  9069 ;; This function uses a non-reentrant model
  9070 ;;
  9071                           
  9072                           
  9073                           ;psect for function _ISR
  9074  1303                     _ISR:	
  9075                           
  9076                           ;main_Master.c: 133:     if (INTCONbits.RBIF == 1 && INTCONbits.RBIE == 1){
  9077  1303  180B               	btfsc	11,0	;volatile
  9078  1304  1D8B               	btfss	11,3	;volatile
  9079  1305  2B0F               	goto	i1l143
  9080                           
  9081                           ;main_Master.c: 134:         INTCONbits.RBIF = 0;
  9082  1306  100B               	bcf	11,0	;volatile
  9083                           
  9084                           ;main_Master.c: 135:         if (banderaBoton == 0){
  9085  1307  1283               	bcf	3,5	;RP0=0, select bank0
  9086  1308  1303               	bcf	3,6	;RP1=0, select bank0
  9087  1309  0861               	movf	_banderaBoton,w
  9088  130A  1D03               	btfss	3,2
  9089  130B  2B0F               	goto	i1l143
  9090                           
  9091                           ;main_Master.c: 136:             banderaBoton = 1;
  9092  130C  01E1               	clrf	_banderaBoton
  9093  130D  0AE1               	incf	_banderaBoton,f
  9094                           
  9095                           ;main_Master.c: 137:             INTCONbits.RBIE = 0;
  9096  130E  118B               	bcf	11,3	;volatile
  9097  130F                     i1l143:	
  9098  130F  0871               	movf	??_ISR+1,w
  9099  1310  008A               	movwf	10
  9100  1311  0E70               	swapf	??_ISR^(0+4294967168),w
  9101  1312  0083               	movwf	3
  9102  1313  0EFE               	swapf	126,f
  9103  1314  0E7E               	swapf	126,w
  9104  1315  0009               	retfie
  9105  1316                     __end_of_ISR:	
  9106  007E                     btemp	set	126	;btemp
  9107  007E                     wtemp0	set	126
  9108                           
  9109                           	psect	intentry
  9110  0004                     __pintentry:	
  9111                           ;incstack = 0
  9112                           ; Regs used in _ISR: [wreg+status,2+status,0]
  9113                           
  9114  0004                     interrupt_function:	
  9115  007E                     saved_w	set	btemp
  9116  0004  00FE               	movwf	btemp
  9117  0005  0E03               	swapf	3,w
  9118  0006  00F0               	movwf	??_ISR
  9119  0007  080A               	movf	10,w
  9120  0008  00F1               	movwf	??_ISR+1
  9121  0009  160A  118A  2B03   	ljmp	_ISR


Data Sizes:
    Strings     142
    Constant    40
    Data        10
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     58      80
    BANK1            80      0       6
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Create_Char@chardata	PTR const unsigned char  size(1) Largest target is 8
		 -> arrowr_vacio(CODE[8]), gota(CODE[8]), termometro(CODE[8]), arrowr(CODE[8]), 
		 -> atilde(CODE[8]), 

    LCD_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_17(CODE[6]), STR_16(CODE[16]), STR_15(CODE[3]), STR_14(CODE[13]), 
		 -> STR_13(CODE[5]), STR_12(CODE[3]), STR_11(CODE[5]), STR_10(CODE[3]), 
		 -> STR_9(CODE[13]), STR_8(CODE[4]), STR_7(CODE[9]), STR_6(CODE[14]), 
		 -> STR_5(CODE[12]), STR_4(CODE[11]), STR_3(CODE[13]), STR_2(CODE[17]), 
		 -> STR_1(CODE[3]), 

    sp__uint_to_array	PTR unsigned int  size(1) Largest target is 6
		 -> uint_to_array@resultado(BANK0[6]), 

    obj_array	PTR unsigned int  size(1) Largest target is 6
		 -> NULL(NULL[0]), uint_to_array@resultado(BANK0[6]), 


Critical Paths under _main in COMMON

    _main->_Acc_Z
    _main->_get_PICslave
    _temp_objeto->___lwdiv
    _temp_ambiente->___lwdiv
    ___xxtofl->___lwdiv
    ___fltol->___lwdiv
    ___fladd->___lwdiv
    _pressBoton2->_LCD_Set_Cursor
    _pressBoton1->_LCD_clear
    _mostrarLCD->_LCD_Set_Cursor
    _uint_to_array->___awdiv
    _display_Uhrzeit->_LCD_Set_Cursor
    _display_Datum->_LCD_Set_Cursor
    ___awdiv->___wmul
    _LCD_Write_String->_LCD_Write_Character
    _LCD_Set_Cursor->_LCD_Cmd
    _get_Time->_BCD_a_DEC
    _BCD_a_DEC->___bmul
    _get_PICslave->_I2C_Master_Read
    _LCD_init->_LCD_Cmd
    _LCD_clear->_LCD_Cmd
    _LCD_Create_Char->_LCD_Cmd
    _IMU_init->_I2C_Master_Write
    _I2C_Master_Init->___lldiv
    _Acc_Z->_I2C_Master_Read

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_temp_ambiente
    _main->_temp_objeto
    _temp_objeto->___fltol
    _temp_ambiente->___fltol
    ___fltol->___fladd
    ___fladd->___xxtofl
    _mostrarLCD->_uint_to_array
    _uint_to_array->___awdiv
    _display_Uhrzeit->___awdiv
    _display_Datum->___awdiv
    _SetUp->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  114310
                                             57 BANK0      1     1      0
                              _Acc_Z
                              _SetUp
                       _get_PICslave
                           _get_Time
                         _mostrarLCD
                        _pressBoton1
                        _pressBoton2
                      _temp_ambiente
                        _temp_objeto
                       _uartTX_Write
                    _ver_inclinacion
 ---------------------------------------------------------------------------------
 (1) _ver_inclinacion                                      4     2      2     190
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _uartTX_Write                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _temp_objeto                                         12    10      2   15626
                                             45 BANK0     12    10      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fladd
                            ___fltol
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _temp_ambiente                                       12    10      2   15626
                                             45 BANK0     12    10      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fladd
                            ___fltol
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 BANK0     14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     517
                                             34 BANK0     11     7      4
                            ___fladd (ARG)
                            ___lwdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2414
                                             14 BANK0     20    12      8
                            ___lwdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _pressBoton2                                          2     2      0    2383
                                              0 BANK0      2     2      0
                     _LCD_Set_Cursor
                _LCD_Write_Character
                          _LCD_clear
 ---------------------------------------------------------------------------------
 (1) _pressBoton1                                          2     2      0      22
                                              7 COMMON     2     2      0
                          _LCD_clear
 ---------------------------------------------------------------------------------
 (1) _mostrarLCD                                          10    10      0   35086
                                             23 BANK0     10    10      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                          _LCD_clear
                            ___awdiv
                            ___awmod
                      _display_Datum
                    _display_Uhrzeit
                      _uint_to_array
 ---------------------------------------------------------------------------------
 (2) _uint_to_array                                       15    15      0    3523
                                              8 BANK0     15    15      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _display_Uhrzeit                                     11    10      1    7094
                                              8 BANK0     11    10      1
                     _LCD_Set_Cursor
                _LCD_Write_Character
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _display_Datum                                       11    10      1    7767
                                              8 BANK0     11    10      1
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1800
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    2577
                                              8 COMMON     1     1      0
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     3     3      0     673
                                              4 COMMON     3     3      0
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       5     4      1    2339
                                              5 COMMON     5     4      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _get_Time                                             1     1      0   11828
                                              0 BANK0      1     1      0
                          _BCD_a_DEC
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _BCD_a_DEC                                            4     4      0     212
                                              6 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _get_PICslave                                         4     4      0   11681
                                              8 COMMON     2     2      0
                                              0 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _SetUp                                                1     1      0   10162
                                             14 BANK0      1     1      0
                    _I2C_Master_Init
                           _IMU_init
                    _LCD_Create_Char
                          _LCD_clear
                           _LCD_init
                         _OSC_config
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSC_config                                           4     0      4      98
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             2     2      0      22
                                              5 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            2     2      0      22
                                              5 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Create_Char                                      4     3      1     537
                                              5 COMMON     4     3      1
                            _LCD_Cmd
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Character                                  2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _IMU_init                                             2     2      0    8941
                                              4 COMMON     2     2      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _Acc_Z                                                6     4      2   11684
                                              8 COMMON     2     0      2
                                              0 BANK0      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    8941
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2    2675
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Acc_Z
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _SetUp
     _I2C_Master_Init
       ___lldiv
     _IMU_init
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_Create_Char
       _LCD_Cmd
       _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
     _LCD_init
       _LCD_Cmd
     _OSC_config
     _uart_init
   _get_PICslave
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _get_Time
     _BCD_a_DEC
       ___bmul
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _mostrarLCD
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     _LCD_Write_String
       _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
     ___awdiv
       ___wmul (ARG)
     ___awmod
     _display_Datum
       _LCD_Set_Cursor
         _LCD_Cmd
       _LCD_Write_Character
       _LCD_Write_String
         _LCD_Write_Character
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _display_Uhrzeit
       _LCD_Set_Cursor
         _LCD_Cmd
       _LCD_Write_Character
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _uint_to_array
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _pressBoton1
     _LCD_clear
       _LCD_Cmd
   _pressBoton2
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
   _temp_ambiente
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___fladd
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___lwdiv
     ___xxtofl
       ___lwdiv (ARG)
   _temp_objeto
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___fladd
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___lwdiv
     ___xxtofl
       ___lwdiv (ARG)
   _uartTX_Write
   _ver_inclinacion

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       6       7        7.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3A      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      62      12        0.0%
ABS                  0      0      62       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 22 22:13:01 2020

                           pc 0002                ___bmul@product 0074       __end_of_LCD_Create_Char 141D  
                 __CFG_CP$OFF 0000                  ___awdiv@sign 0025            __size_of_BCD_a_DEC 0016  
                          fsr 0004           ___wmul@multiplicand 0074            mostrarLCD@pantalla 003A  
                         l250 08FC                           l326 12BF                           l344 13E8  
                         l345 13EB                           l453 12C9                           l914 05EA  
                         l906 05D2                           l579 1361                           l772 166A  
                         l872 0418                           l876 04B1                           l893 056A  
                         l878 048F                           _GIE 005F                  __CFG_CPD$OFF 0000  
                         _ISR 1303       __end_of_display_Uhrzeit 0F28                           _dia 006D  
                         _mes 006B                           _min 006F                           _seg 007A  
                         fsr0 0004                           indf 0000                  ___awmod@sign 0078  
              ?_display_Datum 0028  __size_of_LCD_Write_Character 000F               __end_of_LCD_Cmd 1478  
                __CFG_LVP$OFF 0000                          ?_ISR 0070                _LCD_Set_Cursor 141D  
                ___fltol@exp1 004C                          l1020 0A08                          l1012 09E8  
                        l1006 09A8                          l1019 09FE                          l3011 14BF  
                        l3021 14D3                          l3007 14B8                          l3041 0B85  
                        l3033 14F4                          l3025 14E1                          l3051 0BA8  
                        l3043 0B8C                          l3019 14C5                          l3053 0BAF  
                        l3045 0B93                          l3029 14EC                          l3055 0BB4  
                        l3047 0B9A                          l3039 0B80                          l3161 1407  
                        l3049 0BA1                          l3057 0BBB                          l5003 0212  
                        l3403 03E6                          l5021 0282                          l5101 0A54  
                        l3405 03EE                          l5023 0287                          l3423 040D  
                        l5033 02C8                          l5017 026D                          l5121 0A98  
                        l3433 0422                          l5051 032E                          l5123 0AA3  
                        l5131 0AC2                          l3507 04F2                          l3427 0410  
                        l3371 07D7                          l5045 0304                          l5117 0A8C  
                        l5109 0A70                          l5125 0ABC                          l3533 058B  
                        l3525 057C                          l3517 055C                          l3541 0594  
                        l3381 07F8                          l3605 09FC                          l5039 02DD  
                        l3551 059F                          l3471 049A                          l3463 045E  
                        l3607 09ED                          l3711 08D5                          l2905 1359  
                        l5073 038B                          l5057 034F                          l3473 049C  
                        l3481 04AB                          l3377 07ED                          l3369 07C9  
                        l4611 15AB                          l2923 12E9                          l5075 039A  
                        l5091 0A39                          l3547 059D                          l3539 0592  
                        l3619 0A25                          l5093 0A3B                          l3573 05E6  
                        l3717 08ED                          l5149 0ADA                          l4607 159E  
                        l2919 12E3                          l2871 1429                          l4623 1505  
                        l3903 1693                          l3399 03E3                          l3591 09B7  
                        l4641 1526                          l3921 16B4                          l3569 05E2  
                        l3497 04E0                          l3489 04BF                          l3585 09A0  
                        l2875 1433                          l2867 141F                          l4651 1547  
                        l3915 16A9                          l3931 16CC                          l3499 04E2  
                        l3595 09BB                          l2877 1438                          l4629 1510  
                        l3909 169E                          l3933 16DF                          l3597 09CD  
                        l4655 154F                          l4647 153C                          l4639 1518  
                        l4815 1656                          l2889 137B                          l4913 003B  
                        l4825 1679                          l4817 1666                          l4915 0050  
                        l5651 16D4                          l3939 16E5                          l4597 1566  
                        l5661 0BD4                          l5653 03A2                          l4925 008A  
                        l4599 1576                          l5671 0C06                          l5663 0BDE  
                        l5655 1440                          l5665 0BE8                          l5681 0BE3  
                        l5657 0BC0                          l5673 0C10                          l4953 012D  
                        l5649 0AAB                          l5667 0BF2                          l5683 0BED  
                        l5659 0BCA                          l5675 0BC5                          l4963 0165  
                        l4947 010B                          l4939 00E6                          l4795 1626  
                        l5669 0BFC                          l5685 0BF7                          l5677 0BCF  
                        l5687 0C01                          l5679 0BD9                          l4983 01A4  
                        l4967 016E                          l4959 015C                          l4799 162F  
                        l5689 0C0B                          l4999 0200                          STR_1 08B6  
                        STR_2 082E                          STR_3 086A                          STR_4 0890  
                        STR_5 0884                          STR_6 084F                          STR_7 089B  
                        STR_8 08AF                          STR_9 085D                          u2105 07D8  
                        u2115 07E4                          _IOCB 0096                          u2125 07EE  
                        u2240 047E                          u2250 047F                          u2235 0472  
                        u1605 1362                          u2085 07CC                          u3310 1782  
                        u1615 1369                          u3145 156A                          u3305 148A  
                        u3235 151B                          u2435 057E                          u3165 1578  
                        u2381 051D                          u2373 0504                          u2365 04E6  
                        u2285 04A0                          u3405 166F                          u2390 0531  
                        u2382 051E                          u3175 158D                          u3255 1527  
                        u2535 05BC                          u2391 0532                          u2383 0523  
                        u2392 0537                          u2384 0524                          u3185 159F  
                        u3265 1533                          u2393 0538                          u2385 0529  
                        u3345 1638                          u2386 052A                          u1915 13F9  
                        u3275 153D                          u2715 0A10                          u2635 09C4  
                        u1855 14C8                          u3375 1657                          u2655 09E0  
                        u3607 0D34                          u3617 0C7E                          u2745 08D1  
                        u3707 15B8                          u1875 14D9                          u3627 0A4E  
                        u2675 09F5                          u2755 08DE                          _PEIE 005E  
                        u3717 15C7                          u1965 134C                          u1885 14E2  
                        u3637 0A6A                          u2765 08E9                          u3807 12DB  
                        u3727 15D3                          u3647 0A86                          u2775 08F6  
                        u3817 1451                          u3737 15DD                          u3657 0A9E  
                        u3827 145C                          u3747 15E7                          u3667 0ACD  
                        u3837 1468                          u3757 15F2                          u3677 16BD  
                        u3847 1473                          u3767 15FF                          u3687 16EE  
                        u3857 0D9B                          u3777 160C                          u3697 0380  
                        u3787 1617                          u3797 133B                          _TRMT 04C1  
                        _WPUB 0095                  __CFG_WRT$OFF 0000                          _accZ 005A  
           ?_LCD_Write_String 0070                          _jahr 006A                          _main 0AD5  
                        _gota 0806                          _hora 006E                          btemp 007E  
               _uint_to_array 177B         temp_ambiente@temp_LSB 0056         temp_ambiente@temp_MSB 0057  
                        start 000C            ??_LCD_Write_String 0074                 __CFG_IESO$OFF 0000  
          __size_of_LCD_clear 0016           mostrarLCD@uni_atras 003D             ___bmul@multiplier 0075  
                       ??_ISR 0070              ?_I2C_Master_Init 0026              ?_I2C_Master_Read 0072  
            ?_I2C_Master_Wait 0070              ?_I2C_Master_Stop 0070              __end_of_LCD_init 161B  
               ___fltol@sign1 004B               __end_of___fladd 05F5                         ?_main 0070  
             __end_of___awdiv 1554                         STR_10 08B9                         STR_11 08AA  
                       STR_12 08B9                         STR_13 08AA                         STR_14 0877  
                       STR_15 08B3                         STR_16 083F                         STR_17 08A4  
               __CFG_WDTE$OFF 0000               __end_of___awmod 14F9               __end_of___fltol 1688  
             __end_of___lldiv 15B4               ___awdiv@divisor 0020               __end_of___lwdiv 07FD  
                       i1l143 130F               ___awdiv@counter 0024                         _RCREG 001A  
                       _SPBRG 0099                         _PORTC 0007                         _PORTD 0008  
                       _Acc_Z 16F7                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _SSPIE 0463                         _SSPIF 0063  
                       _TXREG 0019                  _sprintbuffer 005C              __end_of_IMU_init 0E56  
              __CFG_FCMEN$OFF 0000        __end_of_LCD_Set_Cursor 1449                         _SetUp 08FE  
                       _ancho 005D                         _datum 006C                         _largo 005E  
              __CFG_BOREN$OFF 0000                   ?_OSC_config 0072                         pclath 000A  
           __end_of_BCD_a_DEC 1357          __end_of_get_PICslave 13C5                ?_uint_to_array 0070  
                       status 0003                         wtemp0 007E                __CFG_MCLRE$OFF 0000  
        mostrarLCD@uni_frente 003C               __initialization 000F                  __end_of_main 0B7F  
                __end_of_gota 080E              ?_LCD_Create_Char 0075                        ??_main 0059  
                   ??_LCD_Cmd 0072                        ?_Acc_Z 0078               ??_display_Datum 0029  
            ?_display_Uhrzeit 0028             ?_I2C_Master_Start 0070             ?_I2C_Master_Write 0072  
           __end_of_LCD_clear 1341                        ?_SetUp 0070               ?_LCD_Set_Cursor 0075  
          ??_I2C_Master_Start 0072            ??_I2C_Master_Write 0074                  _banderaPUSH1 0060  
                _banderaPUSH2 005F              ___awdiv@dividend 0022                        _ANSELH 0189  
                _banderaBoton 0061                        _SPBRGH 009A                        _SSPADD 0093  
                      _TRISC0 0438                        _TRISC1 0439                        _TRISC3 043B  
                      _TRISC4 043C            uint_to_array@F1343 00A0                        _SSPCON 0014  
                      _SSPBUF 0013              __end_of___xxtofl 0A2E   LCD_Write_Character@caracter 0073  
              __CFG_PWRTE$OFF 0000              __end_of_get_Time 07C1                        ___bmul 12E1  
                   ??___fladd 0036                        ___wmul 1357                     ??___awdiv 0078  
                   ??___awmod 0076                     ??___fltol 0046                     ??___lldiv 0020  
                   ??___lwdiv 0076                        _atilde 0816                  ?_temp_objeto 004D  
                      _arrowr 0826                        _estado 007B      __size_of_ver_inclinacion 0037  
            ___awdiv@quotient 0026               ___awmod@divisor 0072           __size_of_OSC_config 00AC  
             ___awmod@counter 0077                  ?_pressBoton1 0070                  ?_pressBoton2 0070  
                      saved_w 007E               ??_uint_to_array 0028                  ___xxtofl@arg 002A  
                ___xxtofl@exp 0029                  ___xxtofl@val 0020       __end_of__initialization 0033  
                   ?_LCD_init 0070                    ___fltol@f1 0042                 __end_of_Acc_Z 177B  
         ___bmul@multiplicand 0072                __pcstackCOMMON 0070                     ?_IMU_init 0070  
               __end_of_SetUp 0989           _LCD_Write_Character 12D2                  __pidataBANK0 08BD  
        display_Datum@columna 0028         __end_of_temp_ambiente 0CE1                       ??_Acc_Z 0020  
              _OPTION_REGbits 0081               _temperatura_obj 0063                       ??_SetUp 002E  
        ?_LCD_Write_Character 0070         __size_of_get_PICslave 002B                LCD_Cmd@comando 0074  
                  __pbssBANK0 005A                    __pbssBANK1 00A0     LCD_Set_Cursor@corrimiento 0079  
                  ??_LCD_init 0075          __end_of_arrowr_vacio 0826                    __pmaintext 0AD5  
                  ??_IMU_init 0074                       ?___bmul 0072                       ?___wmul 0072  
                  __pintentry 0004     __size_of_LCD_Write_String 0022               temp_objeto@temp 0054  
                _get_PICslave 139A          OSC_config@frecuencia 0072           display_Uhrzeit@fila 002C  
          __size_of_uart_init 0015                       _LCD_Cmd 1449                     ?___xxtofl 0020  
           ??_ver_inclinacion 0074         ??_LCD_Write_Character 0072                     ?_get_Time 0070  
                     _SSPCON2 0091                       _SSPSTAT 0094                    __stringtab 0800  
                ??_OSC_config 0076                     _BCD_a_DEC 1341                 ?_uartTX_Write 0070  
      uint_to_array@resultado 0030               __size_of___bmul 0011                       ___fladd 03C6  
                     ___awdiv 14F9                       ___awmod 14AE                       ___fltol 161B  
                     ___lldiv 1554               __size_of___wmul 0021             display_Datum@fila 002C  
                     ___lwdiv 07C1                       _d_atras 0066              ??_LCD_Set_Cursor 0076  
                     __ptext1 08C7                       __ptext2 12C8                       __ptext3 0CE1  
                     __ptext4 0C2B                       __ptext5 0989                       __ptext6 07C1  
                     __ptext7 161B                       __ptext8 03C6                       __ptext9 0A2E  
          __end_of_OSC_config 0C2B          __size_of_temp_objeto 00B6                  __size_of_ISR 0013  
         uint_to_array@numero 0036                    ??___xxtofl 0024                       _humedad 0069  
            ___awmod@dividend 0074      __size_of_I2C_Master_Init 0036      __size_of_I2C_Master_Read 002C  
    __size_of_I2C_Master_Wait 0009      __size_of_I2C_Master_Stop 0007          __size_of_pressBoton1 006F  
        __size_of_pressBoton2 00A7                    ??_get_Time 0020                     _LCD_clear 132B  
        end_of_initialization 0033                ??_uartTX_Write 0072              get_PICslave@dato 0021  
   __size_of_I2C_Master_Start 0007             __end_of_uart_init 132B     __size_of_I2C_Master_Write 0008  
             ___lldiv@divisor 0072                    ?_BCD_a_DEC 0070               ___lldiv@counter 0025  
                   _RCSTAbits 0018              I2C_Master_Init@c 0026              I2C_Master_Read@a 0072  
                  _mostrarLCD 0037                     _PORTBbits 0006                     _PORTCbits 0007  
                  _termometro 080E                   ___fladd@grs 0041                 ___xxtofl@sign 0028  
    __size_of_LCD_Create_Char 002C                     _TRISCbits 0087         __end_of_display_Datum 1000  
                  ?_LCD_clear 0070             LCD_Write_String@a 0076             LCD_Write_String@n 0074  
    __size_of_display_Uhrzeit 00D2                     _TXSTAbits 0098             __size_of_LCD_init 0067  
              __end_of___bmul 12F2         LCD_Set_Cursor@columna 0075             __size_of_IMU_init 00BF  
              __end_of___wmul 1378              _LCD_Write_String 1378                   _BAUDCTLbits 0187  
              __end_of_atilde 081E                __end_of_arrowr 082E                  _arrowr_vacio 081E  
         start_initialization 000F                   __end_of_ISR 1316           temp_objeto@temp_LSB 0056  
         temp_objeto@temp_MSB 0057             ??_I2C_Master_Init 002A             ??_I2C_Master_Read 0074  
        ver_inclinacion@valor 0072             ??_I2C_Master_Wait 0072         __end_of_uint_to_array 1800  
           ??_I2C_Master_Stop 0072      __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??_BCD_a_DEC 0076  
                    ??___bmul 0073       LCD_Create_Char@chardata 0075                      ??___wmul 0076  
                  init_fetch0 12F2               _ver_inclinacion 08C7                   ?_mostrarLCD 0070  
                 __pdataBANK0 0066               BCD_a_DEC@numBCD 0079                     ___fladd@a 0032  
                   ___fladd@b 002E                      ?_LCD_Cmd 0070          __end_of_uartTX_Write 12D2  
                 __pbssCOMMON 007A                     ___latbits 0002                 __pcstackBANK0 0020  
         display_Datum@jahr_d 0032           display_Datum@jahr_u 0031             __size_of___xxtofl 00A5  
                 ??_LCD_clear 0075             __size_of_get_Time 01CC             ??_LCD_Create_Char 0076  
            _I2C_Master_Start 12A9              _I2C_Master_Write 12B7        __size_of_temp_ambiente 00B6  
            ___lwdiv@dividend 0074         uint_to_array@centenas 002F             ??_display_Uhrzeit 0029  
         get_PICslave@address 0020                      ?___fladd 002E                      ?___awdiv 0020  
                    ?___awmod 0072                      ?___fltol 0042                      ?___lldiv 0072  
                    ?___lwdiv 0072       ver_inclinacion@posicion 0075                     __pstrings 0800  
                    Acc_Z@acc 0022   __end_of_LCD_Write_Character 12E1             temp_ambiente@temp 0054  
              __size_of_Acc_Z 0084                     _obj_array 0062                __size_of_SetUp 008B  
            ___lwdiv@quotient 0077          display_Uhrzeit@Uhr_d 0032          display_Uhrzeit@Uhr_u 0031  
         __size_of_mostrarLCD 038F          display_Uhrzeit@min_d 0030          display_Uhrzeit@min_u 002F  
        display_Uhrzeit@seg_d 002E          display_Uhrzeit@seg_u 002D             interrupt_function 0004  
              ___wmul@product 0076                      _LCD_init 15B4       __end_of_ver_inclinacion 08FE  
            LCD_Create_Char@n 0078                      _IMU_init 0D97                     _uart_init 1316  
                   _velocidad 0065                 ??_temp_objeto 004F                   __stringbase 0805  
           ___wmul@multiplier 0072                 ??_pressBoton1 0077                 ??_pressBoton2 0020  
               _temp_ambiente 0C2B              __size_of_LCD_Cmd 002F           I2C_Master_Read@temp 0076  
    __end_of_LCD_Write_String 139A                   _inclinacion 0068        LCD_Create_Char@charnum 0077  
                  ?_uart_init 0072              __size_of___fladd 022F              __size_of___awdiv 005B  
            __size_of___awmod 004B              __size_of___fltol 006D              __size_of___lldiv 0060  
            __size_of___lwdiv 003C         __size_of_uartTX_Write 000A            display_Datum@dia_d 002E  
          display_Datum@dia_u 002D              uartTX_Write@dato 0072            __end_of__stringtab 0806  
          display_Datum@mes_d 0030            display_Datum@mes_u 002F                ?_temp_ambiente 004D  
                    _d_frente 0067               _I2C_Master_Init 1478               _I2C_Master_Read 13C5  
                    ___xxtofl 0989           __end_of_temp_objeto 0D97          uint_to_array@decenas 002E  
             _I2C_Master_Wait 12BF               _I2C_Master_Stop 12B0               ___lwdiv@divisor 0072  
             ___lwdiv@counter 0079                      __ptext10 1688                      __ptext11 0037  
                    __ptext20 05F5                      __ptext12 177B                      __ptext21 1341  
                    __ptext13 1357                      __ptext30 12D2                      __ptext22 12E1  
                    __ptext14 0E56                      __ptext31 1449                      __ptext23 139A  
                    __ptext15 0F28                      __ptext40 12BF                      __ptext32 0D97  
                    __ptext24 08FE                      __ptext16 14AE                      __ptext41 1303  
                    __ptext33 1478                      __ptext25 1316                      __ptext17 14F9  
                    __ptext34 1554                      __ptext26 0B7F                      __ptext18 1378  
                    __ptext35 16F7                      __ptext27 15B4                      __ptext19 141D  
                    __ptext36 12B7                      __ptext28 132B                      __ptext37 12B0  
                    __ptext29 13F1                      __ptext38 12A9                      __ptext39 13C5  
                    _get_Time 05F5             __CFG_BOR4V$BOR40V 0000       __size_of_LCD_Set_Cursor 002C  
         __end_of_pressBoton1 16F7           __end_of_pressBoton2 0AD5                 __size_of_main 00AA  
            ?_ver_inclinacion 0072        display_Uhrzeit@columna 0028                  _uartTX_Write 12C8  
      __size_of_display_Datum 00D8                  ??_mostrarLCD 0037                 ?_get_PICslave 0070  
         LCD_Set_Cursor@linea 0078               _LCD_Create_Char 13F1      __end_of_I2C_Master_Start 12B0  
    __end_of_I2C_Master_Write 12BF                    _INTCONbits 000B                      init_ram0 12F6  
             _display_Uhrzeit 0E56                      intlevel1 0000            __end_of_mostrarLCD 03C6  
            ___lldiv@dividend 0076                     stringcode 0800                    _OSCCONbits 008F  
          __end_of_termometro 0816          mostrarLCD@dec_frente 003F                   ??_uart_init 0074  
     __end_of_I2C_Master_Init 14AE       __end_of_I2C_Master_Read 13F1       __end_of_I2C_Master_Wait 12C8  
                 _temp_objeto 0CE1       __end_of_I2C_Master_Stop 12B7                ??_get_PICslave 0078  
             ??_temp_ambiente 004F                   _temperatura 0064        __size_of_uint_to_array 0085  
            ___lldiv@quotient 0021             I2C_Master_Write@d 0072                   _pressBoton1 1688  
                 _pressBoton2 0A2E                      stringdir 0800                      stringtab 0800  
         mostrarLCD@dec_atras 0040                   _SSPCON2bits 0091                 _display_Datum 0F28  
               ___fladd@signs 003E                    _OSC_config 0B7F                  ___fladd@aexp 003F  
                ___fladd@bexp 0040  

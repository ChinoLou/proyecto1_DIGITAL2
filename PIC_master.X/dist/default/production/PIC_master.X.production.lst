

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon May 04 01:28:18 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.05
    56                           ; Generated 20/12/2018 GMT
    57                           ; 
    58                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  0088                     	;# 
   129  0089                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008F                     	;# 
   134  0090                     	;# 
   135  0091                     	;# 
   136  0092                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  0105                     	;# 
   153  0107                     	;# 
   154  0108                     	;# 
   155  0109                     	;# 
   156  010C                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0185                     	;# 
   162  0187                     	;# 
   163  0188                     	;# 
   164  0189                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0000                     	;# 
   168  0001                     	;# 
   169  0002                     	;# 
   170  0003                     	;# 
   171  0004                     	;# 
   172  0005                     	;# 
   173  0006                     	;# 
   174  0007                     	;# 
   175  0008                     	;# 
   176  0009                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000D                     	;# 
   181  000E                     	;# 
   182  000E                     	;# 
   183  000F                     	;# 
   184  0010                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0013                     	;# 
   188  0014                     	;# 
   189  0015                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  0081                     	;# 
   203  0085                     	;# 
   204  0086                     	;# 
   205  0087                     	;# 
   206  0088                     	;# 
   207  0089                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  0105                     	;# 
   231  0107                     	;# 
   232  0108                     	;# 
   233  0109                     	;# 
   234  010C                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  0185                     	;# 
   240  0187                     	;# 
   241  0188                     	;# 
   242  0189                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  008F                     	;# 
   290  0090                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009A                     	;# 
   303  009B                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  0105                     	;# 
   309  0107                     	;# 
   310  0108                     	;# 
   311  0109                     	;# 
   312  010C                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010E                     	;# 
   316  010F                     	;# 
   317  0185                     	;# 
   318  0187                     	;# 
   319  0188                     	;# 
   320  0189                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323  0000                     	;# 
   324  0001                     	;# 
   325  0002                     	;# 
   326  0003                     	;# 
   327  0004                     	;# 
   328  0005                     	;# 
   329  0006                     	;# 
   330  0007                     	;# 
   331  0008                     	;# 
   332  0009                     	;# 
   333  000A                     	;# 
   334  000B                     	;# 
   335  000C                     	;# 
   336  000D                     	;# 
   337  000E                     	;# 
   338  000E                     	;# 
   339  000F                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0014                     	;# 
   345  0015                     	;# 
   346  0015                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001B                     	;# 
   354  001C                     	;# 
   355  001D                     	;# 
   356  001E                     	;# 
   357  001F                     	;# 
   358  0081                     	;# 
   359  0085                     	;# 
   360  0086                     	;# 
   361  0087                     	;# 
   362  0088                     	;# 
   363  0089                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  008F                     	;# 
   368  0090                     	;# 
   369  0091                     	;# 
   370  0092                     	;# 
   371  0093                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0094                     	;# 
   375  0095                     	;# 
   376  0096                     	;# 
   377  0097                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009A                     	;# 
   381  009B                     	;# 
   382  009C                     	;# 
   383  009D                     	;# 
   384  009E                     	;# 
   385  009F                     	;# 
   386  0105                     	;# 
   387  0107                     	;# 
   388  0108                     	;# 
   389  0109                     	;# 
   390  010C                     	;# 
   391  010C                     	;# 
   392  010D                     	;# 
   393  010E                     	;# 
   394  010F                     	;# 
   395  0185                     	;# 
   396  0187                     	;# 
   397  0188                     	;# 
   398  0189                     	;# 
   399  018C                     	;# 
   400  018D                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  000E                     	;# 
   416  000E                     	;# 
   417  000F                     	;# 
   418  0010                     	;# 
   419  0011                     	;# 
   420  0012                     	;# 
   421  0013                     	;# 
   422  0014                     	;# 
   423  0015                     	;# 
   424  0015                     	;# 
   425  0016                     	;# 
   426  0017                     	;# 
   427  0018                     	;# 
   428  0019                     	;# 
   429  001A                     	;# 
   430  001B                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  001D                     	;# 
   434  001E                     	;# 
   435  001F                     	;# 
   436  0081                     	;# 
   437  0085                     	;# 
   438  0086                     	;# 
   439  0087                     	;# 
   440  0088                     	;# 
   441  0089                     	;# 
   442  008C                     	;# 
   443  008D                     	;# 
   444  008E                     	;# 
   445  008F                     	;# 
   446  0090                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0094                     	;# 
   453  0095                     	;# 
   454  0096                     	;# 
   455  0097                     	;# 
   456  0098                     	;# 
   457  0099                     	;# 
   458  009A                     	;# 
   459  009B                     	;# 
   460  009C                     	;# 
   461  009D                     	;# 
   462  009E                     	;# 
   463  009F                     	;# 
   464  0105                     	;# 
   465  0107                     	;# 
   466  0108                     	;# 
   467  0109                     	;# 
   468  010C                     	;# 
   469  010C                     	;# 
   470  010D                     	;# 
   471  010E                     	;# 
   472  010F                     	;# 
   473  0185                     	;# 
   474  0187                     	;# 
   475  0188                     	;# 
   476  0189                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479  0000                     	;# 
   480  0001                     	;# 
   481  0002                     	;# 
   482  0003                     	;# 
   483  0004                     	;# 
   484  0005                     	;# 
   485  0006                     	;# 
   486  0007                     	;# 
   487  0008                     	;# 
   488  0009                     	;# 
   489  000A                     	;# 
   490  000B                     	;# 
   491  000C                     	;# 
   492  000D                     	;# 
   493  000E                     	;# 
   494  000E                     	;# 
   495  000F                     	;# 
   496  0010                     	;# 
   497  0011                     	;# 
   498  0012                     	;# 
   499  0013                     	;# 
   500  0014                     	;# 
   501  0015                     	;# 
   502  0015                     	;# 
   503  0016                     	;# 
   504  0017                     	;# 
   505  0018                     	;# 
   506  0019                     	;# 
   507  001A                     	;# 
   508  001B                     	;# 
   509  001B                     	;# 
   510  001C                     	;# 
   511  001D                     	;# 
   512  001E                     	;# 
   513  001F                     	;# 
   514  0081                     	;# 
   515  0085                     	;# 
   516  0086                     	;# 
   517  0087                     	;# 
   518  0088                     	;# 
   519  0089                     	;# 
   520  008C                     	;# 
   521  008D                     	;# 
   522  008E                     	;# 
   523  008F                     	;# 
   524  0090                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0093                     	;# 
   529  0093                     	;# 
   530  0094                     	;# 
   531  0095                     	;# 
   532  0096                     	;# 
   533  0097                     	;# 
   534  0098                     	;# 
   535  0099                     	;# 
   536  009A                     	;# 
   537  009B                     	;# 
   538  009C                     	;# 
   539  009D                     	;# 
   540  009E                     	;# 
   541  009F                     	;# 
   542  0105                     	;# 
   543  0107                     	;# 
   544  0108                     	;# 
   545  0109                     	;# 
   546  010C                     	;# 
   547  010C                     	;# 
   548  010D                     	;# 
   549  010E                     	;# 
   550  010F                     	;# 
   551  0185                     	;# 
   552  0187                     	;# 
   553  0188                     	;# 
   554  0189                     	;# 
   555  018C                     	;# 
   556  018D                     	;# 
   557  0000                     	;# 
   558  0001                     	;# 
   559  0002                     	;# 
   560  0003                     	;# 
   561  0004                     	;# 
   562  0005                     	;# 
   563  0006                     	;# 
   564  0007                     	;# 
   565  0008                     	;# 
   566  0009                     	;# 
   567  000A                     	;# 
   568  000B                     	;# 
   569  000C                     	;# 
   570  000D                     	;# 
   571  000E                     	;# 
   572  000E                     	;# 
   573  000F                     	;# 
   574  0010                     	;# 
   575  0011                     	;# 
   576  0012                     	;# 
   577  0013                     	;# 
   578  0014                     	;# 
   579  0015                     	;# 
   580  0015                     	;# 
   581  0016                     	;# 
   582  0017                     	;# 
   583  0018                     	;# 
   584  0019                     	;# 
   585  001A                     	;# 
   586  001B                     	;# 
   587  001B                     	;# 
   588  001C                     	;# 
   589  001D                     	;# 
   590  001E                     	;# 
   591  001F                     	;# 
   592  0081                     	;# 
   593  0085                     	;# 
   594  0086                     	;# 
   595  0087                     	;# 
   596  0088                     	;# 
   597  0089                     	;# 
   598  008C                     	;# 
   599  008D                     	;# 
   600  008E                     	;# 
   601  008F                     	;# 
   602  0090                     	;# 
   603  0091                     	;# 
   604  0092                     	;# 
   605  0093                     	;# 
   606  0093                     	;# 
   607  0093                     	;# 
   608  0094                     	;# 
   609  0095                     	;# 
   610  0096                     	;# 
   611  0097                     	;# 
   612  0098                     	;# 
   613  0099                     	;# 
   614  009A                     	;# 
   615  009B                     	;# 
   616  009C                     	;# 
   617  009D                     	;# 
   618  009E                     	;# 
   619  009F                     	;# 
   620  0105                     	;# 
   621  0107                     	;# 
   622  0108                     	;# 
   623  0109                     	;# 
   624  010C                     	;# 
   625  010C                     	;# 
   626  010D                     	;# 
   627  010E                     	;# 
   628  010F                     	;# 
   629  0185                     	;# 
   630  0187                     	;# 
   631  0188                     	;# 
   632  0189                     	;# 
   633  018C                     	;# 
   634  018D                     	;# 
   635  0000                     	;# 
   636  0001                     	;# 
   637  0002                     	;# 
   638  0003                     	;# 
   639  0004                     	;# 
   640  0005                     	;# 
   641  0006                     	;# 
   642  0007                     	;# 
   643  0008                     	;# 
   644  0009                     	;# 
   645  000A                     	;# 
   646  000B                     	;# 
   647  000C                     	;# 
   648  000D                     	;# 
   649  000E                     	;# 
   650  000E                     	;# 
   651  000F                     	;# 
   652  0010                     	;# 
   653  0011                     	;# 
   654  0012                     	;# 
   655  0013                     	;# 
   656  0014                     	;# 
   657  0015                     	;# 
   658  0015                     	;# 
   659  0016                     	;# 
   660  0017                     	;# 
   661  0018                     	;# 
   662  0019                     	;# 
   663  001A                     	;# 
   664  001B                     	;# 
   665  001B                     	;# 
   666  001C                     	;# 
   667  001D                     	;# 
   668  001E                     	;# 
   669  001F                     	;# 
   670  0081                     	;# 
   671  0085                     	;# 
   672  0086                     	;# 
   673  0087                     	;# 
   674  0088                     	;# 
   675  0089                     	;# 
   676  008C                     	;# 
   677  008D                     	;# 
   678  008E                     	;# 
   679  008F                     	;# 
   680  0090                     	;# 
   681  0091                     	;# 
   682  0092                     	;# 
   683  0093                     	;# 
   684  0093                     	;# 
   685  0093                     	;# 
   686  0094                     	;# 
   687  0095                     	;# 
   688  0096                     	;# 
   689  0097                     	;# 
   690  0098                     	;# 
   691  0099                     	;# 
   692  009A                     	;# 
   693  009B                     	;# 
   694  009C                     	;# 
   695  009D                     	;# 
   696  009E                     	;# 
   697  009F                     	;# 
   698  0105                     	;# 
   699  0107                     	;# 
   700  0108                     	;# 
   701  0109                     	;# 
   702  010C                     	;# 
   703  010C                     	;# 
   704  010D                     	;# 
   705  010E                     	;# 
   706  010F                     	;# 
   707  0185                     	;# 
   708  0187                     	;# 
   709  0188                     	;# 
   710  0189                     	;# 
   711  018C                     	;# 
   712  018D                     	;# 
   713                           
   714                           	psect	idataBANK0
   715  08BC                     __pidataBANK0:	
   716                           
   717                           ;initializer for _d_atras
   718  08BC  3466               	retlw	102
   719                           
   720                           ;initializer for _d_frente
   721  08BD  3466               	retlw	102
   722                           
   723                           ;initializer for _inclinacion
   724  08BE  3404               	retlw	4
   725                           
   726                           ;initializer for _humedad
   727  08BF  3405               	retlw	5
   728                           
   729                           ;initializer for _jahr
   730  08C0  3414               	retlw	20
   731                           
   732                           ;initializer for _mes
   733  08C1  3403               	retlw	3
   734                           
   735                           ;initializer for _datum
   736  08C2  3406               	retlw	6
   737                           
   738                           ;initializer for _dia
   739  08C3  3405               	retlw	5
   740                           
   741                           ;initializer for _hora
   742  08C4  3410               	retlw	16
   743                           
   744                           ;initializer for _min
   745  08C5  3415               	retlw	21
   746                           
   747                           	psect	strings
   748  0800                     __pstrings:	
   749  0800                     stringtab:	
   750  0800                     __stringtab:	
   751  0800                     stringcode:	
   752                           ;	String table - string pointers are 1 byte each
   753                           
   754  0800                     stringdir:	
   755  0800  3008               	movlw	high stringdir
   756  0801  008A               	movwf	10
   757  0802  0804               	movf	4,w
   758  0803  0A84               	incf	4,f
   759  0804  0782               	addwf	2,f
   760  0805                     __stringbase:	
   761  0805  3400               	retlw	0
   762  0806                     __end_of__stringtab:	
   763  0806                     _gota:	
   764  0806  3404               	retlw	4
   765  0807  340A               	retlw	10
   766  0808  340A               	retlw	10
   767  0809  3411               	retlw	17
   768  080A  3411               	retlw	17
   769  080B  3411               	retlw	17
   770  080C  340E               	retlw	14
   771  080D  3400               	retlw	0
   772  080E                     __end_of_gota:	
   773  080E                     _termometro:	
   774  080E  3404               	retlw	4
   775  080F  340A               	retlw	10
   776  0810  340A               	retlw	10
   777  0811  340E               	retlw	14
   778  0812  340E               	retlw	14
   779  0813  341F               	retlw	31
   780  0814  341F               	retlw	31
   781  0815  340E               	retlw	14
   782  0816                     __end_of_termometro:	
   783  0816                     _atilde:	
   784  0816  3402               	retlw	2
   785  0817  3404               	retlw	4
   786  0818  3400               	retlw	0
   787  0819  340E               	retlw	14
   788  081A  3401               	retlw	1
   789  081B  340F               	retlw	15
   790  081C  3411               	retlw	17
   791  081D  340F               	retlw	15
   792  081E                     __end_of_atilde:	
   793  081E                     _arrowr_vacio:	
   794  081E  3400               	retlw	0
   795  081F  3408               	retlw	8
   796  0820  340C               	retlw	12
   797  0821  340A               	retlw	10
   798  0822  3409               	retlw	9
   799  0823  340A               	retlw	10
   800  0824  340C               	retlw	12
   801  0825  3408               	retlw	8
   802  0826                     __end_of_arrowr_vacio:	
   803  0826                     _arrowr:	
   804  0826  3400               	retlw	0
   805  0827  3408               	retlw	8
   806  0828  340C               	retlw	12
   807  0829  340E               	retlw	14
   808  082A  340F               	retlw	15
   809  082B  340E               	retlw	14
   810  082C  340C               	retlw	12
   811  082D  3408               	retlw	8
   812  082E                     __end_of_arrowr:	
   813  0019                     _TXREG	set	25
   814  001A                     _RCREG	set	26
   815  0018                     _RCSTAbits	set	24
   816  0008                     _PORTD	set	8
   817  0005                     _PORTAbits	set	5
   818  0013                     _SSPBUF	set	19
   819  0014                     _SSPCON	set	20
   820  0006                     _PORTBbits	set	6
   821  001F                     _ADCON0bits	set	31
   822  001E                     _ADRESH	set	30
   823  000C                     _PIR1bits	set	12
   824  0005                     _PORTA	set	5
   825  000B                     _INTCONbits	set	11
   826  0063                     _SSPIF	set	99
   827  005E                     _PEIE	set	94
   828  005F                     _GIE	set	95
   829  009A                     _SPBRGH	set	154
   830  0099                     _SPBRG	set	153
   831  0098                     _TXSTAbits	set	152
   832  0091                     _SSPCON2bits	set	145
   833  0087                     _TRISCbits	set	135
   834  0094                     _SSPSTAT	set	148
   835  0093                     _SSPADD	set	147
   836  0091                     _SSPCON2	set	145
   837  008F                     _OSCCONbits	set	143
   838  009F                     _ADCON1bits	set	159
   839  0089                     _TRISE	set	137
   840  0085                     _TRISA	set	133
   841  0088                     _TRISD	set	136
   842  0096                     _IOCB	set	150
   843  0081                     _OPTION_REGbits	set	129
   844  0095                     _WPUB	set	149
   845  0086                     _TRISB	set	134
   846  0463                     _SSPIE	set	1123
   847  043C                     _TRISC4	set	1084
   848  043B                     _TRISC3	set	1083
   849  0187                     _BAUDCTLbits	set	391
   850  0188                     _ANSEL	set	392
   851  0189                     _ANSELH	set	393
   852  082E                     STR_2:	
   853  082E  3441               	retlw	65	;'A'
   854  082F  346D               	retlw	109	;'m'
   855  0830  3462               	retlw	98	;'b'
   856  0831  3469               	retlw	105	;'i'
   857  0832  3465               	retlw	101	;'e'
   858  0833  346E               	retlw	110	;'n'
   859  0834  3474               	retlw	116	;'t'
   860  0835  3465               	retlw	101	;'e'
   861  0836  343A               	retlw	58	;':'
   862  0837  3420               	retlw	32	;' '
   863  0838  3453               	retlw	83	;'S'
   864  0839  3475               	retlw	117	;'u'
   865  083A  3465               	retlw	101	;'e'
   866  083B  346C               	retlw	108	;'l'
   867  083C  346F               	retlw	111	;'o'
   868  083D  343A               	retlw	58	;':'
   869  083E  3400               	retlw	0
   870  083F                     STR_6:	
   871  083F  3445               	retlw	69	;'E'
   872  0840  344D               	retlw	77	;'M'
   873  0841  3445               	retlw	69	;'E'
   874  0842  3452               	retlw	82	;'R'
   875  0843  3447               	retlw	71	;'G'
   876  0844  3445               	retlw	69	;'E'
   877  0845  344E               	retlw	78	;'N'
   878  0846  3443               	retlw	67	;'C'
   879  0847  3449               	retlw	73	;'I'
   880  0848  3441               	retlw	65	;'A'
   881  0849  3421               	retlw	33	;'!'
   882  084A  3420               	retlw	32	;' '
   883  084B  3420               	retlw	32	;' '
   884  084C  3400               	retlw	0
   885  084D                     STR_16:	
   886  084D  3449               	retlw	73	;'I'
   887  084E  344E               	retlw	78	;'N'
   888  084F  3449               	retlw	73	;'I'
   889  0850  3443               	retlw	67	;'C'
   890  0851  3449               	retlw	73	;'I'
   891  0852  3441               	retlw	65	;'A'
   892  0853  344E               	retlw	78	;'N'
   893  0854  3444               	retlw	68	;'D'
   894  0855  344F               	retlw	79	;'O'
   895  0856  342E               	retlw	46	;'.'
   896  0857  342E               	retlw	46	;'.'
   897  0858  342E               	retlw	46	;'.'
   898  0859  3400               	retlw	0
   899  085A                     STR_9:	
   900  085A  3473               	retlw	115	;'s'
   901  085B  343A               	retlw	58	;':'
   902  085C  3420               	retlw	32	;' '
   903  085D  347C               	retlw	124	;'|'
   904  085E  3420               	retlw	32	;' '
   905  085F  3446               	retlw	70	;'F'
   906  0860  3472               	retlw	114	;'r'
   907  0861  3465               	retlw	101	;'e'
   908  0862  346E               	retlw	110	;'n'
   909  0863  3474               	retlw	116	;'t'
   910  0864  3465               	retlw	101	;'e'
   911  0865  343A               	retlw	58	;':'
   912  0866  3400               	retlw	0
   913  0867                     STR_3:	
   914  0867  3449               	retlw	73	;'I'
   915  0868  346E               	retlw	110	;'n'
   916  0869  3463               	retlw	99	;'c'
   917  086A  346C               	retlw	108	;'l'
   918  086B  3469               	retlw	105	;'i'
   919  086C  346E               	retlw	110	;'n'
   920  086D  3461               	retlw	97	;'a'
   921  086E  3463               	retlw	99	;'c'
   922  086F  3469               	retlw	105	;'i'
   923  0870  346F               	retlw	111	;'o'
   924  0871  346E               	retlw	110	;'n'
   925  0872  343A               	retlw	58	;':'
   926  0873  3400               	retlw	0
   927  0874                     STR_14:	
   928  0874  3454               	retlw	84	;'T'
   929  0875  346F               	retlw	111	;'o'
   930  0876  346D               	retlw	109	;'m'
   931  0877  3461               	retlw	97	;'a'
   932  0878  3472               	retlw	114	;'r'
   933  0879  3420               	retlw	32	;' '
   934  087A  3464               	retlw	100	;'d'
   935  087B  3461               	retlw	97	;'a'
   936  087C  3474               	retlw	116	;'t'
   937  087D  346F               	retlw	111	;'o'
   938  087E  3473               	retlw	115	;'s'
   939  087F  343A               	retlw	58	;':'
   940  0880  3400               	retlw	0
   941  0881                     STR_5:	
   942  0881  3450               	retlw	80	;'P'
   943  0882  3465               	retlw	101	;'e'
   944  0883  346C               	retlw	108	;'l'
   945  0884  3469               	retlw	105	;'i'
   946  0885  3467               	retlw	103	;'g'
   947  0886  3472               	retlw	114	;'r'
   948  0887  346F               	retlw	111	;'o'
   949  0888  3421               	retlw	33	;'!'
   950  0889  3420               	retlw	32	;' '
   951  088A  3420               	retlw	32	;' '
   952  088B  3420               	retlw	32	;' '
   953  088C  3400               	retlw	0
   954  088D                     STR_4:	
   955  088D  3445               	retlw	69	;'E'
   956  088E  3473               	retlw	115	;'s'
   957  088F  3474               	retlw	116	;'t'
   958  0890  3461               	retlw	97	;'a'
   959  0891  3462               	retlw	98	;'b'
   960  0892  346C               	retlw	108	;'l'
   961  0893  3465               	retlw	101	;'e'
   962  0894  3420               	retlw	32	;' '
   963  0895  3420               	retlw	32	;' '
   964  0896  3420               	retlw	32	;' '
   965  0897  3400               	retlw	0
   966  0898                     STR_7:	
   967  0898  3448               	retlw	72	;'H'
   968  0899  3475               	retlw	117	;'u'
   969  089A  346D               	retlw	109	;'m'
   970  089B  3465               	retlw	101	;'e'
   971  089C  3464               	retlw	100	;'d'
   972  089D  3461               	retlw	97	;'a'
   973  089E  3464               	retlw	100	;'d'
   974  089F  343A               	retlw	58	;':'
   975  08A0  3400               	retlw	0
   976  08A1                     STR_17:	
   977  08A1  3445               	retlw	69	;'E'
   978  08A2  3452               	retlw	82	;'R'
   979  08A3  3452               	retlw	82	;'R'
   980  08A4  344F               	retlw	79	;'O'
   981  08A5  3452               	retlw	82	;'R'
   982  08A6  3400               	retlw	0
   983  08A7                     STR_11:	
   984  08A7  342D               	retlw	45	;'-'
   985  08A8  342D               	retlw	45	;'-'
   986  08A9  342D               	retlw	45	;'-'
   987  08AA  342D               	retlw	45	;'-'
   988  08AB  3400               	retlw	0
   989  08AC                     STR_8:	
   990  08AC  3441               	retlw	65	;'A'
   991  08AD  3474               	retlw	116	;'t'
   992  08AE  3472               	retlw	114	;'r'
   993  08AF  3400               	retlw	0
   994  08B0                     STR_15:	
   995  08B0  3478               	retlw	120	;'x'
   996  08B1  3420               	retlw	32	;' '
   997  08B2  3400               	retlw	0
   998  08B3                     STR_1:	
   999  08B3  3432               	retlw	50	;'2'
  1000  08B4  3430               	retlw	48	;'0'
  1001  08B5  3400               	retlw	0
  1002  08B6                     STR_10:	
  1003  08B6  3463               	retlw	99	;'c'
  1004  08B7  346D               	retlw	109	;'m'
  1005  08B8  3400               	retlw	0
  1006  08A7                     
  1007                           ; #config settings
  1008  0000                     
  1009                           	psect	cinit
  1010  000F                     start_initialization:	
  1011  000F                     __initialization:	
  1012                           
  1013                           ; Initialize objects allocated to BANK0
  1014  000F  1383               	bcf	3,7	;select IRP bank0
  1015  0010  305F               	movlw	low (__pdataBANK0+10)
  1016  0011  00FD               	movwf	btemp+-1
  1017  0012  3008               	movlw	high __pidataBANK0
  1018  0013  00FE               	movwf	btemp
  1019  0014  30BC               	movlw	low __pidataBANK0
  1020  0015  00FF               	movwf	btemp+1
  1021  0016  3055               	movlw	low __pdataBANK0
  1022  0017  0084               	movwf	4
  1023  0018  120A  158A  20CA  120A  118A  	fcall	init_ram0
  1024                           
  1025                           ; Clear objects allocated to BANK0
  1026  001D  3043               	movlw	low __pbssBANK0
  1027  001E  0084               	movwf	4
  1028  001F  3055               	movlw	low (__pbssBANK0+18)
  1029  0020  160A  118A  27BE   	fcall	clear_ram0
  1030                           
  1031                           ; Clear objects allocated to COMMON
  1032  0023  01FA               	clrf	__pbssCOMMON& (0+127)
  1033  0024  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1034  0025                     end_of_initialization:	
  1035                           ;End of C runtime variable initialization code
  1036                           
  1037  0025                     __end_of__initialization:	
  1038  0025  0183               	clrf	3
  1039  0026  120A  158A  2D66   	ljmp	_main	;jump to C main() function
  1040                           
  1041                           	psect	bssCOMMON
  1042  007A                     __pbssCOMMON:	
  1043  007A                     _banderaPUSH1:	
  1044  007A                     	ds	1
  1045  007B                     _banderaBoton:	
  1046  007B                     	ds	1
  1047                           
  1048                           	psect	bssBANK0
  1049  0043                     __pbssBANK0:	
  1050  0043                     uint_to_array@F1343:	
  1051  0043                     	ds	6
  1052  0049                     _accZ:	
  1053  0049                     	ds	2
  1054  004B                     _sprintbuffer:	
  1055  004B                     	ds	1
  1056  004C                     _ancho:	
  1057  004C                     	ds	1
  1058  004D                     _largo:	
  1059  004D                     	ds	1
  1060  004E                     _banderaPUSH2:	
  1061  004E                     	ds	1
  1062  004F                     _obj_array:	
  1063  004F                     	ds	1
  1064  0050                     _temperatura_obj:	
  1065  0050                     	ds	1
  1066  0051                     _temperatura:	
  1067  0051                     	ds	1
  1068  0052                     _velocidad:	
  1069  0052                     	ds	1
  1070  0053                     _seg:	
  1071  0053                     	ds	1
  1072  0054                     _estado:	
  1073  0054                     	ds	1
  1074                           
  1075                           	psect	dataBANK0
  1076  0055                     __pdataBANK0:	
  1077  0055                     _d_atras:	
  1078  0055                     	ds	1
  1079  0056                     _d_frente:	
  1080  0056                     	ds	1
  1081  0057                     _inclinacion:	
  1082  0057                     	ds	1
  1083  0058                     _humedad:	
  1084  0058                     	ds	1
  1085  0059                     _jahr:	
  1086  0059                     	ds	1
  1087  005A                     _mes:	
  1088  005A                     	ds	1
  1089  005B                     _datum:	
  1090  005B                     	ds	1
  1091  005C                     _dia:	
  1092  005C                     	ds	1
  1093  005D                     _hora:	
  1094  005D                     	ds	1
  1095  005E                     _min:	
  1096  005E                     	ds	1
  1097                           
  1098                           	psect	inittext
  1099  08C6                     init_fetch0:	
  1100                           ;	Called with low address in FSR and high address in W
  1101                           
  1102  08C6  087E               	movf	126,w
  1103  08C7  008A               	movwf	10
  1104  08C8  087F               	movf	127,w
  1105  08C9  0082               	movwf	2
  1106  08CA                     init_ram0:	
  1107                           ;Called with:
  1108                           ;	high address of idata address in btemp 
  1109                           ;	low address of idata address in btemp+1 
  1110                           ;	low address of data in FSR
  1111                           ;	high address + 1 of data in btemp-1
  1112                           
  1113  08CA  20C6  120A  158A   	fcall	init_fetch0
  1114  08CD  0080               	movwf	0
  1115  08CE  0A84               	incf	4,f
  1116  08CF  0804               	movf	4,w
  1117  08D0  067D               	xorwf	125,w
  1118  08D1  1903               	btfsc	3,2
  1119  08D2  3400               	retlw	0
  1120  08D3  0AFF               	incf	127,f
  1121  08D4  1903               	btfsc	3,2
  1122  08D5  0AFE               	incf	126,f
  1123  08D6  28CA               	goto	init_ram0
  1124                           
  1125                           	psect	clrtext
  1126  17BE                     clear_ram0:	
  1127                           ;	Called with FSR containing the base address, and
  1128                           ;	W with the last address+1
  1129                           
  1130  17BE  0064               	clrwdt	;clear the watchdog before getting into this loop
  1131  17BF                     clrloop0:	
  1132  17BF  0180               	clrf	0	;clear RAM location pointed to by FSR
  1133  17C0  0A84               	incf	4,f	;increment pointer
  1134  17C1  0604               	xorwf	4,w	;XOR with final address
  1135  17C2  1903               	btfsc	3,2	;have we reached the end yet?
  1136  17C3  3400               	retlw	0	;all done for this memory range, return
  1137  17C4  0604               	xorwf	4,w	;XOR again to restore value
  1138  17C5  2FBF               	goto	clrloop0	;do the next byte
  1139                           
  1140                           	psect	cstackCOMMON
  1141  0070                     __pcstackCOMMON:	
  1142  0070                     ?_SetUp:	
  1143  0070                     ?_uartTX_Write:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ?_get_Time:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ?_get_temperatura:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ?_get_temperatura_obj:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ?_inclinacion_:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ?_mostrarLCD:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_pressBoton1:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ?_pressBoton2:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_LCD_init:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ?_LCD_clear:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_Zeit_Datum_Set:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ?_I2C_Master_Start:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_I2C_Master_Stop:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ?_init_ADC:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_LCD_Write_Character:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ?_LCD_Write_String:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?_uint_to_array:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ?_ISR:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ??_ISR:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_main:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_BCD_a_DEC:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_DEC_a_BCD:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_I2C_Master_Wait:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_LCD_Cmd:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215                           
  1216                           ; 1 bytes @ 0x0
  1217  0070                     	ds	2
  1218  0072                     ??_uartTX_Write:	
  1219  0072                     ?_OSC_config:	
  1220                           ; 1 bytes @ 0x2
  1221                           
  1222  0072                     ?_uart_init:	
  1223                           ; 1 bytes @ 0x2
  1224                           
  1225  0072                     ??_I2C_Master_Start:	
  1226                           ; 1 bytes @ 0x2
  1227                           
  1228  0072                     ??_I2C_Master_Stop:	
  1229                           ; 1 bytes @ 0x2
  1230                           
  1231  0072                     ??_init_ADC:	
  1232                           ; 1 bytes @ 0x2
  1233                           
  1234  0072                     ??_LCD_Write_Character:	
  1235                           ; 1 bytes @ 0x2
  1236                           
  1237  0072                     ??_I2C_Master_Wait:	
  1238                           ; 1 bytes @ 0x2
  1239                           
  1240  0072                     ??_LCD_Cmd:	
  1241                           ; 1 bytes @ 0x2
  1242                           
  1243  0072                     ?___bmul:	
  1244                           ; 1 bytes @ 0x2
  1245                           
  1246  0072                     ?_I2C_Master_Read:	
  1247                           ; 1 bytes @ 0x2
  1248                           
  1249  0072                     ?___wmul:	
  1250                           ; 2 bytes @ 0x2
  1251                           
  1252  0072                     ?___awmod:	
  1253                           ; 2 bytes @ 0x2
  1254                           
  1255  0072                     ?___lldiv:	
  1256                           ; 2 bytes @ 0x2
  1257                           
  1258  0072                     uartTX_Write@dato:	
  1259                           ; 4 bytes @ 0x2
  1260                           
  1261  0072                     ___bmul@multiplicand:	
  1262                           ; 1 bytes @ 0x2
  1263                           
  1264  0072                     I2C_Master_Read@a:	
  1265                           ; 1 bytes @ 0x2
  1266                           
  1267  0072                     ___wmul@multiplier:	
  1268                           ; 2 bytes @ 0x2
  1269                           
  1270  0072                     ___awmod@divisor:	
  1271                           ; 2 bytes @ 0x2
  1272                           
  1273  0072                     OSC_config@frecuencia:	
  1274                           ; 2 bytes @ 0x2
  1275                           
  1276  0072                     ___lldiv@divisor:	
  1277                           ; 4 bytes @ 0x2
  1278                           
  1279                           
  1280                           ; 4 bytes @ 0x2
  1281  0072                     	ds	1
  1282  0073                     ??___bmul:	
  1283  0073                     LCD_Write_Character@caracter:	
  1284                           ; 1 bytes @ 0x3
  1285                           
  1286                           
  1287                           ; 1 bytes @ 0x3
  1288  0073                     	ds	1
  1289  0074                     ??_uart_init:	
  1290  0074                     ??_LCD_Write_String:	
  1291                           ; 1 bytes @ 0x4
  1292                           
  1293  0074                     ??_I2C_Master_Read:	
  1294                           ; 1 bytes @ 0x4
  1295                           
  1296  0074                     init_ADC@channel:	
  1297                           ; 1 bytes @ 0x4
  1298                           
  1299  0074                     LCD_Cmd@comando:	
  1300                           ; 1 bytes @ 0x4
  1301                           
  1302  0074                     ___bmul@product:	
  1303                           ; 1 bytes @ 0x4
  1304                           
  1305  0074                     LCD_Write_String@n:	
  1306                           ; 1 bytes @ 0x4
  1307                           
  1308  0074                     ___wmul@multiplicand:	
  1309                           ; 2 bytes @ 0x4
  1310                           
  1311  0074                     ___awmod@dividend:	
  1312                           ; 2 bytes @ 0x4
  1313                           
  1314                           
  1315                           ; 2 bytes @ 0x4
  1316  0074                     	ds	1
  1317  0075                     ??_get_temperatura:	
  1318  0075                     ??_get_temperatura_obj:	
  1319                           ; 1 bytes @ 0x5
  1320                           
  1321  0075                     ??_inclinacion_:	
  1322                           ; 1 bytes @ 0x5
  1323                           
  1324  0075                     ??_LCD_init:	
  1325                           ; 1 bytes @ 0x5
  1326                           
  1327  0075                     ?_LCD_Create_Char:	
  1328                           ; 1 bytes @ 0x5
  1329                           
  1330  0075                     ??_LCD_clear:	
  1331                           ; 1 bytes @ 0x5
  1332                           
  1333  0075                     ?_LCD_Set_Cursor:	
  1334                           ; 1 bytes @ 0x5
  1335                           
  1336  0075                     LCD_Set_Cursor@columna:	
  1337                           ; 1 bytes @ 0x5
  1338                           
  1339  0075                     LCD_Create_Char@chardata:	
  1340                           ; 1 bytes @ 0x5
  1341                           
  1342  0075                     ___bmul@multiplier:	
  1343                           ; 1 bytes @ 0x5
  1344                           
  1345                           
  1346                           ; 1 bytes @ 0x5
  1347  0075                     	ds	1
  1348  0076                     ??_OSC_config:	
  1349  0076                     ??_LCD_Create_Char:	
  1350                           ; 1 bytes @ 0x6
  1351                           
  1352  0076                     ??_LCD_Set_Cursor:	
  1353                           ; 1 bytes @ 0x6
  1354                           
  1355  0076                     ??_BCD_a_DEC:	
  1356                           ; 1 bytes @ 0x6
  1357                           
  1358  0076                     ??___wmul:	
  1359                           ; 1 bytes @ 0x6
  1360                           
  1361  0076                     ??___awmod:	
  1362                           ; 1 bytes @ 0x6
  1363                           
  1364  0076                     LCD_Write_String@a:	
  1365                           ; 1 bytes @ 0x6
  1366                           
  1367  0076                     I2C_Master_Read@temp:	
  1368                           ; 1 bytes @ 0x6
  1369                           
  1370  0076                     ___wmul@product:	
  1371                           ; 2 bytes @ 0x6
  1372                           
  1373  0076                     ___lldiv@dividend:	
  1374                           ; 2 bytes @ 0x6
  1375                           
  1376                           
  1377                           ; 4 bytes @ 0x6
  1378  0076                     	ds	1
  1379  0077                     ??_pressBoton1:	
  1380  0077                     LCD_Create_Char@charnum:	
  1381                           ; 1 bytes @ 0x7
  1382                           
  1383  0077                     ___awmod@counter:	
  1384                           ; 1 bytes @ 0x7
  1385                           
  1386                           
  1387                           ; 1 bytes @ 0x7
  1388  0077                     	ds	1
  1389  0078                     ??___awdiv:	
  1390  0078                     LCD_Set_Cursor@linea:	
  1391                           ; 1 bytes @ 0x8
  1392                           
  1393  0078                     LCD_Create_Char@n:	
  1394                           ; 1 bytes @ 0x8
  1395                           
  1396  0078                     ___awmod@sign:	
  1397                           ; 1 bytes @ 0x8
  1398                           
  1399                           
  1400                           ; 1 bytes @ 0x8
  1401  0078                     	ds	1
  1402  0079                     BCD_a_DEC@numBCD:	
  1403  0079                     DEC_a_BCD@numDEC:	
  1404                           ; 1 bytes @ 0x9
  1405                           
  1406  0079                     LCD_Set_Cursor@corrimiento:	
  1407                           ; 1 bytes @ 0x9
  1408                           
  1409                           
  1410                           ; 1 bytes @ 0x9
  1411  0079                     	ds	1
  1412  007A                     ??_I2C_Master_Write:	
  1413                           
  1414                           	psect	cstackBANK0
  1415  0020                     __pcstackBANK0:	
  1416                           ; 1 bytes @ 0xA
  1417                           
  1418  0020                     ??_pressBoton2:	
  1419  0020                     ??___lldiv:	
  1420                           ; 1 bytes @ 0x0
  1421                           
  1422  0020                     ?___awdiv:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425  0020                     ___awdiv@divisor:	
  1426                           ; 2 bytes @ 0x0
  1427                           
  1428                           
  1429                           ; 2 bytes @ 0x0
  1430  0020                     	ds	1
  1431  0021                     ___lldiv@quotient:	
  1432                           
  1433                           ; 4 bytes @ 0x1
  1434  0021                     	ds	1
  1435  0022                     ___awdiv@dividend:	
  1436                           
  1437                           ; 2 bytes @ 0x2
  1438  0022                     	ds	2
  1439  0024                     ___awdiv@counter:	
  1440                           
  1441                           ; 1 bytes @ 0x4
  1442  0024                     	ds	1
  1443  0025                     ___lldiv@counter:	
  1444  0025                     ___awdiv@sign:	
  1445                           ; 1 bytes @ 0x5
  1446                           
  1447                           
  1448                           ; 1 bytes @ 0x5
  1449  0025                     	ds	1
  1450  0026                     ?_I2C_Master_Init:	
  1451  0026                     ___awdiv@quotient:	
  1452                           ; 1 bytes @ 0x6
  1453                           
  1454  0026                     I2C_Master_Init@c:	
  1455                           ; 2 bytes @ 0x6
  1456                           
  1457                           
  1458                           ; 4 bytes @ 0x6
  1459  0026                     	ds	2
  1460  0028                     ??_uint_to_array:	
  1461  0028                     ?_display_Uhrzeit:	
  1462                           ; 1 bytes @ 0x8
  1463                           
  1464  0028                     ?_display_Datum:	
  1465                           ; 1 bytes @ 0x8
  1466                           
  1467  0028                     ??_DEC_a_BCD:	
  1468                           ; 1 bytes @ 0x8
  1469                           
  1470  0028                     display_Uhrzeit@columna:	
  1471                           ; 1 bytes @ 0x8
  1472                           
  1473  0028                     display_Datum@columna:	
  1474                           ; 1 bytes @ 0x8
  1475                           
  1476                           
  1477                           ; 1 bytes @ 0x8
  1478  0028                     	ds	1
  1479  0029                     ??_display_Uhrzeit:	
  1480  0029                     ??_display_Datum:	
  1481                           ; 1 bytes @ 0x9
  1482                           
  1483                           
  1484                           ; 1 bytes @ 0x9
  1485  0029                     	ds	1
  1486  002A                     ??_I2C_Master_Init:	
  1487                           
  1488                           ; 1 bytes @ 0xA
  1489  002A                     	ds	2
  1490  002C                     display_Uhrzeit@fila:	
  1491  002C                     display_Datum@fila:	
  1492                           ; 1 bytes @ 0xC
  1493                           
  1494                           
  1495                           ; 1 bytes @ 0xC
  1496  002C                     	ds	1
  1497  002D                     ?_I2C_Master_Write:	
  1498  002D                     display_Uhrzeit@seg_u:	
  1499                           ; 1 bytes @ 0xD
  1500                           
  1501  002D                     display_Datum@dia_u:	
  1502                           ; 1 bytes @ 0xD
  1503                           
  1504  002D                     I2C_Master_Write@d:	
  1505                           ; 1 bytes @ 0xD
  1506                           
  1507                           
  1508                           ; 2 bytes @ 0xD
  1509  002D                     	ds	1
  1510  002E                     display_Uhrzeit@seg_d:	
  1511  002E                     display_Datum@dia_d:	
  1512                           ; 1 bytes @ 0xE
  1513                           
  1514  002E                     uint_to_array@decenas:	
  1515                           ; 1 bytes @ 0xE
  1516                           
  1517                           
  1518                           ; 1 bytes @ 0xE
  1519  002E                     	ds	1
  1520  002F                     ??_get_Time:	
  1521  002F                     ??_Zeit_Datum_Set:	
  1522                           ; 1 bytes @ 0xF
  1523                           
  1524  002F                     display_Uhrzeit@min_u:	
  1525                           ; 1 bytes @ 0xF
  1526                           
  1527  002F                     display_Datum@mes_u:	
  1528                           ; 1 bytes @ 0xF
  1529                           
  1530  002F                     uint_to_array@centenas:	
  1531                           ; 1 bytes @ 0xF
  1532                           
  1533                           
  1534                           ; 1 bytes @ 0xF
  1535  002F                     	ds	1
  1536  0030                     display_Uhrzeit@min_d:	
  1537  0030                     display_Datum@mes_d:	
  1538                           ; 1 bytes @ 0x10
  1539                           
  1540  0030                     uint_to_array@resultado:	
  1541                           ; 1 bytes @ 0x10
  1542                           
  1543                           
  1544                           ; 6 bytes @ 0x10
  1545  0030                     	ds	1
  1546  0031                     ??_SetUp:	
  1547  0031                     display_Uhrzeit@Uhr_u:	
  1548                           ; 1 bytes @ 0x11
  1549                           
  1550  0031                     display_Datum@jahr_u:	
  1551                           ; 1 bytes @ 0x11
  1552                           
  1553                           
  1554                           ; 1 bytes @ 0x11
  1555  0031                     	ds	1
  1556  0032                     display_Uhrzeit@Uhr_d:	
  1557  0032                     display_Datum@jahr_d:	
  1558                           ; 1 bytes @ 0x12
  1559                           
  1560                           
  1561                           ; 1 bytes @ 0x12
  1562  0032                     	ds	4
  1563  0036                     uint_to_array@numero:	
  1564                           
  1565                           ; 1 bytes @ 0x16
  1566  0036                     	ds	1
  1567  0037                     ??_mostrarLCD:	
  1568                           
  1569                           ; 1 bytes @ 0x17
  1570  0037                     	ds	3
  1571  003A                     mostrarLCD@pantalla:	
  1572                           
  1573                           ; 1 bytes @ 0x1A
  1574  003A                     	ds	7
  1575  0041                     ??_main:	
  1576                           
  1577                           ; 1 bytes @ 0x21
  1578  0041                     	ds	2
  1579                           
  1580                           	psect	maintext
  1581  0D66                     __pmaintext:	
  1582 ;;
  1583 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1584 ;;
  1585 ;; *************** function _main *****************
  1586 ;; Defined at:
  1587 ;;		line 144 in file "main_Master.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;		None
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;		None
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : B00/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1601 ;;      Params:         0       0       0       0       0
  1602 ;;      Locals:         0       0       0       0       0
  1603 ;;      Temps:          0       2       0       0       0
  1604 ;;      Totals:         0       2       0       0       0
  1605 ;;Total ram usage:        2 bytes
  1606 ;; Hardware stack levels required when called:    5
  1607 ;; This function calls:
  1608 ;;		_SetUp
  1609 ;;		_get_Time
  1610 ;;		_get_temperatura
  1611 ;;		_get_temperatura_obj
  1612 ;;		_inclinacion_
  1613 ;;		_mostrarLCD
  1614 ;;		_pressBoton1
  1615 ;;		_pressBoton2
  1616 ;;		_uartTX_Write
  1617 ;; This function is called by:
  1618 ;;		Startup code after reset
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           
  1623                           ;psect for function _main
  1624  0D66                     _main:	
  1625                           
  1626                           ;main_Master.c: 145:     SetUp();
  1627                           
  1628                           ;incstack = 0
  1629                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1630  0D66  120A  118A  2543  120A  158A  	fcall	_SetUp
  1631  0D6B                     l4572:	
  1632                           
  1633                           ;main_Master.c: 148:         uartTX_Write(125);
  1634  0D6B  307D               	movlw	125
  1635  0D6C  160A  118A  27B6  120A  158A  	fcall	_uartTX_Write
  1636                           
  1637                           ;main_Master.c: 149:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1638  0D71  300D               	movlw	13
  1639  0D72  1283               	bcf	3,5	;RP0=0, select bank0
  1640  0D73  1303               	bcf	3,6	;RP1=0, select bank0
  1641  0D74  00C2               	movwf	??_main+1
  1642  0D75  30FB               	movlw	251
  1643  0D76  00C1               	movwf	??_main
  1644  0D77                     u1887:	
  1645  0D77  0BC1               	decfsz	??_main,f
  1646  0D78  2D77               	goto	u1887
  1647  0D79  0BC2               	decfsz	??_main+1,f
  1648  0D7A  2D77               	goto	u1887
  1649                           
  1650                           ;main_Master.c: 150:         get_Time();
  1651  0D7B  120A  118A  234D  120A  158A  	fcall	_get_Time
  1652                           
  1653                           ;main_Master.c: 151:         uartTX_Write(hora);
  1654  0D80  1283               	bcf	3,5	;RP0=0, select bank0
  1655  0D81  1303               	bcf	3,6	;RP1=0, select bank0
  1656  0D82  085D               	movf	_hora,w
  1657  0D83  160A  118A  27B6  120A  158A  	fcall	_uartTX_Write
  1658                           
  1659                           ;main_Master.c: 152:         _delay((unsigned long)((50)*(4000000/4000.0)));
  1660  0D88  3041               	movlw	65
  1661  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  1662  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  1663  0D8B  00C2               	movwf	??_main+1
  1664  0D8C  30ED               	movlw	237
  1665  0D8D  00C1               	movwf	??_main
  1666  0D8E                     u1897:	
  1667  0D8E  0BC1               	decfsz	??_main,f
  1668  0D8F  2D8E               	goto	u1897
  1669  0D90  0BC2               	decfsz	??_main+1,f
  1670  0D91  2D8E               	goto	u1897
  1671  0D92  2D93               	nop2
  1672                           
  1673                           ;main_Master.c: 153:         uartTX_Write(min);
  1674  0D93  1283               	bcf	3,5	;RP0=0, select bank0
  1675  0D94  1303               	bcf	3,6	;RP1=0, select bank0
  1676  0D95  085E               	movf	_min,w
  1677  0D96  160A  118A  27B6  120A  158A  	fcall	_uartTX_Write
  1678                           
  1679                           ;main_Master.c: 154:         _delay((unsigned long)((50)*(4000000/4000.0)));
  1680  0D9B  3041               	movlw	65
  1681  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  1682  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  1683  0D9E  00C2               	movwf	??_main+1
  1684  0D9F  30ED               	movlw	237
  1685  0DA0  00C1               	movwf	??_main
  1686  0DA1                     u1907:	
  1687  0DA1  0BC1               	decfsz	??_main,f
  1688  0DA2  2DA1               	goto	u1907
  1689  0DA3  0BC2               	decfsz	??_main+1,f
  1690  0DA4  2DA1               	goto	u1907
  1691  0DA5  2DA6               	nop2
  1692                           
  1693                           ;main_Master.c: 155:         uartTX_Write(seg);
  1694  0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  1695  0DA7  1303               	bcf	3,6	;RP1=0, select bank0
  1696  0DA8  0853               	movf	_seg,w
  1697  0DA9  160A  118A  27B6  120A  158A  	fcall	_uartTX_Write
  1698                           
  1699                           ;main_Master.c: 156:         get_temperatura();
  1700  0DAE  120A  158A  2118  120A  158A  	fcall	_get_temperatura
  1701                           
  1702                           ;main_Master.c: 157:         uartTX_Write(temperatura);
  1703  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  1704  0DB4  1303               	bcf	3,6	;RP1=0, select bank0
  1705  0DB5  0851               	movf	_temperatura,w
  1706  0DB6  160A  118A  27B6  120A  158A  	fcall	_uartTX_Write
  1707                           
  1708                           ;main_Master.c: 158:         get_temperatura_obj();
  1709  0DBB  120A  158A  212F  120A  158A  	fcall	_get_temperatura_obj
  1710                           
  1711                           ;main_Master.c: 159:         uartTX_Write(temperatura_obj);
  1712  0DC0  1283               	bcf	3,5	;RP0=0, select bank0
  1713  0DC1  1303               	bcf	3,6	;RP1=0, select bank0
  1714  0DC2  0850               	movf	_temperatura_obj,w
  1715  0DC3  160A  118A  27B6  120A  158A  	fcall	_uartTX_Write
  1716                           
  1717                           ;main_Master.c: 160:         inclinacion_();
  1718  0DC8  120A  158A  2146  120A  158A  	fcall	_inclinacion_
  1719                           
  1720                           ;main_Master.c: 161:         uartTX_Write(inclinacion);
  1721  0DCD  1283               	bcf	3,5	;RP0=0, select bank0
  1722  0DCE  1303               	bcf	3,6	;RP1=0, select bank0
  1723  0DCF  0857               	movf	_inclinacion,w
  1724  0DD0  160A  118A  27B6  120A  158A  	fcall	_uartTX_Write
  1725                           
  1726                           ;main_Master.c: 168:         mostrarLCD(estado);
  1727  0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  1728  0DD6  1303               	bcf	3,6	;RP1=0, select bank0
  1729  0DD7  0854               	movf	_estado,w
  1730  0DD8  120A  118A  2029  120A  158A  	fcall	_mostrarLCD
  1731                           
  1732                           ;main_Master.c: 169:         pressBoton1();
  1733  0DDD  120A  158A  23F6  120A  158A  	fcall	_pressBoton1
  1734                           
  1735                           ;main_Master.c: 170:         pressBoton2();
  1736  0DE2  120A  158A  25FA  120A  158A  	fcall	_pressBoton2
  1737                           
  1738                           ;main_Master.c: 173:         uartTX_Write(humedad);
  1739  0DE7  3005               	movlw	5
  1740  0DE8  160A  118A  27B6  120A  158A  	fcall	_uartTX_Write
  1741                           
  1742                           ;main_Master.c: 174:         uartTX_Write(d_frente);
  1743  0DED  3066               	movlw	102
  1744  0DEE  160A  118A  27B6  120A  158A  	fcall	_uartTX_Write
  1745                           
  1746                           ;main_Master.c: 175:         uartTX_Write(d_atras);
  1747  0DF3  3066               	movlw	102
  1748  0DF4  160A  118A  27B6  120A  158A  	fcall	_uartTX_Write
  1749  0DF9  2D6B               	goto	l4572
  1750  0DFA                     __end_of_main:	
  1751                           
  1752                           	psect	text1
  1753  17B6                     __ptext1:	
  1754 ;; *************** function _uartTX_Write *****************
  1755 ;; Defined at:
  1756 ;;		line 34 in file "UART.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  dato            1    wreg     unsigned char 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  dato            1    2[COMMON] unsigned char 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1770 ;;      Params:         0       0       0       0       0
  1771 ;;      Locals:         1       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0
  1773 ;;      Totals:         1       0       0       0       0
  1774 ;;Total ram usage:        1 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:    1
  1777 ;; This function calls:
  1778 ;;		Nothing
  1779 ;; This function is called by:
  1780 ;;		_main
  1781 ;;		_uartTX_Write_Str
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           
  1786                           ;psect for function _uartTX_Write
  1787  17B6                     _uartTX_Write:	
  1788                           
  1789                           ;incstack = 0
  1790                           ; Regs used in _uartTX_Write: [wreg]
  1791                           ;uartTX_Write@dato stored from wreg
  1792  17B6  00F2               	movwf	uartTX_Write@dato
  1793                           
  1794                           ;UART.c: 35:     TXREG = dato;
  1795  17B7  0872               	movf	uartTX_Write@dato,w
  1796  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  1797  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  1798  17BA  0099               	movwf	25	;volatile
  1799  17BB                     l488:	
  1800                           ;UART.c: 36:     while(PIR1bits.TXIF == 0);
  1801                           
  1802  17BB  1A0C               	btfsc	12,4	;volatile
  1803  17BC  0008               	return
  1804  17BD  2FBB               	goto	l488
  1805  17BE                     __end_of_uartTX_Write:	
  1806                           
  1807                           	psect	text2
  1808  0DFA                     __ptext2:	
  1809 ;; *************** function _pressBoton2 *****************
  1810 ;; Defined at:
  1811 ;;		line 656 in file "main_Master.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1825 ;;      Params:         0       0       0       0       0
  1826 ;;      Locals:         0       0       0       0       0
  1827 ;;      Temps:          0       2       0       0       0
  1828 ;;      Totals:         0       2       0       0       0
  1829 ;;Total ram usage:        2 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    3
  1832 ;; This function calls:
  1833 ;;		_LCD_Set_Cursor
  1834 ;;		_LCD_Write_Character
  1835 ;;		_LCD_clear
  1836 ;; This function is called by:
  1837 ;;		_main
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           
  1842                           ;psect for function _pressBoton2
  1843  0DFA                     _pressBoton2:	
  1844                           
  1845                           ;main_Master.c: 657:     if (banderaBoton == 1){
  1846                           
  1847                           ;incstack = 0
  1848                           ; Regs used in _pressBoton2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1849  0DFA  037B               	decf	_banderaBoton,w
  1850  0DFB  1D03               	btfss	3,2
  1851  0DFC  2E8E               	goto	l4558
  1852                           
  1853                           ;main_Master.c: 658:         if (banderaPUSH2 == 0){
  1854  0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  1855  0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  1856  0DFF  084E               	movf	_banderaPUSH2,w
  1857  0E00  1D03               	btfss	3,2
  1858  0E01  2E8E               	goto	l4558
  1859                           
  1860                           ;main_Master.c: 659:             if (PORTBbits.RB2 == 0){
  1861  0E02  1D06               	btfss	6,2	;volatile
  1862  0E03  2E6F               	goto	l4550
  1863  0E04  2E88               	goto	l4552
  1864  0E05                     l4518:	
  1865                           
  1866                           ;main_Master.c: 662:                         estado = 6;
  1867  0E05  3006               	movlw	6
  1868  0E06  2E60               	goto	L5
  1869  0E07                     l4520:	
  1870                           ;main_Master.c: 663:                         break;
  1871                           
  1872                           
  1873                           ;main_Master.c: 665:                         LCD_Set_Cursor(2,0);
  1874  0E07  01F5               	clrf	LCD_Set_Cursor@columna
  1875  0E08  3002               	movlw	2
  1876  0E09  120A  158A  21F8  120A  158A  	fcall	_LCD_Set_Cursor
  1877                           
  1878                           ;main_Master.c: 666:                         LCD_Write_Character(1);
  1879  0E0E  3001               	movlw	1
  1880  0E0F  160A  118A  27CF  120A  158A  	fcall	_LCD_Write_Character
  1881                           
  1882                           ;main_Master.c: 667:                         _delay((unsigned long)((100)*(4000000/4000.
      +                          0)));
  1883  0E14  3082               	movlw	130
  1884  0E15  1283               	bcf	3,5	;RP0=0, select bank0
  1885  0E16  1303               	bcf	3,6	;RP1=0, select bank0
  1886  0E17  00A1               	movwf	??_pressBoton2+1
  1887  0E18  30DD               	movlw	221
  1888  0E19  00A0               	movwf	??_pressBoton2
  1889  0E1A                     u1917:	
  1890  0E1A  0BA0               	decfsz	??_pressBoton2,f
  1891  0E1B  2E1A               	goto	u1917
  1892  0E1C  0BA1               	decfsz	??_pressBoton2+1,f
  1893  0E1D  2E1A               	goto	u1917
  1894                           
  1895                           ;main_Master.c: 668:                         estado = 7;
  1896  0E1E  3007               	movlw	7
  1897  0E1F  2E5E               	goto	L6
  1898  0E20                     l4528:	
  1899                           ;main_Master.c: 669:                         break;
  1900                           
  1901                           
  1902                           ;main_Master.c: 671:                         LCD_Set_Cursor(2,7);
  1903  0E20  3007               	movlw	7
  1904  0E21  00A0               	movwf	??_pressBoton2
  1905  0E22  0820               	movf	??_pressBoton2,w
  1906  0E23  00F5               	movwf	LCD_Set_Cursor@columna
  1907  0E24  3002               	movlw	2
  1908  0E25  120A  158A  21F8  120A  158A  	fcall	_LCD_Set_Cursor
  1909                           
  1910                           ;main_Master.c: 672:                         LCD_Write_Character(1);
  1911  0E2A  3001               	movlw	1
  1912  0E2B  160A  118A  27CF  120A  158A  	fcall	_LCD_Write_Character
  1913                           
  1914                           ;main_Master.c: 673:                         _delay((unsigned long)((100)*(4000000/4000.
      +                          0)));
  1915  0E30  3082               	movlw	130
  1916  0E31  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0E32  1303               	bcf	3,6	;RP1=0, select bank0
  1918  0E33  00A1               	movwf	??_pressBoton2+1
  1919  0E34  30DD               	movlw	221
  1920  0E35  00A0               	movwf	??_pressBoton2
  1921  0E36                     u1927:	
  1922  0E36  0BA0               	decfsz	??_pressBoton2,f
  1923  0E37  2E36               	goto	u1927
  1924  0E38  0BA1               	decfsz	??_pressBoton2+1,f
  1925  0E39  2E36               	goto	u1927
  1926                           
  1927                           ;main_Master.c: 674:                         estado = 8;
  1928  0E3A  3008               	movlw	8
  1929  0E3B  2E5E               	goto	L6
  1930  0E3C                     l4536:	
  1931                           ;main_Master.c: 675:                         break;
  1932                           
  1933                           
  1934                           ;main_Master.c: 677:                         LCD_Set_Cursor(2,10);
  1935  0E3C  300A               	movlw	10
  1936  0E3D  00A0               	movwf	??_pressBoton2
  1937  0E3E  0820               	movf	??_pressBoton2,w
  1938  0E3F  00F5               	movwf	LCD_Set_Cursor@columna
  1939  0E40  3002               	movlw	2
  1940  0E41  120A  158A  21F8  120A  158A  	fcall	_LCD_Set_Cursor
  1941                           
  1942                           ;main_Master.c: 678:                         LCD_Write_Character(1);
  1943  0E46  3001               	movlw	1
  1944  0E47  160A  118A  27CF  120A  158A  	fcall	_LCD_Write_Character
  1945                           
  1946                           ;main_Master.c: 679:                         _delay((unsigned long)((100)*(4000000/4000.
      +                          0)));
  1947  0E4C  3082               	movlw	130
  1948  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  1949  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  1950  0E4F  00A1               	movwf	??_pressBoton2+1
  1951  0E50  30DD               	movlw	221
  1952  0E51  00A0               	movwf	??_pressBoton2
  1953  0E52                     u1937:	
  1954  0E52  0BA0               	decfsz	??_pressBoton2,f
  1955  0E53  2E52               	goto	u1937
  1956  0E54  0BA1               	decfsz	??_pressBoton2+1,f
  1957  0E55  2E52               	goto	u1937
  1958                           
  1959                           ;main_Master.c: 680:                         estado = 9;
  1960  0E56  3009               	movlw	9
  1961  0E57  2E5E               	goto	L6
  1962  0E58                     l4544:	
  1963                           ;main_Master.c: 681:                         break;
  1964                           
  1965                           
  1966                           ;main_Master.c: 683:                         LCD_clear();
  1967  0E58  120A  158A  20EC  120A  158A  	fcall	_LCD_clear
  1968                           
  1969                           ;main_Master.c: 684:                         estado = 10;
  1970  0E5D  300A               	movlw	10
  1971  0E5E                     L6:	
  1972  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  1973  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  1974  0E60                     L5:	
  1975  0E60  00A0               	movwf	??_pressBoton2
  1976  0E61  0820               	movf	??_pressBoton2,w
  1977  0E62  00D4               	movwf	_estado
  1978                           
  1979                           ;main_Master.c: 685:                         break;
  1980  0E63  2E88               	goto	l4552
  1981  0E64                     l4548:	
  1982                           
  1983                           ;main_Master.c: 687:                         _delay((unsigned long)((10)*(4000000/4000.0
      +                          )));
  1984  0E64  300D               	movlw	13
  1985  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  1986  0E66  1303               	bcf	3,6	;RP1=0, select bank0
  1987  0E67  00A1               	movwf	??_pressBoton2+1
  1988  0E68  30FB               	movlw	251
  1989  0E69  00A0               	movwf	??_pressBoton2
  1990  0E6A                     u1947:	
  1991  0E6A  0BA0               	decfsz	??_pressBoton2,f
  1992  0E6B  2E6A               	goto	u1947
  1993  0E6C  0BA1               	decfsz	??_pressBoton2+1,f
  1994  0E6D  2E6A               	goto	u1947
  1995                           
  1996                           ;main_Master.c: 688:                 }
  1997  0E6E  2E88               	goto	l4552
  1998  0E6F                     l4550:	
  1999  0E6F  0854               	movf	_estado,w
  2000  0E70  00A0               	movwf	??_pressBoton2
  2001  0E71  01A1               	clrf	??_pressBoton2+1
  2002                           
  2003                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2004                           ; Switch size 1, requested type "simple"
  2005                           ; Number of cases is 1, Range of values is 0 to 0
  2006                           ; switch strategies available:
  2007                           ; Name         Instructions Cycles
  2008                           ; simple_byte            4     3 (average)
  2009                           ; direct_byte           11     8 (fixed)
  2010                           ; jumptable            260     6 (fixed)
  2011                           ;	Chosen strategy is simple_byte
  2012  0E72  0821               	movf	??_pressBoton2+1,w
  2013  0E73  3A00               	xorlw	0	; case 0
  2014  0E74  1903               	skipnz
  2015  0E75  2E77               	goto	l5062
  2016  0E76  2E64               	goto	l4548
  2017  0E77                     l5062:	
  2018                           
  2019                           ; Switch size 1, requested type "simple"
  2020                           ; Number of cases is 5, Range of values is 5 to 9
  2021                           ; switch strategies available:
  2022                           ; Name         Instructions Cycles
  2023                           ; simple_byte           16     9 (average)
  2024                           ; direct_byte           26    11 (fixed)
  2025                           ; jumptable            263     9 (fixed)
  2026                           ;	Chosen strategy is simple_byte
  2027  0E77  0820               	movf	??_pressBoton2,w
  2028  0E78  3A05               	xorlw	5	; case 5
  2029  0E79  1903               	skipnz
  2030  0E7A  2E05               	goto	l4518
  2031  0E7B  3A03               	xorlw	3	; case 6
  2032  0E7C  1903               	skipnz
  2033  0E7D  2E07               	goto	l4520
  2034  0E7E  3A01               	xorlw	1	; case 7
  2035  0E7F  1903               	skipnz
  2036  0E80  2E20               	goto	l4528
  2037  0E81  3A0F               	xorlw	15	; case 8
  2038  0E82  1903               	skipnz
  2039  0E83  2E3C               	goto	l4536
  2040  0E84  3A01               	xorlw	1	; case 9
  2041  0E85  1903               	skipnz
  2042  0E86  2E58               	goto	l4544
  2043  0E87  2E64               	goto	l4548
  2044  0E88                     l4552:	
  2045                           
  2046                           ;main_Master.c: 690:                 banderaBoton = 0;
  2047  0E88  01FB               	clrf	_banderaBoton
  2048                           
  2049                           ;main_Master.c: 691:                 banderaPUSH2 = 1;
  2050  0E89  1283               	bcf	3,5	;RP0=0, select bank0
  2051  0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  2052  0E8B  01CE               	clrf	_banderaPUSH2
  2053  0E8C  0ACE               	incf	_banderaPUSH2,f
  2054                           
  2055                           ;main_Master.c: 692:                 INTCONbits.RBIE = 1;
  2056  0E8D  158B               	bsf	11,3	;volatile
  2057  0E8E                     l4558:	
  2058                           
  2059                           ;main_Master.c: 695:     if (banderaPUSH2 == 1){
  2060  0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  2062  0E90  034E               	decf	_banderaPUSH2,w
  2063  0E91  1D03               	btfss	3,2
  2064  0E92  0008               	return
  2065                           
  2066                           ;main_Master.c: 696:         if (PORTBbits.RB2 == 1){
  2067  0E93  1D06               	btfss	6,2	;volatile
  2068  0E94  0008               	return
  2069                           
  2070                           ;main_Master.c: 697:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2071  0E95  300D               	movlw	13
  2072  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  2073  0E97  1303               	bcf	3,6	;RP1=0, select bank0
  2074  0E98  00A1               	movwf	??_pressBoton2+1
  2075  0E99  30FB               	movlw	251
  2076  0E9A  00A0               	movwf	??_pressBoton2
  2077  0E9B                     u1957:	
  2078  0E9B  0BA0               	decfsz	??_pressBoton2,f
  2079  0E9C  2E9B               	goto	u1957
  2080  0E9D  0BA1               	decfsz	??_pressBoton2+1,f
  2081  0E9E  2E9B               	goto	u1957
  2082                           
  2083                           ;main_Master.c: 698:         banderaPUSH2 = 0;
  2084  0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  2086  0EA1  01CE               	clrf	_banderaPUSH2
  2087  0EA2  0008               	return
  2088  0EA3                     __end_of_pressBoton2:	
  2089                           
  2090                           	psect	text3
  2091  0BF6                     __ptext3:	
  2092 ;; *************** function _pressBoton1 *****************
  2093 ;; Defined at:
  2094 ;;		line 611 in file "main_Master.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;		None
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;		None
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      void 
  2101 ;; Registers used:
  2102 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2108 ;;      Params:         0       0       0       0       0
  2109 ;;      Locals:         0       0       0       0       0
  2110 ;;      Temps:          2       0       0       0       0
  2111 ;;      Totals:         2       0       0       0       0
  2112 ;;Total ram usage:        2 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:    3
  2115 ;; This function calls:
  2116 ;;		_LCD_clear
  2117 ;; This function is called by:
  2118 ;;		_main
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           
  2123                           ;psect for function _pressBoton1
  2124  0BF6                     _pressBoton1:	
  2125                           
  2126                           ;main_Master.c: 612:     if (banderaBoton == 1){
  2127                           
  2128                           ;incstack = 0
  2129                           ; Regs used in _pressBoton1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2130  0BF6  037B               	decf	_banderaBoton,w
  2131  0BF7  1D03               	btfss	3,2
  2132  0BF8  2C53               	goto	l3394
  2133                           
  2134                           ;main_Master.c: 613:         if (banderaPUSH1 == 0){
  2135  0BF9  087A               	movf	_banderaPUSH1,w
  2136  0BFA  1D03               	btfss	3,2
  2137  0BFB  2C53               	goto	l3394
  2138                           
  2139                           ;main_Master.c: 614:             if (PORTBbits.RB1 == 0){
  2140  0BFC  1283               	bcf	3,5	;RP0=0, select bank0
  2141  0BFD  1303               	bcf	3,6	;RP1=0, select bank0
  2142  0BFE  1C86               	btfss	6,1	;volatile
  2143  0BFF  2C3C               	goto	l3386
  2144  0C00  2C53               	goto	l3394
  2145  0C01                     l3358:	
  2146                           
  2147                           ;main_Master.c: 617:                         velocidad ++;
  2148  0C01  3001               	movlw	1
  2149  0C02  00F7               	movwf	??_pressBoton1
  2150  0C03  0877               	movf	??_pressBoton1,w
  2151  0C04  07D2               	addwf	_velocidad,f
  2152                           
  2153                           ;main_Master.c: 618:                         if (velocidad > 3){
  2154  0C05  3004               	movlw	4
  2155  0C06  0252               	subwf	_velocidad,w
  2156  0C07  1C03               	skipc
  2157  0C08  2C4F               	goto	l3388
  2158                           
  2159                           ;main_Master.c: 619:                             velocidad = 1;
  2160  0C09  01D2               	clrf	_velocidad
  2161  0C0A  0AD2               	incf	_velocidad,f
  2162  0C0B  2C4F               	goto	l3388
  2163  0C0C                     l3364:	
  2164                           
  2165                           ;main_Master.c: 623:                         largo ++;
  2166  0C0C  3001               	movlw	1
  2167  0C0D  00F7               	movwf	??_pressBoton1
  2168  0C0E  0877               	movf	??_pressBoton1,w
  2169  0C0F  07CD               	addwf	_largo,f
  2170                           
  2171                           ;main_Master.c: 624:                         if (largo > 8){
  2172  0C10  3009               	movlw	9
  2173  0C11  024D               	subwf	_largo,w
  2174  0C12  1C03               	skipc
  2175  0C13  2C4F               	goto	l3388
  2176                           
  2177                           ;main_Master.c: 625:                             largo = 1;
  2178  0C14  01CD               	clrf	_largo
  2179  0C15  0ACD               	incf	_largo,f
  2180  0C16  2C4F               	goto	l3388
  2181  0C17                     l3370:	
  2182                           
  2183                           ;main_Master.c: 629:                         ancho ++;
  2184  0C17  3001               	movlw	1
  2185  0C18  00F7               	movwf	??_pressBoton1
  2186  0C19  0877               	movf	??_pressBoton1,w
  2187  0C1A  07CC               	addwf	_ancho,f
  2188                           
  2189                           ;main_Master.c: 630:                         if (ancho > 8){
  2190  0C1B  3009               	movlw	9
  2191  0C1C  024C               	subwf	_ancho,w
  2192  0C1D  1C03               	skipc
  2193  0C1E  2C4F               	goto	l3388
  2194                           
  2195                           ;main_Master.c: 631:                             ancho = 1;
  2196  0C1F  01CC               	clrf	_ancho
  2197  0C20  0ACC               	incf	_ancho,f
  2198  0C21  2C4F               	goto	l3388
  2199  0C22                     l3376:	
  2200                           
  2201                           ;main_Master.c: 635:                         LCD_clear();
  2202  0C22  120A  158A  20EC  120A  158A  	fcall	_LCD_clear
  2203                           
  2204                           ;main_Master.c: 636:                     _delay((unsigned long)((10)*(4000000/4000.0)));
  2205  0C27  300D               	movlw	13
  2206  0C28  00F8               	movwf	??_pressBoton1+1
  2207  0C29  30FB               	movlw	251
  2208  0C2A  00F7               	movwf	??_pressBoton1
  2209  0C2B                     u1967:	
  2210  0C2B  0BF7               	decfsz	??_pressBoton1,f
  2211  0C2C  2C2B               	goto	u1967
  2212  0C2D  0BF8               	decfsz	??_pressBoton1+1,f
  2213  0C2E  2C2B               	goto	u1967
  2214  0C2F  2C30               	nop2
  2215                           
  2216                           ;main_Master.c: 637:                     estado ++;
  2217  0C30  3001               	movlw	1
  2218  0C31  00F7               	movwf	??_pressBoton1
  2219  0C32  0877               	movf	??_pressBoton1,w
  2220  0C33  1283               	bcf	3,5	;RP0=0, select bank0
  2221  0C34  1303               	bcf	3,6	;RP1=0, select bank0
  2222  0C35  07D4               	addwf	_estado,f
  2223                           
  2224                           ;main_Master.c: 638:                     if (estado > 5){
  2225  0C36  3006               	movlw	6
  2226  0C37  0254               	subwf	_estado,w
  2227  0C38  1C03               	skipc
  2228  0C39  2C4F               	goto	l3388
  2229                           
  2230                           ;main_Master.c: 639:                         estado = 0;
  2231  0C3A  01D4               	clrf	_estado
  2232  0C3B  2C4F               	goto	l3388
  2233  0C3C                     l3386:	
  2234  0C3C  0854               	movf	_estado,w
  2235  0C3D  00F7               	movwf	??_pressBoton1
  2236  0C3E  01F8               	clrf	??_pressBoton1+1
  2237                           
  2238                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2239                           ; Switch size 1, requested type "simple"
  2240                           ; Number of cases is 1, Range of values is 0 to 0
  2241                           ; switch strategies available:
  2242                           ; Name         Instructions Cycles
  2243                           ; simple_byte            4     3 (average)
  2244                           ; direct_byte           11     8 (fixed)
  2245                           ; jumptable            260     6 (fixed)
  2246                           ;	Chosen strategy is simple_byte
  2247  0C3F  0878               	movf	??_pressBoton1+1,w
  2248  0C40  3A00               	xorlw	0	; case 0
  2249  0C41  1903               	skipnz
  2250  0C42  2C44               	goto	l5064
  2251  0C43  2C22               	goto	l3376
  2252  0C44                     l5064:	
  2253                           
  2254                           ; Switch size 1, requested type "simple"
  2255                           ; Number of cases is 3, Range of values is 6 to 8
  2256                           ; switch strategies available:
  2257                           ; Name         Instructions Cycles
  2258                           ; simple_byte           10     6 (average)
  2259                           ; direct_byte           20    11 (fixed)
  2260                           ; jumptable            263     9 (fixed)
  2261                           ;	Chosen strategy is simple_byte
  2262  0C44  0877               	movf	??_pressBoton1,w
  2263  0C45  3A06               	xorlw	6	; case 6
  2264  0C46  1903               	skipnz
  2265  0C47  2C01               	goto	l3358
  2266  0C48  3A01               	xorlw	1	; case 7
  2267  0C49  1903               	skipnz
  2268  0C4A  2C0C               	goto	l3364
  2269  0C4B  3A0F               	xorlw	15	; case 8
  2270  0C4C  1903               	skipnz
  2271  0C4D  2C17               	goto	l3370
  2272  0C4E  2C22               	goto	l3376
  2273  0C4F                     l3388:	
  2274                           
  2275                           ;main_Master.c: 642:                 banderaBoton = 0;
  2276  0C4F  01FB               	clrf	_banderaBoton
  2277                           
  2278                           ;main_Master.c: 643:                 banderaPUSH1 = 1;
  2279  0C50  01FA               	clrf	_banderaPUSH1
  2280  0C51  0AFA               	incf	_banderaPUSH1,f
  2281                           
  2282                           ;main_Master.c: 644:                 INTCONbits.RBIE = 1;
  2283  0C52  158B               	bsf	11,3	;volatile
  2284  0C53                     l3394:	
  2285                           
  2286                           ;main_Master.c: 648:     if (banderaPUSH1 == 1){
  2287  0C53  037A               	decf	_banderaPUSH1,w
  2288  0C54  1D03               	btfss	3,2
  2289  0C55  0008               	return
  2290                           
  2291                           ;main_Master.c: 649:         if (PORTBbits.RB1 == 1){
  2292  0C56  1283               	bcf	3,5	;RP0=0, select bank0
  2293  0C57  1303               	bcf	3,6	;RP1=0, select bank0
  2294  0C58  1C86               	btfss	6,1	;volatile
  2295  0C59  0008               	return
  2296                           
  2297                           ;main_Master.c: 650:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2298  0C5A  300D               	movlw	13
  2299  0C5B  00F8               	movwf	??_pressBoton1+1
  2300  0C5C  30FB               	movlw	251
  2301  0C5D  00F7               	movwf	??_pressBoton1
  2302  0C5E                     u1977:	
  2303  0C5E  0BF7               	decfsz	??_pressBoton1,f
  2304  0C5F  2C5E               	goto	u1977
  2305  0C60  0BF8               	decfsz	??_pressBoton1+1,f
  2306  0C61  2C5E               	goto	u1977
  2307  0C62  2C63               	nop2
  2308                           
  2309                           ;main_Master.c: 651:         banderaPUSH1 = 0;
  2310  0C63  01FA               	clrf	_banderaPUSH1
  2311  0C64  0008               	return
  2312  0C65                     __end_of_pressBoton1:	
  2313                           
  2314                           	psect	text4
  2315  0029                     __ptext4:	
  2316 ;; *************** function _mostrarLCD *****************
  2317 ;; Defined at:
  2318 ;;		line 435 in file "main_Master.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;  pantalla        1    wreg     unsigned char 
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;  pantalla        1   26[BANK0 ] unsigned char 
  2323 ;;  dec_atras       1    0        unsigned char 
  2324 ;;  uni_atras       1    0        unsigned char 
  2325 ;;  dec_frente      1    0        unsigned char 
  2326 ;;  uni_frente      1    0        unsigned char 
  2327 ;;  decenas_hume    1    0        unsigned char 
  2328 ;;  unidades_hum    1    0        unsigned char 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2338 ;;      Params:         0       0       0       0       0
  2339 ;;      Locals:         0       7       0       0       0
  2340 ;;      Temps:          0       3       0       0       0
  2341 ;;      Totals:         0      10       0       0       0
  2342 ;;Total ram usage:       10 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:    4
  2345 ;; This function calls:
  2346 ;;		_I2C_Master_Start
  2347 ;;		_I2C_Master_Stop
  2348 ;;		_I2C_Master_Write
  2349 ;;		_LCD_Set_Cursor
  2350 ;;		_LCD_Write_Character
  2351 ;;		_LCD_Write_String
  2352 ;;		_LCD_clear
  2353 ;;		_display_Datum
  2354 ;;		_display_Uhrzeit
  2355 ;;		_uint_to_array
  2356 ;; This function is called by:
  2357 ;;		_main
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           
  2362                           ;psect for function _mostrarLCD
  2363  0029                     _mostrarLCD:	
  2364                           
  2365                           ;incstack = 0
  2366                           ; Regs used in _mostrarLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2367                           ;mostrarLCD@pantalla stored from wreg
  2368  0029  1283               	bcf	3,5	;RP0=0, select bank0
  2369  002A  1303               	bcf	3,6	;RP1=0, select bank0
  2370  002B  00BA               	movwf	mostrarLCD@pantalla
  2371                           
  2372                           ;main_Master.c: 436:     switch(pantalla){
  2373  002C  2B21               	goto	l4502
  2374  002D                     l4338:	
  2375                           
  2376                           ;main_Master.c: 438:             display_Uhrzeit(2,4);
  2377  002D  3004               	movlw	4
  2378  002E  00B7               	movwf	??_mostrarLCD
  2379  002F  0837               	movf	??_mostrarLCD,w
  2380  0030  00A8               	movwf	display_Uhrzeit@columna
  2381  0031  3002               	movlw	2
  2382  0032  120A  118A  26FA  120A  118A  	fcall	_display_Uhrzeit
  2383                           
  2384                           ;main_Master.c: 439:             display_Datum(1,3);
  2385  0037  3003               	movlw	3
  2386  0038  1283               	bcf	3,5	;RP0=0, select bank0
  2387  0039  1303               	bcf	3,6	;RP1=0, select bank0
  2388  003A  00B7               	movwf	??_mostrarLCD
  2389  003B  0837               	movf	??_mostrarLCD,w
  2390  003C  00A8               	movwf	display_Datum@columna
  2391  003D  3001               	movlw	1
  2392  003E  120A  118A  2622   	fcall	_display_Datum
  2393                           
  2394                           ;main_Master.c: 440:             break;
  2395  0041  0008               	return
  2396  0042                     l4340:	
  2397                           
  2398                           ;main_Master.c: 442:             LCD_Set_Cursor(1,0);
  2399  0042  01F5               	clrf	LCD_Set_Cursor@columna
  2400  0043  3001               	movlw	1
  2401  0044  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2402                           
  2403                           ;main_Master.c: 443:             LCD_Write_String("Ambiente: Suelo:");
  2404  0049  3029               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2405  004A  120A  158A  217E  120A  118A  	fcall	_LCD_Write_String
  2406                           
  2407                           ;main_Master.c: 444:             LCD_Set_Cursor(2,2);
  2408  004F  3002               	movlw	2
  2409  0050  1283               	bcf	3,5	;RP0=0, select bank0
  2410  0051  1303               	bcf	3,6	;RP1=0, select bank0
  2411  0052  00B7               	movwf	??_mostrarLCD
  2412  0053  0837               	movf	??_mostrarLCD,w
  2413  0054  00F5               	movwf	LCD_Set_Cursor@columna
  2414  0055  3002               	movlw	2
  2415  0056  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2416                           
  2417                           ;main_Master.c: 445:             LCD_Write_Character(2);
  2418  005B  3002               	movlw	2
  2419  005C  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2420                           
  2421                           ;main_Master.c: 446:             obj_array = uint_to_array(temperatura);
  2422  0061  1283               	bcf	3,5	;RP0=0, select bank0
  2423  0062  1303               	bcf	3,6	;RP1=0, select bank0
  2424  0063  0851               	movf	_temperatura,w
  2425  0064  120A  158A  24E1  120A  118A  	fcall	_uint_to_array
  2426  0069  1283               	bcf	3,5	;RP0=0, select bank0
  2427  006A  1303               	bcf	3,6	;RP1=0, select bank0
  2428  006B  00B7               	movwf	??_mostrarLCD
  2429  006C  0837               	movf	??_mostrarLCD,w
  2430  006D  00CF               	movwf	_obj_array
  2431                           
  2432                           ;main_Master.c: 447:             if (obj_array[0] == 0){
  2433  006E  084F               	movf	_obj_array,w
  2434  006F  0084               	movwf	4
  2435  0070  1383               	bcf	3,7	;select IRP bank0
  2436  0071  0800               	movf	0,w
  2437  0072  00B7               	movwf	??_mostrarLCD
  2438  0073  0A84               	incf	4,f
  2439  0074  0800               	movf	0,w
  2440  0075  00B8               	movwf	??_mostrarLCD+1
  2441  0076  0837               	movf	??_mostrarLCD,w
  2442  0077  0438               	iorwf	??_mostrarLCD+1,w
  2443  0078  1D03               	btfss	3,2
  2444  0079  287C               	goto	l4350
  2445                           
  2446                           ;main_Master.c: 448:                 LCD_Write_Character(' ');
  2447  007A  3020               	movlw	32
  2448  007B  2880               	goto	L7
  2449  007C                     l4350:	
  2450                           ;main_Master.c: 449:             }
  2451                           
  2452                           
  2453                           ;main_Master.c: 451:                 LCD_Write_Character('0' + obj_array[0]);
  2454  007C  084F               	movf	_obj_array,w
  2455  007D  0084               	movwf	4
  2456  007E  0800               	movf	0,w
  2457  007F  3E30               	addlw	48
  2458  0080                     L7:	
  2459  0080  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2460                           
  2461                           ;main_Master.c: 453:             LCD_Write_Character('0' + obj_array[1]);
  2462                           
  2463                           ;main_Master.c: 452:             }
  2464  0085  1283               	bcf	3,5	;RP0=0, select bank0
  2465  0086  1303               	bcf	3,6	;RP1=0, select bank0
  2466  0087  084F               	movf	_obj_array,w
  2467  0088  3E02               	addlw	2
  2468  0089  0084               	movwf	4
  2469  008A  1383               	bcf	3,7	;select IRP bank0
  2470  008B  0800               	movf	0,w
  2471  008C  3E30               	addlw	48
  2472  008D  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2473                           
  2474                           ;main_Master.c: 454:             LCD_Write_Character('0' + obj_array[2]);
  2475  0092  1283               	bcf	3,5	;RP0=0, select bank0
  2476  0093  1303               	bcf	3,6	;RP1=0, select bank0
  2477  0094  084F               	movf	_obj_array,w
  2478  0095  3E04               	addlw	4
  2479  0096  0084               	movwf	4
  2480  0097  1383               	bcf	3,7	;select IRP bank0
  2481  0098  0800               	movf	0,w
  2482  0099  3E30               	addlw	48
  2483  009A  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2484                           
  2485                           ;main_Master.c: 455:             LCD_Write_Character(223);
  2486  009F  30DF               	movlw	223
  2487  00A0  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2488                           
  2489                           ;main_Master.c: 456:             LCD_Write_Character('C');
  2490  00A5  3043               	movlw	67
  2491  00A6  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2492                           
  2493                           ;main_Master.c: 458:             LCD_Set_Cursor(2,10);
  2494  00AB  300A               	movlw	10
  2495  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  2496  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  2497  00AE  00B7               	movwf	??_mostrarLCD
  2498  00AF  0837               	movf	??_mostrarLCD,w
  2499  00B0  00F5               	movwf	LCD_Set_Cursor@columna
  2500  00B1  3002               	movlw	2
  2501  00B2  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2502                           
  2503                           ;main_Master.c: 459:             LCD_Write_Character(2);
  2504  00B7  3002               	movlw	2
  2505  00B8  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2506                           
  2507                           ;main_Master.c: 460:             obj_array = uint_to_array(temperatura_obj);
  2508  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  2509  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  2510  00BF  0850               	movf	_temperatura_obj,w
  2511  00C0  120A  158A  24E1  120A  118A  	fcall	_uint_to_array
  2512  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  2513  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  2514  00C7  00B7               	movwf	??_mostrarLCD
  2515  00C8  0837               	movf	??_mostrarLCD,w
  2516  00C9  00CF               	movwf	_obj_array
  2517                           
  2518                           ;main_Master.c: 461:             if (obj_array[0] == 0){
  2519  00CA  084F               	movf	_obj_array,w
  2520  00CB  0084               	movwf	4
  2521  00CC  1383               	bcf	3,7	;select IRP bank0
  2522  00CD  0800               	movf	0,w
  2523  00CE  00B7               	movwf	??_mostrarLCD
  2524  00CF  0A84               	incf	4,f
  2525  00D0  0800               	movf	0,w
  2526  00D1  00B8               	movwf	??_mostrarLCD+1
  2527  00D2  0837               	movf	??_mostrarLCD,w
  2528  00D3  0438               	iorwf	??_mostrarLCD+1,w
  2529  00D4  1D03               	btfss	3,2
  2530  00D5  28D8               	goto	l4364
  2531                           
  2532                           ;main_Master.c: 462:                 LCD_Write_Character(' ');
  2533  00D6  3020               	movlw	32
  2534  00D7  28DC               	goto	L8
  2535  00D8                     l4364:	
  2536                           ;main_Master.c: 463:             }
  2537                           
  2538                           
  2539                           ;main_Master.c: 465:                 LCD_Write_Character('0' + obj_array[0]);
  2540  00D8  084F               	movf	_obj_array,w
  2541  00D9  0084               	movwf	4
  2542  00DA  0800               	movf	0,w
  2543  00DB  3E30               	addlw	48
  2544  00DC                     L8:	
  2545  00DC  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2546                           
  2547                           ;main_Master.c: 468:             if (obj_array[1] == 0 && obj_array[0] == 0){
  2548  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  2549  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  2550  00E3  084F               	movf	_obj_array,w
  2551  00E4  3E02               	addlw	2
  2552  00E5  0084               	movwf	4
  2553  00E6  1383               	bcf	3,7	;select IRP bank0
  2554  00E7  0800               	movf	0,w
  2555  00E8  00B7               	movwf	??_mostrarLCD
  2556  00E9  0A84               	incf	4,f
  2557  00EA  0800               	movf	0,w
  2558  00EB  00B8               	movwf	??_mostrarLCD+1
  2559  00EC  0837               	movf	??_mostrarLCD,w
  2560  00ED  0438               	iorwf	??_mostrarLCD+1,w
  2561  00EE  1D03               	btfss	3,2
  2562  00EF  28FD               	goto	l4372
  2563  00F0  084F               	movf	_obj_array,w
  2564  00F1  0084               	movwf	4
  2565  00F2  0800               	movf	0,w
  2566  00F3  00B7               	movwf	??_mostrarLCD
  2567  00F4  0A84               	incf	4,f
  2568  00F5  0800               	movf	0,w
  2569  00F6  00B8               	movwf	??_mostrarLCD+1
  2570  00F7  0837               	movf	??_mostrarLCD,w
  2571  00F8  0438               	iorwf	??_mostrarLCD+1,w
  2572  00F9  1D03               	btfss	3,2
  2573  00FA  28FD               	goto	l4372
  2574                           
  2575                           ;main_Master.c: 469:                 LCD_Write_Character(' ');
  2576  00FB  3020               	movlw	32
  2577  00FC  2902               	goto	L9
  2578  00FD                     l4372:	
  2579                           ;main_Master.c: 470:             }
  2580                           
  2581                           
  2582                           ;main_Master.c: 472:                 LCD_Write_Character('0' + obj_array[1]);
  2583  00FD  084F               	movf	_obj_array,w
  2584  00FE  3E02               	addlw	2
  2585  00FF  0084               	movwf	4
  2586  0100  0800               	movf	0,w
  2587  0101  3E30               	addlw	48
  2588  0102                     L9:	
  2589  0102  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2590                           
  2591                           ;main_Master.c: 474:             LCD_Write_Character('0' + obj_array[2]);
  2592                           
  2593                           ;main_Master.c: 473:             }
  2594  0107  1283               	bcf	3,5	;RP0=0, select bank0
  2595  0108  1303               	bcf	3,6	;RP1=0, select bank0
  2596  0109  084F               	movf	_obj_array,w
  2597  010A  3E04               	addlw	4
  2598  010B  0084               	movwf	4
  2599  010C  1383               	bcf	3,7	;select IRP bank0
  2600  010D  0800               	movf	0,w
  2601  010E  3E30               	addlw	48
  2602  010F  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2603                           
  2604                           ;main_Master.c: 475:             LCD_Write_Character(223);
  2605  0114  30DF               	movlw	223
  2606  0115  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2607                           
  2608                           ;main_Master.c: 476:             LCD_Write_Character('C');
  2609  011A  3043               	movlw	67
  2610  011B  160A  118A  27CF   	fcall	_LCD_Write_Character
  2611                           
  2612                           ;main_Master.c: 477:             break;
  2613  011E  0008               	return
  2614  011F                     l4378:	
  2615                           
  2616                           ;main_Master.c: 479:             LCD_Set_Cursor(1,0);
  2617  011F  01F5               	clrf	LCD_Set_Cursor@columna
  2618  0120  3001               	movlw	1
  2619  0121  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2620                           
  2621                           ;main_Master.c: 480:             LCD_Write_String("Inclinacion:");
  2622  0126  3062               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2623  0127  120A  158A  217E  120A  118A  	fcall	_LCD_Write_String
  2624                           
  2625                           ;main_Master.c: 481:             LCD_Set_Cursor(2, 5);
  2626  012C  3005               	movlw	5
  2627  012D  1283               	bcf	3,5	;RP0=0, select bank0
  2628  012E  1303               	bcf	3,6	;RP1=0, select bank0
  2629  012F  00B7               	movwf	??_mostrarLCD
  2630  0130  0837               	movf	??_mostrarLCD,w
  2631  0131  00F5               	movwf	LCD_Set_Cursor@columna
  2632  0132  3002               	movlw	2
  2633  0133  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2634                           
  2635                           ;main_Master.c: 485:             LCD_Set_Cursor(2, 5);
  2636  0138  3005               	movlw	5
  2637  0139  1283               	bcf	3,5	;RP0=0, select bank0
  2638  013A  1303               	bcf	3,6	;RP1=0, select bank0
  2639  013B  00B7               	movwf	??_mostrarLCD
  2640  013C  0837               	movf	??_mostrarLCD,w
  2641  013D  00F5               	movwf	LCD_Set_Cursor@columna
  2642  013E  3002               	movlw	2
  2643  013F  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2644                           
  2645                           ;main_Master.c: 486:             if(inclinacion < 40){
  2646  0144  3028               	movlw	40
  2647  0145  1283               	bcf	3,5	;RP0=0, select bank0
  2648  0146  1303               	bcf	3,6	;RP1=0, select bank0
  2649  0147  0257               	subwf	_inclinacion,w
  2650  0148  1803               	skipnc
  2651  0149  294F               	goto	l4384
  2652                           
  2653                           ;main_Master.c: 487:                 LCD_Write_String("Estable   ");
  2654  014A  3088               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2655  014B  120A  158A  217E   	fcall	_LCD_Write_String
  2656                           
  2657                           ;main_Master.c: 488:             }
  2658  014E  0008               	return
  2659  014F                     l4384:	
  2660  014F  305B               	movlw	91
  2661  0150  0257               	subwf	_inclinacion,w
  2662  0151  1C03               	skipc
  2663  0152  295C               	goto	l4390
  2664  0153  3096               	movlw	150
  2665  0154  0257               	subwf	_inclinacion,w
  2666  0155  1803               	skipnc
  2667  0156  295C               	goto	l4390
  2668                           
  2669                           ;main_Master.c: 490:                 LCD_Write_String("Peligro!   ");
  2670  0157  307C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2671  0158  120A  158A  217E   	fcall	_LCD_Write_String
  2672                           
  2673                           ;main_Master.c: 491:             }
  2674  015B  0008               	return
  2675  015C                     l4390:	
  2676  015C  30B5               	movlw	181
  2677  015D  0257               	subwf	_inclinacion,w
  2678  015E  1C03               	skipc
  2679  015F  0008               	return
  2680                           
  2681                           ;main_Master.c: 493:                 LCD_Write_String("EMERGENCIA!  ");
  2682  0160  303A               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2683  0161  120A  158A  217E   	fcall	_LCD_Write_String
  2684                           
  2685                           ;main_Master.c: 496:             break;
  2686  0164  0008               	return
  2687  0165                     l4394:	
  2688                           
  2689                           ;main_Master.c: 498:             LCD_Set_Cursor(1,0);
  2690  0165  01F5               	clrf	LCD_Set_Cursor@columna
  2691  0166  3001               	movlw	1
  2692  0167  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2693                           
  2694                           ;main_Master.c: 499:             LCD_Write_String("Humedad:");
  2695  016C  3093               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2696  016D  120A  158A  217E  120A  118A  	fcall	_LCD_Write_String
  2697                           
  2698                           ;main_Master.c: 500:             LCD_Set_Cursor(2,4);
  2699  0172  3004               	movlw	4
  2700  0173  1283               	bcf	3,5	;RP0=0, select bank0
  2701  0174  1303               	bcf	3,6	;RP1=0, select bank0
  2702  0175  00B7               	movwf	??_mostrarLCD
  2703  0176  0837               	movf	??_mostrarLCD,w
  2704  0177  00F5               	movwf	LCD_Set_Cursor@columna
  2705  0178  3002               	movlw	2
  2706  0179  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2707                           
  2708                           ;main_Master.c: 501:             LCD_Write_Character(3);
  2709  017E  3003               	movlw	3
  2710  017F  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2711                           
  2712                           ;main_Master.c: 502:             LCD_Write_Character(' ');
  2713  0184  3020               	movlw	32
  2714  0185  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2715                           
  2716                           ;main_Master.c: 506:                 LCD_Write_Character(' ');
  2717                           
  2718                           ;main_Master.c: 505:             if(decenas_humedad == 0){
  2719  018A  3020               	movlw	32
  2720  018B  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2721                           
  2722                           ;main_Master.c: 511:             LCD_Write_Character('0'+unidades_humedad);
  2723                           
  2724                           ;main_Master.c: 510:             }
  2725  0190  3035               	movlw	53
  2726  0191  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2727                           
  2728                           ;main_Master.c: 512:             LCD_Write_Character('%');
  2729  0196  3025               	movlw	37
  2730  0197  160A  118A  27CF   	fcall	_LCD_Write_Character
  2731                           
  2732                           ;main_Master.c: 513:             break;
  2733  019A  0008               	return
  2734  019B                     l4410:	
  2735                           
  2736                           ;main_Master.c: 515:             LCD_Set_Cursor(1,0);
  2737  019B  01F5               	clrf	LCD_Set_Cursor@columna
  2738  019C  3001               	movlw	1
  2739  019D  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2740                           
  2741                           ;main_Master.c: 516:             LCD_Write_String("Atr");
  2742  01A2  30A7               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2743  01A3  120A  158A  217E  120A  118A  	fcall	_LCD_Write_String
  2744                           
  2745                           ;main_Master.c: 517:             LCD_Write_Character(0);
  2746  01A8  3000               	movlw	0
  2747  01A9  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2748                           
  2749                           ;main_Master.c: 518:             LCD_Write_String("s: | Frente:");
  2750  01AE  3055               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2751  01AF  120A  158A  217E  120A  118A  	fcall	_LCD_Write_String
  2752                           
  2753                           ;main_Master.c: 519:             LCD_Set_Cursor(2,2);
  2754  01B4  3002               	movlw	2
  2755  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  2756  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  2757  01B7  00B7               	movwf	??_mostrarLCD
  2758  01B8  0837               	movf	??_mostrarLCD,w
  2759  01B9  00F5               	movwf	LCD_Set_Cursor@columna
  2760  01BA  3002               	movlw	2
  2761  01BB  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2762                           
  2763                           ;main_Master.c: 533:                 LCD_Write_String("----");
  2764                           
  2765                           ;main_Master.c: 520:             if(d_frente < 100){
  2766  01C0  30A2               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2767  01C1  120A  158A  217E  120A  118A  	fcall	_LCD_Write_String
  2768                           
  2769                           ;main_Master.c: 536:             LCD_Set_Cursor(2,7);
  2770                           
  2771                           ;main_Master.c: 534:             }
  2772  01C6  3007               	movlw	7
  2773  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  2774  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  2775  01C9  00B7               	movwf	??_mostrarLCD
  2776  01CA  0837               	movf	??_mostrarLCD,w
  2777  01CB  00F5               	movwf	LCD_Set_Cursor@columna
  2778  01CC  3002               	movlw	2
  2779  01CD  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2780                           
  2781                           ;main_Master.c: 537:             LCD_Write_Character('|');
  2782  01D2  307C               	movlw	124
  2783  01D3  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2784                           
  2785                           ;main_Master.c: 538:             LCD_Set_Cursor(2,11);
  2786  01D8  300B               	movlw	11
  2787  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  2788  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  2789  01DB  00B7               	movwf	??_mostrarLCD
  2790  01DC  0837               	movf	??_mostrarLCD,w
  2791  01DD  00F5               	movwf	LCD_Set_Cursor@columna
  2792  01DE  3002               	movlw	2
  2793  01DF  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2794                           
  2795                           ;main_Master.c: 552:                 LCD_Write_String("----");
  2796                           
  2797                           ;main_Master.c: 539:             if(d_atras < 100){
  2798  01E4  30A2               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2799  01E5  120A  158A  217E   	fcall	_LCD_Write_String
  2800  01E8  0008               	return
  2801  01E9                     l4446:	
  2802                           
  2803                           ;main_Master.c: 556:             LCD_Set_Cursor(1, 0);
  2804  01E9  01F5               	clrf	LCD_Set_Cursor@columna
  2805  01EA  3001               	movlw	1
  2806  01EB  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2807                           
  2808                           ;main_Master.c: 557:             LCD_Write_String("Tomar datos:");
  2809  01F0  306F               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2810  01F1  120A  158A  217E  120A  118A  	fcall	_LCD_Write_String
  2811                           
  2812                           ;main_Master.c: 558:             LCD_Set_Cursor(2,1);
  2813  01F6  01F5               	clrf	LCD_Set_Cursor@columna
  2814  01F7  0AF5               	incf	LCD_Set_Cursor@columna,f
  2815  01F8  3002               	movlw	2
  2816  01F9  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2817                           
  2818                           ;main_Master.c: 559:             LCD_Write_Character(velocidad + '0');
  2819  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  2820  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  2821  0200  0852               	movf	_velocidad,w
  2822  0201  3E30               	addlw	48
  2823  0202  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2824                           
  2825                           ;main_Master.c: 560:             LCD_Set_Cursor(2,8);
  2826  0207  3008               	movlw	8
  2827  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2828  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2829  020A  00B7               	movwf	??_mostrarLCD
  2830  020B  0837               	movf	??_mostrarLCD,w
  2831  020C  00F5               	movwf	LCD_Set_Cursor@columna
  2832  020D  3002               	movlw	2
  2833  020E  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2834                           
  2835                           ;main_Master.c: 561:             LCD_Write_Character('0' + largo);
  2836  0213  1283               	bcf	3,5	;RP0=0, select bank0
  2837  0214  1303               	bcf	3,6	;RP1=0, select bank0
  2838  0215  084D               	movf	_largo,w
  2839  0216  3E30               	addlw	48
  2840  0217  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2841                           
  2842                           ;main_Master.c: 562:             LCD_Write_String("x ");
  2843  021C  30AB               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2844  021D  120A  158A  217E  120A  118A  	fcall	_LCD_Write_String
  2845                           
  2846                           ;main_Master.c: 563:             LCD_Write_Character('0' + ancho);
  2847  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2848  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2849  0224  084C               	movf	_ancho,w
  2850  0225  3E30               	addlw	48
  2851  0226  160A  118A  27CF   	fcall	_LCD_Write_Character
  2852                           
  2853                           ;main_Master.c: 564:             break;
  2854  0229  0008               	return
  2855  022A                     l4456:	
  2856                           
  2857                           ;main_Master.c: 566:             LCD_Set_Cursor(2,0);
  2858  022A  01F5               	clrf	LCD_Set_Cursor@columna
  2859  022B  3002               	movlw	2
  2860  022C  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2861                           
  2862                           ;main_Master.c: 567:             LCD_Write_Character(4);
  2863  0231  3004               	movlw	4
  2864  0232  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2865                           
  2866                           ;main_Master.c: 568:             LCD_Write_Character(velocidad + '0');
  2867  0237  1283               	bcf	3,5	;RP0=0, select bank0
  2868  0238  1303               	bcf	3,6	;RP1=0, select bank0
  2869  0239  0852               	movf	_velocidad,w
  2870  023A  3E30               	addlw	48
  2871  023B  160A  118A  27CF   	fcall	_LCD_Write_Character
  2872                           
  2873                           ;main_Master.c: 569:             break;
  2874  023E  0008               	return
  2875  023F                     l4462:	
  2876                           
  2877                           ;main_Master.c: 571:             LCD_Set_Cursor(2,0);
  2878  023F  01F5               	clrf	LCD_Set_Cursor@columna
  2879  0240  3002               	movlw	2
  2880  0241  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2881                           
  2882                           ;main_Master.c: 572:             LCD_Write_Character(' ');
  2883  0246  3020               	movlw	32
  2884  0247  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2885                           
  2886                           ;main_Master.c: 573:             LCD_Set_Cursor(2,7);
  2887  024C  3007               	movlw	7
  2888  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2889  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2890  024F  00B7               	movwf	??_mostrarLCD
  2891  0250  0837               	movf	??_mostrarLCD,w
  2892  0251  00F5               	movwf	LCD_Set_Cursor@columna
  2893  0252  3002               	movlw	2
  2894  0253  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2895                           
  2896                           ;main_Master.c: 574:             LCD_Write_Character(4);
  2897  0258  3004               	movlw	4
  2898  0259  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2899                           
  2900                           ;main_Master.c: 575:             LCD_Write_Character('0' + largo);
  2901  025E  1283               	bcf	3,5	;RP0=0, select bank0
  2902  025F  1303               	bcf	3,6	;RP1=0, select bank0
  2903  0260  084D               	movf	_largo,w
  2904  0261  3E30               	addlw	48
  2905  0262  160A  118A  27CF   	fcall	_LCD_Write_Character
  2906                           
  2907                           ;main_Master.c: 576:             break;
  2908  0265  0008               	return
  2909  0266                     l4468:	
  2910                           
  2911                           ;main_Master.c: 578:             LCD_Set_Cursor(2,7);
  2912  0266  3007               	movlw	7
  2913  0267  00B7               	movwf	??_mostrarLCD
  2914  0268  0837               	movf	??_mostrarLCD,w
  2915  0269  00F5               	movwf	LCD_Set_Cursor@columna
  2916  026A  3002               	movlw	2
  2917  026B  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2918                           
  2919                           ;main_Master.c: 579:             LCD_Write_Character(' ');
  2920  0270  3020               	movlw	32
  2921  0271  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2922                           
  2923                           ;main_Master.c: 580:             LCD_Set_Cursor(2,10);
  2924  0276  300A               	movlw	10
  2925  0277  1283               	bcf	3,5	;RP0=0, select bank0
  2926  0278  1303               	bcf	3,6	;RP1=0, select bank0
  2927  0279  00B7               	movwf	??_mostrarLCD
  2928  027A  0837               	movf	??_mostrarLCD,w
  2929  027B  00F5               	movwf	LCD_Set_Cursor@columna
  2930  027C  3002               	movlw	2
  2931  027D  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2932                           
  2933                           ;main_Master.c: 581:             LCD_Write_Character(4);
  2934  0282  3004               	movlw	4
  2935  0283  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2936                           
  2937                           ;main_Master.c: 582:             LCD_Write_Character('0' + ancho);
  2938  0288  1283               	bcf	3,5	;RP0=0, select bank0
  2939  0289  1303               	bcf	3,6	;RP1=0, select bank0
  2940  028A  084C               	movf	_ancho,w
  2941  028B  3E30               	addlw	48
  2942  028C  160A  118A  27CF   	fcall	_LCD_Write_Character
  2943                           
  2944                           ;main_Master.c: 583:             break;
  2945  028F  0008               	return
  2946  0290                     l4474:	
  2947                           
  2948                           ;main_Master.c: 585:             LCD_Set_Cursor(2,10);
  2949  0290  300A               	movlw	10
  2950  0291  00B7               	movwf	??_mostrarLCD
  2951  0292  0837               	movf	??_mostrarLCD,w
  2952  0293  00F5               	movwf	LCD_Set_Cursor@columna
  2953  0294  3002               	movlw	2
  2954  0295  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2955                           
  2956                           ;main_Master.c: 586:             LCD_Write_Character(' ');
  2957  029A  3020               	movlw	32
  2958  029B  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  2959                           
  2960                           ;main_Master.c: 587:             LCD_Set_Cursor(2,15);
  2961  02A0  300F               	movlw	15
  2962  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  2963  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  2964  02A3  00B7               	movwf	??_mostrarLCD
  2965  02A4  0837               	movf	??_mostrarLCD,w
  2966  02A5  00F5               	movwf	LCD_Set_Cursor@columna
  2967  02A6  3002               	movlw	2
  2968  02A7  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2969                           
  2970                           ;main_Master.c: 588:             LCD_Write_Character(1);
  2971  02AC  3001               	movlw	1
  2972  02AD  160A  118A  27CF   	fcall	_LCD_Write_Character
  2973                           
  2974                           ;main_Master.c: 589:             break;
  2975  02B0  0008               	return
  2976  02B1                     l4480:	
  2977                           
  2978                           ;main_Master.c: 591:             LCD_Set_Cursor(1,0);
  2979  02B1  01F5               	clrf	LCD_Set_Cursor@columna
  2980  02B2  3001               	movlw	1
  2981  02B3  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  2982                           
  2983                           ;main_Master.c: 592:             LCD_Write_String("INICIANDO...");
  2984  02B8  3048               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2985  02B9  120A  158A  217E  120A  118A  	fcall	_LCD_Write_String
  2986                           
  2987                           ;main_Master.c: 594:             I2C_Master_Start();
  2988  02BE  160A  118A  27A0  120A  118A  	fcall	_I2C_Master_Start
  2989                           
  2990                           ;main_Master.c: 595:             I2C_Master_Write(0x30);
  2991  02C3  3030               	movlw	48
  2992  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2993  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  2994  02C6  00AD               	movwf	I2C_Master_Write@d
  2995  02C7  3000               	movlw	0
  2996  02C8  00AE               	movwf	I2C_Master_Write@d+1
  2997  02C9  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  2998                           
  2999                           ;main_Master.c: 596:             I2C_Master_Write(velocidad);
  3000  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  3001  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  3002  02D0  0852               	movf	_velocidad,w
  3003  02D1  00B7               	movwf	??_mostrarLCD
  3004  02D2  01B8               	clrf	??_mostrarLCD+1
  3005  02D3  0837               	movf	??_mostrarLCD,w
  3006  02D4  00AD               	movwf	I2C_Master_Write@d
  3007  02D5  0838               	movf	??_mostrarLCD+1,w
  3008  02D6  00AE               	movwf	I2C_Master_Write@d+1
  3009  02D7  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  3010                           
  3011                           ;main_Master.c: 597:             I2C_Master_Write(largo);
  3012  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  3013  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  3014  02DE  084D               	movf	_largo,w
  3015  02DF  00B7               	movwf	??_mostrarLCD
  3016  02E0  01B8               	clrf	??_mostrarLCD+1
  3017  02E1  0837               	movf	??_mostrarLCD,w
  3018  02E2  00AD               	movwf	I2C_Master_Write@d
  3019  02E3  0838               	movf	??_mostrarLCD+1,w
  3020  02E4  00AE               	movwf	I2C_Master_Write@d+1
  3021  02E5  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  3022                           
  3023                           ;main_Master.c: 598:             I2C_Master_Write(ancho);
  3024  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  3025  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  3026  02EC  084C               	movf	_ancho,w
  3027  02ED  00B7               	movwf	??_mostrarLCD
  3028  02EE  01B8               	clrf	??_mostrarLCD+1
  3029  02EF  0837               	movf	??_mostrarLCD,w
  3030  02F0  00AD               	movwf	I2C_Master_Write@d
  3031  02F1  0838               	movf	??_mostrarLCD+1,w
  3032  02F2  00AE               	movwf	I2C_Master_Write@d+1
  3033  02F3  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  3034                           
  3035                           ;main_Master.c: 599:             I2C_Master_Stop();
  3036  02F8  160A  118A  27A7  120A  118A  	fcall	_I2C_Master_Stop
  3037                           
  3038                           ;main_Master.c: 601:             _delay((unsigned long)((500)*(4000000/4000.0)));
  3039  02FD  3003               	movlw	3
  3040  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  3041  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  3042  0300  00B9               	movwf	??_mostrarLCD+2
  3043  0301  308A               	movlw	138
  3044  0302  00B8               	movwf	??_mostrarLCD+1
  3045  0303  3055               	movlw	85
  3046  0304  00B7               	movwf	??_mostrarLCD
  3047  0305                     u1987:	
  3048  0305  0BB7               	decfsz	??_mostrarLCD,f
  3049  0306  2B05               	goto	u1987
  3050  0307  0BB8               	decfsz	??_mostrarLCD+1,f
  3051  0308  2B05               	goto	u1987
  3052  0309  0BB9               	decfsz	??_mostrarLCD+2,f
  3053  030A  2B05               	goto	u1987
  3054                           
  3055                           ;main_Master.c: 602:             LCD_clear();
  3056  030B  120A  158A  20EC   	fcall	_LCD_clear
  3057                           
  3058                           ;main_Master.c: 603:             estado = 0;
  3059  030E  1283               	bcf	3,5	;RP0=0, select bank0
  3060  030F  1303               	bcf	3,6	;RP1=0, select bank0
  3061  0310  01D4               	clrf	_estado
  3062                           
  3063                           ;main_Master.c: 604:             break;
  3064  0311  0008               	return
  3065  0312                     l4500:	
  3066                           
  3067                           ;main_Master.c: 606:             LCD_Set_Cursor(1,9);
  3068  0312  3009               	movlw	9
  3069  0313  00B7               	movwf	??_mostrarLCD
  3070  0314  0837               	movf	??_mostrarLCD,w
  3071  0315  00F5               	movwf	LCD_Set_Cursor@columna
  3072  0316  3001               	movlw	1
  3073  0317  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  3074                           
  3075                           ;main_Master.c: 607:             LCD_Write_String("ERROR");
  3076  031C  309C               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  3077  031D  120A  158A  217E   	fcall	_LCD_Write_String
  3078                           
  3079                           ;main_Master.c: 608:     }
  3080  0320  0008               	return
  3081  0321                     l4502:	
  3082  0321  083A               	movf	mostrarLCD@pantalla,w
  3083  0322  00B7               	movwf	??_mostrarLCD
  3084  0323  01B8               	clrf	??_mostrarLCD+1
  3085                           
  3086                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3087                           ; Switch size 1, requested type "simple"
  3088                           ; Number of cases is 1, Range of values is 0 to 0
  3089                           ; switch strategies available:
  3090                           ; Name         Instructions Cycles
  3091                           ; simple_byte            4     3 (average)
  3092                           ; direct_byte           11     8 (fixed)
  3093                           ; jumptable            260     6 (fixed)
  3094                           ;	Chosen strategy is simple_byte
  3095  0324  0838               	movf	??_mostrarLCD+1,w
  3096  0325  3A00               	xorlw	0	; case 0
  3097  0326  1903               	skipnz
  3098  0327  2B29               	goto	l5066
  3099  0328  2B12               	goto	l4500
  3100  0329                     l5066:	
  3101                           
  3102                           ; Switch size 1, requested type "simple"
  3103                           ; Number of cases is 11, Range of values is 0 to 10
  3104                           ; switch strategies available:
  3105                           ; Name         Instructions Cycles
  3106                           ; simple_byte           34    18 (average)
  3107                           ; direct_byte           41     8 (fixed)
  3108                           ; jumptable            260     6 (fixed)
  3109                           ;	Chosen strategy is simple_byte
  3110  0329  0837               	movf	??_mostrarLCD,w
  3111  032A  3A00               	xorlw	0	; case 0
  3112  032B  1903               	skipnz
  3113  032C  282D               	goto	l4338
  3114  032D  3A01               	xorlw	1	; case 1
  3115  032E  1903               	skipnz
  3116  032F  2842               	goto	l4340
  3117  0330  3A03               	xorlw	3	; case 2
  3118  0331  1903               	skipnz
  3119  0332  291F               	goto	l4378
  3120  0333  3A01               	xorlw	1	; case 3
  3121  0334  1903               	skipnz
  3122  0335  2965               	goto	l4394
  3123  0336  3A07               	xorlw	7	; case 4
  3124  0337  1903               	skipnz
  3125  0338  299B               	goto	l4410
  3126  0339  3A01               	xorlw	1	; case 5
  3127  033A  1903               	skipnz
  3128  033B  29E9               	goto	l4446
  3129  033C  3A03               	xorlw	3	; case 6
  3130  033D  1903               	skipnz
  3131  033E  2A2A               	goto	l4456
  3132  033F  3A01               	xorlw	1	; case 7
  3133  0340  1903               	skipnz
  3134  0341  2A3F               	goto	l4462
  3135  0342  3A0F               	xorlw	15	; case 8
  3136  0343  1903               	skipnz
  3137  0344  2A66               	goto	l4468
  3138  0345  3A01               	xorlw	1	; case 9
  3139  0346  1903               	skipnz
  3140  0347  2A90               	goto	l4474
  3141  0348  3A03               	xorlw	3	; case 10
  3142  0349  1903               	skipnz
  3143  034A  2AB1               	goto	l4480
  3144  034B  2B12               	goto	l4500
  3145  034C  0008               	return
  3146  034D                     __end_of_mostrarLCD:	
  3147                           
  3148                           	psect	text5
  3149  0CE1                     __ptext5:	
  3150 ;; *************** function _uint_to_array *****************
  3151 ;; Defined at:
  3152 ;;		line 181 in file "LCD_8bits.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;  numero          1    wreg     unsigned char 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  numero          1   22[BANK0 ] unsigned char 
  3157 ;;  resultado       6   16[BANK0 ] unsigned int [3]
  3158 ;;  centenas        1   15[BANK0 ] unsigned char 
  3159 ;;  decenas         1   14[BANK0 ] unsigned char 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      PTR unsigned int 
  3162 ;; Registers used:
  3163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3169 ;;      Params:         0       0       0       0       0
  3170 ;;      Locals:         0       9       0       0       0
  3171 ;;      Temps:          0       6       0       0       0
  3172 ;;      Totals:         0      15       0       0       0
  3173 ;;Total ram usage:       15 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    2
  3176 ;; This function calls:
  3177 ;;		___awdiv
  3178 ;;		___wmul
  3179 ;; This function is called by:
  3180 ;;		_mostrarLCD
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           
  3185                           ;psect for function _uint_to_array
  3186  0CE1                     _uint_to_array:	
  3187                           
  3188                           ;incstack = 0
  3189                           ; Regs used in _uint_to_array: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3190                           ;uint_to_array@numero stored from wreg
  3191  0CE1  1283               	bcf	3,5	;RP0=0, select bank0
  3192  0CE2  1303               	bcf	3,6	;RP1=0, select bank0
  3193  0CE3  00B6               	movwf	uint_to_array@numero
  3194                           
  3195                           ;LCD_8bits.c: 182:     uint16_t resultado[3] = {0,0,0};
  3196  0CE4  3030               	movlw	uint_to_array@resultado& (0+255)
  3197  0CE5  0084               	movwf	4
  3198  0CE6  3006               	movlw	6
  3199  0CE7  00FF               	movwf	127
  3200  0CE8                     u1740:	
  3201  0CE8  1383               	bcf	3,7	;select IRP bank0
  3202  0CE9  0180               	clrf	0
  3203  0CEA  0A84               	incf	4,f
  3204  0CEB  0BFF               	decfsz	127,f
  3205  0CEC  2CE8               	goto	u1740
  3206                           
  3207                           ;LCD_8bits.c: 183:     resultado[0] = numero/100;
  3208  0CED  3064               	movlw	100
  3209  0CEE  00A0               	movwf	___awdiv@divisor
  3210  0CEF  3000               	movlw	0
  3211  0CF0  00A1               	movwf	___awdiv@divisor+1
  3212  0CF1  0836               	movf	uint_to_array@numero,w
  3213  0CF2  00A8               	movwf	??_uint_to_array
  3214  0CF3  01A9               	clrf	??_uint_to_array+1
  3215  0CF4  0828               	movf	??_uint_to_array,w
  3216  0CF5  00A2               	movwf	___awdiv@dividend
  3217  0CF6  0829               	movf	??_uint_to_array+1,w
  3218  0CF7  00A3               	movwf	___awdiv@dividend+1
  3219  0CF8  120A  158A  22D4  120A  158A  	fcall	___awdiv
  3220  0CFD  1283               	bcf	3,5	;RP0=0, select bank0
  3221  0CFE  1303               	bcf	3,6	;RP1=0, select bank0
  3222  0CFF  0821               	movf	?___awdiv+1,w
  3223  0D00  00B1               	movwf	uint_to_array@resultado+1
  3224  0D01  0820               	movf	?___awdiv,w
  3225  0D02  00B0               	movwf	uint_to_array@resultado
  3226                           
  3227                           ;LCD_8bits.c: 184:     uint8_t centenas = resultado[0];
  3228  0D03  0830               	movf	uint_to_array@resultado,w
  3229  0D04  00A8               	movwf	??_uint_to_array
  3230  0D05  0828               	movf	??_uint_to_array,w
  3231  0D06  00AF               	movwf	uint_to_array@centenas
  3232                           
  3233                           ;LCD_8bits.c: 185:     resultado[1] = (numero - (centenas *100))/10;
  3234  0D07  300A               	movlw	10
  3235  0D08  00A0               	movwf	___awdiv@divisor
  3236  0D09  3000               	movlw	0
  3237  0D0A  00A1               	movwf	___awdiv@divisor+1
  3238  0D0B  082F               	movf	uint_to_array@centenas,w
  3239  0D0C  00A8               	movwf	??_uint_to_array
  3240  0D0D  01A9               	clrf	??_uint_to_array+1
  3241  0D0E  0828               	movf	??_uint_to_array,w
  3242  0D0F  00F2               	movwf	___wmul@multiplier
  3243  0D10  0829               	movf	??_uint_to_array+1,w
  3244  0D11  00F3               	movwf	___wmul@multiplier+1
  3245  0D12  309C               	movlw	156
  3246  0D13  00F4               	movwf	___wmul@multiplicand
  3247  0D14  30FF               	movlw	255
  3248  0D15  00F5               	movwf	___wmul@multiplicand+1
  3249  0D16  120A  158A  215D  120A  158A  	fcall	___wmul
  3250  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  3251  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  3252  0D1D  0836               	movf	uint_to_array@numero,w
  3253  0D1E  0772               	addwf	?___wmul,w
  3254  0D1F  00A2               	movwf	___awdiv@dividend
  3255  0D20  0873               	movf	?___wmul+1,w
  3256  0D21  1803               	skipnc
  3257  0D22  0A73               	incf	?___wmul+1,w
  3258  0D23  00A3               	movwf	___awdiv@dividend+1
  3259  0D24  120A  158A  22D4  120A  158A  	fcall	___awdiv
  3260  0D29  1283               	bcf	3,5	;RP0=0, select bank0
  3261  0D2A  1303               	bcf	3,6	;RP1=0, select bank0
  3262  0D2B  0821               	movf	?___awdiv+1,w
  3263  0D2C  00B3               	movwf	uint_to_array@resultado+3
  3264  0D2D  0820               	movf	?___awdiv,w
  3265  0D2E  00B2               	movwf	uint_to_array@resultado+2
  3266                           
  3267                           ;LCD_8bits.c: 186:     uint8_t decenas = resultado[1];
  3268  0D2F  0832               	movf	uint_to_array@resultado+2,w
  3269  0D30  00A8               	movwf	??_uint_to_array
  3270  0D31  0828               	movf	??_uint_to_array,w
  3271  0D32  00AE               	movwf	uint_to_array@decenas
  3272                           
  3273                           ;LCD_8bits.c: 187:     resultado[2] = numero -(centenas*100+decenas*10);
  3274  0D33  082F               	movf	uint_to_array@centenas,w
  3275  0D34  00A8               	movwf	??_uint_to_array
  3276  0D35  01A9               	clrf	??_uint_to_array+1
  3277  0D36  0828               	movf	??_uint_to_array,w
  3278  0D37  00F2               	movwf	___wmul@multiplier
  3279  0D38  0829               	movf	??_uint_to_array+1,w
  3280  0D39  00F3               	movwf	___wmul@multiplier+1
  3281  0D3A  309C               	movlw	156
  3282  0D3B  00F4               	movwf	___wmul@multiplicand
  3283  0D3C  30FF               	movlw	255
  3284  0D3D  00F5               	movwf	___wmul@multiplicand+1
  3285  0D3E  120A  158A  215D  120A  158A  	fcall	___wmul
  3286  0D43  1283               	bcf	3,5	;RP0=0, select bank0
  3287  0D44  1303               	bcf	3,6	;RP1=0, select bank0
  3288  0D45  0836               	movf	uint_to_array@numero,w
  3289  0D46  0772               	addwf	?___wmul,w
  3290  0D47  00AA               	movwf	??_uint_to_array+2
  3291  0D48  0873               	movf	?___wmul+1,w
  3292  0D49  1803               	skipnc
  3293  0D4A  0A73               	incf	?___wmul+1,w
  3294  0D4B  00AB               	movwf	??_uint_to_array+3
  3295  0D4C  082E               	movf	uint_to_array@decenas,w
  3296  0D4D  00AC               	movwf	??_uint_to_array+4
  3297  0D4E  01AD               	clrf	??_uint_to_array+5
  3298  0D4F  082C               	movf	??_uint_to_array+4,w
  3299  0D50  00F2               	movwf	___wmul@multiplier
  3300  0D51  082D               	movf	??_uint_to_array+5,w
  3301  0D52  00F3               	movwf	___wmul@multiplier+1
  3302  0D53  30F6               	movlw	246
  3303  0D54  00F4               	movwf	___wmul@multiplicand
  3304  0D55  30FF               	movlw	255
  3305  0D56  00F5               	movwf	___wmul@multiplicand+1
  3306  0D57  120A  158A  215D   	fcall	___wmul
  3307  0D5A  0872               	movf	?___wmul,w
  3308  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  3309  0D5C  1303               	bcf	3,6	;RP1=0, select bank0
  3310  0D5D  072A               	addwf	??_uint_to_array+2,w
  3311  0D5E  00B4               	movwf	uint_to_array@resultado+4
  3312  0D5F  0873               	movf	?___wmul+1,w
  3313  0D60  1803               	skipnc
  3314  0D61  0A73               	incf	?___wmul+1,w
  3315  0D62  072B               	addwf	??_uint_to_array+3,w
  3316  0D63  00B5               	movwf	uint_to_array@resultado+5
  3317                           
  3318                           ;LCD_8bits.c: 188:     return(resultado);
  3319  0D64  3030               	movlw	(low (uint_to_array@resultado| 0))& (0+255)
  3320  0D65  0008               	return
  3321  0D66                     __end_of_uint_to_array:	
  3322                           
  3323                           	psect	text6
  3324  095D                     __ptext6:	
  3325 ;; *************** function ___wmul *****************
  3326 ;; Defined at:
  3327 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  multiplier      2    2[COMMON] unsigned int 
  3330 ;;  multiplicand    2    4[COMMON] unsigned int 
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  product         2    6[COMMON] unsigned int 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  2    2[COMMON] unsigned int 
  3335 ;; Registers used:
  3336 ;;		wreg, status,2, status,0
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3342 ;;      Params:         4       0       0       0       0
  3343 ;;      Locals:         2       0       0       0       0
  3344 ;;      Temps:          0       0       0       0       0
  3345 ;;      Totals:         6       0       0       0       0
  3346 ;;Total ram usage:        6 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:    1
  3349 ;; This function calls:
  3350 ;;		Nothing
  3351 ;; This function is called by:
  3352 ;;		_uint_to_array
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           
  3357                           ;psect for function ___wmul
  3358  095D                     ___wmul:	
  3359                           
  3360                           ;incstack = 0
  3361                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3362  095D  01F6               	clrf	___wmul@product
  3363  095E  01F7               	clrf	___wmul@product+1
  3364  095F                     l2788:	
  3365  095F  1C72               	btfss	___wmul@multiplier,0
  3366  0960  2967               	goto	l614
  3367  0961  0874               	movf	___wmul@multiplicand,w
  3368  0962  07F6               	addwf	___wmul@product,f
  3369  0963  1803               	skipnc
  3370  0964  0AF7               	incf	___wmul@product+1,f
  3371  0965  0875               	movf	___wmul@multiplicand+1,w
  3372  0966  07F7               	addwf	___wmul@product+1,f
  3373  0967                     l614:	
  3374  0967  3001               	movlw	1
  3375  0968                     u1015:	
  3376  0968  1003               	clrc
  3377  0969  0DF4               	rlf	___wmul@multiplicand,f
  3378  096A  0DF5               	rlf	___wmul@multiplicand+1,f
  3379  096B  3EFF               	addlw	-1
  3380  096C  1D03               	skipz
  3381  096D  2968               	goto	u1015
  3382  096E  3001               	movlw	1
  3383  096F                     u1025:	
  3384  096F  1003               	clrc
  3385  0970  0CF3               	rrf	___wmul@multiplier+1,f
  3386  0971  0CF2               	rrf	___wmul@multiplier,f
  3387  0972  3EFF               	addlw	-1
  3388  0973  1D03               	skipz
  3389  0974  296F               	goto	u1025
  3390  0975  0872               	movf	___wmul@multiplier,w
  3391  0976  0473               	iorwf	___wmul@multiplier+1,w
  3392  0977  1D03               	btfss	3,2
  3393  0978  295F               	goto	l2788
  3394  0979  0877               	movf	___wmul@product+1,w
  3395  097A  00F3               	movwf	?___wmul+1
  3396  097B  0876               	movf	___wmul@product,w
  3397  097C  00F2               	movwf	?___wmul
  3398  097D  0008               	return
  3399  097E                     __end_of___wmul:	
  3400                           
  3401                           	psect	text7
  3402  06FA                     __ptext7:	
  3403 ;; *************** function _display_Uhrzeit *****************
  3404 ;; Defined at:
  3405 ;;		line 394 in file "main_Master.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;  fila            1    wreg     unsigned char 
  3408 ;;  columna         1    8[BANK0 ] unsigned char 
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;  fila            1   12[BANK0 ] unsigned char 
  3411 ;;  Uhr_d           1   18[BANK0 ] unsigned char 
  3412 ;;  Uhr_u           1   17[BANK0 ] unsigned char 
  3413 ;;  min_d           1   16[BANK0 ] unsigned char 
  3414 ;;  min_u           1   15[BANK0 ] unsigned char 
  3415 ;;  seg_d           1   14[BANK0 ] unsigned char 
  3416 ;;  seg_u           1   13[BANK0 ] unsigned char 
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3426 ;;      Params:         0       1       0       0       0
  3427 ;;      Locals:         0       7       0       0       0
  3428 ;;      Temps:          0       3       0       0       0
  3429 ;;      Totals:         0      11       0       0       0
  3430 ;;Total ram usage:       11 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:    3
  3433 ;; This function calls:
  3434 ;;		_LCD_Set_Cursor
  3435 ;;		_LCD_Write_Character
  3436 ;;		___awdiv
  3437 ;;		___awmod
  3438 ;; This function is called by:
  3439 ;;		_mostrarLCD
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           
  3444                           ;psect for function _display_Uhrzeit
  3445  06FA                     _display_Uhrzeit:	
  3446                           
  3447                           ;incstack = 0
  3448                           ; Regs used in _display_Uhrzeit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3449                           ;display_Uhrzeit@fila stored from wreg
  3450  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  3451  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  3452  06FC  00AC               	movwf	display_Uhrzeit@fila
  3453                           
  3454                           ;main_Master.c: 395:     char seg_u = seg%10;
  3455  06FD  300A               	movlw	10
  3456  06FE  00F2               	movwf	___awmod@divisor
  3457  06FF  3000               	movlw	0
  3458  0700  00F3               	movwf	___awmod@divisor+1
  3459  0701  0853               	movf	_seg,w
  3460  0702  00A9               	movwf	??_display_Uhrzeit
  3461  0703  01AA               	clrf	??_display_Uhrzeit+1
  3462  0704  0829               	movf	??_display_Uhrzeit,w
  3463  0705  00F4               	movwf	___awmod@dividend
  3464  0706  082A               	movf	??_display_Uhrzeit+1,w
  3465  0707  00F5               	movwf	___awmod@dividend+1
  3466  0708  120A  158A  2289  120A  118A  	fcall	___awmod
  3467  070D  0872               	movf	?___awmod,w
  3468  070E  1283               	bcf	3,5	;RP0=0, select bank0
  3469  070F  1303               	bcf	3,6	;RP1=0, select bank0
  3470  0710  00AB               	movwf	??_display_Uhrzeit+2
  3471  0711  082B               	movf	??_display_Uhrzeit+2,w
  3472  0712  00AD               	movwf	display_Uhrzeit@seg_u
  3473                           
  3474                           ;main_Master.c: 396:     char seg_d = seg/10;
  3475  0713  300A               	movlw	10
  3476  0714  00A0               	movwf	___awdiv@divisor
  3477  0715  3000               	movlw	0
  3478  0716  00A1               	movwf	___awdiv@divisor+1
  3479  0717  0853               	movf	_seg,w
  3480  0718  00A9               	movwf	??_display_Uhrzeit
  3481  0719  01AA               	clrf	??_display_Uhrzeit+1
  3482  071A  0829               	movf	??_display_Uhrzeit,w
  3483  071B  00A2               	movwf	___awdiv@dividend
  3484  071C  082A               	movf	??_display_Uhrzeit+1,w
  3485  071D  00A3               	movwf	___awdiv@dividend+1
  3486  071E  120A  158A  22D4  120A  118A  	fcall	___awdiv
  3487  0723  1283               	bcf	3,5	;RP0=0, select bank0
  3488  0724  1303               	bcf	3,6	;RP1=0, select bank0
  3489  0725  0820               	movf	?___awdiv,w
  3490  0726  00AB               	movwf	??_display_Uhrzeit+2
  3491  0727  082B               	movf	??_display_Uhrzeit+2,w
  3492  0728  00AE               	movwf	display_Uhrzeit@seg_d
  3493                           
  3494                           ;main_Master.c: 397:     char min_u = min%10;
  3495  0729  300A               	movlw	10
  3496  072A  00F2               	movwf	___awmod@divisor
  3497  072B  3000               	movlw	0
  3498  072C  00F3               	movwf	___awmod@divisor+1
  3499  072D  085E               	movf	_min,w
  3500  072E  00A9               	movwf	??_display_Uhrzeit
  3501  072F  01AA               	clrf	??_display_Uhrzeit+1
  3502  0730  0829               	movf	??_display_Uhrzeit,w
  3503  0731  00F4               	movwf	___awmod@dividend
  3504  0732  082A               	movf	??_display_Uhrzeit+1,w
  3505  0733  00F5               	movwf	___awmod@dividend+1
  3506  0734  120A  158A  2289  120A  118A  	fcall	___awmod
  3507  0739  0872               	movf	?___awmod,w
  3508  073A  1283               	bcf	3,5	;RP0=0, select bank0
  3509  073B  1303               	bcf	3,6	;RP1=0, select bank0
  3510  073C  00AB               	movwf	??_display_Uhrzeit+2
  3511  073D  082B               	movf	??_display_Uhrzeit+2,w
  3512  073E  00AF               	movwf	display_Uhrzeit@min_u
  3513                           
  3514                           ;main_Master.c: 398:     char min_d = min/10;
  3515  073F  300A               	movlw	10
  3516  0740  00A0               	movwf	___awdiv@divisor
  3517  0741  3000               	movlw	0
  3518  0742  00A1               	movwf	___awdiv@divisor+1
  3519  0743  085E               	movf	_min,w
  3520  0744  00A9               	movwf	??_display_Uhrzeit
  3521  0745  01AA               	clrf	??_display_Uhrzeit+1
  3522  0746  0829               	movf	??_display_Uhrzeit,w
  3523  0747  00A2               	movwf	___awdiv@dividend
  3524  0748  082A               	movf	??_display_Uhrzeit+1,w
  3525  0749  00A3               	movwf	___awdiv@dividend+1
  3526  074A  120A  158A  22D4  120A  118A  	fcall	___awdiv
  3527  074F  1283               	bcf	3,5	;RP0=0, select bank0
  3528  0750  1303               	bcf	3,6	;RP1=0, select bank0
  3529  0751  0820               	movf	?___awdiv,w
  3530  0752  00AB               	movwf	??_display_Uhrzeit+2
  3531  0753  082B               	movf	??_display_Uhrzeit+2,w
  3532  0754  00B0               	movwf	display_Uhrzeit@min_d
  3533                           
  3534                           ;main_Master.c: 399:     char Uhr_u = hora%10;
  3535  0755  300A               	movlw	10
  3536  0756  00F2               	movwf	___awmod@divisor
  3537  0757  3000               	movlw	0
  3538  0758  00F3               	movwf	___awmod@divisor+1
  3539  0759  085D               	movf	_hora,w
  3540  075A  00A9               	movwf	??_display_Uhrzeit
  3541  075B  01AA               	clrf	??_display_Uhrzeit+1
  3542  075C  0829               	movf	??_display_Uhrzeit,w
  3543  075D  00F4               	movwf	___awmod@dividend
  3544  075E  082A               	movf	??_display_Uhrzeit+1,w
  3545  075F  00F5               	movwf	___awmod@dividend+1
  3546  0760  120A  158A  2289  120A  118A  	fcall	___awmod
  3547  0765  0872               	movf	?___awmod,w
  3548  0766  1283               	bcf	3,5	;RP0=0, select bank0
  3549  0767  1303               	bcf	3,6	;RP1=0, select bank0
  3550  0768  00AB               	movwf	??_display_Uhrzeit+2
  3551  0769  082B               	movf	??_display_Uhrzeit+2,w
  3552  076A  00B1               	movwf	display_Uhrzeit@Uhr_u
  3553                           
  3554                           ;main_Master.c: 400:     char Uhr_d = hora/10;
  3555  076B  300A               	movlw	10
  3556  076C  00A0               	movwf	___awdiv@divisor
  3557  076D  3000               	movlw	0
  3558  076E  00A1               	movwf	___awdiv@divisor+1
  3559  076F  085D               	movf	_hora,w
  3560  0770  00A9               	movwf	??_display_Uhrzeit
  3561  0771  01AA               	clrf	??_display_Uhrzeit+1
  3562  0772  0829               	movf	??_display_Uhrzeit,w
  3563  0773  00A2               	movwf	___awdiv@dividend
  3564  0774  082A               	movf	??_display_Uhrzeit+1,w
  3565  0775  00A3               	movwf	___awdiv@dividend+1
  3566  0776  120A  158A  22D4  120A  118A  	fcall	___awdiv
  3567  077B  1283               	bcf	3,5	;RP0=0, select bank0
  3568  077C  1303               	bcf	3,6	;RP1=0, select bank0
  3569  077D  0820               	movf	?___awdiv,w
  3570  077E  00AB               	movwf	??_display_Uhrzeit+2
  3571  077F  082B               	movf	??_display_Uhrzeit+2,w
  3572  0780  00B2               	movwf	display_Uhrzeit@Uhr_d
  3573                           
  3574                           ;main_Master.c: 402:     LCD_Set_Cursor(fila, columna);
  3575  0781  0828               	movf	display_Uhrzeit@columna,w
  3576  0782  00A9               	movwf	??_display_Uhrzeit
  3577  0783  0829               	movf	??_display_Uhrzeit,w
  3578  0784  00F5               	movwf	LCD_Set_Cursor@columna
  3579  0785  082C               	movf	display_Uhrzeit@fila,w
  3580  0786  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  3581                           
  3582                           ;main_Master.c: 403:     LCD_Write_Character(Uhr_d + '0');
  3583  078B  1283               	bcf	3,5	;RP0=0, select bank0
  3584  078C  1303               	bcf	3,6	;RP1=0, select bank0
  3585  078D  0832               	movf	display_Uhrzeit@Uhr_d,w
  3586  078E  3E30               	addlw	48
  3587  078F  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  3588                           
  3589                           ;main_Master.c: 404:     LCD_Write_Character(Uhr_u + '0');
  3590  0794  1283               	bcf	3,5	;RP0=0, select bank0
  3591  0795  1303               	bcf	3,6	;RP1=0, select bank0
  3592  0796  0831               	movf	display_Uhrzeit@Uhr_u,w
  3593  0797  3E30               	addlw	48
  3594  0798  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  3595                           
  3596                           ;main_Master.c: 405:     LCD_Write_Character(':');
  3597  079D  303A               	movlw	58
  3598  079E  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  3599                           
  3600                           ;main_Master.c: 406:     LCD_Write_Character(min_d + '0');
  3601  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  3602  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  3603  07A5  0830               	movf	display_Uhrzeit@min_d,w
  3604  07A6  3E30               	addlw	48
  3605  07A7  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  3606                           
  3607                           ;main_Master.c: 407:     LCD_Write_Character(min_u + '0');
  3608  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  3609  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  3610  07AE  082F               	movf	display_Uhrzeit@min_u,w
  3611  07AF  3E30               	addlw	48
  3612  07B0  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  3613                           
  3614                           ;main_Master.c: 408:     LCD_Write_Character(':');
  3615  07B5  303A               	movlw	58
  3616  07B6  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  3617                           
  3618                           ;main_Master.c: 409:     LCD_Write_Character(seg_d + '0');
  3619  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  3620  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  3621  07BD  082E               	movf	display_Uhrzeit@seg_d,w
  3622  07BE  3E30               	addlw	48
  3623  07BF  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  3624                           
  3625                           ;main_Master.c: 410:     LCD_Write_Character(seg_u + '0');
  3626  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  3627  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  3628  07C6  082D               	movf	display_Uhrzeit@seg_u,w
  3629  07C7  3E30               	addlw	48
  3630  07C8  160A  118A  27CF   	fcall	_LCD_Write_Character
  3631  07CB  0008               	return
  3632  07CC                     __end_of_display_Uhrzeit:	
  3633                           
  3634                           	psect	text8
  3635  0622                     __ptext8:	
  3636 ;; *************** function _display_Datum *****************
  3637 ;; Defined at:
  3638 ;;		line 414 in file "main_Master.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  fila            1    wreg     unsigned char 
  3641 ;;  columna         1    8[BANK0 ] unsigned char 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  fila            1   12[BANK0 ] unsigned char 
  3644 ;;  jahr_d          1   18[BANK0 ] unsigned char 
  3645 ;;  jahr_u          1   17[BANK0 ] unsigned char 
  3646 ;;  mes_d           1   16[BANK0 ] unsigned char 
  3647 ;;  mes_u           1   15[BANK0 ] unsigned char 
  3648 ;;  dia_d           1   14[BANK0 ] unsigned char 
  3649 ;;  dia_u           1   13[BANK0 ] unsigned char 
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      void 
  3652 ;; Registers used:
  3653 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3659 ;;      Params:         0       1       0       0       0
  3660 ;;      Locals:         0       7       0       0       0
  3661 ;;      Temps:          0       3       0       0       0
  3662 ;;      Totals:         0      11       0       0       0
  3663 ;;Total ram usage:       11 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:    3
  3666 ;; This function calls:
  3667 ;;		_LCD_Set_Cursor
  3668 ;;		_LCD_Write_Character
  3669 ;;		_LCD_Write_String
  3670 ;;		___awdiv
  3671 ;;		___awmod
  3672 ;; This function is called by:
  3673 ;;		_mostrarLCD
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           
  3678                           ;psect for function _display_Datum
  3679  0622                     _display_Datum:	
  3680                           
  3681                           ;incstack = 0
  3682                           ; Regs used in _display_Datum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3683                           ;display_Datum@fila stored from wreg
  3684  0622  1283               	bcf	3,5	;RP0=0, select bank0
  3685  0623  1303               	bcf	3,6	;RP1=0, select bank0
  3686  0624  00AC               	movwf	display_Datum@fila
  3687                           
  3688                           ;main_Master.c: 415:     char dia_u = datum%10;
  3689  0625  300A               	movlw	10
  3690  0626  00F2               	movwf	___awmod@divisor
  3691  0627  3000               	movlw	0
  3692  0628  00F3               	movwf	___awmod@divisor+1
  3693  0629  085B               	movf	_datum,w
  3694  062A  00A9               	movwf	??_display_Datum
  3695  062B  01AA               	clrf	??_display_Datum+1
  3696  062C  0829               	movf	??_display_Datum,w
  3697  062D  00F4               	movwf	___awmod@dividend
  3698  062E  082A               	movf	??_display_Datum+1,w
  3699  062F  00F5               	movwf	___awmod@dividend+1
  3700  0630  120A  158A  2289  120A  118A  	fcall	___awmod
  3701  0635  0872               	movf	?___awmod,w
  3702  0636  1283               	bcf	3,5	;RP0=0, select bank0
  3703  0637  1303               	bcf	3,6	;RP1=0, select bank0
  3704  0638  00AB               	movwf	??_display_Datum+2
  3705  0639  082B               	movf	??_display_Datum+2,w
  3706  063A  00AD               	movwf	display_Datum@dia_u
  3707                           
  3708                           ;main_Master.c: 416:     char dia_d = datum/10;
  3709  063B  300A               	movlw	10
  3710  063C  00A0               	movwf	___awdiv@divisor
  3711  063D  3000               	movlw	0
  3712  063E  00A1               	movwf	___awdiv@divisor+1
  3713  063F  085B               	movf	_datum,w
  3714  0640  00A9               	movwf	??_display_Datum
  3715  0641  01AA               	clrf	??_display_Datum+1
  3716  0642  0829               	movf	??_display_Datum,w
  3717  0643  00A2               	movwf	___awdiv@dividend
  3718  0644  082A               	movf	??_display_Datum+1,w
  3719  0645  00A3               	movwf	___awdiv@dividend+1
  3720  0646  120A  158A  22D4  120A  118A  	fcall	___awdiv
  3721  064B  1283               	bcf	3,5	;RP0=0, select bank0
  3722  064C  1303               	bcf	3,6	;RP1=0, select bank0
  3723  064D  0820               	movf	?___awdiv,w
  3724  064E  00AB               	movwf	??_display_Datum+2
  3725  064F  082B               	movf	??_display_Datum+2,w
  3726  0650  00AE               	movwf	display_Datum@dia_d
  3727                           
  3728                           ;main_Master.c: 417:     char mes_u = mes%10;
  3729  0651  300A               	movlw	10
  3730  0652  00F2               	movwf	___awmod@divisor
  3731  0653  3000               	movlw	0
  3732  0654  00F3               	movwf	___awmod@divisor+1
  3733  0655  085A               	movf	_mes,w
  3734  0656  00A9               	movwf	??_display_Datum
  3735  0657  01AA               	clrf	??_display_Datum+1
  3736  0658  0829               	movf	??_display_Datum,w
  3737  0659  00F4               	movwf	___awmod@dividend
  3738  065A  082A               	movf	??_display_Datum+1,w
  3739  065B  00F5               	movwf	___awmod@dividend+1
  3740  065C  120A  158A  2289  120A  118A  	fcall	___awmod
  3741  0661  0872               	movf	?___awmod,w
  3742  0662  1283               	bcf	3,5	;RP0=0, select bank0
  3743  0663  1303               	bcf	3,6	;RP1=0, select bank0
  3744  0664  00AB               	movwf	??_display_Datum+2
  3745  0665  082B               	movf	??_display_Datum+2,w
  3746  0666  00AF               	movwf	display_Datum@mes_u
  3747                           
  3748                           ;main_Master.c: 418:     char mes_d = mes/10;
  3749  0667  300A               	movlw	10
  3750  0668  00A0               	movwf	___awdiv@divisor
  3751  0669  3000               	movlw	0
  3752  066A  00A1               	movwf	___awdiv@divisor+1
  3753  066B  085A               	movf	_mes,w
  3754  066C  00A9               	movwf	??_display_Datum
  3755  066D  01AA               	clrf	??_display_Datum+1
  3756  066E  0829               	movf	??_display_Datum,w
  3757  066F  00A2               	movwf	___awdiv@dividend
  3758  0670  082A               	movf	??_display_Datum+1,w
  3759  0671  00A3               	movwf	___awdiv@dividend+1
  3760  0672  120A  158A  22D4  120A  118A  	fcall	___awdiv
  3761  0677  1283               	bcf	3,5	;RP0=0, select bank0
  3762  0678  1303               	bcf	3,6	;RP1=0, select bank0
  3763  0679  0820               	movf	?___awdiv,w
  3764  067A  00AB               	movwf	??_display_Datum+2
  3765  067B  082B               	movf	??_display_Datum+2,w
  3766  067C  00B0               	movwf	display_Datum@mes_d
  3767                           
  3768                           ;main_Master.c: 419:     char jahr_u = jahr%10;
  3769  067D  300A               	movlw	10
  3770  067E  00F2               	movwf	___awmod@divisor
  3771  067F  3000               	movlw	0
  3772  0680  00F3               	movwf	___awmod@divisor+1
  3773  0681  0859               	movf	_jahr,w
  3774  0682  00A9               	movwf	??_display_Datum
  3775  0683  01AA               	clrf	??_display_Datum+1
  3776  0684  0829               	movf	??_display_Datum,w
  3777  0685  00F4               	movwf	___awmod@dividend
  3778  0686  082A               	movf	??_display_Datum+1,w
  3779  0687  00F5               	movwf	___awmod@dividend+1
  3780  0688  120A  158A  2289  120A  118A  	fcall	___awmod
  3781  068D  0872               	movf	?___awmod,w
  3782  068E  1283               	bcf	3,5	;RP0=0, select bank0
  3783  068F  1303               	bcf	3,6	;RP1=0, select bank0
  3784  0690  00AB               	movwf	??_display_Datum+2
  3785  0691  082B               	movf	??_display_Datum+2,w
  3786  0692  00B1               	movwf	display_Datum@jahr_u
  3787                           
  3788                           ;main_Master.c: 420:     char jahr_d = jahr/10;
  3789  0693  300A               	movlw	10
  3790  0694  00A0               	movwf	___awdiv@divisor
  3791  0695  3000               	movlw	0
  3792  0696  00A1               	movwf	___awdiv@divisor+1
  3793  0697  0859               	movf	_jahr,w
  3794  0698  00A9               	movwf	??_display_Datum
  3795  0699  01AA               	clrf	??_display_Datum+1
  3796  069A  0829               	movf	??_display_Datum,w
  3797  069B  00A2               	movwf	___awdiv@dividend
  3798  069C  082A               	movf	??_display_Datum+1,w
  3799  069D  00A3               	movwf	___awdiv@dividend+1
  3800  069E  120A  158A  22D4  120A  118A  	fcall	___awdiv
  3801  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  3802  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  3803  06A5  0820               	movf	?___awdiv,w
  3804  06A6  00AB               	movwf	??_display_Datum+2
  3805  06A7  082B               	movf	??_display_Datum+2,w
  3806  06A8  00B2               	movwf	display_Datum@jahr_d
  3807                           
  3808                           ;main_Master.c: 422:     LCD_Set_Cursor(fila, columna);
  3809  06A9  0828               	movf	display_Datum@columna,w
  3810  06AA  00A9               	movwf	??_display_Datum
  3811  06AB  0829               	movf	??_display_Datum,w
  3812  06AC  00F5               	movwf	LCD_Set_Cursor@columna
  3813  06AD  082C               	movf	display_Datum@fila,w
  3814  06AE  120A  158A  21F8  120A  118A  	fcall	_LCD_Set_Cursor
  3815                           
  3816                           ;main_Master.c: 423:     LCD_Write_Character(dia_d + '0');
  3817  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  3818  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  3819  06B5  082E               	movf	display_Datum@dia_d,w
  3820  06B6  3E30               	addlw	48
  3821  06B7  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  3822                           
  3823                           ;main_Master.c: 424:     LCD_Write_Character(dia_u + '0');
  3824  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  3825  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  3826  06BE  082D               	movf	display_Datum@dia_u,w
  3827  06BF  3E30               	addlw	48
  3828  06C0  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  3829                           
  3830                           ;main_Master.c: 425:     LCD_Write_Character('/');
  3831  06C5  302F               	movlw	47
  3832  06C6  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  3833                           
  3834                           ;main_Master.c: 426:     LCD_Write_Character(mes_d + '0');
  3835  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  3836  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  3837  06CD  0830               	movf	display_Datum@mes_d,w
  3838  06CE  3E30               	addlw	48
  3839  06CF  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  3840                           
  3841                           ;main_Master.c: 427:     LCD_Write_Character(mes_u + '0');
  3842  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  3843  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  3844  06D6  082F               	movf	display_Datum@mes_u,w
  3845  06D7  3E30               	addlw	48
  3846  06D8  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  3847                           
  3848                           ;main_Master.c: 428:     LCD_Write_Character('/');
  3849  06DD  302F               	movlw	47
  3850  06DE  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  3851                           
  3852                           ;main_Master.c: 429:     LCD_Write_String("20");
  3853  06E3  30AE               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3854  06E4  120A  158A  217E  120A  118A  	fcall	_LCD_Write_String
  3855                           
  3856                           ;main_Master.c: 430:     LCD_Write_Character(jahr_d + '0');
  3857  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  3858  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  3859  06EB  0832               	movf	display_Datum@jahr_d,w
  3860  06EC  3E30               	addlw	48
  3861  06ED  160A  118A  27CF  120A  118A  	fcall	_LCD_Write_Character
  3862                           
  3863                           ;main_Master.c: 431:     LCD_Write_Character(jahr_u + '0');
  3864  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  3865  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  3866  06F4  0831               	movf	display_Datum@jahr_u,w
  3867  06F5  3E30               	addlw	48
  3868  06F6  160A  118A  27CF   	fcall	_LCD_Write_Character
  3869  06F9  0008               	return
  3870  06FA                     __end_of_display_Datum:	
  3871                           
  3872                           	psect	text9
  3873  097E                     __ptext9:	
  3874 ;; *************** function _LCD_Write_String *****************
  3875 ;; Defined at:
  3876 ;;		line 73 in file "LCD_8bits.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;  a               1    wreg     PTR unsigned char 
  3879 ;;		 -> STR_17(6), STR_16(13), STR_15(3), STR_14(13), 
  3880 ;;		 -> STR_13(5), STR_12(3), STR_11(5), STR_10(3), 
  3881 ;;		 -> STR_9(13), STR_8(4), STR_7(9), STR_6(14), 
  3882 ;;		 -> STR_5(12), STR_4(11), STR_3(13), STR_2(17), 
  3883 ;;		 -> STR_1(3), 
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  a               1    6[COMMON] PTR unsigned char 
  3886 ;;		 -> STR_17(6), STR_16(13), STR_15(3), STR_14(13), 
  3887 ;;		 -> STR_13(5), STR_12(3), STR_11(5), STR_10(3), 
  3888 ;;		 -> STR_9(13), STR_8(4), STR_7(9), STR_6(14), 
  3889 ;;		 -> STR_5(12), STR_4(11), STR_3(13), STR_2(17), 
  3890 ;;		 -> STR_1(3), 
  3891 ;;  n               2    4[COMMON] int 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  1    wreg      void 
  3894 ;; Registers used:
  3895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3901 ;;      Params:         0       0       0       0       0
  3902 ;;      Locals:         3       0       0       0       0
  3903 ;;      Temps:          0       0       0       0       0
  3904 ;;      Totals:         3       0       0       0       0
  3905 ;;Total ram usage:        3 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:    2
  3908 ;; This function calls:
  3909 ;;		_LCD_Write_Character
  3910 ;; This function is called by:
  3911 ;;		_display_Datum
  3912 ;;		_mostrarLCD
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           
  3917                           ;psect for function _LCD_Write_String
  3918  097E                     _LCD_Write_String:	
  3919                           
  3920                           ;incstack = 0
  3921                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3922                           ;LCD_Write_String@a stored from wreg
  3923  097E  00F6               	movwf	LCD_Write_String@a
  3924                           
  3925                           ;LCD_8bits.c: 74:     int n;;LCD_8bits.c: 75:     for(n = 0; a[n] != '\0'; n++){
  3926  097F  01F4               	clrf	LCD_Write_String@n
  3927  0980  01F5               	clrf	LCD_Write_String@n+1
  3928  0981                     l2780:	
  3929  0981  0874               	movf	LCD_Write_String@n,w
  3930  0982  0776               	addwf	LCD_Write_String@a,w
  3931  0983  0084               	movwf	4
  3932  0984  120A  158A  2000  120A  158A  	fcall	stringdir
  3933  0989  3A00               	xorlw	0
  3934  098A  1903               	btfsc	3,2
  3935  098B  0008               	return
  3936                           
  3937                           ;LCD_8bits.c: 76:         LCD_Write_Character(a[n]);
  3938  098C  0874               	movf	LCD_Write_String@n,w
  3939  098D  0776               	addwf	LCD_Write_String@a,w
  3940  098E  0084               	movwf	4
  3941  098F  120A  158A  2000  120A  158A  	fcall	stringdir
  3942  0994  160A  118A  27CF  120A  158A  	fcall	_LCD_Write_Character
  3943                           
  3944                           ;LCD_8bits.c: 77:     }
  3945  0999  3001               	movlw	1
  3946  099A  07F4               	addwf	LCD_Write_String@n,f
  3947  099B  1803               	skipnc
  3948  099C  0AF5               	incf	LCD_Write_String@n+1,f
  3949  099D  3000               	movlw	0
  3950  099E  07F5               	addwf	LCD_Write_String@n+1,f
  3951  099F  2981               	goto	l2780
  3952  09A0                     __end_of_LCD_Write_String:	
  3953                           
  3954                           	psect	text10
  3955  09F8                     __ptext10:	
  3956 ;; *************** function _LCD_Set_Cursor *****************
  3957 ;; Defined at:
  3958 ;;		line 80 in file "LCD_8bits.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  linea           1    wreg     unsigned char 
  3961 ;;  columna         1    5[COMMON] unsigned char 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  linea           1    8[COMMON] unsigned char 
  3964 ;;  corrimiento     1    9[COMMON] unsigned char 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  1    wreg      void 
  3967 ;; Registers used:
  3968 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3974 ;;      Params:         1       0       0       0       0
  3975 ;;      Locals:         2       0       0       0       0
  3976 ;;      Temps:          2       0       0       0       0
  3977 ;;      Totals:         5       0       0       0       0
  3978 ;;Total ram usage:        5 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    2
  3981 ;; This function calls:
  3982 ;;		_LCD_Cmd
  3983 ;; This function is called by:
  3984 ;;		_display_Uhrzeit
  3985 ;;		_display_Datum
  3986 ;;		_mostrarLCD
  3987 ;;		_pressBoton2
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           
  3992                           ;psect for function _LCD_Set_Cursor
  3993  09F8                     _LCD_Set_Cursor:	
  3994                           
  3995                           ;incstack = 0
  3996                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3997                           ;LCD_Set_Cursor@linea stored from wreg
  3998  09F8  00F8               	movwf	LCD_Set_Cursor@linea
  3999                           
  4000                           ;LCD_8bits.c: 82:     switch (linea){
  4001  09F9  2A13               	goto	l2768
  4002  09FA                     l2758:	
  4003                           
  4004                           ;LCD_8bits.c: 84:             corrimiento = 0x80 + columna;
  4005  09FA  0875               	movf	LCD_Set_Cursor@columna,w
  4006  09FB  3E80               	addlw	128
  4007  09FC  00F6               	movwf	??_LCD_Set_Cursor
  4008  09FD  0876               	movf	??_LCD_Set_Cursor,w
  4009  09FE  00F9               	movwf	LCD_Set_Cursor@corrimiento
  4010                           
  4011                           ;LCD_8bits.c: 85:             LCD_Cmd(corrimiento);
  4012  09FF  0879               	movf	LCD_Set_Cursor@corrimiento,w
  4013  0A00  120A  158A  2224   	fcall	_LCD_Cmd
  4014                           
  4015                           ;LCD_8bits.c: 86:             break;
  4016  0A03  0008               	return
  4017  0A04                     l2762:	
  4018                           
  4019                           ;LCD_8bits.c: 88:             corrimiento = 0x80 + 0x40 + columna;
  4020  0A04  0875               	movf	LCD_Set_Cursor@columna,w
  4021  0A05  3EC0               	addlw	192
  4022  0A06  00F6               	movwf	??_LCD_Set_Cursor
  4023  0A07  0876               	movf	??_LCD_Set_Cursor,w
  4024  0A08  00F9               	movwf	LCD_Set_Cursor@corrimiento
  4025                           
  4026                           ;LCD_8bits.c: 89:             LCD_Cmd(corrimiento);
  4027  0A09  0879               	movf	LCD_Set_Cursor@corrimiento,w
  4028  0A0A  120A  158A  2224   	fcall	_LCD_Cmd
  4029                           
  4030                           ;LCD_8bits.c: 90:             break;
  4031  0A0D  0008               	return
  4032  0A0E                     l2766:	
  4033                           
  4034                           ;LCD_8bits.c: 92:             LCD_Cmd(0x80);
  4035  0A0E  3080               	movlw	128
  4036  0A0F  120A  158A  2224   	fcall	_LCD_Cmd
  4037                           
  4038                           ;LCD_8bits.c: 93:     }
  4039  0A12  0008               	return
  4040  0A13                     l2768:	
  4041  0A13  0878               	movf	LCD_Set_Cursor@linea,w
  4042  0A14  00F6               	movwf	??_LCD_Set_Cursor
  4043  0A15  01F7               	clrf	??_LCD_Set_Cursor+1
  4044                           
  4045                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4046                           ; Switch size 1, requested type "simple"
  4047                           ; Number of cases is 1, Range of values is 0 to 0
  4048                           ; switch strategies available:
  4049                           ; Name         Instructions Cycles
  4050                           ; simple_byte            4     3 (average)
  4051                           ; direct_byte           11     8 (fixed)
  4052                           ; jumptable            260     6 (fixed)
  4053                           ;	Chosen strategy is simple_byte
  4054  0A16  0877               	movf	??_LCD_Set_Cursor+1,w
  4055  0A17  3A00               	xorlw	0	; case 0
  4056  0A18  1903               	skipnz
  4057  0A19  2A1B               	goto	l5068
  4058  0A1A  2A0E               	goto	l2766
  4059  0A1B                     l5068:	
  4060                           
  4061                           ; Switch size 1, requested type "simple"
  4062                           ; Number of cases is 2, Range of values is 1 to 2
  4063                           ; switch strategies available:
  4064                           ; Name         Instructions Cycles
  4065                           ; simple_byte            7     4 (average)
  4066                           ; direct_byte           17    11 (fixed)
  4067                           ; jumptable            263     9 (fixed)
  4068                           ;	Chosen strategy is simple_byte
  4069  0A1B  0876               	movf	??_LCD_Set_Cursor,w
  4070  0A1C  3A01               	xorlw	1	; case 1
  4071  0A1D  1903               	skipnz
  4072  0A1E  29FA               	goto	l2758
  4073  0A1F  3A03               	xorlw	3	; case 2
  4074  0A20  1903               	skipnz
  4075  0A21  2A04               	goto	l2762
  4076  0A22  2A0E               	goto	l2766
  4077  0A23  0008               	return
  4078  0A24                     __end_of_LCD_Set_Cursor:	
  4079                           
  4080                           	psect	text11
  4081  0946                     __ptext11:	
  4082 ;; *************** function _inclinacion_ *****************
  4083 ;; Defined at:
  4084 ;;		line 232 in file "main_Master.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;		None
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4098 ;;      Params:         0       0       0       0       0
  4099 ;;      Locals:         0       0       0       0       0
  4100 ;;      Temps:          2       0       0       0       0
  4101 ;;      Totals:         2       0       0       0       0
  4102 ;;Total ram usage:        2 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; Hardware stack levels required when called:    2
  4105 ;; This function calls:
  4106 ;;		_init_ADC
  4107 ;; This function is called by:
  4108 ;;		_main
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           
  4113                           ;psect for function _inclinacion_
  4114  0946                     _inclinacion_:	
  4115                           
  4116                           ;main_Master.c: 233:     init_ADC(0x07);
  4117                           
  4118                           ;incstack = 0
  4119                           ; Regs used in _inclinacion_: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4120  0946  3007               	movlw	7
  4121  0947  120A  158A  2465  120A  158A  	fcall	_init_ADC
  4122                           
  4123                           ;main_Master.c: 234:     PIR1bits.ADIF = 0;
  4124  094C  1283               	bcf	3,5	;RP0=0, select bank0
  4125  094D  1303               	bcf	3,6	;RP1=0, select bank0
  4126  094E  130C               	bcf	12,6	;volatile
  4127                           
  4128                           ;main_Master.c: 235:     inclinacion = ADRESH;
  4129  094F  081E               	movf	30,w	;volatile
  4130  0950  00F5               	movwf	??_inclinacion_
  4131  0951  0875               	movf	??_inclinacion_,w
  4132  0952  00D7               	movwf	_inclinacion
  4133                           
  4134                           ;main_Master.c: 236:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4135  0953  300D               	movlw	13
  4136  0954  00F6               	movwf	??_inclinacion_+1
  4137  0955  30FB               	movlw	251
  4138  0956  00F5               	movwf	??_inclinacion_
  4139  0957                     u1997:	
  4140  0957  0BF5               	decfsz	??_inclinacion_,f
  4141  0958  2957               	goto	u1997
  4142  0959  0BF6               	decfsz	??_inclinacion_+1,f
  4143  095A  2957               	goto	u1997
  4144  095B  295C               	nop2
  4145  095C  0008               	return
  4146  095D                     __end_of_inclinacion_:	
  4147                           
  4148                           	psect	text12
  4149  092F                     __ptext12:	
  4150 ;; *************** function _get_temperatura_obj *****************
  4151 ;; Defined at:
  4152 ;;		line 225 in file "main_Master.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;		None
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;		None
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  1    wreg      void 
  4159 ;; Registers used:
  4160 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4166 ;;      Params:         0       0       0       0       0
  4167 ;;      Locals:         0       0       0       0       0
  4168 ;;      Temps:          2       0       0       0       0
  4169 ;;      Totals:         2       0       0       0       0
  4170 ;;Total ram usage:        2 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; Hardware stack levels required when called:    2
  4173 ;; This function calls:
  4174 ;;		_init_ADC
  4175 ;; This function is called by:
  4176 ;;		_main
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           
  4181                           ;psect for function _get_temperatura_obj
  4182  092F                     _get_temperatura_obj:	
  4183                           
  4184                           ;main_Master.c: 226:     init_ADC(0x06);
  4185                           
  4186                           ;incstack = 0
  4187                           ; Regs used in _get_temperatura_obj: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4188  092F  3006               	movlw	6
  4189  0930  120A  158A  2465  120A  158A  	fcall	_init_ADC
  4190                           
  4191                           ;main_Master.c: 227:     PIR1bits.ADIF = 0;
  4192  0935  1283               	bcf	3,5	;RP0=0, select bank0
  4193  0936  1303               	bcf	3,6	;RP1=0, select bank0
  4194  0937  130C               	bcf	12,6	;volatile
  4195                           
  4196                           ;main_Master.c: 228:     temperatura_obj = ADRESH;
  4197  0938  081E               	movf	30,w	;volatile
  4198  0939  00F5               	movwf	??_get_temperatura_obj
  4199  093A  0875               	movf	??_get_temperatura_obj,w
  4200  093B  00D0               	movwf	_temperatura_obj
  4201                           
  4202                           ;main_Master.c: 229:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4203  093C  300D               	movlw	13
  4204  093D  00F6               	movwf	??_get_temperatura_obj+1
  4205  093E  30FB               	movlw	251
  4206  093F  00F5               	movwf	??_get_temperatura_obj
  4207  0940                     u2007:	
  4208  0940  0BF5               	decfsz	??_get_temperatura_obj,f
  4209  0941  2940               	goto	u2007
  4210  0942  0BF6               	decfsz	??_get_temperatura_obj+1,f
  4211  0943  2940               	goto	u2007
  4212  0944  2945               	nop2
  4213  0945  0008               	return
  4214  0946                     __end_of_get_temperatura_obj:	
  4215                           
  4216                           	psect	text13
  4217  0918                     __ptext13:	
  4218 ;; *************** function _get_temperatura *****************
  4219 ;; Defined at:
  4220 ;;		line 218 in file "main_Master.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;		None
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;		None
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  1    wreg      void 
  4227 ;; Registers used:
  4228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4234 ;;      Params:         0       0       0       0       0
  4235 ;;      Locals:         0       0       0       0       0
  4236 ;;      Temps:          2       0       0       0       0
  4237 ;;      Totals:         2       0       0       0       0
  4238 ;;Total ram usage:        2 bytes
  4239 ;; Hardware stack levels used:    1
  4240 ;; Hardware stack levels required when called:    2
  4241 ;; This function calls:
  4242 ;;		_init_ADC
  4243 ;; This function is called by:
  4244 ;;		_main
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           
  4249                           ;psect for function _get_temperatura
  4250  0918                     _get_temperatura:	
  4251                           
  4252                           ;main_Master.c: 219:     init_ADC(0x05);
  4253                           
  4254                           ;incstack = 0
  4255                           ; Regs used in _get_temperatura: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4256  0918  3005               	movlw	5
  4257  0919  120A  158A  2465  120A  158A  	fcall	_init_ADC
  4258                           
  4259                           ;main_Master.c: 220:     PIR1bits.ADIF = 0;
  4260  091E  1283               	bcf	3,5	;RP0=0, select bank0
  4261  091F  1303               	bcf	3,6	;RP1=0, select bank0
  4262  0920  130C               	bcf	12,6	;volatile
  4263                           
  4264                           ;main_Master.c: 221:     temperatura = ADRESH;
  4265  0921  081E               	movf	30,w	;volatile
  4266  0922  00F5               	movwf	??_get_temperatura
  4267  0923  0875               	movf	??_get_temperatura,w
  4268  0924  00D1               	movwf	_temperatura
  4269                           
  4270                           ;main_Master.c: 222:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4271  0925  300D               	movlw	13
  4272  0926  00F6               	movwf	??_get_temperatura+1
  4273  0927  30FB               	movlw	251
  4274  0928  00F5               	movwf	??_get_temperatura
  4275  0929                     u2017:	
  4276  0929  0BF5               	decfsz	??_get_temperatura,f
  4277  092A  2929               	goto	u2017
  4278  092B  0BF6               	decfsz	??_get_temperatura+1,f
  4279  092C  2929               	goto	u2017
  4280  092D  292E               	nop2
  4281  092E  0008               	return
  4282  092F                     __end_of_get_temperatura:	
  4283                           
  4284                           	psect	text14
  4285  0C65                     __ptext14:	
  4286 ;; *************** function _init_ADC *****************
  4287 ;; Defined at:
  4288 ;;		line 239 in file "main_Master.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  channel         1    wreg     unsigned char 
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  channel         1    4[COMMON] unsigned char 
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4302 ;;      Params:         0       0       0       0       0
  4303 ;;      Locals:         1       0       0       0       0
  4304 ;;      Temps:          2       0       0       0       0
  4305 ;;      Totals:         3       0       0       0       0
  4306 ;;Total ram usage:        3 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:    1
  4309 ;; This function calls:
  4310 ;;		Nothing
  4311 ;; This function is called by:
  4312 ;;		_get_temperatura
  4313 ;;		_get_temperatura_obj
  4314 ;;		_inclinacion_
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318                           
  4319                           ;psect for function _init_ADC
  4320  0C65                     _init_ADC:	
  4321                           
  4322                           ;incstack = 0
  4323                           ; Regs used in _init_ADC: [wreg-fsr0h+status,2+status,0]
  4324                           ;init_ADC@channel stored from wreg
  4325  0C65  00F4               	movwf	init_ADC@channel
  4326                           
  4327                           ;main_Master.c: 240:     ADCON0bits.ADCS1 = 0;
  4328  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  4329  0C67  1303               	bcf	3,6	;RP1=0, select bank0
  4330  0C68  139F               	bcf	31,7	;volatile
  4331                           
  4332                           ;main_Master.c: 241:     ADCON0bits.ADCS0 = 1;
  4333  0C69  171F               	bsf	31,6	;volatile
  4334                           
  4335                           ;main_Master.c: 244:     switch(channel){
  4336  0C6A  2C9A               	goto	l3004
  4337  0C6B                     l171:	
  4338                           ;main_Master.c: 245:         case 0:
  4339                           
  4340  0C6B  2C95               	goto	l188
  4341  0C6C                     l173:	
  4342                           ;main_Master.c: 251:         case 1:
  4343                           
  4344                           ;main_Master.c: 250:             break;
  4345                           
  4346                           ;main_Master.c: 249:             ADCON0bits.CHS0 = 0;
  4347                           
  4348                           ;main_Master.c: 248:             ADCON0bits.CHS1 = 0;
  4349                           
  4350                           ;main_Master.c: 247:             ADCON0bits.CHS2 = 0;
  4351                           
  4352                           ;main_Master.c: 246:             ADCON0bits.CHS3 = 0;
  4353                           
  4354                           
  4355                           ;main_Master.c: 252:             ADCON0bits.CHS3 = 0;
  4356  0C6C  129F               	bcf	31,5	;volatile
  4357  0C6D  2C7D               	goto	L39
  4358  0C6E                     l174:	
  4359                           ;main_Master.c: 257:         case 2:
  4360                           
  4361                           ;main_Master.c: 256:             break;
  4362                           
  4363                           ;main_Master.c: 255:             ADCON0bits.CHS0 = 1;
  4364                           
  4365                           ;main_Master.c: 254:             ADCON0bits.CHS1 = 0;
  4366                           
  4367                           ;main_Master.c: 253:             ADCON0bits.CHS2 = 0;
  4368                           
  4369                           
  4370                           ;main_Master.c: 258:             ADCON0bits.CHS3 = 0;
  4371  0C6E  129F               	bcf	31,5	;volatile
  4372  0C6F  2C80               	goto	L40
  4373  0C70                     l175:	
  4374                           ;main_Master.c: 263:         case 3:
  4375                           
  4376                           ;main_Master.c: 262:             break;
  4377                           
  4378                           ;main_Master.c: 261:             ADCON0bits.CHS0 = 0;
  4379                           
  4380                           ;main_Master.c: 260:             ADCON0bits.CHS1 = 1;
  4381                           
  4382                           ;main_Master.c: 259:             ADCON0bits.CHS2 = 0;
  4383                           
  4384                           
  4385                           ;main_Master.c: 264:             ADCON0bits.CHS3 = 0;
  4386  0C70  129F               	bcf	31,5	;volatile
  4387  0C71  2C83               	goto	L35
  4388  0C72                     l176:	
  4389                           ;main_Master.c: 269:         case 4:
  4390                           
  4391                           ;main_Master.c: 268:             break;
  4392                           
  4393                           ;main_Master.c: 267:             ADCON0bits.CHS0 = 1;
  4394                           
  4395                           ;main_Master.c: 266:             ADCON0bits.CHS1 = 1;
  4396                           
  4397                           ;main_Master.c: 265:             ADCON0bits.CHS2 = 0;
  4398                           
  4399                           
  4400                           ;main_Master.c: 270:             ADCON0bits.CHS3 = 0;
  4401  0C72  129F               	bcf	31,5	;volatile
  4402  0C73  2C86               	goto	L36
  4403  0C74                     l177:	
  4404                           ;main_Master.c: 275:         case 5:
  4405                           
  4406                           ;main_Master.c: 274:             break;
  4407                           
  4408                           ;main_Master.c: 273:             ADCON0bits.CHS0 = 0;
  4409                           
  4410                           ;main_Master.c: 272:             ADCON0bits.CHS1 = 0;
  4411                           
  4412                           ;main_Master.c: 271:             ADCON0bits.CHS2 = 1;
  4413                           
  4414                           
  4415                           ;main_Master.c: 276:             ADCON0bits.CHS3 = 0;
  4416  0C74  129F               	bcf	31,5	;volatile
  4417  0C75  2C89               	goto	L37
  4418  0C76                     l178:	
  4419                           ;main_Master.c: 281:         case 6:
  4420                           
  4421                           ;main_Master.c: 280:             break;
  4422                           
  4423                           ;main_Master.c: 279:             ADCON0bits.CHS0 = 1;
  4424                           
  4425                           ;main_Master.c: 278:             ADCON0bits.CHS1 = 0;
  4426                           
  4427                           ;main_Master.c: 277:             ADCON0bits.CHS2 = 1;
  4428                           
  4429                           
  4430                           ;main_Master.c: 282:             ADCON0bits.CHS3 = 0;
  4431  0C76  129F               	bcf	31,5	;volatile
  4432  0C77  2C8D               	goto	L38
  4433  0C78                     l179:	
  4434                           ;main_Master.c: 287:         case 7:
  4435                           
  4436                           ;main_Master.c: 286:             break;
  4437                           
  4438                           ;main_Master.c: 285:             ADCON0bits.CHS0 = 0;
  4439                           
  4440                           ;main_Master.c: 284:             ADCON0bits.CHS1 = 1;
  4441                           
  4442                           ;main_Master.c: 283:             ADCON0bits.CHS2 = 1;
  4443                           
  4444                           
  4445                           ;main_Master.c: 288:             ADCON0bits.CHS3 = 0;
  4446  0C78  129F               	bcf	31,5	;volatile
  4447  0C79  2C91               	goto	L25
  4448  0C7A                     l180:	
  4449                           ;main_Master.c: 293:         case 8:
  4450                           
  4451                           ;main_Master.c: 292:             break;
  4452                           
  4453                           ;main_Master.c: 291:             ADCON0bits.CHS0 = 1;
  4454                           
  4455                           ;main_Master.c: 290:             ADCON0bits.CHS1 = 1;
  4456                           
  4457                           ;main_Master.c: 289:             ADCON0bits.CHS2 = 1;
  4458                           
  4459                           
  4460                           ;main_Master.c: 294:             ADCON0bits.CHS3 = 1;
  4461  0C7A  169F               	bsf	31,5	;volatile
  4462  0C7B  2C96               	goto	L26
  4463  0C7C                     l181:	
  4464                           ;main_Master.c: 299:         case 9:
  4465                           
  4466                           ;main_Master.c: 298:             break;
  4467                           
  4468                           ;main_Master.c: 297:             ADCON0bits.CHS0 = 0;
  4469                           
  4470                           ;main_Master.c: 296:             ADCON0bits.CHS1 = 0;
  4471                           
  4472                           ;main_Master.c: 295:             ADCON0bits.CHS2 = 0;
  4473                           
  4474                           
  4475                           ;main_Master.c: 300:             ADCON0bits.CHS3 = 1;
  4476  0C7C  169F               	bsf	31,5	;volatile
  4477  0C7D                     L39:	
  4478                           
  4479                           ;main_Master.c: 301:             ADCON0bits.CHS2 = 0;
  4480  0C7D  121F               	bcf	31,4	;volatile
  4481  0C7E  2C8A               	goto	L33
  4482  0C7F                     l182:	
  4483                           ;main_Master.c: 305:         case 10:
  4484                           
  4485                           ;main_Master.c: 304:             break;
  4486                           
  4487                           ;main_Master.c: 303:             ADCON0bits.CHS0 = 1;
  4488                           
  4489                           ;main_Master.c: 302:             ADCON0bits.CHS1 = 0;
  4490                           
  4491                           
  4492                           ;main_Master.c: 306:             ADCON0bits.CHS3 = 1;
  4493  0C7F  169F               	bsf	31,5	;volatile
  4494  0C80                     L40:	
  4495                           
  4496                           ;main_Master.c: 307:             ADCON0bits.CHS2 = 0;
  4497  0C80  121F               	bcf	31,4	;volatile
  4498  0C81  2C8E               	goto	L34
  4499  0C82                     l183:	
  4500                           ;main_Master.c: 311:         case 11:
  4501                           
  4502                           ;main_Master.c: 310:             break;
  4503                           
  4504                           ;main_Master.c: 309:             ADCON0bits.CHS0 = 0;
  4505                           
  4506                           ;main_Master.c: 308:             ADCON0bits.CHS1 = 1;
  4507                           
  4508                           
  4509                           ;main_Master.c: 312:             ADCON0bits.CHS3 = 1;
  4510  0C82  169F               	bsf	31,5	;volatile
  4511  0C83                     L35:	
  4512                           
  4513                           ;main_Master.c: 313:             ADCON0bits.CHS2 = 0;
  4514  0C83  121F               	bcf	31,4	;volatile
  4515  0C84  2C92               	goto	L27
  4516  0C85                     l184:	
  4517                           ;main_Master.c: 317:         case 12:
  4518                           
  4519                           ;main_Master.c: 316:             break;
  4520                           
  4521                           ;main_Master.c: 315:             ADCON0bits.CHS0 = 1;
  4522                           
  4523                           ;main_Master.c: 314:             ADCON0bits.CHS1 = 1;
  4524                           
  4525                           
  4526                           ;main_Master.c: 318:             ADCON0bits.CHS3 = 1;
  4527  0C85  169F               	bsf	31,5	;volatile
  4528  0C86                     L36:	
  4529                           
  4530                           ;main_Master.c: 319:             ADCON0bits.CHS2 = 1;
  4531  0C86  161F               	bsf	31,4	;volatile
  4532  0C87  2C97               	goto	L28
  4533  0C88                     l185:	
  4534                           ;main_Master.c: 323:         case 13:
  4535                           
  4536                           ;main_Master.c: 322:             break;
  4537                           
  4538                           ;main_Master.c: 321:             ADCON0bits.CHS0 = 0;
  4539                           
  4540                           ;main_Master.c: 320:             ADCON0bits.CHS1 = 0;
  4541                           
  4542                           
  4543                           ;main_Master.c: 324:             ADCON0bits.CHS3 = 1;
  4544  0C88  169F               	bsf	31,5	;volatile
  4545  0C89                     L37:	
  4546                           
  4547                           ;main_Master.c: 325:             ADCON0bits.CHS2 = 1;
  4548  0C89  161F               	bsf	31,4	;volatile
  4549  0C8A                     L33:	
  4550                           
  4551                           ;main_Master.c: 326:             ADCON0bits.CHS1 = 0;
  4552  0C8A  119F               	bcf	31,3	;volatile
  4553  0C8B  2C93               	goto	L23
  4554  0C8C                     l186:	
  4555                           ;main_Master.c: 329:         case 14:
  4556                           
  4557                           ;main_Master.c: 328:             break;
  4558                           
  4559                           ;main_Master.c: 327:             ADCON0bits.CHS0 = 1;
  4560                           
  4561                           
  4562                           ;main_Master.c: 330:             ADCON0bits.CHS3 = 1;
  4563  0C8C  169F               	bsf	31,5	;volatile
  4564  0C8D                     L38:	
  4565                           
  4566                           ;main_Master.c: 331:             ADCON0bits.CHS2 = 1;
  4567  0C8D  161F               	bsf	31,4	;volatile
  4568  0C8E                     L34:	
  4569                           
  4570                           ;main_Master.c: 332:             ADCON0bits.CHS1 = 1;
  4571  0C8E  159F               	bsf	31,3	;volatile
  4572  0C8F  2C98               	goto	L24
  4573  0C90                     l187:	
  4574                           ;main_Master.c: 335:         case 15:
  4575                           
  4576                           ;main_Master.c: 334:             break;
  4577                           
  4578                           ;main_Master.c: 333:             ADCON0bits.CHS0 = 0;
  4579                           
  4580                           
  4581                           ;main_Master.c: 336:             ADCON0bits.CHS3 = 1;
  4582  0C90  169F               	bsf	31,5	;volatile
  4583  0C91                     L25:	
  4584                           
  4585                           ;main_Master.c: 337:             ADCON0bits.CHS2 = 1;
  4586  0C91  161F               	bsf	31,4	;volatile
  4587  0C92                     L27:	
  4588                           
  4589                           ;main_Master.c: 338:             ADCON0bits.CHS1 = 1;
  4590  0C92  159F               	bsf	31,3	;volatile
  4591  0C93                     L23:	
  4592                           
  4593                           ;main_Master.c: 339:             ADCON0bits.CHS0 = 1;
  4594  0C93  151F               	bsf	31,2	;volatile
  4595                           
  4596                           ;main_Master.c: 340:             break;
  4597  0C94  2CD4               	goto	l172
  4598  0C95                     l188:	
  4599                           ;main_Master.c: 341:         default:
  4600                           
  4601                           
  4602                           ;main_Master.c: 342:             ADCON0bits.CHS3 = 0;
  4603  0C95  129F               	bcf	31,5	;volatile
  4604  0C96                     L26:	
  4605                           
  4606                           ;main_Master.c: 343:             ADCON0bits.CHS2 = 0;
  4607  0C96  121F               	bcf	31,4	;volatile
  4608  0C97                     L28:	
  4609                           
  4610                           ;main_Master.c: 344:             ADCON0bits.CHS1 = 0;
  4611  0C97  119F               	bcf	31,3	;volatile
  4612  0C98                     L24:	
  4613                           
  4614                           ;main_Master.c: 345:             ADCON0bits.CHS0 = 0;
  4615  0C98  111F               	bcf	31,2	;volatile
  4616                           
  4617                           ;main_Master.c: 346:             break;
  4618  0C99  2CD4               	goto	l172
  4619  0C9A                     l3004:	
  4620  0C9A  0874               	movf	init_ADC@channel,w
  4621  0C9B  00F2               	movwf	??_init_ADC
  4622  0C9C  01F3               	clrf	??_init_ADC+1
  4623                           
  4624                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4625                           ; Switch size 1, requested type "simple"
  4626                           ; Number of cases is 1, Range of values is 0 to 0
  4627                           ; switch strategies available:
  4628                           ; Name         Instructions Cycles
  4629                           ; simple_byte            4     3 (average)
  4630                           ; direct_byte           11     8 (fixed)
  4631                           ; jumptable            260     6 (fixed)
  4632                           ;	Chosen strategy is simple_byte
  4633  0C9D  0873               	movf	??_init_ADC+1,w
  4634  0C9E  3A00               	xorlw	0	; case 0
  4635  0C9F  1903               	skipnz
  4636  0CA0  2CA2               	goto	l5070
  4637  0CA1  2C95               	goto	l188
  4638  0CA2                     l5070:	
  4639                           
  4640                           ; Switch size 1, requested type "simple"
  4641                           ; Number of cases is 16, Range of values is 0 to 15
  4642                           ; switch strategies available:
  4643                           ; Name         Instructions Cycles
  4644                           ; simple_byte           49    25 (average)
  4645                           ; direct_byte           56     8 (fixed)
  4646                           ; jumptable            260     6 (fixed)
  4647                           ;	Chosen strategy is simple_byte
  4648  0CA2  0872               	movf	??_init_ADC,w
  4649  0CA3  3A00               	xorlw	0	; case 0
  4650  0CA4  1903               	skipnz
  4651  0CA5  2C6B               	goto	l171
  4652  0CA6  3A01               	xorlw	1	; case 1
  4653  0CA7  1903               	skipnz
  4654  0CA8  2C6C               	goto	l173
  4655  0CA9  3A03               	xorlw	3	; case 2
  4656  0CAA  1903               	skipnz
  4657  0CAB  2C6E               	goto	l174
  4658  0CAC  3A01               	xorlw	1	; case 3
  4659  0CAD  1903               	skipnz
  4660  0CAE  2C70               	goto	l175
  4661  0CAF  3A07               	xorlw	7	; case 4
  4662  0CB0  1903               	skipnz
  4663  0CB1  2C72               	goto	l176
  4664  0CB2  3A01               	xorlw	1	; case 5
  4665  0CB3  1903               	skipnz
  4666  0CB4  2C74               	goto	l177
  4667  0CB5  3A03               	xorlw	3	; case 6
  4668  0CB6  1903               	skipnz
  4669  0CB7  2C76               	goto	l178
  4670  0CB8  3A01               	xorlw	1	; case 7
  4671  0CB9  1903               	skipnz
  4672  0CBA  2C78               	goto	l179
  4673  0CBB  3A0F               	xorlw	15	; case 8
  4674  0CBC  1903               	skipnz
  4675  0CBD  2C7A               	goto	l180
  4676  0CBE  3A01               	xorlw	1	; case 9
  4677  0CBF  1903               	skipnz
  4678  0CC0  2C7C               	goto	l181
  4679  0CC1  3A03               	xorlw	3	; case 10
  4680  0CC2  1903               	skipnz
  4681  0CC3  2C7F               	goto	l182
  4682  0CC4  3A01               	xorlw	1	; case 11
  4683  0CC5  1903               	skipnz
  4684  0CC6  2C82               	goto	l183
  4685  0CC7  3A07               	xorlw	7	; case 12
  4686  0CC8  1903               	skipnz
  4687  0CC9  2C85               	goto	l184
  4688  0CCA  3A01               	xorlw	1	; case 13
  4689  0CCB  1903               	skipnz
  4690  0CCC  2C88               	goto	l185
  4691  0CCD  3A03               	xorlw	3	; case 14
  4692  0CCE  1903               	skipnz
  4693  0CCF  2C8C               	goto	l186
  4694  0CD0  3A01               	xorlw	1	; case 15
  4695  0CD1  1903               	skipnz
  4696  0CD2  2C90               	goto	l187
  4697  0CD3  2C95               	goto	l188
  4698  0CD4                     l172:	
  4699                           
  4700                           ;main_Master.c: 349:     ADCON1bits.ADFM = 0;
  4701  0CD4  1683               	bsf	3,5	;RP0=1, select bank1
  4702  0CD5  1303               	bcf	3,6	;RP1=0, select bank1
  4703  0CD6  139F               	bcf	31,7	;volatile
  4704                           
  4705                           ;main_Master.c: 350:     ADCON1bits.VCFG1 = 0;
  4706  0CD7  129F               	bcf	31,5	;volatile
  4707                           
  4708                           ;main_Master.c: 351:     ADCON1bits.VCFG0 = 0;
  4709  0CD8  121F               	bcf	31,4	;volatile
  4710                           
  4711                           ;main_Master.c: 352:     ADCON0bits.ADON = 1;
  4712  0CD9  1283               	bcf	3,5	;RP0=0, select bank0
  4713  0CDA  1303               	bcf	3,6	;RP1=0, select bank0
  4714  0CDB  141F               	bsf	31,0	;volatile
  4715                           
  4716                           ;main_Master.c: 354:     PIR1bits.ADIF = 0;
  4717  0CDC  130C               	bcf	12,6	;volatile
  4718                           
  4719                           ;main_Master.c: 356:     ADCON0bits.GO = 1;
  4720  0CDD  149F               	bsf	31,1	;volatile
  4721  0CDE                     l189:	
  4722                           ;main_Master.c: 358:     }
  4723                           
  4724                           
  4725                           ;main_Master.c: 357:     while(ADCON0bits.GO == 1){
  4726  0CDE  1C9F               	btfss	31,1	;volatile
  4727  0CDF  0008               	return
  4728  0CE0  2CDE               	goto	l189
  4729  0CE1                     __end_of_init_ADC:	
  4730                           
  4731                           	psect	text15
  4732  034D                     __ptext15:	
  4733 ;; *************** function _get_Time *****************
  4734 ;; Defined at:
  4735 ;;		line 78 in file "RTC.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;		None
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;		None
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  1    wreg      void 
  4742 ;; Registers used:
  4743 ;;		wreg, status,2, status,0, pclath, cstack
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4749 ;;      Params:         0       0       0       0       0
  4750 ;;      Locals:         0       0       0       0       0
  4751 ;;      Temps:          0       1       0       0       0
  4752 ;;      Totals:         0       1       0       0       0
  4753 ;;Total ram usage:        1 bytes
  4754 ;; Hardware stack levels used:    1
  4755 ;; Hardware stack levels required when called:    3
  4756 ;; This function calls:
  4757 ;;		_BCD_a_DEC
  4758 ;;		_I2C_Master_Read
  4759 ;;		_I2C_Master_Start
  4760 ;;		_I2C_Master_Stop
  4761 ;;		_I2C_Master_Write
  4762 ;; This function is called by:
  4763 ;;		_main
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           
  4768                           ;psect for function _get_Time
  4769  034D                     _get_Time:	
  4770                           
  4771                           ;RTC.c: 79:     I2C_Master_Start();
  4772                           
  4773                           ;incstack = 0
  4774                           ; Regs used in _get_Time: [wreg+status,2+status,0+pclath+cstack]
  4775  034D  160A  118A  27A0  120A  118A  	fcall	_I2C_Master_Start
  4776                           
  4777                           ;RTC.c: 80:     I2C_Master_Write(0xD0);
  4778  0352  30D0               	movlw	208
  4779  0353  1283               	bcf	3,5	;RP0=0, select bank0
  4780  0354  1303               	bcf	3,6	;RP1=0, select bank0
  4781  0355  00AD               	movwf	I2C_Master_Write@d
  4782  0356  3000               	movlw	0
  4783  0357  00AE               	movwf	I2C_Master_Write@d+1
  4784  0358  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  4785                           
  4786                           ;RTC.c: 81:     I2C_Master_Write(0);
  4787  035D  3000               	movlw	0
  4788  035E  1283               	bcf	3,5	;RP0=0, select bank0
  4789  035F  1303               	bcf	3,6	;RP1=0, select bank0
  4790  0360  00AD               	movwf	I2C_Master_Write@d
  4791  0361  00AE               	movwf	I2C_Master_Write@d+1
  4792  0362  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  4793                           
  4794                           ;RTC.c: 82:     I2C_Master_Stop();
  4795  0367  160A  118A  27A7  120A  118A  	fcall	_I2C_Master_Stop
  4796                           
  4797                           ;RTC.c: 83:     I2C_Master_Start();
  4798  036C  160A  118A  27A0  120A  118A  	fcall	_I2C_Master_Start
  4799                           
  4800                           ;RTC.c: 84:     I2C_Master_Write(0xD1);
  4801  0371  30D1               	movlw	209
  4802  0372  1283               	bcf	3,5	;RP0=0, select bank0
  4803  0373  1303               	bcf	3,6	;RP1=0, select bank0
  4804  0374  00AD               	movwf	I2C_Master_Write@d
  4805  0375  3000               	movlw	0
  4806  0376  00AE               	movwf	I2C_Master_Write@d+1
  4807  0377  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  4808                           
  4809                           ;RTC.c: 85:     seg = BCD_a_DEC(I2C_Master_Read(0));
  4810  037C  3000               	movlw	0
  4811  037D  00F2               	movwf	I2C_Master_Read@a
  4812  037E  00F3               	movwf	I2C_Master_Read@a+1
  4813  037F  120A  158A  21CC  120A  118A  	fcall	_I2C_Master_Read
  4814  0384  0872               	movf	?_I2C_Master_Read,w
  4815  0385  120A  158A  2102  120A  118A  	fcall	_BCD_a_DEC
  4816  038A  1283               	bcf	3,5	;RP0=0, select bank0
  4817  038B  1303               	bcf	3,6	;RP1=0, select bank0
  4818  038C  00AF               	movwf	??_get_Time
  4819  038D  082F               	movf	??_get_Time,w
  4820  038E  00D3               	movwf	_seg
  4821                           
  4822                           ;RTC.c: 86:     I2C_Master_Stop();
  4823  038F  160A  118A  27A7  120A  118A  	fcall	_I2C_Master_Stop
  4824                           
  4825                           ;RTC.c: 88:     I2C_Master_Start();
  4826  0394  160A  118A  27A0  120A  118A  	fcall	_I2C_Master_Start
  4827                           
  4828                           ;RTC.c: 89:     I2C_Master_Write(0xD0);
  4829  0399  30D0               	movlw	208
  4830  039A  1283               	bcf	3,5	;RP0=0, select bank0
  4831  039B  1303               	bcf	3,6	;RP1=0, select bank0
  4832  039C  00AD               	movwf	I2C_Master_Write@d
  4833  039D  3000               	movlw	0
  4834  039E  00AE               	movwf	I2C_Master_Write@d+1
  4835  039F  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  4836                           
  4837                           ;RTC.c: 90:     I2C_Master_Write(1);
  4838  03A4  3001               	movlw	1
  4839  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  4840  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  4841  03A7  00AD               	movwf	I2C_Master_Write@d
  4842  03A8  3000               	movlw	0
  4843  03A9  00AE               	movwf	I2C_Master_Write@d+1
  4844  03AA  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  4845                           
  4846                           ;RTC.c: 91:     I2C_Master_Stop();
  4847  03AF  160A  118A  27A7  120A  118A  	fcall	_I2C_Master_Stop
  4848                           
  4849                           ;RTC.c: 92:     I2C_Master_Start();
  4850  03B4  160A  118A  27A0  120A  118A  	fcall	_I2C_Master_Start
  4851                           
  4852                           ;RTC.c: 93:     I2C_Master_Write(0xD1);
  4853  03B9  30D1               	movlw	209
  4854  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  4855  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  4856  03BC  00AD               	movwf	I2C_Master_Write@d
  4857  03BD  3000               	movlw	0
  4858  03BE  00AE               	movwf	I2C_Master_Write@d+1
  4859  03BF  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  4860                           
  4861                           ;RTC.c: 94:     min = BCD_a_DEC(I2C_Master_Read(0));
  4862  03C4  3000               	movlw	0
  4863  03C5  00F2               	movwf	I2C_Master_Read@a
  4864  03C6  00F3               	movwf	I2C_Master_Read@a+1
  4865  03C7  120A  158A  21CC  120A  118A  	fcall	_I2C_Master_Read
  4866  03CC  0872               	movf	?_I2C_Master_Read,w
  4867  03CD  120A  158A  2102  120A  118A  	fcall	_BCD_a_DEC
  4868  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  4869  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  4870  03D4  00AF               	movwf	??_get_Time
  4871  03D5  082F               	movf	??_get_Time,w
  4872  03D6  00DE               	movwf	_min
  4873                           
  4874                           ;RTC.c: 95:     I2C_Master_Stop();
  4875  03D7  160A  118A  27A7  120A  118A  	fcall	_I2C_Master_Stop
  4876                           
  4877                           ;RTC.c: 97:     I2C_Master_Start();
  4878  03DC  160A  118A  27A0  120A  118A  	fcall	_I2C_Master_Start
  4879                           
  4880                           ;RTC.c: 98:     I2C_Master_Write(0xD0);
  4881  03E1  30D0               	movlw	208
  4882  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  4883  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  4884  03E4  00AD               	movwf	I2C_Master_Write@d
  4885  03E5  3000               	movlw	0
  4886  03E6  00AE               	movwf	I2C_Master_Write@d+1
  4887  03E7  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  4888                           
  4889                           ;RTC.c: 99:     I2C_Master_Write(2);
  4890  03EC  3002               	movlw	2
  4891  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  4892  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  4893  03EF  00AD               	movwf	I2C_Master_Write@d
  4894  03F0  3000               	movlw	0
  4895  03F1  00AE               	movwf	I2C_Master_Write@d+1
  4896  03F2  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  4897                           
  4898                           ;RTC.c: 100:     I2C_Master_Stop();
  4899  03F7  160A  118A  27A7  120A  118A  	fcall	_I2C_Master_Stop
  4900                           
  4901                           ;RTC.c: 101:     I2C_Master_Start();
  4902  03FC  160A  118A  27A0  120A  118A  	fcall	_I2C_Master_Start
  4903                           
  4904                           ;RTC.c: 102:     I2C_Master_Write(0xD1);
  4905  0401  30D1               	movlw	209
  4906  0402  1283               	bcf	3,5	;RP0=0, select bank0
  4907  0403  1303               	bcf	3,6	;RP1=0, select bank0
  4908  0404  00AD               	movwf	I2C_Master_Write@d
  4909  0405  3000               	movlw	0
  4910  0406  00AE               	movwf	I2C_Master_Write@d+1
  4911  0407  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  4912                           
  4913                           ;RTC.c: 103:     hora = BCD_a_DEC(I2C_Master_Read(0));
  4914  040C  3000               	movlw	0
  4915  040D  00F2               	movwf	I2C_Master_Read@a
  4916  040E  00F3               	movwf	I2C_Master_Read@a+1
  4917  040F  120A  158A  21CC  120A  118A  	fcall	_I2C_Master_Read
  4918  0414  0872               	movf	?_I2C_Master_Read,w
  4919  0415  120A  158A  2102  120A  118A  	fcall	_BCD_a_DEC
  4920  041A  1283               	bcf	3,5	;RP0=0, select bank0
  4921  041B  1303               	bcf	3,6	;RP1=0, select bank0
  4922  041C  00AF               	movwf	??_get_Time
  4923  041D  082F               	movf	??_get_Time,w
  4924  041E  00DD               	movwf	_hora
  4925                           
  4926                           ;RTC.c: 104:     I2C_Master_Stop();
  4927  041F  160A  118A  27A7  120A  118A  	fcall	_I2C_Master_Stop
  4928                           
  4929                           ;RTC.c: 107:     I2C_Master_Start();
  4930  0424  160A  118A  27A0  120A  118A  	fcall	_I2C_Master_Start
  4931                           
  4932                           ;RTC.c: 108:     I2C_Master_Write(0xD0);
  4933  0429  30D0               	movlw	208
  4934  042A  1283               	bcf	3,5	;RP0=0, select bank0
  4935  042B  1303               	bcf	3,6	;RP1=0, select bank0
  4936  042C  00AD               	movwf	I2C_Master_Write@d
  4937  042D  3000               	movlw	0
  4938  042E  00AE               	movwf	I2C_Master_Write@d+1
  4939  042F  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  4940                           
  4941                           ;RTC.c: 109:     I2C_Master_Write(3);
  4942  0434  3003               	movlw	3
  4943  0435  1283               	bcf	3,5	;RP0=0, select bank0
  4944  0436  1303               	bcf	3,6	;RP1=0, select bank0
  4945  0437  00AD               	movwf	I2C_Master_Write@d
  4946  0438  3000               	movlw	0
  4947  0439  00AE               	movwf	I2C_Master_Write@d+1
  4948  043A  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  4949                           
  4950                           ;RTC.c: 110:     I2C_Master_Stop();
  4951  043F  160A  118A  27A7  120A  118A  	fcall	_I2C_Master_Stop
  4952                           
  4953                           ;RTC.c: 111:     I2C_Master_Start();
  4954  0444  160A  118A  27A0  120A  118A  	fcall	_I2C_Master_Start
  4955                           
  4956                           ;RTC.c: 112:     I2C_Master_Write(0xD1);
  4957  0449  30D1               	movlw	209
  4958  044A  1283               	bcf	3,5	;RP0=0, select bank0
  4959  044B  1303               	bcf	3,6	;RP1=0, select bank0
  4960  044C  00AD               	movwf	I2C_Master_Write@d
  4961  044D  3000               	movlw	0
  4962  044E  00AE               	movwf	I2C_Master_Write@d+1
  4963  044F  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  4964                           
  4965                           ;RTC.c: 113:     dia = BCD_a_DEC(I2C_Master_Read(0));
  4966  0454  3000               	movlw	0
  4967  0455  00F2               	movwf	I2C_Master_Read@a
  4968  0456  00F3               	movwf	I2C_Master_Read@a+1
  4969  0457  120A  158A  21CC  120A  118A  	fcall	_I2C_Master_Read
  4970  045C  0872               	movf	?_I2C_Master_Read,w
  4971  045D  120A  158A  2102  120A  118A  	fcall	_BCD_a_DEC
  4972  0462  1283               	bcf	3,5	;RP0=0, select bank0
  4973  0463  1303               	bcf	3,6	;RP1=0, select bank0
  4974  0464  00AF               	movwf	??_get_Time
  4975  0465  082F               	movf	??_get_Time,w
  4976  0466  00DC               	movwf	_dia
  4977                           
  4978                           ;RTC.c: 114:     I2C_Master_Stop();
  4979  0467  160A  118A  27A7  120A  118A  	fcall	_I2C_Master_Stop
  4980                           
  4981                           ;RTC.c: 116:     I2C_Master_Start();
  4982  046C  160A  118A  27A0  120A  118A  	fcall	_I2C_Master_Start
  4983                           
  4984                           ;RTC.c: 117:     I2C_Master_Write(0xD0);
  4985  0471  30D0               	movlw	208
  4986  0472  1283               	bcf	3,5	;RP0=0, select bank0
  4987  0473  1303               	bcf	3,6	;RP1=0, select bank0
  4988  0474  00AD               	movwf	I2C_Master_Write@d
  4989  0475  3000               	movlw	0
  4990  0476  00AE               	movwf	I2C_Master_Write@d+1
  4991  0477  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  4992                           
  4993                           ;RTC.c: 118:     I2C_Master_Write(4);
  4994  047C  3004               	movlw	4
  4995  047D  1283               	bcf	3,5	;RP0=0, select bank0
  4996  047E  1303               	bcf	3,6	;RP1=0, select bank0
  4997  047F  00AD               	movwf	I2C_Master_Write@d
  4998  0480  3000               	movlw	0
  4999  0481  00AE               	movwf	I2C_Master_Write@d+1
  5000  0482  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  5001                           
  5002                           ;RTC.c: 119:     I2C_Master_Stop();
  5003  0487  160A  118A  27A7  120A  118A  	fcall	_I2C_Master_Stop
  5004                           
  5005                           ;RTC.c: 120:     I2C_Master_Start();
  5006  048C  160A  118A  27A0  120A  118A  	fcall	_I2C_Master_Start
  5007                           
  5008                           ;RTC.c: 121:     I2C_Master_Write(0xD1);
  5009  0491  30D1               	movlw	209
  5010  0492  1283               	bcf	3,5	;RP0=0, select bank0
  5011  0493  1303               	bcf	3,6	;RP1=0, select bank0
  5012  0494  00AD               	movwf	I2C_Master_Write@d
  5013  0495  3000               	movlw	0
  5014  0496  00AE               	movwf	I2C_Master_Write@d+1
  5015  0497  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  5016                           
  5017                           ;RTC.c: 122:     datum = BCD_a_DEC(I2C_Master_Read(0));
  5018  049C  3000               	movlw	0
  5019  049D  00F2               	movwf	I2C_Master_Read@a
  5020  049E  00F3               	movwf	I2C_Master_Read@a+1
  5021  049F  120A  158A  21CC  120A  118A  	fcall	_I2C_Master_Read
  5022  04A4  0872               	movf	?_I2C_Master_Read,w
  5023  04A5  120A  158A  2102  120A  118A  	fcall	_BCD_a_DEC
  5024  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  5025  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  5026  04AC  00AF               	movwf	??_get_Time
  5027  04AD  082F               	movf	??_get_Time,w
  5028  04AE  00DB               	movwf	_datum
  5029                           
  5030                           ;RTC.c: 123:     I2C_Master_Stop();
  5031  04AF  160A  118A  27A7  120A  118A  	fcall	_I2C_Master_Stop
  5032                           
  5033                           ;RTC.c: 125:     I2C_Master_Start();
  5034  04B4  160A  118A  27A0  120A  118A  	fcall	_I2C_Master_Start
  5035                           
  5036                           ;RTC.c: 126:     I2C_Master_Write(0xD0);
  5037  04B9  30D0               	movlw	208
  5038  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  5039  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  5040  04BC  00AD               	movwf	I2C_Master_Write@d
  5041  04BD  3000               	movlw	0
  5042  04BE  00AE               	movwf	I2C_Master_Write@d+1
  5043  04BF  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  5044                           
  5045                           ;RTC.c: 127:     I2C_Master_Write(5);
  5046  04C4  3005               	movlw	5
  5047  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  5048  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  5049  04C7  00AD               	movwf	I2C_Master_Write@d
  5050  04C8  3000               	movlw	0
  5051  04C9  00AE               	movwf	I2C_Master_Write@d+1
  5052  04CA  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  5053                           
  5054                           ;RTC.c: 128:     I2C_Master_Stop();
  5055  04CF  160A  118A  27A7  120A  118A  	fcall	_I2C_Master_Stop
  5056                           
  5057                           ;RTC.c: 129:     I2C_Master_Start();
  5058  04D4  160A  118A  27A0  120A  118A  	fcall	_I2C_Master_Start
  5059                           
  5060                           ;RTC.c: 130:     I2C_Master_Write(0xD1);
  5061  04D9  30D1               	movlw	209
  5062  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  5063  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  5064  04DC  00AD               	movwf	I2C_Master_Write@d
  5065  04DD  3000               	movlw	0
  5066  04DE  00AE               	movwf	I2C_Master_Write@d+1
  5067  04DF  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  5068                           
  5069                           ;RTC.c: 131:     mes = BCD_a_DEC(I2C_Master_Read(0));
  5070  04E4  3000               	movlw	0
  5071  04E5  00F2               	movwf	I2C_Master_Read@a
  5072  04E6  00F3               	movwf	I2C_Master_Read@a+1
  5073  04E7  120A  158A  21CC  120A  118A  	fcall	_I2C_Master_Read
  5074  04EC  0872               	movf	?_I2C_Master_Read,w
  5075  04ED  120A  158A  2102  120A  118A  	fcall	_BCD_a_DEC
  5076  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  5077  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  5078  04F4  00AF               	movwf	??_get_Time
  5079  04F5  082F               	movf	??_get_Time,w
  5080  04F6  00DA               	movwf	_mes
  5081                           
  5082                           ;RTC.c: 132:     I2C_Master_Stop();
  5083  04F7  160A  118A  27A7  120A  118A  	fcall	_I2C_Master_Stop
  5084                           
  5085                           ;RTC.c: 134:     I2C_Master_Start();
  5086  04FC  160A  118A  27A0  120A  118A  	fcall	_I2C_Master_Start
  5087                           
  5088                           ;RTC.c: 135:     I2C_Master_Write(0xD0);
  5089  0501  30D0               	movlw	208
  5090  0502  1283               	bcf	3,5	;RP0=0, select bank0
  5091  0503  1303               	bcf	3,6	;RP1=0, select bank0
  5092  0504  00AD               	movwf	I2C_Master_Write@d
  5093  0505  3000               	movlw	0
  5094  0506  00AE               	movwf	I2C_Master_Write@d+1
  5095  0507  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  5096                           
  5097                           ;RTC.c: 136:     I2C_Master_Write(6);
  5098  050C  3006               	movlw	6
  5099  050D  1283               	bcf	3,5	;RP0=0, select bank0
  5100  050E  1303               	bcf	3,6	;RP1=0, select bank0
  5101  050F  00AD               	movwf	I2C_Master_Write@d
  5102  0510  3000               	movlw	0
  5103  0511  00AE               	movwf	I2C_Master_Write@d+1
  5104  0512  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  5105                           
  5106                           ;RTC.c: 137:     I2C_Master_Stop();
  5107  0517  160A  118A  27A7  120A  118A  	fcall	_I2C_Master_Stop
  5108                           
  5109                           ;RTC.c: 138:     I2C_Master_Start();
  5110  051C  160A  118A  27A0  120A  118A  	fcall	_I2C_Master_Start
  5111                           
  5112                           ;RTC.c: 139:     I2C_Master_Write(0xD1);
  5113  0521  30D1               	movlw	209
  5114  0522  1283               	bcf	3,5	;RP0=0, select bank0
  5115  0523  1303               	bcf	3,6	;RP1=0, select bank0
  5116  0524  00AD               	movwf	I2C_Master_Write@d
  5117  0525  3000               	movlw	0
  5118  0526  00AE               	movwf	I2C_Master_Write@d+1
  5119  0527  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  5120                           
  5121                           ;RTC.c: 140:     jahr = BCD_a_DEC(I2C_Master_Read(0));
  5122  052C  3000               	movlw	0
  5123  052D  00F2               	movwf	I2C_Master_Read@a
  5124  052E  00F3               	movwf	I2C_Master_Read@a+1
  5125  052F  120A  158A  21CC  120A  118A  	fcall	_I2C_Master_Read
  5126  0534  0872               	movf	?_I2C_Master_Read,w
  5127  0535  120A  158A  2102  120A  118A  	fcall	_BCD_a_DEC
  5128  053A  1283               	bcf	3,5	;RP0=0, select bank0
  5129  053B  1303               	bcf	3,6	;RP1=0, select bank0
  5130  053C  00AF               	movwf	??_get_Time
  5131  053D  082F               	movf	??_get_Time,w
  5132  053E  00D9               	movwf	_jahr
  5133                           
  5134                           ;RTC.c: 141:     I2C_Master_Stop();
  5135  053F  160A  118A  27A7   	fcall	_I2C_Master_Stop
  5136  0542  0008               	return
  5137  0543                     __end_of_get_Time:	
  5138                           
  5139                           	psect	text16
  5140  09CC                     __ptext16:	
  5141 ;; *************** function _I2C_Master_Read *****************
  5142 ;; Defined at:
  5143 ;;		line 74 in file "I2C.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;  a               2    2[COMMON] unsigned short 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;  temp            2    6[COMMON] unsigned short 
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  2    2[COMMON] unsigned short 
  5150 ;; Registers used:
  5151 ;;		wreg, status,2, status,0, pclath, cstack
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5157 ;;      Params:         2       0       0       0       0
  5158 ;;      Locals:         2       0       0       0       0
  5159 ;;      Temps:          2       0       0       0       0
  5160 ;;      Totals:         6       0       0       0       0
  5161 ;;Total ram usage:        6 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; Hardware stack levels required when called:    2
  5164 ;; This function calls:
  5165 ;;		_I2C_Master_Wait
  5166 ;; This function is called by:
  5167 ;;		_get_Time
  5168 ;;		_get_hora
  5169 ;;		_temp_objeto
  5170 ;;		_temp_ambiente
  5171 ;;		_Acc_X
  5172 ;;		_Acc_Y
  5173 ;;		_Acc_Z
  5174 ;;		_Gy_X
  5175 ;;		_Gy_Y
  5176 ;;		_Gy_Z
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           
  5181                           ;psect for function _I2C_Master_Read
  5182  09CC                     _I2C_Master_Read:	
  5183                           
  5184                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  5185                           
  5186                           ;incstack = 0
  5187                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  5188  09CC  160A  118A  27C6  120A  158A  	fcall	_I2C_Master_Wait
  5189                           
  5190                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  5191  09D1  1683               	bsf	3,5	;RP0=1, select bank1
  5192  09D2  1303               	bcf	3,6	;RP1=0, select bank1
  5193  09D3  1591               	bsf	17,3	;volatile
  5194                           
  5195                           ;I2C.c: 79:     I2C_Master_Wait();
  5196  09D4  160A  118A  27C6  120A  158A  	fcall	_I2C_Master_Wait
  5197                           
  5198                           ;I2C.c: 80:     temp = SSPBUF;
  5199  09D9  1283               	bcf	3,5	;RP0=0, select bank0
  5200  09DA  1303               	bcf	3,6	;RP1=0, select bank0
  5201  09DB  0813               	movf	19,w	;volatile
  5202  09DC  00F4               	movwf	??_I2C_Master_Read
  5203  09DD  01F5               	clrf	??_I2C_Master_Read+1
  5204  09DE  0874               	movf	??_I2C_Master_Read,w
  5205  09DF  00F6               	movwf	I2C_Master_Read@temp
  5206  09E0  0875               	movf	??_I2C_Master_Read+1,w
  5207  09E1  00F7               	movwf	I2C_Master_Read@temp+1
  5208                           
  5209                           ;I2C.c: 81:     I2C_Master_Wait();
  5210  09E2  160A  118A  27C6  120A  158A  	fcall	_I2C_Master_Wait
  5211                           
  5212                           ;I2C.c: 82:     if(a == 1){
  5213  09E7  0372               	decf	I2C_Master_Read@a,w
  5214  09E8  0473               	iorwf	I2C_Master_Read@a+1,w
  5215  09E9  1D03               	btfss	3,2
  5216  09EA  29EF               	goto	l379
  5217                           
  5218                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  5219  09EB  1683               	bsf	3,5	;RP0=1, select bank1
  5220  09EC  1303               	bcf	3,6	;RP1=0, select bank1
  5221  09ED  1291               	bcf	17,5	;volatile
  5222                           
  5223                           ;I2C.c: 84:     }else{
  5224  09EE  29F2               	goto	l380
  5225  09EF                     l379:	
  5226                           
  5227                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  5228  09EF  1683               	bsf	3,5	;RP0=1, select bank1
  5229  09F0  1303               	bcf	3,6	;RP1=0, select bank1
  5230  09F1  1691               	bsf	17,5	;volatile
  5231  09F2                     l380:	
  5232                           ;I2C.c: 86:     }
  5233                           
  5234                           
  5235                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  5236  09F2  1611               	bsf	17,4	;volatile
  5237                           
  5238                           ;I2C.c: 88:     return temp;
  5239  09F3  0877               	movf	I2C_Master_Read@temp+1,w
  5240  09F4  00F3               	movwf	?_I2C_Master_Read+1
  5241  09F5  0876               	movf	I2C_Master_Read@temp,w
  5242  09F6  00F2               	movwf	?_I2C_Master_Read
  5243  09F7  0008               	return
  5244  09F8                     __end_of_I2C_Master_Read:	
  5245                           
  5246                           	psect	text17
  5247  0902                     __ptext17:	
  5248 ;; *************** function _BCD_a_DEC *****************
  5249 ;; Defined at:
  5250 ;;		line 27 in file "RTC.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;  numBCD          1    wreg     unsigned char 
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;  numBCD          1    9[COMMON] unsigned char 
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  1    wreg      unsigned char 
  5257 ;; Registers used:
  5258 ;;		wreg, status,2, status,0, pclath, cstack
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5264 ;;      Params:         0       0       0       0       0
  5265 ;;      Locals:         1       0       0       0       0
  5266 ;;      Temps:          3       0       0       0       0
  5267 ;;      Totals:         4       0       0       0       0
  5268 ;;Total ram usage:        4 bytes
  5269 ;; Hardware stack levels used:    1
  5270 ;; Hardware stack levels required when called:    2
  5271 ;; This function calls:
  5272 ;;		___bmul
  5273 ;; This function is called by:
  5274 ;;		_get_Time
  5275 ;;		_get_hora
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           
  5280                           ;psect for function _BCD_a_DEC
  5281  0902                     _BCD_a_DEC:	
  5282                           
  5283                           ;incstack = 0
  5284                           ; Regs used in _BCD_a_DEC: [wreg+status,2+status,0+pclath+cstack]
  5285                           ;BCD_a_DEC@numBCD stored from wreg
  5286  0902  00F9               	movwf	BCD_a_DEC@numBCD
  5287                           
  5288                           ;RTC.c: 28:     return (numBCD >> 4) * 10 + (numBCD & 0x0F);
  5289  0903  300F               	movlw	15
  5290  0904  0579               	andwf	BCD_a_DEC@numBCD,w
  5291  0905  00F6               	movwf	??_BCD_a_DEC
  5292  0906  300A               	movlw	10
  5293  0907  00F7               	movwf	??_BCD_a_DEC+1
  5294  0908  0877               	movf	??_BCD_a_DEC+1,w
  5295  0909  00F2               	movwf	___bmul@multiplicand
  5296  090A  0879               	movf	BCD_a_DEC@numBCD,w
  5297  090B  00F8               	movwf	??_BCD_a_DEC+2
  5298  090C  3004               	movlw	4
  5299  090D                     u1185:	
  5300  090D  1003               	clrc
  5301  090E  0CF8               	rrf	??_BCD_a_DEC+2,f
  5302  090F  3EFF               	addlw	-1
  5303  0910  1D03               	skipz
  5304  0911  290D               	goto	u1185
  5305  0912  0878               	movf	??_BCD_a_DEC+2,w
  5306  0913  160A  118A  27EF   	fcall	___bmul
  5307  0916  0776               	addwf	??_BCD_a_DEC,w
  5308  0917  0008               	return
  5309  0918                     __end_of_BCD_a_DEC:	
  5310                           
  5311                           	psect	text18
  5312  17EF                     __ptext18:	
  5313 ;; *************** function ___bmul *****************
  5314 ;; Defined at:
  5315 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;  multiplier      1    wreg     unsigned char 
  5318 ;;  multiplicand    1    2[COMMON] unsigned char 
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;  multiplier      1    5[COMMON] unsigned char 
  5321 ;;  product         1    4[COMMON] unsigned char 
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  1    wreg      unsigned char 
  5324 ;; Registers used:
  5325 ;;		wreg, status,2, status,0
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5331 ;;      Params:         1       0       0       0       0
  5332 ;;      Locals:         2       0       0       0       0
  5333 ;;      Temps:          1       0       0       0       0
  5334 ;;      Totals:         4       0       0       0       0
  5335 ;;Total ram usage:        4 bytes
  5336 ;; Hardware stack levels used:    1
  5337 ;; Hardware stack levels required when called:    1
  5338 ;; This function calls:
  5339 ;;		Nothing
  5340 ;; This function is called by:
  5341 ;;		_BCD_a_DEC
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           
  5346                           ;psect for function ___bmul
  5347  17EF                     ___bmul:	
  5348                           
  5349                           ;incstack = 0
  5350                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5351                           ;___bmul@multiplier stored from wreg
  5352  17EF  00F5               	movwf	___bmul@multiplier
  5353  17F0  01F4               	clrf	___bmul@product
  5354  17F1                     l2802:	
  5355  17F1  1C75               	btfss	___bmul@multiplier,0
  5356  17F2  2FF7               	goto	l2806
  5357  17F3  0872               	movf	___bmul@multiplicand,w
  5358  17F4  00F3               	movwf	??___bmul
  5359  17F5  0873               	movf	??___bmul,w
  5360  17F6  07F4               	addwf	___bmul@product,f
  5361  17F7                     l2806:	
  5362  17F7  1003               	clrc
  5363  17F8  0DF2               	rlf	___bmul@multiplicand,f
  5364  17F9  1003               	clrc
  5365  17FA  0CF5               	rrf	___bmul@multiplier,f
  5366  17FB  0875               	movf	___bmul@multiplier,w
  5367  17FC  1D03               	btfss	3,2
  5368  17FD  2FF1               	goto	l2802
  5369  17FE  0874               	movf	___bmul@product,w
  5370  17FF  0008               	return
  5371  1800                     __end_of___bmul:	
  5372                           
  5373                           	psect	text19
  5374  0543                     __ptext19:	
  5375 ;; *************** function _SetUp *****************
  5376 ;; Defined at:
  5377 ;;		line 180 in file "main_Master.c"
  5378 ;; Parameters:    Size  Location     Type
  5379 ;;		None
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;		None
  5382 ;; Return value:  Size  Location     Type
  5383 ;;                  1    wreg      void 
  5384 ;; Registers used:
  5385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5391 ;;      Params:         0       0       0       0       0
  5392 ;;      Locals:         0       0       0       0       0
  5393 ;;      Temps:          0       3       0       0       0
  5394 ;;      Totals:         0       3       0       0       0
  5395 ;;Total ram usage:        3 bytes
  5396 ;; Hardware stack levels used:    1
  5397 ;; Hardware stack levels required when called:    4
  5398 ;; This function calls:
  5399 ;;		_I2C_Master_Init
  5400 ;;		_I2C_Master_Start
  5401 ;;		_I2C_Master_Stop
  5402 ;;		_I2C_Master_Write
  5403 ;;		_LCD_Create_Char
  5404 ;;		_LCD_clear
  5405 ;;		_LCD_init
  5406 ;;		_OSC_config
  5407 ;;		_Zeit_Datum_Set
  5408 ;;		_uart_init
  5409 ;; This function is called by:
  5410 ;;		_main
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414                           
  5415                           ;psect for function _SetUp
  5416  0543                     _SetUp:	
  5417                           
  5418                           ;main_Master.c: 181:     TRISB = 0;
  5419                           
  5420                           ;incstack = 0
  5421                           ; Regs used in _SetUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5422  0543  1683               	bsf	3,5	;RP0=1, select bank1
  5423  0544  1303               	bcf	3,6	;RP1=0, select bank1
  5424  0545  0186               	clrf	6	;volatile
  5425                           
  5426                           ;main_Master.c: 182:     OSC_config(4000000);
  5427  0546  3000               	movlw	0
  5428  0547  00F5               	movwf	OSC_config@frecuencia+3
  5429  0548  303D               	movlw	61
  5430  0549  00F4               	movwf	OSC_config@frecuencia+2
  5431  054A  3009               	movlw	9
  5432  054B  00F3               	movwf	OSC_config@frecuencia+1
  5433  054C  3000               	movlw	0
  5434  054D  00F2               	movwf	OSC_config@frecuencia
  5435  054E  120A  158A  26A3  120A  118A  	fcall	_OSC_config
  5436                           
  5437                           ;main_Master.c: 183:     TRISB = 0b00000110;
  5438  0553  3006               	movlw	6
  5439  0554  1683               	bsf	3,5	;RP0=1, select bank1
  5440  0555  1303               	bcf	3,6	;RP1=0, select bank1
  5441  0556  0086               	movwf	6	;volatile
  5442                           
  5443                           ;main_Master.c: 184:     ANSELH = 0;
  5444  0557  1683               	bsf	3,5	;RP0=1, select bank3
  5445  0558  1703               	bsf	3,6	;RP1=1, select bank3
  5446  0559  0189               	clrf	9	;volatile
  5447                           
  5448                           ;main_Master.c: 185:     WPUB = 0b00000110;
  5449  055A  3006               	movlw	6
  5450  055B  1683               	bsf	3,5	;RP0=1, select bank1
  5451  055C  1303               	bcf	3,6	;RP1=0, select bank1
  5452  055D  0095               	movwf	21	;volatile
  5453                           
  5454                           ;main_Master.c: 186:     OPTION_REGbits.nRBPU = 0;
  5455  055E  1381               	bcf	1,7	;volatile
  5456                           
  5457                           ;main_Master.c: 187:     IOCB = 0b00000110;
  5458  055F  3006               	movlw	6
  5459  0560  0096               	movwf	22	;volatile
  5460                           
  5461                           ;main_Master.c: 188:     INTCONbits.RBIE = 1;
  5462  0561  158B               	bsf	11,3	;volatile
  5463                           
  5464                           ;main_Master.c: 189:     INTCONbits.GIE = 1;
  5465  0562  178B               	bsf	11,7	;volatile
  5466                           
  5467                           ;main_Master.c: 190:     TRISD = 0;
  5468  0563  0188               	clrf	8	;volatile
  5469                           
  5470                           ;main_Master.c: 191:     PORTA = 0;
  5471  0564  1283               	bcf	3,5	;RP0=0, select bank0
  5472  0565  1303               	bcf	3,6	;RP1=0, select bank0
  5473  0566  0185               	clrf	5	;volatile
  5474                           
  5475                           ;main_Master.c: 192:     TRISA = 0;
  5476  0567  1683               	bsf	3,5	;RP0=1, select bank1
  5477  0568  1303               	bcf	3,6	;RP1=0, select bank1
  5478  0569  0185               	clrf	5	;volatile
  5479                           
  5480                           ;main_Master.c: 193:     TRISE = 0b0111;
  5481  056A  3007               	movlw	7
  5482  056B  0089               	movwf	9	;volatile
  5483                           
  5484                           ;main_Master.c: 194:     ANSEL = 0b01110000;
  5485  056C  3070               	movlw	112
  5486  056D  1683               	bsf	3,5	;RP0=1, select bank3
  5487  056E  1703               	bsf	3,6	;RP1=1, select bank3
  5488  056F  0088               	movwf	8	;volatile
  5489                           
  5490                           ;main_Master.c: 195:     LCD_init();
  5491  0570  120A  158A  238F  120A  118A  	fcall	_LCD_init
  5492                           
  5493                           ;main_Master.c: 196:     LCD_Create_Char(0, atilde);
  5494  0575  3011               	movlw	(low ((_atilde-__stringbase)| (0+32768)))& (0+255)
  5495  0576  1283               	bcf	3,5	;RP0=0, select bank0
  5496  0577  1303               	bcf	3,6	;RP1=0, select bank0
  5497  0578  00B1               	movwf	??_SetUp
  5498  0579  0831               	movf	??_SetUp,w
  5499  057A  00F5               	movwf	LCD_Create_Char@chardata
  5500  057B  3000               	movlw	0
  5501  057C  120A  158A  21A0  120A  118A  	fcall	_LCD_Create_Char
  5502                           
  5503                           ;main_Master.c: 197:     LCD_Create_Char(1, arrowr);
  5504  0581  3021               	movlw	(low ((_arrowr-__stringbase)| (0+32768)))& (0+255)
  5505  0582  1283               	bcf	3,5	;RP0=0, select bank0
  5506  0583  1303               	bcf	3,6	;RP1=0, select bank0
  5507  0584  00B1               	movwf	??_SetUp
  5508  0585  0831               	movf	??_SetUp,w
  5509  0586  00F5               	movwf	LCD_Create_Char@chardata
  5510  0587  3001               	movlw	1
  5511  0588  120A  158A  21A0  120A  118A  	fcall	_LCD_Create_Char
  5512                           
  5513                           ;main_Master.c: 198:     LCD_Create_Char(2, termometro);
  5514  058D  3009               	movlw	(low ((_termometro-__stringbase)| (0+32768)))& (0+255)
  5515  058E  1283               	bcf	3,5	;RP0=0, select bank0
  5516  058F  1303               	bcf	3,6	;RP1=0, select bank0
  5517  0590  00B1               	movwf	??_SetUp
  5518  0591  0831               	movf	??_SetUp,w
  5519  0592  00F5               	movwf	LCD_Create_Char@chardata
  5520  0593  3002               	movlw	2
  5521  0594  120A  158A  21A0  120A  118A  	fcall	_LCD_Create_Char
  5522                           
  5523                           ;main_Master.c: 199:     LCD_Create_Char(3, gota);
  5524  0599  3001               	movlw	(low ((_gota-__stringbase)| (0+32768)))& (0+255)
  5525  059A  1283               	bcf	3,5	;RP0=0, select bank0
  5526  059B  1303               	bcf	3,6	;RP1=0, select bank0
  5527  059C  00B1               	movwf	??_SetUp
  5528  059D  0831               	movf	??_SetUp,w
  5529  059E  00F5               	movwf	LCD_Create_Char@chardata
  5530  059F  3003               	movlw	3
  5531  05A0  120A  158A  21A0  120A  118A  	fcall	_LCD_Create_Char
  5532                           
  5533                           ;main_Master.c: 200:     LCD_Create_Char(4, arrowr_vacio);
  5534  05A5  3019               	movlw	(low ((_arrowr_vacio-__stringbase)| (0+32768)))& (0+255)
  5535  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  5536  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  5537  05A8  00B1               	movwf	??_SetUp
  5538  05A9  0831               	movf	??_SetUp,w
  5539  05AA  00F5               	movwf	LCD_Create_Char@chardata
  5540  05AB  3004               	movlw	4
  5541  05AC  120A  158A  21A0  120A  118A  	fcall	_LCD_Create_Char
  5542                           
  5543                           ;main_Master.c: 201:     LCD_clear();
  5544  05B1  120A  158A  20EC  120A  118A  	fcall	_LCD_clear
  5545                           
  5546                           ;main_Master.c: 202:     uart_init(9600);
  5547  05B6  3080               	movlw	128
  5548  05B7  00F2               	movwf	?_uart_init
  5549  05B8  3025               	movlw	37
  5550  05B9  00F3               	movwf	?_uart_init+1
  5551  05BA  120A  158A  20D7  120A  118A  	fcall	_uart_init
  5552                           
  5553                           ;main_Master.c: 203:     I2C_Master_Init(100000);
  5554  05BF  3000               	movlw	0
  5555  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  5556  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  5557  05C2  00A9               	movwf	I2C_Master_Init@c+3
  5558  05C3  3001               	movlw	1
  5559  05C4  00A8               	movwf	I2C_Master_Init@c+2
  5560  05C5  3086               	movlw	134
  5561  05C6  00A7               	movwf	I2C_Master_Init@c+1
  5562  05C7  30A0               	movlw	160
  5563  05C8  00A6               	movwf	I2C_Master_Init@c
  5564  05C9  120A  158A  2253  120A  118A  	fcall	_I2C_Master_Init
  5565                           
  5566                           ;main_Master.c: 206:     Zeit_Datum_Set();
  5567  05CE  120A  158A  274F  120A  118A  	fcall	_Zeit_Datum_Set
  5568                           
  5569                           ;main_Master.c: 207:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  5570  05D3  3006               	movlw	6
  5571  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  5572  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  5573  05D6  00B3               	movwf	??_SetUp+2
  5574  05D7  3013               	movlw	19
  5575  05D8  00B2               	movwf	??_SetUp+1
  5576  05D9  30AD               	movlw	173
  5577  05DA  00B1               	movwf	??_SetUp
  5578  05DB                     u2027:	
  5579  05DB  0BB1               	decfsz	??_SetUp,f
  5580  05DC  2DDB               	goto	u2027
  5581  05DD  0BB2               	decfsz	??_SetUp+1,f
  5582  05DE  2DDB               	goto	u2027
  5583  05DF  0BB3               	decfsz	??_SetUp+2,f
  5584  05E0  2DDB               	goto	u2027
  5585                           
  5586                           ;main_Master.c: 208:     I2C_Master_Start();
  5587  05E1  160A  118A  27A0  120A  118A  	fcall	_I2C_Master_Start
  5588                           
  5589                           ;main_Master.c: 209:     I2C_Master_Write(0x30);
  5590  05E6  3030               	movlw	48
  5591  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  5592  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  5593  05E9  00AD               	movwf	I2C_Master_Write@d
  5594  05EA  3000               	movlw	0
  5595  05EB  00AE               	movwf	I2C_Master_Write@d+1
  5596  05EC  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  5597                           
  5598                           ;main_Master.c: 210:     I2C_Master_Write(2);
  5599  05F1  3002               	movlw	2
  5600  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  5601  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  5602  05F4  00AD               	movwf	I2C_Master_Write@d
  5603  05F5  3000               	movlw	0
  5604  05F6  00AE               	movwf	I2C_Master_Write@d+1
  5605  05F7  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  5606                           
  5607                           ;main_Master.c: 211:     I2C_Master_Write(3);
  5608  05FC  3003               	movlw	3
  5609  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  5610  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  5611  05FF  00AD               	movwf	I2C_Master_Write@d
  5612  0600  3000               	movlw	0
  5613  0601  00AE               	movwf	I2C_Master_Write@d+1
  5614  0602  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  5615                           
  5616                           ;main_Master.c: 212:     I2C_Master_Write(8);
  5617  0607  3008               	movlw	8
  5618  0608  1283               	bcf	3,5	;RP0=0, select bank0
  5619  0609  1303               	bcf	3,6	;RP1=0, select bank0
  5620  060A  00AD               	movwf	I2C_Master_Write@d
  5621  060B  3000               	movlw	0
  5622  060C  00AE               	movwf	I2C_Master_Write@d+1
  5623  060D  160A  118A  27AE  120A  118A  	fcall	_I2C_Master_Write
  5624                           
  5625                           ;main_Master.c: 213:     I2C_Master_Stop();
  5626  0612  160A  118A  27A7  120A  118A  	fcall	_I2C_Master_Stop
  5627                           
  5628                           ;main_Master.c: 214:     _delay((unsigned long)((10)*(4000000/4000.0)));
  5629  0617  300D               	movlw	13
  5630  0618  1283               	bcf	3,5	;RP0=0, select bank0
  5631  0619  1303               	bcf	3,6	;RP1=0, select bank0
  5632  061A  00B2               	movwf	??_SetUp+1
  5633  061B  30FB               	movlw	251
  5634  061C  00B1               	movwf	??_SetUp
  5635  061D                     u2037:	
  5636  061D  0BB1               	decfsz	??_SetUp,f
  5637  061E  2E1D               	goto	u2037
  5638  061F  0BB2               	decfsz	??_SetUp+1,f
  5639  0620  2E1D               	goto	u2037
  5640  0621  0008               	return
  5641  0622                     __end_of_SetUp:	
  5642                           
  5643                           	psect	text20
  5644  08D7                     __ptext20:	
  5645 ;; *************** function _uart_init *****************
  5646 ;; Defined at:
  5647 ;;		line 14 in file "UART.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;		None
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;		None
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  1    wreg      void 
  5654 ;; Registers used:
  5655 ;;		wreg, status,2
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5661 ;;      Params:         2       0       0       0       0
  5662 ;;      Locals:         0       0       0       0       0
  5663 ;;      Temps:          0       0       0       0       0
  5664 ;;      Totals:         2       0       0       0       0
  5665 ;;Total ram usage:        2 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; Hardware stack levels required when called:    1
  5668 ;; This function calls:
  5669 ;;		Nothing
  5670 ;; This function is called by:
  5671 ;;		_SetUp
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           
  5676                           ;psect for function _uart_init
  5677  08D7                     _uart_init:	
  5678                           
  5679                           ;UART.c: 15:     TXSTAbits.SYNC = 0;
  5680                           
  5681                           ;incstack = 0
  5682                           ; Regs used in _uart_init: [wreg+status,2]
  5683  08D7  1683               	bsf	3,5	;RP0=1, select bank1
  5684  08D8  1303               	bcf	3,6	;RP1=0, select bank1
  5685  08D9  1218               	bcf	24,4	;volatile
  5686                           
  5687                           ;UART.c: 16:     TXSTAbits.BRGH = 1;
  5688  08DA  1518               	bsf	24,2	;volatile
  5689                           
  5690                           ;UART.c: 17:     BAUDCTLbits.BRG16 = 1;
  5691  08DB  1683               	bsf	3,5	;RP0=1, select bank3
  5692  08DC  1703               	bsf	3,6	;RP1=1, select bank3
  5693  08DD  1587               	bsf	7,3	;volatile
  5694                           
  5695                           ;UART.c: 18:     SPBRG = 103;
  5696  08DE  3067               	movlw	103
  5697  08DF  1683               	bsf	3,5	;RP0=1, select bank1
  5698  08E0  1303               	bcf	3,6	;RP1=0, select bank1
  5699  08E1  0099               	movwf	25	;volatile
  5700                           
  5701                           ;UART.c: 19:     SPBRGH = 0;
  5702  08E2  019A               	clrf	26	;volatile
  5703                           
  5704                           ;UART.c: 21:     RCSTAbits.SPEN = 1;
  5705  08E3  1283               	bcf	3,5	;RP0=0, select bank0
  5706  08E4  1303               	bcf	3,6	;RP1=0, select bank0
  5707  08E5  1798               	bsf	24,7	;volatile
  5708                           
  5709                           ;UART.c: 22:     RCSTAbits.RX9 = 0;
  5710  08E6  1318               	bcf	24,6	;volatile
  5711                           
  5712                           ;UART.c: 23:     RCSTAbits.CREN = 1;
  5713  08E7  1618               	bsf	24,4	;volatile
  5714                           
  5715                           ;UART.c: 25:     TXSTAbits.TXEN = 1;
  5716  08E8  1683               	bsf	3,5	;RP0=1, select bank1
  5717  08E9  1303               	bcf	3,6	;RP1=0, select bank1
  5718  08EA  1698               	bsf	24,5	;volatile
  5719  08EB  0008               	return
  5720  08EC                     __end_of_uart_init:	
  5721                           
  5722                           	psect	text21
  5723  0F4F                     __ptext21:	
  5724 ;; *************** function _Zeit_Datum_Set *****************
  5725 ;; Defined at:
  5726 ;;		line 64 in file "RTC.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;		None
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;		None
  5731 ;; Return value:  Size  Location     Type
  5732 ;;                  1    wreg      void 
  5733 ;; Registers used:
  5734 ;;		wreg, status,2, status,0, pclath, cstack
  5735 ;; Tracked objects:
  5736 ;;		On entry : 0/0
  5737 ;;		On exit  : 0/0
  5738 ;;		Unchanged: 0/0
  5739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5740 ;;      Params:         0       0       0       0       0
  5741 ;;      Locals:         0       0       0       0       0
  5742 ;;      Temps:          0       2       0       0       0
  5743 ;;      Totals:         0       2       0       0       0
  5744 ;;Total ram usage:        2 bytes
  5745 ;; Hardware stack levels used:    1
  5746 ;; Hardware stack levels required when called:    3
  5747 ;; This function calls:
  5748 ;;		_DEC_a_BCD
  5749 ;;		_I2C_Master_Start
  5750 ;;		_I2C_Master_Stop
  5751 ;;		_I2C_Master_Write
  5752 ;; This function is called by:
  5753 ;;		_SetUp
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           
  5758                           ;psect for function _Zeit_Datum_Set
  5759  0F4F                     _Zeit_Datum_Set:	
  5760                           
  5761                           ;RTC.c: 65:     I2C_Master_Start();
  5762                           
  5763                           ;incstack = 0
  5764                           ; Regs used in _Zeit_Datum_Set: [wreg+status,2+status,0+pclath+cstack]
  5765  0F4F  160A  118A  27A0  120A  158A  	fcall	_I2C_Master_Start
  5766                           
  5767                           ;RTC.c: 66:     I2C_Master_Write(0xD0);
  5768  0F54  30D0               	movlw	208
  5769  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  5770  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  5771  0F57  00AD               	movwf	I2C_Master_Write@d
  5772  0F58  3000               	movlw	0
  5773  0F59  00AE               	movwf	I2C_Master_Write@d+1
  5774  0F5A  160A  118A  27AE  120A  158A  	fcall	_I2C_Master_Write
  5775                           
  5776                           ;RTC.c: 67:     I2C_Master_Write(0);
  5777  0F5F  3000               	movlw	0
  5778  0F60  1283               	bcf	3,5	;RP0=0, select bank0
  5779  0F61  1303               	bcf	3,6	;RP1=0, select bank0
  5780  0F62  00AD               	movwf	I2C_Master_Write@d
  5781  0F63  00AE               	movwf	I2C_Master_Write@d+1
  5782  0F64  160A  118A  27AE  120A  158A  	fcall	_I2C_Master_Write
  5783                           
  5784                           ;RTC.c: 68:     I2C_Master_Write(DEC_a_BCD(seg));
  5785  0F69  1283               	bcf	3,5	;RP0=0, select bank0
  5786  0F6A  1303               	bcf	3,6	;RP1=0, select bank0
  5787  0F6B  0853               	movf	_seg,w
  5788  0F6C  120A  118A  27CC  120A  158A  	fcall	_DEC_a_BCD
  5789  0F71  1283               	bcf	3,5	;RP0=0, select bank0
  5790  0F72  1303               	bcf	3,6	;RP1=0, select bank0
  5791  0F73  00AF               	movwf	??_Zeit_Datum_Set
  5792  0F74  01B0               	clrf	??_Zeit_Datum_Set+1
  5793  0F75  082F               	movf	??_Zeit_Datum_Set,w
  5794  0F76  00AD               	movwf	I2C_Master_Write@d
  5795  0F77  0830               	movf	??_Zeit_Datum_Set+1,w
  5796  0F78  00AE               	movwf	I2C_Master_Write@d+1
  5797  0F79  160A  118A  27AE  120A  158A  	fcall	_I2C_Master_Write
  5798                           
  5799                           ;RTC.c: 69:     I2C_Master_Write(DEC_a_BCD(min));
  5800  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  5801  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  5802  0F80  085E               	movf	_min,w
  5803  0F81  120A  118A  27CC  120A  158A  	fcall	_DEC_a_BCD
  5804  0F86  1283               	bcf	3,5	;RP0=0, select bank0
  5805  0F87  1303               	bcf	3,6	;RP1=0, select bank0
  5806  0F88  00AF               	movwf	??_Zeit_Datum_Set
  5807  0F89  01B0               	clrf	??_Zeit_Datum_Set+1
  5808  0F8A  082F               	movf	??_Zeit_Datum_Set,w
  5809  0F8B  00AD               	movwf	I2C_Master_Write@d
  5810  0F8C  0830               	movf	??_Zeit_Datum_Set+1,w
  5811  0F8D  00AE               	movwf	I2C_Master_Write@d+1
  5812  0F8E  160A  118A  27AE  120A  158A  	fcall	_I2C_Master_Write
  5813                           
  5814                           ;RTC.c: 70:     I2C_Master_Write(DEC_a_BCD(hora));
  5815  0F93  1283               	bcf	3,5	;RP0=0, select bank0
  5816  0F94  1303               	bcf	3,6	;RP1=0, select bank0
  5817  0F95  085D               	movf	_hora,w
  5818  0F96  120A  118A  27CC  120A  158A  	fcall	_DEC_a_BCD
  5819  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  5820  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  5821  0F9D  00AF               	movwf	??_Zeit_Datum_Set
  5822  0F9E  01B0               	clrf	??_Zeit_Datum_Set+1
  5823  0F9F  082F               	movf	??_Zeit_Datum_Set,w
  5824  0FA0  00AD               	movwf	I2C_Master_Write@d
  5825  0FA1  0830               	movf	??_Zeit_Datum_Set+1,w
  5826  0FA2  00AE               	movwf	I2C_Master_Write@d+1
  5827  0FA3  160A  118A  27AE  120A  158A  	fcall	_I2C_Master_Write
  5828                           
  5829                           ;RTC.c: 71:     I2C_Master_Write(DEC_a_BCD(dia));
  5830  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  5831  0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  5832  0FAA  085C               	movf	_dia,w
  5833  0FAB  120A  118A  27CC  120A  158A  	fcall	_DEC_a_BCD
  5834  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  5835  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  5836  0FB2  00AF               	movwf	??_Zeit_Datum_Set
  5837  0FB3  01B0               	clrf	??_Zeit_Datum_Set+1
  5838  0FB4  082F               	movf	??_Zeit_Datum_Set,w
  5839  0FB5  00AD               	movwf	I2C_Master_Write@d
  5840  0FB6  0830               	movf	??_Zeit_Datum_Set+1,w
  5841  0FB7  00AE               	movwf	I2C_Master_Write@d+1
  5842  0FB8  160A  118A  27AE  120A  158A  	fcall	_I2C_Master_Write
  5843                           
  5844                           ;RTC.c: 72:     I2C_Master_Write(DEC_a_BCD(datum));
  5845  0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  5846  0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  5847  0FBF  085B               	movf	_datum,w
  5848  0FC0  120A  118A  27CC  120A  158A  	fcall	_DEC_a_BCD
  5849  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  5850  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  5851  0FC7  00AF               	movwf	??_Zeit_Datum_Set
  5852  0FC8  01B0               	clrf	??_Zeit_Datum_Set+1
  5853  0FC9  082F               	movf	??_Zeit_Datum_Set,w
  5854  0FCA  00AD               	movwf	I2C_Master_Write@d
  5855  0FCB  0830               	movf	??_Zeit_Datum_Set+1,w
  5856  0FCC  00AE               	movwf	I2C_Master_Write@d+1
  5857  0FCD  160A  118A  27AE  120A  158A  	fcall	_I2C_Master_Write
  5858                           
  5859                           ;RTC.c: 73:     I2C_Master_Write(DEC_a_BCD(mes));
  5860  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  5861  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  5862  0FD4  085A               	movf	_mes,w
  5863  0FD5  120A  118A  27CC  120A  158A  	fcall	_DEC_a_BCD
  5864  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  5865  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  5866  0FDC  00AF               	movwf	??_Zeit_Datum_Set
  5867  0FDD  01B0               	clrf	??_Zeit_Datum_Set+1
  5868  0FDE  082F               	movf	??_Zeit_Datum_Set,w
  5869  0FDF  00AD               	movwf	I2C_Master_Write@d
  5870  0FE0  0830               	movf	??_Zeit_Datum_Set+1,w
  5871  0FE1  00AE               	movwf	I2C_Master_Write@d+1
  5872  0FE2  160A  118A  27AE  120A  158A  	fcall	_I2C_Master_Write
  5873                           
  5874                           ;RTC.c: 74:     I2C_Master_Write(DEC_a_BCD(jahr));
  5875  0FE7  1283               	bcf	3,5	;RP0=0, select bank0
  5876  0FE8  1303               	bcf	3,6	;RP1=0, select bank0
  5877  0FE9  0859               	movf	_jahr,w
  5878  0FEA  120A  118A  27CC  120A  158A  	fcall	_DEC_a_BCD
  5879  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  5880  0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  5881  0FF1  00AF               	movwf	??_Zeit_Datum_Set
  5882  0FF2  01B0               	clrf	??_Zeit_Datum_Set+1
  5883  0FF3  082F               	movf	??_Zeit_Datum_Set,w
  5884  0FF4  00AD               	movwf	I2C_Master_Write@d
  5885  0FF5  0830               	movf	??_Zeit_Datum_Set+1,w
  5886  0FF6  00AE               	movwf	I2C_Master_Write@d+1
  5887  0FF7  160A  118A  27AE  120A  158A  	fcall	_I2C_Master_Write
  5888                           
  5889                           ;RTC.c: 75:     I2C_Master_Stop();
  5890  0FFC  160A  118A  27A7   	fcall	_I2C_Master_Stop
  5891  0FFF  0008               	return
  5892  1000                     __end_of_Zeit_Datum_Set:	
  5893                           
  5894                           	psect	text22
  5895  17AE                     __ptext22:	
  5896 ;; *************** function _I2C_Master_Write *****************
  5897 ;; Defined at:
  5898 ;;		line 65 in file "I2C.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;  d               2   13[BANK0 ] unsigned int 
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;		None
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  1    wreg      void 
  5905 ;; Registers used:
  5906 ;;		wreg, status,2, status,0, pclath, cstack
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5912 ;;      Params:         0       2       0       0       0
  5913 ;;      Locals:         0       0       0       0       0
  5914 ;;      Temps:          0       0       0       0       0
  5915 ;;      Totals:         0       2       0       0       0
  5916 ;;Total ram usage:        2 bytes
  5917 ;; Hardware stack levels used:    1
  5918 ;; Hardware stack levels required when called:    2
  5919 ;; This function calls:
  5920 ;;		_I2C_Master_Wait
  5921 ;; This function is called by:
  5922 ;;		_SetUp
  5923 ;;		_mostrarLCD
  5924 ;;		_Zeit_Datum_Set
  5925 ;;		_get_Time
  5926 ;;		_get_hora
  5927 ;;		_temp_objeto
  5928 ;;		_temp_ambiente
  5929 ;;		_IMU_init
  5930 ;;		_Acc_X
  5931 ;;		_Acc_Y
  5932 ;;		_Acc_Z
  5933 ;;		_Gy_X
  5934 ;;		_Gy_Y
  5935 ;;		_Gy_Z
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           
  5939                           
  5940                           ;psect for function _I2C_Master_Write
  5941  17AE                     _I2C_Master_Write:	
  5942                           
  5943                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  5944                           
  5945                           ;incstack = 0
  5946                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  5947  17AE  160A  118A  27C6   	fcall	_I2C_Master_Wait
  5948                           
  5949                           ;I2C.c: 68:     SSPBUF = d;
  5950  17B1  1283               	bcf	3,5	;RP0=0, select bank0
  5951  17B2  1303               	bcf	3,6	;RP1=0, select bank0
  5952  17B3  082D               	movf	I2C_Master_Write@d,w
  5953  17B4  0093               	movwf	19	;volatile
  5954  17B5  0008               	return
  5955  17B6                     __end_of_I2C_Master_Write:	
  5956                           
  5957                           	psect	text23
  5958  17A7                     __ptext23:	
  5959 ;; *************** function _I2C_Master_Stop *****************
  5960 ;; Defined at:
  5961 ;;		line 55 in file "I2C.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;		None
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;		None
  5966 ;; Return value:  Size  Location     Type
  5967 ;;                  1    wreg      void 
  5968 ;; Registers used:
  5969 ;;		wreg, status,2, status,0, pclath, cstack
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/0
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5975 ;;      Params:         0       0       0       0       0
  5976 ;;      Locals:         0       0       0       0       0
  5977 ;;      Temps:          0       0       0       0       0
  5978 ;;      Totals:         0       0       0       0       0
  5979 ;;Total ram usage:        0 bytes
  5980 ;; Hardware stack levels used:    1
  5981 ;; Hardware stack levels required when called:    2
  5982 ;; This function calls:
  5983 ;;		_I2C_Master_Wait
  5984 ;; This function is called by:
  5985 ;;		_SetUp
  5986 ;;		_mostrarLCD
  5987 ;;		_Zeit_Datum_Set
  5988 ;;		_get_Time
  5989 ;;		_get_hora
  5990 ;;		_temp_objeto
  5991 ;;		_temp_ambiente
  5992 ;;		_IMU_init
  5993 ;;		_Acc_X
  5994 ;;		_Acc_Y
  5995 ;;		_Acc_Z
  5996 ;;		_Gy_X
  5997 ;;		_Gy_Y
  5998 ;;		_Gy_Z
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           
  6002                           
  6003                           ;psect for function _I2C_Master_Stop
  6004  17A7                     _I2C_Master_Stop:	
  6005                           
  6006                           ;I2C.c: 57:     I2C_Master_Wait();
  6007                           
  6008                           ;incstack = 0
  6009                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  6010  17A7  160A  118A  27C6   	fcall	_I2C_Master_Wait
  6011                           
  6012                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  6013  17AA  1683               	bsf	3,5	;RP0=1, select bank1
  6014  17AB  1303               	bcf	3,6	;RP1=0, select bank1
  6015  17AC  1511               	bsf	17,2	;volatile
  6016  17AD  0008               	return
  6017  17AE                     __end_of_I2C_Master_Stop:	
  6018                           
  6019                           	psect	text24
  6020  17A0                     __ptext24:	
  6021 ;; *************** function _I2C_Master_Start *****************
  6022 ;; Defined at:
  6023 ;;		line 39 in file "I2C.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;		None
  6026 ;; Auto vars:     Size  Location     Type
  6027 ;;		None
  6028 ;; Return value:  Size  Location     Type
  6029 ;;                  1    wreg      void 
  6030 ;; Registers used:
  6031 ;;		wreg, status,2, status,0, pclath, cstack
  6032 ;; Tracked objects:
  6033 ;;		On entry : 0/0
  6034 ;;		On exit  : 0/0
  6035 ;;		Unchanged: 0/0
  6036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6037 ;;      Params:         0       0       0       0       0
  6038 ;;      Locals:         0       0       0       0       0
  6039 ;;      Temps:          0       0       0       0       0
  6040 ;;      Totals:         0       0       0       0       0
  6041 ;;Total ram usage:        0 bytes
  6042 ;; Hardware stack levels used:    1
  6043 ;; Hardware stack levels required when called:    2
  6044 ;; This function calls:
  6045 ;;		_I2C_Master_Wait
  6046 ;; This function is called by:
  6047 ;;		_SetUp
  6048 ;;		_mostrarLCD
  6049 ;;		_Zeit_Datum_Set
  6050 ;;		_get_Time
  6051 ;;		_get_hora
  6052 ;;		_temp_objeto
  6053 ;;		_temp_ambiente
  6054 ;;		_IMU_init
  6055 ;;		_Acc_X
  6056 ;;		_Acc_Y
  6057 ;;		_Acc_Z
  6058 ;;		_Gy_X
  6059 ;;		_Gy_Y
  6060 ;;		_Gy_Z
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           
  6065                           ;psect for function _I2C_Master_Start
  6066  17A0                     _I2C_Master_Start:	
  6067                           
  6068                           ;I2C.c: 41:     I2C_Master_Wait();
  6069                           
  6070                           ;incstack = 0
  6071                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  6072  17A0  160A  118A  27C6   	fcall	_I2C_Master_Wait
  6073                           
  6074                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  6075  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  6076  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  6077  17A5  1411               	bsf	17,0	;volatile
  6078  17A6  0008               	return
  6079  17A7                     __end_of_I2C_Master_Start:	
  6080                           
  6081                           	psect	text25
  6082  17C6                     __ptext25:	
  6083 ;; *************** function _I2C_Master_Wait *****************
  6084 ;; Defined at:
  6085 ;;		line 32 in file "I2C.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;		None
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;		None
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  1    wreg      void 
  6092 ;; Registers used:
  6093 ;;		wreg, status,2
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6099 ;;      Params:         0       0       0       0       0
  6100 ;;      Locals:         0       0       0       0       0
  6101 ;;      Temps:          0       0       0       0       0
  6102 ;;      Totals:         0       0       0       0       0
  6103 ;;Total ram usage:        0 bytes
  6104 ;; Hardware stack levels used:    1
  6105 ;; Hardware stack levels required when called:    1
  6106 ;; This function calls:
  6107 ;;		Nothing
  6108 ;; This function is called by:
  6109 ;;		_I2C_Master_Start
  6110 ;;		_I2C_Master_Stop
  6111 ;;		_I2C_Master_Write
  6112 ;;		_I2C_Master_Read
  6113 ;;		_I2C_Master_RepeatedStart
  6114 ;; This function uses a non-reentrant model
  6115 ;;
  6116                           
  6117                           
  6118                           ;psect for function _I2C_Master_Wait
  6119  17C6                     _I2C_Master_Wait:	
  6120  17C6                     l361:	
  6121                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  6122                           
  6123                           ;incstack = 0
  6124                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  6125                           
  6126  17C6  1683               	bsf	3,5	;RP0=1, select bank1
  6127  17C7  1303               	bcf	3,6	;RP1=0, select bank1
  6128  17C8  1914               	btfsc	20,2	;volatile
  6129  17C9  2FC6               	goto	l361
  6130  17CA  0811               	movf	17,w	;volatile
  6131  17CB  391F               	andlw	31
  6132  17CC  1903               	btfsc	3,2
  6133  17CD  0008               	return
  6134  17CE  2FC6               	goto	l361
  6135  17CF                     __end_of_I2C_Master_Wait:	
  6136                           
  6137                           	psect	text26
  6138  07CC                     __ptext26:	
  6139 ;; *************** function _DEC_a_BCD *****************
  6140 ;; Defined at:
  6141 ;;		line 32 in file "RTC.c"
  6142 ;; Parameters:    Size  Location     Type
  6143 ;;  numDEC          1    wreg     unsigned char 
  6144 ;; Auto vars:     Size  Location     Type
  6145 ;;  numDEC          1    9[COMMON] unsigned char 
  6146 ;; Return value:  Size  Location     Type
  6147 ;;                  1    wreg      unsigned char 
  6148 ;; Registers used:
  6149 ;;		wreg, status,2, status,0, pclath, cstack
  6150 ;; Tracked objects:
  6151 ;;		On entry : 0/0
  6152 ;;		On exit  : 0/0
  6153 ;;		Unchanged: 0/0
  6154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6155 ;;      Params:         0       0       0       0       0
  6156 ;;      Locals:         1       0       0       0       0
  6157 ;;      Temps:          0       5       0       0       0
  6158 ;;      Totals:         1       5       0       0       0
  6159 ;;Total ram usage:        6 bytes
  6160 ;; Hardware stack levels used:    1
  6161 ;; Hardware stack levels required when called:    2
  6162 ;; This function calls:
  6163 ;;		___awdiv
  6164 ;;		___awmod
  6165 ;; This function is called by:
  6166 ;;		_Zeit_Datum_Set
  6167 ;; This function uses a non-reentrant model
  6168 ;;
  6169                           
  6170                           
  6171                           ;psect for function _DEC_a_BCD
  6172  07CC                     _DEC_a_BCD:	
  6173                           
  6174                           ;incstack = 0
  6175                           ; Regs used in _DEC_a_BCD: [wreg+status,2+status,0+pclath+cstack]
  6176                           ;DEC_a_BCD@numDEC stored from wreg
  6177  07CC  00F9               	movwf	DEC_a_BCD@numDEC
  6178                           
  6179                           ;RTC.c: 33:     return ((numDEC / 10) << 4) + (numDEC % 10);
  6180  07CD  300A               	movlw	10
  6181  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  6182  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  6183  07D0  00A0               	movwf	___awdiv@divisor
  6184  07D1  3000               	movlw	0
  6185  07D2  00A1               	movwf	___awdiv@divisor+1
  6186  07D3  0879               	movf	DEC_a_BCD@numDEC,w
  6187  07D4  00A8               	movwf	??_DEC_a_BCD
  6188  07D5  01A9               	clrf	??_DEC_a_BCD+1
  6189  07D6  0828               	movf	??_DEC_a_BCD,w
  6190  07D7  00A2               	movwf	___awdiv@dividend
  6191  07D8  0829               	movf	??_DEC_a_BCD+1,w
  6192  07D9  00A3               	movwf	___awdiv@dividend+1
  6193  07DA  120A  158A  22D4  120A  118A  	fcall	___awdiv
  6194  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  6195  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  6196  07E1  0820               	movf	?___awdiv,w
  6197  07E2  00AA               	movwf	??_DEC_a_BCD+2
  6198  07E3  3004               	movlw	4
  6199  07E4                     u1655:	
  6200  07E4  1003               	clrc
  6201  07E5  0DAA               	rlf	??_DEC_a_BCD+2,f
  6202  07E6  3EFF               	addlw	-1
  6203  07E7  1D03               	skipz
  6204  07E8  2FE4               	goto	u1655
  6205  07E9  300A               	movlw	10
  6206  07EA  00F2               	movwf	___awmod@divisor
  6207  07EB  3000               	movlw	0
  6208  07EC  00F3               	movwf	___awmod@divisor+1
  6209  07ED  0879               	movf	DEC_a_BCD@numDEC,w
  6210  07EE  00AB               	movwf	??_DEC_a_BCD+3
  6211  07EF  01AC               	clrf	??_DEC_a_BCD+4
  6212  07F0  082B               	movf	??_DEC_a_BCD+3,w
  6213  07F1  00F4               	movwf	___awmod@dividend
  6214  07F2  082C               	movf	??_DEC_a_BCD+4,w
  6215  07F3  00F5               	movwf	___awmod@dividend+1
  6216  07F4  120A  158A  2289   	fcall	___awmod
  6217  07F7  0872               	movf	?___awmod,w
  6218  07F8  1283               	bcf	3,5	;RP0=0, select bank0
  6219  07F9  1303               	bcf	3,6	;RP1=0, select bank0
  6220  07FA  072A               	addwf	??_DEC_a_BCD+2,w
  6221  07FB  0008               	return
  6222  07FC                     __end_of_DEC_a_BCD:	
  6223                           
  6224                           	psect	text27
  6225  0A89                     __ptext27:	
  6226 ;; *************** function ___awmod *****************
  6227 ;; Defined at:
  6228 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;  divisor         2    2[COMMON] int 
  6231 ;;  dividend        2    4[COMMON] int 
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;  sign            1    8[COMMON] unsigned char 
  6234 ;;  counter         1    7[COMMON] unsigned char 
  6235 ;; Return value:  Size  Location     Type
  6236 ;;                  2    2[COMMON] int 
  6237 ;; Registers used:
  6238 ;;		wreg, status,2, status,0
  6239 ;; Tracked objects:
  6240 ;;		On entry : 0/0
  6241 ;;		On exit  : 0/0
  6242 ;;		Unchanged: 0/0
  6243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6244 ;;      Params:         4       0       0       0       0
  6245 ;;      Locals:         2       0       0       0       0
  6246 ;;      Temps:          1       0       0       0       0
  6247 ;;      Totals:         7       0       0       0       0
  6248 ;;Total ram usage:        7 bytes
  6249 ;; Hardware stack levels used:    1
  6250 ;; Hardware stack levels required when called:    1
  6251 ;; This function calls:
  6252 ;;		Nothing
  6253 ;; This function is called by:
  6254 ;;		_display_Uhrzeit
  6255 ;;		_display_Datum
  6256 ;;		_mostrarLCD
  6257 ;;		_DEC_a_BCD
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           
  6261                           
  6262                           ;psect for function ___awmod
  6263  0A89                     ___awmod:	
  6264                           
  6265                           ;incstack = 0
  6266                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6267  0A89  01F8               	clrf	___awmod@sign
  6268  0A8A  1FF5               	btfss	___awmod@dividend+1,7
  6269  0A8B  2A93               	goto	l4146
  6270  0A8C  09F4               	comf	___awmod@dividend,f
  6271  0A8D  09F5               	comf	___awmod@dividend+1,f
  6272  0A8E  0AF4               	incf	___awmod@dividend,f
  6273  0A8F  1903               	skipnz
  6274  0A90  0AF5               	incf	___awmod@dividend+1,f
  6275  0A91  01F8               	clrf	___awmod@sign
  6276  0A92  0AF8               	incf	___awmod@sign,f
  6277  0A93                     l4146:	
  6278  0A93  1FF3               	btfss	___awmod@divisor+1,7
  6279  0A94  2A9A               	goto	l4150
  6280  0A95  09F2               	comf	___awmod@divisor,f
  6281  0A96  09F3               	comf	___awmod@divisor+1,f
  6282  0A97  0AF2               	incf	___awmod@divisor,f
  6283  0A98  1903               	skipnz
  6284  0A99  0AF3               	incf	___awmod@divisor+1,f
  6285  0A9A                     l4150:	
  6286  0A9A  0872               	movf	___awmod@divisor,w
  6287  0A9B  0473               	iorwf	___awmod@divisor+1,w
  6288  0A9C  1903               	btfsc	3,2
  6289  0A9D  2AC7               	goto	l4168
  6290  0A9E  01F7               	clrf	___awmod@counter
  6291  0A9F  0AF7               	incf	___awmod@counter,f
  6292  0AA0                     l4158:	
  6293  0AA0  1BF3               	btfsc	___awmod@divisor+1,7
  6294  0AA1  2AAE               	goto	l4160
  6295  0AA2  3001               	movlw	1
  6296  0AA3                     u1595:	
  6297  0AA3  1003               	clrc
  6298  0AA4  0DF2               	rlf	___awmod@divisor,f
  6299  0AA5  0DF3               	rlf	___awmod@divisor+1,f
  6300  0AA6  3EFF               	addlw	-1
  6301  0AA7  1D03               	skipz
  6302  0AA8  2AA3               	goto	u1595
  6303  0AA9  3001               	movlw	1
  6304  0AAA  00F6               	movwf	??___awmod
  6305  0AAB  0876               	movf	??___awmod,w
  6306  0AAC  07F7               	addwf	___awmod@counter,f
  6307  0AAD  2AA0               	goto	l4158
  6308  0AAE                     l4160:	
  6309  0AAE  0873               	movf	___awmod@divisor+1,w
  6310  0AAF  0275               	subwf	___awmod@dividend+1,w
  6311  0AB0  1D03               	skipz
  6312  0AB1  2AB4               	goto	u1615
  6313  0AB2  0872               	movf	___awmod@divisor,w
  6314  0AB3  0274               	subwf	___awmod@dividend,w
  6315  0AB4                     u1615:	
  6316  0AB4  1C03               	skipc
  6317  0AB5  2ABC               	goto	l4164
  6318  0AB6  0872               	movf	___awmod@divisor,w
  6319  0AB7  02F4               	subwf	___awmod@dividend,f
  6320  0AB8  0873               	movf	___awmod@divisor+1,w
  6321  0AB9  1C03               	skipc
  6322  0ABA  03F5               	decf	___awmod@dividend+1,f
  6323  0ABB  02F5               	subwf	___awmod@dividend+1,f
  6324  0ABC                     l4164:	
  6325  0ABC  3001               	movlw	1
  6326  0ABD                     u1625:	
  6327  0ABD  1003               	clrc
  6328  0ABE  0CF3               	rrf	___awmod@divisor+1,f
  6329  0ABF  0CF2               	rrf	___awmod@divisor,f
  6330  0AC0  3EFF               	addlw	-1
  6331  0AC1  1D03               	skipz
  6332  0AC2  2ABD               	goto	u1625
  6333  0AC3  3001               	movlw	1
  6334  0AC4  02F7               	subwf	___awmod@counter,f
  6335  0AC5  1D03               	btfss	3,2
  6336  0AC6  2AAE               	goto	l4160
  6337  0AC7                     l4168:	
  6338  0AC7  0878               	movf	___awmod@sign,w
  6339  0AC8  1903               	btfsc	3,2
  6340  0AC9  2ACF               	goto	l4172
  6341  0ACA  09F4               	comf	___awmod@dividend,f
  6342  0ACB  09F5               	comf	___awmod@dividend+1,f
  6343  0ACC  0AF4               	incf	___awmod@dividend,f
  6344  0ACD  1903               	skipnz
  6345  0ACE  0AF5               	incf	___awmod@dividend+1,f
  6346  0ACF                     l4172:	
  6347  0ACF  0875               	movf	___awmod@dividend+1,w
  6348  0AD0  00F3               	movwf	?___awmod+1
  6349  0AD1  0874               	movf	___awmod@dividend,w
  6350  0AD2  00F2               	movwf	?___awmod
  6351  0AD3  0008               	return
  6352  0AD4                     __end_of___awmod:	
  6353                           
  6354                           	psect	text28
  6355  0AD4                     __ptext28:	
  6356 ;; *************** function ___awdiv *****************
  6357 ;; Defined at:
  6358 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;  divisor         2    0[BANK0 ] int 
  6361 ;;  dividend        2    2[BANK0 ] int 
  6362 ;; Auto vars:     Size  Location     Type
  6363 ;;  quotient        2    6[BANK0 ] int 
  6364 ;;  sign            1    5[BANK0 ] unsigned char 
  6365 ;;  counter         1    4[BANK0 ] unsigned char 
  6366 ;; Return value:  Size  Location     Type
  6367 ;;                  2    0[BANK0 ] int 
  6368 ;; Registers used:
  6369 ;;		wreg, status,2, status,0
  6370 ;; Tracked objects:
  6371 ;;		On entry : 0/0
  6372 ;;		On exit  : 0/0
  6373 ;;		Unchanged: 0/0
  6374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6375 ;;      Params:         0       4       0       0       0
  6376 ;;      Locals:         0       4       0       0       0
  6377 ;;      Temps:          1       0       0       0       0
  6378 ;;      Totals:         1       8       0       0       0
  6379 ;;Total ram usage:        9 bytes
  6380 ;; Hardware stack levels used:    1
  6381 ;; Hardware stack levels required when called:    1
  6382 ;; This function calls:
  6383 ;;		Nothing
  6384 ;; This function is called by:
  6385 ;;		_display_Uhrzeit
  6386 ;;		_display_Datum
  6387 ;;		_mostrarLCD
  6388 ;;		_DEC_a_BCD
  6389 ;;		_uint_to_array
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           
  6394                           ;psect for function ___awdiv
  6395  0AD4                     ___awdiv:	
  6396                           
  6397                           ;incstack = 0
  6398                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6399  0AD4  1283               	bcf	3,5	;RP0=0, select bank0
  6400  0AD5  1303               	bcf	3,6	;RP1=0, select bank0
  6401  0AD6  01A5               	clrf	___awdiv@sign
  6402  0AD7  1FA1               	btfss	___awdiv@divisor+1,7
  6403  0AD8  2AE0               	goto	l4102
  6404  0AD9  09A0               	comf	___awdiv@divisor,f
  6405  0ADA  09A1               	comf	___awdiv@divisor+1,f
  6406  0ADB  0AA0               	incf	___awdiv@divisor,f
  6407  0ADC  1903               	skipnz
  6408  0ADD  0AA1               	incf	___awdiv@divisor+1,f
  6409  0ADE  01A5               	clrf	___awdiv@sign
  6410  0ADF  0AA5               	incf	___awdiv@sign,f
  6411  0AE0                     l4102:	
  6412  0AE0  1FA3               	btfss	___awdiv@dividend+1,7
  6413  0AE1  2AEB               	goto	l4108
  6414  0AE2  09A2               	comf	___awdiv@dividend,f
  6415  0AE3  09A3               	comf	___awdiv@dividend+1,f
  6416  0AE4  0AA2               	incf	___awdiv@dividend,f
  6417  0AE5  1903               	skipnz
  6418  0AE6  0AA3               	incf	___awdiv@dividend+1,f
  6419  0AE7  3001               	movlw	1
  6420  0AE8  00F8               	movwf	??___awdiv
  6421  0AE9  0878               	movf	??___awdiv,w
  6422  0AEA  06A5               	xorwf	___awdiv@sign,f
  6423  0AEB                     l4108:	
  6424  0AEB  01A6               	clrf	___awdiv@quotient
  6425  0AEC  01A7               	clrf	___awdiv@quotient+1
  6426  0AED  0820               	movf	___awdiv@divisor,w
  6427  0AEE  0421               	iorwf	___awdiv@divisor+1,w
  6428  0AEF  1903               	btfsc	3,2
  6429  0AF0  2B22               	goto	l4130
  6430  0AF1  01A4               	clrf	___awdiv@counter
  6431  0AF2  0AA4               	incf	___awdiv@counter,f
  6432  0AF3                     l4118:	
  6433  0AF3  1BA1               	btfsc	___awdiv@divisor+1,7
  6434  0AF4  2B01               	goto	l4120
  6435  0AF5  3001               	movlw	1
  6436  0AF6                     u1495:	
  6437  0AF6  1003               	clrc
  6438  0AF7  0DA0               	rlf	___awdiv@divisor,f
  6439  0AF8  0DA1               	rlf	___awdiv@divisor+1,f
  6440  0AF9  3EFF               	addlw	-1
  6441  0AFA  1D03               	skipz
  6442  0AFB  2AF6               	goto	u1495
  6443  0AFC  3001               	movlw	1
  6444  0AFD  00F8               	movwf	??___awdiv
  6445  0AFE  0878               	movf	??___awdiv,w
  6446  0AFF  07A4               	addwf	___awdiv@counter,f
  6447  0B00  2AF3               	goto	l4118
  6448  0B01                     l4120:	
  6449  0B01  3001               	movlw	1
  6450  0B02                     u1515:	
  6451  0B02  1003               	clrc
  6452  0B03  0DA6               	rlf	___awdiv@quotient,f
  6453  0B04  0DA7               	rlf	___awdiv@quotient+1,f
  6454  0B05  3EFF               	addlw	-1
  6455  0B06  1D03               	skipz
  6456  0B07  2B02               	goto	u1515
  6457  0B08  0821               	movf	___awdiv@divisor+1,w
  6458  0B09  0223               	subwf	___awdiv@dividend+1,w
  6459  0B0A  1D03               	skipz
  6460  0B0B  2B0E               	goto	u1525
  6461  0B0C  0820               	movf	___awdiv@divisor,w
  6462  0B0D  0222               	subwf	___awdiv@dividend,w
  6463  0B0E                     u1525:	
  6464  0B0E  1C03               	skipc
  6465  0B0F  2B17               	goto	l4126
  6466  0B10  0820               	movf	___awdiv@divisor,w
  6467  0B11  02A2               	subwf	___awdiv@dividend,f
  6468  0B12  0821               	movf	___awdiv@divisor+1,w
  6469  0B13  1C03               	skipc
  6470  0B14  03A3               	decf	___awdiv@dividend+1,f
  6471  0B15  02A3               	subwf	___awdiv@dividend+1,f
  6472  0B16  1426               	bsf	___awdiv@quotient,0
  6473  0B17                     l4126:	
  6474  0B17  3001               	movlw	1
  6475  0B18                     u1535:	
  6476  0B18  1003               	clrc
  6477  0B19  0CA1               	rrf	___awdiv@divisor+1,f
  6478  0B1A  0CA0               	rrf	___awdiv@divisor,f
  6479  0B1B  3EFF               	addlw	-1
  6480  0B1C  1D03               	skipz
  6481  0B1D  2B18               	goto	u1535
  6482  0B1E  3001               	movlw	1
  6483  0B1F  02A4               	subwf	___awdiv@counter,f
  6484  0B20  1D03               	btfss	3,2
  6485  0B21  2B01               	goto	l4120
  6486  0B22                     l4130:	
  6487  0B22  0825               	movf	___awdiv@sign,w
  6488  0B23  1903               	btfsc	3,2
  6489  0B24  2B2A               	goto	l4134
  6490  0B25  09A6               	comf	___awdiv@quotient,f
  6491  0B26  09A7               	comf	___awdiv@quotient+1,f
  6492  0B27  0AA6               	incf	___awdiv@quotient,f
  6493  0B28  1903               	skipnz
  6494  0B29  0AA7               	incf	___awdiv@quotient+1,f
  6495  0B2A                     l4134:	
  6496  0B2A  0827               	movf	___awdiv@quotient+1,w
  6497  0B2B  00A1               	movwf	?___awdiv+1
  6498  0B2C  0826               	movf	___awdiv@quotient,w
  6499  0B2D  00A0               	movwf	?___awdiv
  6500  0B2E  0008               	return
  6501  0B2F                     __end_of___awdiv:	
  6502                           
  6503                           	psect	text29
  6504  0EA3                     __ptext29:	
  6505 ;; *************** function _OSC_config *****************
  6506 ;; Defined at:
  6507 ;;		line 362 in file "main_Master.c"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;  frecuencia      4    2[COMMON] unsigned long 
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;		None
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  1    wreg      void 
  6514 ;; Registers used:
  6515 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6521 ;;      Params:         4       0       0       0       0
  6522 ;;      Locals:         0       0       0       0       0
  6523 ;;      Temps:          0       0       0       0       0
  6524 ;;      Totals:         4       0       0       0       0
  6525 ;;Total ram usage:        4 bytes
  6526 ;; Hardware stack levels used:    1
  6527 ;; Hardware stack levels required when called:    1
  6528 ;; This function calls:
  6529 ;;		Nothing
  6530 ;; This function is called by:
  6531 ;;		_SetUp
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           
  6536                           ;psect for function _OSC_config
  6537  0EA3                     _OSC_config:	
  6538                           
  6539                           ;main_Master.c: 363:     switch(frecuencia){
  6540                           
  6541                           ;incstack = 0
  6542                           ; Regs used in _OSC_config: [wreg-fsr0h+status,2+status,0]
  6543  0EA3  2EDF               	goto	l2858
  6544  0EA4                     l2840:	
  6545                           
  6546                           ;main_Master.c: 365:             OSCCONbits.IRCF = 0b111;
  6547  0EA4  3070               	movlw	112
  6548  0EA5  1683               	bsf	3,5	;RP0=1, select bank1
  6549  0EA6  1303               	bcf	3,6	;RP1=0, select bank1
  6550  0EA7  048F               	iorwf	15,f	;volatile
  6551                           
  6552                           ;main_Master.c: 366:             break;
  6553  0EA8  0008               	return
  6554  0EA9                     l2842:	
  6555                           
  6556                           ;main_Master.c: 368:             OSCCONbits.IRCF = 0b110;
  6557  0EA9  1683               	bsf	3,5	;RP0=1, select bank1
  6558  0EAA  1303               	bcf	3,6	;RP1=0, select bank1
  6559  0EAB  080F               	movf	15,w	;volatile
  6560  0EAC  398F               	andlw	-113
  6561  0EAD  3860               	iorlw	96
  6562  0EAE  008F               	movwf	15	;volatile
  6563                           
  6564                           ;main_Master.c: 369:             break;
  6565  0EAF  0008               	return
  6566  0EB0                     l2844:	
  6567                           
  6568                           ;main_Master.c: 371:             OSCCONbits.IRCF = 0b101;
  6569  0EB0  1683               	bsf	3,5	;RP0=1, select bank1
  6570  0EB1  1303               	bcf	3,6	;RP1=0, select bank1
  6571  0EB2  080F               	movf	15,w	;volatile
  6572  0EB3  398F               	andlw	-113
  6573  0EB4  3850               	iorlw	80
  6574  0EB5  008F               	movwf	15	;volatile
  6575                           
  6576                           ;main_Master.c: 372:             break;
  6577  0EB6  0008               	return
  6578  0EB7                     l2846:	
  6579                           
  6580                           ;main_Master.c: 374:             OSCCONbits.IRCF = 0b100;
  6581  0EB7  1683               	bsf	3,5	;RP0=1, select bank1
  6582  0EB8  1303               	bcf	3,6	;RP1=0, select bank1
  6583  0EB9  080F               	movf	15,w	;volatile
  6584  0EBA  398F               	andlw	-113
  6585  0EBB  3840               	iorlw	64
  6586  0EBC  008F               	movwf	15	;volatile
  6587                           
  6588                           ;main_Master.c: 375:             break;
  6589  0EBD  0008               	return
  6590  0EBE                     l2848:	
  6591                           
  6592                           ;main_Master.c: 377:             OSCCONbits.IRCF = 0b011;
  6593  0EBE  1683               	bsf	3,5	;RP0=1, select bank1
  6594  0EBF  1303               	bcf	3,6	;RP1=0, select bank1
  6595  0EC0  080F               	movf	15,w	;volatile
  6596  0EC1  398F               	andlw	-113
  6597  0EC2  3830               	iorlw	48
  6598  0EC3  008F               	movwf	15	;volatile
  6599                           
  6600                           ;main_Master.c: 378:             break;
  6601  0EC4  0008               	return
  6602  0EC5                     l2850:	
  6603                           
  6604                           ;main_Master.c: 380:             OSCCONbits.IRCF = 0b010;
  6605  0EC5  1683               	bsf	3,5	;RP0=1, select bank1
  6606  0EC6  1303               	bcf	3,6	;RP1=0, select bank1
  6607  0EC7  080F               	movf	15,w	;volatile
  6608  0EC8  398F               	andlw	-113
  6609  0EC9  3820               	iorlw	32
  6610  0ECA  008F               	movwf	15	;volatile
  6611                           
  6612                           ;main_Master.c: 381:             break;
  6613  0ECB  0008               	return
  6614  0ECC                     l2852:	
  6615                           
  6616                           ;main_Master.c: 383:             OSCCONbits.IRCF = 0b001;
  6617  0ECC  1683               	bsf	3,5	;RP0=1, select bank1
  6618  0ECD  1303               	bcf	3,6	;RP1=0, select bank1
  6619  0ECE  080F               	movf	15,w	;volatile
  6620  0ECF  398F               	andlw	-113
  6621  0ED0  3810               	iorlw	16
  6622  0ED1  008F               	movwf	15	;volatile
  6623                           
  6624                           ;main_Master.c: 384:             break;
  6625  0ED2  0008               	return
  6626  0ED3                     l2854:	
  6627                           
  6628                           ;main_Master.c: 386:             OSCCONbits.IRCF = 0b000;
  6629  0ED3  308F               	movlw	-113
  6630  0ED4  1683               	bsf	3,5	;RP0=1, select bank1
  6631  0ED5  1303               	bcf	3,6	;RP1=0, select bank1
  6632  0ED6  058F               	andwf	15,f	;volatile
  6633                           
  6634                           ;main_Master.c: 387:             break;
  6635  0ED7  0008               	return
  6636  0ED8                     l2856:	
  6637                           
  6638                           ;main_Master.c: 389:             OSCCONbits.IRCF = 0b110;
  6639  0ED8  1683               	bsf	3,5	;RP0=1, select bank1
  6640  0ED9  1303               	bcf	3,6	;RP1=0, select bank1
  6641  0EDA  080F               	movf	15,w	;volatile
  6642  0EDB  398F               	andlw	-113
  6643  0EDC  3860               	iorlw	96
  6644  0EDD  008F               	movwf	15	;volatile
  6645                           
  6646                           ;main_Master.c: 390:     }
  6647  0EDE  0008               	return
  6648  0EDF                     l2858:	
  6649                           
  6650                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 9 sub-sw
      +                          itches
  6651                           ; Switch size 1, requested type "simple"
  6652                           ; Number of cases is 1, Range of values is 0 to 0
  6653                           ; switch strategies available:
  6654                           ; Name         Instructions Cycles
  6655                           ; simple_byte            4     3 (average)
  6656                           ; direct_byte           11     8 (fixed)
  6657                           ; jumptable            260     6 (fixed)
  6658                           ;	Chosen strategy is simple_byte
  6659  0EDF  0875               	movf	OSC_config@frecuencia+3,w
  6660  0EE0  3A00               	xorlw	0	; case 0
  6661  0EE1  1903               	skipnz
  6662  0EE2  2F34               	goto	l5088
  6663  0EE3  2ED8               	goto	l2856
  6664  0EE4                     l5072:	
  6665                           
  6666                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6667                           ; Switch size 1, requested type "simple"
  6668                           ; Number of cases is 1, Range of values is 125 to 125
  6669                           ; switch strategies available:
  6670                           ; Name         Instructions Cycles
  6671                           ; simple_byte            4     3 (average)
  6672                           ; direct_byte           14    11 (fixed)
  6673                           ; jumptable            263     9 (fixed)
  6674                           ;	Chosen strategy is simple_byte
  6675  0EE4  0873               	movf	OSC_config@frecuencia+1,w
  6676  0EE5  3A7D               	xorlw	125	; case 125
  6677  0EE6  1903               	skipnz
  6678  0EE7  2EE9               	goto	l5090
  6679  0EE8  2ED8               	goto	l2856
  6680  0EE9                     l5090:	
  6681                           
  6682                           ; Switch size 1, requested type "simple"
  6683                           ; Number of cases is 1, Range of values is 0 to 0
  6684                           ; switch strategies available:
  6685                           ; Name         Instructions Cycles
  6686                           ; simple_byte            4     3 (average)
  6687                           ; direct_byte           11     8 (fixed)
  6688                           ; jumptable            260     6 (fixed)
  6689                           ;	Chosen strategy is simple_byte
  6690  0EE9  0872               	movf	OSC_config@frecuencia,w
  6691  0EEA  3A00               	xorlw	0	; case 0
  6692  0EEB  1903               	skipnz
  6693  0EEC  2ED3               	goto	l2854
  6694  0EED  2ED8               	goto	l2856
  6695  0EEE                     l5074:	
  6696                           
  6697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6698                           ; Switch size 1, requested type "simple"
  6699                           ; Number of cases is 1, Range of values is 232 to 232
  6700                           ; switch strategies available:
  6701                           ; Name         Instructions Cycles
  6702                           ; simple_byte            4     3 (average)
  6703                           ; direct_byte           14    11 (fixed)
  6704                           ; jumptable            263     9 (fixed)
  6705                           ;	Chosen strategy is simple_byte
  6706  0EEE  0873               	movf	OSC_config@frecuencia+1,w
  6707  0EEF  3AE8               	xorlw	232	; case 232
  6708  0EF0  1903               	skipnz
  6709  0EF1  2EF3               	goto	l5092
  6710  0EF2  2ED8               	goto	l2856
  6711  0EF3                     l5092:	
  6712                           
  6713                           ; Switch size 1, requested type "simple"
  6714                           ; Number of cases is 1, Range of values is 72 to 72
  6715                           ; switch strategies available:
  6716                           ; Name         Instructions Cycles
  6717                           ; simple_byte            4     3 (average)
  6718                           ; direct_byte           14    11 (fixed)
  6719                           ; jumptable            263     9 (fixed)
  6720                           ;	Chosen strategy is simple_byte
  6721  0EF3  0872               	movf	OSC_config@frecuencia,w
  6722  0EF4  3A48               	xorlw	72	; case 72
  6723  0EF5  1903               	skipnz
  6724  0EF6  2ECC               	goto	l2852
  6725  0EF7  2ED8               	goto	l2856
  6726  0EF8                     l5076:	
  6727                           
  6728                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6729                           ; Switch size 1, requested type "simple"
  6730                           ; Number of cases is 1, Range of values is 208 to 208
  6731                           ; switch strategies available:
  6732                           ; Name         Instructions Cycles
  6733                           ; simple_byte            4     3 (average)
  6734                           ; direct_byte           14    11 (fixed)
  6735                           ; jumptable            263     9 (fixed)
  6736                           ;	Chosen strategy is simple_byte
  6737  0EF8  0873               	movf	OSC_config@frecuencia+1,w
  6738  0EF9  3AD0               	xorlw	208	; case 208
  6739  0EFA  1903               	skipnz
  6740  0EFB  2EFD               	goto	l5094
  6741  0EFC  2ED8               	goto	l2856
  6742  0EFD                     l5094:	
  6743                           
  6744                           ; Switch size 1, requested type "simple"
  6745                           ; Number of cases is 1, Range of values is 144 to 144
  6746                           ; switch strategies available:
  6747                           ; Name         Instructions Cycles
  6748                           ; simple_byte            4     3 (average)
  6749                           ; direct_byte           14    11 (fixed)
  6750                           ; jumptable            263     9 (fixed)
  6751                           ;	Chosen strategy is simple_byte
  6752  0EFD  0872               	movf	OSC_config@frecuencia,w
  6753  0EFE  3A90               	xorlw	144	; case 144
  6754  0EFF  1903               	skipnz
  6755  0F00  2EC5               	goto	l2850
  6756  0F01  2ED8               	goto	l2856
  6757  0F02                     l5078:	
  6758                           
  6759                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6760                           ; Switch size 1, requested type "simple"
  6761                           ; Number of cases is 1, Range of values is 161 to 161
  6762                           ; switch strategies available:
  6763                           ; Name         Instructions Cycles
  6764                           ; simple_byte            4     3 (average)
  6765                           ; direct_byte           14    11 (fixed)
  6766                           ; jumptable            263     9 (fixed)
  6767                           ;	Chosen strategy is simple_byte
  6768  0F02  0873               	movf	OSC_config@frecuencia+1,w
  6769  0F03  3AA1               	xorlw	161	; case 161
  6770  0F04  1903               	skipnz
  6771  0F05  2F07               	goto	l5096
  6772  0F06  2ED8               	goto	l2856
  6773  0F07                     l5096:	
  6774                           
  6775                           ; Switch size 1, requested type "simple"
  6776                           ; Number of cases is 1, Range of values is 32 to 32
  6777                           ; switch strategies available:
  6778                           ; Name         Instructions Cycles
  6779                           ; simple_byte            4     3 (average)
  6780                           ; direct_byte           14    11 (fixed)
  6781                           ; jumptable            263     9 (fixed)
  6782                           ;	Chosen strategy is simple_byte
  6783  0F07  0872               	movf	OSC_config@frecuencia,w
  6784  0F08  3A20               	xorlw	32	; case 32
  6785  0F09  1903               	skipnz
  6786  0F0A  2EBE               	goto	l2848
  6787  0F0B  2ED8               	goto	l2856
  6788  0F0C                     l5080:	
  6789                           
  6790                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6791                           ; Switch size 1, requested type "simple"
  6792                           ; Number of cases is 1, Range of values is 66 to 66
  6793                           ; switch strategies available:
  6794                           ; Name         Instructions Cycles
  6795                           ; simple_byte            4     3 (average)
  6796                           ; direct_byte           14    11 (fixed)
  6797                           ; jumptable            263     9 (fixed)
  6798                           ;	Chosen strategy is simple_byte
  6799  0F0C  0873               	movf	OSC_config@frecuencia+1,w
  6800  0F0D  3A42               	xorlw	66	; case 66
  6801  0F0E  1903               	skipnz
  6802  0F0F  2F11               	goto	l5098
  6803  0F10  2ED8               	goto	l2856
  6804  0F11                     l5098:	
  6805                           
  6806                           ; Switch size 1, requested type "simple"
  6807                           ; Number of cases is 1, Range of values is 64 to 64
  6808                           ; switch strategies available:
  6809                           ; Name         Instructions Cycles
  6810                           ; simple_byte            4     3 (average)
  6811                           ; direct_byte           14    11 (fixed)
  6812                           ; jumptable            263     9 (fixed)
  6813                           ;	Chosen strategy is simple_byte
  6814  0F11  0872               	movf	OSC_config@frecuencia,w
  6815  0F12  3A40               	xorlw	64	; case 64
  6816  0F13  1903               	skipnz
  6817  0F14  2EB7               	goto	l2846
  6818  0F15  2ED8               	goto	l2856
  6819  0F16                     l5082:	
  6820                           
  6821                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6822                           ; Switch size 1, requested type "simple"
  6823                           ; Number of cases is 1, Range of values is 132 to 132
  6824                           ; switch strategies available:
  6825                           ; Name         Instructions Cycles
  6826                           ; simple_byte            4     3 (average)
  6827                           ; direct_byte           14    11 (fixed)
  6828                           ; jumptable            263     9 (fixed)
  6829                           ;	Chosen strategy is simple_byte
  6830  0F16  0873               	movf	OSC_config@frecuencia+1,w
  6831  0F17  3A84               	xorlw	132	; case 132
  6832  0F18  1903               	skipnz
  6833  0F19  2F1B               	goto	l5100
  6834  0F1A  2ED8               	goto	l2856
  6835  0F1B                     l5100:	
  6836                           
  6837                           ; Switch size 1, requested type "simple"
  6838                           ; Number of cases is 1, Range of values is 128 to 128
  6839                           ; switch strategies available:
  6840                           ; Name         Instructions Cycles
  6841                           ; simple_byte            4     3 (average)
  6842                           ; direct_byte           14    11 (fixed)
  6843                           ; jumptable            263     9 (fixed)
  6844                           ;	Chosen strategy is simple_byte
  6845  0F1B  0872               	movf	OSC_config@frecuencia,w
  6846  0F1C  3A80               	xorlw	128	; case 128
  6847  0F1D  1903               	skipnz
  6848  0F1E  2EB0               	goto	l2844
  6849  0F1F  2ED8               	goto	l2856
  6850  0F20                     l5084:	
  6851                           
  6852                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6853                           ; Switch size 1, requested type "simple"
  6854                           ; Number of cases is 1, Range of values is 9 to 9
  6855                           ; switch strategies available:
  6856                           ; Name         Instructions Cycles
  6857                           ; simple_byte            4     3 (average)
  6858                           ; direct_byte           14    11 (fixed)
  6859                           ; jumptable            263     9 (fixed)
  6860                           ;	Chosen strategy is simple_byte
  6861  0F20  0873               	movf	OSC_config@frecuencia+1,w
  6862  0F21  3A09               	xorlw	9	; case 9
  6863  0F22  1903               	skipnz
  6864  0F23  2F25               	goto	l5102
  6865  0F24  2ED8               	goto	l2856
  6866  0F25                     l5102:	
  6867                           
  6868                           ; Switch size 1, requested type "simple"
  6869                           ; Number of cases is 1, Range of values is 0 to 0
  6870                           ; switch strategies available:
  6871                           ; Name         Instructions Cycles
  6872                           ; simple_byte            4     3 (average)
  6873                           ; direct_byte           11     8 (fixed)
  6874                           ; jumptable            260     6 (fixed)
  6875                           ;	Chosen strategy is simple_byte
  6876  0F25  0872               	movf	OSC_config@frecuencia,w
  6877  0F26  3A00               	xorlw	0	; case 0
  6878  0F27  1903               	skipnz
  6879  0F28  2EA9               	goto	l2842
  6880  0F29  2ED8               	goto	l2856
  6881  0F2A                     l5086:	
  6882                           
  6883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6884                           ; Switch size 1, requested type "simple"
  6885                           ; Number of cases is 1, Range of values is 18 to 18
  6886                           ; switch strategies available:
  6887                           ; Name         Instructions Cycles
  6888                           ; simple_byte            4     3 (average)
  6889                           ; direct_byte           14    11 (fixed)
  6890                           ; jumptable            263     9 (fixed)
  6891                           ;	Chosen strategy is simple_byte
  6892  0F2A  0873               	movf	OSC_config@frecuencia+1,w
  6893  0F2B  3A12               	xorlw	18	; case 18
  6894  0F2C  1903               	skipnz
  6895  0F2D  2F2F               	goto	l5104
  6896  0F2E  2ED8               	goto	l2856
  6897  0F2F                     l5104:	
  6898                           
  6899                           ; Switch size 1, requested type "simple"
  6900                           ; Number of cases is 1, Range of values is 0 to 0
  6901                           ; switch strategies available:
  6902                           ; Name         Instructions Cycles
  6903                           ; simple_byte            4     3 (average)
  6904                           ; direct_byte           11     8 (fixed)
  6905                           ; jumptable            260     6 (fixed)
  6906                           ;	Chosen strategy is simple_byte
  6907  0F2F  0872               	movf	OSC_config@frecuencia,w
  6908  0F30  3A00               	xorlw	0	; case 0
  6909  0F31  1903               	skipnz
  6910  0F32  2EA4               	goto	l2840
  6911  0F33  2ED8               	goto	l2856
  6912  0F34                     l5088:	
  6913                           
  6914                           ; Switch size 1, requested type "simple"
  6915                           ; Number of cases is 8, Range of values is 0 to 122
  6916                           ; switch strategies available:
  6917                           ; Name         Instructions Cycles
  6918                           ; simple_byte           25    13 (average)
  6919                           ; jumptable            260     6 (fixed)
  6920                           ;	Chosen strategy is simple_byte
  6921  0F34  0874               	movf	OSC_config@frecuencia+2,w
  6922  0F35  3A00               	xorlw	0	; case 0
  6923  0F36  1903               	skipnz
  6924  0F37  2EE4               	goto	l5072
  6925  0F38  3A01               	xorlw	1	; case 1
  6926  0F39  1903               	skipnz
  6927  0F3A  2EEE               	goto	l5074
  6928  0F3B  3A02               	xorlw	2	; case 3
  6929  0F3C  1903               	skipnz
  6930  0F3D  2EF8               	goto	l5076
  6931  0F3E  3A04               	xorlw	4	; case 7
  6932  0F3F  1903               	skipnz
  6933  0F40  2F02               	goto	l5078
  6934  0F41  3A08               	xorlw	8	; case 15
  6935  0F42  1903               	skipnz
  6936  0F43  2F0C               	goto	l5080
  6937  0F44  3A11               	xorlw	17	; case 30
  6938  0F45  1903               	skipnz
  6939  0F46  2F16               	goto	l5082
  6940  0F47  3A23               	xorlw	35	; case 61
  6941  0F48  1903               	skipnz
  6942  0F49  2F20               	goto	l5084
  6943  0F4A  3A47               	xorlw	71	; case 122
  6944  0F4B  1903               	skipnz
  6945  0F4C  2F2A               	goto	l5086
  6946  0F4D  2ED8               	goto	l2856
  6947  0F4E  0008               	return
  6948  0F4F                     __end_of_OSC_config:	
  6949                           
  6950                           	psect	text30
  6951  0B8F                     __ptext30:	
  6952 ;; *************** function _LCD_init *****************
  6953 ;; Defined at:
  6954 ;;		line 44 in file "LCD_8bits.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;		None
  6957 ;; Auto vars:     Size  Location     Type
  6958 ;;		None
  6959 ;; Return value:  Size  Location     Type
  6960 ;;                  1    wreg      void 
  6961 ;; Registers used:
  6962 ;;		wreg, status,2, status,0, pclath, cstack
  6963 ;; Tracked objects:
  6964 ;;		On entry : 0/0
  6965 ;;		On exit  : 0/0
  6966 ;;		Unchanged: 0/0
  6967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6968 ;;      Params:         0       0       0       0       0
  6969 ;;      Locals:         0       0       0       0       0
  6970 ;;      Temps:          2       0       0       0       0
  6971 ;;      Totals:         2       0       0       0       0
  6972 ;;Total ram usage:        2 bytes
  6973 ;; Hardware stack levels used:    1
  6974 ;; Hardware stack levels required when called:    2
  6975 ;; This function calls:
  6976 ;;		_LCD_Cmd
  6977 ;; This function is called by:
  6978 ;;		_SetUp
  6979 ;; This function uses a non-reentrant model
  6980 ;;
  6981                           
  6982                           
  6983                           ;psect for function _LCD_init
  6984  0B8F                     _LCD_init:	
  6985                           
  6986                           ;LCD_8bits.c: 45:     _delay((unsigned long)((20)*(4000000/4000.0)));
  6987                           
  6988                           ;incstack = 0
  6989                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  6990  0B8F  301A               	movlw	26
  6991  0B90  00F6               	movwf	??_LCD_init+1
  6992  0B91  30F8               	movlw	248
  6993  0B92  00F5               	movwf	??_LCD_init
  6994  0B93                     u2047:	
  6995  0B93  0BF5               	decfsz	??_LCD_init,f
  6996  0B94  2B93               	goto	u2047
  6997  0B95  0BF6               	decfsz	??_LCD_init+1,f
  6998  0B96  2B93               	goto	u2047
  6999  0B97  0000               	nop
  7000                           
  7001                           ;LCD_8bits.c: 46:     LCD_Cmd(0x30);
  7002  0B98  3030               	movlw	48
  7003  0B99  120A  158A  2224  120A  158A  	fcall	_LCD_Cmd
  7004                           
  7005                           ;LCD_8bits.c: 47:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7006  0B9E  3007               	movlw	7
  7007  0B9F  00F6               	movwf	??_LCD_init+1
  7008  0BA0  307D               	movlw	125
  7009  0BA1  00F5               	movwf	??_LCD_init
  7010  0BA2                     u2057:	
  7011  0BA2  0BF5               	decfsz	??_LCD_init,f
  7012  0BA3  2BA2               	goto	u2057
  7013  0BA4  0BF6               	decfsz	??_LCD_init+1,f
  7014  0BA5  2BA2               	goto	u2057
  7015                           
  7016                           ;LCD_8bits.c: 48:     LCD_Cmd(0x30);
  7017  0BA6  3030               	movlw	48
  7018  0BA7  120A  158A  2224  120A  158A  	fcall	_LCD_Cmd
  7019                           
  7020                           ;LCD_8bits.c: 49:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7021  0BAC  3021               	movlw	33
  7022  0BAD  00F5               	movwf	??_LCD_init
  7023  0BAE                     u2067:	
  7024  0BAE  0BF5               	decfsz	??_LCD_init,f
  7025  0BAF  2BAE               	goto	u2067
  7026                           
  7027                           ;LCD_8bits.c: 50:     LCD_Cmd(0x30);
  7028  0BB0  3030               	movlw	48
  7029  0BB1  120A  158A  2224  120A  158A  	fcall	_LCD_Cmd
  7030                           
  7031                           ;LCD_8bits.c: 51:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7032  0BB6  3021               	movlw	33
  7033  0BB7  00F5               	movwf	??_LCD_init
  7034  0BB8                     u2077:	
  7035  0BB8  0BF5               	decfsz	??_LCD_init,f
  7036  0BB9  2BB8               	goto	u2077
  7037                           
  7038                           ;LCD_8bits.c: 52:     LCD_Cmd(0x38);
  7039  0BBA  3038               	movlw	56
  7040  0BBB  120A  158A  2224  120A  158A  	fcall	_LCD_Cmd
  7041                           
  7042                           ;LCD_8bits.c: 53:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7043  0BC0  3011               	movlw	17
  7044  0BC1  00F5               	movwf	??_LCD_init
  7045  0BC2                     u2087:	
  7046  0BC2  0BF5               	decfsz	??_LCD_init,f
  7047  0BC3  2BC2               	goto	u2087
  7048  0BC4  0000               	nop
  7049                           
  7050                           ;LCD_8bits.c: 54:     LCD_Cmd(0x08);
  7051  0BC5  3008               	movlw	8
  7052  0BC6  120A  158A  2224  120A  158A  	fcall	_LCD_Cmd
  7053                           
  7054                           ;LCD_8bits.c: 55:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7055  0BCB  3011               	movlw	17
  7056  0BCC  00F5               	movwf	??_LCD_init
  7057  0BCD                     u2097:	
  7058  0BCD  0BF5               	decfsz	??_LCD_init,f
  7059  0BCE  2BCD               	goto	u2097
  7060  0BCF  0000               	nop
  7061                           
  7062                           ;LCD_8bits.c: 56:     LCD_Cmd(0x01);
  7063  0BD0  3001               	movlw	1
  7064  0BD1  120A  158A  2224  120A  158A  	fcall	_LCD_Cmd
  7065                           
  7066                           ;LCD_8bits.c: 57:     _delay((unsigned long)((3)*(4000000/4000.0)));
  7067  0BD6  3004               	movlw	4
  7068  0BD7  00F6               	movwf	??_LCD_init+1
  7069  0BD8  30E4               	movlw	228
  7070  0BD9  00F5               	movwf	??_LCD_init
  7071  0BDA                     u2107:	
  7072  0BDA  0BF5               	decfsz	??_LCD_init,f
  7073  0BDB  2BDA               	goto	u2107
  7074  0BDC  0BF6               	decfsz	??_LCD_init+1,f
  7075  0BDD  2BDA               	goto	u2107
  7076  0BDE  0000               	nop
  7077                           
  7078                           ;LCD_8bits.c: 58:     LCD_Cmd(0x06);
  7079  0BDF  3006               	movlw	6
  7080  0BE0  120A  158A  2224  120A  158A  	fcall	_LCD_Cmd
  7081                           
  7082                           ;LCD_8bits.c: 59:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7083  0BE5  3011               	movlw	17
  7084  0BE6  00F5               	movwf	??_LCD_init
  7085  0BE7                     u2117:	
  7086  0BE7  0BF5               	decfsz	??_LCD_init,f
  7087  0BE8  2BE7               	goto	u2117
  7088  0BE9  0000               	nop
  7089                           
  7090                           ;LCD_8bits.c: 60:     LCD_Cmd(0x0C);
  7091  0BEA  300C               	movlw	12
  7092  0BEB  120A  158A  2224  120A  158A  	fcall	_LCD_Cmd
  7093                           
  7094                           ;LCD_8bits.c: 61:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  7095  0BF0  3011               	movlw	17
  7096  0BF1  00F5               	movwf	??_LCD_init
  7097  0BF2                     u2127:	
  7098  0BF2  0BF5               	decfsz	??_LCD_init,f
  7099  0BF3  2BF2               	goto	u2127
  7100  0BF4  0000               	nop
  7101  0BF5  0008               	return
  7102  0BF6                     __end_of_LCD_init:	
  7103                           
  7104                           	psect	text31
  7105  08EC                     __ptext31:	
  7106 ;; *************** function _LCD_clear *****************
  7107 ;; Defined at:
  7108 ;;		line 32 in file "LCD_8bits.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;		None
  7111 ;; Auto vars:     Size  Location     Type
  7112 ;;		None
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  1    wreg      void 
  7115 ;; Registers used:
  7116 ;;		wreg, status,2, status,0, pclath, cstack
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7122 ;;      Params:         0       0       0       0       0
  7123 ;;      Locals:         0       0       0       0       0
  7124 ;;      Temps:          2       0       0       0       0
  7125 ;;      Totals:         2       0       0       0       0
  7126 ;;Total ram usage:        2 bytes
  7127 ;; Hardware stack levels used:    1
  7128 ;; Hardware stack levels required when called:    2
  7129 ;; This function calls:
  7130 ;;		_LCD_Cmd
  7131 ;; This function is called by:
  7132 ;;		_SetUp
  7133 ;;		_mostrarLCD
  7134 ;;		_pressBoton1
  7135 ;;		_pressBoton2
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           
  7139                           
  7140                           ;psect for function _LCD_clear
  7141  08EC                     _LCD_clear:	
  7142                           
  7143                           ;LCD_8bits.c: 33:     LCD_Cmd(0x00);
  7144                           
  7145                           ;incstack = 0
  7146                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  7147  08EC  3000               	movlw	0
  7148  08ED  120A  158A  2224  120A  158A  	fcall	_LCD_Cmd
  7149                           
  7150                           ;LCD_8bits.c: 34:     LCD_Cmd(0x01);
  7151  08F2  3001               	movlw	1
  7152  08F3  120A  158A  2224  120A  158A  	fcall	_LCD_Cmd
  7153                           
  7154                           ;LCD_8bits.c: 35:     _delay((unsigned long)((4)*(4000000/4000.0)));
  7155  08F8  3006               	movlw	6
  7156  08F9  00F6               	movwf	??_LCD_clear+1
  7157  08FA  3030               	movlw	48
  7158  08FB  00F5               	movwf	??_LCD_clear
  7159  08FC                     u2137:	
  7160  08FC  0BF5               	decfsz	??_LCD_clear,f
  7161  08FD  28FC               	goto	u2137
  7162  08FE  0BF6               	decfsz	??_LCD_clear+1,f
  7163  08FF  28FC               	goto	u2137
  7164  0900  0000               	nop
  7165  0901  0008               	return
  7166  0902                     __end_of_LCD_clear:	
  7167                           
  7168                           	psect	text32
  7169  09A0                     __ptext32:	
  7170 ;; *************** function _LCD_Create_Char *****************
  7171 ;; Defined at:
  7172 ;;		line 116 in file "LCD_8bits.c"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;  charnum         1    wreg     unsigned char 
  7175 ;;  chardata        1    5[COMMON] PTR const unsigned char 
  7176 ;;		 -> arrowr_vacio(8), gota(8), termometro(8), arrowr(8), 
  7177 ;;		 -> atilde(8), 
  7178 ;; Auto vars:     Size  Location     Type
  7179 ;;  charnum         1    7[COMMON] unsigned char 
  7180 ;;  n               1    8[COMMON] unsigned char 
  7181 ;; Return value:  Size  Location     Type
  7182 ;;                  1    wreg      void 
  7183 ;; Registers used:
  7184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7185 ;; Tracked objects:
  7186 ;;		On entry : 0/0
  7187 ;;		On exit  : 0/0
  7188 ;;		Unchanged: 0/0
  7189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7190 ;;      Params:         1       0       0       0       0
  7191 ;;      Locals:         2       0       0       0       0
  7192 ;;      Temps:          1       0       0       0       0
  7193 ;;      Totals:         4       0       0       0       0
  7194 ;;Total ram usage:        4 bytes
  7195 ;; Hardware stack levels used:    1
  7196 ;; Hardware stack levels required when called:    2
  7197 ;; This function calls:
  7198 ;;		_LCD_Cmd
  7199 ;;		_LCD_Write_Character
  7200 ;; This function is called by:
  7201 ;;		_SetUp
  7202 ;; This function uses a non-reentrant model
  7203 ;;
  7204                           
  7205                           
  7206                           ;psect for function _LCD_Create_Char
  7207  09A0                     _LCD_Create_Char:	
  7208                           
  7209                           ;incstack = 0
  7210                           ; Regs used in _LCD_Create_Char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7211                           ;LCD_Create_Char@charnum stored from wreg
  7212  09A0  00F7               	movwf	LCD_Create_Char@charnum
  7213                           
  7214                           ;LCD_8bits.c: 117:  uint8_t n;;LCD_8bits.c: 118:  charnum &= 0x07;
  7215  09A1  3007               	movlw	7
  7216  09A2  00F6               	movwf	??_LCD_Create_Char
  7217  09A3  0876               	movf	??_LCD_Create_Char,w
  7218  09A4  05F7               	andwf	LCD_Create_Char@charnum,f
  7219                           
  7220                           ;LCD_8bits.c: 119:  LCD_Cmd(0x40 | (charnum << 3));
  7221  09A5  0877               	movf	LCD_Create_Char@charnum,w
  7222  09A6  00F6               	movwf	??_LCD_Create_Char
  7223  09A7  3002               	movlw	2
  7224  09A8                     u1135:	
  7225  09A8  1003               	clrc
  7226  09A9  0DF6               	rlf	??_LCD_Create_Char,f
  7227  09AA  3EFF               	addlw	-1
  7228  09AB  1D03               	skipz
  7229  09AC  29A8               	goto	u1135
  7230  09AD  1003               	clrc
  7231  09AE  0D76               	rlf	??_LCD_Create_Char,w
  7232  09AF  3840               	iorlw	64
  7233  09B0  120A  158A  2224  120A  158A  	fcall	_LCD_Cmd
  7234                           
  7235                           ;LCD_8bits.c: 120:  for (n = 0; n < 8; n++)
  7236  09B5  01F8               	clrf	LCD_Create_Char@n
  7237  09B6                     l2962:	
  7238                           
  7239                           ;LCD_8bits.c: 121:   LCD_Write_Character(chardata[n]);
  7240  09B6  0878               	movf	LCD_Create_Char@n,w
  7241  09B7  0775               	addwf	LCD_Create_Char@chardata,w
  7242  09B8  0084               	movwf	4
  7243  09B9  120A  158A  2000  120A  158A  	fcall	stringdir
  7244  09BE  160A  118A  27CF  120A  158A  	fcall	_LCD_Write_Character
  7245  09C3  3001               	movlw	1
  7246  09C4  00F6               	movwf	??_LCD_Create_Char
  7247  09C5  0876               	movf	??_LCD_Create_Char,w
  7248  09C6  07F8               	addwf	LCD_Create_Char@n,f
  7249  09C7  3008               	movlw	8
  7250  09C8  0278               	subwf	LCD_Create_Char@n,w
  7251  09C9  1803               	btfsc	3,0
  7252  09CA  0008               	return
  7253  09CB  29B6               	goto	l2962
  7254  09CC                     __end_of_LCD_Create_Char:	
  7255                           
  7256                           	psect	text33
  7257  17CF                     __ptext33:	
  7258 ;; *************** function _LCD_Write_Character *****************
  7259 ;; Defined at:
  7260 ;;		line 64 in file "LCD_8bits.c"
  7261 ;; Parameters:    Size  Location     Type
  7262 ;;  caracter        1    wreg     unsigned char 
  7263 ;; Auto vars:     Size  Location     Type
  7264 ;;  caracter        1    3[COMMON] unsigned char 
  7265 ;; Return value:  Size  Location     Type
  7266 ;;                  1    wreg      void 
  7267 ;; Registers used:
  7268 ;;		wreg
  7269 ;; Tracked objects:
  7270 ;;		On entry : 0/0
  7271 ;;		On exit  : 0/0
  7272 ;;		Unchanged: 0/0
  7273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7274 ;;      Params:         0       0       0       0       0
  7275 ;;      Locals:         1       0       0       0       0
  7276 ;;      Temps:          1       0       0       0       0
  7277 ;;      Totals:         2       0       0       0       0
  7278 ;;Total ram usage:        2 bytes
  7279 ;; Hardware stack levels used:    1
  7280 ;; Hardware stack levels required when called:    1
  7281 ;; This function calls:
  7282 ;;		Nothing
  7283 ;; This function is called by:
  7284 ;;		_display_Uhrzeit
  7285 ;;		_display_Datum
  7286 ;;		_mostrarLCD
  7287 ;;		_pressBoton2
  7288 ;;		_LCD_Write_String
  7289 ;;		_LCD_Create_Char
  7290 ;; This function uses a non-reentrant model
  7291 ;;
  7292                           
  7293                           
  7294                           ;psect for function _LCD_Write_Character
  7295  17CF                     _LCD_Write_Character:	
  7296                           
  7297                           ;incstack = 0
  7298                           ; Regs used in _LCD_Write_Character: [wreg]
  7299                           ;LCD_Write_Character@caracter stored from wreg
  7300  17CF  00F3               	movwf	LCD_Write_Character@caracter
  7301                           
  7302                           ;LCD_8bits.c: 65:     PORTAbits.RA0 = 1;
  7303  17D0  1283               	bcf	3,5	;RP0=0, select bank0
  7304  17D1  1303               	bcf	3,6	;RP1=0, select bank0
  7305  17D2  1405               	bsf	5,0	;volatile
  7306                           
  7307                           ;LCD_8bits.c: 67:     PORTD = caracter;
  7308  17D3  0873               	movf	LCD_Write_Character@caracter,w
  7309  17D4  0088               	movwf	8	;volatile
  7310                           
  7311                           ;LCD_8bits.c: 68:     PORTAbits.RA1 = 1;
  7312  17D5  1485               	bsf	5,1	;volatile
  7313                           
  7314                           ;LCD_8bits.c: 69:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  7315  17D6  300D               	movlw	13
  7316  17D7  00F2               	movwf	??_LCD_Write_Character
  7317  17D8                     u2147:	
  7318  17D8  0BF2               	decfsz	??_LCD_Write_Character,f
  7319  17D9  2FD8               	goto	u2147
  7320                           
  7321                           ;LCD_8bits.c: 70:     PORTAbits.RA1 = 0;
  7322  17DA  1283               	bcf	3,5	;RP0=0, select bank0
  7323  17DB  1303               	bcf	3,6	;RP1=0, select bank0
  7324  17DC  1085               	bcf	5,1	;volatile
  7325  17DD  0008               	return
  7326  17DE                     __end_of_LCD_Write_Character:	
  7327                           
  7328                           	psect	text34
  7329  0A24                     __ptext34:	
  7330 ;; *************** function _LCD_Cmd *****************
  7331 ;; Defined at:
  7332 ;;		line 21 in file "LCD_8bits.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;  comando         1    wreg     unsigned char 
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;  comando         1    4[COMMON] unsigned char 
  7337 ;; Return value:  Size  Location     Type
  7338 ;;                  1    wreg      void 
  7339 ;; Registers used:
  7340 ;;		wreg
  7341 ;; Tracked objects:
  7342 ;;		On entry : 0/0
  7343 ;;		On exit  : 0/0
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7346 ;;      Params:         0       0       0       0       0
  7347 ;;      Locals:         1       0       0       0       0
  7348 ;;      Temps:          2       0       0       0       0
  7349 ;;      Totals:         3       0       0       0       0
  7350 ;;Total ram usage:        3 bytes
  7351 ;; Hardware stack levels used:    1
  7352 ;; Hardware stack levels required when called:    1
  7353 ;; This function calls:
  7354 ;;		Nothing
  7355 ;; This function is called by:
  7356 ;;		_LCD_clear
  7357 ;;		_LCD_init
  7358 ;;		_LCD_Set_Cursor
  7359 ;;		_LCD_Create_Char
  7360 ;;		_LCD_home
  7361 ;;		_LCD_Shift_links
  7362 ;;		_LCD_Shift_rechts
  7363 ;;		_LCD_Cursor_rechts
  7364 ;;		_LCD_Cursor_links
  7365 ;; This function uses a non-reentrant model
  7366 ;;
  7367                           
  7368                           
  7369                           ;psect for function _LCD_Cmd
  7370  0A24                     _LCD_Cmd:	
  7371                           
  7372                           ;incstack = 0
  7373                           ; Regs used in _LCD_Cmd: [wreg]
  7374                           ;LCD_Cmd@comando stored from wreg
  7375  0A24  00F4               	movwf	LCD_Cmd@comando
  7376                           
  7377                           ;LCD_8bits.c: 22:     PORTAbits.RA0 = 0;
  7378  0A25  1283               	bcf	3,5	;RP0=0, select bank0
  7379  0A26  1303               	bcf	3,6	;RP1=0, select bank0
  7380  0A27  1005               	bcf	5,0	;volatile
  7381                           
  7382                           ;LCD_8bits.c: 23:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7383  0A28  3007               	movlw	7
  7384  0A29  00F3               	movwf	??_LCD_Cmd+1
  7385  0A2A  307D               	movlw	125
  7386  0A2B  00F2               	movwf	??_LCD_Cmd
  7387  0A2C                     u2157:	
  7388  0A2C  0BF2               	decfsz	??_LCD_Cmd,f
  7389  0A2D  2A2C               	goto	u2157
  7390  0A2E  0BF3               	decfsz	??_LCD_Cmd+1,f
  7391  0A2F  2A2C               	goto	u2157
  7392                           
  7393                           ;LCD_8bits.c: 24:     PORTAbits.RA1 = 1;
  7394  0A30  1283               	bcf	3,5	;RP0=0, select bank0
  7395  0A31  1303               	bcf	3,6	;RP1=0, select bank0
  7396  0A32  1485               	bsf	5,1	;volatile
  7397                           
  7398                           ;LCD_8bits.c: 25:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7399  0A33  3007               	movlw	7
  7400  0A34  00F3               	movwf	??_LCD_Cmd+1
  7401  0A35  307D               	movlw	125
  7402  0A36  00F2               	movwf	??_LCD_Cmd
  7403  0A37                     u2167:	
  7404  0A37  0BF2               	decfsz	??_LCD_Cmd,f
  7405  0A38  2A37               	goto	u2167
  7406  0A39  0BF3               	decfsz	??_LCD_Cmd+1,f
  7407  0A3A  2A37               	goto	u2167
  7408                           
  7409                           ;LCD_8bits.c: 26:     PORTD = comando;
  7410  0A3B  0874               	movf	LCD_Cmd@comando,w
  7411  0A3C  1283               	bcf	3,5	;RP0=0, select bank0
  7412  0A3D  1303               	bcf	3,6	;RP1=0, select bank0
  7413  0A3E  0088               	movwf	8	;volatile
  7414                           
  7415                           ;LCD_8bits.c: 27:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7416  0A3F  3007               	movlw	7
  7417  0A40  00F3               	movwf	??_LCD_Cmd+1
  7418  0A41  307D               	movlw	125
  7419  0A42  00F2               	movwf	??_LCD_Cmd
  7420  0A43                     u2177:	
  7421  0A43  0BF2               	decfsz	??_LCD_Cmd,f
  7422  0A44  2A43               	goto	u2177
  7423  0A45  0BF3               	decfsz	??_LCD_Cmd+1,f
  7424  0A46  2A43               	goto	u2177
  7425                           
  7426                           ;LCD_8bits.c: 28:     PORTAbits.RA1 = 0;
  7427  0A47  1283               	bcf	3,5	;RP0=0, select bank0
  7428  0A48  1303               	bcf	3,6	;RP1=0, select bank0
  7429  0A49  1085               	bcf	5,1	;volatile
  7430                           
  7431                           ;LCD_8bits.c: 29:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7432  0A4A  3007               	movlw	7
  7433  0A4B  00F3               	movwf	??_LCD_Cmd+1
  7434  0A4C  307D               	movlw	125
  7435  0A4D  00F2               	movwf	??_LCD_Cmd
  7436  0A4E                     u2187:	
  7437  0A4E  0BF2               	decfsz	??_LCD_Cmd,f
  7438  0A4F  2A4E               	goto	u2187
  7439  0A50  0BF3               	decfsz	??_LCD_Cmd+1,f
  7440  0A51  2A4E               	goto	u2187
  7441  0A52  0008               	return
  7442  0A53                     __end_of_LCD_Cmd:	
  7443                           
  7444                           	psect	text35
  7445  0A53                     __ptext35:	
  7446 ;; *************** function _I2C_Master_Init *****************
  7447 ;; Defined at:
  7448 ;;		line 16 in file "I2C.c"
  7449 ;; Parameters:    Size  Location     Type
  7450 ;;  c               4    6[BANK0 ] const unsigned long 
  7451 ;; Auto vars:     Size  Location     Type
  7452 ;;		None
  7453 ;; Return value:  Size  Location     Type
  7454 ;;                  1    wreg      void 
  7455 ;; Registers used:
  7456 ;;		wreg, status,2, status,0, pclath, cstack
  7457 ;; Tracked objects:
  7458 ;;		On entry : 0/0
  7459 ;;		On exit  : 0/0
  7460 ;;		Unchanged: 0/0
  7461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7462 ;;      Params:         0       4       0       0       0
  7463 ;;      Locals:         0       0       0       0       0
  7464 ;;      Temps:          0       4       0       0       0
  7465 ;;      Totals:         0       8       0       0       0
  7466 ;;Total ram usage:        8 bytes
  7467 ;; Hardware stack levels used:    1
  7468 ;; Hardware stack levels required when called:    2
  7469 ;; This function calls:
  7470 ;;		___lldiv
  7471 ;; This function is called by:
  7472 ;;		_SetUp
  7473 ;; This function uses a non-reentrant model
  7474 ;;
  7475                           
  7476                           
  7477                           ;psect for function _I2C_Master_Init
  7478  0A53                     _I2C_Master_Init:	
  7479                           
  7480                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  7481                           
  7482                           ;incstack = 0
  7483                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  7484  0A53  3028               	movlw	40
  7485  0A54  1283               	bcf	3,5	;RP0=0, select bank0
  7486  0A55  1303               	bcf	3,6	;RP1=0, select bank0
  7487  0A56  0094               	movwf	20	;volatile
  7488                           
  7489                           ;I2C.c: 19:     SSPCON2 = 0;
  7490  0A57  1683               	bsf	3,5	;RP0=1, select bank1
  7491  0A58  1303               	bcf	3,6	;RP1=0, select bank1
  7492  0A59  0191               	clrf	17	;volatile
  7493                           
  7494                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  7495  0A5A  1283               	bcf	3,5	;RP0=0, select bank0
  7496  0A5B  1303               	bcf	3,6	;RP1=0, select bank0
  7497  0A5C  0826               	movf	I2C_Master_Init@c,w
  7498  0A5D  00AA               	movwf	??_I2C_Master_Init
  7499  0A5E  0827               	movf	I2C_Master_Init@c+1,w
  7500  0A5F  00AB               	movwf	??_I2C_Master_Init+1
  7501  0A60  0828               	movf	I2C_Master_Init@c+2,w
  7502  0A61  00AC               	movwf	??_I2C_Master_Init+2
  7503  0A62  0829               	movf	I2C_Master_Init@c+3,w
  7504  0A63  00AD               	movwf	??_I2C_Master_Init+3
  7505  0A64  3002               	movlw	2
  7506  0A65                     u1735:	
  7507  0A65  1003               	clrc
  7508  0A66  0DAA               	rlf	??_I2C_Master_Init,f
  7509  0A67  0DAB               	rlf	??_I2C_Master_Init+1,f
  7510  0A68  0DAC               	rlf	??_I2C_Master_Init+2,f
  7511  0A69  0DAD               	rlf	??_I2C_Master_Init+3,f
  7512  0A6A  3EFF               	addlw	-1
  7513  0A6B  1D03               	skipz
  7514  0A6C  2A65               	goto	u1735
  7515  0A6D  082D               	movf	??_I2C_Master_Init+3,w
  7516  0A6E  00F5               	movwf	___lldiv@divisor+3
  7517  0A6F  082C               	movf	??_I2C_Master_Init+2,w
  7518  0A70  00F4               	movwf	___lldiv@divisor+2
  7519  0A71  082B               	movf	??_I2C_Master_Init+1,w
  7520  0A72  00F3               	movwf	___lldiv@divisor+1
  7521  0A73  082A               	movf	??_I2C_Master_Init,w
  7522  0A74  00F2               	movwf	___lldiv@divisor
  7523  0A75  3000               	movlw	0
  7524  0A76  00F9               	movwf	___lldiv@dividend+3
  7525  0A77  303D               	movlw	61
  7526  0A78  00F8               	movwf	___lldiv@dividend+2
  7527  0A79  3009               	movlw	9
  7528  0A7A  00F7               	movwf	___lldiv@dividend+1
  7529  0A7B  3000               	movlw	0
  7530  0A7C  00F6               	movwf	___lldiv@dividend
  7531  0A7D  120A  158A  232F   	fcall	___lldiv
  7532  0A80  0872               	movf	?___lldiv,w
  7533  0A81  3EFF               	addlw	255
  7534  0A82  1683               	bsf	3,5	;RP0=1, select bank1
  7535  0A83  1303               	bcf	3,6	;RP1=0, select bank1
  7536  0A84  0093               	movwf	19	;volatile
  7537                           
  7538                           ;I2C.c: 21:     SSPSTAT = 0;
  7539  0A85  0194               	clrf	20	;volatile
  7540                           
  7541                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  7542  0A86  1587               	bsf	7,3	;volatile
  7543                           
  7544                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  7545  0A87  1607               	bsf	7,4	;volatile
  7546  0A88  0008               	return
  7547  0A89                     __end_of_I2C_Master_Init:	
  7548                           
  7549                           	psect	text36
  7550  0B2F                     __ptext36:	
  7551 ;; *************** function ___lldiv *****************
  7552 ;; Defined at:
  7553 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  7554 ;; Parameters:    Size  Location     Type
  7555 ;;  divisor         4    2[COMMON] unsigned long 
  7556 ;;  dividend        4    6[COMMON] unsigned long 
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;  quotient        4    1[BANK0 ] unsigned long 
  7559 ;;  counter         1    5[BANK0 ] unsigned char 
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  4    2[COMMON] unsigned long 
  7562 ;; Registers used:
  7563 ;;		wreg, status,2, status,0
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7569 ;;      Params:         8       0       0       0       0
  7570 ;;      Locals:         0       5       0       0       0
  7571 ;;      Temps:          0       1       0       0       0
  7572 ;;      Totals:         8       6       0       0       0
  7573 ;;Total ram usage:       14 bytes
  7574 ;; Hardware stack levels used:    1
  7575 ;; Hardware stack levels required when called:    1
  7576 ;; This function calls:
  7577 ;;		Nothing
  7578 ;; This function is called by:
  7579 ;;		_I2C_Master_Init
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           
  7584                           ;psect for function ___lldiv
  7585  0B2F                     ___lldiv:	
  7586                           
  7587                           ;incstack = 0
  7588                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7589  0B2F  3000               	movlw	0
  7590  0B30  1283               	bcf	3,5	;RP0=0, select bank0
  7591  0B31  1303               	bcf	3,6	;RP1=0, select bank0
  7592  0B32  00A4               	movwf	___lldiv@quotient+3
  7593  0B33  3000               	movlw	0
  7594  0B34  00A3               	movwf	___lldiv@quotient+2
  7595  0B35  3000               	movlw	0
  7596  0B36  00A2               	movwf	___lldiv@quotient+1
  7597  0B37  3000               	movlw	0
  7598  0B38  00A1               	movwf	___lldiv@quotient
  7599  0B39  0875               	movf	___lldiv@divisor+3,w
  7600  0B3A  0474               	iorwf	___lldiv@divisor+2,w
  7601  0B3B  0473               	iorwf	___lldiv@divisor+1,w
  7602  0B3C  0472               	iorwf	___lldiv@divisor,w
  7603  0B3D  1903               	skipnz
  7604  0B3E  2B86               	goto	l4200
  7605  0B3F  01A5               	clrf	___lldiv@counter
  7606  0B40  0AA5               	incf	___lldiv@counter,f
  7607  0B41                     l4186:	
  7608  0B41  1BF5               	btfsc	___lldiv@divisor+3,7
  7609  0B42  2B51               	goto	l4188
  7610  0B43  3001               	movlw	1
  7611  0B44  00A0               	movwf	??___lldiv
  7612  0B45                     u1675:	
  7613  0B45  1003               	clrc
  7614  0B46  0DF2               	rlf	___lldiv@divisor,f
  7615  0B47  0DF3               	rlf	___lldiv@divisor+1,f
  7616  0B48  0DF4               	rlf	___lldiv@divisor+2,f
  7617  0B49  0DF5               	rlf	___lldiv@divisor+3,f
  7618  0B4A  0BA0               	decfsz	??___lldiv,f
  7619  0B4B  2B45               	goto	u1675
  7620  0B4C  3001               	movlw	1
  7621  0B4D  00A0               	movwf	??___lldiv
  7622  0B4E  0820               	movf	??___lldiv,w
  7623  0B4F  07A5               	addwf	___lldiv@counter,f
  7624  0B50  2B41               	goto	l4186
  7625  0B51                     l4188:	
  7626  0B51  3001               	movlw	1
  7627  0B52  00A0               	movwf	??___lldiv
  7628  0B53                     u1695:	
  7629  0B53  1003               	clrc
  7630  0B54  0DA1               	rlf	___lldiv@quotient,f
  7631  0B55  0DA2               	rlf	___lldiv@quotient+1,f
  7632  0B56  0DA3               	rlf	___lldiv@quotient+2,f
  7633  0B57  0DA4               	rlf	___lldiv@quotient+3,f
  7634  0B58  0BA0               	decfsz	??___lldiv,f
  7635  0B59  2B53               	goto	u1695
  7636  0B5A  0875               	movf	___lldiv@divisor+3,w
  7637  0B5B  0279               	subwf	___lldiv@dividend+3,w
  7638  0B5C  1D03               	skipz
  7639  0B5D  2B68               	goto	u1705
  7640  0B5E  0874               	movf	___lldiv@divisor+2,w
  7641  0B5F  0278               	subwf	___lldiv@dividend+2,w
  7642  0B60  1D03               	skipz
  7643  0B61  2B68               	goto	u1705
  7644  0B62  0873               	movf	___lldiv@divisor+1,w
  7645  0B63  0277               	subwf	___lldiv@dividend+1,w
  7646  0B64  1D03               	skipz
  7647  0B65  2B68               	goto	u1705
  7648  0B66  0872               	movf	___lldiv@divisor,w
  7649  0B67  0276               	subwf	___lldiv@dividend,w
  7650  0B68                     u1705:	
  7651  0B68  1C03               	skipc
  7652  0B69  2B79               	goto	l4196
  7653  0B6A  0872               	movf	___lldiv@divisor,w
  7654  0B6B  02F6               	subwf	___lldiv@dividend,f
  7655  0B6C  0873               	movf	___lldiv@divisor+1,w
  7656  0B6D  1C03               	skipc
  7657  0B6E  0F73               	incfsz	___lldiv@divisor+1,w
  7658  0B6F  02F7               	subwf	___lldiv@dividend+1,f
  7659  0B70  0874               	movf	___lldiv@divisor+2,w
  7660  0B71  1C03               	skipc
  7661  0B72  0F74               	incfsz	___lldiv@divisor+2,w
  7662  0B73  02F8               	subwf	___lldiv@dividend+2,f
  7663  0B74  0875               	movf	___lldiv@divisor+3,w
  7664  0B75  1C03               	skipc
  7665  0B76  0F75               	incfsz	___lldiv@divisor+3,w
  7666  0B77  02F9               	subwf	___lldiv@dividend+3,f
  7667  0B78  1421               	bsf	___lldiv@quotient,0
  7668  0B79                     l4196:	
  7669  0B79  3001               	movlw	1
  7670  0B7A                     u1715:	
  7671  0B7A  1003               	clrc
  7672  0B7B  0CF5               	rrf	___lldiv@divisor+3,f
  7673  0B7C  0CF4               	rrf	___lldiv@divisor+2,f
  7674  0B7D  0CF3               	rrf	___lldiv@divisor+1,f
  7675  0B7E  0CF2               	rrf	___lldiv@divisor,f
  7676  0B7F  3EFF               	addlw	-1
  7677  0B80  1D03               	skipz
  7678  0B81  2B7A               	goto	u1715
  7679  0B82  3001               	movlw	1
  7680  0B83  02A5               	subwf	___lldiv@counter,f
  7681  0B84  1D03               	btfss	3,2
  7682  0B85  2B51               	goto	l4188
  7683  0B86                     l4200:	
  7684  0B86  0824               	movf	___lldiv@quotient+3,w
  7685  0B87  00F5               	movwf	?___lldiv+3
  7686  0B88  0823               	movf	___lldiv@quotient+2,w
  7687  0B89  00F4               	movwf	?___lldiv+2
  7688  0B8A  0822               	movf	___lldiv@quotient+1,w
  7689  0B8B  00F3               	movwf	?___lldiv+1
  7690  0B8C  0821               	movf	___lldiv@quotient,w
  7691  0B8D  00F2               	movwf	?___lldiv
  7692  0B8E  0008               	return
  7693  0B8F                     __end_of___lldiv:	
  7694                           
  7695                           	psect	text37
  7696  17DE                     __ptext37:	
  7697 ;; *************** function _ISR *****************
  7698 ;; Defined at:
  7699 ;;		line 134 in file "main_Master.c"
  7700 ;; Parameters:    Size  Location     Type
  7701 ;;		None
  7702 ;; Auto vars:     Size  Location     Type
  7703 ;;		None
  7704 ;; Return value:  Size  Location     Type
  7705 ;;                  1    wreg      void 
  7706 ;; Registers used:
  7707 ;;		wreg, status,2, status,0
  7708 ;; Tracked objects:
  7709 ;;		On entry : 0/0
  7710 ;;		On exit  : 0/0
  7711 ;;		Unchanged: 0/0
  7712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7713 ;;      Params:         0       0       0       0       0
  7714 ;;      Locals:         0       0       0       0       0
  7715 ;;      Temps:          2       0       0       0       0
  7716 ;;      Totals:         2       0       0       0       0
  7717 ;;Total ram usage:        2 bytes
  7718 ;; Hardware stack levels used:    1
  7719 ;; This function calls:
  7720 ;;		Nothing
  7721 ;; This function is called by:
  7722 ;;		Interrupt level 1
  7723 ;; This function uses a non-reentrant model
  7724 ;;
  7725                           
  7726                           
  7727                           ;psect for function _ISR
  7728  17DE                     _ISR:	
  7729                           
  7730                           ;main_Master.c: 135:     if (INTCONbits.RBIF == 1 && INTCONbits.RBIE == 1){
  7731  17DE  180B               	btfsc	11,0	;volatile
  7732  17DF  1D8B               	btfss	11,3	;volatile
  7733  17E0  2FE8               	goto	i1l147
  7734                           
  7735                           ;main_Master.c: 136:         INTCONbits.RBIF = 0;
  7736  17E1  100B               	bcf	11,0	;volatile
  7737                           
  7738                           ;main_Master.c: 137:         if (banderaBoton == 0){
  7739  17E2  087B               	movf	_banderaBoton,w
  7740  17E3  1D03               	btfss	3,2
  7741  17E4  2FE8               	goto	i1l147
  7742                           
  7743                           ;main_Master.c: 138:             banderaBoton = 1;
  7744  17E5  01FB               	clrf	_banderaBoton
  7745  17E6  0AFB               	incf	_banderaBoton,f
  7746                           
  7747                           ;main_Master.c: 139:             INTCONbits.RBIE = 0;
  7748  17E7  118B               	bcf	11,3	;volatile
  7749  17E8                     i1l147:	
  7750  17E8  0871               	movf	??_ISR+1,w
  7751  17E9  008A               	movwf	10
  7752  17EA  0E70               	swapf	??_ISR^(0+4294967168),w
  7753  17EB  0083               	movwf	3
  7754  17EC  0EFE               	swapf	126,f
  7755  17ED  0E7E               	swapf	126,w
  7756  17EE  0009               	retfie
  7757  17EF                     __end_of_ISR:	
  7758  007E                     btemp	set	126	;btemp
  7759  007E                     wtemp0	set	126
  7760                           
  7761                           	psect	intentry
  7762  0004                     __pintentry:	
  7763                           ;incstack = 0
  7764                           ; Regs used in _ISR: [wreg+status,2+status,0]
  7765                           
  7766  0004                     interrupt_function:	
  7767  007E                     saved_w	set	btemp
  7768  0004  00FE               	movwf	btemp
  7769  0005  0E03               	swapf	3,w
  7770  0006  00F0               	movwf	??_ISR
  7771  0007  080A               	movf	10,w
  7772  0008  00F1               	movwf	??_ISR+1
  7773  0009  160A  118A  2FDE   	ljmp	_ISR


Data Sizes:
    Strings     139
    Constant    40
    Data        10
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     35      63
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Create_Char@chardata	PTR const unsigned char  size(1) Largest target is 8
		 -> arrowr_vacio(CODE[8]), gota(CODE[8]), termometro(CODE[8]), arrowr(CODE[8]), 
		 -> atilde(CODE[8]), 

    LCD_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_17(CODE[6]), STR_16(CODE[13]), STR_15(CODE[3]), STR_14(CODE[13]), 
		 -> STR_13(CODE[5]), STR_12(CODE[3]), STR_11(CODE[5]), STR_10(CODE[3]), 
		 -> STR_9(CODE[13]), STR_8(CODE[4]), STR_7(CODE[9]), STR_6(CODE[14]), 
		 -> STR_5(CODE[12]), STR_4(CODE[11]), STR_3(CODE[13]), STR_2(CODE[17]), 
		 -> STR_1(CODE[3]), 

    sp__uint_to_array	PTR unsigned int  size(1) Largest target is 6
		 -> uint_to_array@resultado(BANK0[6]), 

    obj_array	PTR unsigned int  size(1) Largest target is 6
		 -> NULL(NULL[0]), uint_to_array@resultado(BANK0[6]), 


Critical Paths under _main in COMMON

    _pressBoton2->_LCD_Set_Cursor
    _pressBoton1->_LCD_clear
    _mostrarLCD->_LCD_Set_Cursor
    _uint_to_array->___awdiv
    _display_Uhrzeit->_LCD_Set_Cursor
    _display_Datum->_LCD_Set_Cursor
    _LCD_Write_String->_LCD_Write_Character
    _LCD_Set_Cursor->_LCD_Cmd
    _inclinacion_->_init_ADC
    _get_temperatura_obj->_init_ADC
    _get_temperatura->_init_ADC
    _get_Time->_BCD_a_DEC
    _BCD_a_DEC->___bmul
    _Zeit_Datum_Set->_DEC_a_BCD
    _I2C_Master_Write->_DEC_a_BCD
    _DEC_a_BCD->___awdiv
    _DEC_a_BCD->___awmod
    ___awdiv->___wmul
    _LCD_init->_LCD_Cmd
    _LCD_clear->_LCD_Cmd
    _LCD_Create_Char->_LCD_Cmd
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_mostrarLCD
    _mostrarLCD->_uint_to_array
    _uint_to_array->___awdiv
    _display_Uhrzeit->___awdiv
    _display_Datum->___awdiv
    _get_Time->_I2C_Master_Write
    _SetUp->_Zeit_Datum_Set
    _Zeit_Datum_Set->_I2C_Master_Write
    _I2C_Master_Write->_DEC_a_BCD
    _DEC_a_BCD->___awdiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   64833
                                             33 BANK0      2     2      0
                              _SetUp
                           _get_Time
                    _get_temperatura
                _get_temperatura_obj
                       _inclinacion_
                         _mostrarLCD
                        _pressBoton1
                        _pressBoton2
                       _uartTX_Write
 ---------------------------------------------------------------------------------
 (1) _uartTX_Write                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pressBoton2                                          2     2      0    2383
                                              0 BANK0      2     2      0
                     _LCD_Set_Cursor
                _LCD_Write_Character
                          _LCD_clear
 ---------------------------------------------------------------------------------
 (1) _pressBoton1                                          2     2      0      22
                                              7 COMMON     2     2      0
                          _LCD_clear
 ---------------------------------------------------------------------------------
 (1) _mostrarLCD                                          10    10      0   30224
                                             23 BANK0     10    10      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                          _LCD_clear
                      _display_Datum
                    _display_Uhrzeit
                      _uint_to_array
 ---------------------------------------------------------------------------------
 (2) _uint_to_array                                       15    15      0    3467
                                              8 BANK0     15    15      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _display_Uhrzeit                                     11    10      1    7387
                                              8 BANK0     11    10      1
                     _LCD_Set_Cursor
                _LCD_Write_Character
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _display_Datum                                       11    10      1    8060
                                              8 BANK0     11    10      1
                     _LCD_Set_Cursor
                _LCD_Write_Character
                   _LCD_Write_String
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     3     3      0     673
                                              4 COMMON     3     3      0
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       5     4      1    2339
                                              5 COMMON     5     4      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _inclinacion_                                         2     2      0      22
                                              5 COMMON     2     2      0
                           _init_ADC
 ---------------------------------------------------------------------------------
 (1) _get_temperatura_obj                                  2     2      0      22
                                              5 COMMON     2     2      0
                           _init_ADC
 ---------------------------------------------------------------------------------
 (1) _get_temperatura                                      2     2      0      22
                                              5 COMMON     2     2      0
                           _init_ADC
 ---------------------------------------------------------------------------------
 (2) _init_ADC                                             3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _get_Time                                             1     1      0   10311
                                             15 BANK0      1     1      0
                          _BCD_a_DEC
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2    2173
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _BCD_a_DEC                                            4     4      0     212
                                              6 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SetUp                                                3     3      0   21805
                                             17 BANK0      3     3      0
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _LCD_Create_Char
                          _LCD_clear
                           _LCD_init
                         _OSC_config
                     _Zeit_Datum_Set
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Zeit_Datum_Set                                       2     2      0   12658
                                             15 BANK0      2     2      0
                          _DEC_a_BCD
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    7926
                                             13 BANK0      2     0      2
                          _DEC_a_BCD (ARG)
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DEC_a_BCD                                            6     6      0    4732
                                              9 COMMON     1     1      0
                                              8 BANK0      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    2149
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    2521
                                              8 COMMON     1     1      0
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _OSC_config                                           4     0      4      98
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             2     2      0      22
                                              5 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            2     2      0      22
                                              5 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Create_Char                                      4     3      1     537
                                              5 COMMON     4     3      1
                            _LCD_Cmd
                _LCD_Write_Character
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Character                                  2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetUp
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _DEC_a_BCD (ARG)
         ___awdiv
           ___wmul (ARG)
         ___awmod
       _I2C_Master_Wait (ARG)
     _LCD_Create_Char
       _LCD_Cmd
       _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
     _LCD_init
       _LCD_Cmd
     _OSC_config
     _Zeit_Datum_Set
       _DEC_a_BCD
         ___awdiv
           ___wmul (ARG)
         ___awmod
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _DEC_a_BCD (ARG)
           ___awdiv
             ___wmul (ARG)
           ___awmod
         _I2C_Master_Wait (ARG)
     _uart_init
   _get_Time
     _BCD_a_DEC
       ___bmul
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _DEC_a_BCD (ARG)
         ___awdiv
           ___wmul (ARG)
         ___awmod
       _I2C_Master_Wait (ARG)
   _get_temperatura
     _init_ADC
   _get_temperatura_obj
     _init_ADC
   _inclinacion_
     _init_ADC
   _mostrarLCD
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _DEC_a_BCD (ARG)
         ___awdiv
           ___wmul (ARG)
         ___awmod
       _I2C_Master_Wait (ARG)
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     _LCD_Write_String
       _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
     _display_Datum
       _LCD_Set_Cursor
         _LCD_Cmd
       _LCD_Write_Character
       _LCD_Write_String
         _LCD_Write_Character
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _display_Uhrzeit
       _LCD_Set_Cursor
         _LCD_Cmd
       _LCD_Write_Character
       ___awdiv
         ___wmul (ARG)
       ___awmod
     _uint_to_array
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _pressBoton1
     _LCD_clear
       _LCD_Cmd
   _pressBoton2
     _LCD_Set_Cursor
       _LCD_Cmd
     _LCD_Write_Character
     _LCD_clear
       _LCD_Cmd
   _uartTX_Write

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     23      3F       5       78.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4B      12        0.0%
ABS                  0      0      4B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon May 04 01:28:18 2020

                           pc 0002                ___bmul@product 0074       __end_of_LCD_Create_Char 09CC  
                 __CFG_CP$OFF 0000                  ___awdiv@sign 0025            __size_of_BCD_a_DEC 0016  
                          fsr 0004           ___wmul@multiplicand 0074            mostrarLCD@pantalla 003A  
                         l171 0C6B                           l180 0C7A                           l172 0CD4  
                         l181 0C7C                           l173 0C6C                           l182 0C7F  
                         l174 0C6E                           l183 0C82                           l175 0C70  
                         l184 0C85                           l176 0C72                           l361 17C6  
                         l185 0C88                           l177 0C74                           l186 0C8C  
                         l178 0C76                           l187 0C90                           l179 0C78  
                         l380 09F2                           l188 0C95                           l189 0CDE  
                         l614 0967                           l379 09EF                           l488 17BB  
                         _GIE 005F                  __CFG_CPD$OFF 0000                           _ISR 17DE  
          __size_of_DEC_a_BCD 0030       __end_of_display_Uhrzeit 07CC                           _dia 005C  
                         _mes 005A                           _min 005E                           _seg 0053  
                         fsr0 0004                           indf 0000                  ___awmod@sign 0078  
              ?_display_Datum 0028  __size_of_LCD_Write_Character 000F               __end_of_LCD_Cmd 0A53  
                __CFG_LVP$OFF 0000                          ?_ISR 0070                _LCD_Set_Cursor 09F8  
                        l3004 0C9A                          l4102 0AE0                          l4200 0B86  
                        l4120 0B01                          l4130 0B22                          l5100 0F1B  
                        l4108 0AEB                          l5102 0F25                          l4134 0B2A  
                        l4126 0B17                          l4118 0AF3                          l4150 0A9A  
                        l5104 0F2F                          l4160 0AAE                          l4146 0A93  
                        l2802 17F1                          l4410 019B                          l3370 0C17  
                        l4172 0ACF                          l4164 0ABC                          l4500 0312  
                        l4340 0042                          l3364 0C0C                          l4158 0AA0  
                        l2806 17F7                          l5070 0CA2                          l4350 007C  
                        l4502 0321                          l3358 0C01                          l5062 0E77  
                        l5080 0F0C                          l5072 0EE4                          l2840 0EA4  
                        l4168 0AC7                          l5064 0C44                          l3376 0C22  
                        l4520 0E07                          l4186 0B41                          l5082 0F16  
                        l5074 0EEE                          l5090 0EE9                          l2850 0EC5  
                        l2842 0EA9                          l2762 0A04                          l5066 0329  
                        l4338 002D                          l3386 0C3C                          l3394 0C53  
                        l4196 0B79                          l4188 0B51                          l5084 0F20  
                        l5076 0EF8                          l5092 0EF3                          l2852 0ECC  
                        l2844 0EB0                          l5068 0A1B                          l2780 0981  
                        l4372 00FD                          l4364 00D8                          l3388 0C4F  
                        l5086 0F2A                          l5078 0F02                          l5094 0EFD  
                        l2854 0ED3                          l2846 0EB7                          l2766 0A0E  
                        l2758 09FA                          l4462 023F                          l4446 01E9  
                        l4390 015C                          l4518 0E05                          l4550 0E6F  
                        l5096 0F07                          l5088 0F34                          l2856 0ED8  
                        l2848 0EBE                          l2768 0A13                          l4480 02B1  
                        l4456 022A                          l4384 014F                          l4544 0E58  
                        l4536 0E3C                          l4528 0E20                          l4552 0E88  
                        l2962 09B6                          l5098 0F11                          l2858 0EDF  
                        l4474 0290                          l4394 0165                          l4378 011F  
                        l2788 095F                          l4468 0266                          l4548 0E64  
                        l4572 0D6B                          l4558 0E8E                          STR_1 08B3  
                        STR_2 082E                          STR_3 0867                          STR_4 088D  
                        STR_5 0881                          STR_6 083F                          STR_7 0898  
                        STR_8 08AC                          STR_9 085A                          u1015 0968  
                        u1025 096F                          u1135 09A8                          u2007 0940  
                        u2017 0929                          u2107 0BDA                          u2027 05DB  
                        _IOCB 0096                          u2117 0BE7                          u2037 061D  
                        u2127 0BF2                          u2047 0B93                          u2137 08FC  
                        u2057 0BA2                          u1185 090D                          u2147 17D8  
                        u2067 0BAE                          u1515 0B02                          u2157 0A2C  
                        u2077 0BB8                          u1525 0B0E                          u2167 0A37  
                        u2087 0BC2                          u1535 0B18                          u1615 0AB4  
                        u1705 0B68                          u2177 0A43                          u2097 0BCD  
                        u1625 0ABD                          u1715 0B7A                          u2187 0A4E  
                        u1740 0CE8                          u1735 0A65                          u1495 0AF6  
                        u1655 07E4                          u1675 0B45                          u1595 0AA3  
                        u1907 0DA1                          u1917 0E1A                          u1695 0B53  
                        u1927 0E36                          u1937 0E52                          u1947 0E6A  
                        _PEIE 005E                          u1957 0E9B                          u1967 0C2B  
                        u1887 0D77                          u1977 0C5E                          u1897 0D8E  
                        u1987 0305                          u1997 0957                          _WPUB 0095  
                __CFG_WRT$OFF 0000                          _accZ 0049             ?_LCD_Write_String 0070  
                        _jahr 0059                          _main 0D66                          _gota 0806  
                        _hora 005D                          btemp 007E                 _uint_to_array 0CE1  
                        start 000C            ??_LCD_Write_String 0074                 __CFG_IESO$OFF 0000  
          __size_of_LCD_clear 0016             ___bmul@multiplier 0075                         ??_ISR 0070  
            ?_I2C_Master_Init 0026              ?_I2C_Master_Read 0072              ?_I2C_Master_Wait 0070  
            ?_I2C_Master_Stop 0070              __end_of_LCD_init 0BF6                         ?_main 0070  
             __end_of___awdiv 0B2F               DEC_a_BCD@numDEC 0079                         STR_10 08B6  
                       STR_11 08A7                         STR_13 08A7                         STR_14 0874  
                       STR_15 08B0                         STR_16 084D                         STR_17 08A1  
               __CFG_WDTE$OFF 0000               __end_of___awmod 0AD4                         _ANSEL 0188  
             __end_of___lldiv 0B8F               ___awdiv@divisor 0020                         i1l147 17E8  
             ___awdiv@counter 0024                         _RCREG 001A                         _SPBRG 0099  
                       _PORTA 0005                         _PORTD 0008                         _TRISA 0085  
                       _TRISB 0086                         _TRISD 0088                         _SSPIE 0463  
                       _TRISE 0089                         _SSPIF 0063                         _TXREG 0019  
            ?_get_temperatura 0070                  _sprintbuffer 004B                __CFG_FCMEN$OFF 0000  
      __end_of_LCD_Set_Cursor 0A24                         _SetUp 0543                         _ancho 004C  
                       _datum 005B                         _largo 004D                __CFG_BOREN$OFF 0000  
                 ?_OSC_config 0072                         pclath 000A             __end_of_BCD_a_DEC 0918  
              ?_uint_to_array 0070                         status 0003                 ?_inclinacion_ 0070  
                       wtemp0 007E             __end_of_DEC_a_BCD 07FC                __CFG_MCLRE$OFF 0000  
             __initialization 000F                  __end_of_main 0DFA                  __end_of_gota 080E  
            ?_LCD_Create_Char 0075                        ??_main 0041                     ??_LCD_Cmd 0072  
             ??_display_Datum 0029              ?_display_Uhrzeit 0028             ?_I2C_Master_Start 0070  
           ?_I2C_Master_Write 002D             __end_of_LCD_clear 0902                        ?_SetUp 0070  
             ?_LCD_Set_Cursor 0075            ??_I2C_Master_Start 0072            ??_I2C_Master_Write 007A  
                      _ADRESH 001E                  _banderaPUSH1 007A                  _banderaPUSH2 004E  
            ___awdiv@dividend 0022                        _ANSELH 0189                  _banderaBoton 007B  
              ??_inclinacion_ 0075                        _SPBRGH 009A                        _SSPADD 0093  
                      _TRISC3 043B                        _TRISC4 043C            uint_to_array@F1343 0043  
                      _SSPCON 0014                        _SSPBUF 0013              ??_Zeit_Datum_Set 002F  
 LCD_Write_Character@caracter 0073                __CFG_PWRTE$OFF 0000              __end_of_get_Time 0543  
                      ___bmul 17EF                        ___wmul 095D                     ??___awdiv 0078  
                   ??___awmod 0076                     ??___lldiv 0020              __end_of_init_ADC 0CE1  
                      _atilde 0816                        _arrowr 0826                        _estado 0054  
            ___awdiv@quotient 0026               ___awmod@divisor 0072           __size_of_OSC_config 00AC  
             ___awmod@counter 0077                  ?_pressBoton1 0070                  ?_pressBoton2 0070  
                      saved_w 007E               ??_uint_to_array 0028       __end_of__initialization 0025  
                   ?_LCD_init 0070           ___bmul@multiplicand 0072               init_ADC@channel 0074  
              __pcstackCOMMON 0070                 __end_of_SetUp 0622           _LCD_Write_Character 17CF  
                __pidataBANK0 08BC  __size_of_get_temperatura_obj 0017          display_Datum@columna 0028  
              _OPTION_REGbits 0081               _temperatura_obj 0050                       ??_SetUp 0031  
        ?_LCD_Write_Character 0070                LCD_Cmd@comando 0074                    __pbssBANK0 0043  
   LCD_Set_Cursor@corrimiento 0079                    ??_LCD_init 0075          __end_of_arrowr_vacio 0826  
                  __pmaintext 0D66                       ?___bmul 0072                       ?___wmul 0072  
                  __pintentry 0004     __size_of_LCD_Write_String 0022          __end_of_inclinacion_ 095D  
        OSC_config@frecuencia 0072           display_Uhrzeit@fila 002C            __size_of_uart_init 0015  
                     _LCD_Cmd 0A24         ??_LCD_Write_Character 0072                     ?_get_Time 0070  
                     _SSPCON2 0091                       _SSPSTAT 0094                    __stringtab 0800  
                ??_OSC_config 0076                     ?_init_ADC 0070                     _BCD_a_DEC 0902  
               ?_uartTX_Write 0070        uint_to_array@resultado 0030               __size_of___bmul 0011  
                   _DEC_a_BCD 07CC                       ___awdiv 0AD4                       ___awmod 0A89  
                     ___lldiv 0B2F               __size_of___wmul 0021             display_Datum@fila 002C  
                     _d_atras 0055              ??_LCD_Set_Cursor 0076                       __ptext1 17B6  
                     __ptext2 0DFA                       __ptext3 0BF6                       __ptext4 0029  
                     __ptext5 0CE1                       __ptext6 095D                       __ptext7 06FA  
                     __ptext8 0622                       __ptext9 097E            __end_of_OSC_config 0F4F  
                __size_of_ISR 0011           uint_to_array@numero 0036                       _humedad 0058  
            ___awmod@dividend 0074      __size_of_I2C_Master_Init 0036      __size_of_I2C_Master_Read 002C  
    __size_of_I2C_Master_Wait 0009      __size_of_I2C_Master_Stop 0007          __size_of_pressBoton1 006F  
        __size_of_pressBoton2 00A9                    ??_get_Time 002F                       clrloop0 17BF  
                   _LCD_clear 08EC          end_of_initialization 0025                    ??_init_ADC 0072  
    __size_of_get_temperatura 0017                ??_uartTX_Write 0072     __size_of_I2C_Master_Start 0007  
           __end_of_uart_init 08EC     __size_of_I2C_Master_Write 0008               ___lldiv@divisor 0072  
                  ?_BCD_a_DEC 0070               ___lldiv@counter 0025                     _RCSTAbits 0018  
            I2C_Master_Init@c 0026              I2C_Master_Read@a 0072                    ?_DEC_a_BCD 0070  
                  _mostrarLCD 0029                     _PORTAbits 0005                     _PORTBbits 0006  
                  _termometro 080E      __size_of_LCD_Create_Char 002C                     _TRISCbits 0087  
       __end_of_display_Datum 06FA           _get_temperatura_obj 092F                    ?_LCD_clear 0070  
           LCD_Write_String@a 0076             LCD_Write_String@n 0074      __size_of_display_Uhrzeit 00D2  
                   _TXSTAbits 0098             __size_of_LCD_init 0067         __size_of_inclinacion_ 0017  
        ?_get_temperatura_obj 0070                __end_of___bmul 1800         LCD_Set_Cursor@columna 0075  
              __end_of___wmul 097E              _LCD_Write_String 097E                   _BAUDCTLbits 0187  
              __end_of_atilde 081E                __end_of_arrowr 082E                  _arrowr_vacio 081E  
         start_initialization 000F                   __end_of_ISR 17EF             ??_I2C_Master_Init 002A  
           ??_I2C_Master_Read 0074             ??_I2C_Master_Wait 0072         __end_of_uint_to_array 0D66  
           ??_I2C_Master_Stop 0072                  _inclinacion_ 0946      __CFG_FOSC$INTRC_NOCLKOUT 0000  
                 ??_BCD_a_DEC 0076             ??_get_temperatura 0075                      ??___bmul 0073  
     LCD_Create_Char@chardata 0075         ??_get_temperatura_obj 0075                   ??_DEC_a_BCD 0028  
                    ??___wmul 0076                    init_fetch0 08C6                   ?_mostrarLCD 0070  
                 __pdataBANK0 0055       __size_of_Zeit_Datum_Set 00B1               BCD_a_DEC@numBCD 0079  
                    ?_LCD_Cmd 0070          __end_of_uartTX_Write 17BE                   __pbssCOMMON 007A  
                   ___latbits 0002                 __pcstackBANK0 0020           display_Datum@jahr_d 0032  
         display_Datum@jahr_u 0031                   ??_LCD_clear 0075             __size_of_get_Time 01F6  
           ??_LCD_Create_Char 0076             __size_of_init_ADC 007C              _I2C_Master_Start 17A0  
            _I2C_Master_Write 17AE         uint_to_array@centenas 002F             ??_display_Uhrzeit 0029  
                    ?___awdiv 0020                      ?___awmod 0072                      ?___lldiv 0072  
                   __pstrings 0800   __end_of_LCD_Write_Character 17DE                     _obj_array 004F  
              __size_of_SetUp 00DF          display_Uhrzeit@Uhr_d 0032          display_Uhrzeit@Uhr_u 0031  
         __size_of_mostrarLCD 0324          display_Uhrzeit@min_d 0030          display_Uhrzeit@min_u 002F  
        display_Uhrzeit@seg_d 002E          display_Uhrzeit@seg_u 002D             interrupt_function 0004  
              ___wmul@product 0076                      _LCD_init 0B8F                     clear_ram0 17BE  
            LCD_Create_Char@n 0078                      _PIR1bits 000C                     _uart_init 08D7  
                   _velocidad 0052                    _ADCON0bits 001F                   __stringbase 0805  
                  _ADCON1bits 009F             ___wmul@multiplier 0072                 ??_pressBoton1 0077  
               ??_pressBoton2 0020              __size_of_LCD_Cmd 002F           I2C_Master_Read@temp 0076  
    __end_of_LCD_Write_String 09A0                   _inclinacion 0057        LCD_Create_Char@charnum 0077  
                  ?_uart_init 0072                _Zeit_Datum_Set 0F4F              __size_of___awdiv 005B  
            __size_of___awmod 004B              __size_of___lldiv 0060         __size_of_uartTX_Write 0008  
          display_Datum@dia_d 002E            display_Datum@dia_u 002D              uartTX_Write@dato 0072  
          __end_of__stringtab 0806            display_Datum@mes_d 0030            display_Datum@mes_u 002F  
                    _d_frente 0056               _I2C_Master_Init 0A53               _I2C_Master_Read 09CC  
        uint_to_array@decenas 002E               _I2C_Master_Wait 17C6               _I2C_Master_Stop 17A7  
                    __ptext10 09F8                      __ptext11 0946                      __ptext20 08D7  
                    __ptext12 092F                      __ptext21 0F4F                      __ptext13 0918  
                    __ptext30 0B8F                      __ptext22 17AE                      __ptext14 0C65  
                    __ptext31 08EC                      __ptext23 17A7                      __ptext15 034D  
                    __ptext32 09A0                      __ptext24 17A0                      __ptext16 09CC  
                    __ptext33 17CF                      __ptext25 17C6                      __ptext17 0902  
                    __ptext34 0A24                      __ptext26 07CC                      __ptext18 17EF  
                    __ptext35 0A53                      __ptext27 0A89                      __ptext19 0543  
                    __ptext36 0B2F                      __ptext28 0AD4                      __ptext37 17DE  
                    __ptext29 0EA3                      _get_Time 034D             __CFG_BOR4V$BOR40V 0000  
     __size_of_LCD_Set_Cursor 002C               _get_temperatura 0918           __end_of_pressBoton1 0C65  
         __end_of_pressBoton2 0EA3                      _init_ADC 0C65                 __size_of_main 0094  
      display_Uhrzeit@columna 0028                  _uartTX_Write 17B6        __end_of_Zeit_Datum_Set 1000  
      __size_of_display_Datum 00D8                  ??_mostrarLCD 0037           LCD_Set_Cursor@linea 0078  
             _LCD_Create_Char 09A0      __end_of_I2C_Master_Start 17A7      __end_of_I2C_Master_Write 17B6  
                  _INTCONbits 000B                      init_ram0 08CA               _display_Uhrzeit 06FA  
                    intlevel1 0000            __end_of_mostrarLCD 034D              ___lldiv@dividend 0076  
 __end_of_get_temperatura_obj 0946                     stringcode 0800                    _OSCCONbits 008F  
          __end_of_termometro 0816               ?_Zeit_Datum_Set 0070                   ??_uart_init 0074  
     __end_of_I2C_Master_Init 0A89       __end_of_I2C_Master_Read 09F8       __end_of_I2C_Master_Wait 17CF  
     __end_of_I2C_Master_Stop 17AE                   _temperatura 0051        __size_of_uint_to_array 0085  
            ___lldiv@quotient 0021             I2C_Master_Write@d 002D       __end_of_get_temperatura 092F  
                 _pressBoton1 0BF6                   _pressBoton2 0DFA                      stringdir 0800  
                    stringtab 0800                   _SSPCON2bits 0091                 _display_Datum 0622  
                  _OSC_config 0EA3  
